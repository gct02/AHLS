// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module local_sin_float64_mul (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a,
        b,
        float_exception_flags_i,
        float_exception_flags_o,
        float_exception_flags_o_ap_vld,
        ap_return
);

parameter    ap_ST_fsm_state1 = 47'd1;
parameter    ap_ST_fsm_state2 = 47'd2;
parameter    ap_ST_fsm_state3 = 47'd4;
parameter    ap_ST_fsm_state4 = 47'd8;
parameter    ap_ST_fsm_state5 = 47'd16;
parameter    ap_ST_fsm_state6 = 47'd32;
parameter    ap_ST_fsm_state7 = 47'd64;
parameter    ap_ST_fsm_state8 = 47'd128;
parameter    ap_ST_fsm_state9 = 47'd256;
parameter    ap_ST_fsm_state10 = 47'd512;
parameter    ap_ST_fsm_state11 = 47'd1024;
parameter    ap_ST_fsm_state12 = 47'd2048;
parameter    ap_ST_fsm_state13 = 47'd4096;
parameter    ap_ST_fsm_state14 = 47'd8192;
parameter    ap_ST_fsm_state15 = 47'd16384;
parameter    ap_ST_fsm_state16 = 47'd32768;
parameter    ap_ST_fsm_state17 = 47'd65536;
parameter    ap_ST_fsm_state18 = 47'd131072;
parameter    ap_ST_fsm_state19 = 47'd262144;
parameter    ap_ST_fsm_state20 = 47'd524288;
parameter    ap_ST_fsm_state21 = 47'd1048576;
parameter    ap_ST_fsm_state22 = 47'd2097152;
parameter    ap_ST_fsm_state23 = 47'd4194304;
parameter    ap_ST_fsm_state24 = 47'd8388608;
parameter    ap_ST_fsm_state25 = 47'd16777216;
parameter    ap_ST_fsm_state26 = 47'd33554432;
parameter    ap_ST_fsm_state27 = 47'd67108864;
parameter    ap_ST_fsm_state28 = 47'd134217728;
parameter    ap_ST_fsm_state29 = 47'd268435456;
parameter    ap_ST_fsm_state30 = 47'd536870912;
parameter    ap_ST_fsm_state31 = 47'd1073741824;
parameter    ap_ST_fsm_state32 = 47'd2147483648;
parameter    ap_ST_fsm_state33 = 47'd4294967296;
parameter    ap_ST_fsm_state34 = 47'd8589934592;
parameter    ap_ST_fsm_state35 = 47'd17179869184;
parameter    ap_ST_fsm_state36 = 47'd34359738368;
parameter    ap_ST_fsm_state37 = 47'd68719476736;
parameter    ap_ST_fsm_state38 = 47'd137438953472;
parameter    ap_ST_fsm_state39 = 47'd274877906944;
parameter    ap_ST_fsm_state40 = 47'd549755813888;
parameter    ap_ST_fsm_state41 = 47'd1099511627776;
parameter    ap_ST_fsm_state42 = 47'd2199023255552;
parameter    ap_ST_fsm_state43 = 47'd4398046511104;
parameter    ap_ST_fsm_state44 = 47'd8796093022208;
parameter    ap_ST_fsm_state45 = 47'd17592186044416;
parameter    ap_ST_fsm_state46 = 47'd35184372088832;
parameter    ap_ST_fsm_state47 = 47'd70368744177664;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] a;
input  [63:0] b;
input  [31:0] float_exception_flags_i;
output  [31:0] float_exception_flags_o;
output   float_exception_flags_o_ap_vld;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] float_exception_flags_o;
reg float_exception_flags_o_ap_vld;
reg[63:0] ap_return;

(* fsm_encoding = "none" *) reg   [46:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] countLeadingZerosHigh_address0;
reg    countLeadingZerosHigh_ce0;
wire   [3:0] countLeadingZerosHigh_q0;
reg   [3:0] reg_499;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state6;
wire   [31:0] trunc_ln468_fu_503_p1;
reg   [31:0] trunc_ln468_reg_1796;
wire   [51:0] bSig_6_fu_521_p1;
reg   [51:0] bSig_6_reg_1801;
wire   [63:0] zext_ln472_fu_531_p1;
reg   [63:0] zext_ln472_reg_1806;
wire   [53:0] zext_ln472_1_fu_535_p1;
wire   [11:0] zext_ln471_fu_549_p1;
wire   [63:0] zext_ln472_2_fu_561_p1;
reg   [63:0] zext_ln472_2_reg_1821;
wire   [52:0] zext_ln472_3_fu_565_p1;
reg   [52:0] zext_ln472_3_reg_1826;
wire   [10:0] bExp_fu_569_p4;
reg   [10:0] bExp_reg_1831;
wire   [11:0] zext_ln471_1_fu_580_p1;
reg   [11:0] zext_ln471_1_reg_1836;
wire   [0:0] zSign_fu_592_p2;
reg   [0:0] zSign_reg_1841;
wire   [0:0] icmp_ln481_fu_598_p2;
reg   [0:0] icmp_ln481_reg_1851;
reg   [31:0] float_exception_flags_load_reg_1855;
wire   [31:0] or_ln69_fu_608_p2;
reg   [31:0] or_ln69_reg_1860;
wire   [0:0] grp_fu_446_p2;
reg   [0:0] icmp_ln492_reg_1870;
wire   [0:0] icmp_ln503_fu_614_p2;
reg   [0:0] icmp_ln503_reg_1874;
wire   [0:0] icmp_ln505_fu_451_p2;
reg   [0:0] icmp_ln505_reg_1878;
wire   [0:0] icmp_ln291_fu_630_p2;
reg   [0:0] icmp_ln291_reg_1882;
wire   [0:0] icmp_ln265_fu_658_p2;
reg   [0:0] icmp_ln265_reg_1887;
reg   [7:0] tmp_28_reg_1893;
reg   [7:0] tmp_19_reg_1899;
wire   [0:0] grp_fu_461_p2;
reg   [0:0] icmp_ln100_16_reg_1907;
wire   [0:0] grp_fu_466_p2;
reg   [0:0] icmp_ln100_18_reg_1912;
reg   [0:0] icmp_ln100_12_reg_1929;
reg   [0:0] icmp_ln100_14_reg_1934;
wire   [0:0] icmp_ln270_fu_784_p2;
reg   [0:0] icmp_ln270_reg_1939;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln509_fu_877_p2;
reg   [0:0] icmp_ln509_reg_1949;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln511_fu_882_p2;
reg   [0:0] icmp_ln511_reg_1953;
wire   [0:0] icmp_ln291_1_fu_896_p2;
reg   [0:0] icmp_ln291_1_reg_1957;
wire   [0:0] icmp_ln265_1_fu_923_p2;
reg   [0:0] icmp_ln265_1_reg_1962;
reg   [7:0] tmp_31_reg_1968;
reg   [7:0] tmp_20_reg_1974;
wire   [0:0] icmp_ln270_1_fu_963_p2;
reg   [0:0] icmp_ln270_1_reg_1979;
wire    ap_CS_fsm_state5;
wire   [52:0] trunc_ln472_1_fu_1040_p1;
wire    ap_CS_fsm_state7;
wire  signed [11:0] sext_ln471_1_fu_1050_p1;
wire   [63:0] zext_ln188_fu_1110_p1;
wire    ap_CS_fsm_state8;
wire   [63:0] zext_ln188_1_fu_1116_p1;
wire   [63:0] zext_ln189_fu_1122_p1;
wire   [63:0] zext_ln190_fu_1128_p1;
wire   [63:0] grp_fu_430_p2;
reg   [63:0] z1_reg_2023;
wire    ap_CS_fsm_state9;
wire   [63:0] grp_fu_434_p2;
reg   [63:0] zMiddleA_reg_2028;
wire   [63:0] grp_fu_438_p2;
reg   [63:0] zMiddleB_reg_2033;
wire   [63:0] grp_fu_442_p2;
reg   [63:0] z0_reg_2039;
wire   [0:0] icmp_ln193_fu_1138_p2;
reg   [0:0] icmp_ln193_reg_2044;
wire    ap_CS_fsm_state10;
reg   [31:0] tmp_21_reg_2049;
wire   [63:0] zMiddleA_2_fu_1153_p2;
reg   [63:0] zMiddleA_2_reg_2054;
wire   [63:0] z1_2_fu_1159_p2;
reg   [63:0] z1_2_reg_2059;
wire   [63:0] select_ln520_fu_1254_p3;
reg   [63:0] select_ln520_reg_2065;
wire    ap_CS_fsm_state11;
wire  signed [11:0] add_ln520_fu_1270_p2;
reg  signed [11:0] add_ln520_reg_2075;
wire   [9:0] roundBits_fu_1276_p1;
reg   [9:0] roundBits_reg_2081;
wire   [11:0] add_ln520_1_fu_1287_p2;
wire    ap_CS_fsm_state12;
wire   [5:0] trunc_ln471_fu_1298_p1;
reg   [5:0] trunc_ln471_reg_2093;
wire   [0:0] icmp_ln204_fu_1302_p2;
reg   [0:0] icmp_ln204_reg_2098;
wire   [0:0] icmp_ln206_fu_1308_p2;
reg   [0:0] icmp_ln206_reg_2102;
wire   [0:0] and_ln207_fu_1333_p2;
reg   [0:0] and_ln207_reg_2106;
wire   [0:0] tmp_34_fu_1339_p3;
reg   [0:0] tmp_34_reg_2110;
wire   [12:0] sub_ln217_fu_1347_p2;
reg   [12:0] sub_ln217_reg_2114;
wire   [63:0] zext_ln77_fu_1374_p1;
wire    ap_CS_fsm_state13;
wire   [63:0] z_fu_1420_p3;
wire    ap_CS_fsm_state14;
wire   [0:0] xor_ln220_fu_1444_p2;
wire    ap_CS_fsm_state15;
wire   [31:0] select_ln220_fu_1450_p3;
wire   [0:0] icmp_ln224_fu_1457_p2;
reg   [0:0] icmp_ln224_reg_2142;
wire   [53:0] and_ln227_fu_1499_p2;
reg   [53:0] and_ln227_reg_2148;
wire   [31:0] or_ln69_3_fu_1581_p2;
wire    ap_CS_fsm_state17;
wire   [63:0] or_ln146_3_fu_1593_p2;
wire   [63:0] shl_ln146_5_fu_1599_p3;
wire    ap_CS_fsm_state18;
wire   [63:0] shl_ln146_4_fu_1606_p3;
wire    ap_CS_fsm_state19;
wire   [63:0] grp_fu_494_p2;
wire    ap_CS_fsm_state32;
wire   [0:0] or_ln121_3_fu_1662_p2;
wire   [63:0] select_ln123_8_fu_1676_p3;
wire   [63:0] or_ln146_2_fu_1691_p2;
wire    ap_CS_fsm_state33;
wire   [63:0] or_ln146_fu_1704_p2;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state47;
wire   [0:0] or_ln121_fu_1759_p2;
wire   [63:0] select_ln123_6_fu_1773_p3;
wire   [53:0] trunc_ln472_fu_861_p1;
reg   [53:0] aSig_5_reg_217;
wire  signed [11:0] sext_ln471_fu_872_p1;
reg   [11:0] aExp_5_reg_227;
reg   [52:0] bSig_5_reg_237;
reg  signed [11:0] bExp_5_reg_246;
reg   [63:0] z_12_reg_256;
reg   [63:0] ap_phi_mux_empty_phi_fu_268_p6;
reg   [63:0] empty_reg_265;
wire   [9:0] roundBits_3_fu_1428_p1;
reg   [9:0] ap_phi_mux_roundBits_4_phi_fu_280_p6;
reg   [9:0] roundBits_4_reg_277;
reg   [0:0] float_exception_flags_flag_3_reg_288;
reg   [31:0] float_exception_flags_loc_1_reg_302;
reg   [11:0] zExp_assign_4_reg_313;
reg   [0:0] ap_phi_mux_float_exception_flags_flag_5_phi_fu_331_p24;
reg   [0:0] float_exception_flags_flag_5_reg_326;
wire   [0:0] and_ln100_10_fu_1754_p2;
wire   [0:0] and_ln100_12_fu_1657_p2;
wire   [0:0] or_ln224_fu_1505_p2;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln483_fu_456_p2;
wire   [0:0] and_ln483_fu_744_p2;
wire   [0:0] icmp_ln485_fu_778_p2;
wire   [0:0] icmp_ln494_fu_698_p2;
wire   [0:0] icmp_ln496_fu_732_p2;
reg   [31:0] ap_phi_mux_float_exception_flags_new_5_phi_fu_368_p24;
reg   [31:0] float_exception_flags_new_5_reg_364;
wire   [31:0] or_ln224_2_fu_1530_p3;
reg   [63:0] ap_phi_mux_retval_0_phi_fu_402_p24;
reg   [63:0] retval_0_reg_398;
wire   [63:0] add_ln146_fu_1568_p2;
wire   [63:0] zext_ln275_fu_795_p1;
wire   [63:0] zext_ln275_1_fu_974_p1;
wire   [31:0] grp_fu_430_p0;
wire   [31:0] grp_fu_430_p1;
wire   [31:0] grp_fu_434_p0;
wire   [31:0] grp_fu_434_p1;
wire   [31:0] grp_fu_438_p0;
wire   [31:0] grp_fu_438_p1;
wire   [31:0] grp_fu_442_p0;
wire   [31:0] grp_fu_442_p1;
wire   [51:0] aSig_6_fu_525_p1;
wire   [50:0] trunc_ln468_3_fu_516_p1;
wire   [50:0] trunc_ln468_2_fu_511_p1;
wire   [10:0] aExp_fu_539_p4;
wire   [0:0] tmp_25_fu_584_p3;
wire   [0:0] tmp_23_fu_553_p3;
wire   [19:0] tmp_26_fu_620_p4;
wire   [31:0] trunc_ln468_1_fu_507_p1;
wire   [31:0] zext_ln286_fu_636_p1;
wire   [31:0] select_ln291_fu_640_p3;
wire   [15:0] tmp_27_fu_648_p4;
wire   [31:0] shl_ln268_fu_664_p2;
wire   [31:0] select_ln265_3_fu_670_p3;
wire   [10:0] trunc_ln496_fu_704_p1;
wire   [40:0] tmp_4_fu_714_p4;
wire   [10:0] or_ln496_fu_708_p2;
wire   [51:0] tmp_5_fu_724_p3;
wire   [0:0] icmp_ln483_2_fu_738_p2;
wire   [10:0] trunc_ln485_fu_750_p1;
wire   [40:0] tmp_fu_760_p4;
wire   [10:0] or_ln485_fu_754_p2;
wire   [51:0] tmp_3_fu_770_p3;
wire   [7:0] select_ln270_fu_789_p3;
wire   [4:0] shiftCount_8_fu_807_p3;
wire   [4:0] shiftCount_fu_800_p3;
wire   [4:0] shiftCount_9_fu_814_p3;
wire   [5:0] shiftCount_18_fu_825_p3;
wire   [6:0] zext_ln262_fu_821_p1;
wire   [6:0] zext_ln299_fu_832_p1;
wire   [6:0] shiftCount_11_fu_836_p2;
wire   [6:0] shiftCount_12_fu_842_p2;
wire  signed [31:0] sext_ln126_fu_848_p1;
wire   [63:0] zext_ln126_fu_852_p1;
wire   [63:0] aSig_fu_856_p2;
wire   [6:0] aExp_4_fu_866_p2;
wire   [19:0] tmp_29_fu_887_p4;
wire   [31:0] zext_ln286_1_fu_902_p1;
wire   [31:0] select_ln291_1_fu_906_p3;
wire   [15:0] tmp_30_fu_913_p4;
wire   [31:0] shl_ln268_1_fu_929_p2;
wire   [31:0] select_ln265_4_fu_935_p3;
wire   [7:0] select_ln270_2_fu_968_p3;
wire   [4:0] shiftCount_14_fu_986_p3;
wire   [4:0] shiftCount_13_fu_979_p3;
wire   [4:0] shiftCount_15_fu_993_p3;
wire   [5:0] shiftCount_1_fu_1004_p3;
wire   [6:0] zext_ln262_1_fu_1000_p1;
wire   [6:0] zext_ln299_1_fu_1011_p1;
wire   [6:0] shiftCount_16_fu_1015_p2;
wire   [6:0] shiftCount_17_fu_1021_p2;
wire  signed [31:0] sext_ln126_1_fu_1027_p1;
wire   [63:0] zext_ln126_1_fu_1031_p1;
wire   [63:0] bSig_fu_1035_p2;
wire   [6:0] bExp_4_fu_1044_p2;
wire   [21:0] trunc_ln184_fu_1054_p1;
wire   [31:0] trunc_ln_fu_1066_p4;
wire   [20:0] trunc_ln186_fu_1082_p1;
wire   [31:0] trunc_ln1_fu_1094_p4;
wire   [31:0] aLow_fu_1058_p3;
wire   [31:0] bLow_fu_1086_p3;
wire   [31:0] bHigh_fu_1104_p2;
wire   [31:0] aHigh_fu_1076_p2;
wire   [63:0] zMiddleA_1_fu_1134_p2;
wire   [32:0] or_ln_fu_1164_p3;
wire   [0:0] icmp_ln196_fu_1174_p2;
wire   [63:0] zext_ln196_fu_1178_p1;
wire   [63:0] add_ln196_fu_1182_p2;
wire   [63:0] zext_ln194_fu_1170_p1;
wire   [63:0] z0_2_fu_1187_p2;
wire   [0:0] trunc_ln519_fu_1198_p1;
wire   [0:0] icmp_ln519_fu_1193_p2;
wire   [62:0] tmp_6_fu_1208_p4;
wire   [0:0] or_ln519_fu_1202_p2;
wire   [61:0] tmp_22_fu_1226_p4;
wire   [0:0] tmp_32_fu_1246_p3;
wire   [63:0] zSig0_1_fu_1218_p3;
wire   [63:0] shl_ln7_fu_1236_p4;
wire   [11:0] select_ln520_1_fu_1262_p3;
wire  signed [12:0] sext_ln520_fu_1284_p1;
wire  signed [12:0] sext_ln471_2_fu_1280_p1;
wire   [12:0] zExp_fu_1292_p2;
wire   [63:0] add_ln207_fu_1320_p2;
wire   [0:0] icmp_ln207_fu_1314_p2;
wire   [0:0] tmp_33_fu_1325_p3;
wire   [5:0] tmp_35_fu_1353_p4;
wire   [0:0] z_11_fu_1369_p2;
wire   [63:0] zext_ln73_fu_1378_p1;
wire   [63:0] zext_ln73_6_fu_1386_p1;
wire   [63:0] shl_ln73_fu_1389_p2;
wire   [63:0] lshr_ln73_fu_1381_p2;
wire   [0:0] trunc_ln73_fu_1400_p1;
wire   [0:0] icmp_ln73_fu_1394_p2;
wire   [62:0] tmp_7_fu_1410_p4;
wire   [0:0] or_ln73_fu_1404_p2;
wire   [0:0] icmp_ln220_fu_1433_p2;
wire   [31:0] or_ln69_4_fu_1439_p2;
wire   [63:0] add_ln226_fu_1463_p2;
wire   [0:0] icmp_ln227_fu_1479_p2;
wire   [1:0] zext_ln227_fu_1485_p1;
wire   [1:0] xor_ln227_fu_1489_p2;
wire   [53:0] trunc_ln2_fu_1469_p4;
wire  signed [53:0] sext_ln227_fu_1495_p1;
wire   [0:0] trunc_ln224_fu_1511_p1;
wire   [30:0] tmp_8_fu_1520_p4;
wire   [0:0] or_ln224_3_fu_1515_p2;
wire   [0:0] icmp_ln228_fu_1539_p2;
wire   [11:0] select_ln228_fu_1544_p3;
wire   [63:0] shl_ln146_7_fu_1552_p3;
wire   [63:0] or_ln146_5_fu_1560_p4;
wire   [63:0] shl_ln146_6_fu_1586_p3;
wire   [11:0] grp_fu_471_p4;
wire   [62:0] and_ln100_1_fu_1613_p3;
wire   [0:0] icmp_ln100_15_fu_1621_p2;
wire   [63:0] shl_ln87_3_fu_1632_p2;
wire   [11:0] grp_fu_480_p4;
wire   [62:0] and_ln100_2_fu_1643_p3;
wire   [0:0] icmp_ln100_17_fu_1651_p2;
wire   [0:0] and_ln100_11_fu_1627_p2;
wire   [0:0] icmp_ln87_3_fu_1637_p2;
wire   [63:0] grp_fu_489_p2;
wire   [63:0] select_ln123_7_fu_1668_p3;
wire   [63:0] shl_ln146_3_fu_1684_p3;
wire   [63:0] shl_ln5_fu_1697_p3;
wire   [62:0] and_ln_fu_1710_p3;
wire   [0:0] icmp_ln100_fu_1718_p2;
wire   [63:0] shl_ln87_fu_1729_p2;
wire   [62:0] and_ln100_s_fu_1740_p3;
wire   [0:0] icmp_ln100_13_fu_1748_p2;
wire   [0:0] and_ln100_fu_1724_p2;
wire   [0:0] icmp_ln87_fu_1734_p2;
wire   [63:0] select_ln123_fu_1765_p3;
wire   [0:0] icmp_ln71_fu_1363_p2;
reg   [63:0] ap_return_preg;
reg   [46:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 47'd1;
#0 ap_return_preg = 64'd0;
end

local_sin_float64_mul_countLeadingZerosHigh_ROM_AUTO_1R #(
    .DataWidth( 4 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
countLeadingZerosHigh_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(countLeadingZerosHigh_address0),
    .ce0(countLeadingZerosHigh_ce0),
    .q0(countLeadingZerosHigh_q0)
);

local_sin_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_430_p0),
    .din1(grp_fu_430_p1),
    .ce(1'b1),
    .dout(grp_fu_430_p2)
);

local_sin_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_434_p0),
    .din1(grp_fu_434_p1),
    .ce(1'b1),
    .dout(grp_fu_434_p2)
);

local_sin_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_438_p0),
    .din1(grp_fu_438_p1),
    .ce(1'b1),
    .dout(grp_fu_438_p2)
);

local_sin_mul_32ns_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_2_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_442_p0),
    .din1(grp_fu_442_p1),
    .ce(1'b1),
    .dout(grp_fu_442_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_return_preg <= ap_phi_mux_retval_0_phi_fu_402_p24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln503_fu_614_p2 == 1'd0) & (grp_fu_446_p2 == 1'd0) & (icmp_ln481_fu_598_p2 == 1'd0))) begin
        aExp_5_reg_227 <= zext_ln471_fu_549_p1;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln503_reg_1874 == 1'd1))) begin
        aExp_5_reg_227 <= sext_ln471_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln503_fu_614_p2 == 1'd0) & (grp_fu_446_p2 == 1'd0) & (icmp_ln481_fu_598_p2 == 1'd0))) begin
        aSig_5_reg_217 <= zext_ln472_1_fu_535_p1;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln503_reg_1874 == 1'd1))) begin
        aSig_5_reg_217 <= trunc_ln472_fu_861_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln509_fu_877_p2 == 1'd0))) begin
        bExp_5_reg_246 <= zext_ln471_1_reg_1836;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        bExp_5_reg_246 <= sext_ln471_1_fu_1050_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln509_fu_877_p2 == 1'd0))) begin
        bSig_5_reg_237 <= zext_ln472_3_reg_1826;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        bSig_5_reg_237 <= trunc_ln472_1_fu_1040_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln204_fu_1302_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)) | ((1'd0 == and_ln207_fu_1333_p2) & (tmp_34_fu_1339_p3 == 1'd0) & (icmp_ln206_fu_1308_p2 == 1'd0) & (icmp_ln204_fu_1302_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)))) begin
        empty_reg_265 <= select_ln520_reg_2065;
    end else if (((tmp_34_reg_2110 == 1'd1) & (icmp_ln204_reg_2098 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        empty_reg_265 <= z_12_reg_256;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln204_fu_1302_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)) | ((1'd0 == and_ln207_fu_1333_p2) & (tmp_34_fu_1339_p3 == 1'd0) & (icmp_ln206_fu_1308_p2 == 1'd0) & (icmp_ln204_fu_1302_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)))) begin
        float_exception_flags_flag_3_reg_288 <= 1'd0;
    end else if (((tmp_34_reg_2110 == 1'd1) & (icmp_ln204_reg_2098 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        float_exception_flags_flag_3_reg_288 <= xor_ln220_fu_1444_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (((((((((icmp_ln204_reg_2098 == 1'd0) & (icmp_ln511_reg_1953 == 1'd0) & (icmp_ln505_reg_1878 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0)) | ((1'd0 == and_ln207_reg_2106) & (icmp_ln206_reg_2102 == 1'd0) & (icmp_ln511_reg_1953 == 1'd0) & (icmp_ln505_reg_1878 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((1'd0 == and_ln207_reg_2106) & (icmp_ln206_reg_2102 == 1'd0) & (icmp_ln509_reg_1949 == 1'd0) & (icmp_ln505_reg_1878 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((icmp_ln204_reg_2098 == 1'd0) & (icmp_ln509_reg_1949 == 1'd0) & (icmp_ln505_reg_1878 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((1'd0 == and_ln207_reg_2106) & (icmp_ln206_reg_2102 == 1'd0) & (icmp_ln511_reg_1953 == 1'd0) & (icmp_ln503_reg_1874 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((icmp_ln204_reg_2098 == 1'd0) & (icmp_ln511_reg_1953 == 1'd0) & (icmp_ln503_reg_1874 
    == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((1'd0 == and_ln207_reg_2106) & (icmp_ln206_reg_2102 == 1'd0) & (icmp_ln509_reg_1949 == 1'd0) & (icmp_ln503_reg_1874 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((icmp_ln204_reg_2098 == 1'd0) & (icmp_ln509_reg_1949 == 1'd0) & (icmp_ln503_reg_1874 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))))) begin
        float_exception_flags_flag_5_reg_326 <= or_ln224_fu_1505_p2;
    end else if (((1'b1 == ap_CS_fsm_state17) | ((ap_start == 1'b1) & (icmp_ln496_fu_732_p2 == 1'd1) & (icmp_ln494_fu_698_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_446_p2 == 1'd1) & (icmp_ln481_fu_598_p2 == 1'd0)) | ((ap_start == 1'b1) & (icmp_ln485_fu_778_p2 == 1'd1) & (icmp_ln483_fu_456_p2 == 1'd1) & (1'd0 == and_ln483_fu_744_p2) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln481_fu_598_p2 == 1'd1)))) begin
        float_exception_flags_flag_5_reg_326 <= 1'd1;
    end else if ((((1'd0 == and_ln100_12_fu_1657_p2) & (1'b1 == ap_CS_fsm_state32)) | ((1'd1 == and_ln100_12_fu_1657_p2) & (1'b1 == ap_CS_fsm_state32)))) begin
        float_exception_flags_flag_5_reg_326 <= or_ln121_3_fu_1662_p2;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18))) begin
        float_exception_flags_flag_5_reg_326 <= 1'd0;
    end else if ((((1'd0 == and_ln100_10_fu_1754_p2) & (1'b1 == ap_CS_fsm_state47)) | ((1'd1 == and_ln100_10_fu_1754_p2) & (1'b1 == ap_CS_fsm_state47)))) begin
        float_exception_flags_flag_5_reg_326 <= or_ln121_fu_1759_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln204_fu_1302_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)) | ((1'd0 == and_ln207_fu_1333_p2) & (tmp_34_fu_1339_p3 == 1'd0) & (icmp_ln206_fu_1308_p2 == 1'd0) & (icmp_ln204_fu_1302_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)))) begin
        float_exception_flags_loc_1_reg_302 <= float_exception_flags_i;
    end else if (((tmp_34_reg_2110 == 1'd1) & (icmp_ln204_reg_2098 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        float_exception_flags_loc_1_reg_302 <= select_ln220_fu_1450_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_start == 1'b1) & (icmp_ln496_fu_732_p2 == 1'd1) & (icmp_ln494_fu_698_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_446_p2 == 1'd1) & (icmp_ln481_fu_598_p2 == 1'd0)) | ((ap_start == 1'b1) & (icmp_ln485_fu_778_p2 == 1'd1) & (icmp_ln483_fu_456_p2 == 1'd1) & (1'd0 == and_ln483_fu_744_p2) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln481_fu_598_p2 == 1'd1)))) begin
        float_exception_flags_new_5_reg_364 <= or_ln69_fu_608_p2;
    end else if (((1'b1 == ap_CS_fsm_state16) & (((((((((icmp_ln204_reg_2098 == 1'd0) & (icmp_ln511_reg_1953 == 1'd0) & (icmp_ln505_reg_1878 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0)) | ((1'd0 == and_ln207_reg_2106) & (icmp_ln206_reg_2102 == 1'd0) & (icmp_ln511_reg_1953 == 1'd0) & (icmp_ln505_reg_1878 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((1'd0 == and_ln207_reg_2106) & (icmp_ln206_reg_2102 == 1'd0) & (icmp_ln509_reg_1949 == 1'd0) & (icmp_ln505_reg_1878 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((icmp_ln204_reg_2098 == 1'd0) & (icmp_ln509_reg_1949 == 1'd0) & (icmp_ln505_reg_1878 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((1'd0 == and_ln207_reg_2106) & (icmp_ln206_reg_2102 == 1'd0) & (icmp_ln511_reg_1953 == 1'd0) & (icmp_ln503_reg_1874 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((icmp_ln204_reg_2098 == 1'd0) & (icmp_ln511_reg_1953 == 1'd0) & (icmp_ln503_reg_1874 
    == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((1'd0 == and_ln207_reg_2106) & (icmp_ln206_reg_2102 == 1'd0) & (icmp_ln509_reg_1949 == 1'd0) & (icmp_ln503_reg_1874 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((icmp_ln204_reg_2098 == 1'd0) & (icmp_ln509_reg_1949 == 1'd0) & (icmp_ln503_reg_1874 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))))) begin
        float_exception_flags_new_5_reg_364 <= or_ln224_2_fu_1530_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        float_exception_flags_new_5_reg_364 <= or_ln69_3_fu_1581_p2;
    end else if ((((1'd0 == and_ln100_12_fu_1657_p2) & (1'b1 == ap_CS_fsm_state32)) | ((1'd1 == and_ln100_12_fu_1657_p2) & (1'b1 == ap_CS_fsm_state32)) | ((1'd0 == and_ln100_10_fu_1754_p2) & (1'b1 == ap_CS_fsm_state47)) | ((1'd1 == and_ln100_10_fu_1754_p2) & (1'b1 == ap_CS_fsm_state47)))) begin
        float_exception_flags_new_5_reg_364 <= or_ln69_reg_1860;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_start == 1'b1) & (icmp_ln496_fu_732_p2 == 1'd1) & (icmp_ln494_fu_698_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_446_p2 == 1'd1) & (icmp_ln481_fu_598_p2 == 1'd0)) | ((ap_start == 1'b1) & (icmp_ln485_fu_778_p2 == 1'd1) & (icmp_ln483_fu_456_p2 == 1'd1) & (1'd0 == and_ln483_fu_744_p2) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln481_fu_598_p2 == 1'd1)))) begin
        retval_0_reg_398 <= 64'd9223372036854775807;
    end else if (((1'b1 == ap_CS_fsm_state16) & (((((((((icmp_ln204_reg_2098 == 1'd0) & (icmp_ln511_reg_1953 == 1'd0) & (icmp_ln505_reg_1878 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0)) | ((1'd0 == and_ln207_reg_2106) & (icmp_ln206_reg_2102 == 1'd0) & (icmp_ln511_reg_1953 == 1'd0) & (icmp_ln505_reg_1878 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((1'd0 == and_ln207_reg_2106) & (icmp_ln206_reg_2102 == 1'd0) & (icmp_ln509_reg_1949 == 1'd0) & (icmp_ln505_reg_1878 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((icmp_ln204_reg_2098 == 1'd0) & (icmp_ln509_reg_1949 == 1'd0) & (icmp_ln505_reg_1878 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((1'd0 == and_ln207_reg_2106) & (icmp_ln206_reg_2102 == 1'd0) & (icmp_ln511_reg_1953 == 1'd0) & (icmp_ln503_reg_1874 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((icmp_ln204_reg_2098 == 1'd0) & (icmp_ln511_reg_1953 == 1'd0) & (icmp_ln503_reg_1874 
    == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((1'd0 == and_ln207_reg_2106) & (icmp_ln206_reg_2102 == 1'd0) & (icmp_ln509_reg_1949 == 1'd0) & (icmp_ln503_reg_1874 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((icmp_ln204_reg_2098 == 1'd0) & (icmp_ln509_reg_1949 == 1'd0) & (icmp_ln503_reg_1874 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))))) begin
        retval_0_reg_398 <= add_ln146_fu_1568_p2;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        retval_0_reg_398 <= or_ln146_3_fu_1593_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        retval_0_reg_398 <= shl_ln146_5_fu_1599_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        retval_0_reg_398 <= shl_ln146_4_fu_1606_p3;
    end else if (((1'd0 == and_ln100_12_fu_1657_p2) & (1'b1 == ap_CS_fsm_state32))) begin
        retval_0_reg_398 <= select_ln123_8_fu_1676_p3;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        retval_0_reg_398 <= or_ln146_2_fu_1691_p2;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        retval_0_reg_398 <= or_ln146_fu_1704_p2;
    end else if (((1'd0 == and_ln100_10_fu_1754_p2) & (1'b1 == ap_CS_fsm_state47))) begin
        retval_0_reg_398 <= select_ln123_6_fu_1773_p3;
    end else if ((((1'd1 == and_ln100_12_fu_1657_p2) & (1'b1 == ap_CS_fsm_state32)) | ((1'd1 == and_ln100_10_fu_1754_p2) & (1'b1 == ap_CS_fsm_state47)))) begin
        retval_0_reg_398 <= grp_fu_494_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln204_fu_1302_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)) | ((1'd0 == and_ln207_fu_1333_p2) & (tmp_34_fu_1339_p3 == 1'd0) & (icmp_ln206_fu_1308_p2 == 1'd0) & (icmp_ln204_fu_1302_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)))) begin
        roundBits_4_reg_277 <= roundBits_reg_2081;
    end else if (((tmp_34_reg_2110 == 1'd1) & (icmp_ln204_reg_2098 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        roundBits_4_reg_277 <= roundBits_3_fu_1428_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln204_fu_1302_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)) | ((1'd0 == and_ln207_fu_1333_p2) & (tmp_34_fu_1339_p3 == 1'd0) & (icmp_ln206_fu_1308_p2 == 1'd0) & (icmp_ln204_fu_1302_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)))) begin
        zExp_assign_4_reg_313 <= add_ln520_1_fu_1287_p2;
    end else if (((tmp_34_reg_2110 == 1'd1) & (icmp_ln204_reg_2098 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        zExp_assign_4_reg_313 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        z_12_reg_256 <= zext_ln77_fu_1374_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        z_12_reg_256 <= z_fu_1420_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln520_reg_2075 <= add_ln520_fu_1270_p2;
        roundBits_reg_2081 <= roundBits_fu_1276_p1;
        select_ln520_reg_2065 <= select_ln520_fu_1254_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        and_ln207_reg_2106 <= and_ln207_fu_1333_p2;
        icmp_ln204_reg_2098 <= icmp_ln204_fu_1302_p2;
        icmp_ln206_reg_2102 <= icmp_ln206_fu_1308_p2;
        sub_ln217_reg_2114 <= sub_ln217_fu_1347_p2;
        tmp_34_reg_2110 <= zExp_fu_1292_p2[32'd12];
        trunc_ln471_reg_2093 <= trunc_ln471_fu_1298_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        and_ln227_reg_2148 <= and_ln227_fu_1499_p2;
        icmp_ln224_reg_2142 <= icmp_ln224_fu_1457_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        bExp_reg_1831 <= {{b[62:52]}};
        bSig_6_reg_1801 <= bSig_6_fu_521_p1;
        float_exception_flags_load_reg_1855 <= float_exception_flags_i;
        icmp_ln100_12_reg_1929 <= grp_fu_461_p2;
        icmp_ln100_14_reg_1934 <= grp_fu_466_p2;
        icmp_ln100_16_reg_1907 <= grp_fu_461_p2;
        icmp_ln100_18_reg_1912 <= grp_fu_466_p2;
        icmp_ln265_reg_1887 <= icmp_ln265_fu_658_p2;
        icmp_ln291_reg_1882 <= icmp_ln291_fu_630_p2;
        icmp_ln481_reg_1851 <= icmp_ln481_fu_598_p2;
        icmp_ln492_reg_1870 <= grp_fu_446_p2;
        icmp_ln503_reg_1874 <= icmp_ln503_fu_614_p2;
        icmp_ln505_reg_1878 <= icmp_ln505_fu_451_p2;
        or_ln69_reg_1860[3 : 0] <= or_ln69_fu_608_p2[3 : 0];
or_ln69_reg_1860[31 : 5] <= or_ln69_fu_608_p2[31 : 5];
        tmp_19_reg_1899 <= {{select_ln265_3_fu_670_p3[23:16]}};
        tmp_28_reg_1893 <= {{select_ln265_3_fu_670_p3[31:24]}};
        trunc_ln468_reg_1796 <= trunc_ln468_fu_503_p1;
        zSign_reg_1841 <= zSign_fu_592_p2;
        zext_ln471_1_reg_1836[10 : 0] <= zext_ln471_1_fu_580_p1[10 : 0];
        zext_ln472_2_reg_1821[51 : 0] <= zext_ln472_2_fu_561_p1[51 : 0];
        zext_ln472_3_reg_1826[51 : 0] <= zext_ln472_3_fu_565_p1[51 : 0];
        zext_ln472_reg_1806[51 : 0] <= zext_ln472_fu_531_p1[51 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        icmp_ln193_reg_2044 <= icmp_ln193_fu_1138_p2;
        tmp_21_reg_2049 <= {{zMiddleA_1_fu_1134_p2[63:32]}};
        z1_2_reg_2059 <= z1_2_fu_1159_p2;
        zMiddleA_2_reg_2054[63 : 32] <= zMiddleA_2_fu_1153_p2[63 : 32];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        icmp_ln265_1_reg_1962 <= icmp_ln265_1_fu_923_p2;
        icmp_ln291_1_reg_1957 <= icmp_ln291_1_fu_896_p2;
        icmp_ln509_reg_1949 <= icmp_ln509_fu_877_p2;
        icmp_ln511_reg_1953 <= icmp_ln511_fu_882_p2;
        tmp_20_reg_1974 <= {{select_ln265_4_fu_935_p3[23:16]}};
        tmp_31_reg_1968 <= {{select_ln265_4_fu_935_p3[31:24]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        icmp_ln270_1_reg_1979 <= icmp_ln270_1_fu_963_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln270_reg_1939 <= icmp_ln270_fu_784_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_499 <= countLeadingZerosHigh_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        z0_reg_2039 <= grp_fu_442_p2;
        z1_reg_2023 <= grp_fu_430_p2;
        zMiddleA_reg_2028 <= grp_fu_434_p2;
        zMiddleB_reg_2033 <= grp_fu_438_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_34_reg_2110 == 1'd1) & (icmp_ln204_reg_2098 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        ap_phi_mux_empty_phi_fu_268_p6 = z_12_reg_256;
    end else begin
        ap_phi_mux_empty_phi_fu_268_p6 = empty_reg_265;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (((((((((icmp_ln204_reg_2098 == 1'd0) & (icmp_ln511_reg_1953 == 1'd0) & (icmp_ln505_reg_1878 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0)) | ((1'd0 == and_ln207_reg_2106) & (icmp_ln206_reg_2102 == 1'd0) & (icmp_ln511_reg_1953 == 1'd0) & (icmp_ln505_reg_1878 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((1'd0 == and_ln207_reg_2106) & (icmp_ln206_reg_2102 == 1'd0) & (icmp_ln509_reg_1949 == 1'd0) & (icmp_ln505_reg_1878 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((icmp_ln204_reg_2098 == 1'd0) & (icmp_ln509_reg_1949 == 1'd0) & (icmp_ln505_reg_1878 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((1'd0 == and_ln207_reg_2106) & (icmp_ln206_reg_2102 == 1'd0) & (icmp_ln511_reg_1953 == 1'd0) & (icmp_ln503_reg_1874 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((icmp_ln204_reg_2098 == 1'd0) & (icmp_ln511_reg_1953 == 1'd0) & (icmp_ln503_reg_1874 
    == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((1'd0 == and_ln207_reg_2106) & (icmp_ln206_reg_2102 == 1'd0) & (icmp_ln509_reg_1949 == 1'd0) & (icmp_ln503_reg_1874 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((icmp_ln204_reg_2098 == 1'd0) & (icmp_ln509_reg_1949 == 1'd0) & (icmp_ln503_reg_1874 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))))) begin
        ap_phi_mux_float_exception_flags_flag_5_phi_fu_331_p24 = or_ln224_fu_1505_p2;
    end else begin
        ap_phi_mux_float_exception_flags_flag_5_phi_fu_331_p24 = float_exception_flags_flag_5_reg_326;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (((((((((icmp_ln204_reg_2098 == 1'd0) & (icmp_ln511_reg_1953 == 1'd0) & (icmp_ln505_reg_1878 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0)) | ((1'd0 == and_ln207_reg_2106) & (icmp_ln206_reg_2102 == 1'd0) & (icmp_ln511_reg_1953 == 1'd0) & (icmp_ln505_reg_1878 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((1'd0 == and_ln207_reg_2106) & (icmp_ln206_reg_2102 == 1'd0) & (icmp_ln509_reg_1949 == 1'd0) & (icmp_ln505_reg_1878 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((icmp_ln204_reg_2098 == 1'd0) & (icmp_ln509_reg_1949 == 1'd0) & (icmp_ln505_reg_1878 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((1'd0 == and_ln207_reg_2106) & (icmp_ln206_reg_2102 == 1'd0) & (icmp_ln511_reg_1953 == 1'd0) & (icmp_ln503_reg_1874 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((icmp_ln204_reg_2098 == 1'd0) & (icmp_ln511_reg_1953 == 1'd0) & (icmp_ln503_reg_1874 
    == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((1'd0 == and_ln207_reg_2106) & (icmp_ln206_reg_2102 == 1'd0) & (icmp_ln509_reg_1949 == 1'd0) & (icmp_ln503_reg_1874 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((icmp_ln204_reg_2098 == 1'd0) & (icmp_ln509_reg_1949 == 1'd0) & (icmp_ln503_reg_1874 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))))) begin
        ap_phi_mux_float_exception_flags_new_5_phi_fu_368_p24 = or_ln224_2_fu_1530_p3;
    end else begin
        ap_phi_mux_float_exception_flags_new_5_phi_fu_368_p24 = float_exception_flags_new_5_reg_364;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (((((((((icmp_ln204_reg_2098 == 1'd0) & (icmp_ln511_reg_1953 == 1'd0) & (icmp_ln505_reg_1878 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0)) | ((1'd0 == and_ln207_reg_2106) & (icmp_ln206_reg_2102 == 1'd0) & (icmp_ln511_reg_1953 == 1'd0) & (icmp_ln505_reg_1878 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((1'd0 == and_ln207_reg_2106) & (icmp_ln206_reg_2102 == 1'd0) & (icmp_ln509_reg_1949 == 1'd0) & (icmp_ln505_reg_1878 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((icmp_ln204_reg_2098 == 1'd0) & (icmp_ln509_reg_1949 == 1'd0) & (icmp_ln505_reg_1878 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((1'd0 == and_ln207_reg_2106) & (icmp_ln206_reg_2102 == 1'd0) & (icmp_ln511_reg_1953 == 1'd0) & (icmp_ln503_reg_1874 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((icmp_ln204_reg_2098 == 1'd0) & (icmp_ln511_reg_1953 == 1'd0) & (icmp_ln503_reg_1874 
    == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((1'd0 == and_ln207_reg_2106) & (icmp_ln206_reg_2102 == 1'd0) & (icmp_ln509_reg_1949 == 1'd0) & (icmp_ln503_reg_1874 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))) | ((icmp_ln204_reg_2098 == 1'd0) & (icmp_ln509_reg_1949 == 1'd0) & (icmp_ln503_reg_1874 == 1'd0) & (icmp_ln492_reg_1870 == 1'd0) & (icmp_ln481_reg_1851 == 1'd0))))) begin
        ap_phi_mux_retval_0_phi_fu_402_p24 = add_ln146_fu_1568_p2;
    end else begin
        ap_phi_mux_retval_0_phi_fu_402_p24 = retval_0_reg_398;
    end
end

always @ (*) begin
    if (((tmp_34_reg_2110 == 1'd1) & (icmp_ln204_reg_2098 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        ap_phi_mux_roundBits_4_phi_fu_280_p6 = roundBits_3_fu_1428_p1;
    end else begin
        ap_phi_mux_roundBits_4_phi_fu_280_p6 = roundBits_4_reg_277;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_return = ap_phi_mux_retval_0_phi_fu_402_p24;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        countLeadingZerosHigh_address0 = zext_ln275_1_fu_974_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        countLeadingZerosHigh_address0 = zext_ln275_fu_795_p1;
    end else begin
        countLeadingZerosHigh_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        countLeadingZerosHigh_ce0 = 1'b1;
    end else begin
        countLeadingZerosHigh_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_float_exception_flags_flag_5_phi_fu_331_p24 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        float_exception_flags_o = ap_phi_mux_float_exception_flags_new_5_phi_fu_368_p24;
    end else begin
        float_exception_flags_o = float_exception_flags_i;
    end
end

always @ (*) begin
    if (((ap_phi_mux_float_exception_flags_flag_5_phi_fu_331_p24 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        float_exception_flags_o_ap_vld = 1'b1;
    end else begin
        float_exception_flags_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (icmp_ln485_fu_778_p2 == 1'd0) & (icmp_ln483_fu_456_p2 == 1'd1) & (1'd0 == and_ln483_fu_744_p2) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln481_fu_598_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (((icmp_ln483_fu_456_p2 == 1'd0) & (icmp_ln481_fu_598_p2 == 1'd1)) | ((1'd1 == and_ln483_fu_744_p2) & (icmp_ln481_fu_598_p2 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else if (((ap_start == 1'b1) & (icmp_ln496_fu_732_p2 == 1'd0) & (icmp_ln494_fu_698_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_446_p2 == 1'd1) & (icmp_ln481_fu_598_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (((icmp_ln496_fu_732_p2 == 1'd1) & (icmp_ln494_fu_698_p2 == 1'd1) & (grp_fu_446_p2 == 1'd1) & (icmp_ln481_fu_598_p2 == 1'd0)) | ((icmp_ln485_fu_778_p2 == 1'd1) & (icmp_ln483_fu_456_p2 == 1'd1) & (1'd0 == and_ln483_fu_744_p2) & (icmp_ln481_fu_598_p2 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else if (((ap_start == 1'b1) & (icmp_ln494_fu_698_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_446_p2 == 1'd1) & (icmp_ln481_fu_598_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln505_fu_451_p2 == 1'd1) & (icmp_ln503_fu_614_p2 == 1'd1) & (grp_fu_446_p2 == 1'd0) & (icmp_ln481_fu_598_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln505_fu_451_p2 == 1'd0) & (icmp_ln503_fu_614_p2 == 1'd1) & (grp_fu_446_p2 == 1'd0) & (icmp_ln481_fu_598_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln503_fu_614_p2 == 1'd0) & (grp_fu_446_p2 == 1'd0) & (icmp_ln481_fu_598_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln511_fu_882_p2 == 1'd1) & (icmp_ln509_fu_877_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln511_fu_882_p2 == 1'd0) & (icmp_ln509_fu_877_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'd0 == and_ln207_fu_1333_p2) & (tmp_34_fu_1339_p3 == 1'd1) & (icmp_ln206_fu_1308_p2 == 1'd0) & (icmp_ln204_fu_1302_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln71_fu_1363_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if (((1'd0 == and_ln207_fu_1333_p2) & (tmp_34_fu_1339_p3 == 1'd1) & (icmp_ln206_fu_1308_p2 == 1'd0) & (icmp_ln204_fu_1302_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln71_fu_1363_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else if (((1'b1 == ap_CS_fsm_state12) & (((icmp_ln206_fu_1308_p2 == 1'd1) & (icmp_ln204_fu_1302_p2 == 1'd1)) | ((1'd1 == and_ln207_fu_1333_p2) & (icmp_ln204_fu_1302_p2 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign aExp_4_fu_866_p2 = (7'd12 - shiftCount_11_fu_836_p2);

assign aExp_fu_539_p4 = {{a[62:52]}};

assign aHigh_fu_1076_p2 = (trunc_ln_fu_1066_p4 | 32'd1073741824);

assign aLow_fu_1058_p3 = {{trunc_ln184_fu_1054_p1}, {10'd0}};

assign aSig_6_fu_525_p1 = a[51:0];

assign aSig_fu_856_p2 = zext_ln472_reg_1806 << zext_ln126_fu_852_p1;

assign add_ln146_fu_1568_p2 = (shl_ln146_7_fu_1552_p3 + or_ln146_5_fu_1560_p4);

assign add_ln196_fu_1182_p2 = (z0_reg_2039 + zext_ln196_fu_1178_p1);

assign add_ln207_fu_1320_p2 = (select_ln520_reg_2065 + 64'd512);

assign add_ln226_fu_1463_p2 = (ap_phi_mux_empty_phi_fu_268_p6 + 64'd512);

assign add_ln520_1_fu_1287_p2 = ($signed(add_ln520_reg_2075) + $signed(bExp_5_reg_246));

assign add_ln520_fu_1270_p2 = (aExp_5_reg_227 + select_ln520_1_fu_1262_p3);

assign and_ln100_10_fu_1754_p2 = (icmp_ln100_14_reg_1934 & icmp_ln100_13_fu_1748_p2);

assign and_ln100_11_fu_1627_p2 = (icmp_ln100_16_reg_1907 & icmp_ln100_15_fu_1621_p2);

assign and_ln100_12_fu_1657_p2 = (icmp_ln100_18_reg_1912 & icmp_ln100_17_fu_1651_p2);

assign and_ln100_1_fu_1613_p3 = {{grp_fu_471_p4}, {51'd0}};

assign and_ln100_2_fu_1643_p3 = {{grp_fu_480_p4}, {51'd0}};

assign and_ln100_fu_1724_p2 = (icmp_ln100_fu_1718_p2 & icmp_ln100_12_reg_1929);

assign and_ln100_s_fu_1740_p3 = {{grp_fu_480_p4}, {51'd0}};

assign and_ln207_fu_1333_p2 = (tmp_33_fu_1325_p3 & icmp_ln207_fu_1314_p2);

assign and_ln227_fu_1499_p2 = (trunc_ln2_fu_1469_p4 & sext_ln227_fu_1495_p1);

assign and_ln483_fu_744_p2 = (icmp_ln483_2_fu_738_p2 & grp_fu_446_p2);

assign and_ln_fu_1710_p3 = {{grp_fu_471_p4}, {51'd0}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bExp_4_fu_1044_p2 = (7'd12 - shiftCount_16_fu_1015_p2);

assign bExp_fu_569_p4 = {{b[62:52]}};

assign bHigh_fu_1104_p2 = (trunc_ln1_fu_1094_p4 | 32'd2147483648);

assign bLow_fu_1086_p3 = {{trunc_ln186_fu_1082_p1}, {11'd0}};

assign bSig_6_fu_521_p1 = b[51:0];

assign bSig_fu_1035_p2 = zext_ln472_2_reg_1821 << zext_ln126_1_fu_1031_p1;

assign grp_fu_430_p0 = zext_ln188_1_fu_1116_p1;

assign grp_fu_430_p1 = zext_ln188_fu_1110_p1;

assign grp_fu_434_p0 = zext_ln189_fu_1122_p1;

assign grp_fu_434_p1 = zext_ln188_fu_1110_p1;

assign grp_fu_438_p0 = zext_ln188_1_fu_1116_p1;

assign grp_fu_438_p1 = zext_ln190_fu_1128_p1;

assign grp_fu_442_p0 = zext_ln189_fu_1122_p1;

assign grp_fu_442_p1 = zext_ln190_fu_1128_p1;

assign grp_fu_446_p2 = ((bExp_fu_569_p4 == 11'd2047) ? 1'b1 : 1'b0);

assign grp_fu_461_p2 = ((trunc_ln468_3_fu_516_p1 != 51'd0) ? 1'b1 : 1'b0);

assign grp_fu_466_p2 = ((trunc_ln468_2_fu_511_p1 != 51'd0) ? 1'b1 : 1'b0);

assign grp_fu_471_p4 = {{a[62:51]}};

assign grp_fu_480_p4 = {{b[62:51]}};

assign grp_fu_489_p2 = (64'd2251799813685248 | a);

assign grp_fu_494_p2 = (b | 64'd2251799813685248);

assign icmp_ln100_13_fu_1748_p2 = ((and_ln100_s_fu_1740_p3 == 63'd9218868437227405312) ? 1'b1 : 1'b0);

assign icmp_ln100_15_fu_1621_p2 = ((and_ln100_1_fu_1613_p3 == 63'd9218868437227405312) ? 1'b1 : 1'b0);

assign icmp_ln100_17_fu_1651_p2 = ((and_ln100_2_fu_1643_p3 == 63'd9218868437227405312) ? 1'b1 : 1'b0);

assign icmp_ln100_fu_1718_p2 = ((and_ln_fu_1710_p3 == 63'd9218868437227405312) ? 1'b1 : 1'b0);

assign icmp_ln193_fu_1138_p2 = ((zMiddleA_1_fu_1134_p2 < zMiddleB_reg_2033) ? 1'b1 : 1'b0);

assign icmp_ln196_fu_1174_p2 = ((z1_2_reg_2059 < zMiddleA_2_reg_2054) ? 1'b1 : 1'b0);

assign icmp_ln204_fu_1302_p2 = ((zExp_fu_1292_p2 > 13'd2044) ? 1'b1 : 1'b0);

assign icmp_ln206_fu_1308_p2 = (($signed(zExp_fu_1292_p2) > $signed(13'd2045)) ? 1'b1 : 1'b0);

assign icmp_ln207_fu_1314_p2 = ((zExp_fu_1292_p2 == 13'd2045) ? 1'b1 : 1'b0);

assign icmp_ln220_fu_1433_p2 = ((roundBits_3_fu_1428_p1 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln224_fu_1457_p2 = ((ap_phi_mux_roundBits_4_phi_fu_280_p6 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln227_fu_1479_p2 = ((ap_phi_mux_roundBits_4_phi_fu_280_p6 == 10'd512) ? 1'b1 : 1'b0);

assign icmp_ln228_fu_1539_p2 = ((and_ln227_reg_2148 == 54'd0) ? 1'b1 : 1'b0);

assign icmp_ln265_1_fu_923_p2 = ((tmp_30_fu_913_p4 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln265_fu_658_p2 = ((tmp_27_fu_648_p4 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln270_1_fu_963_p2 = ((tmp_31_reg_1968 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln270_fu_784_p2 = ((tmp_28_reg_1893 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln291_1_fu_896_p2 = ((tmp_29_fu_887_p4 == 20'd0) ? 1'b1 : 1'b0);

assign icmp_ln291_fu_630_p2 = ((tmp_26_fu_620_p4 == 20'd0) ? 1'b1 : 1'b0);

assign icmp_ln481_fu_598_p2 = ((aExp_fu_539_p4 == 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln483_2_fu_738_p2 = ((bSig_6_fu_521_p1 != 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln483_fu_456_p2 = ((aSig_6_fu_525_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln485_fu_778_p2 = ((tmp_3_fu_770_p3 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln494_fu_698_p2 = ((bSig_6_fu_521_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln496_fu_732_p2 = ((tmp_5_fu_724_p3 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln503_fu_614_p2 = ((aExp_fu_539_p4 == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln505_fu_451_p2 = ((aSig_6_fu_525_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln509_fu_877_p2 = ((bExp_reg_1831 == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln511_fu_882_p2 = ((bSig_6_reg_1801 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln519_fu_1193_p2 = ((z1_2_reg_2059 != 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln71_fu_1363_p2 = (($signed(tmp_35_fu_1353_p4) < $signed(6'd1)) ? 1'b1 : 1'b0);

assign icmp_ln73_fu_1394_p2 = ((shl_ln73_fu_1389_p2 != 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln87_3_fu_1637_p2 = ((shl_ln87_3_fu_1632_p2 > 64'd18437736874454810624) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_1734_p2 = ((shl_ln87_fu_1729_p2 > 64'd18437736874454810624) ? 1'b1 : 1'b0);

assign lshr_ln73_fu_1381_p2 = select_ln520_reg_2065 >> zext_ln73_fu_1378_p1;

assign or_ln121_3_fu_1662_p2 = (and_ln100_12_fu_1657_p2 | and_ln100_11_fu_1627_p2);

assign or_ln121_fu_1759_p2 = (and_ln100_fu_1724_p2 | and_ln100_10_fu_1754_p2);

assign or_ln146_2_fu_1691_p2 = (shl_ln146_3_fu_1684_p3 | 64'd9218868437227405312);

assign or_ln146_3_fu_1593_p2 = (shl_ln146_6_fu_1586_p3 | 64'd9218868437227405312);

assign or_ln146_5_fu_1560_p4 = {{{zSign_reg_1841}, {9'd0}}, {and_ln227_reg_2148}};

assign or_ln146_fu_1704_p2 = (shl_ln5_fu_1697_p3 | 64'd9218868437227405312);

assign or_ln224_2_fu_1530_p3 = {{tmp_8_fu_1520_p4}, {or_ln224_3_fu_1515_p2}};

assign or_ln224_3_fu_1515_p2 = (trunc_ln224_fu_1511_p1 | icmp_ln224_reg_2142);

assign or_ln224_fu_1505_p2 = (icmp_ln224_reg_2142 | float_exception_flags_flag_3_reg_288);

assign or_ln485_fu_754_p2 = (trunc_ln485_fu_750_p1 | bExp_fu_569_p4);

assign or_ln496_fu_708_p2 = (trunc_ln496_fu_704_p1 | aExp_fu_539_p4);

assign or_ln519_fu_1202_p2 = (trunc_ln519_fu_1198_p1 | icmp_ln519_fu_1193_p2);

assign or_ln69_3_fu_1581_p2 = (float_exception_flags_load_reg_1855 | 32'd9);

assign or_ln69_4_fu_1439_p2 = (float_exception_flags_i | 32'd4);

assign or_ln69_fu_608_p2 = (float_exception_flags_i | 32'd16);

assign or_ln73_fu_1404_p2 = (trunc_ln73_fu_1400_p1 | icmp_ln73_fu_1394_p2);

assign or_ln_fu_1164_p3 = {{icmp_ln193_reg_2044}, {tmp_21_reg_2049}};

assign roundBits_3_fu_1428_p1 = z_12_reg_256[9:0];

assign roundBits_fu_1276_p1 = select_ln520_fu_1254_p3[9:0];

assign select_ln123_6_fu_1773_p3 = ((and_ln100_fu_1724_p2[0:0] == 1'b1) ? grp_fu_489_p2 : select_ln123_fu_1765_p3);

assign select_ln123_7_fu_1668_p3 = ((icmp_ln87_3_fu_1637_p2[0:0] == 1'b1) ? grp_fu_494_p2 : grp_fu_489_p2);

assign select_ln123_8_fu_1676_p3 = ((and_ln100_11_fu_1627_p2[0:0] == 1'b1) ? grp_fu_489_p2 : select_ln123_7_fu_1668_p3);

assign select_ln123_fu_1765_p3 = ((icmp_ln87_fu_1734_p2[0:0] == 1'b1) ? grp_fu_494_p2 : grp_fu_489_p2);

assign select_ln220_fu_1450_p3 = ((icmp_ln220_fu_1433_p2[0:0] == 1'b1) ? float_exception_flags_i : or_ln69_4_fu_1439_p2);

assign select_ln228_fu_1544_p3 = ((icmp_ln228_fu_1539_p2[0:0] == 1'b1) ? 12'd0 : zExp_assign_4_reg_313);

assign select_ln265_3_fu_670_p3 = ((icmp_ln265_fu_658_p2[0:0] == 1'b1) ? shl_ln268_fu_664_p2 : select_ln291_fu_640_p3);

assign select_ln265_4_fu_935_p3 = ((icmp_ln265_1_fu_923_p2[0:0] == 1'b1) ? shl_ln268_1_fu_929_p2 : select_ln291_1_fu_906_p3);

assign select_ln270_2_fu_968_p3 = ((icmp_ln270_1_fu_963_p2[0:0] == 1'b1) ? tmp_20_reg_1974 : tmp_31_reg_1968);

assign select_ln270_fu_789_p3 = ((icmp_ln270_fu_784_p2[0:0] == 1'b1) ? tmp_19_reg_1899 : tmp_28_reg_1893);

assign select_ln291_1_fu_906_p3 = ((icmp_ln291_1_fu_896_p2[0:0] == 1'b1) ? trunc_ln468_reg_1796 : zext_ln286_1_fu_902_p1);

assign select_ln291_fu_640_p3 = ((icmp_ln291_fu_630_p2[0:0] == 1'b1) ? trunc_ln468_1_fu_507_p1 : zext_ln286_fu_636_p1);

assign select_ln520_1_fu_1262_p3 = ((tmp_32_fu_1246_p3[0:0] == 1'b1) ? 12'd3073 : 12'd3072);

assign select_ln520_fu_1254_p3 = ((tmp_32_fu_1246_p3[0:0] == 1'b1) ? zSig0_1_fu_1218_p3 : shl_ln7_fu_1236_p4);

assign sext_ln126_1_fu_1027_p1 = $signed(shiftCount_17_fu_1021_p2);

assign sext_ln126_fu_848_p1 = $signed(shiftCount_12_fu_842_p2);

assign sext_ln227_fu_1495_p1 = $signed(xor_ln227_fu_1489_p2);

assign sext_ln471_1_fu_1050_p1 = $signed(bExp_4_fu_1044_p2);

assign sext_ln471_2_fu_1280_p1 = bExp_5_reg_246;

assign sext_ln471_fu_872_p1 = $signed(aExp_4_fu_866_p2);

assign sext_ln520_fu_1284_p1 = add_ln520_reg_2075;

assign shiftCount_11_fu_836_p2 = (zext_ln262_fu_821_p1 + zext_ln299_fu_832_p1);

assign shiftCount_12_fu_842_p2 = ($signed(shiftCount_11_fu_836_p2) + $signed(7'd117));

assign shiftCount_13_fu_979_p3 = ((icmp_ln265_1_reg_1962[0:0] == 1'b1) ? 5'd16 : 5'd0);

assign shiftCount_14_fu_986_p3 = ((icmp_ln265_1_reg_1962[0:0] == 1'b1) ? 5'd24 : 5'd8);

assign shiftCount_15_fu_993_p3 = ((icmp_ln270_1_reg_1979[0:0] == 1'b1) ? shiftCount_14_fu_986_p3 : shiftCount_13_fu_979_p3);

assign shiftCount_16_fu_1015_p2 = (zext_ln262_1_fu_1000_p1 + zext_ln299_1_fu_1011_p1);

assign shiftCount_17_fu_1021_p2 = ($signed(shiftCount_16_fu_1015_p2) + $signed(7'd117));

assign shiftCount_18_fu_825_p3 = {{icmp_ln291_reg_1882}, {shiftCount_9_fu_814_p3}};

assign shiftCount_1_fu_1004_p3 = {{icmp_ln291_1_reg_1957}, {shiftCount_15_fu_993_p3}};

assign shiftCount_8_fu_807_p3 = ((icmp_ln265_reg_1887[0:0] == 1'b1) ? 5'd24 : 5'd8);

assign shiftCount_9_fu_814_p3 = ((icmp_ln270_reg_1939[0:0] == 1'b1) ? shiftCount_8_fu_807_p3 : shiftCount_fu_800_p3);

assign shiftCount_fu_800_p3 = ((icmp_ln265_reg_1887[0:0] == 1'b1) ? 5'd16 : 5'd0);

assign shl_ln146_3_fu_1684_p3 = {{zSign_reg_1841}, {63'd0}};

assign shl_ln146_4_fu_1606_p3 = {{zSign_reg_1841}, {63'd0}};

assign shl_ln146_5_fu_1599_p3 = {{zSign_reg_1841}, {63'd0}};

assign shl_ln146_6_fu_1586_p3 = {{zSign_reg_1841}, {63'd0}};

assign shl_ln146_7_fu_1552_p3 = {{select_ln228_fu_1544_p3}, {52'd0}};

assign shl_ln268_1_fu_929_p2 = select_ln291_1_fu_906_p3 << 32'd16;

assign shl_ln268_fu_664_p2 = select_ln291_fu_640_p3 << 32'd16;

assign shl_ln5_fu_1697_p3 = {{zSign_reg_1841}, {63'd0}};

assign shl_ln73_fu_1389_p2 = select_ln520_reg_2065 << zext_ln73_6_fu_1386_p1;

assign shl_ln7_fu_1236_p4 = {{{tmp_22_fu_1226_p4}, {or_ln519_fu_1202_p2}}, {1'd0}};

assign shl_ln87_3_fu_1632_p2 = b << 64'd1;

assign shl_ln87_fu_1729_p2 = b << 64'd1;

assign sub_ln217_fu_1347_p2 = (13'd0 - zExp_fu_1292_p2);

assign tmp_22_fu_1226_p4 = {{z0_2_fu_1187_p2[62:1]}};

assign tmp_23_fu_553_p3 = a[32'd63];

assign tmp_25_fu_584_p3 = b[32'd63];

assign tmp_26_fu_620_p4 = {{a[51:32]}};

assign tmp_27_fu_648_p4 = {{select_ln291_fu_640_p3[31:16]}};

assign tmp_29_fu_887_p4 = {{b[51:32]}};

assign tmp_30_fu_913_p4 = {{select_ln291_1_fu_906_p3[31:16]}};

assign tmp_32_fu_1246_p3 = z0_2_fu_1187_p2[32'd62];

assign tmp_33_fu_1325_p3 = add_ln207_fu_1320_p2[32'd63];

assign tmp_34_fu_1339_p3 = zExp_fu_1292_p2[32'd12];

assign tmp_35_fu_1353_p4 = {{sub_ln217_fu_1347_p2[11:6]}};

assign tmp_3_fu_770_p3 = {{tmp_fu_760_p4}, {or_ln485_fu_754_p2}};

assign tmp_4_fu_714_p4 = {{a[51:11]}};

assign tmp_5_fu_724_p3 = {{tmp_4_fu_714_p4}, {or_ln496_fu_708_p2}};

assign tmp_6_fu_1208_p4 = {{z0_2_fu_1187_p2[63:1]}};

assign tmp_7_fu_1410_p4 = {{lshr_ln73_fu_1381_p2[63:1]}};

assign tmp_8_fu_1520_p4 = {{float_exception_flags_loc_1_reg_302[31:1]}};

assign tmp_fu_760_p4 = {{b[51:11]}};

assign trunc_ln184_fu_1054_p1 = aSig_5_reg_217[21:0];

assign trunc_ln186_fu_1082_p1 = bSig_5_reg_237[20:0];

assign trunc_ln1_fu_1094_p4 = {{bSig_5_reg_237[52:21]}};

assign trunc_ln224_fu_1511_p1 = float_exception_flags_loc_1_reg_302[0:0];

assign trunc_ln2_fu_1469_p4 = {{add_ln226_fu_1463_p2[63:10]}};

assign trunc_ln468_1_fu_507_p1 = a[31:0];

assign trunc_ln468_2_fu_511_p1 = b[50:0];

assign trunc_ln468_3_fu_516_p1 = a[50:0];

assign trunc_ln468_fu_503_p1 = b[31:0];

assign trunc_ln471_fu_1298_p1 = add_ln520_1_fu_1287_p2[5:0];

assign trunc_ln472_1_fu_1040_p1 = bSig_fu_1035_p2[52:0];

assign trunc_ln472_fu_861_p1 = aSig_fu_856_p2[53:0];

assign trunc_ln485_fu_750_p1 = b[10:0];

assign trunc_ln496_fu_704_p1 = a[10:0];

assign trunc_ln519_fu_1198_p1 = z0_2_fu_1187_p2[0:0];

assign trunc_ln73_fu_1400_p1 = lshr_ln73_fu_1381_p2[0:0];

assign trunc_ln_fu_1066_p4 = {{aSig_5_reg_217[53:22]}};

assign xor_ln220_fu_1444_p2 = (icmp_ln220_fu_1433_p2 ^ 1'd1);

assign xor_ln227_fu_1489_p2 = (zext_ln227_fu_1485_p1 ^ 2'd3);

assign z0_2_fu_1187_p2 = (add_ln196_fu_1182_p2 + zext_ln194_fu_1170_p1);

assign z1_2_fu_1159_p2 = (zMiddleA_2_fu_1153_p2 + z1_reg_2023);

assign zExp_fu_1292_p2 = ($signed(sext_ln520_fu_1284_p1) + $signed(sext_ln471_2_fu_1280_p1));

assign zMiddleA_1_fu_1134_p2 = (zMiddleA_reg_2028 + zMiddleB_reg_2033);

assign zMiddleA_2_fu_1153_p2 = zMiddleA_1_fu_1134_p2 << 64'd32;

assign zSig0_1_fu_1218_p3 = {{tmp_6_fu_1208_p4}, {or_ln519_fu_1202_p2}};

assign zSign_fu_592_p2 = (tmp_25_fu_584_p3 ^ tmp_23_fu_553_p3);

assign z_11_fu_1369_p2 = ((select_ln520_reg_2065 != 64'd0) ? 1'b1 : 1'b0);

assign z_fu_1420_p3 = {{tmp_7_fu_1410_p4}, {or_ln73_fu_1404_p2}};

assign zext_ln126_1_fu_1031_p1 = $unsigned(sext_ln126_1_fu_1027_p1);

assign zext_ln126_fu_852_p1 = $unsigned(sext_ln126_fu_848_p1);

assign zext_ln188_1_fu_1116_p1 = bLow_fu_1086_p3;

assign zext_ln188_fu_1110_p1 = aLow_fu_1058_p3;

assign zext_ln189_fu_1122_p1 = bHigh_fu_1104_p2;

assign zext_ln190_fu_1128_p1 = aHigh_fu_1076_p2;

assign zext_ln194_fu_1170_p1 = or_ln_fu_1164_p3;

assign zext_ln196_fu_1178_p1 = icmp_ln196_fu_1174_p2;

assign zext_ln227_fu_1485_p1 = icmp_ln227_fu_1479_p2;

assign zext_ln262_1_fu_1000_p1 = reg_499;

assign zext_ln262_fu_821_p1 = reg_499;

assign zext_ln275_1_fu_974_p1 = select_ln270_2_fu_968_p3;

assign zext_ln275_fu_795_p1 = select_ln270_fu_789_p3;

assign zext_ln286_1_fu_902_p1 = tmp_29_fu_887_p4;

assign zext_ln286_fu_636_p1 = tmp_26_fu_620_p4;

assign zext_ln299_1_fu_1011_p1 = shiftCount_1_fu_1004_p3;

assign zext_ln299_fu_832_p1 = shiftCount_18_fu_825_p3;

assign zext_ln471_1_fu_580_p1 = bExp_fu_569_p4;

assign zext_ln471_fu_549_p1 = aExp_fu_539_p4;

assign zext_ln472_1_fu_535_p1 = aSig_6_fu_525_p1;

assign zext_ln472_2_fu_561_p1 = bSig_6_fu_521_p1;

assign zext_ln472_3_fu_565_p1 = bSig_6_fu_521_p1;

assign zext_ln472_fu_531_p1 = aSig_6_fu_525_p1;

assign zext_ln73_6_fu_1386_p1 = trunc_ln471_reg_2093;

assign zext_ln73_fu_1378_p1 = sub_ln217_reg_2114;

assign zext_ln77_fu_1374_p1 = z_11_fu_1369_p2;

always @ (posedge ap_clk) begin
    zext_ln472_reg_1806[63:52] <= 12'b000000000000;
    zext_ln472_2_reg_1821[63:52] <= 12'b000000000000;
    zext_ln472_3_reg_1826[52] <= 1'b0;
    zext_ln471_1_reg_1836[11] <= 1'b0;
    or_ln69_reg_1860[4] <= 1'b1;
    zMiddleA_2_reg_2054[31:0] <= 32'b00000000000000000000000000000000;
end

endmodule //local_sin_float64_mul
