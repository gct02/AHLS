-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity adpcm_main_decode is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_r : IN STD_LOGIC_VECTOR (7 downto 0);
    dec_rlt1_i : IN STD_LOGIC_VECTOR (30 downto 0);
    dec_rlt1_o : OUT STD_LOGIC_VECTOR (30 downto 0);
    dec_rlt1_o_ap_vld : OUT STD_LOGIC;
    dec_al1_i : IN STD_LOGIC_VECTOR (15 downto 0);
    dec_al1_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    dec_al1_o_ap_vld : OUT STD_LOGIC;
    dec_rlt2_i : IN STD_LOGIC_VECTOR (30 downto 0);
    dec_rlt2_o : OUT STD_LOGIC_VECTOR (30 downto 0);
    dec_rlt2_o_ap_vld : OUT STD_LOGIC;
    dec_al2_i : IN STD_LOGIC_VECTOR (14 downto 0);
    dec_al2_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    dec_al2_o_ap_vld : OUT STD_LOGIC;
    dec_detl_i : IN STD_LOGIC_VECTOR (14 downto 0);
    dec_detl_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    dec_detl_o_ap_vld : OUT STD_LOGIC;
    il : IN STD_LOGIC_VECTOR (5 downto 0);
    dec_nbl_i : IN STD_LOGIC_VECTOR (14 downto 0);
    dec_nbl_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    dec_nbl_o_ap_vld : OUT STD_LOGIC;
    dec_plt1_i : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_plt1_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_plt1_o_ap_vld : OUT STD_LOGIC;
    dec_plt2_i : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_plt2_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_plt2_o_ap_vld : OUT STD_LOGIC;
    dec_rh1_i : IN STD_LOGIC_VECTOR (30 downto 0);
    dec_rh1_o : OUT STD_LOGIC_VECTOR (30 downto 0);
    dec_rh1_o_ap_vld : OUT STD_LOGIC;
    dec_ah1_i : IN STD_LOGIC_VECTOR (15 downto 0);
    dec_ah1_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    dec_ah1_o_ap_vld : OUT STD_LOGIC;
    dec_rh2_i : IN STD_LOGIC_VECTOR (30 downto 0);
    dec_rh2_o : OUT STD_LOGIC_VECTOR (30 downto 0);
    dec_rh2_o_ap_vld : OUT STD_LOGIC;
    dec_ah2_i : IN STD_LOGIC_VECTOR (14 downto 0);
    dec_ah2_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    dec_ah2_o_ap_vld : OUT STD_LOGIC;
    dec_deth_i : IN STD_LOGIC_VECTOR (14 downto 0);
    dec_deth_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    dec_deth_o_ap_vld : OUT STD_LOGIC;
    dec_nbh_i : IN STD_LOGIC_VECTOR (14 downto 0);
    dec_nbh_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    dec_nbh_o_ap_vld : OUT STD_LOGIC;
    dec_ph1_i : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_ph1_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_ph1_o_ap_vld : OUT STD_LOGIC;
    dec_ph2_i : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_ph2_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_ph2_o_ap_vld : OUT STD_LOGIC;
    xout1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    xout1_ap_vld : OUT STD_LOGIC;
    xout2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    xout2_ap_vld : OUT STD_LOGIC;
    dec_del_bpl_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dec_del_bpl_ce0 : OUT STD_LOGIC;
    dec_del_bpl_we0 : OUT STD_LOGIC;
    dec_del_bpl_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_del_bpl_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_del_bpl_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dec_del_bpl_ce1 : OUT STD_LOGIC;
    dec_del_bpl_we1 : OUT STD_LOGIC;
    dec_del_bpl_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_del_bpl_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_del_dltx_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dec_del_dltx_ce0 : OUT STD_LOGIC;
    dec_del_dltx_we0 : OUT STD_LOGIC;
    dec_del_dltx_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    dec_del_dltx_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    dec_del_dltx_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dec_del_dltx_ce1 : OUT STD_LOGIC;
    dec_del_dltx_we1 : OUT STD_LOGIC;
    dec_del_dltx_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    dec_del_dltx_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    dec_del_bph_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dec_del_bph_ce0 : OUT STD_LOGIC;
    dec_del_bph_we0 : OUT STD_LOGIC;
    dec_del_bph_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_del_bph_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_del_bph_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dec_del_bph_ce1 : OUT STD_LOGIC;
    dec_del_bph_we1 : OUT STD_LOGIC;
    dec_del_bph_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_del_bph_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_del_dhx_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dec_del_dhx_ce0 : OUT STD_LOGIC;
    dec_del_dhx_we0 : OUT STD_LOGIC;
    dec_del_dhx_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    dec_del_dhx_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    dec_del_dhx_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dec_del_dhx_ce1 : OUT STD_LOGIC;
    dec_del_dhx_we1 : OUT STD_LOGIC;
    dec_del_dhx_d1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    dec_del_dhx_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
    accumc_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    accumc_ce0 : OUT STD_LOGIC;
    accumc_we0 : OUT STD_LOGIC;
    accumc_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    accumc_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    accumc_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    accumc_ce1 : OUT STD_LOGIC;
    accumc_we1 : OUT STD_LOGIC;
    accumc_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    accumc_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    accumd_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    accumd_ce0 : OUT STD_LOGIC;
    accumd_we0 : OUT STD_LOGIC;
    accumd_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    accumd_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    accumd_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    accumd_ce1 : OUT STD_LOGIC;
    accumd_we1 : OUT STD_LOGIC;
    accumd_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    accumd_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of adpcm_main_decode is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv41_D4 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000011010100";
    constant ap_const_lv44_5A8 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000010110101000";
    constant ap_const_lv45_EDC : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000111011011100";
    constant ap_const_lv46_3C90 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000011110010010000";
    constant ap_const_lv42_3FFFFFFFD90 : STD_LOGIC_VECTOR (41 downto 0) := "111111111111111111111111111111110110010000";
    constant ap_const_lv42_3FFFFFFFCB8 : STD_LOGIC_VECTOR (41 downto 0) := "111111111111111111111111111111110010111000";
    constant ap_const_lv43_7FFFFFFFCB8 : STD_LOGIC_VECTOR (42 downto 0) := "1111111111111111111111111111111110010111000";
    constant ap_const_lv45_1FFFFFFFF36C : STD_LOGIC_VECTOR (44 downto 0) := "111111111111111111111111111111111001101101100";
    constant ap_const_lv39_7FFFFFFFD4 : STD_LOGIC_VECTOR (38 downto 0) := "111111111111111111111111111111111010100";
    constant ap_const_lv40_FFFFFFFFD4 : STD_LOGIC_VECTOR (39 downto 0) := "1111111111111111111111111111111111010100";
    constant ap_const_lv14_2310 : STD_LOGIC_VECTOR (13 downto 0) := "10001100010000";
    constant ap_const_lv14_39B0 : STD_LOGIC_VECTOR (13 downto 0) := "11100110110000";
    constant ap_const_lv14_1CF0 : STD_LOGIC_VECTOR (13 downto 0) := "01110011110000";
    constant ap_const_lv14_650 : STD_LOGIC_VECTOR (13 downto 0) := "00011001010000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv11_31E : STD_LOGIC_VECTOR (10 downto 0) := "01100011110";
    constant ap_const_lv11_72A : STD_LOGIC_VECTOR (10 downto 0) := "11100101010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv17_5800 : STD_LOGIC_VECTOR (16 downto 0) := "00101100000000000";
    constant ap_const_lv15_5800 : STD_LOGIC_VECTOR (14 downto 0) := "101100000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv17_4800 : STD_LOGIC_VECTOR (16 downto 0) := "00100100000000000";
    constant ap_const_lv15_4800 : STD_LOGIC_VECTOR (14 downto 0) := "100100000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_FFFFFF80 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111110000000";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv17_1FF80 : STD_LOGIC_VECTOR (16 downto 0) := "11111111110000000";
    constant ap_const_lv17_80 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_const_lv17_3000 : STD_LOGIC_VECTOR (16 downto 0) := "00011000000000000";
    constant ap_const_lv17_1D000 : STD_LOGIC_VECTOR (16 downto 0) := "11101000000000000";
    constant ap_const_lv15_5000 : STD_LOGIC_VECTOR (14 downto 0) := "101000000000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv18_3FF40 : STD_LOGIC_VECTOR (17 downto 0) := "111111111101000000";
    constant ap_const_lv18_C0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000011000000";
    constant ap_const_lv15_3C00 : STD_LOGIC_VECTOR (14 downto 0) := "011110000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal qq4_code4_table_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal qq4_code4_table_ce0 : STD_LOGIC;
    signal qq4_code4_table_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal qq6_code6_table_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal qq6_code6_table_ce0 : STD_LOGIC;
    signal qq6_code6_table_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal wl_code_table_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal wl_code_table_ce0 : STD_LOGIC;
    signal wl_code_table_q0 : STD_LOGIC_VECTOR (12 downto 0);
    signal ilb_table_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal ilb_table_ce0 : STD_LOGIC;
    signal ilb_table_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal storemerge_reg_534 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_659 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal reg_663 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal reg_670 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_676 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_571_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal reg_681 : STD_LOGIC_VECTOR (45 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal grp_fu_555_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal reg_685 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_603_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal reg_689 : STD_LOGIC_VECTOR (40 downto 0);
    signal reg_693 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal grp_fu_628_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal reg_698 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_608_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal reg_702 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_644_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal reg_706 : STD_LOGIC_VECTOR (44 downto 0);
    signal grp_fu_613_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal reg_710 : STD_LOGIC_VECTOR (44 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln472_1_reg_3364 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln760_fu_849_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln760_reg_3372 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln587_8_fu_859_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal dec_del_dltx_load_reg_3383 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln587_9_fu_864_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln589_40_fu_873_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal dec_del_dltx_load_1_reg_3399 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln589_41_fu_878_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal dec_al2_load_reg_3409 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln425_1_fu_913_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln425_1_reg_3425 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln425_2_reg_3430 : STD_LOGIC_VECTOR (15 downto 0);
    signal qq6_code6_table_load_reg_3438 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln640_fu_981_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln640_reg_3443 : STD_LOGIC_VECTOR (16 downto 0);
    signal wd3_19_reg_3449 : STD_LOGIC_VECTOR (31 downto 0);
    signal wd3_14_reg_3455 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln587_11_fu_1035_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal dec_del_dhx_load_reg_3466 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln587_12_fu_1044_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln589_55_fu_1053_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal dec_del_dhx_load_1_reg_3481 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln589_56_fu_1058_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal dec_ah2_load_reg_3491 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln653_2_reg_3507 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln668_2_fu_1156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln668_2_reg_3517 : STD_LOGIC_VECTOR (0 downto 0);
    signal wd3_22_reg_3521 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln679_18_fu_1185_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln679_18_reg_3527 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln679_17_fu_1188_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln679_17_reg_3536 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln517_1_fu_1194_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_575_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln589_reg_3546 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln589_43_fu_1203_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal dec_del_dltx_load_2_reg_3556 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln589_44_fu_1208_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln589_46_fu_1217_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal dec_del_dltx_load_3_reg_3572 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln589_47_fu_1222_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal dec_al1_load_reg_3582 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_563_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal mul_ln604_reg_3600 : STD_LOGIC_VECTOR (46 downto 0);
    signal trunc_ln12_reg_3605 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln14_reg_3610 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln668_fu_1338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln668_reg_3620 : STD_LOGIC_VECTOR (0 downto 0);
    signal wd3_15_reg_3624 : STD_LOGIC_VECTOR (31 downto 0);
    signal wd3_16_reg_3630 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_559_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln589_14_reg_3636 : STD_LOGIC_VECTOR (45 downto 0);
    signal dec_del_bph_load_2_reg_3641 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_58_fu_1397_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal dec_del_dhx_load_2_reg_3652 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln589_59_fu_1402_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal dec_del_bph_load_3_reg_3663 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_61_fu_1407_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal dec_del_dhx_load_3_reg_3674 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln589_62_fu_1412_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal dec_ah1_load_reg_3684 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_567_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal mul_ln604_2_reg_3702 : STD_LOGIC_VECTOR (46 downto 0);
    signal accumd_load_1_reg_3707 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln516_4_fu_1478_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln517_3_fu_1483_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal accumc_load_3_reg_3722 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln589_10_reg_3728 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln589_11_reg_3733 : STD_LOGIC_VECTOR (45 downto 0);
    signal dec_del_bpl_load_4_reg_3738 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_49_fu_1488_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal dec_del_dltx_load_4_reg_3749 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln589_50_fu_1493_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal dec_del_bpl_load_5_reg_3759 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_52_fu_1498_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal dec_del_dltx_load_5_reg_3770 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln589_53_fu_1503_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_579_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal mul_ln600_reg_3780 : STD_LOGIC_VECTOR (46 downto 0);
    signal mul_ln589_15_reg_3785 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln589_16_reg_3790 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln589_64_fu_1541_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal dec_del_dhx_load_4_reg_3800 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln589_65_fu_1546_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal dec_del_bph_load_5_reg_3810 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_67_fu_1551_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal dec_del_dhx_load_5_reg_3821 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln589_68_fu_1556_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_583_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal mul_ln600_2_reg_3831 : STD_LOGIC_VECTOR (46 downto 0);
    signal accumd_load_3_reg_3841 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln517_5_fu_1620_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal sext_ln516_8_fu_1625_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_fu_1644_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_reg_3866 : STD_LOGIC_VECTOR (32 downto 0);
    signal mul_ln589_13_reg_3871 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_fu_1650_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_reg_3876 : STD_LOGIC_VECTOR (45 downto 0);
    signal trunc_ln11_reg_3881 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln589_18_reg_3886 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_14_fu_1684_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_14_reg_3891 : STD_LOGIC_VECTOR (45 downto 0);
    signal trunc_ln605_2_reg_3896 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_18_fu_1776_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_18_reg_3901 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_19_fu_1806_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_19_reg_3906 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_20_fu_1837_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_20_reg_3911 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_639_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal mul_ln516_reg_3916 : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_fu_618_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln516_5_reg_3921 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_623_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln517_3_reg_3926 : STD_LOGIC_VECTOR (45 downto 0);
    signal accumd_load_5_reg_3931 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln517_7_fu_1847_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal sext_ln516_10_fu_1852_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal sext_ln516_11_fu_1857_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln516_12_fu_1862_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal add_ln521_fu_1876_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln521_reg_3966 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln422_fu_1936_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln422_reg_3971 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln425_fu_1941_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln425_reg_3976 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln440_fu_1948_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln440_reg_3981 : STD_LOGIC_VECTOR (31 downto 0);
    signal wd3_17_reg_3987 : STD_LOGIC_VECTOR (31 downto 0);
    signal wd3_18_reg_3992 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_fu_2001_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_reg_3998 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_12_fu_2007_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_12_reg_4003 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_13_fu_2013_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_13_reg_4008 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_14_fu_2019_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_14_reg_4013 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_15_fu_2025_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_15_reg_4018 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_16_fu_2031_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_16_reg_4023 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln481_fu_2083_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln481_reg_4028 : STD_LOGIC_VECTOR (31 downto 0);
    signal wd3_26_reg_4035 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_21_fu_2162_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_21_reg_4041 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_22_fu_2168_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln679_22_reg_4046 : STD_LOGIC_VECTOR (27 downto 0);
    signal accumd_load_7_reg_4051 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_634_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal mul_ln517_5_reg_4057 : STD_LOGIC_VECTOR (41 downto 0);
    signal accumd_load_8_reg_4062 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln516_15_fu_2184_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_654_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp34_reg_4073 : STD_LOGIC_VECTOR (39 downto 0);
    signal add_ln520_1_fu_2189_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal add_ln520_1_reg_4078 : STD_LOGIC_VECTOR (44 downto 0);
    signal add_ln521_2_fu_2200_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln521_2_reg_4083 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln684_13_fu_2286_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_13_reg_4088 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_14_fu_2310_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_14_reg_4093 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_15_fu_2334_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_15_reg_4098 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_16_fu_2358_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln705_fu_2371_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln684_22_fu_2427_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln705_5_fu_2440_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln504_fu_2480_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln504_reg_4145 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln505_fu_2486_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln505_reg_4150 : STD_LOGIC_VECTOR (31 downto 0);
    signal xa1_fu_2516_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal xa1_reg_4155 : STD_LOGIC_VECTOR (36 downto 0);
    signal add_ln520_5_fu_2555_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln520_5_reg_4160 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp35_fu_2560_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp35_reg_4165 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln521_4_fu_2566_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln521_4_reg_4170 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_34_reg_4175 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal tmp_35_reg_4181 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_reg_4186 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_reg_4192 : STD_LOGIC_VECTOR (0 downto 0);
    signal apl2_fu_2825_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal apl2_reg_4202 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal icmp_ln719_fu_2831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln719_reg_4207 : STD_LOGIC_VECTOR (0 downto 0);
    signal apl2_8_fu_2935_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal apl2_8_reg_4212 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln719_2_fu_2941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln719_2_reg_4217 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln521_fu_2971_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal sub_ln521_reg_4222 : STD_LOGIC_VECTOR (36 downto 0);
    signal grp_fu_649_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal mul_ln521_reg_4227 : STD_LOGIC_VECTOR (38 downto 0);
    signal apl1_fu_3048_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal apl1_reg_4232 : STD_LOGIC_VECTOR (17 downto 0);
    signal wd3_20_fu_3054_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal wd3_20_reg_4238 : STD_LOGIC_VECTOR (14 downto 0);
    signal apl1_11_fu_3131_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal apl1_11_reg_4244 : STD_LOGIC_VECTOR (17 downto 0);
    signal wd3_28_fu_3137_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal wd3_28_reg_4250 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln521_8_fu_3206_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal add_ln521_8_reg_4256 : STD_LOGIC_VECTOR (44 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_storemerge_reg_534 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_storemerge28_reg_545 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln425_fu_734_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln428_fu_744_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln656_2_fu_1151_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln656_fu_1333_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal add_ln452_fu_2386_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal apl1_10_fu_3250_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal apl2_7_fu_2996_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln11_fu_1523_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal select_ln643_fu_1299_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln496_fu_2459_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal apl1_14_fu_3302_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal apl2_10_fu_3079_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln657_2_fu_1458_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln763_fu_1117_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal add_ln684_fu_2236_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_12_fu_2261_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal add_ln684_17_fu_1605_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal wd3_27_fu_1575_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal wd3_23_fu_1716_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal wd3_24_fu_1740_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal wd3_25_fu_2103_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_555_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_555_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_559_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_559_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_571_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_571_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_575_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_575_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_587_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_591_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_595_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_599_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_603_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_603_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_608_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_608_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_613_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_613_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_618_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_623_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_628_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_628_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_634_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_639_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_644_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_644_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_649_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_654_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln425_1_fu_724_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_3_fu_757_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_757_p6 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln472_fu_775_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln472_fu_775_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal shl_ln15_fu_799_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln759_2_fu_807_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln759_fu_795_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln759_fu_811_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal wd_fu_817_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_fu_831_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_4_fu_831_p6 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln758_fu_827_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln760_fu_845_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln587_fu_855_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln587_8_fu_859_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln587_9_fu_864_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln589_fu_869_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_40_fu_873_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_41_fu_878_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal pl2_fu_891_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln425_fu_921_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln425_fu_921_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln_fu_945_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln639_2_fu_953_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln639_fu_941_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln639_fu_957_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln13_fu_963_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln640_2_fu_977_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln640_fu_973_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln12_fu_987_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln12_fu_987_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln587_fu_855_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_fu_995_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal shl_ln672_s_fu_1011_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln672_s_fu_1011_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_fu_869_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_12_fu_1019_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln587_11_fu_1035_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln587_12_fu_1044_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln589_54_fu_1049_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_55_fu_1053_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_56_fu_1058_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal pl2_2_fu_1071_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln756_fu_1089_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_fu_1092_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln761_fu_1100_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln763_fu_1111_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln756_fu_1107_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal wd1_2_fu_1131_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln672_16_fu_1161_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln672_16_fu_1161_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_54_fu_1049_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_18_fu_1169_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln517_1_fu_1194_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_42_fu_1199_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_43_fu_1203_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_44_fu_1208_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln589_45_fu_1213_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_46_fu_1217_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_47_fu_1222_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal pl_fu_1235_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln428_fu_1256_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln428_fu_1256_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln636_fu_1271_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_1274_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln641_fu_1282_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln643_fu_1293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln636_fu_1289_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal wd1_fu_1313_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln672_11_fu_1343_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln672_11_fu_1343_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_42_fu_1199_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_13_fu_1351_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal shl_ln672_12_fu_1367_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln672_12_fu_1367_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_45_fu_1213_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_14_fu_1375_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_58_fu_1397_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_59_fu_1402_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln589_61_fu_1407_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_62_fu_1412_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal pl_5_fu_1425_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln656_2_fu_1443_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln656_2cast_fu_1448_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal wd3_21_fu_1452_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln516_4_fu_1478_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln517_3_fu_1483_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_49_fu_1488_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_50_fu_1493_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln589_52_fu_1498_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_53_fu_1503_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln656_fu_1508_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln656cast_fu_1513_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal wd3_fu_1517_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln589_64_fu_1541_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_65_fu_1546_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln589_67_fu_1551_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_68_fu_1556_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln672_15_fu_1561_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln587_10_fu_1537_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_17_fu_1569_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln679_19_fu_1586_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_fu_1589_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_17_fu_1597_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln517_5_fu_1620_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_10_cast_fu_1640_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln517_fu_1612_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal pl_4_fu_1655_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal pl_6_fu_1689_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal shl_ln672_17_fu_1703_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_57_fu_1672_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_19_fu_1710_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal shl_ln672_18_fu_1727_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_60_fu_1678_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_20_fu_1734_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal mul_ln679_18_fu_1751_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln679_18_fu_1751_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln679_20_fu_1756_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_38_fu_1760_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_18_fu_1768_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_19_fu_1781_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln679_19_fu_1781_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln679_21_fu_1786_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_fu_1790_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_19_fu_1798_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_20_fu_1812_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln679_20_fu_1812_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln679_22_fu_1817_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_fu_1821_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_20_fu_1829_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln517_7_fu_1847_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln516_11_fu_1857_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln516_12_fu_1862_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln516_1_fu_1843_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln589_11_fu_1910_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_12_fu_1915_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_10_fu_1906_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal zl_4_fu_1920_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal trunc_ln_fu_1926_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln425_1_fu_1945_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln672_13_fu_1954_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_48_fu_1894_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_15_fu_1961_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal shl_ln672_14_fu_1978_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_51_fu_1900_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_16_fu_1985_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal mul_ln679_fu_2001_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln679_12_fu_2007_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln679_13_fu_2013_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln679_14_fu_2019_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln679_15_fu_2025_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln679_16_fu_2031_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln589_16_fu_2054_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_17_fu_2059_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_15_fu_2050_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal zl_6_fu_2064_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln472_1_fu_2080_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln591_2_fu_2070_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln672_19_fu_2089_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_63_fu_2037_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_21_fu_2097_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal shl_ln672_20_fu_2114_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_66_fu_2044_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_22_fu_2121_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal mul_ln679_21_fu_2137_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln679_21_fu_2137_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln679_23_fu_2142_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_41_fu_2146_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_21_fu_2154_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_22_fu_2168_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln516_15_fu_2184_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln517_4_fu_2177_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal sext_ln516_7_fu_2180_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln521_1_fu_2195_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln516_5_fu_2173_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln428_2_fu_2209_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln679_fu_2217_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_2220_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_fu_2228_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln679_13_fu_2242_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_fu_2245_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_12_fu_2253_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln679_14_fu_2267_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_fu_2270_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_13_fu_2278_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln679_15_fu_2291_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_fu_2294_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_14_fu_2302_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln679_16_fu_2315_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_fu_2318_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_15_fu_2326_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln679_17_fu_2339_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_33_fu_2342_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_16_fu_2350_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln428_1_fu_2206_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln679_24_fu_2408_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_fu_2411_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_22_fu_2419_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln493_fu_2455_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln430_fu_2212_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln16_fu_2492_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal shl_ln511_1_fu_2504_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln511_fu_2500_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal sext_ln511_1_fu_2512_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal shl_ln18_fu_2530_p3 : STD_LOGIC_VECTOR (38 downto 0);
    signal sext_ln517_8_fu_2526_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal add_ln520_4_fu_2545_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal sext_ln520_4_fu_2551_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln520_fu_2541_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln516_fu_2522_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln516_13_fu_2537_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_587_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_591_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_595_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_599_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln17_fu_2607_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln17_fu_2607_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal shl_ln516_1_fu_2619_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln516_1_fu_2619_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal sext_ln516_2_fu_2615_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal sext_ln516_3_fu_2627_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal shl_ln516_2_fu_2637_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln516_2_fu_2637_p3 : STD_LOGIC_VECTOR (38 downto 0);
    signal sub_ln516_fu_2631_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal sext_ln406_fu_2604_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal add_ln520_fu_2652_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal sext_ln517_2_fu_2645_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal add_ln520_2_fu_2662_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal sext_ln520_2_fu_2658_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal add_ln520_3_fu_2667_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal sext_ln520_1_fu_2649_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal add_ln520_6_fu_2677_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln520_5_fu_2683_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln520_7_fu_2687_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln520_6_fu_2692_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln520_8_fu_2696_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln520_3_fu_2673_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal xa1_1_fu_2701_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal wd2_fu_2730_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln702_fu_2737_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_s_fu_2747_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln706_fu_2741_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln707_fu_2756_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1_fu_2760_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln705_fu_2770_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln13_fu_2781_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln716_fu_2788_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln604_fu_2727_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln716_fu_2792_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln15_fu_2798_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln716_4_fu_2808_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln716_fu_2812_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln716_fu_2819_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln708_4_fu_2777_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal wd2_2_fu_2840_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln702_2_fu_2847_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_2_fu_2857_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln706_2_fu_2851_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln707_2_fu_2866_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_5_fu_2870_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln705_2_fu_2880_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln716_2_fu_2891_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln716_5_fu_2898_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln604_5_fu_2837_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln716_2_fu_2902_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln716_2_fu_2908_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln716_6_fu_2918_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln716_2_fu_2922_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln716_5_fu_2929_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln708_5_fu_2887_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln19_fu_2947_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln19_fu_2947_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal shl_ln521_1_fu_2959_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln521_1_fu_2959_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln521_fu_2955_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal sext_ln521_1_fu_2967_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal apl2_6_fu_2980_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln721_fu_2990_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln703_fu_2986_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln14_fu_3010_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln734_fu_3017_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln602_fu_2977_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sub_ln734_fu_3021_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln16_fu_3027_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln735_fu_3041_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln735_fu_3037_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal apl2_9_fu_3063_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln721_2_fu_3073_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln703_2_fu_3069_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln734_2_fu_3093_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln734_2_fu_3100_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln602_2_fu_3060_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sub_ln734_2_fu_3104_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln734_2_fu_3110_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln735_2_fu_3124_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln735_2_fu_3120_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal shl_ln517_1_fu_3143_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal shl_ln517_2_fu_3154_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal sext_ln517_10_fu_3150_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal sext_ln517_11_fu_3161_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal sub_ln517_fu_3165_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal sext_ln521_4_fu_3178_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal sub_ln521_cast_fu_3175_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal add_ln521_6_fu_3187_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal sext_ln521_5_fu_3192_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln516_14_fu_3171_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal add_ln521_7_fu_3196_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln521_6_fu_3202_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal add_ln521_5_fu_3181_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal zext_ln733_fu_3212_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln745_fu_3218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal apl1_8_fu_3223_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln733_4_fu_3215_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal apl1_9_fu_3234_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln747_fu_3240_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln747_fu_3244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln733_fu_3230_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln733_5_fu_3264_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln745_2_fu_3270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal apl1_12_fu_3275_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln733_6_fu_3267_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal apl1_13_fu_3286_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln747_2_fu_3292_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln747_2_fu_3296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln733_2_fu_3282_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln521_3_fu_3316_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln521_7_fu_3324_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln521_3_fu_3319_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal xa2_fu_3327_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal mul_ln425_fu_921_p10 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln472_fu_775_p10 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_condition_2565 : BOOLEAN;
    signal ap_condition_2569 : BOOLEAN;
    signal ap_condition_2573 : BOOLEAN;
    signal ap_condition_2577 : BOOLEAN;
    signal ap_condition_2581 : BOOLEAN;
    signal ap_condition_2585 : BOOLEAN;
    signal ap_condition_2589 : BOOLEAN;
    signal ap_condition_2593 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component adpcm_main_mul_14s_32s_46_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (45 downto 0) );
    end component;


    component adpcm_main_mul_15s_32s_47_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component adpcm_main_mul_16s_32s_46_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (45 downto 0) );
    end component;


    component adpcm_main_mul_16s_32s_47_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component adpcm_main_mul_32s_32s_64_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component adpcm_main_mul_32s_9ns_41_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (40 downto 0) );
    end component;


    component adpcm_main_mul_32s_12ns_44_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (43 downto 0) );
    end component;


    component adpcm_main_mul_32s_13ns_45_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (44 downto 0) );
    end component;


    component adpcm_main_mul_32s_15ns_46_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (45 downto 0) );
    end component;


    component adpcm_main_mul_32s_11s_42_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;


    component adpcm_main_mul_32s_11s_43_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (42 downto 0) );
    end component;


    component adpcm_main_mul_32s_13s_45_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (44 downto 0) );
    end component;


    component adpcm_main_mul_33s_7s_39_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (32 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (38 downto 0) );
    end component;


    component adpcm_main_mul_33s_7s_40_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (32 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component adpcm_main_mux_4_2_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        din3 : IN STD_LOGIC_VECTOR (13 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component adpcm_main_mul_14s_15ns_29_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component adpcm_main_mux_4_2_11_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        din3 : IN STD_LOGIC_VECTOR (10 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component adpcm_main_mul_16s_15ns_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component adpcm_main_mul_14s_14s_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component adpcm_main_mul_16s_16s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component adpcm_main_encode_qq4_code4_table_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component adpcm_main_decode_qq6_code6_table_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component adpcm_main_encode_wl_code_table_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component adpcm_main_encode_ilb_table_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;



begin
    qq4_code4_table_U : component adpcm_main_encode_qq4_code4_table_ROM_AUTO_1R
    generic map (
        DataWidth => 16,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => qq4_code4_table_address0,
        ce0 => qq4_code4_table_ce0,
        q0 => qq4_code4_table_q0);

    qq6_code6_table_U : component adpcm_main_decode_qq6_code6_table_ROM_AUTO_1R
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => qq6_code6_table_address0,
        ce0 => qq6_code6_table_ce0,
        q0 => qq6_code6_table_q0);

    wl_code_table_U : component adpcm_main_encode_wl_code_table_ROM_AUTO_1R
    generic map (
        DataWidth => 13,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => wl_code_table_address0,
        ce0 => wl_code_table_ce0,
        q0 => wl_code_table_q0);

    ilb_table_U : component adpcm_main_encode_ilb_table_ROM_AUTO_1R
    generic map (
        DataWidth => 12,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ilb_table_address0,
        ce0 => ilb_table_ce0,
        q0 => ilb_table_q0);

    mul_14s_32s_46_2_1_U155 : component adpcm_main_mul_14s_32s_46_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 14,
        din1_WIDTH => 32,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_555_p0,
        din1 => grp_fu_555_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_555_p2);

    mul_14s_32s_46_2_1_U156 : component adpcm_main_mul_14s_32s_46_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 14,
        din1_WIDTH => 32,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_559_p0,
        din1 => grp_fu_559_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_559_p2);

    mul_15s_32s_47_2_1_U157 : component adpcm_main_mul_15s_32s_47_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 15,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => dec_al2_i,
        din1 => pl2_fu_891_p3,
        ce => ap_const_logic_1,
        dout => grp_fu_563_p2);

    mul_15s_32s_47_2_1_U158 : component adpcm_main_mul_15s_32s_47_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 15,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => dec_ah2_i,
        din1 => pl2_2_fu_1071_p3,
        ce => ap_const_logic_1,
        dout => grp_fu_567_p2);

    mul_16s_32s_46_2_1_U159 : component adpcm_main_mul_16s_32s_46_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 32,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_571_p0,
        din1 => grp_fu_571_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_571_p2);

    mul_16s_32s_46_2_1_U160 : component adpcm_main_mul_16s_32s_46_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 32,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_575_p0,
        din1 => grp_fu_575_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_575_p2);

    mul_16s_32s_47_2_1_U161 : component adpcm_main_mul_16s_32s_47_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => dec_al1_i,
        din1 => pl_fu_1235_p3,
        ce => ap_const_logic_1,
        dout => grp_fu_579_p2);

    mul_16s_32s_47_2_1_U162 : component adpcm_main_mul_16s_32s_47_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => dec_ah1_i,
        din1 => pl_5_fu_1425_p3,
        ce => ap_const_logic_1,
        dout => grp_fu_583_p2);

    mul_32s_32s_64_2_1_U163 : component adpcm_main_mul_32s_32s_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => dec_plt1_i,
        din1 => grp_fu_587_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_587_p2);

    mul_32s_32s_64_2_1_U164 : component adpcm_main_mul_32s_32s_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => dec_plt2_i,
        din1 => grp_fu_591_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_591_p2);

    mul_32s_32s_64_2_1_U165 : component adpcm_main_mul_32s_32s_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => dec_ph1_i,
        din1 => grp_fu_595_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_595_p2);

    mul_32s_32s_64_2_1_U166 : component adpcm_main_mul_32s_32s_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => dec_ph2_i,
        din1 => grp_fu_599_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_599_p2);

    mul_32s_9ns_41_2_1_U167 : component adpcm_main_mul_32s_9ns_41_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 9,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_603_p0,
        din1 => grp_fu_603_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_603_p2);

    mul_32s_12ns_44_2_1_U168 : component adpcm_main_mul_32s_12ns_44_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 12,
        dout_WIDTH => 44)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_608_p0,
        din1 => grp_fu_608_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_608_p2);

    mul_32s_13ns_45_2_1_U169 : component adpcm_main_mul_32s_13ns_45_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 13,
        dout_WIDTH => 45)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_613_p0,
        din1 => grp_fu_613_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_613_p2);

    mul_32s_15ns_46_2_1_U170 : component adpcm_main_mul_32s_15ns_46_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 15,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => accumd_q0,
        din1 => grp_fu_618_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_618_p2);

    mul_32s_15ns_46_2_1_U171 : component adpcm_main_mul_32s_15ns_46_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 15,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => accumc_q0,
        din1 => grp_fu_623_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_623_p2);

    mul_32s_11s_42_2_1_U172 : component adpcm_main_mul_32s_11s_42_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 11,
        dout_WIDTH => 42)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_628_p0,
        din1 => grp_fu_628_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_628_p2);

    mul_32s_11s_42_2_1_U173 : component adpcm_main_mul_32s_11s_42_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 11,
        dout_WIDTH => 42)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => accumc_q0,
        din1 => grp_fu_634_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_634_p2);

    mul_32s_11s_43_2_1_U174 : component adpcm_main_mul_32s_11s_43_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 11,
        dout_WIDTH => 43)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => accumc_load_3_reg_3722,
        din1 => grp_fu_639_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_639_p2);

    mul_32s_13s_45_2_1_U175 : component adpcm_main_mul_32s_13s_45_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 13,
        dout_WIDTH => 45)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_644_p0,
        din1 => grp_fu_644_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_644_p2);

    mul_33s_7s_39_2_1_U176 : component adpcm_main_mul_33s_7s_39_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 33,
        din1_WIDTH => 7,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp35_reg_4165,
        din1 => grp_fu_649_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_649_p2);

    mul_33s_7s_40_2_1_U177 : component adpcm_main_mul_33s_7s_40_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 33,
        din1_WIDTH => 7,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_reg_3866,
        din1 => grp_fu_654_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_654_p2);

    mux_4_2_14_1_1_U178 : component adpcm_main_mux_4_2_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        din2_WIDTH => 14,
        din3_WIDTH => 14,
        din4_WIDTH => 2,
        dout_WIDTH => 14)
    port map (
        din0 => ap_const_lv14_2310,
        din1 => ap_const_lv14_39B0,
        din2 => ap_const_lv14_1CF0,
        din3 => ap_const_lv14_650,
        din4 => tmp_3_fu_757_p5,
        dout => tmp_3_fu_757_p6);

    mul_14s_15ns_29_1_1_U179 : component adpcm_main_mul_14s_15ns_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 15,
        dout_WIDTH => 29)
    port map (
        din0 => tmp_3_fu_757_p6,
        din1 => mul_ln472_fu_775_p1,
        dout => mul_ln472_fu_775_p2);

    mux_4_2_11_1_1_U180 : component adpcm_main_mux_4_2_11_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        din2_WIDTH => 11,
        din3_WIDTH => 11,
        din4_WIDTH => 2,
        dout_WIDTH => 11)
    port map (
        din0 => ap_const_lv11_31E,
        din1 => ap_const_lv11_72A,
        din2 => ap_const_lv11_31E,
        din3 => ap_const_lv11_72A,
        din4 => tmp_4_fu_831_p5,
        dout => tmp_4_fu_831_p6);

    mul_16s_15ns_31_1_1_U181 : component adpcm_main_mul_16s_15ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        dout_WIDTH => 31)
    port map (
        din0 => qq4_code4_table_q0,
        din1 => mul_ln425_fu_921_p1,
        dout => mul_ln425_fu_921_p2);

    mul_14s_14s_28_1_1_U182 : component adpcm_main_mul_14s_14s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        din0 => trunc_ln472_1_reg_3364,
        din1 => dec_del_dhx_q1,
        dout => mul_ln679_17_fu_1188_p2);

    mul_16s_15ns_31_1_1_U183 : component adpcm_main_mul_16s_15ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        dout_WIDTH => 31)
    port map (
        din0 => qq6_code6_table_load_reg_3438,
        din1 => mul_ln428_fu_1256_p1,
        dout => mul_ln428_fu_1256_p2);

    mul_14s_14s_28_1_1_U184 : component adpcm_main_mul_14s_14s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln679_18_fu_1751_p0,
        din1 => dec_del_dhx_load_1_reg_3481,
        dout => mul_ln679_18_fu_1751_p2);

    mul_14s_14s_28_1_1_U185 : component adpcm_main_mul_14s_14s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln679_19_fu_1781_p0,
        din1 => dec_del_dhx_load_2_reg_3652,
        dout => mul_ln679_19_fu_1781_p2);

    mul_14s_14s_28_1_1_U186 : component adpcm_main_mul_14s_14s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln679_20_fu_1812_p0,
        din1 => dec_del_dhx_load_3_reg_3674,
        dout => mul_ln679_20_fu_1812_p2);

    mul_16s_16s_32_1_1_U187 : component adpcm_main_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => mul_ln679_fu_2001_p0,
        din1 => dec_del_dltx_load_reg_3383,
        dout => mul_ln679_fu_2001_p2);

    mul_16s_16s_32_1_1_U188 : component adpcm_main_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => mul_ln679_12_fu_2007_p0,
        din1 => dec_del_dltx_load_1_reg_3399,
        dout => mul_ln679_12_fu_2007_p2);

    mul_16s_16s_32_1_1_U189 : component adpcm_main_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => mul_ln679_13_fu_2013_p0,
        din1 => dec_del_dltx_load_2_reg_3556,
        dout => mul_ln679_13_fu_2013_p2);

    mul_16s_16s_32_1_1_U190 : component adpcm_main_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => mul_ln679_14_fu_2019_p0,
        din1 => dec_del_dltx_load_3_reg_3572,
        dout => mul_ln679_14_fu_2019_p2);

    mul_16s_16s_32_1_1_U191 : component adpcm_main_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => mul_ln679_15_fu_2025_p0,
        din1 => dec_del_dltx_load_4_reg_3749,
        dout => mul_ln679_15_fu_2025_p2);

    mul_16s_16s_32_1_1_U192 : component adpcm_main_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => mul_ln679_16_fu_2031_p0,
        din1 => dec_del_dltx_load_5_reg_3770,
        dout => mul_ln679_16_fu_2031_p2);

    mul_14s_14s_28_1_1_U193 : component adpcm_main_mul_14s_14s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln679_21_fu_2137_p0,
        din1 => dec_del_dhx_load_4_reg_3800,
        dout => mul_ln679_21_fu_2137_p2);

    mul_14s_14s_28_1_1_U194 : component adpcm_main_mul_14s_14s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln679_22_fu_2168_p0,
        din1 => dec_del_dhx_load_5_reg_3821,
        dout => mul_ln679_22_fu_2168_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage8_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter0_storemerge28_reg_545_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
                if ((ap_const_boolean_1 = ap_condition_2569)) then 
                    ap_phi_reg_pp0_iter0_storemerge28_reg_545 <= sub_ln672_22_fu_2121_p2(39 downto 8);
                elsif ((ap_const_boolean_1 = ap_condition_2565)) then 
                    ap_phi_reg_pp0_iter0_storemerge28_reg_545 <= add_ln684_22_fu_2427_p2;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_storemerge_reg_534_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
                if ((ap_const_boolean_1 = ap_condition_2577)) then 
                    ap_phi_reg_pp0_iter0_storemerge_reg_534 <= sub_ln672_16_fu_1985_p2(39 downto 8);
                elsif ((ap_const_boolean_1 = ap_condition_2573)) then 
                    ap_phi_reg_pp0_iter0_storemerge_reg_534 <= add_ln684_16_fu_2358_p2;
                end if;
            end if; 
        end if;
    end process;

    reg_663_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                reg_663 <= accumc_q0;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                reg_663 <= accumc_q1;
            end if; 
        end if;
    end process;

    reg_670_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
                if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    reg_670 <= accumd_q1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    reg_670 <= accumd_q0;
                end if;
            end if; 
        end if;
    end process;

    reg_693_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                reg_693 <= accumc_q1;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
                reg_693 <= accumc_q0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                accumc_load_3_reg_3722 <= accumc_q1;
                accumd_load_1_reg_3707 <= accumd_q0;
                dec_del_bph_load_2_reg_3641 <= dec_del_bph_q1;
                dec_del_bph_load_3_reg_3663 <= dec_del_bph_q0;
                dec_del_dhx_load_2_reg_3652 <= dec_del_dhx_q0;
                dec_del_dhx_load_3_reg_3674 <= dec_del_dhx_q1;
                dec_del_dltx_load_2_reg_3556 <= dec_del_dltx_q0;
                dec_del_dltx_load_3_reg_3572 <= dec_del_dltx_q1;
                mul_ln589_14_reg_3636 <= grp_fu_559_p2;
                mul_ln589_reg_3546 <= grp_fu_575_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                accumd_load_3_reg_3841 <= accumd_q1;
                dec_del_bph_load_5_reg_3810 <= dec_del_bph_q0;
                dec_del_bpl_load_4_reg_3738 <= dec_del_bpl_q1;
                dec_del_bpl_load_5_reg_3759 <= dec_del_bpl_q0;
                dec_del_dhx_load_4_reg_3800 <= dec_del_dhx_q1;
                dec_del_dhx_load_5_reg_3821 <= dec_del_dhx_q0;
                dec_del_dltx_load_4_reg_3749 <= dec_del_dltx_q1;
                dec_del_dltx_load_5_reg_3770 <= dec_del_dltx_q0;
                mul_ln589_10_reg_3728 <= grp_fu_571_p2;
                mul_ln589_11_reg_3733 <= grp_fu_575_p2;
                mul_ln589_15_reg_3785 <= grp_fu_555_p2;
                mul_ln589_16_reg_3790 <= grp_fu_559_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                accumd_load_5_reg_3931 <= accumd_q0;
                mul_ln589_13_reg_3871 <= grp_fu_575_p2;
                mul_ln589_18_reg_3886 <= grp_fu_559_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                accumd_load_7_reg_4051 <= accumd_q1;
                accumd_load_8_reg_4062 <= accumd_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                add_ln422_reg_3971 <= add_ln422_fu_1936_p2;
                add_ln440_reg_3981 <= add_ln440_fu_1948_p2;
                add_ln481_reg_4028 <= add_ln481_fu_2083_p2;
                add_ln520_1_reg_4078 <= add_ln520_1_fu_2189_p2;
                add_ln521_2_reg_4083 <= add_ln521_2_fu_2200_p2;
                add_ln684_21_reg_4041 <= add_ln684_21_fu_2162_p2;
                mul_ln517_5_reg_4057 <= grp_fu_634_p2;
                mul_ln679_12_reg_4003 <= mul_ln679_12_fu_2007_p2;
                mul_ln679_13_reg_4008 <= mul_ln679_13_fu_2013_p2;
                mul_ln679_14_reg_4013 <= mul_ln679_14_fu_2019_p2;
                mul_ln679_15_reg_4018 <= mul_ln679_15_fu_2025_p2;
                mul_ln679_16_reg_4023 <= mul_ln679_16_fu_2031_p2;
                mul_ln679_22_reg_4046 <= mul_ln679_22_fu_2168_p2;
                mul_ln679_reg_3998 <= mul_ln679_fu_2001_p2;
                tmp34_reg_4073 <= grp_fu_654_p2;
                trunc_ln425_reg_3976 <= trunc_ln425_fu_1941_p1;
                wd3_17_reg_3987 <= sub_ln672_15_fu_1961_p2(39 downto 8);
                wd3_18_reg_3992 <= sub_ln672_16_fu_1985_p2(39 downto 8);
                wd3_26_reg_4035 <= sub_ln672_22_fu_2121_p2(39 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                add_ln505_reg_4150 <= add_ln505_fu_2486_p2;
                add_ln520_5_reg_4160 <= add_ln520_5_fu_2555_p2;
                add_ln521_4_reg_4170 <= add_ln521_4_fu_2566_p2;
                add_ln684_13_reg_4088 <= add_ln684_13_fu_2286_p2;
                add_ln684_14_reg_4093 <= add_ln684_14_fu_2310_p2;
                add_ln684_15_reg_4098 <= add_ln684_15_fu_2334_p2;
                sub_ln504_reg_4145 <= sub_ln504_fu_2480_p2;
                tmp35_reg_4165 <= tmp35_fu_2560_p2;
                    xa1_reg_4155(36 downto 2) <= xa1_fu_2516_p2(36 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln521_8_reg_4256 <= add_ln521_8_fu_3206_p2;
                add_ln760_reg_3372 <= add_ln760_fu_849_p2;
                apl1_11_reg_4244 <= apl1_11_fu_3131_p2;
                apl1_reg_4232 <= apl1_fu_3048_p2;
                trunc_ln472_1_reg_3364 <= mul_ln472_fu_775_p2(28 downto 15);
                wd3_20_reg_4238 <= wd3_20_fu_3054_p2;
                wd3_28_reg_4250 <= wd3_28_fu_3137_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                add_ln521_reg_3966 <= add_ln521_fu_1876_p2;
                add_ln589_14_reg_3891 <= add_ln589_14_fu_1684_p2;
                add_ln589_reg_3876 <= add_ln589_fu_1650_p2;
                add_ln684_18_reg_3901 <= add_ln684_18_fu_1776_p2;
                add_ln684_19_reg_3906 <= add_ln684_19_fu_1806_p2;
                add_ln684_20_reg_3911 <= add_ln684_20_fu_1837_p2;
                mul_ln516_5_reg_3921 <= grp_fu_618_p2;
                mul_ln516_reg_3916 <= grp_fu_639_p2;
                mul_ln517_3_reg_3926 <= grp_fu_623_p2;
                trunc_ln11_reg_3881 <= pl_4_fu_1655_p2(46 downto 15);
                trunc_ln605_2_reg_3896 <= pl_6_fu_1689_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                add_ln640_reg_3443 <= add_ln640_fu_981_p2;
                dec_ah2_load_reg_3491 <= dec_ah2_i;
                dec_al2_load_reg_3409 <= dec_al2_i;
                icmp_ln668_2_reg_3517 <= icmp_ln668_2_fu_1156_p2;
                mul_ln679_17_reg_3536 <= mul_ln679_17_fu_1188_p2;
                qq6_code6_table_load_reg_3438 <= qq6_code6_table_q0;
                sext_ln679_18_reg_3527 <= sext_ln679_18_fu_1185_p1;
                trunc_ln425_2_reg_3430 <= mul_ln425_fu_921_p2(30 downto 15);
                trunc_ln653_2_reg_3507 <= select_ln763_fu_1117_p3(14 downto 11);
                wd3_14_reg_3455 <= sub_ln672_12_fu_1019_p2(39 downto 8);
                wd3_19_reg_3449 <= sub_ln672_fu_995_p2(39 downto 8);
                wd3_22_reg_3521 <= sub_ln672_18_fu_1169_p2(39 downto 8);
                    zext_ln425_1_reg_3425(14 downto 0) <= zext_ln425_1_fu_913_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                apl2_8_reg_4212 <= apl2_8_fu_2935_p2;
                apl2_reg_4202 <= apl2_fu_2825_p2;
                icmp_ln719_2_reg_4217 <= icmp_ln719_2_fu_2941_p2;
                icmp_ln719_reg_4207 <= icmp_ln719_fu_2831_p2;
                mul_ln521_reg_4227 <= grp_fu_649_p2;
                    sub_ln521_reg_4222(36 downto 2) <= sub_ln521_fu_2971_p2(36 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                dec_ah1_load_reg_3684 <= dec_ah1_i;
                dec_al1_load_reg_3582 <= dec_al1_i;
                icmp_ln668_reg_3620 <= icmp_ln668_fu_1338_p2;
                mul_ln604_2_reg_3702 <= grp_fu_567_p2;
                mul_ln604_reg_3600 <= grp_fu_563_p2;
                trunc_ln12_reg_3605 <= mul_ln428_fu_1256_p2(30 downto 15);
                trunc_ln14_reg_3610 <= select_ln643_fu_1299_p3(14 downto 11);
                wd3_15_reg_3624 <= sub_ln672_13_fu_1351_p2(39 downto 8);
                wd3_16_reg_3630 <= sub_ln672_14_fu_1375_p2(39 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                dec_del_dhx_load_1_reg_3481 <= dec_del_dhx_q0;
                dec_del_dhx_load_reg_3466 <= dec_del_dhx_q1;
                dec_del_dltx_load_1_reg_3399 <= dec_del_dltx_q0;
                dec_del_dltx_load_reg_3383 <= dec_del_dltx_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul_ln600_2_reg_3831 <= grp_fu_583_p2;
                mul_ln600_reg_3780 <= grp_fu_579_p2;
                tmp_reg_3866 <= tmp_fu_1644_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_659 <= dec_del_bph_q1;
                reg_676 <= accumc_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then
                reg_681 <= grp_fu_571_p2;
                reg_685 <= grp_fu_555_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then
                reg_689 <= grp_fu_603_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_698 <= grp_fu_628_p2;
                reg_702 <= grp_fu_608_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then
                reg_706 <= grp_fu_644_p2;
                reg_710 <= grp_fu_613_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                storemerge_reg_534 <= ap_phi_reg_pp0_iter0_storemerge_reg_534;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                tmp_34_reg_4175 <= grp_fu_587_p2(63 downto 63);
                tmp_35_reg_4181 <= grp_fu_591_p2(63 downto 63);
                tmp_43_reg_4186 <= grp_fu_595_p2(63 downto 63);
                tmp_44_reg_4192 <= grp_fu_599_p2(63 downto 63);
            end if;
        end if;
    end process;
    zext_ln425_1_reg_3425(30 downto 15) <= "0000000000000000";
    xa1_reg_4155(1 downto 0) <= "00";
    sub_ln521_reg_4222(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage8_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_reset_idle_pp0, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_idle_pp0_1to1 = ap_const_logic_1) and (ap_start = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_reset_idle_pp0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;

    accumc_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage6, ap_block_pp0_stage3, ap_block_pp0_stage7, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            accumc_address0 <= ap_const_lv4_2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            accumc_address0 <= ap_const_lv4_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            accumc_address0 <= ap_const_lv4_8;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            accumc_address0 <= ap_const_lv4_5;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            accumc_address0 <= ap_const_lv4_4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            accumc_address0 <= ap_const_lv4_A;
        else 
            accumc_address0 <= "XXXX";
        end if; 
    end process;


    accumc_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage6, ap_block_pp0_stage3, ap_block_pp0_stage7, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage8)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            accumc_address1 <= ap_const_lv4_A;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            accumc_address1 <= ap_const_lv4_9;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            accumc_address1 <= ap_const_lv4_7;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            accumc_address1 <= ap_const_lv4_6;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            accumc_address1 <= ap_const_lv4_3;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            accumc_address1 <= ap_const_lv4_0;
        else 
            accumc_address1 <= "XXXX";
        end if; 
    end process;


    accumc_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            accumc_ce0 <= ap_const_logic_1;
        else 
            accumc_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    accumc_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            accumc_ce1 <= ap_const_logic_1;
        else 
            accumc_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    accumc_d0_assign_proc : process(ap_enable_reg_pp0_iter0, accumc_q0, reg_663, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, accumc_load_3_reg_3722, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage2, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            accumc_d0 <= accumc_load_3_reg_3722;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            accumc_d0 <= reg_663;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            accumc_d0 <= accumc_q0;
        else 
            accumc_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accumc_d1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, accumc_q0, accumc_q1, ap_CS_fsm_pp0_stage3, reg_663, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, reg_676, ap_CS_fsm_pp0_stage5, sub_ln504_reg_4145, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage6, ap_block_pp0_stage3, ap_block_pp0_stage7, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage8)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            accumc_d1 <= sub_ln504_reg_4145;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            accumc_d1 <= reg_663;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            accumc_d1 <= reg_676;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            accumc_d1 <= accumc_q0;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            accumc_d1 <= accumc_q1;
        else 
            accumc_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

        accumc_load_10_cast_fu_1640_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_676),33));


    accumc_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            accumc_we0 <= ap_const_logic_1;
        else 
            accumc_we0 <= ap_const_logic_0;
        end if; 
    end process;


    accumc_we1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            accumc_we1 <= ap_const_logic_1;
        else 
            accumc_we1 <= ap_const_logic_0;
        end if; 
    end process;


    accumd_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage6, ap_block_pp0_stage3, ap_block_pp0_stage7, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage8)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            accumd_address0 <= ap_const_lv4_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            accumd_address0 <= ap_const_lv4_2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            accumd_address0 <= ap_const_lv4_6;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            accumd_address0 <= ap_const_lv4_8;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            accumd_address0 <= ap_const_lv4_5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            accumd_address0 <= ap_const_lv4_4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            accumd_address0 <= ap_const_lv4_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            accumd_address0 <= ap_const_lv4_9;
        else 
            accumd_address0 <= "XXXX";
        end if; 
    end process;


    accumd_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage6, ap_block_pp0_stage3, ap_block_pp0_stage7, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                accumd_address1 <= ap_const_lv4_4;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                accumd_address1 <= ap_const_lv4_8;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                accumd_address1 <= ap_const_lv4_A;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                accumd_address1 <= ap_const_lv4_7;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                accumd_address1 <= ap_const_lv4_6;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                accumd_address1 <= ap_const_lv4_3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                accumd_address1 <= ap_const_lv4_2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                accumd_address1 <= ap_const_lv4_0;
            else 
                accumd_address1 <= "XXXX";
            end if;
        else 
            accumd_address1 <= "XXXX";
        end if; 
    end process;


    accumd_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            accumd_ce0 <= ap_const_logic_1;
        else 
            accumd_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    accumd_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            accumd_ce1 <= ap_const_logic_1;
        else 
            accumd_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    accumd_d0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, accumd_q0, accumd_q1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, accumd_load_1_reg_3707, accumd_load_5_reg_3931, add_ln505_reg_4150, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage6, ap_block_pp0_stage3, ap_block_pp0_stage7, ap_block_pp0_stage5, ap_block_pp0_stage8)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            accumd_d0 <= add_ln505_reg_4150;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            accumd_d0 <= accumd_load_1_reg_3707;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            accumd_d0 <= accumd_load_5_reg_3931;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            accumd_d0 <= accumd_q0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            accumd_d0 <= accumd_q1;
        else 
            accumd_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accumd_d1_assign_proc : process(ap_enable_reg_pp0_iter0, accumd_q1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, reg_670, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, accumd_load_3_reg_3841, accumd_load_7_reg_4051, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage2, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            accumd_d1 <= accumd_load_3_reg_3841;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            accumd_d1 <= accumd_load_7_reg_4051;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            accumd_d1 <= reg_670;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            accumd_d1 <= accumd_q1;
        else 
            accumd_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accumd_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            accumd_we0 <= ap_const_logic_1;
        else 
            accumd_we0 <= ap_const_logic_0;
        end if; 
    end process;


    accumd_we1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            accumd_we1 <= ap_const_logic_1;
        else 
            accumd_we1 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln422_fu_1936_p2 <= std_logic_vector(unsigned(trunc_ln11_reg_3881) + unsigned(trunc_ln_fu_1926_p4));
    add_ln430_fu_2212_p2 <= std_logic_vector(signed(sext_ln428_2_fu_2209_p1) + signed(add_ln422_reg_3971));
    add_ln440_fu_1948_p2 <= std_logic_vector(signed(sext_ln425_1_fu_1945_p1) + signed(trunc_ln_fu_1926_p4));
    add_ln452_fu_2386_p2 <= std_logic_vector(unsigned(trunc_ln425_reg_3976) + unsigned(sext_ln428_1_fu_2206_p1));
    add_ln481_fu_2083_p2 <= std_logic_vector(signed(sext_ln472_1_fu_2080_p1) + signed(trunc_ln591_2_fu_2070_p4));
    add_ln493_fu_2455_p2 <= std_logic_vector(signed(add_ln481_reg_4028) + signed(trunc_ln605_2_reg_3896));
    add_ln505_fu_2486_p2 <= std_logic_vector(unsigned(add_ln493_fu_2455_p2) + unsigned(add_ln430_fu_2212_p2));
    add_ln520_1_fu_2189_p2 <= std_logic_vector(signed(sext_ln517_4_fu_2177_p1) + signed(reg_710));
    add_ln520_2_fu_2662_p2 <= std_logic_vector(unsigned(add_ln520_1_reg_4078) + unsigned(sext_ln517_2_fu_2645_p1));
    add_ln520_3_fu_2667_p2 <= std_logic_vector(unsigned(add_ln520_2_fu_2662_p2) + unsigned(sext_ln520_2_fu_2658_p1));
    add_ln520_4_fu_2545_p2 <= std_logic_vector(unsigned(reg_706) + unsigned(sext_ln517_8_fu_2526_p1));
    add_ln520_5_fu_2555_p2 <= std_logic_vector(signed(sext_ln520_4_fu_2551_p1) + signed(mul_ln517_3_reg_3926));
    add_ln520_6_fu_2677_p2 <= std_logic_vector(unsigned(reg_689) + unsigned(sext_ln520_1_fu_2649_p1));
    add_ln520_7_fu_2687_p2 <= std_logic_vector(signed(sext_ln520_5_fu_2683_p1) + signed(mul_ln517_5_reg_4057));
    add_ln520_8_fu_2696_p2 <= std_logic_vector(signed(sext_ln520_6_fu_2692_p1) + signed(add_ln520_5_reg_4160));
    add_ln520_fu_2652_p2 <= std_logic_vector(unsigned(sub_ln516_fu_2631_p2) + unsigned(sext_ln406_fu_2604_p1));
    add_ln521_1_fu_2195_p2 <= std_logic_vector(signed(sext_ln516_7_fu_2180_p1) + signed(mul_ln516_5_reg_3921));
    add_ln521_2_fu_2200_p2 <= std_logic_vector(unsigned(add_ln521_1_fu_2195_p2) + unsigned(sext_ln516_5_fu_2173_p1));
    add_ln521_3_fu_3319_p2 <= std_logic_vector(unsigned(add_ln521_2_reg_4083) + unsigned(sext_ln521_3_fu_3316_p1));
    add_ln521_4_fu_2566_p2 <= std_logic_vector(unsigned(reg_698) + unsigned(sext_ln516_13_fu_2537_p1));
    add_ln521_5_fu_3181_p2 <= std_logic_vector(signed(sext_ln521_4_fu_3178_p1) + signed(reg_710));
    add_ln521_6_fu_3187_p2 <= std_logic_vector(unsigned(mul_ln521_reg_4227) + unsigned(sub_ln521_cast_fu_3175_p1));
    add_ln521_7_fu_3196_p2 <= std_logic_vector(signed(sext_ln521_5_fu_3192_p1) + signed(sext_ln516_14_fu_3171_p1));
    add_ln521_8_fu_3206_p2 <= std_logic_vector(signed(sext_ln521_6_fu_3202_p1) + signed(add_ln521_5_fu_3181_p2));
    add_ln521_fu_1876_p2 <= std_logic_vector(unsigned(reg_698) + unsigned(sext_ln516_1_fu_1843_p1));
    add_ln589_10_fu_1906_p2 <= std_logic_vector(unsigned(add_ln589_reg_3876) + unsigned(mul_ln589_reg_3546));
    add_ln589_11_fu_1910_p2 <= std_logic_vector(unsigned(reg_681) + unsigned(mul_ln589_13_reg_3871));
    add_ln589_12_fu_1915_p2 <= std_logic_vector(unsigned(add_ln589_11_fu_1910_p2) + unsigned(mul_ln589_11_reg_3733));
    add_ln589_14_fu_1684_p2 <= std_logic_vector(unsigned(reg_685) + unsigned(mul_ln589_15_reg_3785));
    add_ln589_15_fu_2050_p2 <= std_logic_vector(unsigned(add_ln589_14_reg_3891) + unsigned(mul_ln589_14_reg_3636));
    add_ln589_16_fu_2054_p2 <= std_logic_vector(unsigned(reg_685) + unsigned(mul_ln589_18_reg_3886));
    add_ln589_17_fu_2059_p2 <= std_logic_vector(unsigned(add_ln589_16_fu_2054_p2) + unsigned(mul_ln589_16_reg_3790));
    add_ln589_fu_1650_p2 <= std_logic_vector(unsigned(reg_681) + unsigned(mul_ln589_10_reg_3728));
    add_ln640_fu_981_p2 <= std_logic_vector(signed(sext_ln640_2_fu_977_p1) + signed(sext_ln640_fu_973_p1));
    add_ln684_12_fu_2261_p2 <= std_logic_vector(unsigned(select_ln666_12_fu_2253_p3) + unsigned(wd3_14_reg_3455));
    add_ln684_13_fu_2286_p2 <= std_logic_vector(unsigned(select_ln666_13_fu_2278_p3) + unsigned(wd3_15_reg_3624));
    add_ln684_14_fu_2310_p2 <= std_logic_vector(unsigned(select_ln666_14_fu_2302_p3) + unsigned(wd3_16_reg_3630));
    add_ln684_15_fu_2334_p2 <= std_logic_vector(unsigned(select_ln666_15_fu_2326_p3) + unsigned(wd3_17_reg_3987));
    add_ln684_16_fu_2358_p2 <= std_logic_vector(unsigned(select_ln666_16_fu_2350_p3) + unsigned(wd3_18_reg_3992));
    add_ln684_17_fu_1605_p2 <= std_logic_vector(unsigned(select_ln666_17_fu_1597_p3) + unsigned(wd3_27_fu_1575_p4));
    add_ln684_18_fu_1776_p2 <= std_logic_vector(unsigned(select_ln666_18_fu_1768_p3) + unsigned(wd3_22_reg_3521));
    add_ln684_19_fu_1806_p2 <= std_logic_vector(unsigned(select_ln666_19_fu_1798_p3) + unsigned(wd3_23_fu_1716_p4));
    add_ln684_20_fu_1837_p2 <= std_logic_vector(unsigned(select_ln666_20_fu_1829_p3) + unsigned(wd3_24_fu_1740_p4));
    add_ln684_21_fu_2162_p2 <= std_logic_vector(unsigned(select_ln666_21_fu_2154_p3) + unsigned(wd3_25_fu_2103_p4));
    add_ln684_22_fu_2427_p2 <= std_logic_vector(unsigned(select_ln666_22_fu_2419_p3) + unsigned(wd3_26_reg_4035));
    add_ln684_fu_2236_p2 <= std_logic_vector(unsigned(select_ln666_fu_2228_p3) + unsigned(wd3_19_reg_3449));
    add_ln716_5_fu_2929_p2 <= std_logic_vector(signed(sext_ln716_6_fu_2918_p1) + signed(select_ln716_2_fu_2922_p3));
    add_ln716_fu_2819_p2 <= std_logic_vector(signed(sext_ln716_4_fu_2808_p1) + signed(select_ln716_fu_2812_p3));
    add_ln760_fu_849_p2 <= std_logic_vector(signed(sext_ln758_fu_827_p1) + signed(sext_ln760_fu_845_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_2565_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, icmp_ln668_2_reg_3517)
    begin
                ap_condition_2565 <= ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln668_2_reg_3517 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6));
    end process;


    ap_condition_2569_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, icmp_ln668_2_reg_3517)
    begin
                ap_condition_2569 <= ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln668_2_reg_3517 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5));
    end process;


    ap_condition_2573_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, icmp_ln668_reg_3620)
    begin
                ap_condition_2573 <= ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln668_reg_3620 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6));
    end process;


    ap_condition_2577_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, icmp_ln668_reg_3620)
    begin
                ap_condition_2577 <= ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln668_reg_3620 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5));
    end process;


    ap_condition_2581_assign_proc : process(ap_CS_fsm_pp0_stage3, icmp_ln668_2_reg_3517, ap_block_pp0_stage3)
    begin
                ap_condition_2581 <= ((ap_const_boolean_0 = ap_block_pp0_stage3) and (icmp_ln668_2_reg_3517 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3));
    end process;


    ap_condition_2585_assign_proc : process(ap_CS_fsm_pp0_stage3, icmp_ln668_2_reg_3517, ap_block_pp0_stage3)
    begin
                ap_condition_2585 <= ((ap_const_boolean_0 = ap_block_pp0_stage3) and (icmp_ln668_2_reg_3517 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3));
    end process;


    ap_condition_2589_assign_proc : process(ap_CS_fsm_pp0_stage5, icmp_ln668_2_reg_3517, ap_block_pp0_stage5)
    begin
                ap_condition_2589 <= ((ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln668_2_reg_3517 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5));
    end process;


    ap_condition_2593_assign_proc : process(ap_CS_fsm_pp0_stage5, icmp_ln668_2_reg_3517, ap_block_pp0_stage5)
    begin
                ap_condition_2593 <= ((ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln668_2_reg_3517 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage8_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_idle_pp0_0to0 = ap_const_logic_1) and (ap_start = ap_const_logic_0))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    apl1_10_fu_3250_p3 <= 
        apl1_9_fu_3234_p2 when (icmp_ln747_fu_3244_p2(0) = '1') else 
        trunc_ln733_fu_3230_p1;
    apl1_11_fu_3131_p2 <= std_logic_vector(unsigned(select_ln735_2_fu_3124_p3) + unsigned(sext_ln735_2_fu_3120_p1));
    apl1_12_fu_3275_p3 <= 
        zext_ln733_5_fu_3264_p1 when (icmp_ln745_2_fu_3270_p2(0) = '1') else 
        apl1_11_reg_4244;
    apl1_13_fu_3286_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(zext_ln733_6_fu_3267_p1));
    apl1_14_fu_3302_p3 <= 
        apl1_13_fu_3286_p2 when (icmp_ln747_2_fu_3296_p2(0) = '1') else 
        trunc_ln733_2_fu_3282_p1;
    apl1_8_fu_3223_p3 <= 
        zext_ln733_fu_3212_p1 when (icmp_ln745_fu_3218_p2(0) = '1') else 
        apl1_reg_4232;
    apl1_9_fu_3234_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(zext_ln733_4_fu_3215_p1));
    apl1_fu_3048_p2 <= std_logic_vector(unsigned(select_ln735_fu_3041_p3) + unsigned(sext_ln735_fu_3037_p1));
    apl2_10_fu_3079_p3 <= 
        ap_const_lv15_5000 when (icmp_ln721_2_fu_3073_p2(0) = '1') else 
        trunc_ln703_2_fu_3069_p1;
    apl2_6_fu_2980_p3 <= 
        ap_const_lv17_3000 when (icmp_ln719_reg_4207(0) = '1') else 
        apl2_reg_4202;
    apl2_7_fu_2996_p3 <= 
        ap_const_lv15_5000 when (icmp_ln721_fu_2990_p2(0) = '1') else 
        trunc_ln703_fu_2986_p1;
    apl2_8_fu_2935_p2 <= std_logic_vector(unsigned(add_ln716_5_fu_2929_p2) + unsigned(sext_ln708_5_fu_2887_p1));
    apl2_9_fu_3063_p3 <= 
        ap_const_lv17_3000 when (icmp_ln719_2_reg_4217(0) = '1') else 
        apl2_8_reg_4212;
    apl2_fu_2825_p2 <= std_logic_vector(unsigned(add_ln716_fu_2819_p2) + unsigned(sext_ln708_4_fu_2777_p1));

    dec_ah1_o_assign_proc : process(ap_enable_reg_pp0_iter1, dec_ah1_i, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, apl1_14_fu_3302_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            dec_ah1_o <= apl1_14_fu_3302_p3;
        else 
            dec_ah1_o <= dec_ah1_i;
        end if; 
    end process;


    dec_ah1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            dec_ah1_o_ap_vld <= ap_const_logic_1;
        else 
            dec_ah1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_ah2_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, dec_ah2_i, ap_block_pp0_stage0, apl2_10_fu_3079_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dec_ah2_o <= apl2_10_fu_3079_p3;
        else 
            dec_ah2_o <= dec_ah2_i;
        end if; 
    end process;


    dec_ah2_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dec_ah2_o_ap_vld <= ap_const_logic_1;
        else 
            dec_ah2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_al1_o_assign_proc : process(ap_enable_reg_pp0_iter1, dec_al1_i, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, apl1_10_fu_3250_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            dec_al1_o <= apl1_10_fu_3250_p3;
        else 
            dec_al1_o <= dec_al1_i;
        end if; 
    end process;


    dec_al1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            dec_al1_o_ap_vld <= ap_const_logic_1;
        else 
            dec_al1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_al2_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, dec_al2_i, ap_block_pp0_stage0, apl2_7_fu_2996_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dec_al2_o <= apl2_7_fu_2996_p3;
        else 
            dec_al2_o <= dec_al2_i;
        end if; 
    end process;


    dec_al2_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dec_al2_o_ap_vld <= ap_const_logic_1;
        else 
            dec_al2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bph_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, icmp_ln668_2_reg_3517, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage6, ap_block_pp0_stage3, ap_block_pp0_stage7, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            dec_del_bph_address0 <= ap_const_lv3_4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            dec_del_bph_address0 <= ap_const_lv3_2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (icmp_ln668_2_reg_3517 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            dec_del_bph_address0 <= ap_const_lv3_0;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            dec_del_bph_address0 <= ap_const_lv3_5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            dec_del_bph_address0 <= ap_const_lv3_3;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (icmp_ln668_2_reg_3517 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            dec_del_bph_address0 <= ap_const_lv3_1;
        else 
            dec_del_bph_address0 <= "XXX";
        end if; 
    end process;


    dec_del_bph_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, icmp_ln668_2_reg_3517, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage6, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            dec_del_bph_address1 <= ap_const_lv3_3;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln668_2_reg_3517 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            dec_del_bph_address1 <= ap_const_lv3_4;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln668_2_reg_3517 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            dec_del_bph_address1 <= ap_const_lv3_2;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            dec_del_bph_address1 <= ap_const_lv3_0;
        else 
            dec_del_bph_address1 <= "XXX";
        end if; 
    end process;


    dec_del_bph_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage0_11001, icmp_ln668_2_reg_3517, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln668_2_reg_3517 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) 
    and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln668_2_reg_3517 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            dec_del_bph_ce0 <= ap_const_logic_1;
        else 
            dec_del_bph_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bph_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage0_11001, icmp_ln668_2_reg_3517)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln668_2_reg_3517 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln668_2_reg_3517 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) 
    and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            dec_del_bph_ce1 <= ap_const_logic_1;
        else 
            dec_del_bph_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bph_d0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, wd3_22_reg_3521, add_ln684_18_reg_3901, add_ln684_21_reg_4041, ap_CS_fsm_pp0_stage7, ap_phi_reg_pp0_iter0_storemerge28_reg_545, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage4, ap_block_pp0_stage5, add_ln684_17_fu_1605_p2, sub_ln672_19_fu_1710_p2, ap_condition_2581, ap_condition_2585)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                dec_del_bph_d0 <= ap_phi_reg_pp0_iter0_storemerge28_reg_545;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                dec_del_bph_d0 <= add_ln684_21_reg_4041;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                dec_del_bph_d0 <= add_ln684_18_reg_3901;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                dec_del_bph_d0 <= sub_ln672_19_fu_1710_p2(39 downto 8);
            elsif ((ap_const_boolean_1 = ap_condition_2585)) then 
                dec_del_bph_d0 <= wd3_22_reg_3521;
            elsif ((ap_const_boolean_1 = ap_condition_2581)) then 
                dec_del_bph_d0 <= add_ln684_17_fu_1605_p2;
            else 
                dec_del_bph_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            dec_del_bph_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_del_bph_d1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, add_ln684_19_reg_3906, add_ln684_20_reg_3911, ap_block_pp0_stage6, ap_block_pp0_stage3, ap_block_pp0_stage4, sub_ln672_17_fu_1569_p2, sub_ln672_20_fu_1734_p2, sub_ln672_21_fu_2097_p2, ap_condition_2589, ap_condition_2593)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                dec_del_bph_d1 <= add_ln684_20_reg_3911;
            elsif ((ap_const_boolean_1 = ap_condition_2593)) then 
                dec_del_bph_d1 <= sub_ln672_21_fu_2097_p2(39 downto 8);
            elsif ((ap_const_boolean_1 = ap_condition_2589)) then 
                dec_del_bph_d1 <= add_ln684_19_reg_3906;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                dec_del_bph_d1 <= sub_ln672_20_fu_1734_p2(39 downto 8);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                dec_del_bph_d1 <= sub_ln672_17_fu_1569_p2(39 downto 8);
            else 
                dec_del_bph_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            dec_del_bph_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_del_bph_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, icmp_ln668_2_reg_3517, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln668_2_reg_3517 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln668_2_reg_3517 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln668_2_reg_3517 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln668_2_reg_3517 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln668_2_reg_3517 = ap_const_lv1_0) and 
    (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            dec_del_bph_we0 <= ap_const_logic_1;
        else 
            dec_del_bph_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bph_we1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, icmp_ln668_2_reg_3517)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln668_2_reg_3517 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln668_2_reg_3517 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln668_2_reg_3517 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln668_2_reg_3517 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln668_2_reg_3517 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            dec_del_bph_we1 <= ap_const_logic_1;
        else 
            dec_del_bph_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bpl_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage6, ap_block_pp0_stage3, ap_block_pp0_stage7, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage8)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            dec_del_bpl_address0 <= ap_const_lv3_2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            dec_del_bpl_address0 <= ap_const_lv3_0;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            dec_del_bpl_address0 <= ap_const_lv3_4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            dec_del_bpl_address0 <= ap_const_lv3_5;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            dec_del_bpl_address0 <= ap_const_lv3_3;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            dec_del_bpl_address0 <= ap_const_lv3_1;
        else 
            dec_del_bpl_address0 <= "XXX";
        end if; 
    end process;


    dec_del_bpl_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage6, ap_block_pp0_stage3, ap_block_pp0_stage7, ap_block_pp0_stage4, ap_block_pp0_stage8)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            dec_del_bpl_address1 <= ap_const_lv3_5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            dec_del_bpl_address1 <= ap_const_lv3_3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            dec_del_bpl_address1 <= ap_const_lv3_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            dec_del_bpl_address1 <= ap_const_lv3_4;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            dec_del_bpl_address1 <= ap_const_lv3_2;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            dec_del_bpl_address1 <= ap_const_lv3_0;
        else 
            dec_del_bpl_address1 <= "XXX";
        end if; 
    end process;


    dec_del_bpl_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            dec_del_bpl_ce0 <= ap_const_logic_1;
        else 
            dec_del_bpl_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bpl_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            dec_del_bpl_ce1 <= ap_const_logic_1;
        else 
            dec_del_bpl_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bpl_d0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, wd3_14_reg_3455, wd3_16_reg_3630, add_ln684_13_reg_4088, add_ln684_15_reg_4098, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage6, ap_block_pp0_stage3, ap_block_pp0_stage7, ap_block_pp0_stage4, ap_block_pp0_stage5, add_ln684_fu_2236_p2, ap_block_pp0_stage8, sub_ln672_15_fu_1961_p2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                dec_del_bpl_d0 <= add_ln684_15_reg_4098;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                dec_del_bpl_d0 <= add_ln684_13_reg_4088;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                dec_del_bpl_d0 <= add_ln684_fu_2236_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                dec_del_bpl_d0 <= sub_ln672_15_fu_1961_p2(39 downto 8);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                dec_del_bpl_d0 <= wd3_16_reg_3630;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                dec_del_bpl_d0 <= wd3_14_reg_3455;
            else 
                dec_del_bpl_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            dec_del_bpl_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_del_bpl_d1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, storemerge_reg_534, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, wd3_19_reg_3449, wd3_15_reg_3624, add_ln684_14_reg_4093, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage6, ap_block_pp0_stage3, ap_block_pp0_stage7, ap_block_pp0_stage4, add_ln684_12_fu_2261_p2, ap_block_pp0_stage8)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                dec_del_bpl_d1 <= storemerge_reg_534;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                dec_del_bpl_d1 <= add_ln684_14_reg_4093;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                dec_del_bpl_d1 <= add_ln684_12_fu_2261_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                dec_del_bpl_d1 <= wd3_15_reg_3624;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                dec_del_bpl_d1 <= wd3_19_reg_3449;
            else 
                dec_del_bpl_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            dec_del_bpl_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_del_bpl_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, icmp_ln668_reg_3620, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (icmp_ln668_reg_3620 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln668_reg_3620 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln668_reg_3620 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln668_reg_3620 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln668_reg_3620 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln668_reg_3620 
    = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            dec_del_bpl_we0 <= ap_const_logic_1;
        else 
            dec_del_bpl_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bpl_we1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, icmp_ln668_reg_3620, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln668_reg_3620 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln668_reg_3620 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln668_reg_3620 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln668_reg_3620 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            dec_del_bpl_we1 <= ap_const_logic_1;
        else 
            dec_del_bpl_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                dec_del_dhx_address0 <= ap_const_lv3_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                dec_del_dhx_address0 <= ap_const_lv3_3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                dec_del_dhx_address0 <= ap_const_lv3_5;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                dec_del_dhx_address0 <= ap_const_lv3_2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                dec_del_dhx_address0 <= ap_const_lv3_1;
            else 
                dec_del_dhx_address0 <= "XXX";
            end if;
        else 
            dec_del_dhx_address0 <= "XXX";
        end if; 
    end process;


    dec_del_dhx_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                dec_del_dhx_address1 <= ap_const_lv3_1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                dec_del_dhx_address1 <= ap_const_lv3_5;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                dec_del_dhx_address1 <= ap_const_lv3_4;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                dec_del_dhx_address1 <= ap_const_lv3_3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                dec_del_dhx_address1 <= ap_const_lv3_0;
            else 
                dec_del_dhx_address1 <= "XXX";
            end if;
        else 
            dec_del_dhx_address1 <= "XXX";
        end if; 
    end process;


    dec_del_dhx_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            dec_del_dhx_ce0 <= ap_const_logic_1;
        else 
            dec_del_dhx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            dec_del_dhx_ce1 <= ap_const_logic_1;
        else 
            dec_del_dhx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_d0_assign_proc : process(ap_enable_reg_pp0_iter0, dec_del_dhx_q0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, trunc_ln472_1_reg_3364, dec_del_dhx_load_2_reg_3652, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                dec_del_dhx_d0 <= trunc_ln472_1_reg_3364;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                dec_del_dhx_d0 <= dec_del_dhx_load_2_reg_3652;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                dec_del_dhx_d0 <= dec_del_dhx_q0;
            else 
                dec_del_dhx_d0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            dec_del_dhx_d0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_del_dhx_d1_assign_proc : process(ap_enable_reg_pp0_iter0, dec_del_dhx_q1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, dec_del_dhx_load_reg_3466, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            dec_del_dhx_d1 <= dec_del_dhx_load_reg_3466;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            dec_del_dhx_d1 <= dec_del_dhx_q1;
        else 
            dec_del_dhx_d1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_del_dhx_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            dec_del_dhx_we0 <= ap_const_logic_1;
        else 
            dec_del_dhx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_we1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            dec_del_dhx_we1 <= ap_const_logic_1;
        else 
            dec_del_dhx_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                dec_del_dltx_address0 <= ap_const_lv3_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                dec_del_dltx_address0 <= ap_const_lv3_3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                dec_del_dltx_address0 <= ap_const_lv3_5;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                dec_del_dltx_address0 <= ap_const_lv3_2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                dec_del_dltx_address0 <= ap_const_lv3_1;
            else 
                dec_del_dltx_address0 <= "XXX";
            end if;
        else 
            dec_del_dltx_address0 <= "XXX";
        end if; 
    end process;


    dec_del_dltx_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                dec_del_dltx_address1 <= ap_const_lv3_1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                dec_del_dltx_address1 <= ap_const_lv3_5;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                dec_del_dltx_address1 <= ap_const_lv3_4;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                dec_del_dltx_address1 <= ap_const_lv3_3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                dec_del_dltx_address1 <= ap_const_lv3_0;
            else 
                dec_del_dltx_address1 <= "XXX";
            end if;
        else 
            dec_del_dltx_address1 <= "XXX";
        end if; 
    end process;


    dec_del_dltx_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            dec_del_dltx_ce0 <= ap_const_logic_1;
        else 
            dec_del_dltx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            dec_del_dltx_ce1 <= ap_const_logic_1;
        else 
            dec_del_dltx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_d0_assign_proc : process(ap_enable_reg_pp0_iter0, dec_del_dltx_q0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, trunc_ln425_2_reg_3430, dec_del_dltx_load_2_reg_3556, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                dec_del_dltx_d0 <= trunc_ln425_2_reg_3430;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                dec_del_dltx_d0 <= dec_del_dltx_load_2_reg_3556;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                dec_del_dltx_d0 <= dec_del_dltx_q0;
            else 
                dec_del_dltx_d0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            dec_del_dltx_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_del_dltx_d1_assign_proc : process(ap_enable_reg_pp0_iter0, dec_del_dltx_q1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, dec_del_dltx_load_reg_3383, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            dec_del_dltx_d1 <= dec_del_dltx_load_reg_3383;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            dec_del_dltx_d1 <= dec_del_dltx_q1;
        else 
            dec_del_dltx_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_del_dltx_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            dec_del_dltx_we0 <= ap_const_logic_1;
        else 
            dec_del_dltx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_we1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            dec_del_dltx_we1 <= ap_const_logic_1;
        else 
            dec_del_dltx_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_deth_o_assign_proc : process(ap_enable_reg_pp0_iter0, dec_deth_i, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, shl_ln657_2_fu_1458_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            dec_deth_o <= shl_ln657_2_fu_1458_p3;
        else 
            dec_deth_o <= dec_deth_i;
        end if; 
    end process;


    dec_deth_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            dec_deth_o_ap_vld <= ap_const_logic_1;
        else 
            dec_deth_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_detl_o_assign_proc : process(ap_enable_reg_pp0_iter0, dec_detl_i, ap_CS_fsm_pp0_stage3, shl_ln11_fu_1523_p3, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            dec_detl_o <= shl_ln11_fu_1523_p3;
        else 
            dec_detl_o <= dec_detl_i;
        end if; 
    end process;


    dec_detl_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            dec_detl_o_ap_vld <= ap_const_logic_1;
        else 
            dec_detl_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_nbh_o_assign_proc : process(ap_enable_reg_pp0_iter0, dec_nbh_i, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, select_ln763_fu_1117_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            dec_nbh_o <= select_ln763_fu_1117_p3;
        else 
            dec_nbh_o <= dec_nbh_i;
        end if; 
    end process;


    dec_nbh_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            dec_nbh_o_ap_vld <= ap_const_logic_1;
        else 
            dec_nbh_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_nbl_o_assign_proc : process(ap_enable_reg_pp0_iter0, dec_nbl_i, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, select_ln643_fu_1299_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            dec_nbl_o <= select_ln643_fu_1299_p3;
        else 
            dec_nbl_o <= dec_nbl_i;
        end if; 
    end process;


    dec_nbl_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            dec_nbl_o_ap_vld <= ap_const_logic_1;
        else 
            dec_nbl_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_ph1_o_assign_proc : process(ap_enable_reg_pp0_iter0, dec_ph1_i, ap_CS_fsm_pp0_stage6, add_ln481_reg_4028, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            dec_ph1_o <= add_ln481_reg_4028;
        else 
            dec_ph1_o <= dec_ph1_i;
        end if; 
    end process;


    dec_ph1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            dec_ph1_o_ap_vld <= ap_const_logic_1;
        else 
            dec_ph1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_ph2_o_assign_proc : process(ap_enable_reg_pp0_iter0, dec_ph1_i, dec_ph2_i, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            dec_ph2_o <= dec_ph1_i;
        else 
            dec_ph2_o <= dec_ph2_i;
        end if; 
    end process;


    dec_ph2_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            dec_ph2_o_ap_vld <= ap_const_logic_1;
        else 
            dec_ph2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_plt1_o_assign_proc : process(ap_enable_reg_pp0_iter0, dec_plt1_i, ap_CS_fsm_pp0_stage6, add_ln440_reg_3981, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            dec_plt1_o <= add_ln440_reg_3981;
        else 
            dec_plt1_o <= dec_plt1_i;
        end if; 
    end process;


    dec_plt1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            dec_plt1_o_ap_vld <= ap_const_logic_1;
        else 
            dec_plt1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_plt2_o_assign_proc : process(ap_enable_reg_pp0_iter0, dec_plt1_i, dec_plt2_i, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            dec_plt2_o <= dec_plt1_i;
        else 
            dec_plt2_o <= dec_plt2_i;
        end if; 
    end process;


    dec_plt2_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            dec_plt2_o_ap_vld <= ap_const_logic_1;
        else 
            dec_plt2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_rh1_o_assign_proc : process(ap_enable_reg_pp0_iter0, dec_rh1_i, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, trunc_ln496_fu_2459_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            dec_rh1_o <= trunc_ln496_fu_2459_p1;
        else 
            dec_rh1_o <= dec_rh1_i;
        end if; 
    end process;


    dec_rh1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            dec_rh1_o_ap_vld <= ap_const_logic_1;
        else 
            dec_rh1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_rh2_o_assign_proc : process(ap_enable_reg_pp0_iter0, dec_rh1_i, dec_rh2_i, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            dec_rh2_o <= dec_rh1_i;
        else 
            dec_rh2_o <= dec_rh2_i;
        end if; 
    end process;


    dec_rh2_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            dec_rh2_o_ap_vld <= ap_const_logic_1;
        else 
            dec_rh2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_rlt1_o_assign_proc : process(ap_enable_reg_pp0_iter0, dec_rlt1_i, ap_CS_fsm_pp0_stage6, add_ln452_fu_2386_p2, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            dec_rlt1_o <= add_ln452_fu_2386_p2;
        else 
            dec_rlt1_o <= dec_rlt1_i;
        end if; 
    end process;


    dec_rlt1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            dec_rlt1_o_ap_vld <= ap_const_logic_1;
        else 
            dec_rlt1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_rlt2_o_assign_proc : process(ap_enable_reg_pp0_iter0, dec_rlt1_i, dec_rlt2_i, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            dec_rlt2_o <= dec_rlt1_i;
        else 
            dec_rlt2_o <= dec_rlt2_i;
        end if; 
    end process;


    dec_rlt2_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            dec_rlt2_o_ap_vld <= ap_const_logic_1;
        else 
            dec_rlt2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_555_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, sext_ln587_12_fu_1044_p1, sext_ln589_59_fu_1402_p1, sext_ln589_65_fu_1546_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_555_p0 <= sext_ln589_65_fu_1546_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_555_p0 <= sext_ln589_59_fu_1402_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_555_p0 <= sext_ln587_12_fu_1044_p1(14 - 1 downto 0);
            else 
                grp_fu_555_p0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_555_p0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_555_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, sext_ln587_11_fu_1035_p1, sext_ln589_58_fu_1397_p1, sext_ln589_64_fu_1541_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_555_p1 <= sext_ln589_64_fu_1541_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_555_p1 <= sext_ln589_58_fu_1397_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_555_p1 <= sext_ln587_11_fu_1035_p1(32 - 1 downto 0);
            else 
                grp_fu_555_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_555_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_559_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, sext_ln589_56_fu_1058_p1, sext_ln589_62_fu_1412_p1, sext_ln589_68_fu_1556_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_559_p0 <= sext_ln589_68_fu_1556_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_559_p0 <= sext_ln589_62_fu_1412_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_559_p0 <= sext_ln589_56_fu_1058_p1(14 - 1 downto 0);
            else 
                grp_fu_559_p0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_559_p0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_559_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, sext_ln589_55_fu_1053_p1, sext_ln589_61_fu_1407_p1, sext_ln589_67_fu_1551_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_559_p1 <= sext_ln589_67_fu_1551_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_559_p1 <= sext_ln589_61_fu_1407_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_559_p1 <= sext_ln589_55_fu_1053_p1(32 - 1 downto 0);
            else 
                grp_fu_559_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_559_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_571_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, sext_ln587_9_fu_864_p1, sext_ln589_44_fu_1208_p1, sext_ln589_50_fu_1493_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_571_p0 <= sext_ln589_50_fu_1493_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_571_p0 <= sext_ln589_44_fu_1208_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_571_p0 <= sext_ln587_9_fu_864_p1(16 - 1 downto 0);
            else 
                grp_fu_571_p0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_571_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_571_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, sext_ln587_8_fu_859_p1, sext_ln589_43_fu_1203_p1, sext_ln589_49_fu_1488_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_571_p1 <= sext_ln589_49_fu_1488_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_571_p1 <= sext_ln589_43_fu_1203_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_571_p1 <= sext_ln587_8_fu_859_p1(32 - 1 downto 0);
            else 
                grp_fu_571_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_571_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_575_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, sext_ln589_41_fu_878_p1, sext_ln589_47_fu_1222_p1, sext_ln589_53_fu_1503_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_575_p0 <= sext_ln589_53_fu_1503_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_575_p0 <= sext_ln589_47_fu_1222_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_575_p0 <= sext_ln589_41_fu_878_p1(16 - 1 downto 0);
            else 
                grp_fu_575_p0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_575_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_575_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, sext_ln589_40_fu_873_p1, sext_ln589_46_fu_1217_p1, sext_ln589_52_fu_1498_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_575_p1 <= sext_ln589_52_fu_1498_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_575_p1 <= sext_ln589_46_fu_1217_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_575_p1 <= sext_ln589_40_fu_873_p1(32 - 1 downto 0);
            else 
                grp_fu_575_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_575_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_587_p1 <= sext_ln705_fu_2371_p1(32 - 1 downto 0);
    grp_fu_591_p1 <= sext_ln705_fu_2371_p1(32 - 1 downto 0);
    grp_fu_595_p1 <= sext_ln705_5_fu_2440_p1(32 - 1 downto 0);
    grp_fu_599_p1 <= sext_ln705_5_fu_2440_p1(32 - 1 downto 0);

    grp_fu_603_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, sext_ln517_1_fu_1194_p1, sext_ln516_15_fu_2184_p1, ap_block_pp0_stage1, ap_block_pp0_stage5)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_603_p0 <= sext_ln516_15_fu_2184_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_603_p0 <= sext_ln517_1_fu_1194_p1(32 - 1 downto 0);
            else 
                grp_fu_603_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_603_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_603_p1 <= ap_const_lv41_D4(9 - 1 downto 0);

    grp_fu_608_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, sext_ln517_3_fu_1483_p1, sext_ln516_12_fu_1862_p1, ap_block_pp0_stage2, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_608_p0 <= sext_ln516_12_fu_1862_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_608_p0 <= sext_ln517_3_fu_1483_p1(32 - 1 downto 0);
            else 
                grp_fu_608_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_608_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_608_p1 <= ap_const_lv44_5A8(12 - 1 downto 0);

    grp_fu_613_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, sext_ln516_8_fu_1625_p1, sext_ln517_7_fu_1847_p1, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_613_p0 <= sext_ln517_7_fu_1847_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_613_p0 <= sext_ln516_8_fu_1625_p1(32 - 1 downto 0);
            else 
                grp_fu_613_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_613_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_613_p1 <= ap_const_lv45_EDC(13 - 1 downto 0);
    grp_fu_618_p1 <= ap_const_lv46_3C90(15 - 1 downto 0);
    grp_fu_623_p1 <= ap_const_lv46_3C90(15 - 1 downto 0);

    grp_fu_628_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, sext_ln516_4_fu_1478_p1, sext_ln516_11_fu_1857_p1, ap_block_pp0_stage2, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_628_p0 <= sext_ln516_11_fu_1857_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_628_p0 <= sext_ln516_4_fu_1478_p1(32 - 1 downto 0);
            else 
                grp_fu_628_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_628_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_628_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_628_p1 <= ap_const_lv42_3FFFFFFFCB8(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_628_p1 <= ap_const_lv42_3FFFFFFFD90(11 - 1 downto 0);
            else 
                grp_fu_628_p1 <= "XXXXXXXXXXX";
            end if;
        else 
            grp_fu_628_p1 <= "XXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_634_p1 <= ap_const_lv42_3FFFFFFFD90(11 - 1 downto 0);
    grp_fu_639_p1 <= ap_const_lv43_7FFFFFFFCB8(11 - 1 downto 0);

    grp_fu_644_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, sext_ln517_5_fu_1620_p1, sext_ln516_10_fu_1852_p1, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_644_p0 <= sext_ln516_10_fu_1852_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_644_p0 <= sext_ln517_5_fu_1620_p1(32 - 1 downto 0);
            else 
                grp_fu_644_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_644_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_644_p1 <= ap_const_lv45_1FFFFFFFF36C(13 - 1 downto 0);
    grp_fu_649_p1 <= ap_const_lv39_7FFFFFFFD4(7 - 1 downto 0);
    grp_fu_654_p1 <= ap_const_lv40_FFFFFFFFD4(7 - 1 downto 0);
    icmp_ln643_fu_1293_p2 <= "1" when (unsigned(select_ln641_fu_1282_p3) > unsigned(ap_const_lv17_4800)) else "0";
    icmp_ln668_2_fu_1156_p2 <= "1" when (trunc_ln472_1_reg_3364 = ap_const_lv14_0) else "0";
    icmp_ln668_fu_1338_p2 <= "1" when (trunc_ln425_2_reg_3430 = ap_const_lv16_0) else "0";
    icmp_ln719_2_fu_2941_p2 <= "1" when (signed(apl2_8_fu_2935_p2) > signed(ap_const_lv17_3000)) else "0";
    icmp_ln719_fu_2831_p2 <= "1" when (signed(apl2_fu_2825_p2) > signed(ap_const_lv17_3000)) else "0";
    icmp_ln721_2_fu_3073_p2 <= "1" when (signed(apl2_9_fu_3063_p3) < signed(ap_const_lv17_1D000)) else "0";
    icmp_ln721_fu_2990_p2 <= "1" when (signed(apl2_6_fu_2980_p3) < signed(ap_const_lv17_1D000)) else "0";
    icmp_ln745_2_fu_3270_p2 <= "1" when (signed(apl1_11_reg_4244) > signed(zext_ln733_5_fu_3264_p1)) else "0";
    icmp_ln745_fu_3218_p2 <= "1" when (signed(apl1_reg_4232) > signed(zext_ln733_fu_3212_p1)) else "0";
    icmp_ln747_2_fu_3296_p2 <= "1" when (signed(apl1_12_fu_3275_p3) < signed(sext_ln747_2_fu_3292_p1)) else "0";
    icmp_ln747_fu_3244_p2 <= "1" when (signed(apl1_8_fu_3223_p3) < signed(sext_ln747_fu_3240_p1)) else "0";
    icmp_ln763_fu_1111_p2 <= "1" when (unsigned(select_ln761_fu_1100_p3) > unsigned(ap_const_lv17_5800)) else "0";

    ilb_table_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, zext_ln656_2_fu_1151_p1, ap_block_pp0_stage1, zext_ln656_fu_1333_p1, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ilb_table_address0 <= zext_ln656_fu_1333_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ilb_table_address0 <= zext_ln656_2_fu_1151_p1(5 - 1 downto 0);
            else 
                ilb_table_address0 <= "XXXXX";
            end if;
        else 
            ilb_table_address0 <= "XXXXX";
        end if; 
    end process;


    ilb_table_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            ilb_table_ce0 <= ap_const_logic_1;
        else 
            ilb_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln425_fu_921_p1 <= mul_ln425_fu_921_p10(15 - 1 downto 0);
    mul_ln425_fu_921_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dec_detl_i),31));
    mul_ln428_fu_1256_p1 <= zext_ln425_1_reg_3425(15 - 1 downto 0);
    mul_ln472_fu_775_p1 <= mul_ln472_fu_775_p10(15 - 1 downto 0);
    mul_ln472_fu_775_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dec_deth_i),29));
    mul_ln679_12_fu_2007_p0 <= sext_ln425_1_fu_1945_p1(16 - 1 downto 0);
    mul_ln679_13_fu_2013_p0 <= sext_ln425_1_fu_1945_p1(16 - 1 downto 0);
    mul_ln679_14_fu_2019_p0 <= sext_ln425_1_fu_1945_p1(16 - 1 downto 0);
    mul_ln679_15_fu_2025_p0 <= sext_ln425_1_fu_1945_p1(16 - 1 downto 0);
    mul_ln679_16_fu_2031_p0 <= sext_ln425_1_fu_1945_p1(16 - 1 downto 0);
    mul_ln679_18_fu_1751_p0 <= sext_ln679_18_reg_3527(14 - 1 downto 0);
    mul_ln679_19_fu_1781_p0 <= sext_ln679_18_reg_3527(14 - 1 downto 0);
    mul_ln679_20_fu_1812_p0 <= sext_ln679_18_reg_3527(14 - 1 downto 0);
    mul_ln679_21_fu_2137_p0 <= sext_ln679_18_reg_3527(14 - 1 downto 0);
    mul_ln679_22_fu_2168_p0 <= sext_ln679_18_reg_3527(14 - 1 downto 0);
    mul_ln679_fu_2001_p0 <= sext_ln425_1_fu_1945_p1(16 - 1 downto 0);
    pl2_2_fu_1071_p3 <= (dec_rh2_i & ap_const_lv1_0);
    pl2_fu_891_p3 <= (dec_rlt2_i & ap_const_lv1_0);
    pl_4_fu_1655_p2 <= std_logic_vector(unsigned(mul_ln604_reg_3600) + unsigned(mul_ln600_reg_3780));
    pl_5_fu_1425_p3 <= (dec_rh1_i & ap_const_lv1_0);
    pl_6_fu_1689_p2 <= std_logic_vector(unsigned(mul_ln604_2_reg_3702) + unsigned(mul_ln600_2_reg_3831));
    pl_fu_1235_p3 <= (dec_rlt1_i & ap_const_lv1_0);
    qq4_code4_table_address0 <= zext_ln425_fu_734_p1(4 - 1 downto 0);

    qq4_code4_table_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            qq4_code4_table_ce0 <= ap_const_logic_1;
        else 
            qq4_code4_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    qq6_code6_table_address0 <= zext_ln428_fu_744_p1(6 - 1 downto 0);

    qq6_code6_table_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            qq6_code6_table_ce0 <= ap_const_logic_1;
        else 
            qq6_code6_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln641_fu_1282_p3 <= 
        ap_const_lv17_0 when (tmp_27_fu_1274_p3(0) = '1') else 
        add_ln640_reg_3443;
    select_ln643_fu_1299_p3 <= 
        ap_const_lv15_4800 when (icmp_ln643_fu_1293_p2(0) = '1') else 
        trunc_ln636_fu_1289_p1;
    select_ln666_12_fu_2253_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_29_fu_2245_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_13_fu_2278_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_30_fu_2270_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_14_fu_2302_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_31_fu_2294_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_15_fu_2326_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_32_fu_2318_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_16_fu_2350_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_33_fu_2342_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_17_fu_1597_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_37_fu_1589_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_18_fu_1768_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_38_fu_1760_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_19_fu_1798_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_39_fu_1790_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_20_fu_1829_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_40_fu_1821_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_21_fu_2154_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_41_fu_2146_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_22_fu_2419_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_42_fu_2411_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_fu_2228_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_28_fu_2220_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln705_2_fu_2880_p3 <= 
        sext_ln707_2_fu_2866_p1 when (tmp_43_reg_4186(0) = '1') else 
        tmp_5_fu_2870_p4;
    select_ln705_fu_2770_p3 <= 
        sext_ln707_fu_2756_p1 when (tmp_34_reg_4175(0) = '1') else 
        tmp_1_fu_2760_p4;
    select_ln716_2_fu_2922_p3 <= 
        ap_const_lv17_1FF80 when (tmp_44_reg_4192(0) = '1') else 
        ap_const_lv17_80;
    select_ln716_fu_2812_p3 <= 
        ap_const_lv17_1FF80 when (tmp_35_reg_4181(0) = '1') else 
        ap_const_lv17_80;
    select_ln735_2_fu_3124_p3 <= 
        ap_const_lv18_3FF40 when (tmp_43_reg_4186(0) = '1') else 
        ap_const_lv18_C0;
    select_ln735_fu_3041_p3 <= 
        ap_const_lv18_3FF40 when (tmp_34_reg_4175(0) = '1') else 
        ap_const_lv18_C0;
    select_ln761_fu_1100_p3 <= 
        ap_const_lv17_0 when (tmp_36_fu_1092_p3(0) = '1') else 
        add_ln760_reg_3372;
    select_ln763_fu_1117_p3 <= 
        ap_const_lv15_5800 when (icmp_ln763_fu_1111_p2(0) = '1') else 
        trunc_ln756_fu_1107_p1;
        sext_ln406_fu_2604_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xa1_reg_4155),39));

        sext_ln425_1_fu_1945_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln425_2_reg_3430),32));

        sext_ln428_1_fu_2206_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln425_2_reg_3430),31));

        sext_ln428_2_fu_2209_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln12_reg_3605),32));

        sext_ln472_1_fu_2080_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln472_1_reg_3364),32));

        sext_ln511_1_fu_2512_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln511_1_fu_2504_p3),37));

        sext_ln511_fu_2500_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln16_fu_2492_p3),37));

        sext_ln516_10_fu_1852_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_693),45));

    sext_ln516_11_fu_1857_p0 <= accumd_q1;
        sext_ln516_11_fu_1857_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln516_11_fu_1857_p0),42));

    sext_ln516_12_fu_1862_p0 <= accumc_q1;
        sext_ln516_12_fu_1862_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln516_12_fu_1862_p0),44));

        sext_ln516_13_fu_2537_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln18_fu_2530_p3),42));

        sext_ln516_14_fu_3171_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln517_fu_3165_p2),40));

    sext_ln516_15_fu_2184_p0 <= accumc_q1;
        sext_ln516_15_fu_2184_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln516_15_fu_2184_p0),41));

        sext_ln516_1_fu_1843_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_689),42));

        sext_ln516_2_fu_2615_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln17_fu_2607_p3),39));

        sext_ln516_3_fu_2627_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln516_1_fu_2619_p3),39));

    sext_ln516_4_fu_1478_p0 <= accumd_q0;
        sext_ln516_4_fu_1478_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln516_4_fu_1478_p0),42));

        sext_ln516_5_fu_2173_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_702),46));

        sext_ln516_7_fu_2180_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_706),46));

        sext_ln516_8_fu_1625_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_693),45));

        sext_ln516_fu_2522_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln505_fu_2486_p2),33));

        sext_ln517_10_fu_3150_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln517_1_fu_3143_p3),39));

        sext_ln517_11_fu_3161_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln517_2_fu_3154_p3),39));

    sext_ln517_1_fu_1194_p0 <= accumd_q1;
        sext_ln517_1_fu_1194_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln517_1_fu_1194_p0),41));

        sext_ln517_2_fu_2645_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln516_2_fu_2637_p3),45));

    sext_ln517_3_fu_1483_p0 <= accumd_q1;
        sext_ln517_3_fu_1483_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln517_3_fu_1483_p0),44));

        sext_ln517_4_fu_2177_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln516_reg_3916),45));

    sext_ln517_5_fu_1620_p0 <= accumd_q1;
        sext_ln517_5_fu_1620_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln517_5_fu_1620_p0),45));

    sext_ln517_7_fu_1847_p0 <= accumd_q0;
        sext_ln517_7_fu_1847_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln517_7_fu_1847_p0),45));

        sext_ln517_8_fu_2526_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_702),45));

        sext_ln517_fu_1612_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_663),33));

        sext_ln520_1_fu_2649_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp34_reg_4073),41));

        sext_ln520_2_fu_2658_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln520_fu_2652_p2),45));

        sext_ln520_3_fu_2673_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln520_3_fu_2667_p2),46));

        sext_ln520_4_fu_2551_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln520_4_fu_2545_p2),46));

        sext_ln520_5_fu_2683_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln520_6_fu_2677_p2),42));

        sext_ln520_6_fu_2692_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln520_7_fu_2687_p2),46));

        sext_ln520_fu_2541_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_670),33));

        sext_ln521_1_fu_2967_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln521_1_fu_2959_p3),37));

        sext_ln521_3_fu_3316_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln521_reg_3966),46));

        sext_ln521_4_fu_3178_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln521_4_reg_4170),45));

        sext_ln521_5_fu_3192_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln521_6_fu_3187_p2),40));

        sext_ln521_6_fu_3202_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln521_7_fu_3196_p2),45));

        sext_ln521_7_fu_3324_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln521_8_reg_4256),46));

        sext_ln521_fu_2955_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln19_fu_2947_p3),37));

        sext_ln587_10_fu_1537_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_659),40));

    sext_ln587_11_fu_1035_p0 <= dec_del_bph_q1;
        sext_ln587_11_fu_1035_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln587_11_fu_1035_p0),46));

    sext_ln587_12_fu_1044_p0 <= dec_del_dhx_q1;
        sext_ln587_12_fu_1044_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln587_12_fu_1044_p0),46));

    sext_ln587_8_fu_859_p0 <= dec_del_bpl_q1;
        sext_ln587_8_fu_859_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln587_8_fu_859_p0),46));

    sext_ln587_9_fu_864_p0 <= dec_del_dltx_q1;
        sext_ln587_9_fu_864_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln587_9_fu_864_p0),46));

    sext_ln587_fu_855_p0 <= dec_del_bpl_q1;
        sext_ln587_fu_855_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln587_fu_855_p0),40));

    sext_ln589_40_fu_873_p0 <= dec_del_bpl_q0;
        sext_ln589_40_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_40_fu_873_p0),46));

    sext_ln589_41_fu_878_p0 <= dec_del_dltx_q0;
        sext_ln589_41_fu_878_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_41_fu_878_p0),46));

    sext_ln589_42_fu_1199_p0 <= dec_del_bpl_q1;
        sext_ln589_42_fu_1199_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_42_fu_1199_p0),40));

    sext_ln589_43_fu_1203_p0 <= dec_del_bpl_q1;
        sext_ln589_43_fu_1203_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_43_fu_1203_p0),46));

    sext_ln589_44_fu_1208_p0 <= dec_del_dltx_q0;
        sext_ln589_44_fu_1208_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_44_fu_1208_p0),46));

    sext_ln589_45_fu_1213_p0 <= dec_del_bpl_q0;
        sext_ln589_45_fu_1213_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_45_fu_1213_p0),40));

    sext_ln589_46_fu_1217_p0 <= dec_del_bpl_q0;
        sext_ln589_46_fu_1217_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_46_fu_1217_p0),46));

    sext_ln589_47_fu_1222_p0 <= dec_del_dltx_q1;
        sext_ln589_47_fu_1222_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_47_fu_1222_p0),46));

        sext_ln589_48_fu_1894_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_del_bpl_load_4_reg_3738),40));

    sext_ln589_49_fu_1488_p0 <= dec_del_bpl_q1;
        sext_ln589_49_fu_1488_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_49_fu_1488_p0),46));

    sext_ln589_50_fu_1493_p0 <= dec_del_dltx_q1;
        sext_ln589_50_fu_1493_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_50_fu_1493_p0),46));

        sext_ln589_51_fu_1900_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_del_bpl_load_5_reg_3759),40));

    sext_ln589_52_fu_1498_p0 <= dec_del_bpl_q0;
        sext_ln589_52_fu_1498_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_52_fu_1498_p0),46));

    sext_ln589_53_fu_1503_p0 <= dec_del_dltx_q0;
        sext_ln589_53_fu_1503_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_53_fu_1503_p0),46));

    sext_ln589_54_fu_1049_p0 <= dec_del_bph_q0;
        sext_ln589_54_fu_1049_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_54_fu_1049_p0),40));

    sext_ln589_55_fu_1053_p0 <= dec_del_bph_q0;
        sext_ln589_55_fu_1053_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_55_fu_1053_p0),46));

    sext_ln589_56_fu_1058_p0 <= dec_del_dhx_q0;
        sext_ln589_56_fu_1058_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_56_fu_1058_p0),46));

        sext_ln589_57_fu_1672_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_del_bph_load_2_reg_3641),40));

    sext_ln589_58_fu_1397_p0 <= dec_del_bph_q1;
        sext_ln589_58_fu_1397_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_58_fu_1397_p0),46));

    sext_ln589_59_fu_1402_p0 <= dec_del_dhx_q0;
        sext_ln589_59_fu_1402_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_59_fu_1402_p0),46));

        sext_ln589_60_fu_1678_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_del_bph_load_3_reg_3663),40));

    sext_ln589_61_fu_1407_p0 <= dec_del_bph_q0;
        sext_ln589_61_fu_1407_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_61_fu_1407_p0),46));

    sext_ln589_62_fu_1412_p0 <= dec_del_dhx_q1;
        sext_ln589_62_fu_1412_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_62_fu_1412_p0),46));

        sext_ln589_63_fu_2037_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_659),40));

    sext_ln589_64_fu_1541_p0 <= dec_del_bph_q1;
        sext_ln589_64_fu_1541_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_64_fu_1541_p0),46));

    sext_ln589_65_fu_1546_p0 <= dec_del_dhx_q1;
        sext_ln589_65_fu_1546_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_65_fu_1546_p0),46));

        sext_ln589_66_fu_2044_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_del_bph_load_5_reg_3810),40));

    sext_ln589_67_fu_1551_p0 <= dec_del_bph_q0;
        sext_ln589_67_fu_1551_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_67_fu_1551_p0),46));

    sext_ln589_68_fu_1556_p0 <= dec_del_dhx_q0;
        sext_ln589_68_fu_1556_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_68_fu_1556_p0),46));

    sext_ln589_fu_869_p0 <= dec_del_bpl_q0;
        sext_ln589_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_fu_869_p0),40));

        sext_ln602_2_fu_3060_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_ah1_load_reg_3684),25));

        sext_ln602_fu_2977_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_al1_load_reg_3582),25));

        sext_ln604_5_fu_2837_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_ah2_load_reg_3491),23));

        sext_ln604_fu_2727_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_al2_load_reg_3409),23));

        sext_ln636_fu_1271_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln640_reg_3443),32));

        sext_ln640_2_fu_977_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(wl_code_table_q0),17));

        sext_ln640_fu_973_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln13_fu_963_p4),17));

        sext_ln679_13_fu_2242_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_12_reg_4003),64));

        sext_ln679_14_fu_2267_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_13_reg_4008),64));

        sext_ln679_15_fu_2291_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_14_reg_4013),64));

        sext_ln679_16_fu_2315_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_15_reg_4018),64));

        sext_ln679_17_fu_2339_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_16_reg_4023),64));

        sext_ln679_18_fu_1185_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln472_1_reg_3364),28));

        sext_ln679_19_fu_1586_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_17_reg_3536),64));

        sext_ln679_20_fu_1756_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_18_fu_1751_p2),64));

        sext_ln679_21_fu_1786_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_19_fu_1781_p2),64));

        sext_ln679_22_fu_1817_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_20_fu_1812_p2),64));

        sext_ln679_23_fu_2142_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_21_fu_2137_p2),64));

        sext_ln679_24_fu_2408_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_22_reg_4046),64));

        sext_ln679_fu_2217_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_reg_3998),64));

        sext_ln702_2_fu_2847_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(wd2_2_fu_2840_p3),19));

        sext_ln702_fu_2737_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(wd2_fu_2730_p3),19));

        sext_ln705_5_fu_2440_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln481_reg_4028),64));

        sext_ln705_fu_2371_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln440_reg_3981),64));

        sext_ln707_2_fu_2866_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_2857_p4),12));

        sext_ln707_fu_2756_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_2747_p4),12));

        sext_ln708_4_fu_2777_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln705_fu_2770_p3),17));

        sext_ln708_5_fu_2887_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln705_2_fu_2880_p3),17));

        sext_ln716_4_fu_2808_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln15_fu_2798_p4),17));

        sext_ln716_5_fu_2898_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln716_2_fu_2891_p3),23));

        sext_ln716_6_fu_2918_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln716_2_fu_2908_p4),17));

        sext_ln716_fu_2788_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln13_fu_2781_p3),23));

        sext_ln734_2_fu_3100_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln734_2_fu_3093_p3),25));

        sext_ln734_fu_3017_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln14_fu_3010_p3),25));

        sext_ln735_2_fu_3120_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln734_2_fu_3110_p4),18));

        sext_ln735_fu_3037_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln16_fu_3027_p4),18));

        sext_ln747_2_fu_3292_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(apl1_13_fu_3286_p2),18));

        sext_ln747_fu_3240_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(apl1_9_fu_3234_p2),18));

        sext_ln756_fu_1089_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln760_reg_3372),32));

        sext_ln758_fu_827_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(wd_fu_817_p4),17));

        sext_ln760_fu_845_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_831_p6),17));

    shl_ln11_fu_1523_p3 <= (wd3_fu_1517_p2 & ap_const_lv3_0);
    shl_ln12_fu_987_p1 <= dec_del_bpl_q1;
    shl_ln12_fu_987_p3 <= (shl_ln12_fu_987_p1 & ap_const_lv8_0);
    shl_ln13_fu_2781_p3 <= (dec_al2_load_reg_3409 & ap_const_lv7_0);
    shl_ln14_fu_3010_p3 <= (dec_al1_load_reg_3582 & ap_const_lv8_0);
    shl_ln15_fu_799_p3 <= (dec_nbh_i & ap_const_lv7_0);
    shl_ln16_fu_2492_p3 <= (sub_ln504_fu_2480_p2 & ap_const_lv4_0);
    shl_ln17_fu_2607_p1 <= reg_693;
    shl_ln17_fu_2607_p3 <= (shl_ln17_fu_2607_p1 & ap_const_lv6_0);
    shl_ln18_fu_2530_p3 <= (accumd_load_7_reg_4051 & ap_const_lv7_0);
    shl_ln19_fu_2947_p1 <= reg_670;
    shl_ln19_fu_2947_p3 <= (shl_ln19_fu_2947_p1 & ap_const_lv4_0);
    shl_ln511_1_fu_2504_p3 <= (sub_ln504_fu_2480_p2 & ap_const_lv2_0);
    shl_ln516_1_fu_2619_p1 <= reg_693;
    shl_ln516_1_fu_2619_p3 <= (shl_ln516_1_fu_2619_p1 & ap_const_lv4_0);
    shl_ln516_2_fu_2637_p1 <= reg_663;
    shl_ln516_2_fu_2637_p3 <= (shl_ln516_2_fu_2637_p1 & ap_const_lv7_0);
    shl_ln517_1_fu_3143_p3 <= (accumd_load_8_reg_4062 & ap_const_lv6_0);
    shl_ln517_2_fu_3154_p3 <= (accumd_load_8_reg_4062 & ap_const_lv4_0);
    shl_ln521_1_fu_2959_p1 <= reg_670;
    shl_ln521_1_fu_2959_p3 <= (shl_ln521_1_fu_2959_p1 & ap_const_lv2_0);
    shl_ln657_2_fu_1458_p3 <= (wd3_21_fu_1452_p2 & ap_const_lv3_0);
    shl_ln672_11_fu_1343_p1 <= dec_del_bpl_q1;
    shl_ln672_11_fu_1343_p3 <= (shl_ln672_11_fu_1343_p1 & ap_const_lv8_0);
    shl_ln672_12_fu_1367_p1 <= dec_del_bpl_q0;
    shl_ln672_12_fu_1367_p3 <= (shl_ln672_12_fu_1367_p1 & ap_const_lv8_0);
    shl_ln672_13_fu_1954_p3 <= (dec_del_bpl_load_4_reg_3738 & ap_const_lv8_0);
    shl_ln672_14_fu_1978_p3 <= (dec_del_bpl_load_5_reg_3759 & ap_const_lv8_0);
    shl_ln672_15_fu_1561_p3 <= (reg_659 & ap_const_lv8_0);
    shl_ln672_16_fu_1161_p1 <= dec_del_bph_q0;
    shl_ln672_16_fu_1161_p3 <= (shl_ln672_16_fu_1161_p1 & ap_const_lv8_0);
    shl_ln672_17_fu_1703_p3 <= (dec_del_bph_load_2_reg_3641 & ap_const_lv8_0);
    shl_ln672_18_fu_1727_p3 <= (dec_del_bph_load_3_reg_3663 & ap_const_lv8_0);
    shl_ln672_19_fu_2089_p3 <= (reg_659 & ap_const_lv8_0);
    shl_ln672_20_fu_2114_p3 <= (dec_del_bph_load_5_reg_3810 & ap_const_lv8_0);
    shl_ln672_s_fu_1011_p1 <= dec_del_bpl_q0;
    shl_ln672_s_fu_1011_p3 <= (shl_ln672_s_fu_1011_p1 & ap_const_lv8_0);
    shl_ln716_2_fu_2891_p3 <= (dec_ah2_load_reg_3491 & ap_const_lv7_0);
    shl_ln734_2_fu_3093_p3 <= (dec_ah1_load_reg_3684 & ap_const_lv8_0);
    shl_ln_fu_945_p3 <= (dec_nbl_i & ap_const_lv7_0);
    sub_ln504_fu_2480_p2 <= std_logic_vector(unsigned(add_ln430_fu_2212_p2) - unsigned(add_ln493_fu_2455_p2));
    sub_ln516_fu_2631_p2 <= std_logic_vector(signed(sext_ln516_2_fu_2615_p1) - signed(sext_ln516_3_fu_2627_p1));
    sub_ln517_fu_3165_p2 <= std_logic_vector(signed(sext_ln517_10_fu_3150_p1) - signed(sext_ln517_11_fu_3161_p1));
        sub_ln521_cast_fu_3175_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln521_reg_4222),39));

    sub_ln521_fu_2971_p2 <= std_logic_vector(signed(sext_ln521_fu_2955_p1) - signed(sext_ln521_1_fu_2967_p1));
    sub_ln639_fu_957_p2 <= std_logic_vector(unsigned(zext_ln639_2_fu_953_p1) - unsigned(zext_ln639_fu_941_p1));
    sub_ln656_2_fu_1443_p2 <= std_logic_vector(signed(ap_const_lv4_B) - signed(trunc_ln653_2_reg_3507));
    sub_ln656_2cast_fu_1448_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln656_2_fu_1443_p2),12));
    sub_ln656_fu_1508_p2 <= std_logic_vector(unsigned(ap_const_lv4_9) - unsigned(trunc_ln14_reg_3610));
    sub_ln656cast_fu_1513_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln656_fu_1508_p2),12));
    sub_ln672_12_fu_1019_p2 <= std_logic_vector(unsigned(shl_ln672_s_fu_1011_p3) - unsigned(sext_ln589_fu_869_p1));
    sub_ln672_13_fu_1351_p2 <= std_logic_vector(unsigned(shl_ln672_11_fu_1343_p3) - unsigned(sext_ln589_42_fu_1199_p1));
    sub_ln672_14_fu_1375_p2 <= std_logic_vector(unsigned(shl_ln672_12_fu_1367_p3) - unsigned(sext_ln589_45_fu_1213_p1));
    sub_ln672_15_fu_1961_p2 <= std_logic_vector(unsigned(shl_ln672_13_fu_1954_p3) - unsigned(sext_ln589_48_fu_1894_p1));
    sub_ln672_16_fu_1985_p2 <= std_logic_vector(unsigned(shl_ln672_14_fu_1978_p3) - unsigned(sext_ln589_51_fu_1900_p1));
    sub_ln672_17_fu_1569_p2 <= std_logic_vector(unsigned(shl_ln672_15_fu_1561_p3) - unsigned(sext_ln587_10_fu_1537_p1));
    sub_ln672_18_fu_1169_p2 <= std_logic_vector(unsigned(shl_ln672_16_fu_1161_p3) - unsigned(sext_ln589_54_fu_1049_p1));
    sub_ln672_19_fu_1710_p2 <= std_logic_vector(unsigned(shl_ln672_17_fu_1703_p3) - unsigned(sext_ln589_57_fu_1672_p1));
    sub_ln672_20_fu_1734_p2 <= std_logic_vector(unsigned(shl_ln672_18_fu_1727_p3) - unsigned(sext_ln589_60_fu_1678_p1));
    sub_ln672_21_fu_2097_p2 <= std_logic_vector(unsigned(shl_ln672_19_fu_2089_p3) - unsigned(sext_ln589_63_fu_2037_p1));
    sub_ln672_22_fu_2121_p2 <= std_logic_vector(unsigned(shl_ln672_20_fu_2114_p3) - unsigned(sext_ln589_66_fu_2044_p1));
    sub_ln672_fu_995_p2 <= std_logic_vector(unsigned(shl_ln12_fu_987_p3) - unsigned(sext_ln587_fu_855_p1));
    sub_ln706_2_fu_2851_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(sext_ln702_2_fu_2847_p1));
    sub_ln706_fu_2741_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(sext_ln702_fu_2737_p1));
    sub_ln716_2_fu_2902_p2 <= std_logic_vector(signed(sext_ln716_5_fu_2898_p1) - signed(sext_ln604_5_fu_2837_p1));
    sub_ln716_fu_2792_p2 <= std_logic_vector(signed(sext_ln716_fu_2788_p1) - signed(sext_ln604_fu_2727_p1));
    sub_ln734_2_fu_3104_p2 <= std_logic_vector(signed(sext_ln734_2_fu_3100_p1) - signed(sext_ln602_2_fu_3060_p1));
    sub_ln734_fu_3021_p2 <= std_logic_vector(signed(sext_ln734_fu_3017_p1) - signed(sext_ln602_fu_2977_p1));
    sub_ln759_fu_811_p2 <= std_logic_vector(unsigned(zext_ln759_2_fu_807_p1) - unsigned(zext_ln759_fu_795_p1));
    tmp35_fu_2560_p2 <= std_logic_vector(signed(sext_ln520_fu_2541_p1) + signed(sext_ln516_fu_2522_p1));
    tmp_1_fu_2760_p4 <= sub_ln706_fu_2741_p2(18 downto 7);
    tmp_27_fu_1274_p3 <= sext_ln636_fu_1271_p1(31 downto 31);
    tmp_28_fu_2220_p3 <= sext_ln679_fu_2217_p1(63 downto 63);
    tmp_29_fu_2245_p3 <= sext_ln679_13_fu_2242_p1(63 downto 63);
    tmp_2_fu_2857_p4 <= dec_ah1_load_reg_3684(15 downto 5);
    tmp_30_fu_2270_p3 <= sext_ln679_14_fu_2267_p1(63 downto 63);
    tmp_31_fu_2294_p3 <= sext_ln679_15_fu_2291_p1(63 downto 63);
    tmp_32_fu_2318_p3 <= sext_ln679_16_fu_2315_p1(63 downto 63);
    tmp_33_fu_2342_p3 <= sext_ln679_17_fu_2339_p1(63 downto 63);
    tmp_36_fu_1092_p3 <= sext_ln756_fu_1089_p1(31 downto 31);
    tmp_37_fu_1589_p3 <= sext_ln679_19_fu_1586_p1(63 downto 63);
    tmp_38_fu_1760_p3 <= sext_ln679_20_fu_1756_p1(63 downto 63);
    tmp_39_fu_1790_p3 <= sext_ln679_21_fu_1786_p1(63 downto 63);
    tmp_3_fu_757_p5 <= input_r(7 downto 6);
    tmp_40_fu_1821_p3 <= sext_ln679_22_fu_1817_p1(63 downto 63);
    tmp_41_fu_2146_p3 <= sext_ln679_23_fu_2142_p1(63 downto 63);
    tmp_42_fu_2411_p3 <= sext_ln679_24_fu_2408_p1(63 downto 63);
    tmp_4_fu_831_p5 <= input_r(7 downto 6);
    tmp_5_fu_2870_p4 <= sub_ln706_2_fu_2851_p2(18 downto 7);
    tmp_fu_1644_p2 <= std_logic_vector(signed(accumc_load_10_cast_fu_1640_p1) + signed(sext_ln517_fu_1612_p1));
    tmp_s_fu_2747_p4 <= dec_al1_load_reg_3582(15 downto 5);
    trunc_ln13_fu_963_p4 <= sub_ln639_fu_957_p2(22 downto 7);
    trunc_ln15_fu_2798_p4 <= sub_ln716_fu_2792_p2(22 downto 7);
    trunc_ln16_fu_3027_p4 <= sub_ln734_fu_3021_p2(24 downto 8);
    trunc_ln425_1_fu_724_p4 <= input_r(5 downto 2);
    trunc_ln425_fu_1941_p1 <= add_ln422_fu_1936_p2(31 - 1 downto 0);
    trunc_ln496_fu_2459_p1 <= add_ln493_fu_2455_p2(31 - 1 downto 0);
    trunc_ln591_2_fu_2070_p4 <= zl_6_fu_2064_p2(45 downto 14);
    trunc_ln636_fu_1289_p1 <= select_ln641_fu_1282_p3(15 - 1 downto 0);
    trunc_ln703_2_fu_3069_p1 <= apl2_9_fu_3063_p3(15 - 1 downto 0);
    trunc_ln703_fu_2986_p1 <= apl2_6_fu_2980_p3(15 - 1 downto 0);
    trunc_ln716_2_fu_2908_p4 <= sub_ln716_2_fu_2902_p2(22 downto 7);
    trunc_ln733_2_fu_3282_p1 <= apl1_12_fu_3275_p3(16 - 1 downto 0);
    trunc_ln733_fu_3230_p1 <= apl1_8_fu_3223_p3(16 - 1 downto 0);
    trunc_ln734_2_fu_3110_p4 <= sub_ln734_2_fu_3104_p2(24 downto 8);
    trunc_ln756_fu_1107_p1 <= select_ln761_fu_1100_p3(15 - 1 downto 0);
    trunc_ln_fu_1926_p4 <= zl_4_fu_1920_p2(45 downto 14);
    wd1_2_fu_1131_p4 <= select_ln763_fu_1117_p3(10 downto 6);
    wd1_fu_1313_p4 <= select_ln643_fu_1299_p3(10 downto 6);
    wd2_2_fu_2840_p3 <= (dec_ah1_load_reg_3684 & ap_const_lv2_0);
    wd2_fu_2730_p3 <= (dec_al1_load_reg_3582 & ap_const_lv2_0);
    wd3_20_fu_3054_p2 <= std_logic_vector(unsigned(ap_const_lv15_3C00) - unsigned(apl2_7_fu_2996_p3));
    wd3_21_fu_1452_p2 <= std_logic_vector(shift_right(unsigned(ilb_table_q0),to_integer(unsigned('0' & sub_ln656_2cast_fu_1448_p1(12-1 downto 0)))));
    wd3_23_fu_1716_p4 <= sub_ln672_19_fu_1710_p2(39 downto 8);
    wd3_24_fu_1740_p4 <= sub_ln672_20_fu_1734_p2(39 downto 8);
    wd3_25_fu_2103_p4 <= sub_ln672_21_fu_2097_p2(39 downto 8);
    wd3_27_fu_1575_p4 <= sub_ln672_17_fu_1569_p2(39 downto 8);
    wd3_28_fu_3137_p2 <= std_logic_vector(unsigned(ap_const_lv15_3C00) - unsigned(apl2_10_fu_3079_p3));
    wd3_fu_1517_p2 <= std_logic_vector(shift_right(unsigned(ilb_table_q0),to_integer(unsigned('0' & sub_ln656cast_fu_1513_p1(12-1 downto 0)))));
    wd_fu_817_p4 <= sub_ln759_fu_811_p2(22 downto 7);
    wl_code_table_address0 <= zext_ln425_fu_734_p1(4 - 1 downto 0);

    wl_code_table_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            wl_code_table_ce0 <= ap_const_logic_1;
        else 
            wl_code_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    xa1_1_fu_2701_p2 <= std_logic_vector(unsigned(add_ln520_8_fu_2696_p2) + unsigned(sext_ln520_3_fu_2673_p1));
    xa1_fu_2516_p2 <= std_logic_vector(signed(sext_ln511_fu_2500_p1) - signed(sext_ln511_1_fu_2512_p1));
    xa2_fu_3327_p2 <= std_logic_vector(signed(sext_ln521_7_fu_3324_p1) + signed(add_ln521_3_fu_3319_p2));
    xout1 <= xa1_1_fu_2701_p2(45 downto 14);

    xout1_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            xout1_ap_vld <= ap_const_logic_1;
        else 
            xout1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xout2 <= xa2_fu_3327_p2(45 downto 14);

    xout2_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            xout2_ap_vld <= ap_const_logic_1;
        else 
            xout2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln425_1_fu_913_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dec_detl_i),31));
    zext_ln425_fu_734_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln425_1_fu_724_p4),64));
    zext_ln428_fu_744_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(il),64));
    zext_ln639_2_fu_953_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_945_p3),23));
    zext_ln639_fu_941_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dec_nbl_i),23));
    zext_ln656_2_fu_1151_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd1_2_fu_1131_p4),64));
    zext_ln656_fu_1333_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd1_fu_1313_p4),64));
    zext_ln733_4_fu_3215_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd3_20_reg_4238),16));
    zext_ln733_5_fu_3264_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd3_28_reg_4250),18));
    zext_ln733_6_fu_3267_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd3_28_reg_4250),16));
    zext_ln733_fu_3212_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd3_20_reg_4238),18));
    zext_ln759_2_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln15_fu_799_p3),23));
    zext_ln759_fu_795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dec_nbh_i),23));
    zl_4_fu_1920_p2 <= std_logic_vector(unsigned(add_ln589_12_fu_1915_p2) + unsigned(add_ln589_10_fu_1906_p2));
    zl_6_fu_2064_p2 <= std_logic_vector(unsigned(add_ln589_17_fu_2059_p2) + unsigned(add_ln589_15_fu_2050_p2));
end behav;
