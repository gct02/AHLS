-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity adpcm_main_encode is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    xin1 : IN STD_LOGIC_VECTOR (31 downto 0);
    xin2 : IN STD_LOGIC_VECTOR (31 downto 0);
    rlt1_i : IN STD_LOGIC_VECTOR (30 downto 0);
    rlt1_o : OUT STD_LOGIC_VECTOR (30 downto 0);
    rlt1_o_ap_vld : OUT STD_LOGIC;
    al1_i : IN STD_LOGIC_VECTOR (15 downto 0);
    al1_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    al1_o_ap_vld : OUT STD_LOGIC;
    rlt2_i : IN STD_LOGIC_VECTOR (30 downto 0);
    rlt2_o : OUT STD_LOGIC_VECTOR (30 downto 0);
    rlt2_o_ap_vld : OUT STD_LOGIC;
    al2_i : IN STD_LOGIC_VECTOR (14 downto 0);
    al2_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    al2_o_ap_vld : OUT STD_LOGIC;
    detl_i : IN STD_LOGIC_VECTOR (14 downto 0);
    detl_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    detl_o_ap_vld : OUT STD_LOGIC;
    il : OUT STD_LOGIC_VECTOR (5 downto 0);
    il_ap_vld : OUT STD_LOGIC;
    nbl_i : IN STD_LOGIC_VECTOR (14 downto 0);
    nbl_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    nbl_o_ap_vld : OUT STD_LOGIC;
    plt1_i : IN STD_LOGIC_VECTOR (31 downto 0);
    plt1_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    plt1_o_ap_vld : OUT STD_LOGIC;
    plt2_i : IN STD_LOGIC_VECTOR (31 downto 0);
    plt2_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    plt2_o_ap_vld : OUT STD_LOGIC;
    rh1_i : IN STD_LOGIC_VECTOR (30 downto 0);
    rh1_o : OUT STD_LOGIC_VECTOR (30 downto 0);
    rh1_o_ap_vld : OUT STD_LOGIC;
    ah1_i : IN STD_LOGIC_VECTOR (15 downto 0);
    ah1_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    ah1_o_ap_vld : OUT STD_LOGIC;
    rh2_i : IN STD_LOGIC_VECTOR (30 downto 0);
    rh2_o : OUT STD_LOGIC_VECTOR (30 downto 0);
    rh2_o_ap_vld : OUT STD_LOGIC;
    ah2_i : IN STD_LOGIC_VECTOR (14 downto 0);
    ah2_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    ah2_o_ap_vld : OUT STD_LOGIC;
    deth_i : IN STD_LOGIC_VECTOR (14 downto 0);
    deth_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    deth_o_ap_vld : OUT STD_LOGIC;
    nbh_i : IN STD_LOGIC_VECTOR (14 downto 0);
    nbh_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    nbh_o_ap_vld : OUT STD_LOGIC;
    ph1_i : IN STD_LOGIC_VECTOR (31 downto 0);
    ph1_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    ph1_o_ap_vld : OUT STD_LOGIC;
    ph2_i : IN STD_LOGIC_VECTOR (31 downto 0);
    ph2_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    ph2_o_ap_vld : OUT STD_LOGIC;
    tqmf_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    tqmf_ce0 : OUT STD_LOGIC;
    tqmf_we0 : OUT STD_LOGIC;
    tqmf_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    tqmf_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    tqmf_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    tqmf_ce1 : OUT STD_LOGIC;
    tqmf_we1 : OUT STD_LOGIC;
    tqmf_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    tqmf_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    delay_bpl_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    delay_bpl_ce0 : OUT STD_LOGIC;
    delay_bpl_we0 : OUT STD_LOGIC;
    delay_bpl_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    delay_bpl_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    delay_bpl_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    delay_bpl_ce1 : OUT STD_LOGIC;
    delay_bpl_we1 : OUT STD_LOGIC;
    delay_bpl_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    delay_bpl_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    delay_dltx_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    delay_dltx_ce0 : OUT STD_LOGIC;
    delay_dltx_we0 : OUT STD_LOGIC;
    delay_dltx_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    delay_dltx_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    delay_dltx_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    delay_dltx_ce1 : OUT STD_LOGIC;
    delay_dltx_we1 : OUT STD_LOGIC;
    delay_dltx_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    delay_dltx_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    delay_bph_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    delay_bph_ce0 : OUT STD_LOGIC;
    delay_bph_we0 : OUT STD_LOGIC;
    delay_bph_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    delay_bph_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    delay_bph_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    delay_bph_ce1 : OUT STD_LOGIC;
    delay_bph_we1 : OUT STD_LOGIC;
    delay_bph_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    delay_bph_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    delay_dhx_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    delay_dhx_ce0 : OUT STD_LOGIC;
    delay_dhx_we0 : OUT STD_LOGIC;
    delay_dhx_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    delay_dhx_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    delay_dhx_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    delay_dhx_ce1 : OUT STD_LOGIC;
    delay_dhx_we1 : OUT STD_LOGIC;
    delay_dhx_d1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    delay_dhx_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of adpcm_main_encode is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000100000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000001000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000010000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000100000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (24 downto 0) := "0000000001000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (24 downto 0) := "0000000010000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (24 downto 0) := "0000000100000000000000000";
    constant ap_ST_fsm_pp0_stage18 : STD_LOGIC_VECTOR (24 downto 0) := "0000001000000000000000000";
    constant ap_ST_fsm_pp0_stage19 : STD_LOGIC_VECTOR (24 downto 0) := "0000010000000000000000000";
    constant ap_ST_fsm_pp0_stage20 : STD_LOGIC_VECTOR (24 downto 0) := "0000100000000000000000000";
    constant ap_ST_fsm_pp0_stage21 : STD_LOGIC_VECTOR (24 downto 0) := "0001000000000000000000000";
    constant ap_ST_fsm_pp0_stage22 : STD_LOGIC_VECTOR (24 downto 0) := "0010000000000000000000000";
    constant ap_ST_fsm_pp0_stage23 : STD_LOGIC_VECTOR (24 downto 0) := "0100000000000000000000000";
    constant ap_ST_fsm_pp0_stage24 : STD_LOGIC_VECTOR (24 downto 0) := "1000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv41_D4 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000011010100";
    constant ap_const_lv44_5A8 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000010110101000";
    constant ap_const_lv45_EDC : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000111011011100";
    constant ap_const_lv47_3C90 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000011110010010000";
    constant ap_const_lv42_3FFFFFFFCB8 : STD_LOGIC_VECTOR (41 downto 0) := "111111111111111111111111111111110010111000";
    constant ap_const_lv42_3FFFFFFFD90 : STD_LOGIC_VECTOR (41 downto 0) := "111111111111111111111111111111110110010000";
    constant ap_const_lv43_7FFFFFFFD90 : STD_LOGIC_VECTOR (42 downto 0) := "1111111111111111111111111111111110110010000";
    constant ap_const_lv43_7FFFFFFFCB8 : STD_LOGIC_VECTOR (42 downto 0) := "1111111111111111111111111111111110010111000";
    constant ap_const_lv44_FFFFFFFF36C : STD_LOGIC_VECTOR (43 downto 0) := "11111111111111111111111111111111001101101100";
    constant ap_const_lv45_1FFFFFFFF36C : STD_LOGIC_VECTOR (44 downto 0) := "111111111111111111111111111111111001101101100";
    constant ap_const_lv40_FFFFFFFFD4 : STD_LOGIC_VECTOR (39 downto 0) := "1111111111111111111111111111111111010100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv24_118 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000100011000";
    constant ap_const_lv25_234 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000001000110100";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv25_370 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000001101110000";
    constant ap_const_lv26_4B0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010010110000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv26_5F0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000010111110000";
    constant ap_const_lv26_748 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000011101001000";
    constant ap_const_lv27_8A0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000100010100000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv27_A18 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000101000011000";
    constant ap_const_lv27_B90 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000101110010000";
    constant ap_const_lv27_D30 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000110100110000";
    constant ap_const_lv27_EC8 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000111011001000";
    constant ap_const_lv28_1090 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000001000010010000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv28_1258 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000001001001011000";
    constant ap_const_lv28_1450 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000001010001010000";
    constant ap_const_lv28_1650 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000001011001010000";
    constant ap_const_lv28_1890 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000001100010010000";
    constant ap_const_lv28_1AD0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000001101011010000";
    constant ap_const_lv28_1D60 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000001110101100000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv29_2308 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000010001100001000";
    constant ap_const_lv29_2618 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000010011000011000";
    constant ap_const_lv29_29D8 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000010100111011000";
    constant ap_const_lv29_2D90 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000010110110010000";
    constant ap_const_lv29_3260 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000011001001100000";
    constant ap_const_lv29_3728 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000011011100101000";
    constant ap_const_lv29_3DE0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000011110111100000";
    constant ap_const_lv30_4498 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000100010010011000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv14_2310 : STD_LOGIC_VECTOR (13 downto 0) := "10001100010000";
    constant ap_const_lv14_39B0 : STD_LOGIC_VECTOR (13 downto 0) := "11100110110000";
    constant ap_const_lv14_1CF0 : STD_LOGIC_VECTOR (13 downto 0) := "01110011110000";
    constant ap_const_lv14_650 : STD_LOGIC_VECTOR (13 downto 0) := "00011001010000";
    constant ap_const_lv11_31E : STD_LOGIC_VECTOR (10 downto 0) := "01100011110";
    constant ap_const_lv11_72A : STD_LOGIC_VECTOR (10 downto 0) := "11100101010";
    constant ap_const_lv30_4FE8 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000100111111101000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv17_5800 : STD_LOGIC_VECTOR (16 downto 0) := "00101100000000000";
    constant ap_const_lv15_5800 : STD_LOGIC_VECTOR (14 downto 0) := "101100000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv30_5B38 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000101101100111000";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv32_FFFFFF80 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111110000000";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv17_1FF80 : STD_LOGIC_VECTOR (16 downto 0) := "11111111110000000";
    constant ap_const_lv17_80 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_const_lv17_3000 : STD_LOGIC_VECTOR (16 downto 0) := "00011000000000000";
    constant ap_const_lv17_1D000 : STD_LOGIC_VECTOR (16 downto 0) := "11101000000000000";
    constant ap_const_lv15_5000 : STD_LOGIC_VECTOR (14 downto 0) := "101000000000000";
    constant ap_const_lv18_3FF40 : STD_LOGIC_VECTOR (17 downto 0) := "111111111101000000";
    constant ap_const_lv18_C0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000011000000";
    constant ap_const_lv15_3C00 : STD_LOGIC_VECTOR (14 downto 0) := "011110000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv17_4800 : STD_LOGIC_VECTOR (16 downto 0) := "00100100000000000";
    constant ap_const_lv15_4800 : STD_LOGIC_VECTOR (14 downto 0) := "100100000000000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage24 : signal is "none";
    signal ap_block_pp0_stage24_subdone : BOOLEAN;
    signal quant26bt_pos_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal quant26bt_pos_ce0 : STD_LOGIC;
    signal quant26bt_pos_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal quant26bt_neg_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal quant26bt_neg_ce0 : STD_LOGIC;
    signal quant26bt_neg_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal qq4_code4_table_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal qq4_code4_table_ce0 : STD_LOGIC;
    signal qq4_code4_table_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal wl_code_table_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal wl_code_table_ce0 : STD_LOGIC;
    signal wl_code_table_q0 : STD_LOGIC_VECTOR (12 downto 0);
    signal ilb_table_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal ilb_table_ce0 : STD_LOGIC;
    signal ilb_table_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal storemerge29_reg_833 : STD_LOGIC_VECTOR (31 downto 0);
    signal ril_2_reg_844 : STD_LOGIC_VECTOR (5 downto 0);
    signal storemerge_reg_856 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_972 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal reg_978 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal grp_fu_887_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal reg_984 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal grp_fu_875_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal reg_988 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_879_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal reg_992 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_883_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal reg_996 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_867_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal reg_1000 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_871_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal reg_1004 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_899_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal reg_1008 : STD_LOGIC_VECTOR (40 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal grp_fu_930_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal reg_1012 : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_fu_904_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal reg_1016 : STD_LOGIC_VECTOR (43 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal grp_fu_924_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal reg_1020 : STD_LOGIC_VECTOR (41 downto 0);
    signal reg_1024 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal reg_1030 : STD_LOGIC_VECTOR (31 downto 0);
    signal detl_load_reg_4546 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal decis_reg_4562 : STD_LOGIC_VECTOR (8 downto 0);
    signal ah1_load_reg_4567 : STD_LOGIC_VECTOR (15 downto 0);
    signal ah2_load_reg_4575 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln600_3_fu_1100_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln600_4_fu_1105_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln600_5_fu_1118_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln604_3_fu_1123_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal deth_load_reg_4601 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln359_fu_1136_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln359_reg_4606 : STD_LOGIC_VECTOR (24 downto 0);
    signal delay_bpl_load_reg_4611 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln587_1_fu_1148_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal delay_dltx_load_reg_4622 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln587_3_fu_1153_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal delay_bpl_load_2_reg_4633 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_5_fu_1158_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal delay_dltx_load_2_reg_4644 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln589_7_fu_1163_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal al2_load_reg_4654 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln600_2_fu_1184_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln604_1_fu_1189_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln587_5_fu_1198_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal delay_dhx_load_reg_4675 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln587_7_fu_1203_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln589_25_fu_1212_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal delay_dhx_load_2_reg_4691 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln589_27_fu_1217_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal wd3_9_reg_4701 : STD_LOGIC_VECTOR (31 downto 0);
    signal wd3_10_reg_4707 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_1282_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_reg_4713 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp34_fu_1292_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp34_reg_4718 : STD_LOGIC_VECTOR (32 downto 0);
    signal delay_bpl_load_3_reg_4723 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_9_fu_1298_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal delay_dltx_load_3_reg_4734 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln589_11_fu_1303_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal delay_bpl_load_4_reg_4745 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_13_fu_1308_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal delay_dltx_load_4_reg_4756 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln589_15_fu_1313_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal al1_load_reg_4766 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln600_fu_1334_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln600_1_fu_1339_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln589_29_fu_1354_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal delay_dhx_load_3_reg_4789 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln589_31_fu_1359_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln589_33_fu_1368_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal delay_dhx_load_4_reg_4805 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln589_35_fu_1373_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal trunc_ln605_1_reg_4815 : STD_LOGIC_VECTOR (31 downto 0);
    signal wd3_11_reg_4820 : STD_LOGIC_VECTOR (31 downto 0);
    signal wd3_12_reg_4826 : STD_LOGIC_VECTOR (31 downto 0);
    signal tqmf_load_3_reg_4832 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln267_1_fu_1426_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln267_3_fu_1431_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal delay_bpl_load_1_reg_4857 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_1_fu_1444_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal delay_dltx_load_1_reg_4868 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln589_3_fu_1449_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal delay_bpl_load_5_reg_4878 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_17_fu_1454_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal delay_dltx_load_5_reg_4889 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln589_19_fu_1459_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_fu_1464_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_reg_4899 : STD_LOGIC_VECTOR (45 downto 0);
    signal delay_bph_load_1_reg_4904 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_21_fu_1470_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal delay_dhx_load_1_reg_4915 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln589_23_fu_1475_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal delay_bph_load_5_reg_4925 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_37_fu_1480_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal delay_dhx_load_5_reg_4936 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln589_39_fu_1485_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_5_fu_1490_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_5_reg_4946 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln267_5_fu_1496_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal sext_ln267_6_fu_1501_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_946_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp33_reg_4961 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_951_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp35_reg_4966 : STD_LOGIC_VECTOR (39 downto 0);
    signal mul_ln589_reg_4971 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln589_4_reg_4976 : STD_LOGIC_VECTOR (45 downto 0);
    signal trunc_ln3_reg_4981 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln589_5_reg_4986 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln589_9_reg_4991 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln266_6_fu_1511_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal trunc_ln2_reg_5006 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln591_1_reg_5012 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_936_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln266_reg_5018 : STD_LOGIC_VECTOR (43 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal grp_fu_909_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal mul_ln266_1_reg_5023 : STD_LOGIC_VECTOR (44 downto 0);
    signal add_ln270_6_fu_1599_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln270_6_reg_5038 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln271_5_fu_1611_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal add_ln271_5_reg_5043 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_914_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal mul_ln267_4_reg_5048 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal grp_fu_919_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal mul_ln266_2_reg_5053 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln267_8_fu_1617_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal mul_ln267_5_reg_5068 : STD_LOGIC_VECTOR (44 downto 0);
    signal grp_fu_941_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal mul_ln266_3_reg_5073 : STD_LOGIC_VECTOR (44 downto 0);
    signal sext_ln267_10_fu_1627_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal sext_ln266_10_fu_1632_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal sext_ln267_12_fu_1637_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln266_13_fu_1642_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal tqmf_load_4_reg_5098 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln270_2_fu_1663_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal add_ln270_2_reg_5105 : STD_LOGIC_VECTOR (46 downto 0);
    signal add_ln271_1_fu_1669_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal add_ln271_1_reg_5110 : STD_LOGIC_VECTOR (44 downto 0);
    signal xa_fu_1698_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal xa_reg_5115 : STD_LOGIC_VECTOR (36 downto 0);
    signal sub_ln266_fu_1726_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal sub_ln266_reg_5120 : STD_LOGIC_VECTOR (38 downto 0);
    signal add_ln270_fu_1770_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln270_reg_5125 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln271_fu_1810_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal add_ln271_reg_5130 : STD_LOGIC_VECTOR (39 downto 0);
    signal add_ln271_6_fu_1815_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal add_ln271_6_reg_5135 : STD_LOGIC_VECTOR (43 downto 0);
    signal xa_2_fu_1892_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal xa_2_reg_5140 : STD_LOGIC_VECTOR (46 downto 0);
    signal xb_fu_1933_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal xb_reg_5146 : STD_LOGIC_VECTOR (46 downto 0);
    signal trunc_ln296_fu_1971_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln296_reg_5152 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal sub_ln296_fu_1975_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln296_reg_5157 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_5163 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln347_fu_1993_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln347_reg_5168 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln347_fu_1997_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln347_reg_5173 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_reg_5178 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_2_fu_2011_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_2_reg_5184 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_4_fu_2022_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_4_reg_5189 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal zext_ln620_fu_2028_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln620_reg_5197 : STD_LOGIC_VECTOR (29 downto 0);
    signal icmp_ln621_fu_2049_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_reg_5203 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_1_fu_2097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_1_reg_5207 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_2_fu_2123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_2_reg_5211 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_3_fu_2149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_3_reg_5215 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_4_fu_2175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_4_reg_5219 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_5_fu_2201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_5_reg_5223 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_6_fu_2227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_6_reg_5227 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_7_fu_2253_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_7_reg_5231 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_8_fu_2279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_8_reg_5235 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_9_fu_2305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_9_reg_5239 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_10_fu_2331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_10_reg_5243 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_11_fu_2357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_11_reg_5247 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_12_fu_2383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_12_reg_5251 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_13_fu_2409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_13_reg_5255 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_14_fu_2435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_14_reg_5259 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_15_fu_2461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_15_reg_5263 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_16_fu_2487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_16_reg_5267 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_17_fu_2513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_17_reg_5271 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_18_fu_2561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_18_reg_5275 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_19_fu_2587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_19_reg_5279 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_20_fu_2613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_20_reg_5283 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_21_fu_2639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_21_reg_5287 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_22_fu_2665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_22_reg_5291 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_23_fu_2691_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_23_reg_5295 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_24_fu_2717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_24_reg_5299 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_25_fu_2743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_25_reg_5303 : STD_LOGIC_VECTOR (0 downto 0);
    signal decis_25_reg_5307 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln364_fu_2804_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln364_reg_5312 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_fu_2810_p6 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_1_reg_5317 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln760_fu_2882_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln760_reg_5322 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln621_26_fu_2891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_26_reg_5328 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal decis_26_reg_5332 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln8_fu_2923_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln8_reg_5337 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln653_1_reg_5342 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln373_fu_3009_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln373_reg_5352 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln668_1_fu_3014_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln668_1_reg_5358 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_27_fu_3034_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_27_reg_5362 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_block_pp0_stage16_11001 : BOOLEAN;
    signal decis_27_reg_5366 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln684_6_fu_3157_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_6_reg_5371 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_7_fu_3188_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_7_reg_5376 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_8_fu_3194_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln679_8_reg_5381 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln679_9_fu_3200_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln679_9_reg_5386 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln679_10_fu_3206_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln679_10_reg_5391 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln679_11_fu_3212_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln679_11_reg_5396 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln705_2_fu_3226_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln705_3_fu_3231_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln708_1_fu_3236_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln620_4_fu_3252_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln620_4_reg_5417 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_pp0_stage17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage17 : signal is "none";
    signal ap_block_pp0_stage17_11001 : BOOLEAN;
    signal select_ln621_fu_3299_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal wd3_13_fu_3323_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_8_fu_3352_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_8_reg_5435 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_9_fu_3376_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_9_reg_5440 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_11_fu_3400_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_reg_5450 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_5456 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage18 : signal is "none";
    signal ap_block_pp0_stage18_11001 : BOOLEAN;
    signal add_ln684_10_fu_3434_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_10_reg_5471 : STD_LOGIC_VECTOR (31 downto 0);
    signal apl2_3_fu_3534_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal apl2_3_reg_5476 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln719_1_fu_3540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln719_1_reg_5481 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage19 : signal is "none";
    signal ap_block_pp0_stage19_11001 : BOOLEAN;
    signal apl1_4_fu_3639_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal apl1_4_reg_5496 : STD_LOGIC_VECTOR (17 downto 0);
    signal wd3_15_fu_3645_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal wd3_15_reg_5502 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln6_reg_5508 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage20 : signal is "none";
    signal ap_block_pp0_stage20_11001 : BOOLEAN;
    signal add_ln640_fu_3714_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln640_reg_5516 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln9_reg_5522 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_pp0_stage21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage21 : signal is "none";
    signal ap_block_pp0_stage21_11001 : BOOLEAN;
    signal add_ln313_fu_3869_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln313_reg_5532 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln668_fu_3874_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln668_reg_5538 : STD_LOGIC_VECTOR (0 downto 0);
    signal wd3_1_reg_5542 : STD_LOGIC_VECTOR (31 downto 0);
    signal wd3_2_reg_5547 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_fu_3927_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_reg_5552 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_1_fu_3933_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_1_reg_5557 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_2_fu_3939_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_2_reg_5562 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_3_fu_3945_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_3_reg_5567 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_4_fu_3951_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_4_reg_5572 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_5_fu_3957_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_5_reg_5577 : STD_LOGIC_VECTOR (31 downto 0);
    signal wd3_6_fu_4073_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage22 : signal is "none";
    signal ap_block_pp0_stage22_11001 : BOOLEAN;
    signal add_ln684_2_fu_4152_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_2_reg_5587 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_3_fu_4177_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_3_reg_5592 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_5_fu_4202_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln705_fu_4216_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln705_1_fu_4221_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln708_fu_4226_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln684_4_fu_4288_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_4_reg_5618 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage23 : signal is "none";
    signal ap_block_pp0_stage23_11001 : BOOLEAN;
    signal tmp_15_reg_5623 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_5629 : STD_LOGIC_VECTOR (0 downto 0);
    signal apl2_fu_4392_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal apl2_reg_5634 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_pp0_stage24_11001 : BOOLEAN;
    signal icmp_ln719_fu_4398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln719_reg_5639 : STD_LOGIC_VECTOR (0 downto 0);
    signal apl1_fu_4475_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal apl1_reg_5644 : STD_LOGIC_VECTOR (17 downto 0);
    signal wd3_7_fu_4481_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal wd3_7_reg_5650 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_port_reg_xin2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_mil_02_i_reg_710 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln621_28_fu_3258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_storemerge29_reg_833 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_ril_2_phi_fu_847_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter0_ril_2_reg_844 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter0_storemerge_reg_856 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln656_1_fu_3004_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal zext_ln628_fu_3406_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage18 : BOOLEAN;
    signal zext_ln303_fu_3562_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage19 : BOOLEAN;
    signal zext_ln656_fu_3864_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage21 : BOOLEAN;
    signal add_ln330_fu_3963_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal apl1_3_fu_4525_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal apl2_2_fu_4423_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal shl_ln6_fu_3998_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_pp0_stage22 : BOOLEAN;
    signal select_ln643_fu_3830_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_pp0_stage20 : BOOLEAN;
    signal add_ln388_fu_3020_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal apl1_7_fu_3758_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal apl2_5_fu_3587_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln657_1_fu_3090_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_pp0_stage16 : BOOLEAN;
    signal select_ln763_fu_2970_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal add_ln684_fu_4102_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_1_fu_4127_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal wd3_3_fu_4025_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal wd3_4_fu_4049_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage23 : BOOLEAN;
    signal wd3_5_fu_4258_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage24 : BOOLEAN;
    signal wd3_14_fu_3117_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage17 : BOOLEAN;
    signal grp_fu_867_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_867_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_871_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_871_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_875_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_875_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_879_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_879_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_883_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_883_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_887_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_887_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_891_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_891_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_895_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_895_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_899_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_899_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_904_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_904_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_909_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_909_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_914_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_919_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_924_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_924_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_930_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_930_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_936_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_941_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_946_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_951_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_891_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_895_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1036_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal mul_ln620_fu_1060_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_fu_1060_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln620_fu_1060_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal pl_2_fu_1092_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln600_4_fu_1105_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal pl2_1_fu_1110_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln604_3_fu_1123_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln359_fu_1136_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln359_fu_1136_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln587_1_fu_1148_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln587_3_fu_1153_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln589_5_fu_1158_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_7_fu_1163_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal pl2_fu_1176_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln604_1_fu_1189_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln587_4_fu_1194_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln587_5_fu_1198_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln587_7_fu_1203_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln589_24_fu_1208_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_25_fu_1212_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_27_fu_1217_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln672_6_fu_1222_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln672_6_fu_1222_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln587_4_fu_1194_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_6_fu_1230_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal shl_ln672_8_fu_1246_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln672_8_fu_1246_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_24_fu_1208_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_8_fu_1254_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tqmf_load_21_cast_fu_1278_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tqmf_load_21_cast_fu_1278_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln266_fu_1270_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tqmf_load_22_cast_fu_1288_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tqmf_load_22_cast_fu_1288_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln267_fu_1274_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln589_9_fu_1298_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_11_fu_1303_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln589_13_fu_1308_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_15_fu_1313_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal pl_fu_1326_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln600_1_fu_1339_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln589_28_fu_1350_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_29_fu_1354_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_31_fu_1359_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln589_32_fu_1364_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_33_fu_1368_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_35_fu_1373_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln672_9_fu_1378_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln672_9_fu_1378_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_28_fu_1350_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_9_fu_1386_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal shl_ln672_s_fu_1402_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln672_s_fu_1402_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_32_fu_1364_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_10_fu_1410_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln267_1_fu_1426_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln267_3_fu_1431_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_1_fu_1444_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_3_fu_1449_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln589_17_fu_1454_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_19_fu_1459_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln589_21_fu_1470_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_23_fu_1475_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln589_37_fu_1480_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_39_fu_1485_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln267_5_fu_1496_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln267_6_fu_1501_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln266_6_fu_1511_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln589_2_fu_1520_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_3_fu_1525_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_1_fu_1516_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal zl_1_fu_1531_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_7_fu_1551_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_8_fu_1556_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_6_fu_1547_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal zl_3_fu_1562_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln270_fu_1596_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln266_4_fu_1582_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal add_ln271_4_fu_1605_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal sext_ln266_1_fu_1578_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal sext_ln267_8_fu_1617_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln267_10_fu_1627_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln266_10_fu_1632_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln267_12_fu_1637_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln266_13_fu_1642_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln267_9_fu_1647_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal add_ln270_1_fu_1658_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln267_11_fu_1654_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln266_9_fu_1650_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal shl_ln_fu_1674_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln_fu_1674_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal shl_ln261_1_fu_1686_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln261_1_fu_1686_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln261_fu_1682_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal sext_ln261_1_fu_1694_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal shl_ln1_fu_1704_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal shl_ln266_1_fu_1715_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal sext_ln266_2_fu_1711_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal sext_ln266_3_fu_1722_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal shl_ln267_1_fu_1732_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal shl_ln267_2_fu_1744_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal sext_ln267_13_fu_1740_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal sext_ln267_14_fu_1752_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal sub_ln267_fu_1756_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal sext_ln267_15_fu_1766_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal shl_ln3_fu_1776_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal shl_ln271_1_fu_1788_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln271_fu_1784_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal sext_ln271_1_fu_1796_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal sub_ln271_fu_1800_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal sext_ln266_12_fu_1762_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln271_2_fu_1806_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal shl_ln266_2_fu_1826_p3 : STD_LOGIC_VECTOR (38 downto 0);
    signal shl_ln2_fu_1838_p3 : STD_LOGIC_VECTOR (38 downto 0);
    signal sext_ln270_1_fu_1850_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln267_2_fu_1823_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln267_4_fu_1834_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal add_ln270_4_fu_1858_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln255_fu_1820_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal add_ln270_5_fu_1864_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln270_3_fu_1874_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal add_ln270_7_fu_1877_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal sext_ln270_2_fu_1870_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal add_ln270_8_fu_1882_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal sext_ln270_4_fu_1888_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal add_ln270_3_fu_1853_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln266_11_fu_1846_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal add_ln271_2_fu_1901_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal sext_ln271_3_fu_1898_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal add_ln271_3_fu_1906_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal sext_ln271_6_fu_1919_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal add_ln271_7_fu_1922_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln271_5_fu_1916_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal add_ln271_8_fu_1927_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln271_4_fu_1912_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal add_ln281_fu_1939_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal sub_ln282_fu_1943_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal add_ln295_fu_1967_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln_fu_1947_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln345_fu_1989_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1_fu_1957_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_fu_2017_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln613_fu_2046_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln4_fu_2055_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln620_1_fu_2066_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln620_8_fu_2062_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln620_9_fu_2073_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln620_fu_2077_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal decis_1_fu_2083_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln613_1_fu_2093_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_1_fu_2103_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_1_fu_2103_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln620_1_fu_2103_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal decis_2_fu_2109_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln613_2_fu_2119_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_2_fu_2129_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln620_5_fu_2040_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln620_2_fu_2129_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln620_2_fu_2129_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal decis_3_fu_2135_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln613_3_fu_2145_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_3_fu_2155_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_3_fu_2155_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln620_3_fu_2155_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal decis_4_fu_2161_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln613_4_fu_2171_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_4_fu_2181_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_4_fu_2181_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln620_4_fu_2181_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal decis_5_fu_2187_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln613_5_fu_2197_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_5_fu_2207_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln620_3_fu_2037_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal mul_ln620_5_fu_2207_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln620_5_fu_2207_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal decis_6_fu_2213_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln613_6_fu_2223_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_6_fu_2233_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_6_fu_2233_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln620_6_fu_2233_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal decis_7_fu_2239_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln613_7_fu_2249_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_7_fu_2259_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_7_fu_2259_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln620_7_fu_2259_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal decis_8_fu_2265_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln613_8_fu_2275_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_8_fu_2285_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_8_fu_2285_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln620_8_fu_2285_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal decis_9_fu_2291_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln613_9_fu_2301_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_9_fu_2311_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_9_fu_2311_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln620_9_fu_2311_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal decis_s_fu_2317_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln613_10_fu_2327_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_10_fu_2337_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln620_2_fu_2034_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln620_10_fu_2337_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln620_10_fu_2337_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal decis_10_fu_2343_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln613_11_fu_2353_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_11_fu_2363_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_11_fu_2363_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln620_11_fu_2363_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal decis_11_fu_2369_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln613_12_fu_2379_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_12_fu_2389_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_12_fu_2389_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln620_12_fu_2389_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal decis_12_fu_2395_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln613_13_fu_2405_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_13_fu_2415_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_13_fu_2415_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln620_13_fu_2415_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal decis_13_fu_2421_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln613_14_fu_2431_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_14_fu_2441_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_14_fu_2441_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln620_14_fu_2441_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal decis_14_fu_2447_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln613_15_fu_2457_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_15_fu_2467_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_15_fu_2467_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln620_15_fu_2467_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal decis_15_fu_2473_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln613_16_fu_2483_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_16_fu_2493_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_16_fu_2493_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln620_16_fu_2493_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal decis_16_fu_2499_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln613_17_fu_2509_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln620_2_fu_2519_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln620_3_fu_2530_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln620_10_fu_2526_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal zext_ln620_11_fu_2537_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal sub_ln620_fu_2541_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal decis_17_fu_2547_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln613_fu_2557_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_17_fu_2567_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln620_1_fu_2031_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln620_17_fu_2567_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_17_fu_2567_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal decis_18_fu_2573_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln613_18_fu_2583_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_18_fu_2593_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_18_fu_2593_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_18_fu_2593_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal decis_19_fu_2599_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln613_19_fu_2609_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_19_fu_2619_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_19_fu_2619_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_19_fu_2619_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal decis_20_fu_2625_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln613_20_fu_2635_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_20_fu_2645_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_20_fu_2645_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_20_fu_2645_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal decis_21_fu_2651_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln613_21_fu_2661_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_21_fu_2671_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_21_fu_2671_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_21_fu_2671_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal decis_22_fu_2677_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln613_22_fu_2687_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_22_fu_2697_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_22_fu_2697_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_22_fu_2697_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal decis_23_fu_2703_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln613_23_fu_2713_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_23_fu_2723_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_23_fu_2723_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_23_fu_2723_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal decis_24_fu_2729_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln613_24_fu_2739_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_24_fu_2749_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_24_fu_2749_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln620_24_fu_2749_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal decis_29_fu_2772_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal m_3_fu_2785_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln359_2_fu_2781_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln360_fu_2790_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln360_fu_2796_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln351_fu_2765_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal shl_ln10_fu_2832_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln759_1_fu_2840_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln759_fu_2828_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln759_fu_2844_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal wd_1_fu_2850_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_2864_p6 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln758_fu_2860_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln760_fu_2878_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln613_25_fu_2888_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_25_fu_2896_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_25_fu_2896_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln620_25_fu_2896_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln364_fu_2917_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln364_fu_2917_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal sext_ln756_fu_2942_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_2945_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln761_fu_2953_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln763_fu_2964_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln756_fu_2960_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal wd1_1_fu_2984_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln364_1_fu_2934_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln759_fu_2938_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln613_26_fu_3031_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln620_26_fu_3039_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln620_26_fu_3039_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln620_26_fu_3039_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal sub_ln656_1_fu_3075_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln656_1cast_fu_3080_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal wd3_8_fu_3084_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln672_7_fu_3104_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_20_fu_3057_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_7_fu_3111_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal mul_ln679_6_fu_3131_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln679_6_fu_3128_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln679_6_fu_3131_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln679_7_fu_3137_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_3141_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_6_fu_3149_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_7_fu_3162_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln679_7_fu_3162_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln679_8_fu_3168_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_fu_3172_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_7_fu_3180_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_8_fu_3194_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln679_9_fu_3200_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln679_10_fu_3206_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln679_11_fu_3212_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln705_3_fu_3231_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln708_1_fu_3236_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln613_27_fu_3255_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln620_4_fu_3263_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln620_12_fu_3270_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln620_1_fu_3274_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal decis_28_fu_3280_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln613_1_fu_3290_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln621_29_fu_3294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln672_10_fu_3310_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_36_fu_3307_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_11_fu_3317_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln679_9_fu_3333_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_3336_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_8_fu_3344_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln679_10_fu_3357_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_fu_3360_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_9_fu_3368_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln679_12_fu_3381_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_fu_3384_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_11_fu_3392_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln679_11_fu_3415_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_3418_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_10_fu_3426_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal wd2_1_fu_3439_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln702_1_fu_3446_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_7_fu_3456_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln706_1_fu_3450_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln707_1_fu_3465_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_8_fu_3469_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln705_1_fu_3479_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln716_1_fu_3490_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln716_2_fu_3497_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln604_2_fu_3412_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln716_1_fu_3501_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln716_1_fu_3507_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln716_3_fu_3517_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln716_1_fu_3521_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln716_2_fu_3528_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln708_3_fu_3486_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal lshr_ln_fu_3552_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal apl2_4_fu_3571_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln721_1_fu_3581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln703_1_fu_3577_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln734_1_fu_3601_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln734_1_fu_3608_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln602_1_fu_3568_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sub_ln734_1_fu_3612_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln734_1_fu_3618_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln735_1_fu_3632_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln735_1_fu_3628_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln303_fu_3655_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln303_fu_3655_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln5_fu_3678_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln639_1_fu_3686_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln639_fu_3674_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln639_fu_3690_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln7_fu_3696_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln640_1_fu_3710_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln640_fu_3706_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln733_2_fu_3720_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln745_1_fu_3726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal apl1_5_fu_3731_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln733_3_fu_3723_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal apl1_6_fu_3742_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln747_1_fu_3748_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln747_1_fu_3752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln733_1_fu_3738_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln636_fu_3802_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_3805_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln641_fu_3813_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln643_fu_3824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln636_fu_3820_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal wd1_fu_3844_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln303_1_fu_3796_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln7_fu_3879_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln587_fu_3772_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_fu_3886_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal shl_ln672_1_fu_3903_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_fu_3778_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_1_fu_3910_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal mul_ln679_fu_3927_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln679_1_fu_3933_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln679_2_fu_3939_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln679_3_fu_3945_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln679_4_fu_3951_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln679_5_fu_3957_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln639_fu_3799_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln656_fu_3983_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln656cast_fu_3988_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal wd3_fu_3992_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln672_2_fu_4012_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_4_fu_3974_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_2_fu_4019_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal shl_ln672_3_fu_4036_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_8_fu_3977_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_3_fu_4043_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal shl_ln672_5_fu_4060_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_16_fu_3980_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_5_fu_4067_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln679_fu_4083_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_4086_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_fu_4094_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln679_1_fu_4108_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_fu_4111_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_1_fu_4119_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln679_2_fu_4133_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_4136_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_2_fu_4144_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln679_3_fu_4158_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_4161_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_3_fu_4169_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln679_5_fu_4183_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_4186_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_5_fu_4194_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln705_1_fu_4221_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln708_fu_4226_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln672_4_fu_4245_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_12_fu_4242_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_4_fu_4252_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln679_4_fu_4269_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_4272_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_4_fu_4280_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal wd2_fu_4297_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln702_fu_4304_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_4_fu_4314_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln706_fu_4308_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln707_fu_4323_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_5_fu_4327_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln705_fu_4337_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln8_fu_4348_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln716_fu_4355_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln604_fu_4294_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln716_fu_4359_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln4_fu_4365_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln716_1_fu_4375_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln716_fu_4379_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln716_fu_4386_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln708_2_fu_4344_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal apl2_1_fu_4407_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln721_fu_4417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln703_fu_4413_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln9_fu_4437_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln734_fu_4444_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln602_fu_4404_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sub_ln734_fu_4448_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln5_fu_4454_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln735_fu_4468_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln735_fu_4464_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln733_fu_4487_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln745_fu_4493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal apl1_1_fu_4498_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln733_1_fu_4490_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal apl1_2_fu_4509_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln747_fu_4515_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln747_fu_4519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln733_fu_4505_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_block_pp0_stage16_subdone : BOOLEAN;
    signal ap_block_pp0_stage17_subdone : BOOLEAN;
    signal ap_block_pp0_stage18_subdone : BOOLEAN;
    signal ap_block_pp0_stage19_subdone : BOOLEAN;
    signal ap_block_pp0_stage20_subdone : BOOLEAN;
    signal ap_block_pp0_stage21_subdone : BOOLEAN;
    signal ap_block_pp0_stage22_subdone : BOOLEAN;
    signal ap_block_pp0_stage23_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal mul_ln359_fu_1136_p00 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln364_fu_2917_p10 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln620_1_fu_2103_p00 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln620_24_fu_2749_p00 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln620_fu_1060_p00 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_condition_3812 : BOOLEAN;
    signal ap_condition_3816 : BOOLEAN;
    signal ap_condition_3821 : BOOLEAN;
    signal ap_condition_3827 : BOOLEAN;
    signal ap_condition_3834 : BOOLEAN;
    signal ap_condition_3842 : BOOLEAN;
    signal ap_condition_3851 : BOOLEAN;
    signal ap_condition_3861 : BOOLEAN;
    signal ap_condition_3872 : BOOLEAN;
    signal ap_condition_3884 : BOOLEAN;
    signal ap_condition_3897 : BOOLEAN;
    signal ap_condition_3911 : BOOLEAN;
    signal ap_condition_3926 : BOOLEAN;
    signal ap_condition_3942 : BOOLEAN;
    signal ap_condition_3959 : BOOLEAN;
    signal ap_condition_3977 : BOOLEAN;
    signal ap_condition_3996 : BOOLEAN;
    signal ap_condition_4016 : BOOLEAN;
    signal ap_condition_4037 : BOOLEAN;
    signal ap_condition_4059 : BOOLEAN;
    signal ap_condition_4082 : BOOLEAN;
    signal ap_condition_4106 : BOOLEAN;
    signal ap_condition_4131 : BOOLEAN;
    signal ap_condition_4157 : BOOLEAN;
    signal ap_condition_4184 : BOOLEAN;
    signal ap_condition_4212 : BOOLEAN;
    signal ap_condition_4241 : BOOLEAN;
    signal ap_condition_4271 : BOOLEAN;
    signal ap_condition_4302 : BOOLEAN;
    signal ap_condition_4305 : BOOLEAN;
    signal ap_condition_768 : BOOLEAN;
    signal ap_condition_1151 : BOOLEAN;
    signal ap_condition_4314 : BOOLEAN;
    signal ap_condition_4318 : BOOLEAN;
    signal ap_condition_4322 : BOOLEAN;
    signal ap_condition_4326 : BOOLEAN;
    signal ap_condition_4333 : BOOLEAN;
    signal ap_condition_4337 : BOOLEAN;
    signal ap_condition_4341 : BOOLEAN;
    signal ap_condition_4345 : BOOLEAN;
    signal ap_condition_1143 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component adpcm_main_mul_14s_32s_46_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (45 downto 0) );
    end component;


    component adpcm_main_mul_15s_32s_47_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component adpcm_main_mul_16s_32s_46_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (45 downto 0) );
    end component;


    component adpcm_main_mul_16s_32s_47_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component adpcm_main_mul_32s_32s_64_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component adpcm_main_mul_32s_9ns_41_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (40 downto 0) );
    end component;


    component adpcm_main_mul_32s_12ns_44_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (43 downto 0) );
    end component;


    component adpcm_main_mul_32s_13ns_45_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (44 downto 0) );
    end component;


    component adpcm_main_mul_32s_15ns_47_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component adpcm_main_mul_32s_11s_42_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;


    component adpcm_main_mul_32s_11s_43_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (42 downto 0) );
    end component;


    component adpcm_main_mul_32s_13s_44_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (43 downto 0) );
    end component;


    component adpcm_main_mul_32s_13s_45_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (44 downto 0) );
    end component;


    component adpcm_main_mul_33s_7s_40_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (32 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component adpcm_main_mul_15ns_10ns_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component adpcm_main_mul_15ns_11ns_25_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component adpcm_main_mul_15ns_12ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component adpcm_main_mul_15ns_13ns_27_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component adpcm_main_mul_15ns_14ns_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component adpcm_main_mul_15ns_15ns_29_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component adpcm_main_mul_15ns_16ns_30_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component adpcm_main_mux_4_2_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        din3 : IN STD_LOGIC_VECTOR (13 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component adpcm_main_mux_4_2_11_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        din3 : IN STD_LOGIC_VECTOR (10 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component adpcm_main_mul_14s_15ns_29_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component adpcm_main_mul_14s_14s_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component adpcm_main_mul_16s_15ns_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component adpcm_main_mul_16s_16s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component adpcm_main_encode_quant26bt_pos_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component adpcm_main_encode_quant26bt_neg_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component adpcm_main_encode_qq4_code4_table_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component adpcm_main_encode_wl_code_table_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component adpcm_main_encode_ilb_table_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;



begin
    quant26bt_pos_U : component adpcm_main_encode_quant26bt_pos_ROM_AUTO_1R
    generic map (
        DataWidth => 6,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quant26bt_pos_address0,
        ce0 => quant26bt_pos_ce0,
        q0 => quant26bt_pos_q0);

    quant26bt_neg_U : component adpcm_main_encode_quant26bt_neg_ROM_AUTO_1R
    generic map (
        DataWidth => 6,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quant26bt_neg_address0,
        ce0 => quant26bt_neg_ce0,
        q0 => quant26bt_neg_q0);

    qq4_code4_table_U : component adpcm_main_encode_qq4_code4_table_ROM_AUTO_1R
    generic map (
        DataWidth => 16,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => qq4_code4_table_address0,
        ce0 => qq4_code4_table_ce0,
        q0 => qq4_code4_table_q0);

    wl_code_table_U : component adpcm_main_encode_wl_code_table_ROM_AUTO_1R
    generic map (
        DataWidth => 13,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => wl_code_table_address0,
        ce0 => wl_code_table_ce0,
        q0 => wl_code_table_q0);

    ilb_table_U : component adpcm_main_encode_ilb_table_ROM_AUTO_1R
    generic map (
        DataWidth => 12,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ilb_table_address0,
        ce0 => ilb_table_ce0,
        q0 => ilb_table_q0);

    mul_14s_32s_46_2_1_U12 : component adpcm_main_mul_14s_32s_46_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 14,
        din1_WIDTH => 32,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_867_p0,
        din1 => grp_fu_867_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_867_p2);

    mul_14s_32s_46_2_1_U13 : component adpcm_main_mul_14s_32s_46_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 14,
        din1_WIDTH => 32,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_871_p0,
        din1 => grp_fu_871_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_871_p2);

    mul_15s_32s_47_2_1_U14 : component adpcm_main_mul_15s_32s_47_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 15,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_875_p0,
        din1 => grp_fu_875_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_875_p2);

    mul_16s_32s_46_2_1_U15 : component adpcm_main_mul_16s_32s_46_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 32,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_879_p0,
        din1 => grp_fu_879_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_879_p2);

    mul_16s_32s_46_2_1_U16 : component adpcm_main_mul_16s_32s_46_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 32,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_883_p0,
        din1 => grp_fu_883_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_883_p2);

    mul_16s_32s_47_2_1_U17 : component adpcm_main_mul_16s_32s_47_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_887_p0,
        din1 => grp_fu_887_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_887_p2);

    mul_32s_32s_64_2_1_U18 : component adpcm_main_mul_32s_32s_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_891_p0,
        din1 => grp_fu_891_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_891_p2);

    mul_32s_32s_64_2_1_U19 : component adpcm_main_mul_32s_32s_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_895_p0,
        din1 => grp_fu_895_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_895_p2);

    mul_32s_9ns_41_2_1_U20 : component adpcm_main_mul_32s_9ns_41_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 9,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_899_p0,
        din1 => grp_fu_899_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_899_p2);

    mul_32s_12ns_44_2_1_U21 : component adpcm_main_mul_32s_12ns_44_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 12,
        dout_WIDTH => 44)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_904_p0,
        din1 => grp_fu_904_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_904_p2);

    mul_32s_13ns_45_2_1_U22 : component adpcm_main_mul_32s_13ns_45_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 13,
        dout_WIDTH => 45)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_909_p0,
        din1 => grp_fu_909_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_909_p2);

    mul_32s_15ns_47_2_1_U23 : component adpcm_main_mul_32s_15ns_47_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 15,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tqmf_q1,
        din1 => grp_fu_914_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_914_p2);

    mul_32s_15ns_47_2_1_U24 : component adpcm_main_mul_32s_15ns_47_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 15,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tqmf_q0,
        din1 => grp_fu_919_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_919_p2);

    mul_32s_11s_42_2_1_U25 : component adpcm_main_mul_32s_11s_42_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 11,
        dout_WIDTH => 42)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_924_p0,
        din1 => grp_fu_924_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_924_p2);

    mul_32s_11s_43_2_1_U26 : component adpcm_main_mul_32s_11s_43_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 11,
        dout_WIDTH => 43)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_930_p0,
        din1 => grp_fu_930_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_930_p2);

    mul_32s_13s_44_2_1_U27 : component adpcm_main_mul_32s_13s_44_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 13,
        dout_WIDTH => 44)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tqmf_q1,
        din1 => grp_fu_936_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_936_p2);

    mul_32s_13s_45_2_1_U28 : component adpcm_main_mul_32s_13s_45_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 13,
        dout_WIDTH => 45)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tqmf_q0,
        din1 => grp_fu_941_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_941_p2);

    mul_33s_7s_40_2_1_U29 : component adpcm_main_mul_33s_7s_40_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 33,
        din1_WIDTH => 7,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_reg_4713,
        din1 => grp_fu_946_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_946_p2);

    mul_33s_7s_40_2_1_U30 : component adpcm_main_mul_33s_7s_40_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 33,
        din1_WIDTH => 7,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp34_reg_4718,
        din1 => grp_fu_951_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_951_p2);

    mul_15ns_10ns_24_1_1_U31 : component adpcm_main_mul_15ns_10ns_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 10,
        dout_WIDTH => 24)
    port map (
        din0 => mul_ln620_fu_1060_p0,
        din1 => mul_ln620_fu_1060_p1,
        dout => mul_ln620_fu_1060_p2);

    mul_15ns_11ns_25_1_1_U32 : component adpcm_main_mul_15ns_11ns_25_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 11,
        dout_WIDTH => 25)
    port map (
        din0 => mul_ln359_fu_1136_p0,
        din1 => mul_ln359_fu_1136_p1,
        dout => mul_ln359_fu_1136_p2);

    mul_15ns_11ns_25_1_1_U33 : component adpcm_main_mul_15ns_11ns_25_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 11,
        dout_WIDTH => 25)
    port map (
        din0 => mul_ln620_1_fu_2103_p0,
        din1 => mul_ln620_1_fu_2103_p1,
        dout => mul_ln620_1_fu_2103_p2);

    mul_15ns_12ns_26_1_1_U34 : component adpcm_main_mul_15ns_12ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 12,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln620_2_fu_2129_p0,
        din1 => mul_ln620_2_fu_2129_p1,
        dout => mul_ln620_2_fu_2129_p2);

    mul_15ns_12ns_26_1_1_U35 : component adpcm_main_mul_15ns_12ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 12,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln620_3_fu_2155_p0,
        din1 => mul_ln620_3_fu_2155_p1,
        dout => mul_ln620_3_fu_2155_p2);

    mul_15ns_12ns_26_1_1_U36 : component adpcm_main_mul_15ns_12ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 12,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln620_4_fu_2181_p0,
        din1 => mul_ln620_4_fu_2181_p1,
        dout => mul_ln620_4_fu_2181_p2);

    mul_15ns_13ns_27_1_1_U37 : component adpcm_main_mul_15ns_13ns_27_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 13,
        dout_WIDTH => 27)
    port map (
        din0 => mul_ln620_5_fu_2207_p0,
        din1 => mul_ln620_5_fu_2207_p1,
        dout => mul_ln620_5_fu_2207_p2);

    mul_15ns_13ns_27_1_1_U38 : component adpcm_main_mul_15ns_13ns_27_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 13,
        dout_WIDTH => 27)
    port map (
        din0 => mul_ln620_6_fu_2233_p0,
        din1 => mul_ln620_6_fu_2233_p1,
        dout => mul_ln620_6_fu_2233_p2);

    mul_15ns_13ns_27_1_1_U39 : component adpcm_main_mul_15ns_13ns_27_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 13,
        dout_WIDTH => 27)
    port map (
        din0 => mul_ln620_7_fu_2259_p0,
        din1 => mul_ln620_7_fu_2259_p1,
        dout => mul_ln620_7_fu_2259_p2);

    mul_15ns_13ns_27_1_1_U40 : component adpcm_main_mul_15ns_13ns_27_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 13,
        dout_WIDTH => 27)
    port map (
        din0 => mul_ln620_8_fu_2285_p0,
        din1 => mul_ln620_8_fu_2285_p1,
        dout => mul_ln620_8_fu_2285_p2);

    mul_15ns_13ns_27_1_1_U41 : component adpcm_main_mul_15ns_13ns_27_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 13,
        dout_WIDTH => 27)
    port map (
        din0 => mul_ln620_9_fu_2311_p0,
        din1 => mul_ln620_9_fu_2311_p1,
        dout => mul_ln620_9_fu_2311_p2);

    mul_15ns_14ns_28_1_1_U42 : component adpcm_main_mul_15ns_14ns_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln620_10_fu_2337_p0,
        din1 => mul_ln620_10_fu_2337_p1,
        dout => mul_ln620_10_fu_2337_p2);

    mul_15ns_14ns_28_1_1_U43 : component adpcm_main_mul_15ns_14ns_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln620_11_fu_2363_p0,
        din1 => mul_ln620_11_fu_2363_p1,
        dout => mul_ln620_11_fu_2363_p2);

    mul_15ns_14ns_28_1_1_U44 : component adpcm_main_mul_15ns_14ns_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln620_12_fu_2389_p0,
        din1 => mul_ln620_12_fu_2389_p1,
        dout => mul_ln620_12_fu_2389_p2);

    mul_15ns_14ns_28_1_1_U45 : component adpcm_main_mul_15ns_14ns_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln620_13_fu_2415_p0,
        din1 => mul_ln620_13_fu_2415_p1,
        dout => mul_ln620_13_fu_2415_p2);

    mul_15ns_14ns_28_1_1_U46 : component adpcm_main_mul_15ns_14ns_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln620_14_fu_2441_p0,
        din1 => mul_ln620_14_fu_2441_p1,
        dout => mul_ln620_14_fu_2441_p2);

    mul_15ns_14ns_28_1_1_U47 : component adpcm_main_mul_15ns_14ns_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln620_15_fu_2467_p0,
        din1 => mul_ln620_15_fu_2467_p1,
        dout => mul_ln620_15_fu_2467_p2);

    mul_15ns_14ns_28_1_1_U48 : component adpcm_main_mul_15ns_14ns_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln620_16_fu_2493_p0,
        din1 => mul_ln620_16_fu_2493_p1,
        dout => mul_ln620_16_fu_2493_p2);

    mul_15ns_15ns_29_1_1_U49 : component adpcm_main_mul_15ns_15ns_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 15,
        dout_WIDTH => 29)
    port map (
        din0 => mul_ln620_17_fu_2567_p0,
        din1 => mul_ln620_17_fu_2567_p1,
        dout => mul_ln620_17_fu_2567_p2);

    mul_15ns_15ns_29_1_1_U50 : component adpcm_main_mul_15ns_15ns_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 15,
        dout_WIDTH => 29)
    port map (
        din0 => mul_ln620_18_fu_2593_p0,
        din1 => mul_ln620_18_fu_2593_p1,
        dout => mul_ln620_18_fu_2593_p2);

    mul_15ns_15ns_29_1_1_U51 : component adpcm_main_mul_15ns_15ns_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 15,
        dout_WIDTH => 29)
    port map (
        din0 => mul_ln620_19_fu_2619_p0,
        din1 => mul_ln620_19_fu_2619_p1,
        dout => mul_ln620_19_fu_2619_p2);

    mul_15ns_15ns_29_1_1_U52 : component adpcm_main_mul_15ns_15ns_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 15,
        dout_WIDTH => 29)
    port map (
        din0 => mul_ln620_20_fu_2645_p0,
        din1 => mul_ln620_20_fu_2645_p1,
        dout => mul_ln620_20_fu_2645_p2);

    mul_15ns_15ns_29_1_1_U53 : component adpcm_main_mul_15ns_15ns_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 15,
        dout_WIDTH => 29)
    port map (
        din0 => mul_ln620_21_fu_2671_p0,
        din1 => mul_ln620_21_fu_2671_p1,
        dout => mul_ln620_21_fu_2671_p2);

    mul_15ns_15ns_29_1_1_U54 : component adpcm_main_mul_15ns_15ns_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 15,
        dout_WIDTH => 29)
    port map (
        din0 => mul_ln620_22_fu_2697_p0,
        din1 => mul_ln620_22_fu_2697_p1,
        dout => mul_ln620_22_fu_2697_p2);

    mul_15ns_15ns_29_1_1_U55 : component adpcm_main_mul_15ns_15ns_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 15,
        dout_WIDTH => 29)
    port map (
        din0 => mul_ln620_23_fu_2723_p0,
        din1 => mul_ln620_23_fu_2723_p1,
        dout => mul_ln620_23_fu_2723_p2);

    mul_15ns_16ns_30_1_1_U56 : component adpcm_main_mul_15ns_16ns_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 16,
        dout_WIDTH => 30)
    port map (
        din0 => mul_ln620_24_fu_2749_p0,
        din1 => mul_ln620_24_fu_2749_p1,
        dout => mul_ln620_24_fu_2749_p2);

    mux_4_2_14_1_1_U57 : component adpcm_main_mux_4_2_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        din2_WIDTH => 14,
        din3_WIDTH => 14,
        din4_WIDTH => 2,
        dout_WIDTH => 14)
    port map (
        din0 => ap_const_lv14_2310,
        din1 => ap_const_lv14_39B0,
        din2 => ap_const_lv14_1CF0,
        din3 => ap_const_lv14_650,
        din4 => add_ln364_fu_2804_p2,
        dout => tmp_1_fu_2810_p6);

    mux_4_2_11_1_1_U58 : component adpcm_main_mux_4_2_11_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        din2_WIDTH => 11,
        din3_WIDTH => 11,
        din4_WIDTH => 2,
        dout_WIDTH => 11)
    port map (
        din0 => ap_const_lv11_31E,
        din1 => ap_const_lv11_72A,
        din2 => ap_const_lv11_31E,
        din3 => ap_const_lv11_72A,
        din4 => add_ln364_fu_2804_p2,
        dout => tmp_2_fu_2864_p6);

    mul_15ns_16ns_30_1_1_U59 : component adpcm_main_mul_15ns_16ns_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 16,
        dout_WIDTH => 30)
    port map (
        din0 => mul_ln620_25_fu_2896_p0,
        din1 => mul_ln620_25_fu_2896_p1,
        dout => mul_ln620_25_fu_2896_p2);

    mul_14s_15ns_29_1_1_U60 : component adpcm_main_mul_14s_15ns_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 15,
        dout_WIDTH => 29)
    port map (
        din0 => tmp_1_reg_5317,
        din1 => mul_ln364_fu_2917_p1,
        dout => mul_ln364_fu_2917_p2);

    mul_15ns_16ns_30_1_1_U61 : component adpcm_main_mul_15ns_16ns_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 16,
        dout_WIDTH => 30)
    port map (
        din0 => mul_ln620_26_fu_3039_p0,
        din1 => mul_ln620_26_fu_3039_p1,
        dout => mul_ln620_26_fu_3039_p2);

    mul_14s_14s_28_1_1_U62 : component adpcm_main_mul_14s_14s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln679_6_fu_3131_p0,
        din1 => delay_dhx_load_reg_4675,
        dout => mul_ln679_6_fu_3131_p2);

    mul_14s_14s_28_1_1_U63 : component adpcm_main_mul_14s_14s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln679_7_fu_3162_p0,
        din1 => delay_dhx_load_1_reg_4915,
        dout => mul_ln679_7_fu_3162_p2);

    mul_14s_14s_28_1_1_U64 : component adpcm_main_mul_14s_14s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln679_8_fu_3194_p0,
        din1 => delay_dhx_load_2_reg_4691,
        dout => mul_ln679_8_fu_3194_p2);

    mul_14s_14s_28_1_1_U65 : component adpcm_main_mul_14s_14s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln679_9_fu_3200_p0,
        din1 => delay_dhx_load_3_reg_4789,
        dout => mul_ln679_9_fu_3200_p2);

    mul_14s_14s_28_1_1_U66 : component adpcm_main_mul_14s_14s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln679_10_fu_3206_p0,
        din1 => delay_dhx_load_4_reg_4805,
        dout => mul_ln679_10_fu_3206_p2);

    mul_14s_14s_28_1_1_U67 : component adpcm_main_mul_14s_14s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln679_11_fu_3212_p0,
        din1 => delay_dhx_load_5_reg_4936,
        dout => mul_ln679_11_fu_3212_p2);

    mul_16s_15ns_31_1_1_U68 : component adpcm_main_mul_16s_15ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        dout_WIDTH => 31)
    port map (
        din0 => qq4_code4_table_q0,
        din1 => mul_ln303_fu_3655_p1,
        dout => mul_ln303_fu_3655_p2);

    mul_16s_16s_32_1_1_U69 : component adpcm_main_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => mul_ln679_fu_3927_p0,
        din1 => delay_dltx_load_reg_4622,
        dout => mul_ln679_fu_3927_p2);

    mul_16s_16s_32_1_1_U70 : component adpcm_main_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => mul_ln679_1_fu_3933_p0,
        din1 => delay_dltx_load_1_reg_4868,
        dout => mul_ln679_1_fu_3933_p2);

    mul_16s_16s_32_1_1_U71 : component adpcm_main_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => mul_ln679_2_fu_3939_p0,
        din1 => delay_dltx_load_2_reg_4644,
        dout => mul_ln679_2_fu_3939_p2);

    mul_16s_16s_32_1_1_U72 : component adpcm_main_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => mul_ln679_3_fu_3945_p0,
        din1 => delay_dltx_load_3_reg_4734,
        dout => mul_ln679_3_fu_3945_p2);

    mul_16s_16s_32_1_1_U73 : component adpcm_main_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => mul_ln679_4_fu_3951_p0,
        din1 => delay_dltx_load_4_reg_4756,
        dout => mul_ln679_4_fu_3951_p2);

    mul_16s_16s_32_1_1_U74 : component adpcm_main_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => mul_ln679_5_fu_3957_p0,
        din1 => delay_dltx_load_5_reg_4889,
        dout => mul_ln679_5_fu_3957_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage24_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter0_mil_02_i_reg_710_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
                if ((ap_const_boolean_1 = ap_condition_4305)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= select_ln621_fu_3299_p3;
                elsif ((ap_const_boolean_1 = ap_condition_4302)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_1C;
                elsif ((ap_const_boolean_1 = ap_condition_4271)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_1B;
                elsif ((ap_const_boolean_1 = ap_condition_4241)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_1A;
                elsif ((ap_const_boolean_1 = ap_condition_4212)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_19;
                elsif ((ap_const_boolean_1 = ap_condition_4184)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_18;
                elsif ((ap_const_boolean_1 = ap_condition_4157)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_17;
                elsif ((ap_const_boolean_1 = ap_condition_4131)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_16;
                elsif ((ap_const_boolean_1 = ap_condition_4106)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_15;
                elsif ((ap_const_boolean_1 = ap_condition_4082)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_14;
                elsif ((ap_const_boolean_1 = ap_condition_4059)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_13;
                elsif ((ap_const_boolean_1 = ap_condition_4037)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_12;
                elsif ((ap_const_boolean_1 = ap_condition_4016)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_11;
                elsif ((ap_const_boolean_1 = ap_condition_3996)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_10;
                elsif ((ap_const_boolean_1 = ap_condition_3977)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_F;
                elsif ((ap_const_boolean_1 = ap_condition_3959)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_E;
                elsif ((ap_const_boolean_1 = ap_condition_3942)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_D;
                elsif ((ap_const_boolean_1 = ap_condition_3926)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_C;
                elsif ((ap_const_boolean_1 = ap_condition_3911)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_B;
                elsif ((ap_const_boolean_1 = ap_condition_3897)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_A;
                elsif ((ap_const_boolean_1 = ap_condition_3884)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_9;
                elsif ((ap_const_boolean_1 = ap_condition_3872)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_8;
                elsif ((ap_const_boolean_1 = ap_condition_3861)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_7;
                elsif ((ap_const_boolean_1 = ap_condition_3851)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_6;
                elsif ((ap_const_boolean_1 = ap_condition_3842)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_5;
                elsif ((ap_const_boolean_1 = ap_condition_3834)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_4;
                elsif ((ap_const_boolean_1 = ap_condition_3827)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_3;
                elsif ((ap_const_boolean_1 = ap_condition_3821)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_2;
                elsif ((ap_const_boolean_1 = ap_condition_3816)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_1;
                elsif ((ap_const_boolean_1 = ap_condition_3812)) then 
                    ap_phi_reg_pp0_iter0_mil_02_i_reg_710 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_storemerge29_reg_833_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_768)) then
                if ((icmp_ln668_1_reg_5358 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter0_storemerge29_reg_833 <= sub_ln672_11_fu_3317_p2(39 downto 8);
                elsif ((icmp_ln668_1_reg_5358 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter0_storemerge29_reg_833 <= add_ln684_11_fu_3400_p2;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_storemerge_reg_856_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1151)) then
                if ((icmp_ln668_reg_5538 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter0_storemerge_reg_856 <= sub_ln672_5_fu_4067_p2(39 downto 8);
                elsif ((icmp_ln668_reg_5538 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter0_storemerge_reg_856 <= add_ln684_5_fu_4202_p2;
                end if;
            end if; 
        end if;
    end process;

    ril_2_reg_844_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1143)) then
                if ((tmp_3_reg_5163 = ap_const_lv1_1)) then 
                    ril_2_reg_844 <= quant26bt_neg_q0;
                elsif ((tmp_3_reg_5163 = ap_const_lv1_0)) then 
                    ril_2_reg_844 <= quant26bt_pos_q0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ril_2_reg_844 <= ap_phi_reg_pp0_iter0_ril_2_reg_844;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then
                add_ln270_2_reg_5105 <= add_ln270_2_fu_1663_p2;
                add_ln271_1_reg_5110 <= add_ln271_1_fu_1669_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                add_ln270_6_reg_5038 <= add_ln270_6_fu_1599_p2;
                add_ln271_5_reg_5043 <= add_ln271_5_fu_1611_p2;
                mul_ln266_reg_5018 <= grp_fu_936_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then
                add_ln270_reg_5125 <= add_ln270_fu_1770_p2;
                add_ln271_6_reg_5135 <= add_ln271_6_fu_1815_p2;
                add_ln271_reg_5130 <= add_ln271_fu_1810_p2;
                    sub_ln266_reg_5120(38 downto 4) <= sub_ln266_fu_1726_p2(38 downto 4);
                    xa_reg_5115(36 downto 2) <= xa_fu_1698_p2(36 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21))) then
                add_ln313_reg_5532 <= add_ln313_fu_3869_p2;
                icmp_ln668_reg_5538 <= icmp_ln668_fu_3874_p2;
                mul_ln679_1_reg_5557 <= mul_ln679_1_fu_3933_p2;
                mul_ln679_2_reg_5562 <= mul_ln679_2_fu_3939_p2;
                mul_ln679_3_reg_5567 <= mul_ln679_3_fu_3945_p2;
                mul_ln679_4_reg_5572 <= mul_ln679_4_fu_3951_p2;
                mul_ln679_5_reg_5577 <= mul_ln679_5_fu_3957_p2;
                mul_ln679_reg_5552 <= mul_ln679_fu_3927_p2;
                trunc_ln9_reg_5522 <= select_ln643_fu_3830_p3(14 downto 11);
                wd3_1_reg_5542 <= sub_ln672_fu_3886_p2(39 downto 8);
                wd3_2_reg_5547 <= sub_ln672_1_fu_3910_p2(39 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then
                add_ln364_reg_5312 <= add_ln364_fu_2804_p2;
                add_ln760_reg_5322 <= add_ln760_fu_2882_p2;
                decis_25_reg_5307 <= mul_ln620_24_fu_2749_p2(29 downto 15);
                icmp_ln621_10_reg_5243 <= icmp_ln621_10_fu_2331_p2;
                icmp_ln621_11_reg_5247 <= icmp_ln621_11_fu_2357_p2;
                icmp_ln621_12_reg_5251 <= icmp_ln621_12_fu_2383_p2;
                icmp_ln621_13_reg_5255 <= icmp_ln621_13_fu_2409_p2;
                icmp_ln621_14_reg_5259 <= icmp_ln621_14_fu_2435_p2;
                icmp_ln621_15_reg_5263 <= icmp_ln621_15_fu_2461_p2;
                icmp_ln621_16_reg_5267 <= icmp_ln621_16_fu_2487_p2;
                icmp_ln621_17_reg_5271 <= icmp_ln621_17_fu_2513_p2;
                icmp_ln621_18_reg_5275 <= icmp_ln621_18_fu_2561_p2;
                icmp_ln621_19_reg_5279 <= icmp_ln621_19_fu_2587_p2;
                icmp_ln621_1_reg_5207 <= icmp_ln621_1_fu_2097_p2;
                icmp_ln621_20_reg_5283 <= icmp_ln621_20_fu_2613_p2;
                icmp_ln621_21_reg_5287 <= icmp_ln621_21_fu_2639_p2;
                icmp_ln621_22_reg_5291 <= icmp_ln621_22_fu_2665_p2;
                icmp_ln621_23_reg_5295 <= icmp_ln621_23_fu_2691_p2;
                icmp_ln621_24_reg_5299 <= icmp_ln621_24_fu_2717_p2;
                icmp_ln621_25_reg_5303 <= icmp_ln621_25_fu_2743_p2;
                icmp_ln621_2_reg_5211 <= icmp_ln621_2_fu_2123_p2;
                icmp_ln621_3_reg_5215 <= icmp_ln621_3_fu_2149_p2;
                icmp_ln621_4_reg_5219 <= icmp_ln621_4_fu_2175_p2;
                icmp_ln621_5_reg_5223 <= icmp_ln621_5_fu_2201_p2;
                icmp_ln621_6_reg_5227 <= icmp_ln621_6_fu_2227_p2;
                icmp_ln621_7_reg_5231 <= icmp_ln621_7_fu_2253_p2;
                icmp_ln621_8_reg_5235 <= icmp_ln621_8_fu_2279_p2;
                icmp_ln621_9_reg_5239 <= icmp_ln621_9_fu_2305_p2;
                icmp_ln621_reg_5203 <= icmp_ln621_fu_2049_p2;
                m_4_reg_5189 <= m_4_fu_2022_p3;
                tmp_1_reg_5317 <= tmp_1_fu_2810_p6;
                    zext_ln620_reg_5197(14 downto 0) <= zext_ln620_fu_2028_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then
                add_ln373_reg_5352 <= add_ln373_fu_3009_p2;
                decis_26_reg_5332 <= mul_ln620_25_fu_2896_p2(29 downto 15);
                icmp_ln621_26_reg_5328 <= icmp_ln621_26_fu_2891_p2;
                icmp_ln668_1_reg_5358 <= icmp_ln668_1_fu_3014_p2;
                trunc_ln653_1_reg_5342 <= select_ln763_fu_2970_p3(14 downto 11);
                trunc_ln8_reg_5337 <= mul_ln364_fu_2917_p2(28 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                add_ln589_5_reg_4946 <= add_ln589_5_fu_1490_p2;
                add_ln589_reg_4899 <= add_ln589_fu_1464_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20))) then
                add_ln640_reg_5516 <= add_ln640_fu_3714_p2;
                trunc_ln6_reg_5508 <= mul_ln303_fu_3655_p2(30 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18))) then
                add_ln684_10_reg_5471 <= add_ln684_10_fu_3434_p2;
                apl2_3_reg_5476 <= apl2_3_fu_3534_p2;
                icmp_ln719_1_reg_5481 <= icmp_ln719_1_fu_3540_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22))) then
                add_ln684_2_reg_5587 <= add_ln684_2_fu_4152_p2;
                add_ln684_3_reg_5592 <= add_ln684_3_fu_4177_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23))) then
                add_ln684_4_reg_5618 <= add_ln684_4_fu_4288_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then
                add_ln684_6_reg_5371 <= add_ln684_6_fu_3157_p2;
                add_ln684_7_reg_5376 <= add_ln684_7_fu_3188_p2;
                decis_27_reg_5366 <= mul_ln620_26_fu_3039_p2(29 downto 15);
                icmp_ln621_27_reg_5362 <= icmp_ln621_27_fu_3034_p2;
                mul_ln679_10_reg_5391 <= mul_ln679_10_fu_3206_p2;
                mul_ln679_11_reg_5396 <= mul_ln679_11_fu_3212_p2;
                mul_ln679_8_reg_5381 <= mul_ln679_8_fu_3194_p2;
                mul_ln679_9_reg_5386 <= mul_ln679_9_fu_3200_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17))) then
                add_ln684_8_reg_5435 <= add_ln684_8_fu_3352_p2;
                add_ln684_9_reg_5440 <= add_ln684_9_fu_3376_p2;
                    zext_ln620_4_reg_5417(14 downto 0) <= zext_ln620_4_fu_3252_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ah1_load_reg_4567 <= ah1_i;
                ah2_load_reg_4575 <= ah2_i;
                apl1_reg_5644 <= apl1_fu_4475_p2;
                decis_reg_4562 <= mul_ln620_fu_1060_p2(23 downto 15);
                deth_load_reg_4601 <= deth_i;
                detl_load_reg_4546 <= detl_i;
                mul_ln359_reg_4606 <= mul_ln359_fu_1136_p2;
                wd3_7_reg_5650 <= wd3_7_fu_4481_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                al1_load_reg_4766 <= al1_i;
                tmp34_reg_4718 <= tmp34_fu_1292_p2;
                tmp_reg_4713 <= tmp_fu_1282_p2;
                wd3_11_reg_4820 <= sub_ln672_9_fu_1386_p2(39 downto 8);
                wd3_12_reg_4826 <= sub_ln672_10_fu_1410_p2(39 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                al2_load_reg_4654 <= al2_i;
                wd3_10_reg_4707 <= sub_ln672_8_fu_1254_p2(39 downto 8);
                wd3_9_reg_4701 <= sub_ln672_6_fu_1230_p2(39 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_port_reg_xin2 <= xin2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then
                apl1_4_reg_5496 <= apl1_4_fu_3639_p2;
                wd3_15_reg_5502 <= wd3_15_fu_3645_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24))) then
                apl2_reg_5634 <= apl2_fu_4392_p2;
                icmp_ln719_reg_5639 <= icmp_ln719_fu_4398_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                delay_bph_load_1_reg_4904 <= delay_bph_q1;
                delay_bph_load_5_reg_4925 <= delay_bph_q0;
                delay_bpl_load_1_reg_4857 <= delay_bpl_q1;
                delay_bpl_load_5_reg_4878 <= delay_bpl_q0;
                delay_dhx_load_1_reg_4915 <= delay_dhx_q1;
                delay_dhx_load_5_reg_4936 <= delay_dhx_q0;
                delay_dltx_load_1_reg_4868 <= delay_dltx_q1;
                delay_dltx_load_5_reg_4889 <= delay_dltx_q0;
                tqmf_load_3_reg_4832 <= tqmf_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                delay_bpl_load_2_reg_4633 <= delay_bpl_q0;
                delay_bpl_load_reg_4611 <= delay_bpl_q1;
                delay_dhx_load_2_reg_4691 <= delay_dhx_q0;
                delay_dhx_load_reg_4675 <= delay_dhx_q1;
                delay_dltx_load_2_reg_4644 <= delay_dltx_q0;
                delay_dltx_load_reg_4622 <= delay_dltx_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                delay_bpl_load_3_reg_4723 <= delay_bpl_q1;
                delay_bpl_load_4_reg_4745 <= delay_bpl_q0;
                delay_dhx_load_3_reg_4789 <= delay_dhx_q0;
                delay_dhx_load_4_reg_4805 <= delay_dhx_q1;
                delay_dltx_load_3_reg_4734 <= delay_dltx_q0;
                delay_dltx_load_4_reg_4756 <= delay_dltx_q1;
                trunc_ln605_1_reg_4815 <= grp_fu_1036_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then
                m_2_reg_5184 <= m_2_fu_2011_p2;
                sub_ln296_reg_5157 <= sub_ln296_fu_1975_p2;
                sub_ln347_reg_5173 <= sub_ln347_fu_1997_p2;
                tmp_17_reg_5178 <= sub_ln347_fu_1997_p2(31 downto 31);
                tmp_3_reg_5163 <= sub_ln296_fu_1975_p2(31 downto 31);
                trunc_ln296_reg_5152 <= trunc_ln296_fu_1971_p1;
                trunc_ln347_reg_5168 <= trunc_ln347_fu_1993_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                mul_ln266_1_reg_5023 <= grp_fu_909_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                mul_ln266_2_reg_5053 <= grp_fu_919_p2;
                mul_ln267_4_reg_5048 <= grp_fu_914_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                mul_ln266_3_reg_5073 <= grp_fu_941_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                mul_ln267_5_reg_5068 <= grp_fu_909_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                mul_ln589_4_reg_4976 <= grp_fu_883_p2;
                mul_ln589_5_reg_4986 <= grp_fu_867_p2;
                mul_ln589_9_reg_4991 <= grp_fu_871_p2;
                mul_ln589_reg_4971 <= grp_fu_879_p2;
                trunc_ln3_reg_4981 <= grp_fu_1036_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then
                reg_1000 <= grp_fu_867_p2;
                reg_1004 <= grp_fu_871_p2;
                reg_992 <= grp_fu_879_p2;
                reg_996 <= grp_fu_883_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)))) then
                reg_1008 <= grp_fu_899_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)))) then
                reg_1012 <= grp_fu_930_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)))) then
                reg_1016 <= grp_fu_904_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)))) then
                reg_1020 <= grp_fu_924_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)))) then
                reg_1024 <= tqmf_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)))) then
                reg_1030 <= tqmf_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_972 <= tqmf_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_978 <= tqmf_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_984 <= grp_fu_887_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_988 <= grp_fu_875_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18))) then
                storemerge29_reg_833 <= ap_phi_reg_pp0_iter0_storemerge29_reg_833;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23))) then
                storemerge_reg_856 <= ap_phi_reg_pp0_iter0_storemerge_reg_856;
                tmp_15_reg_5623 <= grp_fu_891_p2(63 downto 63);
                tmp_16_reg_5629 <= grp_fu_895_p2(63 downto 63);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                tmp33_reg_4961 <= grp_fu_946_p2;
                tmp35_reg_4966 <= grp_fu_951_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17))) then
                tmp_25_reg_5450 <= grp_fu_891_p2(63 downto 63);
                tmp_26_reg_5456 <= grp_fu_895_p2(63 downto 63);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then
                tqmf_load_4_reg_5098 <= tqmf_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                trunc_ln2_reg_5006 <= zl_1_fu_1531_p2(45 downto 14);
                trunc_ln591_1_reg_5012 <= zl_3_fu_1562_p2(45 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then
                xa_2_reg_5140 <= xa_2_fu_1892_p2;
                xb_reg_5146 <= xb_fu_1933_p2;
            end if;
        end if;
    end process;
    xa_reg_5115(1 downto 0) <= "00";
    sub_ln266_reg_5120(3 downto 0) <= "0000";
    zext_ln620_reg_5197(29 downto 15) <= "000000000000000";
    zext_ln620_4_reg_5417(30 downto 15) <= "0000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage24_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_reset_idle_pp0, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_block_pp0_stage15_subdone, ap_block_pp0_stage16_subdone, ap_block_pp0_stage17_subdone, ap_block_pp0_stage18_subdone, ap_block_pp0_stage19_subdone, ap_block_pp0_stage20_subdone, ap_block_pp0_stage21_subdone, ap_block_pp0_stage22_subdone, ap_block_pp0_stage23_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_idle_pp0_1to1 = ap_const_logic_1) and (ap_start = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_reset_idle_pp0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage16_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when ap_ST_fsm_pp0_stage17 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage17_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                end if;
            when ap_ST_fsm_pp0_stage18 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage18_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                end if;
            when ap_ST_fsm_pp0_stage19 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage19_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                end if;
            when ap_ST_fsm_pp0_stage20 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage20_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                end if;
            when ap_ST_fsm_pp0_stage21 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage21_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                end if;
            when ap_ST_fsm_pp0_stage22 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage22_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                end if;
            when ap_ST_fsm_pp0_stage23 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage23_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                end if;
            when ap_ST_fsm_pp0_stage24 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage24_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln270_1_fu_1658_p2 <= std_logic_vector(signed(sext_ln267_9_fu_1647_p1) + signed(mul_ln266_2_reg_5053));
    add_ln270_2_fu_1663_p2 <= std_logic_vector(unsigned(add_ln270_1_fu_1658_p2) + unsigned(sext_ln267_11_fu_1654_p1));
    add_ln270_3_fu_1853_p2 <= std_logic_vector(unsigned(add_ln270_2_reg_5105) + unsigned(sext_ln270_1_fu_1850_p1));
    add_ln270_4_fu_1858_p2 <= std_logic_vector(signed(sext_ln267_2_fu_1823_p1) + signed(sext_ln267_4_fu_1834_p1));
    add_ln270_5_fu_1864_p2 <= std_logic_vector(unsigned(add_ln270_4_fu_1858_p2) + unsigned(sext_ln255_fu_1820_p1));
    add_ln270_6_fu_1599_p2 <= std_logic_vector(unsigned(reg_1020) + unsigned(sext_ln270_fu_1596_p1));
    add_ln270_7_fu_1877_p2 <= std_logic_vector(signed(sext_ln270_3_fu_1874_p1) + signed(mul_ln266_1_reg_5023));
    add_ln270_8_fu_1882_p2 <= std_logic_vector(unsigned(add_ln270_7_fu_1877_p2) + unsigned(sext_ln270_2_fu_1870_p1));
    add_ln270_fu_1770_p2 <= std_logic_vector(unsigned(reg_1020) + unsigned(sext_ln267_15_fu_1766_p1));
    add_ln271_1_fu_1669_p2 <= std_logic_vector(signed(sext_ln266_9_fu_1650_p1) + signed(mul_ln267_5_reg_5068));
    add_ln271_2_fu_1901_p2 <= std_logic_vector(unsigned(add_ln271_1_reg_5110) + unsigned(sext_ln266_11_fu_1846_p1));
    add_ln271_3_fu_1906_p2 <= std_logic_vector(unsigned(add_ln271_2_fu_1901_p2) + unsigned(sext_ln271_3_fu_1898_p1));
    add_ln271_4_fu_1605_p2 <= std_logic_vector(signed(sext_ln266_4_fu_1582_p1) + signed(reg_1016));
    add_ln271_5_fu_1611_p2 <= std_logic_vector(unsigned(add_ln271_4_fu_1605_p2) + unsigned(sext_ln266_1_fu_1578_p1));
    add_ln271_6_fu_1815_p2 <= std_logic_vector(unsigned(mul_ln266_reg_5018) + unsigned(sext_ln271_2_fu_1806_p1));
    add_ln271_7_fu_1922_p2 <= std_logic_vector(signed(sext_ln271_6_fu_1919_p1) + signed(mul_ln267_4_reg_5048));
    add_ln271_8_fu_1927_p2 <= std_logic_vector(unsigned(add_ln271_7_fu_1922_p2) + unsigned(sext_ln271_5_fu_1916_p1));
    add_ln271_fu_1810_p2 <= std_logic_vector(signed(sext_ln266_12_fu_1762_p1) + signed(tmp33_reg_4961));
    add_ln281_fu_1939_p2 <= std_logic_vector(unsigned(xb_reg_5146) + unsigned(xa_2_reg_5140));
    add_ln295_fu_1967_p2 <= std_logic_vector(unsigned(trunc_ln3_reg_4981) + unsigned(trunc_ln2_reg_5006));
    add_ln313_fu_3869_p2 <= std_logic_vector(signed(sext_ln303_1_fu_3796_p1) + signed(trunc_ln2_reg_5006));
    add_ln330_fu_3963_p2 <= std_logic_vector(signed(sext_ln639_fu_3799_p1) + signed(trunc_ln296_reg_5152));
    add_ln345_fu_1989_p2 <= std_logic_vector(unsigned(trunc_ln605_1_reg_4815) + unsigned(trunc_ln591_1_reg_5012));
    add_ln364_fu_2804_p2 <= std_logic_vector(unsigned(select_ln360_fu_2796_p3) + unsigned(select_ln351_fu_2765_p3));
    add_ln373_fu_3009_p2 <= std_logic_vector(signed(sext_ln364_1_fu_2934_p1) + signed(trunc_ln591_1_reg_5012));
    add_ln388_fu_3020_p2 <= std_logic_vector(unsigned(trunc_ln347_reg_5168) + unsigned(sext_ln759_fu_2938_p1));
    add_ln589_1_fu_1516_p2 <= std_logic_vector(unsigned(add_ln589_reg_4899) + unsigned(mul_ln589_reg_4971));
    add_ln589_2_fu_1520_p2 <= std_logic_vector(unsigned(reg_996) + unsigned(mul_ln589_4_reg_4976));
    add_ln589_3_fu_1525_p2 <= std_logic_vector(unsigned(add_ln589_2_fu_1520_p2) + unsigned(reg_992));
    add_ln589_5_fu_1490_p2 <= std_logic_vector(unsigned(reg_1000) + unsigned(reg_1004));
    add_ln589_6_fu_1547_p2 <= std_logic_vector(unsigned(add_ln589_5_reg_4946) + unsigned(mul_ln589_5_reg_4986));
    add_ln589_7_fu_1551_p2 <= std_logic_vector(unsigned(reg_1004) + unsigned(mul_ln589_9_reg_4991));
    add_ln589_8_fu_1556_p2 <= std_logic_vector(unsigned(add_ln589_7_fu_1551_p2) + unsigned(reg_1000));
    add_ln589_fu_1464_p2 <= std_logic_vector(unsigned(reg_992) + unsigned(reg_996));
    add_ln620_fu_2077_p2 <= std_logic_vector(unsigned(zext_ln620_8_fu_2062_p1) + unsigned(zext_ln620_9_fu_2073_p1));
    add_ln640_fu_3714_p2 <= std_logic_vector(signed(sext_ln640_1_fu_3710_p1) + signed(sext_ln640_fu_3706_p1));
    add_ln684_10_fu_3434_p2 <= std_logic_vector(unsigned(select_ln666_10_fu_3426_p3) + unsigned(wd3_12_reg_4826));
    add_ln684_11_fu_3400_p2 <= std_logic_vector(unsigned(select_ln666_11_fu_3392_p3) + unsigned(wd3_13_fu_3323_p4));
    add_ln684_1_fu_4127_p2 <= std_logic_vector(unsigned(select_ln666_1_fu_4119_p3) + unsigned(wd3_2_reg_5547));
    add_ln684_2_fu_4152_p2 <= std_logic_vector(unsigned(select_ln666_2_fu_4144_p3) + unsigned(wd3_3_fu_4025_p4));
    add_ln684_3_fu_4177_p2 <= std_logic_vector(unsigned(select_ln666_3_fu_4169_p3) + unsigned(wd3_4_fu_4049_p4));
    add_ln684_4_fu_4288_p2 <= std_logic_vector(unsigned(select_ln666_4_fu_4280_p3) + unsigned(wd3_5_fu_4258_p4));
    add_ln684_5_fu_4202_p2 <= std_logic_vector(unsigned(select_ln666_5_fu_4194_p3) + unsigned(wd3_6_fu_4073_p4));
    add_ln684_6_fu_3157_p2 <= std_logic_vector(unsigned(select_ln666_6_fu_3149_p3) + unsigned(wd3_9_reg_4701));
    add_ln684_7_fu_3188_p2 <= std_logic_vector(unsigned(select_ln666_7_fu_3180_p3) + unsigned(wd3_14_fu_3117_p4));
    add_ln684_8_fu_3352_p2 <= std_logic_vector(unsigned(select_ln666_8_fu_3344_p3) + unsigned(wd3_10_reg_4707));
    add_ln684_9_fu_3376_p2 <= std_logic_vector(unsigned(select_ln666_9_fu_3368_p3) + unsigned(wd3_11_reg_4820));
    add_ln684_fu_4102_p2 <= std_logic_vector(unsigned(select_ln666_fu_4094_p3) + unsigned(wd3_1_reg_5542));
    add_ln716_2_fu_3528_p2 <= std_logic_vector(signed(sext_ln716_3_fu_3517_p1) + signed(select_ln716_1_fu_3521_p3));
    add_ln716_fu_4386_p2 <= std_logic_vector(signed(sext_ln716_1_fu_4375_p1) + signed(select_ln716_fu_4379_p3));
    add_ln760_fu_2882_p2 <= std_logic_vector(signed(sext_ln758_fu_2860_p1) + signed(sext_ln760_fu_2878_p1));

    ah1_o_assign_proc : process(ap_enable_reg_pp0_iter0, ah1_i, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, apl1_7_fu_3758_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage20) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20))) then 
            ah1_o <= apl1_7_fu_3758_p3;
        else 
            ah1_o <= ah1_i;
        end if; 
    end process;


    ah1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20))) then 
            ah1_o_ap_vld <= ap_const_logic_1;
        else 
            ah1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    ah2_o_assign_proc : process(ap_enable_reg_pp0_iter0, ah2_i, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, apl2_5_fu_3587_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            ah2_o <= apl2_5_fu_3587_p3;
        else 
            ah2_o <= ah2_i;
        end if; 
    end process;


    ah2_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            ah2_o_ap_vld <= ap_const_logic_1;
        else 
            ah2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    al1_o_assign_proc : process(ap_enable_reg_pp0_iter1, al1_i, ap_CS_fsm_pp0_stage1, apl1_3_fu_4525_p3, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            al1_o <= apl1_3_fu_4525_p3;
        else 
            al1_o <= al1_i;
        end if; 
    end process;


    al1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            al1_o_ap_vld <= ap_const_logic_1;
        else 
            al1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    al2_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, al2_i, apl2_2_fu_4423_p3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            al2_o <= apl2_2_fu_4423_p3;
        else 
            al2_o <= al2_i;
        end if; 
    end process;


    al2_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            al2_o_ap_vld <= ap_const_logic_1;
        else 
            al2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage17 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage18 <= ap_CS_fsm(18);
    ap_CS_fsm_pp0_stage19 <= ap_CS_fsm(19);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage20 <= ap_CS_fsm(20);
    ap_CS_fsm_pp0_stage21 <= ap_CS_fsm(21);
    ap_CS_fsm_pp0_stage22 <= ap_CS_fsm(22);
    ap_CS_fsm_pp0_stage23 <= ap_CS_fsm(23);
    ap_CS_fsm_pp0_stage24 <= ap_CS_fsm(24);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage21_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage21_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage22_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage22_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage23_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage23_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage24_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage24_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1143_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001)
    begin
                ap_condition_1143 <= ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19));
    end process;


    ap_condition_1151_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22_11001)
    begin
                ap_condition_1151 <= ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22));
    end process;


    ap_condition_3812_assign_proc : process(ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, icmp_ln621_fu_2049_p2)
    begin
                ap_condition_3812 <= ((icmp_ln621_fu_2049_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14));
    end process;


    ap_condition_3816_assign_proc : process(ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, icmp_ln621_fu_2049_p2, icmp_ln621_1_fu_2097_p2)
    begin
                ap_condition_3816 <= ((icmp_ln621_1_fu_2097_p2 = ap_const_lv1_0) and (icmp_ln621_fu_2049_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14));
    end process;


    ap_condition_3821_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
                ap_condition_3821 <= ((icmp_ln621_2_reg_5211 = ap_const_lv1_0) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15));
    end process;


    ap_condition_3827_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
                ap_condition_3827 <= ((icmp_ln621_3_reg_5215 = ap_const_lv1_0) and (icmp_ln621_2_reg_5211 = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15));
    end process;


    ap_condition_3834_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, icmp_ln621_4_reg_5219, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
                ap_condition_3834 <= ((icmp_ln621_4_reg_5219 = ap_const_lv1_0) and (icmp_ln621_3_reg_5215 = ap_const_lv1_1) and (icmp_ln621_2_reg_5211 = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15));
    end process;


    ap_condition_3842_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, icmp_ln621_4_reg_5219, icmp_ln621_5_reg_5223, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
                ap_condition_3842 <= ((icmp_ln621_5_reg_5223 = ap_const_lv1_0) and (icmp_ln621_4_reg_5219 = ap_const_lv1_1) and (icmp_ln621_3_reg_5215 = ap_const_lv1_1) and (icmp_ln621_2_reg_5211 = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15));
    end process;


    ap_condition_3851_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, icmp_ln621_4_reg_5219, icmp_ln621_5_reg_5223, icmp_ln621_6_reg_5227, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
                ap_condition_3851 <= ((icmp_ln621_6_reg_5227 = ap_const_lv1_0) and (icmp_ln621_5_reg_5223 = ap_const_lv1_1) and (icmp_ln621_4_reg_5219 = ap_const_lv1_1) and (icmp_ln621_3_reg_5215 = ap_const_lv1_1) and (icmp_ln621_2_reg_5211 = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15));
    end process;


    ap_condition_3861_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, icmp_ln621_4_reg_5219, icmp_ln621_5_reg_5223, icmp_ln621_6_reg_5227, icmp_ln621_7_reg_5231, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
                ap_condition_3861 <= ((icmp_ln621_7_reg_5231 = ap_const_lv1_0) and (icmp_ln621_6_reg_5227 = ap_const_lv1_1) and (icmp_ln621_5_reg_5223 = ap_const_lv1_1) and (icmp_ln621_4_reg_5219 = ap_const_lv1_1) and (icmp_ln621_3_reg_5215 = ap_const_lv1_1) and (icmp_ln621_2_reg_5211 = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15));
    end process;


    ap_condition_3872_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, icmp_ln621_4_reg_5219, icmp_ln621_5_reg_5223, icmp_ln621_6_reg_5227, icmp_ln621_7_reg_5231, icmp_ln621_8_reg_5235, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
                ap_condition_3872 <= ((icmp_ln621_8_reg_5235 = ap_const_lv1_0) and (icmp_ln621_7_reg_5231 = ap_const_lv1_1) and (icmp_ln621_6_reg_5227 = ap_const_lv1_1) and (icmp_ln621_5_reg_5223 = ap_const_lv1_1) and (icmp_ln621_4_reg_5219 = ap_const_lv1_1) and (icmp_ln621_3_reg_5215 = ap_const_lv1_1) and (icmp_ln621_2_reg_5211 = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15));
    end process;


    ap_condition_3884_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, icmp_ln621_4_reg_5219, icmp_ln621_5_reg_5223, icmp_ln621_6_reg_5227, icmp_ln621_7_reg_5231, icmp_ln621_8_reg_5235, icmp_ln621_9_reg_5239, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
                ap_condition_3884 <= ((icmp_ln621_9_reg_5239 = ap_const_lv1_0) and (icmp_ln621_8_reg_5235 = ap_const_lv1_1) and (icmp_ln621_7_reg_5231 = ap_const_lv1_1) and (icmp_ln621_6_reg_5227 = ap_const_lv1_1) and (icmp_ln621_5_reg_5223 = ap_const_lv1_1) and (icmp_ln621_4_reg_5219 = ap_const_lv1_1) and (icmp_ln621_3_reg_5215 = ap_const_lv1_1) and (icmp_ln621_2_reg_5211 = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15));
    end process;


    ap_condition_3897_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, icmp_ln621_4_reg_5219, icmp_ln621_5_reg_5223, icmp_ln621_6_reg_5227, icmp_ln621_7_reg_5231, icmp_ln621_8_reg_5235, icmp_ln621_9_reg_5239, icmp_ln621_10_reg_5243, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
                ap_condition_3897 <= ((icmp_ln621_10_reg_5243 = ap_const_lv1_0) and (icmp_ln621_9_reg_5239 = ap_const_lv1_1) and (icmp_ln621_8_reg_5235 = ap_const_lv1_1) and (icmp_ln621_7_reg_5231 = ap_const_lv1_1) and (icmp_ln621_6_reg_5227 = ap_const_lv1_1) and (icmp_ln621_5_reg_5223 = ap_const_lv1_1) and (icmp_ln621_4_reg_5219 = ap_const_lv1_1) and (icmp_ln621_3_reg_5215 = ap_const_lv1_1) and (icmp_ln621_2_reg_5211 = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15));
    end process;


    ap_condition_3911_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, icmp_ln621_4_reg_5219, icmp_ln621_5_reg_5223, icmp_ln621_6_reg_5227, icmp_ln621_7_reg_5231, icmp_ln621_8_reg_5235, icmp_ln621_9_reg_5239, icmp_ln621_10_reg_5243, icmp_ln621_11_reg_5247, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
                ap_condition_3911 <= ((icmp_ln621_11_reg_5247 = ap_const_lv1_0) and (icmp_ln621_10_reg_5243 = ap_const_lv1_1) and (icmp_ln621_9_reg_5239 = ap_const_lv1_1) and (icmp_ln621_8_reg_5235 = ap_const_lv1_1) and (icmp_ln621_7_reg_5231 = ap_const_lv1_1) and (icmp_ln621_6_reg_5227 = ap_const_lv1_1) and (icmp_ln621_5_reg_5223 = ap_const_lv1_1) and (icmp_ln621_4_reg_5219 = ap_const_lv1_1) and (icmp_ln621_3_reg_5215 = ap_const_lv1_1) and (icmp_ln621_2_reg_5211 = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15));
    end process;


    ap_condition_3926_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, icmp_ln621_4_reg_5219, icmp_ln621_5_reg_5223, icmp_ln621_6_reg_5227, icmp_ln621_7_reg_5231, icmp_ln621_8_reg_5235, icmp_ln621_9_reg_5239, icmp_ln621_10_reg_5243, icmp_ln621_11_reg_5247, icmp_ln621_12_reg_5251, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
                ap_condition_3926 <= ((icmp_ln621_12_reg_5251 = ap_const_lv1_0) and (icmp_ln621_11_reg_5247 = ap_const_lv1_1) and (icmp_ln621_10_reg_5243 = ap_const_lv1_1) and (icmp_ln621_9_reg_5239 = ap_const_lv1_1) and (icmp_ln621_8_reg_5235 = ap_const_lv1_1) and (icmp_ln621_7_reg_5231 = ap_const_lv1_1) and (icmp_ln621_6_reg_5227 = ap_const_lv1_1) and (icmp_ln621_5_reg_5223 = ap_const_lv1_1) and (icmp_ln621_4_reg_5219 = ap_const_lv1_1) and (icmp_ln621_3_reg_5215 = ap_const_lv1_1) and (icmp_ln621_2_reg_5211 = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15));
    end process;


    ap_condition_3942_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, icmp_ln621_4_reg_5219, icmp_ln621_5_reg_5223, icmp_ln621_6_reg_5227, icmp_ln621_7_reg_5231, icmp_ln621_8_reg_5235, icmp_ln621_9_reg_5239, icmp_ln621_10_reg_5243, icmp_ln621_11_reg_5247, icmp_ln621_12_reg_5251, icmp_ln621_13_reg_5255, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
                ap_condition_3942 <= ((icmp_ln621_13_reg_5255 = ap_const_lv1_0) and (icmp_ln621_12_reg_5251 = ap_const_lv1_1) and (icmp_ln621_11_reg_5247 = ap_const_lv1_1) and (icmp_ln621_10_reg_5243 = ap_const_lv1_1) and (icmp_ln621_9_reg_5239 = ap_const_lv1_1) and (icmp_ln621_8_reg_5235 = ap_const_lv1_1) and (icmp_ln621_7_reg_5231 = ap_const_lv1_1) and (icmp_ln621_6_reg_5227 = ap_const_lv1_1) and (icmp_ln621_5_reg_5223 = ap_const_lv1_1) and (icmp_ln621_4_reg_5219 = ap_const_lv1_1) and (icmp_ln621_3_reg_5215 = ap_const_lv1_1) and (icmp_ln621_2_reg_5211 = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15));
    end process;


    ap_condition_3959_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, icmp_ln621_4_reg_5219, icmp_ln621_5_reg_5223, icmp_ln621_6_reg_5227, icmp_ln621_7_reg_5231, icmp_ln621_8_reg_5235, icmp_ln621_9_reg_5239, icmp_ln621_10_reg_5243, icmp_ln621_11_reg_5247, icmp_ln621_12_reg_5251, icmp_ln621_13_reg_5255, icmp_ln621_14_reg_5259, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
                ap_condition_3959 <= ((icmp_ln621_14_reg_5259 = ap_const_lv1_0) and (icmp_ln621_13_reg_5255 = ap_const_lv1_1) and (icmp_ln621_12_reg_5251 = ap_const_lv1_1) and (icmp_ln621_11_reg_5247 = ap_const_lv1_1) and (icmp_ln621_10_reg_5243 = ap_const_lv1_1) and (icmp_ln621_9_reg_5239 = ap_const_lv1_1) and (icmp_ln621_8_reg_5235 = ap_const_lv1_1) and (icmp_ln621_7_reg_5231 = ap_const_lv1_1) and (icmp_ln621_6_reg_5227 = ap_const_lv1_1) and (icmp_ln621_5_reg_5223 = ap_const_lv1_1) and (icmp_ln621_4_reg_5219 = ap_const_lv1_1) and (icmp_ln621_3_reg_5215 = ap_const_lv1_1) and (icmp_ln621_2_reg_5211 = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15));
    end process;


    ap_condition_3977_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, icmp_ln621_4_reg_5219, icmp_ln621_5_reg_5223, icmp_ln621_6_reg_5227, icmp_ln621_7_reg_5231, icmp_ln621_8_reg_5235, icmp_ln621_9_reg_5239, icmp_ln621_10_reg_5243, icmp_ln621_11_reg_5247, icmp_ln621_12_reg_5251, icmp_ln621_13_reg_5255, icmp_ln621_14_reg_5259, icmp_ln621_15_reg_5263, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
                ap_condition_3977 <= ((icmp_ln621_15_reg_5263 = ap_const_lv1_0) and (icmp_ln621_14_reg_5259 = ap_const_lv1_1) and (icmp_ln621_13_reg_5255 = ap_const_lv1_1) and (icmp_ln621_12_reg_5251 = ap_const_lv1_1) and (icmp_ln621_11_reg_5247 = ap_const_lv1_1) and (icmp_ln621_10_reg_5243 = ap_const_lv1_1) and (icmp_ln621_9_reg_5239 = ap_const_lv1_1) and (icmp_ln621_8_reg_5235 = ap_const_lv1_1) and (icmp_ln621_7_reg_5231 = ap_const_lv1_1) and (icmp_ln621_6_reg_5227 = ap_const_lv1_1) and (icmp_ln621_5_reg_5223 = ap_const_lv1_1) and (icmp_ln621_4_reg_5219 = ap_const_lv1_1) and (icmp_ln621_3_reg_5215 = ap_const_lv1_1) and (icmp_ln621_2_reg_5211 = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15));
    end process;


    ap_condition_3996_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, icmp_ln621_4_reg_5219, icmp_ln621_5_reg_5223, icmp_ln621_6_reg_5227, icmp_ln621_7_reg_5231, icmp_ln621_8_reg_5235, icmp_ln621_9_reg_5239, icmp_ln621_10_reg_5243, icmp_ln621_11_reg_5247, icmp_ln621_12_reg_5251, icmp_ln621_13_reg_5255, icmp_ln621_14_reg_5259, icmp_ln621_15_reg_5263, icmp_ln621_16_reg_5267, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
                ap_condition_3996 <= ((icmp_ln621_16_reg_5267 = ap_const_lv1_0) and (icmp_ln621_15_reg_5263 = ap_const_lv1_1) and (icmp_ln621_14_reg_5259 = ap_const_lv1_1) and (icmp_ln621_13_reg_5255 = ap_const_lv1_1) and (icmp_ln621_12_reg_5251 = ap_const_lv1_1) and (icmp_ln621_11_reg_5247 = ap_const_lv1_1) and (icmp_ln621_10_reg_5243 = ap_const_lv1_1) and (icmp_ln621_9_reg_5239 = ap_const_lv1_1) and (icmp_ln621_8_reg_5235 = ap_const_lv1_1) and (icmp_ln621_7_reg_5231 = ap_const_lv1_1) and (icmp_ln621_6_reg_5227 = ap_const_lv1_1) and (icmp_ln621_5_reg_5223 = ap_const_lv1_1) and (icmp_ln621_4_reg_5219 = ap_const_lv1_1) and (icmp_ln621_3_reg_5215 = ap_const_lv1_1) and (icmp_ln621_2_reg_5211 = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15));
    end process;


    ap_condition_4016_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, icmp_ln621_4_reg_5219, icmp_ln621_5_reg_5223, icmp_ln621_6_reg_5227, icmp_ln621_7_reg_5231, icmp_ln621_8_reg_5235, icmp_ln621_9_reg_5239, icmp_ln621_10_reg_5243, icmp_ln621_11_reg_5247, icmp_ln621_12_reg_5251, icmp_ln621_13_reg_5255, icmp_ln621_14_reg_5259, icmp_ln621_15_reg_5263, icmp_ln621_16_reg_5267, icmp_ln621_17_reg_5271, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
                ap_condition_4016 <= ((icmp_ln621_17_reg_5271 = ap_const_lv1_0) and (icmp_ln621_16_reg_5267 = ap_const_lv1_1) and (icmp_ln621_15_reg_5263 = ap_const_lv1_1) and (icmp_ln621_14_reg_5259 = ap_const_lv1_1) and (icmp_ln621_13_reg_5255 = ap_const_lv1_1) and (icmp_ln621_12_reg_5251 = ap_const_lv1_1) and (icmp_ln621_11_reg_5247 = ap_const_lv1_1) and (icmp_ln621_10_reg_5243 = ap_const_lv1_1) and (icmp_ln621_9_reg_5239 = ap_const_lv1_1) and (icmp_ln621_8_reg_5235 = ap_const_lv1_1) and (icmp_ln621_7_reg_5231 = ap_const_lv1_1) and (icmp_ln621_6_reg_5227 = ap_const_lv1_1) and (icmp_ln621_5_reg_5223 = ap_const_lv1_1) and (icmp_ln621_4_reg_5219 = ap_const_lv1_1) and (icmp_ln621_3_reg_5215 = ap_const_lv1_1) and (icmp_ln621_2_reg_5211 = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15));
    end process;


    ap_condition_4037_assign_proc : process(ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, icmp_ln621_fu_2049_p2, icmp_ln621_1_fu_2097_p2, icmp_ln621_2_fu_2123_p2, icmp_ln621_3_fu_2149_p2, icmp_ln621_4_fu_2175_p2, icmp_ln621_5_fu_2201_p2, icmp_ln621_6_fu_2227_p2, icmp_ln621_7_fu_2253_p2, icmp_ln621_8_fu_2279_p2, icmp_ln621_9_fu_2305_p2, icmp_ln621_10_fu_2331_p2, icmp_ln621_11_fu_2357_p2, icmp_ln621_12_fu_2383_p2, icmp_ln621_13_fu_2409_p2, icmp_ln621_14_fu_2435_p2, icmp_ln621_15_fu_2461_p2, icmp_ln621_16_fu_2487_p2, icmp_ln621_17_fu_2513_p2, icmp_ln621_18_fu_2561_p2)
    begin
                ap_condition_4037 <= ((icmp_ln621_18_fu_2561_p2 = ap_const_lv1_0) and (icmp_ln621_17_fu_2513_p2 = ap_const_lv1_1) and (icmp_ln621_16_fu_2487_p2 = ap_const_lv1_1) and (icmp_ln621_15_fu_2461_p2 = ap_const_lv1_1) and (icmp_ln621_14_fu_2435_p2 = ap_const_lv1_1) and (icmp_ln621_13_fu_2409_p2 = ap_const_lv1_1) and (icmp_ln621_12_fu_2383_p2 = ap_const_lv1_1) and (icmp_ln621_11_fu_2357_p2 = ap_const_lv1_1) and (icmp_ln621_10_fu_2331_p2 = ap_const_lv1_1) and (icmp_ln621_9_fu_2305_p2 = ap_const_lv1_1) and (icmp_ln621_8_fu_2279_p2 = ap_const_lv1_1) and (icmp_ln621_7_fu_2253_p2 = ap_const_lv1_1) and (icmp_ln621_6_fu_2227_p2 = ap_const_lv1_1) and (icmp_ln621_5_fu_2201_p2 = ap_const_lv1_1) and (icmp_ln621_4_fu_2175_p2 = ap_const_lv1_1) and (icmp_ln621_3_fu_2149_p2 = ap_const_lv1_1) and (icmp_ln621_2_fu_2123_p2 = ap_const_lv1_1) and (icmp_ln621_1_fu_2097_p2 = ap_const_lv1_1) and (icmp_ln621_fu_2049_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14));
    end process;


    ap_condition_4059_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, icmp_ln621_4_reg_5219, icmp_ln621_5_reg_5223, icmp_ln621_6_reg_5227, icmp_ln621_7_reg_5231, icmp_ln621_8_reg_5235, icmp_ln621_9_reg_5239, icmp_ln621_10_reg_5243, icmp_ln621_11_reg_5247, icmp_ln621_12_reg_5251, icmp_ln621_13_reg_5255, icmp_ln621_14_reg_5259, icmp_ln621_15_reg_5263, icmp_ln621_16_reg_5267, icmp_ln621_17_reg_5271, icmp_ln621_18_reg_5275, icmp_ln621_19_reg_5279, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
                ap_condition_4059 <= ((icmp_ln621_19_reg_5279 = ap_const_lv1_0) and (icmp_ln621_18_reg_5275 = ap_const_lv1_1) and (icmp_ln621_17_reg_5271 = ap_const_lv1_1) and (icmp_ln621_16_reg_5267 = ap_const_lv1_1) and (icmp_ln621_15_reg_5263 = ap_const_lv1_1) and (icmp_ln621_14_reg_5259 = ap_const_lv1_1) and (icmp_ln621_13_reg_5255 = ap_const_lv1_1) and (icmp_ln621_12_reg_5251 = ap_const_lv1_1) and (icmp_ln621_11_reg_5247 = ap_const_lv1_1) and (icmp_ln621_10_reg_5243 = ap_const_lv1_1) and (icmp_ln621_9_reg_5239 = ap_const_lv1_1) and (icmp_ln621_8_reg_5235 = ap_const_lv1_1) and (icmp_ln621_7_reg_5231 = ap_const_lv1_1) and (icmp_ln621_6_reg_5227 = ap_const_lv1_1) and (icmp_ln621_5_reg_5223 = ap_const_lv1_1) and (icmp_ln621_4_reg_5219 = ap_const_lv1_1) and (icmp_ln621_3_reg_5215 = ap_const_lv1_1) and (icmp_ln621_2_reg_5211 = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15));
    end process;


    ap_condition_4082_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, icmp_ln621_4_reg_5219, icmp_ln621_5_reg_5223, icmp_ln621_6_reg_5227, icmp_ln621_7_reg_5231, icmp_ln621_8_reg_5235, icmp_ln621_9_reg_5239, icmp_ln621_10_reg_5243, icmp_ln621_11_reg_5247, icmp_ln621_12_reg_5251, icmp_ln621_13_reg_5255, icmp_ln621_14_reg_5259, icmp_ln621_15_reg_5263, icmp_ln621_16_reg_5267, icmp_ln621_17_reg_5271, icmp_ln621_18_reg_5275, icmp_ln621_19_reg_5279, icmp_ln621_20_reg_5283, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
                ap_condition_4082 <= ((icmp_ln621_20_reg_5283 = ap_const_lv1_0) and (icmp_ln621_19_reg_5279 = ap_const_lv1_1) and (icmp_ln621_18_reg_5275 = ap_const_lv1_1) and (icmp_ln621_17_reg_5271 = ap_const_lv1_1) and (icmp_ln621_16_reg_5267 = ap_const_lv1_1) and (icmp_ln621_15_reg_5263 = ap_const_lv1_1) and (icmp_ln621_14_reg_5259 = ap_const_lv1_1) and (icmp_ln621_13_reg_5255 = ap_const_lv1_1) and (icmp_ln621_12_reg_5251 = ap_const_lv1_1) and (icmp_ln621_11_reg_5247 = ap_const_lv1_1) and (icmp_ln621_10_reg_5243 = ap_const_lv1_1) and (icmp_ln621_9_reg_5239 = ap_const_lv1_1) and (icmp_ln621_8_reg_5235 = ap_const_lv1_1) and (icmp_ln621_7_reg_5231 = ap_const_lv1_1) and (icmp_ln621_6_reg_5227 = ap_const_lv1_1) and (icmp_ln621_5_reg_5223 = ap_const_lv1_1) and (icmp_ln621_4_reg_5219 = ap_const_lv1_1) and (icmp_ln621_3_reg_5215 = ap_const_lv1_1) and (icmp_ln621_2_reg_5211 = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 
    = ap_CS_fsm_pp0_stage15));
    end process;


    ap_condition_4106_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, icmp_ln621_4_reg_5219, icmp_ln621_5_reg_5223, icmp_ln621_6_reg_5227, icmp_ln621_7_reg_5231, icmp_ln621_8_reg_5235, icmp_ln621_9_reg_5239, icmp_ln621_10_reg_5243, icmp_ln621_11_reg_5247, icmp_ln621_12_reg_5251, icmp_ln621_13_reg_5255, icmp_ln621_14_reg_5259, icmp_ln621_15_reg_5263, icmp_ln621_16_reg_5267, icmp_ln621_17_reg_5271, icmp_ln621_18_reg_5275, icmp_ln621_19_reg_5279, icmp_ln621_20_reg_5283, icmp_ln621_21_reg_5287, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
                ap_condition_4106 <= ((icmp_ln621_21_reg_5287 = ap_const_lv1_0) and (icmp_ln621_20_reg_5283 = ap_const_lv1_1) and (icmp_ln621_19_reg_5279 = ap_const_lv1_1) and (icmp_ln621_18_reg_5275 = ap_const_lv1_1) and (icmp_ln621_17_reg_5271 = ap_const_lv1_1) and (icmp_ln621_16_reg_5267 = ap_const_lv1_1) and (icmp_ln621_15_reg_5263 = ap_const_lv1_1) and (icmp_ln621_14_reg_5259 = ap_const_lv1_1) and (icmp_ln621_13_reg_5255 = ap_const_lv1_1) and (icmp_ln621_12_reg_5251 = ap_const_lv1_1) and (icmp_ln621_11_reg_5247 = ap_const_lv1_1) and (icmp_ln621_10_reg_5243 = ap_const_lv1_1) and (icmp_ln621_9_reg_5239 = ap_const_lv1_1) and (icmp_ln621_8_reg_5235 = ap_const_lv1_1) and (icmp_ln621_7_reg_5231 = ap_const_lv1_1) and (icmp_ln621_6_reg_5227 = ap_const_lv1_1) and (icmp_ln621_5_reg_5223 = ap_const_lv1_1) and (icmp_ln621_4_reg_5219 = ap_const_lv1_1) and (icmp_ln621_3_reg_5215 = ap_const_lv1_1) and (icmp_ln621_2_reg_5211 = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) 
    and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15));
    end process;


    ap_condition_4131_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, icmp_ln621_4_reg_5219, icmp_ln621_5_reg_5223, icmp_ln621_6_reg_5227, icmp_ln621_7_reg_5231, icmp_ln621_8_reg_5235, icmp_ln621_9_reg_5239, icmp_ln621_10_reg_5243, icmp_ln621_11_reg_5247, icmp_ln621_12_reg_5251, icmp_ln621_13_reg_5255, icmp_ln621_14_reg_5259, icmp_ln621_15_reg_5263, icmp_ln621_16_reg_5267, icmp_ln621_17_reg_5271, icmp_ln621_18_reg_5275, icmp_ln621_19_reg_5279, icmp_ln621_20_reg_5283, icmp_ln621_21_reg_5287, icmp_ln621_22_reg_5291, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
                ap_condition_4131 <= ((icmp_ln621_22_reg_5291 = ap_const_lv1_0) and (icmp_ln621_21_reg_5287 = ap_const_lv1_1) and (icmp_ln621_20_reg_5283 = ap_const_lv1_1) and (icmp_ln621_19_reg_5279 = ap_const_lv1_1) and (icmp_ln621_18_reg_5275 = ap_const_lv1_1) and (icmp_ln621_17_reg_5271 = ap_const_lv1_1) and (icmp_ln621_16_reg_5267 = ap_const_lv1_1) and (icmp_ln621_15_reg_5263 = ap_const_lv1_1) and (icmp_ln621_14_reg_5259 = ap_const_lv1_1) and (icmp_ln621_13_reg_5255 = ap_const_lv1_1) and (icmp_ln621_12_reg_5251 = ap_const_lv1_1) and (icmp_ln621_11_reg_5247 = ap_const_lv1_1) and (icmp_ln621_10_reg_5243 = ap_const_lv1_1) and (icmp_ln621_9_reg_5239 = ap_const_lv1_1) and (icmp_ln621_8_reg_5235 = ap_const_lv1_1) and (icmp_ln621_7_reg_5231 = ap_const_lv1_1) and (icmp_ln621_6_reg_5227 = ap_const_lv1_1) and (icmp_ln621_5_reg_5223 = ap_const_lv1_1) and (icmp_ln621_4_reg_5219 = ap_const_lv1_1) and (icmp_ln621_3_reg_5215 = ap_const_lv1_1) and (icmp_ln621_2_reg_5211 = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 
    = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15));
    end process;


    ap_condition_4157_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, icmp_ln621_4_reg_5219, icmp_ln621_5_reg_5223, icmp_ln621_6_reg_5227, icmp_ln621_7_reg_5231, icmp_ln621_8_reg_5235, icmp_ln621_9_reg_5239, icmp_ln621_10_reg_5243, icmp_ln621_11_reg_5247, icmp_ln621_12_reg_5251, icmp_ln621_13_reg_5255, icmp_ln621_14_reg_5259, icmp_ln621_15_reg_5263, icmp_ln621_16_reg_5267, icmp_ln621_17_reg_5271, icmp_ln621_18_reg_5275, icmp_ln621_19_reg_5279, icmp_ln621_20_reg_5283, icmp_ln621_21_reg_5287, icmp_ln621_22_reg_5291, icmp_ln621_23_reg_5295, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
                ap_condition_4157 <= ((icmp_ln621_23_reg_5295 = ap_const_lv1_0) and (icmp_ln621_22_reg_5291 = ap_const_lv1_1) and (icmp_ln621_21_reg_5287 = ap_const_lv1_1) and (icmp_ln621_20_reg_5283 = ap_const_lv1_1) and (icmp_ln621_19_reg_5279 = ap_const_lv1_1) and (icmp_ln621_18_reg_5275 = ap_const_lv1_1) and (icmp_ln621_17_reg_5271 = ap_const_lv1_1) and (icmp_ln621_16_reg_5267 = ap_const_lv1_1) and (icmp_ln621_15_reg_5263 = ap_const_lv1_1) and (icmp_ln621_14_reg_5259 = ap_const_lv1_1) and (icmp_ln621_13_reg_5255 = ap_const_lv1_1) and (icmp_ln621_12_reg_5251 = ap_const_lv1_1) and (icmp_ln621_11_reg_5247 = ap_const_lv1_1) and (icmp_ln621_10_reg_5243 = ap_const_lv1_1) and (icmp_ln621_9_reg_5239 = ap_const_lv1_1) and (icmp_ln621_8_reg_5235 = ap_const_lv1_1) and (icmp_ln621_7_reg_5231 = ap_const_lv1_1) and (icmp_ln621_6_reg_5227 = ap_const_lv1_1) and (icmp_ln621_5_reg_5223 = ap_const_lv1_1) and (icmp_ln621_4_reg_5219 = ap_const_lv1_1) and (icmp_ln621_3_reg_5215 = ap_const_lv1_1) and (icmp_ln621_2_reg_5211 = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 
    = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15));
    end process;


    ap_condition_4184_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, icmp_ln621_4_reg_5219, icmp_ln621_5_reg_5223, icmp_ln621_6_reg_5227, icmp_ln621_7_reg_5231, icmp_ln621_8_reg_5235, icmp_ln621_9_reg_5239, icmp_ln621_10_reg_5243, icmp_ln621_11_reg_5247, icmp_ln621_12_reg_5251, icmp_ln621_13_reg_5255, icmp_ln621_14_reg_5259, icmp_ln621_15_reg_5263, icmp_ln621_16_reg_5267, icmp_ln621_17_reg_5271, icmp_ln621_18_reg_5275, icmp_ln621_19_reg_5279, icmp_ln621_20_reg_5283, icmp_ln621_21_reg_5287, icmp_ln621_22_reg_5291, icmp_ln621_23_reg_5295, icmp_ln621_24_reg_5299, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
                ap_condition_4184 <= ((icmp_ln621_24_reg_5299 = ap_const_lv1_0) and (icmp_ln621_23_reg_5295 = ap_const_lv1_1) and (icmp_ln621_22_reg_5291 = ap_const_lv1_1) and (icmp_ln621_21_reg_5287 = ap_const_lv1_1) and (icmp_ln621_20_reg_5283 = ap_const_lv1_1) and (icmp_ln621_19_reg_5279 = ap_const_lv1_1) and (icmp_ln621_18_reg_5275 = ap_const_lv1_1) and (icmp_ln621_17_reg_5271 = ap_const_lv1_1) and (icmp_ln621_16_reg_5267 = ap_const_lv1_1) and (icmp_ln621_15_reg_5263 = ap_const_lv1_1) and (icmp_ln621_14_reg_5259 = ap_const_lv1_1) and (icmp_ln621_13_reg_5255 = ap_const_lv1_1) and (icmp_ln621_12_reg_5251 = ap_const_lv1_1) and (icmp_ln621_11_reg_5247 = ap_const_lv1_1) and (icmp_ln621_10_reg_5243 = ap_const_lv1_1) and (icmp_ln621_9_reg_5239 = ap_const_lv1_1) and (icmp_ln621_8_reg_5235 = ap_const_lv1_1) and (icmp_ln621_7_reg_5231 = ap_const_lv1_1) and (icmp_ln621_6_reg_5227 = ap_const_lv1_1) and (icmp_ln621_5_reg_5223 = ap_const_lv1_1) and (icmp_ln621_4_reg_5219 = ap_const_lv1_1) and (icmp_ln621_3_reg_5215 = ap_const_lv1_1) and (icmp_ln621_2_reg_5211 
    = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15));
    end process;


    ap_condition_4212_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, icmp_ln621_4_reg_5219, icmp_ln621_5_reg_5223, icmp_ln621_6_reg_5227, icmp_ln621_7_reg_5231, icmp_ln621_8_reg_5235, icmp_ln621_9_reg_5239, icmp_ln621_10_reg_5243, icmp_ln621_11_reg_5247, icmp_ln621_12_reg_5251, icmp_ln621_13_reg_5255, icmp_ln621_14_reg_5259, icmp_ln621_15_reg_5263, icmp_ln621_16_reg_5267, icmp_ln621_17_reg_5271, icmp_ln621_18_reg_5275, icmp_ln621_19_reg_5279, icmp_ln621_20_reg_5283, icmp_ln621_21_reg_5287, icmp_ln621_22_reg_5291, icmp_ln621_23_reg_5295, icmp_ln621_24_reg_5299, icmp_ln621_25_reg_5303, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
                ap_condition_4212 <= ((icmp_ln621_25_reg_5303 = ap_const_lv1_0) and (icmp_ln621_24_reg_5299 = ap_const_lv1_1) and (icmp_ln621_23_reg_5295 = ap_const_lv1_1) and (icmp_ln621_22_reg_5291 = ap_const_lv1_1) and (icmp_ln621_21_reg_5287 = ap_const_lv1_1) and (icmp_ln621_20_reg_5283 = ap_const_lv1_1) and (icmp_ln621_19_reg_5279 = ap_const_lv1_1) and (icmp_ln621_18_reg_5275 = ap_const_lv1_1) and (icmp_ln621_17_reg_5271 = ap_const_lv1_1) and (icmp_ln621_16_reg_5267 = ap_const_lv1_1) and (icmp_ln621_15_reg_5263 = ap_const_lv1_1) and (icmp_ln621_14_reg_5259 = ap_const_lv1_1) and (icmp_ln621_13_reg_5255 = ap_const_lv1_1) and (icmp_ln621_12_reg_5251 = ap_const_lv1_1) and (icmp_ln621_11_reg_5247 = ap_const_lv1_1) and (icmp_ln621_10_reg_5243 = ap_const_lv1_1) and (icmp_ln621_9_reg_5239 = ap_const_lv1_1) and (icmp_ln621_8_reg_5235 = ap_const_lv1_1) and (icmp_ln621_7_reg_5231 = ap_const_lv1_1) and (icmp_ln621_6_reg_5227 = ap_const_lv1_1) and (icmp_ln621_5_reg_5223 = ap_const_lv1_1) and (icmp_ln621_4_reg_5219 = ap_const_lv1_1) and (icmp_ln621_3_reg_5215 
    = ap_const_lv1_1) and (icmp_ln621_2_reg_5211 = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15));
    end process;


    ap_condition_4241_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, icmp_ln621_4_reg_5219, icmp_ln621_5_reg_5223, icmp_ln621_6_reg_5227, icmp_ln621_7_reg_5231, icmp_ln621_8_reg_5235, icmp_ln621_9_reg_5239, icmp_ln621_10_reg_5243, icmp_ln621_11_reg_5247, icmp_ln621_12_reg_5251, icmp_ln621_13_reg_5255, icmp_ln621_14_reg_5259, icmp_ln621_15_reg_5263, icmp_ln621_16_reg_5267, icmp_ln621_17_reg_5271, icmp_ln621_18_reg_5275, icmp_ln621_19_reg_5279, icmp_ln621_20_reg_5283, icmp_ln621_21_reg_5287, icmp_ln621_22_reg_5291, icmp_ln621_23_reg_5295, icmp_ln621_24_reg_5299, icmp_ln621_25_reg_5303, icmp_ln621_26_fu_2891_p2, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
                ap_condition_4241 <= ((icmp_ln621_26_fu_2891_p2 = ap_const_lv1_0) and (icmp_ln621_25_reg_5303 = ap_const_lv1_1) and (icmp_ln621_24_reg_5299 = ap_const_lv1_1) and (icmp_ln621_23_reg_5295 = ap_const_lv1_1) and (icmp_ln621_22_reg_5291 = ap_const_lv1_1) and (icmp_ln621_21_reg_5287 = ap_const_lv1_1) and (icmp_ln621_20_reg_5283 = ap_const_lv1_1) and (icmp_ln621_19_reg_5279 = ap_const_lv1_1) and (icmp_ln621_18_reg_5275 = ap_const_lv1_1) and (icmp_ln621_17_reg_5271 = ap_const_lv1_1) and (icmp_ln621_16_reg_5267 = ap_const_lv1_1) and (icmp_ln621_15_reg_5263 = ap_const_lv1_1) and (icmp_ln621_14_reg_5259 = ap_const_lv1_1) and (icmp_ln621_13_reg_5255 = ap_const_lv1_1) and (icmp_ln621_12_reg_5251 = ap_const_lv1_1) and (icmp_ln621_11_reg_5247 = ap_const_lv1_1) and (icmp_ln621_10_reg_5243 = ap_const_lv1_1) and (icmp_ln621_9_reg_5239 = ap_const_lv1_1) and (icmp_ln621_8_reg_5235 = ap_const_lv1_1) and (icmp_ln621_7_reg_5231 = ap_const_lv1_1) and (icmp_ln621_6_reg_5227 = ap_const_lv1_1) and (icmp_ln621_5_reg_5223 = ap_const_lv1_1) and (icmp_ln621_4_reg_5219 
    = ap_const_lv1_1) and (icmp_ln621_3_reg_5215 = ap_const_lv1_1) and (icmp_ln621_2_reg_5211 = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15));
    end process;


    ap_condition_4271_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, icmp_ln621_4_reg_5219, icmp_ln621_5_reg_5223, icmp_ln621_6_reg_5227, icmp_ln621_7_reg_5231, icmp_ln621_8_reg_5235, icmp_ln621_9_reg_5239, icmp_ln621_10_reg_5243, icmp_ln621_11_reg_5247, icmp_ln621_12_reg_5251, icmp_ln621_13_reg_5255, icmp_ln621_14_reg_5259, icmp_ln621_15_reg_5263, icmp_ln621_16_reg_5267, icmp_ln621_17_reg_5271, icmp_ln621_18_reg_5275, icmp_ln621_19_reg_5279, icmp_ln621_20_reg_5283, icmp_ln621_21_reg_5287, icmp_ln621_22_reg_5291, icmp_ln621_23_reg_5295, icmp_ln621_24_reg_5299, icmp_ln621_25_reg_5303, icmp_ln621_26_reg_5328, icmp_ln621_27_fu_3034_p2, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001)
    begin
                ap_condition_4271 <= ((icmp_ln621_27_fu_3034_p2 = ap_const_lv1_0) and (icmp_ln621_26_reg_5328 = ap_const_lv1_1) and (icmp_ln621_25_reg_5303 = ap_const_lv1_1) and (icmp_ln621_24_reg_5299 = ap_const_lv1_1) and (icmp_ln621_23_reg_5295 = ap_const_lv1_1) and (icmp_ln621_22_reg_5291 = ap_const_lv1_1) and (icmp_ln621_21_reg_5287 = ap_const_lv1_1) and (icmp_ln621_20_reg_5283 = ap_const_lv1_1) and (icmp_ln621_19_reg_5279 = ap_const_lv1_1) and (icmp_ln621_18_reg_5275 = ap_const_lv1_1) and (icmp_ln621_17_reg_5271 = ap_const_lv1_1) and (icmp_ln621_16_reg_5267 = ap_const_lv1_1) and (icmp_ln621_15_reg_5263 = ap_const_lv1_1) and (icmp_ln621_14_reg_5259 = ap_const_lv1_1) and (icmp_ln621_13_reg_5255 = ap_const_lv1_1) and (icmp_ln621_12_reg_5251 = ap_const_lv1_1) and (icmp_ln621_11_reg_5247 = ap_const_lv1_1) and (icmp_ln621_10_reg_5243 = ap_const_lv1_1) and (icmp_ln621_9_reg_5239 = ap_const_lv1_1) and (icmp_ln621_8_reg_5235 = ap_const_lv1_1) and (icmp_ln621_7_reg_5231 = ap_const_lv1_1) and (icmp_ln621_6_reg_5227 = ap_const_lv1_1) and (icmp_ln621_5_reg_5223 
    = ap_const_lv1_1) and (icmp_ln621_4_reg_5219 = ap_const_lv1_1) and (icmp_ln621_3_reg_5215 = ap_const_lv1_1) and (icmp_ln621_2_reg_5211 = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16));
    end process;


    ap_condition_4302_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, icmp_ln621_4_reg_5219, icmp_ln621_5_reg_5223, icmp_ln621_6_reg_5227, icmp_ln621_7_reg_5231, icmp_ln621_8_reg_5235, icmp_ln621_9_reg_5239, icmp_ln621_10_reg_5243, icmp_ln621_11_reg_5247, icmp_ln621_12_reg_5251, icmp_ln621_13_reg_5255, icmp_ln621_14_reg_5259, icmp_ln621_15_reg_5263, icmp_ln621_16_reg_5267, icmp_ln621_17_reg_5271, icmp_ln621_18_reg_5275, icmp_ln621_19_reg_5279, icmp_ln621_20_reg_5283, icmp_ln621_21_reg_5287, icmp_ln621_22_reg_5291, icmp_ln621_23_reg_5295, icmp_ln621_24_reg_5299, icmp_ln621_25_reg_5303, icmp_ln621_26_reg_5328, icmp_ln621_27_reg_5362, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001, icmp_ln621_28_fu_3258_p2)
    begin
                ap_condition_4302 <= ((icmp_ln621_27_reg_5362 = ap_const_lv1_1) and (icmp_ln621_26_reg_5328 = ap_const_lv1_1) and (icmp_ln621_25_reg_5303 = ap_const_lv1_1) and (icmp_ln621_24_reg_5299 = ap_const_lv1_1) and (icmp_ln621_23_reg_5295 = ap_const_lv1_1) and (icmp_ln621_22_reg_5291 = ap_const_lv1_1) and (icmp_ln621_21_reg_5287 = ap_const_lv1_1) and (icmp_ln621_20_reg_5283 = ap_const_lv1_1) and (icmp_ln621_19_reg_5279 = ap_const_lv1_1) and (icmp_ln621_18_reg_5275 = ap_const_lv1_1) and (icmp_ln621_17_reg_5271 = ap_const_lv1_1) and (icmp_ln621_16_reg_5267 = ap_const_lv1_1) and (icmp_ln621_15_reg_5263 = ap_const_lv1_1) and (icmp_ln621_14_reg_5259 = ap_const_lv1_1) and (icmp_ln621_13_reg_5255 = ap_const_lv1_1) and (icmp_ln621_12_reg_5251 = ap_const_lv1_1) and (icmp_ln621_11_reg_5247 = ap_const_lv1_1) and (icmp_ln621_10_reg_5243 = ap_const_lv1_1) and (icmp_ln621_9_reg_5239 = ap_const_lv1_1) and (icmp_ln621_8_reg_5235 = ap_const_lv1_1) and (icmp_ln621_7_reg_5231 = ap_const_lv1_1) and (icmp_ln621_6_reg_5227 = ap_const_lv1_1) and (icmp_ln621_5_reg_5223 
    = ap_const_lv1_1) and (icmp_ln621_4_reg_5219 = ap_const_lv1_1) and (icmp_ln621_3_reg_5215 = ap_const_lv1_1) and (icmp_ln621_2_reg_5211 = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (icmp_ln621_28_fu_3258_p2 = ap_const_lv1_0));
    end process;


    ap_condition_4305_assign_proc : process(icmp_ln621_reg_5203, icmp_ln621_1_reg_5207, icmp_ln621_2_reg_5211, icmp_ln621_3_reg_5215, icmp_ln621_4_reg_5219, icmp_ln621_5_reg_5223, icmp_ln621_6_reg_5227, icmp_ln621_7_reg_5231, icmp_ln621_8_reg_5235, icmp_ln621_9_reg_5239, icmp_ln621_10_reg_5243, icmp_ln621_11_reg_5247, icmp_ln621_12_reg_5251, icmp_ln621_13_reg_5255, icmp_ln621_14_reg_5259, icmp_ln621_15_reg_5263, icmp_ln621_16_reg_5267, icmp_ln621_17_reg_5271, icmp_ln621_18_reg_5275, icmp_ln621_19_reg_5279, icmp_ln621_20_reg_5283, icmp_ln621_21_reg_5287, icmp_ln621_22_reg_5291, icmp_ln621_23_reg_5295, icmp_ln621_24_reg_5299, icmp_ln621_25_reg_5303, icmp_ln621_26_reg_5328, icmp_ln621_27_reg_5362, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001, icmp_ln621_28_fu_3258_p2)
    begin
                ap_condition_4305 <= ((icmp_ln621_27_reg_5362 = ap_const_lv1_1) and (icmp_ln621_26_reg_5328 = ap_const_lv1_1) and (icmp_ln621_25_reg_5303 = ap_const_lv1_1) and (icmp_ln621_24_reg_5299 = ap_const_lv1_1) and (icmp_ln621_23_reg_5295 = ap_const_lv1_1) and (icmp_ln621_22_reg_5291 = ap_const_lv1_1) and (icmp_ln621_21_reg_5287 = ap_const_lv1_1) and (icmp_ln621_20_reg_5283 = ap_const_lv1_1) and (icmp_ln621_19_reg_5279 = ap_const_lv1_1) and (icmp_ln621_18_reg_5275 = ap_const_lv1_1) and (icmp_ln621_17_reg_5271 = ap_const_lv1_1) and (icmp_ln621_16_reg_5267 = ap_const_lv1_1) and (icmp_ln621_15_reg_5263 = ap_const_lv1_1) and (icmp_ln621_14_reg_5259 = ap_const_lv1_1) and (icmp_ln621_13_reg_5255 = ap_const_lv1_1) and (icmp_ln621_12_reg_5251 = ap_const_lv1_1) and (icmp_ln621_11_reg_5247 = ap_const_lv1_1) and (icmp_ln621_10_reg_5243 = ap_const_lv1_1) and (icmp_ln621_9_reg_5239 = ap_const_lv1_1) and (icmp_ln621_8_reg_5235 = ap_const_lv1_1) and (icmp_ln621_7_reg_5231 = ap_const_lv1_1) and (icmp_ln621_6_reg_5227 = ap_const_lv1_1) and (icmp_ln621_5_reg_5223 
    = ap_const_lv1_1) and (icmp_ln621_4_reg_5219 = ap_const_lv1_1) and (icmp_ln621_3_reg_5215 = ap_const_lv1_1) and (icmp_ln621_2_reg_5211 = ap_const_lv1_1) and (icmp_ln621_1_reg_5207 = ap_const_lv1_1) and (icmp_ln621_reg_5203 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (icmp_ln621_28_fu_3258_p2 = ap_const_lv1_1));
    end process;


    ap_condition_4314_assign_proc : process(icmp_ln668_1_reg_5358, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17)
    begin
                ap_condition_4314 <= ((icmp_ln668_1_reg_5358 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage17) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17));
    end process;


    ap_condition_4318_assign_proc : process(icmp_ln668_1_reg_5358, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17)
    begin
                ap_condition_4318 <= ((icmp_ln668_1_reg_5358 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage17) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17));
    end process;


    ap_condition_4322_assign_proc : process(icmp_ln668_1_reg_5358, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18)
    begin
                ap_condition_4322 <= ((icmp_ln668_1_reg_5358 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage18) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18));
    end process;


    ap_condition_4326_assign_proc : process(icmp_ln668_1_reg_5358, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18)
    begin
                ap_condition_4326 <= ((icmp_ln668_1_reg_5358 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage18) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18));
    end process;


    ap_condition_4333_assign_proc : process(icmp_ln668_reg_5538, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22)
    begin
                ap_condition_4333 <= ((icmp_ln668_reg_5538 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22));
    end process;


    ap_condition_4337_assign_proc : process(icmp_ln668_reg_5538, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22)
    begin
                ap_condition_4337 <= ((icmp_ln668_reg_5538 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22));
    end process;


    ap_condition_4341_assign_proc : process(icmp_ln668_reg_5538, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23)
    begin
                ap_condition_4341 <= ((icmp_ln668_reg_5538 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23));
    end process;


    ap_condition_4345_assign_proc : process(icmp_ln668_reg_5538, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23)
    begin
                ap_condition_4345 <= ((icmp_ln668_reg_5538 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23));
    end process;


    ap_condition_768_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001)
    begin
                ap_condition_768 <= ((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_ril_2_phi_fu_847_p4_assign_proc : process(quant26bt_pos_q0, quant26bt_neg_q0, tmp_3_reg_5163, ap_phi_reg_pp0_iter0_ril_2_reg_844)
    begin
        if ((tmp_3_reg_5163 = ap_const_lv1_1)) then 
            ap_phi_mux_ril_2_phi_fu_847_p4 <= quant26bt_neg_q0;
        elsif ((tmp_3_reg_5163 = ap_const_lv1_0)) then 
            ap_phi_mux_ril_2_phi_fu_847_p4 <= quant26bt_pos_q0;
        else 
            ap_phi_mux_ril_2_phi_fu_847_p4 <= ap_phi_reg_pp0_iter0_ril_2_reg_844;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_ril_2_reg_844 <= "XXXXXX";

    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage24_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_idle_pp0_0to0 = ap_const_logic_1) and (ap_start = ap_const_logic_0))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= (add_ln364_reg_5312 & ril_2_reg_844);
    apl1_1_fu_4498_p3 <= 
        zext_ln733_fu_4487_p1 when (icmp_ln745_fu_4493_p2(0) = '1') else 
        apl1_reg_5644;
    apl1_2_fu_4509_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(zext_ln733_1_fu_4490_p1));
    apl1_3_fu_4525_p3 <= 
        apl1_2_fu_4509_p2 when (icmp_ln747_fu_4519_p2(0) = '1') else 
        trunc_ln733_fu_4505_p1;
    apl1_4_fu_3639_p2 <= std_logic_vector(unsigned(select_ln735_1_fu_3632_p3) + unsigned(sext_ln735_1_fu_3628_p1));
    apl1_5_fu_3731_p3 <= 
        zext_ln733_2_fu_3720_p1 when (icmp_ln745_1_fu_3726_p2(0) = '1') else 
        apl1_4_reg_5496;
    apl1_6_fu_3742_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(zext_ln733_3_fu_3723_p1));
    apl1_7_fu_3758_p3 <= 
        apl1_6_fu_3742_p2 when (icmp_ln747_1_fu_3752_p2(0) = '1') else 
        trunc_ln733_1_fu_3738_p1;
    apl1_fu_4475_p2 <= std_logic_vector(unsigned(select_ln735_fu_4468_p3) + unsigned(sext_ln735_fu_4464_p1));
    apl2_1_fu_4407_p3 <= 
        ap_const_lv17_3000 when (icmp_ln719_reg_5639(0) = '1') else 
        apl2_reg_5634;
    apl2_2_fu_4423_p3 <= 
        ap_const_lv15_5000 when (icmp_ln721_fu_4417_p2(0) = '1') else 
        trunc_ln703_fu_4413_p1;
    apl2_3_fu_3534_p2 <= std_logic_vector(unsigned(add_ln716_2_fu_3528_p2) + unsigned(sext_ln708_3_fu_3486_p1));
    apl2_4_fu_3571_p3 <= 
        ap_const_lv17_3000 when (icmp_ln719_1_reg_5481(0) = '1') else 
        apl2_3_reg_5476;
    apl2_5_fu_3587_p3 <= 
        ap_const_lv15_5000 when (icmp_ln721_1_fu_3581_p2(0) = '1') else 
        trunc_ln703_1_fu_3577_p1;
    apl2_fu_4392_p2 <= std_logic_vector(unsigned(add_ln716_fu_4386_p2) + unsigned(sext_ln708_2_fu_4344_p1));
    decis_10_fu_2343_p4 <= mul_ln620_10_fu_2337_p2(27 downto 15);
    decis_11_fu_2369_p4 <= mul_ln620_11_fu_2363_p2(27 downto 15);
    decis_12_fu_2395_p4 <= mul_ln620_12_fu_2389_p2(27 downto 15);
    decis_13_fu_2421_p4 <= mul_ln620_13_fu_2415_p2(27 downto 15);
    decis_14_fu_2447_p4 <= mul_ln620_14_fu_2441_p2(27 downto 15);
    decis_15_fu_2473_p4 <= mul_ln620_15_fu_2467_p2(27 downto 15);
    decis_16_fu_2499_p4 <= mul_ln620_16_fu_2493_p2(27 downto 15);
    decis_17_fu_2547_p4 <= sub_ln620_fu_2541_p2(28 downto 15);
    decis_18_fu_2573_p4 <= mul_ln620_17_fu_2567_p2(28 downto 15);
    decis_19_fu_2599_p4 <= mul_ln620_18_fu_2593_p2(28 downto 15);
    decis_1_fu_2083_p4 <= add_ln620_fu_2077_p2(24 downto 15);
    decis_20_fu_2625_p4 <= mul_ln620_19_fu_2619_p2(28 downto 15);
    decis_21_fu_2651_p4 <= mul_ln620_20_fu_2645_p2(28 downto 15);
    decis_22_fu_2677_p4 <= mul_ln620_21_fu_2671_p2(28 downto 15);
    decis_23_fu_2703_p4 <= mul_ln620_22_fu_2697_p2(28 downto 15);
    decis_24_fu_2729_p4 <= mul_ln620_23_fu_2723_p2(28 downto 15);
    decis_28_fu_3280_p4 <= sub_ln620_1_fu_3274_p2(30 downto 15);
    decis_29_fu_2772_p4 <= mul_ln359_reg_4606(24 downto 12);
    decis_2_fu_2109_p4 <= mul_ln620_1_fu_2103_p2(24 downto 15);
    decis_3_fu_2135_p4 <= mul_ln620_2_fu_2129_p2(25 downto 15);
    decis_4_fu_2161_p4 <= mul_ln620_3_fu_2155_p2(25 downto 15);
    decis_5_fu_2187_p4 <= mul_ln620_4_fu_2181_p2(25 downto 15);
    decis_6_fu_2213_p4 <= mul_ln620_5_fu_2207_p2(26 downto 15);
    decis_7_fu_2239_p4 <= mul_ln620_6_fu_2233_p2(26 downto 15);
    decis_8_fu_2265_p4 <= mul_ln620_7_fu_2259_p2(26 downto 15);
    decis_9_fu_2291_p4 <= mul_ln620_8_fu_2285_p2(26 downto 15);
    decis_s_fu_2317_p4 <= mul_ln620_9_fu_2311_p2(26 downto 15);

    delay_bph_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, icmp_ln668_1_reg_5358, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage18, ap_block_pp0_stage19, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage16, ap_block_pp0_stage17)
    begin
        if ((((icmp_ln668_1_reg_5358 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage17) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((icmp_ln668_1_reg_5358 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage18) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)))) then 
            delay_bph_address0 <= ap_const_lv3_3;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((icmp_ln668_1_reg_5358 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage17) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)))) then 
            delay_bph_address0 <= ap_const_lv3_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            delay_bph_address0 <= ap_const_lv3_5;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((icmp_ln668_1_reg_5358 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage18) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)))) then 
            delay_bph_address0 <= ap_const_lv3_4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            delay_bph_address0 <= ap_const_lv3_2;
        else 
            delay_bph_address0 <= "XXX";
        end if; 
    end process;


    delay_bph_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, icmp_ln668_1_reg_5358, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage18, ap_block_pp0_stage19, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage16, ap_block_pp0_stage17)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            delay_bph_address1 <= ap_const_lv3_5;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage18) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((icmp_ln668_1_reg_5358 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage17) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)))) then 
            delay_bph_address1 <= ap_const_lv3_2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            delay_bph_address1 <= ap_const_lv3_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            delay_bph_address1 <= ap_const_lv3_3;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln668_1_reg_5358 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage17) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)))) then 
            delay_bph_address1 <= ap_const_lv3_0;
        else 
            delay_bph_address1 <= "XXX";
        end if; 
    end process;


    delay_bph_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage0_11001, icmp_ln668_1_reg_5358, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((icmp_ln668_1_reg_5358 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((icmp_ln668_1_reg_5358 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) 
    and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((icmp_ln668_1_reg_5358 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((icmp_ln668_1_reg_5358 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)))) then 
            delay_bph_ce0 <= ap_const_logic_1;
        else 
            delay_bph_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bph_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage0_11001, icmp_ln668_1_reg_5358, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((icmp_ln668_1_reg_5358 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0 
    = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((icmp_ln668_1_reg_5358 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)))) then 
            delay_bph_ce1 <= ap_const_logic_1;
        else 
            delay_bph_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bph_d0_assign_proc : process(ap_enable_reg_pp0_iter0, wd3_11_reg_4820, wd3_12_reg_4826, ap_CS_fsm_pp0_stage16, add_ln684_7_reg_5376, add_ln684_9_reg_5440, add_ln684_10_reg_5471, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_block_pp0_stage16, sub_ln672_7_fu_3111_p2, ap_condition_4314, ap_condition_4318, ap_condition_4322, ap_condition_4326)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
                delay_bph_d0 <= add_ln684_10_reg_5471;
            elsif ((ap_const_boolean_1 = ap_condition_4326)) then 
                delay_bph_d0 <= wd3_12_reg_4826;
            elsif ((ap_const_boolean_1 = ap_condition_4322)) then 
                delay_bph_d0 <= add_ln684_9_reg_5440;
            elsif ((ap_const_boolean_1 = ap_condition_4318)) then 
                delay_bph_d0 <= wd3_11_reg_4820;
            elsif ((ap_const_boolean_1 = ap_condition_4314)) then 
                delay_bph_d0 <= add_ln684_7_reg_5376;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then 
                delay_bph_d0 <= sub_ln672_7_fu_3111_p2(39 downto 8);
            else 
                delay_bph_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            delay_bph_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    delay_bph_d1_assign_proc : process(ap_enable_reg_pp0_iter0, storemerge29_reg_833, wd3_9_reg_4701, wd3_10_reg_4707, ap_CS_fsm_pp0_stage16, add_ln684_6_reg_5371, add_ln684_8_reg_5435, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage18, ap_block_pp0_stage19, ap_block_pp0_stage16, ap_condition_4314, ap_condition_4318)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
                delay_bph_d1 <= storemerge29_reg_833;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage18) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18))) then 
                delay_bph_d1 <= add_ln684_8_reg_5435;
            elsif ((ap_const_boolean_1 = ap_condition_4318)) then 
                delay_bph_d1 <= wd3_10_reg_4707;
            elsif ((ap_const_boolean_1 = ap_condition_4314)) then 
                delay_bph_d1 <= add_ln684_6_reg_5371;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then 
                delay_bph_d1 <= wd3_9_reg_4701;
            else 
                delay_bph_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            delay_bph_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    delay_bph_we0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln668_1_reg_5358, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001)
    begin
        if ((((icmp_ln668_1_reg_5358 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((icmp_ln668_1_reg_5358 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((icmp_ln668_1_reg_5358 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((icmp_ln668_1_reg_5358 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((icmp_ln668_1_reg_5358 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((icmp_ln668_1_reg_5358 = ap_const_lv1_0) and 
    (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)))) then 
            delay_bph_we0 <= ap_const_logic_1;
        else 
            delay_bph_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bph_we1_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln668_1_reg_5358, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((icmp_ln668_1_reg_5358 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((icmp_ln668_1_reg_5358 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((icmp_ln668_1_reg_5358 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((icmp_ln668_1_reg_5358 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)))) then 
            delay_bph_we1 <= ap_const_logic_1;
        else 
            delay_bph_we1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bpl_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage21, icmp_ln668_reg_5538, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage21, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage22, ap_block_pp0_stage23, ap_block_pp0_stage24)
    begin
        if ((((icmp_ln668_reg_5538 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((icmp_ln668_reg_5538 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)))) then 
            delay_bpl_address0 <= ap_const_lv3_3;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((icmp_ln668_reg_5538 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)))) then 
            delay_bpl_address0 <= ap_const_lv3_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            delay_bpl_address0 <= ap_const_lv3_5;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage24) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((icmp_ln668_reg_5538 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)))) then 
            delay_bpl_address0 <= ap_const_lv3_4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            delay_bpl_address0 <= ap_const_lv3_2;
        else 
            delay_bpl_address0 <= "XXX";
        end if; 
    end process;


    delay_bpl_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage21, icmp_ln668_reg_5538, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage21, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage22, ap_block_pp0_stage23, ap_block_pp0_stage24)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage24) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24))) then 
            delay_bpl_address1 <= ap_const_lv3_5;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((icmp_ln668_reg_5538 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)))) then 
            delay_bpl_address1 <= ap_const_lv3_2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            delay_bpl_address1 <= ap_const_lv3_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            delay_bpl_address1 <= ap_const_lv3_3;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((icmp_ln668_reg_5538 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)))) then 
            delay_bpl_address1 <= ap_const_lv3_0;
        else 
            delay_bpl_address1 <= "XXX";
        end if; 
    end process;


    delay_bpl_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21_11001, icmp_ln668_reg_5538, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22_11001, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23_11001, ap_block_pp0_stage24_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((icmp_ln668_reg_5538 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((icmp_ln668_reg_5538 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001) 
    and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((icmp_ln668_reg_5538 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((icmp_ln668_reg_5538 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)))) then 
            delay_bpl_ce0 <= ap_const_logic_1;
        else 
            delay_bpl_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bpl_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21_11001, icmp_ln668_reg_5538, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22_11001, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23_11001, ap_block_pp0_stage24_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((icmp_ln668_reg_5538 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0 = 
    ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((icmp_ln668_reg_5538 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)))) then 
            delay_bpl_ce1 <= ap_const_logic_1;
        else 
            delay_bpl_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bpl_d0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage21, add_ln684_3_reg_5592, add_ln684_4_reg_5618, ap_block_pp0_stage21, add_ln684_1_fu_4127_p2, ap_block_pp0_stage24, sub_ln672_1_fu_3910_p2, sub_ln672_3_fu_4043_p2, sub_ln672_4_fu_4252_p2, ap_condition_4333, ap_condition_4337, ap_condition_4341, ap_condition_4345)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage24) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24))) then 
                delay_bpl_d0 <= add_ln684_4_reg_5618;
            elsif ((ap_const_boolean_1 = ap_condition_4345)) then 
                delay_bpl_d0 <= sub_ln672_4_fu_4252_p2(39 downto 8);
            elsif ((ap_const_boolean_1 = ap_condition_4341)) then 
                delay_bpl_d0 <= add_ln684_3_reg_5592;
            elsif ((ap_const_boolean_1 = ap_condition_4337)) then 
                delay_bpl_d0 <= sub_ln672_3_fu_4043_p2(39 downto 8);
            elsif ((ap_const_boolean_1 = ap_condition_4333)) then 
                delay_bpl_d0 <= add_ln684_1_fu_4127_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21))) then 
                delay_bpl_d0 <= sub_ln672_1_fu_3910_p2(39 downto 8);
            else 
                delay_bpl_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            delay_bpl_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    delay_bpl_d1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage24, storemerge_reg_856, ap_CS_fsm_pp0_stage21, add_ln684_2_reg_5587, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage21, add_ln684_fu_4102_p2, ap_block_pp0_stage23, ap_block_pp0_stage24, sub_ln672_fu_3886_p2, sub_ln672_2_fu_4019_p2, ap_condition_4333, ap_condition_4337)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage24) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24))) then 
                delay_bpl_d1 <= storemerge_reg_856;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23))) then 
                delay_bpl_d1 <= add_ln684_2_reg_5587;
            elsif ((ap_const_boolean_1 = ap_condition_4337)) then 
                delay_bpl_d1 <= sub_ln672_2_fu_4019_p2(39 downto 8);
            elsif ((ap_const_boolean_1 = ap_condition_4333)) then 
                delay_bpl_d1 <= add_ln684_fu_4102_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21))) then 
                delay_bpl_d1 <= sub_ln672_fu_3886_p2(39 downto 8);
            else 
                delay_bpl_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            delay_bpl_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    delay_bpl_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21_11001, icmp_ln668_fu_3874_p2, icmp_ln668_reg_5538, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22_11001, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23_11001, ap_block_pp0_stage24_11001)
    begin
        if ((((icmp_ln668_fu_3874_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((icmp_ln668_reg_5538 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((icmp_ln668_reg_5538 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((icmp_ln668_reg_5538 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((icmp_ln668_reg_5538 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((icmp_ln668_reg_5538 = ap_const_lv1_0) and (ap_const_boolean_0 
    = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)))) then 
            delay_bpl_we0 <= ap_const_logic_1;
        else 
            delay_bpl_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bpl_we1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21_11001, icmp_ln668_fu_3874_p2, icmp_ln668_reg_5538, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22_11001, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23_11001, ap_block_pp0_stage24_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((icmp_ln668_fu_3874_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((icmp_ln668_reg_5538 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((icmp_ln668_reg_5538 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((icmp_ln668_reg_5538 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)))) then 
            delay_bpl_we1 <= ap_const_logic_1;
        else 
            delay_bpl_we1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                delay_dhx_address0 <= ap_const_lv3_4;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                delay_dhx_address0 <= ap_const_lv3_5;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                delay_dhx_address0 <= ap_const_lv3_3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                delay_dhx_address0 <= ap_const_lv3_2;
            else 
                delay_dhx_address0 <= "XXX";
            end if;
        else 
            delay_dhx_address0 <= "XXX";
        end if; 
    end process;


    delay_dhx_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            delay_dhx_address1 <= ap_const_lv3_2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            delay_dhx_address1 <= ap_const_lv3_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            delay_dhx_address1 <= ap_const_lv3_4;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)))) then 
            delay_dhx_address1 <= ap_const_lv3_0;
        else 
            delay_dhx_address1 <= "XXX";
        end if; 
    end process;


    delay_dhx_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            delay_dhx_ce0 <= ap_const_logic_1;
        else 
            delay_dhx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            delay_dhx_ce1 <= ap_const_logic_1;
        else 
            delay_dhx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_d0_assign_proc : process(ap_enable_reg_pp0_iter0, delay_dhx_q0, delay_dhx_q1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, delay_dhx_load_3_reg_4789, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                delay_dhx_d0 <= delay_dhx_load_3_reg_4789;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                delay_dhx_d0 <= delay_dhx_q1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                delay_dhx_d0 <= delay_dhx_q0;
            else 
                delay_dhx_d0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            delay_dhx_d0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    delay_dhx_d1_assign_proc : process(ap_enable_reg_pp0_iter0, delay_dhx_q1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, delay_dhx_load_reg_4675, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_block_pp0_stage2, ap_block_pp0_stage3, mul_ln364_fu_2917_p2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
                delay_dhx_d1 <= mul_ln364_fu_2917_p2(28 downto 15);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                delay_dhx_d1 <= delay_dhx_q1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                delay_dhx_d1 <= delay_dhx_load_reg_4675;
            else 
                delay_dhx_d1 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            delay_dhx_d1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    delay_dhx_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            delay_dhx_we0 <= ap_const_logic_1;
        else 
            delay_dhx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_we1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            delay_dhx_we1 <= ap_const_logic_1;
        else 
            delay_dhx_we1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                delay_dltx_address0 <= ap_const_lv3_4;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                delay_dltx_address0 <= ap_const_lv3_5;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                delay_dltx_address0 <= ap_const_lv3_3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                delay_dltx_address0 <= ap_const_lv3_2;
            else 
                delay_dltx_address0 <= "XXX";
            end if;
        else 
            delay_dltx_address0 <= "XXX";
        end if; 
    end process;


    delay_dltx_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            delay_dltx_address1 <= ap_const_lv3_2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            delay_dltx_address1 <= ap_const_lv3_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            delay_dltx_address1 <= ap_const_lv3_4;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)))) then 
            delay_dltx_address1 <= ap_const_lv3_0;
        else 
            delay_dltx_address1 <= "XXX";
        end if; 
    end process;


    delay_dltx_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            delay_dltx_ce0 <= ap_const_logic_1;
        else 
            delay_dltx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            delay_dltx_ce1 <= ap_const_logic_1;
        else 
            delay_dltx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_d0_assign_proc : process(ap_enable_reg_pp0_iter0, delay_dltx_q0, delay_dltx_q1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, delay_dltx_load_3_reg_4734, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                delay_dltx_d0 <= delay_dltx_load_3_reg_4734;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                delay_dltx_d0 <= delay_dltx_q1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                delay_dltx_d0 <= delay_dltx_q0;
            else 
                delay_dltx_d0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            delay_dltx_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    delay_dltx_d1_assign_proc : process(ap_enable_reg_pp0_iter0, delay_dltx_q1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, delay_dltx_load_reg_4622, trunc_ln6_reg_5508, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21))) then 
                delay_dltx_d1 <= trunc_ln6_reg_5508;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                delay_dltx_d1 <= delay_dltx_q1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                delay_dltx_d1 <= delay_dltx_load_reg_4622;
            else 
                delay_dltx_d1 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            delay_dltx_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    delay_dltx_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            delay_dltx_we0 <= ap_const_logic_1;
        else 
            delay_dltx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_we1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            delay_dltx_we1 <= ap_const_logic_1;
        else 
            delay_dltx_we1 <= ap_const_logic_0;
        end if; 
    end process;


    deth_o_assign_proc : process(ap_enable_reg_pp0_iter0, deth_i, ap_CS_fsm_pp0_stage16, shl_ln657_1_fu_3090_p3, ap_block_pp0_stage16)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then 
            deth_o <= shl_ln657_1_fu_3090_p3;
        else 
            deth_o <= deth_i;
        end if; 
    end process;


    deth_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then 
            deth_o_ap_vld <= ap_const_logic_1;
        else 
            deth_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    detl_o_assign_proc : process(ap_enable_reg_pp0_iter0, detl_i, ap_CS_fsm_pp0_stage22, shl_ln6_fu_3998_p3, ap_block_pp0_stage22)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22))) then 
            detl_o <= shl_ln6_fu_3998_p3;
        else 
            detl_o <= detl_i;
        end if; 
    end process;


    detl_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22))) then 
            detl_o_ap_vld <= ap_const_logic_1;
        else 
            detl_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1036_p2 <= std_logic_vector(unsigned(reg_988) + unsigned(reg_984));

    grp_fu_867_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, sext_ln587_7_fu_1203_p1, sext_ln589_31_fu_1359_p1, sext_ln589_23_fu_1475_p1, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_867_p0 <= sext_ln589_23_fu_1475_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_867_p0 <= sext_ln589_31_fu_1359_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_867_p0 <= sext_ln587_7_fu_1203_p1(14 - 1 downto 0);
            else 
                grp_fu_867_p0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_867_p0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_867_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, sext_ln587_5_fu_1198_p1, sext_ln589_29_fu_1354_p1, sext_ln589_21_fu_1470_p1, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_867_p1 <= sext_ln589_21_fu_1470_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_867_p1 <= sext_ln589_29_fu_1354_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_867_p1 <= sext_ln587_5_fu_1198_p1(32 - 1 downto 0);
            else 
                grp_fu_867_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_867_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_871_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, sext_ln589_27_fu_1217_p1, sext_ln589_35_fu_1373_p1, sext_ln589_39_fu_1485_p1, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_871_p0 <= sext_ln589_39_fu_1485_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_871_p0 <= sext_ln589_35_fu_1373_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_871_p0 <= sext_ln589_27_fu_1217_p1(14 - 1 downto 0);
            else 
                grp_fu_871_p0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_871_p0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_871_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, sext_ln589_25_fu_1212_p1, sext_ln589_33_fu_1368_p1, sext_ln589_37_fu_1480_p1, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_871_p1 <= sext_ln589_37_fu_1480_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_871_p1 <= sext_ln589_33_fu_1368_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_871_p1 <= sext_ln589_25_fu_1212_p1(32 - 1 downto 0);
            else 
                grp_fu_871_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_871_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_875_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, sext_ln604_3_fu_1123_p1, sext_ln604_1_fu_1189_p1, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_875_p0 <= sext_ln604_1_fu_1189_p1(15 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_875_p0 <= sext_ln604_3_fu_1123_p1(15 - 1 downto 0);
            else 
                grp_fu_875_p0 <= "XXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_875_p0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_875_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, sext_ln600_5_fu_1118_p1, sext_ln600_2_fu_1184_p1, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_875_p1 <= sext_ln600_2_fu_1184_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_875_p1 <= sext_ln600_5_fu_1118_p1(32 - 1 downto 0);
            else 
                grp_fu_875_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_875_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_879_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, sext_ln587_3_fu_1153_p1, sext_ln589_11_fu_1303_p1, sext_ln589_3_fu_1449_p1, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_879_p0 <= sext_ln589_3_fu_1449_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_879_p0 <= sext_ln589_11_fu_1303_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_879_p0 <= sext_ln587_3_fu_1153_p1(16 - 1 downto 0);
            else 
                grp_fu_879_p0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_879_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_879_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, sext_ln587_1_fu_1148_p1, sext_ln589_9_fu_1298_p1, sext_ln589_1_fu_1444_p1, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_879_p1 <= sext_ln589_1_fu_1444_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_879_p1 <= sext_ln589_9_fu_1298_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_879_p1 <= sext_ln587_1_fu_1148_p1(32 - 1 downto 0);
            else 
                grp_fu_879_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_879_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_883_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, sext_ln589_7_fu_1163_p1, sext_ln589_15_fu_1313_p1, sext_ln589_19_fu_1459_p1, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_883_p0 <= sext_ln589_19_fu_1459_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_883_p0 <= sext_ln589_15_fu_1313_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_883_p0 <= sext_ln589_7_fu_1163_p1(16 - 1 downto 0);
            else 
                grp_fu_883_p0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_883_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_883_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, sext_ln589_5_fu_1158_p1, sext_ln589_13_fu_1308_p1, sext_ln589_17_fu_1454_p1, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_883_p1 <= sext_ln589_17_fu_1454_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_883_p1 <= sext_ln589_13_fu_1308_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_883_p1 <= sext_ln589_5_fu_1158_p1(32 - 1 downto 0);
            else 
                grp_fu_883_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_883_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_887_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, sext_ln600_4_fu_1105_p1, sext_ln600_1_fu_1339_p1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_887_p0 <= sext_ln600_1_fu_1339_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_887_p0 <= sext_ln600_4_fu_1105_p1(16 - 1 downto 0);
            else 
                grp_fu_887_p0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_887_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_887_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, sext_ln600_3_fu_1100_p1, sext_ln600_fu_1334_p1, ap_block_pp0_stage2, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_887_p1 <= sext_ln600_fu_1334_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_887_p1 <= sext_ln600_3_fu_1100_p1(32 - 1 downto 0);
            else 
                grp_fu_887_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_887_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_891_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage16, sext_ln705_3_fu_3231_p1, ap_CS_fsm_pp0_stage22, sext_ln705_1_fu_4221_p1, ap_block_pp0_stage22, ap_block_pp0_stage16)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22))) then 
                grp_fu_891_p0 <= sext_ln705_1_fu_4221_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then 
                grp_fu_891_p0 <= sext_ln705_3_fu_3231_p1(32 - 1 downto 0);
            else 
                grp_fu_891_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_891_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_891_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage16, sext_ln705_2_fu_3226_p1, ap_CS_fsm_pp0_stage22, sext_ln705_fu_4216_p1, ap_block_pp0_stage22, ap_block_pp0_stage16)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22))) then 
                grp_fu_891_p1 <= sext_ln705_fu_4216_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then 
                grp_fu_891_p1 <= sext_ln705_2_fu_3226_p1(32 - 1 downto 0);
            else 
                grp_fu_891_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_891_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_895_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage16, sext_ln708_1_fu_3236_p1, ap_CS_fsm_pp0_stage22, sext_ln708_fu_4226_p1, ap_block_pp0_stage22, ap_block_pp0_stage16)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22))) then 
                grp_fu_895_p0 <= sext_ln708_fu_4226_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then 
                grp_fu_895_p0 <= sext_ln708_1_fu_3236_p1(32 - 1 downto 0);
            else 
                grp_fu_895_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_895_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_895_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage16, sext_ln705_2_fu_3226_p1, ap_CS_fsm_pp0_stage22, sext_ln705_fu_4216_p1, ap_block_pp0_stage22, ap_block_pp0_stage16)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22))) then 
                grp_fu_895_p1 <= sext_ln705_fu_4216_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then 
                grp_fu_895_p1 <= sext_ln705_2_fu_3226_p1(32 - 1 downto 0);
            else 
                grp_fu_895_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_895_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_899_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage3, sext_ln267_1_fu_1426_p1, sext_ln266_13_fu_1642_p1, ap_block_pp0_stage3, ap_block_pp0_stage9)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                grp_fu_899_p0 <= sext_ln266_13_fu_1642_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_899_p0 <= sext_ln267_1_fu_1426_p1(32 - 1 downto 0);
            else 
                grp_fu_899_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_899_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_899_p1 <= ap_const_lv41_D4(9 - 1 downto 0);

    grp_fu_904_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage8, sext_ln267_5_fu_1496_p1, sext_ln266_10_fu_1632_p1, ap_block_pp0_stage4, ap_block_pp0_stage8)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                grp_fu_904_p0 <= sext_ln266_10_fu_1632_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_904_p0 <= sext_ln267_5_fu_1496_p1(32 - 1 downto 0);
            else 
                grp_fu_904_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_904_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_904_p1 <= ap_const_lv44_5A8(12 - 1 downto 0);

    grp_fu_909_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, sext_ln266_6_fu_1511_p1, ap_CS_fsm_pp0_stage7, sext_ln267_8_fu_1617_p1, ap_block_pp0_stage5, ap_block_pp0_stage7)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                grp_fu_909_p0 <= sext_ln267_8_fu_1617_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_909_p0 <= sext_ln266_6_fu_1511_p1(32 - 1 downto 0);
            else 
                grp_fu_909_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_909_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_909_p1 <= ap_const_lv45_EDC(13 - 1 downto 0);
    grp_fu_914_p1 <= ap_const_lv47_3C90(15 - 1 downto 0);
    grp_fu_919_p1 <= ap_const_lv47_3C90(15 - 1 downto 0);

    grp_fu_924_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage4, sext_ln267_6_fu_1501_p1, sext_ln267_12_fu_1637_p1, ap_block_pp0_stage4, ap_block_pp0_stage9)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                grp_fu_924_p0 <= sext_ln267_12_fu_1637_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_924_p0 <= sext_ln267_6_fu_1501_p1(32 - 1 downto 0);
            else 
                grp_fu_924_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_924_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_924_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_block_pp0_stage9)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                grp_fu_924_p1 <= ap_const_lv42_3FFFFFFFD90(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_924_p1 <= ap_const_lv42_3FFFFFFFCB8(11 - 1 downto 0);
            else 
                grp_fu_924_p1 <= "XXXXXXXXXXX";
            end if;
        else 
            grp_fu_924_p1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_930_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage8, sext_ln267_3_fu_1431_p1, sext_ln267_10_fu_1627_p1, ap_block_pp0_stage3, ap_block_pp0_stage8)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                grp_fu_930_p0 <= sext_ln267_10_fu_1627_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_930_p0 <= sext_ln267_3_fu_1431_p1(32 - 1 downto 0);
            else 
                grp_fu_930_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_930_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_930_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage3, ap_block_pp0_stage8)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                grp_fu_930_p1 <= ap_const_lv43_7FFFFFFFCB8(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_930_p1 <= ap_const_lv43_7FFFFFFFD90(11 - 1 downto 0);
            else 
                grp_fu_930_p1 <= "XXXXXXXXXXX";
            end if;
        else 
            grp_fu_930_p1 <= "XXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_936_p1 <= ap_const_lv44_FFFFFFFF36C(13 - 1 downto 0);
    grp_fu_941_p1 <= ap_const_lv45_1FFFFFFFF36C(13 - 1 downto 0);
    grp_fu_946_p1 <= ap_const_lv40_FFFFFFFFD4(7 - 1 downto 0);
    grp_fu_951_p1 <= ap_const_lv40_FFFFFFFFD4(7 - 1 downto 0);
    icmp_ln360_fu_2790_p2 <= "1" when (signed(m_3_fu_2785_p3) > signed(zext_ln359_2_fu_2781_p1)) else "0";
    icmp_ln621_10_fu_2331_p2 <= "1" when (signed(zext_ln613_10_fu_2327_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln621_11_fu_2357_p2 <= "1" when (signed(zext_ln613_11_fu_2353_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln621_12_fu_2383_p2 <= "1" when (signed(zext_ln613_12_fu_2379_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln621_13_fu_2409_p2 <= "1" when (signed(zext_ln613_13_fu_2405_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln621_14_fu_2435_p2 <= "1" when (signed(zext_ln613_14_fu_2431_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln621_15_fu_2461_p2 <= "1" when (signed(zext_ln613_15_fu_2457_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln621_16_fu_2487_p2 <= "1" when (signed(zext_ln613_16_fu_2483_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln621_17_fu_2513_p2 <= "1" when (signed(zext_ln613_17_fu_2509_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln621_18_fu_2561_p2 <= "1" when (signed(sext_ln613_fu_2557_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln621_19_fu_2587_p2 <= "1" when (signed(zext_ln613_18_fu_2583_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln621_1_fu_2097_p2 <= "1" when (signed(zext_ln613_1_fu_2093_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln621_20_fu_2613_p2 <= "1" when (signed(zext_ln613_19_fu_2609_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln621_21_fu_2639_p2 <= "1" when (signed(zext_ln613_20_fu_2635_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln621_22_fu_2665_p2 <= "1" when (signed(zext_ln613_21_fu_2661_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln621_23_fu_2691_p2 <= "1" when (signed(zext_ln613_22_fu_2687_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln621_24_fu_2717_p2 <= "1" when (signed(zext_ln613_23_fu_2713_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln621_25_fu_2743_p2 <= "1" when (signed(zext_ln613_24_fu_2739_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln621_26_fu_2891_p2 <= "1" when (signed(zext_ln613_25_fu_2888_p1) < signed(m_4_reg_5189)) else "0";
    icmp_ln621_27_fu_3034_p2 <= "1" when (signed(zext_ln613_26_fu_3031_p1) < signed(m_4_reg_5189)) else "0";
    icmp_ln621_28_fu_3258_p2 <= "1" when (signed(zext_ln613_27_fu_3255_p1) < signed(m_4_reg_5189)) else "0";
    icmp_ln621_29_fu_3294_p2 <= "1" when (signed(sext_ln613_1_fu_3290_p1) < signed(m_4_reg_5189)) else "0";
    icmp_ln621_2_fu_2123_p2 <= "1" when (signed(zext_ln613_2_fu_2119_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln621_3_fu_2149_p2 <= "1" when (signed(zext_ln613_3_fu_2145_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln621_4_fu_2175_p2 <= "1" when (signed(zext_ln613_4_fu_2171_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln621_5_fu_2201_p2 <= "1" when (signed(zext_ln613_5_fu_2197_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln621_6_fu_2227_p2 <= "1" when (signed(zext_ln613_6_fu_2223_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln621_7_fu_2253_p2 <= "1" when (signed(zext_ln613_7_fu_2249_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln621_8_fu_2279_p2 <= "1" when (signed(zext_ln613_8_fu_2275_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln621_9_fu_2305_p2 <= "1" when (signed(zext_ln613_9_fu_2301_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln621_fu_2049_p2 <= "1" when (signed(zext_ln613_fu_2046_p1) < signed(m_4_fu_2022_p3)) else "0";
    icmp_ln643_fu_3824_p2 <= "1" when (unsigned(select_ln641_fu_3813_p3) > unsigned(ap_const_lv17_4800)) else "0";
    icmp_ln668_1_fu_3014_p2 <= "1" when (trunc_ln8_fu_2923_p4 = ap_const_lv14_0) else "0";
    icmp_ln668_fu_3874_p2 <= "1" when (trunc_ln6_reg_5508 = ap_const_lv16_0) else "0";
    icmp_ln719_1_fu_3540_p2 <= "1" when (signed(apl2_3_fu_3534_p2) > signed(ap_const_lv17_3000)) else "0";
    icmp_ln719_fu_4398_p2 <= "1" when (signed(apl2_fu_4392_p2) > signed(ap_const_lv17_3000)) else "0";
    icmp_ln721_1_fu_3581_p2 <= "1" when (signed(apl2_4_fu_3571_p3) < signed(ap_const_lv17_1D000)) else "0";
    icmp_ln721_fu_4417_p2 <= "1" when (signed(apl2_1_fu_4407_p3) < signed(ap_const_lv17_1D000)) else "0";
    icmp_ln745_1_fu_3726_p2 <= "1" when (signed(apl1_4_reg_5496) > signed(zext_ln733_2_fu_3720_p1)) else "0";
    icmp_ln745_fu_4493_p2 <= "1" when (signed(apl1_reg_5644) > signed(zext_ln733_fu_4487_p1)) else "0";
    icmp_ln747_1_fu_3752_p2 <= "1" when (signed(apl1_5_fu_3731_p3) < signed(sext_ln747_1_fu_3748_p1)) else "0";
    icmp_ln747_fu_4519_p2 <= "1" when (signed(apl1_1_fu_4498_p3) < signed(sext_ln747_fu_4515_p1)) else "0";
    icmp_ln763_fu_2964_p2 <= "1" when (unsigned(select_ln761_fu_2953_p3) > unsigned(ap_const_lv17_5800)) else "0";
    il <= ap_phi_mux_ril_2_phi_fu_847_p4;

    il_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            il_ap_vld <= ap_const_logic_1;
        else 
            il_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    ilb_table_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage21, zext_ln656_1_fu_3004_p1, ap_block_pp0_stage15, zext_ln656_fu_3864_p1, ap_block_pp0_stage21)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21))) then 
                ilb_table_address0 <= zext_ln656_fu_3864_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
                ilb_table_address0 <= zext_ln656_1_fu_3004_p1(5 - 1 downto 0);
            else 
                ilb_table_address0 <= "XXXXX";
            end if;
        else 
            ilb_table_address0 <= "XXXXX";
        end if; 
    end process;


    ilb_table_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)))) then 
            ilb_table_ce0 <= ap_const_logic_1;
        else 
            ilb_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln_fu_3552_p4 <= ap_phi_mux_ril_2_phi_fu_847_p4(5 downto 2);
    m_2_fu_2011_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sub_ln347_fu_1997_p2));
    m_3_fu_2785_p3 <= 
        m_2_reg_5184 when (tmp_17_reg_5178(0) = '1') else 
        sub_ln347_reg_5173;
    m_4_fu_2022_p3 <= 
        m_fu_2017_p2 when (tmp_3_reg_5163(0) = '1') else 
        sub_ln296_reg_5157;
    m_fu_2017_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sub_ln296_reg_5157));
    mul_ln303_fu_3655_p1 <= zext_ln620_4_reg_5417(15 - 1 downto 0);
    mul_ln359_fu_1136_p0 <= mul_ln359_fu_1136_p00(15 - 1 downto 0);
    mul_ln359_fu_1136_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(deth_i),25));
    mul_ln359_fu_1136_p1 <= ap_const_lv25_234(11 - 1 downto 0);
    mul_ln364_fu_2917_p1 <= mul_ln364_fu_2917_p10(15 - 1 downto 0);
    mul_ln364_fu_2917_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(deth_load_reg_4601),29));
    mul_ln620_10_fu_2337_p0 <= zext_ln620_2_fu_2034_p1(15 - 1 downto 0);
    mul_ln620_10_fu_2337_p1 <= ap_const_lv28_1090(14 - 1 downto 0);
    mul_ln620_11_fu_2363_p0 <= zext_ln620_2_fu_2034_p1(15 - 1 downto 0);
    mul_ln620_11_fu_2363_p1 <= ap_const_lv28_1258(14 - 1 downto 0);
    mul_ln620_12_fu_2389_p0 <= zext_ln620_2_fu_2034_p1(15 - 1 downto 0);
    mul_ln620_12_fu_2389_p1 <= ap_const_lv28_1450(14 - 1 downto 0);
    mul_ln620_13_fu_2415_p0 <= zext_ln620_2_fu_2034_p1(15 - 1 downto 0);
    mul_ln620_13_fu_2415_p1 <= ap_const_lv28_1650(14 - 1 downto 0);
    mul_ln620_14_fu_2441_p0 <= zext_ln620_2_fu_2034_p1(15 - 1 downto 0);
    mul_ln620_14_fu_2441_p1 <= ap_const_lv28_1890(14 - 1 downto 0);
    mul_ln620_15_fu_2467_p0 <= zext_ln620_2_fu_2034_p1(15 - 1 downto 0);
    mul_ln620_15_fu_2467_p1 <= ap_const_lv28_1AD0(14 - 1 downto 0);
    mul_ln620_16_fu_2493_p0 <= zext_ln620_2_fu_2034_p1(15 - 1 downto 0);
    mul_ln620_16_fu_2493_p1 <= ap_const_lv28_1D60(14 - 1 downto 0);
    mul_ln620_17_fu_2567_p0 <= zext_ln620_1_fu_2031_p1(15 - 1 downto 0);
    mul_ln620_17_fu_2567_p1 <= ap_const_lv29_2308(15 - 1 downto 0);
    mul_ln620_18_fu_2593_p0 <= zext_ln620_1_fu_2031_p1(15 - 1 downto 0);
    mul_ln620_18_fu_2593_p1 <= ap_const_lv29_2618(15 - 1 downto 0);
    mul_ln620_19_fu_2619_p0 <= zext_ln620_1_fu_2031_p1(15 - 1 downto 0);
    mul_ln620_19_fu_2619_p1 <= ap_const_lv29_29D8(15 - 1 downto 0);
    mul_ln620_1_fu_2103_p0 <= mul_ln620_1_fu_2103_p00(15 - 1 downto 0);
    mul_ln620_1_fu_2103_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(detl_load_reg_4546),25));
    mul_ln620_1_fu_2103_p1 <= ap_const_lv25_370(11 - 1 downto 0);
    mul_ln620_20_fu_2645_p0 <= zext_ln620_1_fu_2031_p1(15 - 1 downto 0);
    mul_ln620_20_fu_2645_p1 <= ap_const_lv29_2D90(15 - 1 downto 0);
    mul_ln620_21_fu_2671_p0 <= zext_ln620_1_fu_2031_p1(15 - 1 downto 0);
    mul_ln620_21_fu_2671_p1 <= ap_const_lv29_3260(15 - 1 downto 0);
    mul_ln620_22_fu_2697_p0 <= zext_ln620_1_fu_2031_p1(15 - 1 downto 0);
    mul_ln620_22_fu_2697_p1 <= ap_const_lv29_3728(15 - 1 downto 0);
    mul_ln620_23_fu_2723_p0 <= zext_ln620_1_fu_2031_p1(15 - 1 downto 0);
    mul_ln620_23_fu_2723_p1 <= ap_const_lv29_3DE0(15 - 1 downto 0);
    mul_ln620_24_fu_2749_p0 <= mul_ln620_24_fu_2749_p00(15 - 1 downto 0);
    mul_ln620_24_fu_2749_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(detl_load_reg_4546),30));
    mul_ln620_24_fu_2749_p1 <= ap_const_lv30_4498(16 - 1 downto 0);
    mul_ln620_25_fu_2896_p0 <= zext_ln620_reg_5197(15 - 1 downto 0);
    mul_ln620_25_fu_2896_p1 <= ap_const_lv30_4FE8(16 - 1 downto 0);
    mul_ln620_26_fu_3039_p0 <= zext_ln620_reg_5197(15 - 1 downto 0);
    mul_ln620_26_fu_3039_p1 <= ap_const_lv30_5B38(16 - 1 downto 0);
    mul_ln620_2_fu_2129_p0 <= zext_ln620_5_fu_2040_p1(15 - 1 downto 0);
    mul_ln620_2_fu_2129_p1 <= ap_const_lv26_4B0(12 - 1 downto 0);
    mul_ln620_3_fu_2155_p0 <= zext_ln620_5_fu_2040_p1(15 - 1 downto 0);
    mul_ln620_3_fu_2155_p1 <= ap_const_lv26_5F0(12 - 1 downto 0);
    mul_ln620_4_fu_2181_p0 <= zext_ln620_5_fu_2040_p1(15 - 1 downto 0);
    mul_ln620_4_fu_2181_p1 <= ap_const_lv26_748(12 - 1 downto 0);
    mul_ln620_5_fu_2207_p0 <= zext_ln620_3_fu_2037_p1(15 - 1 downto 0);
    mul_ln620_5_fu_2207_p1 <= ap_const_lv27_8A0(13 - 1 downto 0);
    mul_ln620_6_fu_2233_p0 <= zext_ln620_3_fu_2037_p1(15 - 1 downto 0);
    mul_ln620_6_fu_2233_p1 <= ap_const_lv27_A18(13 - 1 downto 0);
    mul_ln620_7_fu_2259_p0 <= zext_ln620_3_fu_2037_p1(15 - 1 downto 0);
    mul_ln620_7_fu_2259_p1 <= ap_const_lv27_B90(13 - 1 downto 0);
    mul_ln620_8_fu_2285_p0 <= zext_ln620_3_fu_2037_p1(15 - 1 downto 0);
    mul_ln620_8_fu_2285_p1 <= ap_const_lv27_D30(13 - 1 downto 0);
    mul_ln620_9_fu_2311_p0 <= zext_ln620_3_fu_2037_p1(15 - 1 downto 0);
    mul_ln620_9_fu_2311_p1 <= ap_const_lv27_EC8(13 - 1 downto 0);
    mul_ln620_fu_1060_p0 <= mul_ln620_fu_1060_p00(15 - 1 downto 0);
    mul_ln620_fu_1060_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(detl_i),24));
    mul_ln620_fu_1060_p1 <= ap_const_lv24_118(10 - 1 downto 0);
    mul_ln679_10_fu_3206_p0 <= sext_ln679_6_fu_3128_p1(14 - 1 downto 0);
    mul_ln679_11_fu_3212_p0 <= sext_ln679_6_fu_3128_p1(14 - 1 downto 0);
    mul_ln679_1_fu_3933_p0 <= sext_ln303_1_fu_3796_p1(16 - 1 downto 0);
    mul_ln679_2_fu_3939_p0 <= sext_ln303_1_fu_3796_p1(16 - 1 downto 0);
    mul_ln679_3_fu_3945_p0 <= sext_ln303_1_fu_3796_p1(16 - 1 downto 0);
    mul_ln679_4_fu_3951_p0 <= sext_ln303_1_fu_3796_p1(16 - 1 downto 0);
    mul_ln679_5_fu_3957_p0 <= sext_ln303_1_fu_3796_p1(16 - 1 downto 0);
    mul_ln679_6_fu_3131_p0 <= sext_ln679_6_fu_3128_p1(14 - 1 downto 0);
    mul_ln679_7_fu_3162_p0 <= sext_ln679_6_fu_3128_p1(14 - 1 downto 0);
    mul_ln679_8_fu_3194_p0 <= sext_ln679_6_fu_3128_p1(14 - 1 downto 0);
    mul_ln679_9_fu_3200_p0 <= sext_ln679_6_fu_3128_p1(14 - 1 downto 0);
    mul_ln679_fu_3927_p0 <= sext_ln303_1_fu_3796_p1(16 - 1 downto 0);

    nbh_o_assign_proc : process(ap_enable_reg_pp0_iter0, nbh_i, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, select_ln763_fu_2970_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            nbh_o <= select_ln763_fu_2970_p3;
        else 
            nbh_o <= nbh_i;
        end if; 
    end process;


    nbh_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            nbh_o_ap_vld <= ap_const_logic_1;
        else 
            nbh_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    nbl_o_assign_proc : process(ap_enable_reg_pp0_iter0, nbl_i, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, select_ln643_fu_3830_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21))) then 
            nbl_o <= select_ln643_fu_3830_p3;
        else 
            nbl_o <= nbl_i;
        end if; 
    end process;


    nbl_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21))) then 
            nbl_o_ap_vld <= ap_const_logic_1;
        else 
            nbl_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    ph1_o_assign_proc : process(ap_enable_reg_pp0_iter0, ph1_i, add_ln373_reg_5352, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then 
            ph1_o <= add_ln373_reg_5352;
        else 
            ph1_o <= ph1_i;
        end if; 
    end process;


    ph1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then 
            ph1_o_ap_vld <= ap_const_logic_1;
        else 
            ph1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    ph2_o_assign_proc : process(ap_enable_reg_pp0_iter0, ph1_i, ph2_i, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then 
            ph2_o <= ph1_i;
        else 
            ph2_o <= ph2_i;
        end if; 
    end process;


    ph2_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then 
            ph2_o_ap_vld <= ap_const_logic_1;
        else 
            ph2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pl2_1_fu_1110_p3 <= (rh2_i & ap_const_lv1_0);
    pl2_fu_1176_p3 <= (rlt2_i & ap_const_lv1_0);
    pl_2_fu_1092_p3 <= (rh1_i & ap_const_lv1_0);
    pl_fu_1326_p3 <= (rlt1_i & ap_const_lv1_0);

    plt1_o_assign_proc : process(ap_enable_reg_pp0_iter0, plt1_i, add_ln313_reg_5532, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22))) then 
            plt1_o <= add_ln313_reg_5532;
        else 
            plt1_o <= plt1_i;
        end if; 
    end process;


    plt1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22))) then 
            plt1_o_ap_vld <= ap_const_logic_1;
        else 
            plt1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    plt2_o_assign_proc : process(ap_enable_reg_pp0_iter0, plt1_i, plt2_i, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22))) then 
            plt2_o <= plt1_i;
        else 
            plt2_o <= plt2_i;
        end if; 
    end process;


    plt2_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22))) then 
            plt2_o_ap_vld <= ap_const_logic_1;
        else 
            plt2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    qq4_code4_table_address0 <= zext_ln303_fu_3562_p1(4 - 1 downto 0);

    qq4_code4_table_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            qq4_code4_table_ce0 <= ap_const_logic_1;
        else 
            qq4_code4_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    quant26bt_neg_address0 <= zext_ln628_fu_3406_p1(5 - 1 downto 0);

    quant26bt_neg_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18))) then 
            quant26bt_neg_ce0 <= ap_const_logic_1;
        else 
            quant26bt_neg_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    quant26bt_pos_address0 <= zext_ln628_fu_3406_p1(5 - 1 downto 0);

    quant26bt_pos_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18))) then 
            quant26bt_pos_ce0 <= ap_const_logic_1;
        else 
            quant26bt_pos_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rh1_o_assign_proc : process(ap_enable_reg_pp0_iter0, rh1_i, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, add_ln388_fu_3020_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            rh1_o <= add_ln388_fu_3020_p2;
        else 
            rh1_o <= rh1_i;
        end if; 
    end process;


    rh1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            rh1_o_ap_vld <= ap_const_logic_1;
        else 
            rh1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rh2_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, rh1_i, rh2_i, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rh2_o <= rh1_i;
        else 
            rh2_o <= rh2_i;
        end if; 
    end process;


    rh2_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rh2_o_ap_vld <= ap_const_logic_1;
        else 
            rh2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rlt1_o_assign_proc : process(ap_enable_reg_pp0_iter0, rlt1_i, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, add_ln330_fu_3963_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21))) then 
            rlt1_o <= add_ln330_fu_3963_p2;
        else 
            rlt1_o <= rlt1_i;
        end if; 
    end process;


    rlt1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21))) then 
            rlt1_o_ap_vld <= ap_const_logic_1;
        else 
            rlt1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rlt2_o_assign_proc : process(ap_enable_reg_pp0_iter0, rlt1_i, rlt2_i, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            rlt2_o <= rlt1_i;
        else 
            rlt2_o <= rlt2_i;
        end if; 
    end process;


    rlt2_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            rlt2_o_ap_vld <= ap_const_logic_1;
        else 
            rlt2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln351_fu_2765_p3 <= 
        ap_const_lv2_2 when (tmp_17_reg_5178(0) = '1') else 
        ap_const_lv2_0;
    select_ln360_fu_2796_p3 <= 
        ap_const_lv2_2 when (icmp_ln360_fu_2790_p2(0) = '1') else 
        ap_const_lv2_3;
    select_ln621_fu_3299_p3 <= 
        ap_const_lv5_1E when (icmp_ln621_29_fu_3294_p2(0) = '1') else 
        ap_const_lv5_1D;
    select_ln641_fu_3813_p3 <= 
        ap_const_lv17_0 when (tmp_6_fu_3805_p3(0) = '1') else 
        add_ln640_reg_5516;
    select_ln643_fu_3830_p3 <= 
        ap_const_lv15_4800 when (icmp_ln643_fu_3824_p2(0) = '1') else 
        trunc_ln636_fu_3820_p1;
    select_ln666_10_fu_3426_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_23_fu_3418_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_11_fu_3392_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_24_fu_3384_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_1_fu_4119_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_10_fu_4111_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_2_fu_4144_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_11_fu_4136_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_3_fu_4169_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_12_fu_4161_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_4_fu_4280_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_13_fu_4272_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_5_fu_4194_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_14_fu_4186_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_6_fu_3149_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_19_fu_3141_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_7_fu_3180_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_20_fu_3172_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_8_fu_3344_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_21_fu_3336_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_9_fu_3368_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_22_fu_3360_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_fu_4094_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_9_fu_4086_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln705_1_fu_3479_p3 <= 
        sext_ln707_1_fu_3465_p1 when (tmp_25_reg_5450(0) = '1') else 
        tmp_8_fu_3469_p4;
    select_ln705_fu_4337_p3 <= 
        sext_ln707_fu_4323_p1 when (tmp_15_reg_5623(0) = '1') else 
        tmp_5_fu_4327_p4;
    select_ln716_1_fu_3521_p3 <= 
        ap_const_lv17_1FF80 when (tmp_26_reg_5456(0) = '1') else 
        ap_const_lv17_80;
    select_ln716_fu_4379_p3 <= 
        ap_const_lv17_1FF80 when (tmp_16_reg_5629(0) = '1') else 
        ap_const_lv17_80;
    select_ln735_1_fu_3632_p3 <= 
        ap_const_lv18_3FF40 when (tmp_25_reg_5450(0) = '1') else 
        ap_const_lv18_C0;
    select_ln735_fu_4468_p3 <= 
        ap_const_lv18_3FF40 when (tmp_15_reg_5623(0) = '1') else 
        ap_const_lv18_C0;
    select_ln761_fu_2953_p3 <= 
        ap_const_lv17_0 when (tmp_18_fu_2945_p3(0) = '1') else 
        add_ln760_reg_5322;
    select_ln763_fu_2970_p3 <= 
        ap_const_lv15_5800 when (icmp_ln763_fu_2964_p2(0) = '1') else 
        trunc_ln756_fu_2960_p1;
        sext_ln255_fu_1820_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xa_reg_5115),40));

        sext_ln261_1_fu_1694_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln261_1_fu_1686_p3),37));

        sext_ln261_fu_1682_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_1674_p3),37));

    sext_ln266_10_fu_1632_p0 <= tqmf_q0;
        sext_ln266_10_fu_1632_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln266_10_fu_1632_p0),44));

        sext_ln266_11_fu_1846_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln2_fu_1838_p3),45));

        sext_ln266_12_fu_1762_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln267_fu_1756_p2),40));

    sext_ln266_13_fu_1642_p0 <= tqmf_q0;
        sext_ln266_13_fu_1642_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln266_13_fu_1642_p0),41));

        sext_ln266_1_fu_1578_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_1008),44));

        sext_ln266_2_fu_1711_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1_fu_1704_p3),39));

        sext_ln266_3_fu_1722_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln266_1_fu_1715_p3),39));

        sext_ln266_4_fu_1582_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_1012),44));

    sext_ln266_6_fu_1511_p0 <= tqmf_q0;
        sext_ln266_6_fu_1511_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln266_6_fu_1511_p0),45));

        sext_ln266_9_fu_1650_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_1012),45));

        sext_ln266_fu_1270_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_972),33));

    sext_ln267_10_fu_1627_p0 <= tqmf_q1;
        sext_ln267_10_fu_1627_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln267_10_fu_1627_p0),43));

        sext_ln267_11_fu_1654_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_1016),47));

    sext_ln267_12_fu_1637_p0 <= tqmf_q1;
        sext_ln267_12_fu_1637_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln267_12_fu_1637_p0),42));

        sext_ln267_13_fu_1740_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln267_1_fu_1732_p3),39));

        sext_ln267_14_fu_1752_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln267_2_fu_1744_p3),39));

        sext_ln267_15_fu_1766_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_1008),42));

    sext_ln267_1_fu_1426_p0 <= tqmf_q1;
        sext_ln267_1_fu_1426_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln267_1_fu_1426_p0),41));

        sext_ln267_2_fu_1823_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln266_reg_5120),40));

    sext_ln267_3_fu_1431_p0 <= tqmf_q0;
        sext_ln267_3_fu_1431_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln267_3_fu_1431_p0),43));

        sext_ln267_4_fu_1834_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln266_2_fu_1826_p3),40));

    sext_ln267_5_fu_1496_p0 <= tqmf_q0;
        sext_ln267_5_fu_1496_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln267_5_fu_1496_p0),44));

    sext_ln267_6_fu_1501_p0 <= tqmf_q1;
        sext_ln267_6_fu_1501_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln267_6_fu_1501_p0),42));

    sext_ln267_8_fu_1617_p0 <= tqmf_q1;
        sext_ln267_8_fu_1617_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln267_8_fu_1617_p0),45));

        sext_ln267_9_fu_1647_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln266_3_reg_5073),47));

        sext_ln267_fu_1274_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_978),33));

        sext_ln270_1_fu_1850_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln270_reg_5125),47));

        sext_ln270_2_fu_1870_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln270_5_fu_1864_p2),45));

        sext_ln270_3_fu_1874_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln270_6_reg_5038),45));

        sext_ln270_4_fu_1888_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln270_8_fu_1882_p2),47));

        sext_ln270_fu_1596_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp35_reg_4966),42));

        sext_ln271_1_fu_1796_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln271_1_fu_1788_p3),37));

        sext_ln271_2_fu_1806_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln271_fu_1800_p2),44));

        sext_ln271_3_fu_1898_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln271_reg_5130),45));

        sext_ln271_4_fu_1912_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln271_3_fu_1906_p2),47));

        sext_ln271_5_fu_1916_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln271_5_reg_5043),47));

        sext_ln271_6_fu_1919_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln271_6_reg_5135),47));

        sext_ln271_fu_1784_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln3_fu_1776_p3),37));

        sext_ln303_1_fu_3796_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln6_reg_5508),32));

        sext_ln364_1_fu_2934_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln8_fu_2923_p4),32));

    sext_ln587_1_fu_1148_p0 <= delay_bpl_q1;
        sext_ln587_1_fu_1148_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln587_1_fu_1148_p0),46));

    sext_ln587_3_fu_1153_p0 <= delay_dltx_q1;
        sext_ln587_3_fu_1153_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln587_3_fu_1153_p0),46));

    sext_ln587_4_fu_1194_p0 <= delay_bph_q1;
        sext_ln587_4_fu_1194_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln587_4_fu_1194_p0),40));

    sext_ln587_5_fu_1198_p0 <= delay_bph_q1;
        sext_ln587_5_fu_1198_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln587_5_fu_1198_p0),46));

    sext_ln587_7_fu_1203_p0 <= delay_dhx_q1;
        sext_ln587_7_fu_1203_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln587_7_fu_1203_p0),46));

        sext_ln587_fu_3772_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(delay_bpl_load_reg_4611),40));

    sext_ln589_11_fu_1303_p0 <= delay_dltx_q0;
        sext_ln589_11_fu_1303_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_11_fu_1303_p0),46));

        sext_ln589_12_fu_4242_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(delay_bpl_load_4_reg_4745),40));

    sext_ln589_13_fu_1308_p0 <= delay_bpl_q0;
        sext_ln589_13_fu_1308_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_13_fu_1308_p0),46));

    sext_ln589_15_fu_1313_p0 <= delay_dltx_q1;
        sext_ln589_15_fu_1313_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_15_fu_1313_p0),46));

        sext_ln589_16_fu_3980_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(delay_bpl_load_5_reg_4878),40));

    sext_ln589_17_fu_1454_p0 <= delay_bpl_q0;
        sext_ln589_17_fu_1454_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_17_fu_1454_p0),46));

    sext_ln589_19_fu_1459_p0 <= delay_dltx_q0;
        sext_ln589_19_fu_1459_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_19_fu_1459_p0),46));

    sext_ln589_1_fu_1444_p0 <= delay_bpl_q1;
        sext_ln589_1_fu_1444_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_1_fu_1444_p0),46));

        sext_ln589_20_fu_3057_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(delay_bph_load_1_reg_4904),40));

    sext_ln589_21_fu_1470_p0 <= delay_bph_q1;
        sext_ln589_21_fu_1470_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_21_fu_1470_p0),46));

    sext_ln589_23_fu_1475_p0 <= delay_dhx_q1;
        sext_ln589_23_fu_1475_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_23_fu_1475_p0),46));

    sext_ln589_24_fu_1208_p0 <= delay_bph_q0;
        sext_ln589_24_fu_1208_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_24_fu_1208_p0),40));

    sext_ln589_25_fu_1212_p0 <= delay_bph_q0;
        sext_ln589_25_fu_1212_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_25_fu_1212_p0),46));

    sext_ln589_27_fu_1217_p0 <= delay_dhx_q0;
        sext_ln589_27_fu_1217_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_27_fu_1217_p0),46));

    sext_ln589_28_fu_1350_p0 <= delay_bph_q1;
        sext_ln589_28_fu_1350_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_28_fu_1350_p0),40));

    sext_ln589_29_fu_1354_p0 <= delay_bph_q1;
        sext_ln589_29_fu_1354_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_29_fu_1354_p0),46));

    sext_ln589_31_fu_1359_p0 <= delay_dhx_q0;
        sext_ln589_31_fu_1359_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_31_fu_1359_p0),46));

    sext_ln589_32_fu_1364_p0 <= delay_bph_q0;
        sext_ln589_32_fu_1364_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_32_fu_1364_p0),40));

    sext_ln589_33_fu_1368_p0 <= delay_bph_q0;
        sext_ln589_33_fu_1368_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_33_fu_1368_p0),46));

    sext_ln589_35_fu_1373_p0 <= delay_dhx_q1;
        sext_ln589_35_fu_1373_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_35_fu_1373_p0),46));

        sext_ln589_36_fu_3307_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(delay_bph_load_5_reg_4925),40));

    sext_ln589_37_fu_1480_p0 <= delay_bph_q0;
        sext_ln589_37_fu_1480_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_37_fu_1480_p0),46));

    sext_ln589_39_fu_1485_p0 <= delay_dhx_q0;
        sext_ln589_39_fu_1485_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_39_fu_1485_p0),46));

    sext_ln589_3_fu_1449_p0 <= delay_dltx_q1;
        sext_ln589_3_fu_1449_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_3_fu_1449_p0),46));

        sext_ln589_4_fu_3974_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(delay_bpl_load_2_reg_4633),40));

    sext_ln589_5_fu_1158_p0 <= delay_bpl_q0;
        sext_ln589_5_fu_1158_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_5_fu_1158_p0),46));

    sext_ln589_7_fu_1163_p0 <= delay_dltx_q0;
        sext_ln589_7_fu_1163_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_7_fu_1163_p0),46));

        sext_ln589_8_fu_3977_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(delay_bpl_load_3_reg_4723),40));

    sext_ln589_9_fu_1298_p0 <= delay_bpl_q1;
        sext_ln589_9_fu_1298_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln589_9_fu_1298_p0),46));

        sext_ln589_fu_3778_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(delay_bpl_load_1_reg_4857),40));

    sext_ln600_1_fu_1339_p0 <= al1_i;
        sext_ln600_1_fu_1339_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln600_1_fu_1339_p0),47));

        sext_ln600_2_fu_1184_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pl2_fu_1176_p3),47));

        sext_ln600_3_fu_1100_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pl_2_fu_1092_p3),47));

    sext_ln600_4_fu_1105_p0 <= ah1_i;
        sext_ln600_4_fu_1105_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln600_4_fu_1105_p0),47));

        sext_ln600_5_fu_1118_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pl2_1_fu_1110_p3),47));

        sext_ln600_fu_1334_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pl_fu_1326_p3),47));

        sext_ln602_1_fu_3568_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ah1_load_reg_4567),25));

        sext_ln602_fu_4404_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(al1_load_reg_4766),25));

    sext_ln604_1_fu_1189_p0 <= al2_i;
        sext_ln604_1_fu_1189_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln604_1_fu_1189_p0),47));

        sext_ln604_2_fu_3412_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ah2_load_reg_4575),23));

    sext_ln604_3_fu_1123_p0 <= ah2_i;
        sext_ln604_3_fu_1123_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln604_3_fu_1123_p0),47));

        sext_ln604_fu_4294_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(al2_load_reg_4654),23));

        sext_ln613_1_fu_3290_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(decis_28_fu_3280_p4),32));

        sext_ln613_fu_2557_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(decis_17_fu_2547_p4),32));

        sext_ln636_fu_3802_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln640_reg_5516),32));

        sext_ln639_fu_3799_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln6_reg_5508),31));

        sext_ln640_1_fu_3710_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(wl_code_table_q0),17));

        sext_ln640_fu_3706_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln7_fu_3696_p4),17));

        sext_ln679_10_fu_3357_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_9_reg_5386),64));

        sext_ln679_11_fu_3415_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_10_reg_5391),64));

        sext_ln679_12_fu_3381_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_11_reg_5396),64));

        sext_ln679_1_fu_4108_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_1_reg_5557),64));

        sext_ln679_2_fu_4133_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_2_reg_5562),64));

        sext_ln679_3_fu_4158_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_3_reg_5567),64));

        sext_ln679_4_fu_4269_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_4_reg_5572),64));

        sext_ln679_5_fu_4183_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_5_reg_5577),64));

        sext_ln679_6_fu_3128_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln8_reg_5337),28));

        sext_ln679_7_fu_3137_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_6_fu_3131_p2),64));

        sext_ln679_8_fu_3168_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_7_fu_3162_p2),64));

        sext_ln679_9_fu_3333_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_8_reg_5381),64));

        sext_ln679_fu_4083_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_reg_5552),64));

        sext_ln702_1_fu_3446_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(wd2_1_fu_3439_p3),19));

        sext_ln702_fu_4304_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(wd2_fu_4297_p3),19));

    sext_ln705_1_fu_4221_p0 <= plt1_i;
        sext_ln705_1_fu_4221_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln705_1_fu_4221_p0),64));

        sext_ln705_2_fu_3226_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln373_reg_5352),64));

    sext_ln705_3_fu_3231_p0 <= ph1_i;
        sext_ln705_3_fu_3231_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln705_3_fu_3231_p0),64));

        sext_ln705_fu_4216_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln313_reg_5532),64));

        sext_ln707_1_fu_3465_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_7_fu_3456_p4),12));

        sext_ln707_fu_4323_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_4314_p4),12));

    sext_ln708_1_fu_3236_p0 <= ph2_i;
        sext_ln708_1_fu_3236_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln708_1_fu_3236_p0),64));

        sext_ln708_2_fu_4344_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln705_fu_4337_p3),17));

        sext_ln708_3_fu_3486_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln705_1_fu_3479_p3),17));

    sext_ln708_fu_4226_p0 <= plt2_i;
        sext_ln708_fu_4226_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln708_fu_4226_p0),64));

        sext_ln716_1_fu_4375_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln4_fu_4365_p4),17));

        sext_ln716_2_fu_3497_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln716_1_fu_3490_p3),23));

        sext_ln716_3_fu_3517_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln716_1_fu_3507_p4),17));

        sext_ln716_fu_4355_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln8_fu_4348_p3),23));

        sext_ln734_1_fu_3608_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln734_1_fu_3601_p3),25));

        sext_ln734_fu_4444_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln9_fu_4437_p3),25));

        sext_ln735_1_fu_3628_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln734_1_fu_3618_p4),18));

        sext_ln735_fu_4464_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln5_fu_4454_p4),18));

        sext_ln747_1_fu_3748_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(apl1_6_fu_3742_p2),18));

        sext_ln747_fu_4515_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(apl1_2_fu_4509_p2),18));

        sext_ln756_fu_2942_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln760_reg_5322),32));

        sext_ln758_fu_2860_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(wd_1_fu_2850_p4),17));

        sext_ln759_fu_2938_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln8_fu_2923_p4),31));

        sext_ln760_fu_2878_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_2864_p6),17));

    shl_ln10_fu_2832_p3 <= (nbh_i & ap_const_lv7_0);
    shl_ln1_fu_1704_p3 <= (tqmf_load_4_reg_5098 & ap_const_lv6_0);
    shl_ln261_1_fu_1686_p1 <= reg_972;
    shl_ln261_1_fu_1686_p3 <= (shl_ln261_1_fu_1686_p1 & ap_const_lv2_0);
    shl_ln266_1_fu_1715_p3 <= (tqmf_load_4_reg_5098 & ap_const_lv4_0);
    shl_ln266_2_fu_1826_p3 <= (tqmf_q1 & ap_const_lv7_0);
    shl_ln267_1_fu_1732_p3 <= (tqmf_q1 & ap_const_lv6_0);
    shl_ln267_2_fu_1744_p3 <= (tqmf_q1 & ap_const_lv4_0);
    shl_ln271_1_fu_1788_p3 <= (tqmf_q0 & ap_const_lv2_0);
    shl_ln2_fu_1838_p3 <= (tqmf_q0 & ap_const_lv7_0);
    shl_ln3_fu_1776_p3 <= (tqmf_q0 & ap_const_lv4_0);
    shl_ln4_fu_2055_p3 <= (detl_load_reg_4546 & ap_const_lv9_0);
    shl_ln5_fu_3678_p3 <= (nbl_i & ap_const_lv7_0);
    shl_ln620_1_fu_2066_p3 <= (detl_load_reg_4546 & ap_const_lv6_0);
    shl_ln620_2_fu_2519_p3 <= (detl_load_reg_4546 & ap_const_lv13_0);
    shl_ln620_3_fu_2530_p3 <= (detl_load_reg_4546 & ap_const_lv3_0);
    shl_ln620_4_fu_3263_p3 <= (detl_load_reg_4546 & ap_const_lv15_0);
    shl_ln657_1_fu_3090_p3 <= (wd3_8_fu_3084_p2 & ap_const_lv3_0);
    shl_ln672_10_fu_3310_p3 <= (delay_bph_load_5_reg_4925 & ap_const_lv8_0);
    shl_ln672_1_fu_3903_p3 <= (delay_bpl_load_1_reg_4857 & ap_const_lv8_0);
    shl_ln672_2_fu_4012_p3 <= (delay_bpl_load_2_reg_4633 & ap_const_lv8_0);
    shl_ln672_3_fu_4036_p3 <= (delay_bpl_load_3_reg_4723 & ap_const_lv8_0);
    shl_ln672_4_fu_4245_p3 <= (delay_bpl_load_4_reg_4745 & ap_const_lv8_0);
    shl_ln672_5_fu_4060_p3 <= (delay_bpl_load_5_reg_4878 & ap_const_lv8_0);
    shl_ln672_6_fu_1222_p1 <= delay_bph_q1;
    shl_ln672_6_fu_1222_p3 <= (shl_ln672_6_fu_1222_p1 & ap_const_lv8_0);
    shl_ln672_7_fu_3104_p3 <= (delay_bph_load_1_reg_4904 & ap_const_lv8_0);
    shl_ln672_8_fu_1246_p1 <= delay_bph_q0;
    shl_ln672_8_fu_1246_p3 <= (shl_ln672_8_fu_1246_p1 & ap_const_lv8_0);
    shl_ln672_9_fu_1378_p1 <= delay_bph_q1;
    shl_ln672_9_fu_1378_p3 <= (shl_ln672_9_fu_1378_p1 & ap_const_lv8_0);
    shl_ln672_s_fu_1402_p1 <= delay_bph_q0;
    shl_ln672_s_fu_1402_p3 <= (shl_ln672_s_fu_1402_p1 & ap_const_lv8_0);
    shl_ln6_fu_3998_p3 <= (wd3_fu_3992_p2 & ap_const_lv3_0);
    shl_ln716_1_fu_3490_p3 <= (ah2_load_reg_4575 & ap_const_lv7_0);
    shl_ln734_1_fu_3601_p3 <= (ah1_load_reg_4567 & ap_const_lv8_0);
    shl_ln7_fu_3879_p3 <= (delay_bpl_load_reg_4611 & ap_const_lv8_0);
    shl_ln8_fu_4348_p3 <= (al2_load_reg_4654 & ap_const_lv7_0);
    shl_ln9_fu_4437_p3 <= (al1_load_reg_4766 & ap_const_lv8_0);
    shl_ln_fu_1674_p1 <= reg_972;
    shl_ln_fu_1674_p3 <= (shl_ln_fu_1674_p1 & ap_const_lv4_0);
    sub_ln266_fu_1726_p2 <= std_logic_vector(signed(sext_ln266_2_fu_1711_p1) - signed(sext_ln266_3_fu_1722_p1));
    sub_ln267_fu_1756_p2 <= std_logic_vector(signed(sext_ln267_13_fu_1740_p1) - signed(sext_ln267_14_fu_1752_p1));
    sub_ln271_fu_1800_p2 <= std_logic_vector(signed(sext_ln271_fu_1784_p1) - signed(sext_ln271_1_fu_1796_p1));
    sub_ln282_fu_1943_p2 <= std_logic_vector(unsigned(xa_2_reg_5140) - unsigned(xb_reg_5146));
    sub_ln296_fu_1975_p2 <= std_logic_vector(unsigned(trunc_ln_fu_1947_p4) - unsigned(add_ln295_fu_1967_p2));
    sub_ln347_fu_1997_p2 <= std_logic_vector(unsigned(trunc_ln1_fu_1957_p4) - unsigned(add_ln345_fu_1989_p2));
    sub_ln620_1_fu_3274_p2 <= std_logic_vector(unsigned(zext_ln620_12_fu_3270_p1) - unsigned(zext_ln620_4_fu_3252_p1));
    sub_ln620_fu_2541_p2 <= std_logic_vector(unsigned(zext_ln620_10_fu_2526_p1) - unsigned(zext_ln620_11_fu_2537_p1));
    sub_ln639_fu_3690_p2 <= std_logic_vector(unsigned(zext_ln639_1_fu_3686_p1) - unsigned(zext_ln639_fu_3674_p1));
    sub_ln656_1_fu_3075_p2 <= std_logic_vector(signed(ap_const_lv4_B) - signed(trunc_ln653_1_reg_5342));
    sub_ln656_1cast_fu_3080_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln656_1_fu_3075_p2),12));
    sub_ln656_fu_3983_p2 <= std_logic_vector(signed(ap_const_lv4_9) - signed(trunc_ln9_reg_5522));
    sub_ln656cast_fu_3988_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln656_fu_3983_p2),12));
    sub_ln672_10_fu_1410_p2 <= std_logic_vector(unsigned(shl_ln672_s_fu_1402_p3) - unsigned(sext_ln589_32_fu_1364_p1));
    sub_ln672_11_fu_3317_p2 <= std_logic_vector(unsigned(shl_ln672_10_fu_3310_p3) - unsigned(sext_ln589_36_fu_3307_p1));
    sub_ln672_1_fu_3910_p2 <= std_logic_vector(unsigned(shl_ln672_1_fu_3903_p3) - unsigned(sext_ln589_fu_3778_p1));
    sub_ln672_2_fu_4019_p2 <= std_logic_vector(unsigned(shl_ln672_2_fu_4012_p3) - unsigned(sext_ln589_4_fu_3974_p1));
    sub_ln672_3_fu_4043_p2 <= std_logic_vector(unsigned(shl_ln672_3_fu_4036_p3) - unsigned(sext_ln589_8_fu_3977_p1));
    sub_ln672_4_fu_4252_p2 <= std_logic_vector(unsigned(shl_ln672_4_fu_4245_p3) - unsigned(sext_ln589_12_fu_4242_p1));
    sub_ln672_5_fu_4067_p2 <= std_logic_vector(unsigned(shl_ln672_5_fu_4060_p3) - unsigned(sext_ln589_16_fu_3980_p1));
    sub_ln672_6_fu_1230_p2 <= std_logic_vector(unsigned(shl_ln672_6_fu_1222_p3) - unsigned(sext_ln587_4_fu_1194_p1));
    sub_ln672_7_fu_3111_p2 <= std_logic_vector(unsigned(shl_ln672_7_fu_3104_p3) - unsigned(sext_ln589_20_fu_3057_p1));
    sub_ln672_8_fu_1254_p2 <= std_logic_vector(unsigned(shl_ln672_8_fu_1246_p3) - unsigned(sext_ln589_24_fu_1208_p1));
    sub_ln672_9_fu_1386_p2 <= std_logic_vector(unsigned(shl_ln672_9_fu_1378_p3) - unsigned(sext_ln589_28_fu_1350_p1));
    sub_ln672_fu_3886_p2 <= std_logic_vector(unsigned(shl_ln7_fu_3879_p3) - unsigned(sext_ln587_fu_3772_p1));
    sub_ln706_1_fu_3450_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(sext_ln702_1_fu_3446_p1));
    sub_ln706_fu_4308_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(sext_ln702_fu_4304_p1));
    sub_ln716_1_fu_3501_p2 <= std_logic_vector(signed(sext_ln716_2_fu_3497_p1) - signed(sext_ln604_2_fu_3412_p1));
    sub_ln716_fu_4359_p2 <= std_logic_vector(signed(sext_ln716_fu_4355_p1) - signed(sext_ln604_fu_4294_p1));
    sub_ln734_1_fu_3612_p2 <= std_logic_vector(signed(sext_ln734_1_fu_3608_p1) - signed(sext_ln602_1_fu_3568_p1));
    sub_ln734_fu_4448_p2 <= std_logic_vector(signed(sext_ln734_fu_4444_p1) - signed(sext_ln602_fu_4404_p1));
    sub_ln759_fu_2844_p2 <= std_logic_vector(unsigned(zext_ln759_1_fu_2840_p1) - unsigned(zext_ln759_fu_2828_p1));
    tmp34_fu_1292_p2 <= std_logic_vector(signed(tqmf_load_22_cast_fu_1288_p1) + signed(sext_ln267_fu_1274_p1));
    tmp_10_fu_4111_p3 <= sext_ln679_1_fu_4108_p1(63 downto 63);
    tmp_11_fu_4136_p3 <= sext_ln679_2_fu_4133_p1(63 downto 63);
    tmp_12_fu_4161_p3 <= sext_ln679_3_fu_4158_p1(63 downto 63);
    tmp_13_fu_4272_p3 <= sext_ln679_4_fu_4269_p1(63 downto 63);
    tmp_14_fu_4186_p3 <= sext_ln679_5_fu_4183_p1(63 downto 63);
    tmp_18_fu_2945_p3 <= sext_ln756_fu_2942_p1(31 downto 31);
    tmp_19_fu_3141_p3 <= sext_ln679_7_fu_3137_p1(63 downto 63);
    tmp_20_fu_3172_p3 <= sext_ln679_8_fu_3168_p1(63 downto 63);
    tmp_21_fu_3336_p3 <= sext_ln679_9_fu_3333_p1(63 downto 63);
    tmp_22_fu_3360_p3 <= sext_ln679_10_fu_3357_p1(63 downto 63);
    tmp_23_fu_3418_p3 <= sext_ln679_11_fu_3415_p1(63 downto 63);
    tmp_24_fu_3384_p3 <= sext_ln679_12_fu_3381_p1(63 downto 63);
    tmp_4_fu_4314_p4 <= al1_load_reg_4766(15 downto 5);
    tmp_5_fu_4327_p4 <= sub_ln706_fu_4308_p2(18 downto 7);
    tmp_6_fu_3805_p3 <= sext_ln636_fu_3802_p1(31 downto 31);
    tmp_7_fu_3456_p4 <= ah1_load_reg_4567(15 downto 5);
    tmp_8_fu_3469_p4 <= sub_ln706_1_fu_3450_p2(18 downto 7);
    tmp_9_fu_4086_p3 <= sext_ln679_fu_4083_p1(63 downto 63);
    tmp_fu_1282_p2 <= std_logic_vector(signed(tqmf_load_21_cast_fu_1278_p1) + signed(sext_ln266_fu_1270_p1));

    tqmf_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage14, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage12, ap_block_pp0_stage13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
            tqmf_address0 <= ap_const_lv5_8;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            tqmf_address0 <= ap_const_lv5_16;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            tqmf_address0 <= ap_const_lv5_11;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            tqmf_address0 <= ap_const_lv5_17;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            tqmf_address0 <= ap_const_lv5_0;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)))) then 
            tqmf_address0 <= ap_const_lv5_14;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            tqmf_address0 <= ap_const_lv5_10;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            tqmf_address0 <= ap_const_lv5_E;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            tqmf_address0 <= ap_const_lv5_C;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            tqmf_address0 <= ap_const_lv5_A;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            tqmf_address0 <= ap_const_lv5_7;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            tqmf_address0 <= ap_const_lv5_5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tqmf_address0 <= ap_const_lv5_15;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tqmf_address0 <= ap_const_lv5_1;
        else 
            tqmf_address0 <= "XXXXX";
        end if; 
    end process;


    tqmf_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage14, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage12, ap_block_pp0_stage13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
            tqmf_address1 <= ap_const_lv5_5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            tqmf_address1 <= ap_const_lv5_15;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            tqmf_address1 <= ap_const_lv5_6;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)))) then 
            tqmf_address1 <= ap_const_lv5_13;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            tqmf_address1 <= ap_const_lv5_4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            tqmf_address1 <= ap_const_lv5_12;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            tqmf_address1 <= ap_const_lv5_F;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            tqmf_address1 <= ap_const_lv5_D;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            tqmf_address1 <= ap_const_lv5_B;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            tqmf_address1 <= ap_const_lv5_9;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            tqmf_address1 <= ap_const_lv5_8;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            tqmf_address1 <= ap_const_lv5_3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tqmf_address1 <= ap_const_lv5_16;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)))) then 
            tqmf_address1 <= ap_const_lv5_2;
        else 
            tqmf_address1 <= "XXXXX";
        end if; 
    end process;


    tqmf_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = 
    ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and 
    (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            tqmf_ce0 <= ap_const_logic_1;
        else 
            tqmf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tqmf_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = 
    ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and 
    (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            tqmf_ce1 <= ap_const_logic_1;
        else 
            tqmf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    tqmf_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, xin1, tqmf_q0, tqmf_q1, reg_972, ap_CS_fsm_pp0_stage10, reg_978, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, reg_1024, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, reg_1030, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_port_reg_xin2, ap_block_pp0_stage0, ap_block_pp0_stage14, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage12, ap_block_pp0_stage13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
            tqmf_d0 <= reg_978;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            tqmf_d0 <= reg_1030;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)))) then 
            tqmf_d0 <= reg_1024;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            tqmf_d0 <= reg_972;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            tqmf_d0 <= ap_port_reg_xin2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            tqmf_d0 <= tqmf_q1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            tqmf_d0 <= tqmf_q0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tqmf_d0 <= xin1;
        else 
            tqmf_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tqmf_d1_assign_proc : process(ap_enable_reg_pp0_iter0, tqmf_q0, tqmf_q1, reg_972, ap_CS_fsm_pp0_stage2, reg_978, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, reg_1024, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, reg_1030, tqmf_load_3_reg_4832, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, tqmf_load_4_reg_5098, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_block_pp0_stage2, ap_block_pp0_stage14, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage11, ap_block_pp0_stage12, ap_block_pp0_stage13)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
            tqmf_d1 <= tqmf_load_3_reg_4832;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
            tqmf_d1 <= reg_1030;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            tqmf_d1 <= reg_1024;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            tqmf_d1 <= tqmf_load_4_reg_5098;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            tqmf_d1 <= reg_978;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            tqmf_d1 <= tqmf_q1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            tqmf_d1 <= tqmf_q0;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)))) then 
            tqmf_d1 <= reg_972;
        else 
            tqmf_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    tqmf_load_21_cast_fu_1278_p0 <= tqmf_q0;
        tqmf_load_21_cast_fu_1278_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tqmf_load_21_cast_fu_1278_p0),33));

    tqmf_load_22_cast_fu_1288_p0 <= tqmf_q1;
        tqmf_load_22_cast_fu_1288_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tqmf_load_22_cast_fu_1288_p0),33));


    tqmf_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = 
    ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)))) then 
            tqmf_we0 <= ap_const_logic_1;
        else 
            tqmf_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tqmf_we1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 
    = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            tqmf_we1 <= ap_const_logic_1;
        else 
            tqmf_we1 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln1_fu_1957_p4 <= sub_ln282_fu_1943_p2(46 downto 15);
    trunc_ln296_fu_1971_p1 <= add_ln295_fu_1967_p2(31 - 1 downto 0);
    trunc_ln347_fu_1993_p1 <= add_ln345_fu_1989_p2(31 - 1 downto 0);
    trunc_ln4_fu_4365_p4 <= sub_ln716_fu_4359_p2(22 downto 7);
    trunc_ln5_fu_4454_p4 <= sub_ln734_fu_4448_p2(24 downto 8);
    trunc_ln636_fu_3820_p1 <= select_ln641_fu_3813_p3(15 - 1 downto 0);
    trunc_ln703_1_fu_3577_p1 <= apl2_4_fu_3571_p3(15 - 1 downto 0);
    trunc_ln703_fu_4413_p1 <= apl2_1_fu_4407_p3(15 - 1 downto 0);
    trunc_ln716_1_fu_3507_p4 <= sub_ln716_1_fu_3501_p2(22 downto 7);
    trunc_ln733_1_fu_3738_p1 <= apl1_5_fu_3731_p3(16 - 1 downto 0);
    trunc_ln733_fu_4505_p1 <= apl1_1_fu_4498_p3(16 - 1 downto 0);
    trunc_ln734_1_fu_3618_p4 <= sub_ln734_1_fu_3612_p2(24 downto 8);
    trunc_ln756_fu_2960_p1 <= select_ln761_fu_2953_p3(15 - 1 downto 0);
    trunc_ln7_fu_3696_p4 <= sub_ln639_fu_3690_p2(22 downto 7);
    trunc_ln8_fu_2923_p4 <= mul_ln364_fu_2917_p2(28 downto 15);
    trunc_ln_fu_1947_p4 <= add_ln281_fu_1939_p2(46 downto 15);
    wd1_1_fu_2984_p4 <= select_ln763_fu_2970_p3(10 downto 6);
    wd1_fu_3844_p4 <= select_ln643_fu_3830_p3(10 downto 6);
    wd2_1_fu_3439_p3 <= (ah1_load_reg_4567 & ap_const_lv2_0);
    wd2_fu_4297_p3 <= (al1_load_reg_4766 & ap_const_lv2_0);
    wd3_13_fu_3323_p4 <= sub_ln672_11_fu_3317_p2(39 downto 8);
    wd3_14_fu_3117_p4 <= sub_ln672_7_fu_3111_p2(39 downto 8);
    wd3_15_fu_3645_p2 <= std_logic_vector(unsigned(ap_const_lv15_3C00) - unsigned(apl2_5_fu_3587_p3));
    wd3_3_fu_4025_p4 <= sub_ln672_2_fu_4019_p2(39 downto 8);
    wd3_4_fu_4049_p4 <= sub_ln672_3_fu_4043_p2(39 downto 8);
    wd3_5_fu_4258_p4 <= sub_ln672_4_fu_4252_p2(39 downto 8);
    wd3_6_fu_4073_p4 <= sub_ln672_5_fu_4067_p2(39 downto 8);
    wd3_7_fu_4481_p2 <= std_logic_vector(unsigned(ap_const_lv15_3C00) - unsigned(apl2_2_fu_4423_p3));
    wd3_8_fu_3084_p2 <= std_logic_vector(shift_right(unsigned(ilb_table_q0),to_integer(unsigned('0' & sub_ln656_1cast_fu_3080_p1(12-1 downto 0)))));
    wd3_fu_3992_p2 <= std_logic_vector(shift_right(unsigned(ilb_table_q0),to_integer(unsigned('0' & sub_ln656cast_fu_3988_p1(12-1 downto 0)))));
    wd_1_fu_2850_p4 <= sub_ln759_fu_2844_p2(22 downto 7);
    wl_code_table_address0 <= zext_ln303_fu_3562_p1(4 - 1 downto 0);

    wl_code_table_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            wl_code_table_ce0 <= ap_const_logic_1;
        else 
            wl_code_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    xa_2_fu_1892_p2 <= std_logic_vector(signed(sext_ln270_4_fu_1888_p1) + signed(add_ln270_3_fu_1853_p2));
    xa_fu_1698_p2 <= std_logic_vector(signed(sext_ln261_fu_1682_p1) - signed(sext_ln261_1_fu_1694_p1));
    xb_fu_1933_p2 <= std_logic_vector(unsigned(add_ln271_8_fu_1927_p2) + unsigned(sext_ln271_4_fu_1912_p1));
    zext_ln303_fu_3562_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_3552_p4),64));
    zext_ln359_2_fu_2781_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_29_fu_2772_p4),32));
    zext_ln613_10_fu_2327_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_s_fu_2317_p4),32));
    zext_ln613_11_fu_2353_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_10_fu_2343_p4),32));
    zext_ln613_12_fu_2379_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_11_fu_2369_p4),32));
    zext_ln613_13_fu_2405_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_12_fu_2395_p4),32));
    zext_ln613_14_fu_2431_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_13_fu_2421_p4),32));
    zext_ln613_15_fu_2457_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_14_fu_2447_p4),32));
    zext_ln613_16_fu_2483_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_15_fu_2473_p4),32));
    zext_ln613_17_fu_2509_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_16_fu_2499_p4),32));
    zext_ln613_18_fu_2583_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_18_fu_2573_p4),32));
    zext_ln613_19_fu_2609_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_19_fu_2599_p4),32));
    zext_ln613_1_fu_2093_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_1_fu_2083_p4),32));
    zext_ln613_20_fu_2635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_20_fu_2625_p4),32));
    zext_ln613_21_fu_2661_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_21_fu_2651_p4),32));
    zext_ln613_22_fu_2687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_22_fu_2677_p4),32));
    zext_ln613_23_fu_2713_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_23_fu_2703_p4),32));
    zext_ln613_24_fu_2739_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_24_fu_2729_p4),32));
    zext_ln613_25_fu_2888_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_25_reg_5307),32));
    zext_ln613_26_fu_3031_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_26_reg_5332),32));
    zext_ln613_27_fu_3255_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_27_reg_5366),32));
    zext_ln613_2_fu_2119_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_2_fu_2109_p4),32));
    zext_ln613_3_fu_2145_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_3_fu_2135_p4),32));
    zext_ln613_4_fu_2171_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_4_fu_2161_p4),32));
    zext_ln613_5_fu_2197_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_5_fu_2187_p4),32));
    zext_ln613_6_fu_2223_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_6_fu_2213_p4),32));
    zext_ln613_7_fu_2249_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_7_fu_2239_p4),32));
    zext_ln613_8_fu_2275_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_8_fu_2265_p4),32));
    zext_ln613_9_fu_2301_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_9_fu_2291_p4),32));
    zext_ln613_fu_2046_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_reg_4562),32));
    zext_ln620_10_fu_2526_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln620_2_fu_2519_p3),29));
    zext_ln620_11_fu_2537_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln620_3_fu_2530_p3),29));
    zext_ln620_12_fu_3270_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln620_4_fu_3263_p3),31));
    zext_ln620_1_fu_2031_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(detl_load_reg_4546),29));
    zext_ln620_2_fu_2034_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(detl_load_reg_4546),28));
    zext_ln620_3_fu_2037_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(detl_load_reg_4546),27));
    zext_ln620_4_fu_3252_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(detl_load_reg_4546),31));
    zext_ln620_5_fu_2040_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(detl_load_reg_4546),26));
    zext_ln620_8_fu_2062_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln4_fu_2055_p3),25));
    zext_ln620_9_fu_2073_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln620_1_fu_2066_p3),25));
    zext_ln620_fu_2028_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(detl_load_reg_4546),30));
    zext_ln628_fu_3406_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_reg_pp0_iter0_mil_02_i_reg_710),64));
    zext_ln639_1_fu_3686_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln5_fu_3678_p3),23));
    zext_ln639_fu_3674_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nbl_i),23));
    zext_ln656_1_fu_3004_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd1_1_fu_2984_p4),64));
    zext_ln656_fu_3864_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd1_fu_3844_p4),64));
    zext_ln733_1_fu_4490_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd3_7_reg_5650),16));
    zext_ln733_2_fu_3720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd3_15_reg_5502),18));
    zext_ln733_3_fu_3723_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd3_15_reg_5502),16));
    zext_ln733_fu_4487_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd3_7_reg_5650),18));
    zext_ln759_1_fu_2840_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln10_fu_2832_p3),23));
    zext_ln759_fu_2828_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nbh_i),23));
    zl_1_fu_1531_p2 <= std_logic_vector(unsigned(add_ln589_3_fu_1525_p2) + unsigned(add_ln589_1_fu_1516_p2));
    zl_3_fu_1562_p2 <= std_logic_vector(unsigned(add_ln589_8_fu_1556_p2) + unsigned(add_ln589_6_fu_1547_p2));
end behav;
