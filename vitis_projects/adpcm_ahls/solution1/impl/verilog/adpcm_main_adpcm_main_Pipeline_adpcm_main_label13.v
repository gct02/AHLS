// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module adpcm_main_adpcm_main_Pipeline_adpcm_main_label13 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        compressed_address0,
        compressed_ce0,
        compressed_q0,
        result_address0,
        result_ce0,
        result_we0,
        result_d0,
        result_address1,
        result_ce1,
        result_we1,
        result_d1,
        dec_rlt1_i,
        dec_rlt1_o,
        dec_rlt1_o_ap_vld,
        dec_al1_i,
        dec_al1_o,
        dec_al1_o_ap_vld,
        dec_rlt2_i,
        dec_rlt2_o,
        dec_rlt2_o_ap_vld,
        dec_al2_i,
        dec_al2_o,
        dec_al2_o_ap_vld,
        dec_detl_i,
        dec_detl_o,
        dec_detl_o_ap_vld,
        il,
        dec_nbl_i,
        dec_nbl_o,
        dec_nbl_o_ap_vld,
        dec_plt1_i,
        dec_plt1_o,
        dec_plt1_o_ap_vld,
        dec_plt2_i,
        dec_plt2_o,
        dec_plt2_o_ap_vld,
        dec_rh1_i,
        dec_rh1_o,
        dec_rh1_o_ap_vld,
        dec_ah1_i,
        dec_ah1_o,
        dec_ah1_o_ap_vld,
        dec_rh2_i,
        dec_rh2_o,
        dec_rh2_o_ap_vld,
        dec_ah2_i,
        dec_ah2_o,
        dec_ah2_o_ap_vld,
        dec_deth_i,
        dec_deth_o,
        dec_deth_o_ap_vld,
        dec_nbh_i,
        dec_nbh_o,
        dec_nbh_o_ap_vld,
        dec_ph1_i,
        dec_ph1_o,
        dec_ph1_o_ap_vld,
        dec_ph2_i,
        dec_ph2_o,
        dec_ph2_o_ap_vld,
        dec_del_bpl_address0,
        dec_del_bpl_ce0,
        dec_del_bpl_we0,
        dec_del_bpl_d0,
        dec_del_bpl_q0,
        dec_del_bpl_address1,
        dec_del_bpl_ce1,
        dec_del_bpl_we1,
        dec_del_bpl_d1,
        dec_del_bpl_q1,
        dec_del_dltx_address0,
        dec_del_dltx_ce0,
        dec_del_dltx_we0,
        dec_del_dltx_d0,
        dec_del_dltx_q0,
        dec_del_dltx_address1,
        dec_del_dltx_ce1,
        dec_del_dltx_we1,
        dec_del_dltx_d1,
        dec_del_dltx_q1,
        dec_del_bph_address0,
        dec_del_bph_ce0,
        dec_del_bph_we0,
        dec_del_bph_d0,
        dec_del_bph_q0,
        dec_del_bph_address1,
        dec_del_bph_ce1,
        dec_del_bph_we1,
        dec_del_bph_d1,
        dec_del_bph_q1,
        dec_del_dhx_address0,
        dec_del_dhx_ce0,
        dec_del_dhx_we0,
        dec_del_dhx_d0,
        dec_del_dhx_q0,
        dec_del_dhx_address1,
        dec_del_dhx_ce1,
        dec_del_dhx_we1,
        dec_del_dhx_d1,
        dec_del_dhx_q1,
        accumc_address0,
        accumc_ce0,
        accumc_we0,
        accumc_d0,
        accumc_q0,
        accumc_address1,
        accumc_ce1,
        accumc_we1,
        accumc_d1,
        accumc_q1,
        accumd_address0,
        accumd_ce0,
        accumd_we0,
        accumd_d0,
        accumd_q0,
        accumd_address1,
        accumd_ce1,
        accumd_we1,
        accumd_d1,
        accumd_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 12'd1;
parameter    ap_ST_fsm_pp0_stage1 = 12'd2;
parameter    ap_ST_fsm_pp0_stage2 = 12'd4;
parameter    ap_ST_fsm_pp0_stage3 = 12'd8;
parameter    ap_ST_fsm_pp0_stage4 = 12'd16;
parameter    ap_ST_fsm_pp0_stage5 = 12'd32;
parameter    ap_ST_fsm_pp0_stage6 = 12'd64;
parameter    ap_ST_fsm_pp0_stage7 = 12'd128;
parameter    ap_ST_fsm_pp0_stage8 = 12'd256;
parameter    ap_ST_fsm_pp0_stage9 = 12'd512;
parameter    ap_ST_fsm_pp0_stage10 = 12'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] compressed_address0;
output   compressed_ce0;
input  [31:0] compressed_q0;
output  [12:0] result_address0;
output   result_ce0;
output   result_we0;
output  [31:0] result_d0;
output  [12:0] result_address1;
output   result_ce1;
output   result_we1;
output  [31:0] result_d1;
input  [30:0] dec_rlt1_i;
output  [30:0] dec_rlt1_o;
output   dec_rlt1_o_ap_vld;
input  [15:0] dec_al1_i;
output  [15:0] dec_al1_o;
output   dec_al1_o_ap_vld;
input  [30:0] dec_rlt2_i;
output  [30:0] dec_rlt2_o;
output   dec_rlt2_o_ap_vld;
input  [14:0] dec_al2_i;
output  [14:0] dec_al2_o;
output   dec_al2_o_ap_vld;
input  [14:0] dec_detl_i;
output  [14:0] dec_detl_o;
output   dec_detl_o_ap_vld;
input  [5:0] il;
input  [14:0] dec_nbl_i;
output  [14:0] dec_nbl_o;
output   dec_nbl_o_ap_vld;
input  [31:0] dec_plt1_i;
output  [31:0] dec_plt1_o;
output   dec_plt1_o_ap_vld;
input  [31:0] dec_plt2_i;
output  [31:0] dec_plt2_o;
output   dec_plt2_o_ap_vld;
input  [30:0] dec_rh1_i;
output  [30:0] dec_rh1_o;
output   dec_rh1_o_ap_vld;
input  [15:0] dec_ah1_i;
output  [15:0] dec_ah1_o;
output   dec_ah1_o_ap_vld;
input  [30:0] dec_rh2_i;
output  [30:0] dec_rh2_o;
output   dec_rh2_o_ap_vld;
input  [14:0] dec_ah2_i;
output  [14:0] dec_ah2_o;
output   dec_ah2_o_ap_vld;
input  [14:0] dec_deth_i;
output  [14:0] dec_deth_o;
output   dec_deth_o_ap_vld;
input  [14:0] dec_nbh_i;
output  [14:0] dec_nbh_o;
output   dec_nbh_o_ap_vld;
input  [31:0] dec_ph1_i;
output  [31:0] dec_ph1_o;
output   dec_ph1_o_ap_vld;
input  [31:0] dec_ph2_i;
output  [31:0] dec_ph2_o;
output   dec_ph2_o_ap_vld;
output  [2:0] dec_del_bpl_address0;
output   dec_del_bpl_ce0;
output   dec_del_bpl_we0;
output  [31:0] dec_del_bpl_d0;
input  [31:0] dec_del_bpl_q0;
output  [2:0] dec_del_bpl_address1;
output   dec_del_bpl_ce1;
output   dec_del_bpl_we1;
output  [31:0] dec_del_bpl_d1;
input  [31:0] dec_del_bpl_q1;
output  [2:0] dec_del_dltx_address0;
output   dec_del_dltx_ce0;
output   dec_del_dltx_we0;
output  [15:0] dec_del_dltx_d0;
input  [15:0] dec_del_dltx_q0;
output  [2:0] dec_del_dltx_address1;
output   dec_del_dltx_ce1;
output   dec_del_dltx_we1;
output  [15:0] dec_del_dltx_d1;
input  [15:0] dec_del_dltx_q1;
output  [2:0] dec_del_bph_address0;
output   dec_del_bph_ce0;
output   dec_del_bph_we0;
output  [31:0] dec_del_bph_d0;
input  [31:0] dec_del_bph_q0;
output  [2:0] dec_del_bph_address1;
output   dec_del_bph_ce1;
output   dec_del_bph_we1;
output  [31:0] dec_del_bph_d1;
input  [31:0] dec_del_bph_q1;
output  [2:0] dec_del_dhx_address0;
output   dec_del_dhx_ce0;
output   dec_del_dhx_we0;
output  [13:0] dec_del_dhx_d0;
input  [13:0] dec_del_dhx_q0;
output  [2:0] dec_del_dhx_address1;
output   dec_del_dhx_ce1;
output   dec_del_dhx_we1;
output  [13:0] dec_del_dhx_d1;
input  [13:0] dec_del_dhx_q1;
output  [3:0] accumc_address0;
output   accumc_ce0;
output   accumc_we0;
output  [31:0] accumc_d0;
input  [31:0] accumc_q0;
output  [3:0] accumc_address1;
output   accumc_ce1;
output   accumc_we1;
output  [31:0] accumc_d1;
input  [31:0] accumc_q1;
output  [3:0] accumd_address0;
output   accumd_ce0;
output   accumd_we0;
output  [31:0] accumd_d0;
input  [31:0] accumd_q0;
output  [3:0] accumd_address1;
output   accumd_ce1;
output   accumd_we1;
output  [31:0] accumd_d1;
input  [31:0] accumd_q1;

reg ap_idle;
reg compressed_ce0;
reg result_ce0;
reg result_we0;
reg result_ce1;
reg result_we1;
reg[30:0] dec_rlt1_o;
reg[15:0] dec_al1_o;
reg[30:0] dec_rlt2_o;
reg[14:0] dec_al2_o;
reg[14:0] dec_detl_o;
reg[14:0] dec_nbl_o;
reg[31:0] dec_plt1_o;
reg[31:0] dec_plt2_o;
reg[30:0] dec_rh1_o;
reg[15:0] dec_ah1_o;
reg[30:0] dec_rh2_o;
reg[14:0] dec_ah2_o;
reg[14:0] dec_deth_o;
reg[14:0] dec_nbh_o;
reg[31:0] dec_ph1_o;
reg[31:0] dec_ph2_o;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln782_reg_286;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11_subdone;
reg   [31:0] xout1;
reg   [31:0] xout2;
reg   [12:0] i_4_reg_279;
wire    ap_block_pp0_stage0_11001;
reg   [12:0] i_4_reg_279_pp0_iter1_reg;
wire   [0:0] icmp_ln782_fu_213_p2;
wire   [7:0] trunc_ln784_fu_234_p1;
reg   [7:0] trunc_ln784_reg_295;
wire    ap_block_pp0_stage1_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire    grp_decode_fu_142_ap_start;
wire    grp_decode_fu_142_ap_done;
wire    grp_decode_fu_142_ap_idle;
wire    grp_decode_fu_142_ap_ready;
wire   [30:0] grp_decode_fu_142_dec_rlt1_o;
wire    grp_decode_fu_142_dec_rlt1_o_ap_vld;
wire   [15:0] grp_decode_fu_142_dec_al1_o;
wire    grp_decode_fu_142_dec_al1_o_ap_vld;
wire   [30:0] grp_decode_fu_142_dec_rlt2_o;
wire    grp_decode_fu_142_dec_rlt2_o_ap_vld;
wire   [14:0] grp_decode_fu_142_dec_al2_o;
wire    grp_decode_fu_142_dec_al2_o_ap_vld;
wire   [14:0] grp_decode_fu_142_dec_detl_o;
wire    grp_decode_fu_142_dec_detl_o_ap_vld;
wire   [14:0] grp_decode_fu_142_dec_nbl_o;
wire    grp_decode_fu_142_dec_nbl_o_ap_vld;
wire   [31:0] grp_decode_fu_142_dec_plt1_o;
wire    grp_decode_fu_142_dec_plt1_o_ap_vld;
wire   [31:0] grp_decode_fu_142_dec_plt2_o;
wire    grp_decode_fu_142_dec_plt2_o_ap_vld;
wire   [30:0] grp_decode_fu_142_dec_rh1_o;
wire    grp_decode_fu_142_dec_rh1_o_ap_vld;
wire   [15:0] grp_decode_fu_142_dec_ah1_o;
wire    grp_decode_fu_142_dec_ah1_o_ap_vld;
wire   [30:0] grp_decode_fu_142_dec_rh2_o;
wire    grp_decode_fu_142_dec_rh2_o_ap_vld;
wire   [14:0] grp_decode_fu_142_dec_ah2_o;
wire    grp_decode_fu_142_dec_ah2_o_ap_vld;
wire   [14:0] grp_decode_fu_142_dec_deth_o;
wire    grp_decode_fu_142_dec_deth_o_ap_vld;
wire   [14:0] grp_decode_fu_142_dec_nbh_o;
wire    grp_decode_fu_142_dec_nbh_o_ap_vld;
wire   [31:0] grp_decode_fu_142_dec_ph1_o;
wire    grp_decode_fu_142_dec_ph1_o_ap_vld;
wire   [31:0] grp_decode_fu_142_dec_ph2_o;
wire    grp_decode_fu_142_dec_ph2_o_ap_vld;
wire   [31:0] grp_decode_fu_142_xout1;
wire    grp_decode_fu_142_xout1_ap_vld;
wire   [31:0] grp_decode_fu_142_xout2;
wire    grp_decode_fu_142_xout2_ap_vld;
wire   [2:0] grp_decode_fu_142_dec_del_bpl_address0;
wire    grp_decode_fu_142_dec_del_bpl_ce0;
wire    grp_decode_fu_142_dec_del_bpl_we0;
wire   [31:0] grp_decode_fu_142_dec_del_bpl_d0;
wire   [2:0] grp_decode_fu_142_dec_del_bpl_address1;
wire    grp_decode_fu_142_dec_del_bpl_ce1;
wire    grp_decode_fu_142_dec_del_bpl_we1;
wire   [31:0] grp_decode_fu_142_dec_del_bpl_d1;
wire   [2:0] grp_decode_fu_142_dec_del_dltx_address0;
wire    grp_decode_fu_142_dec_del_dltx_ce0;
wire    grp_decode_fu_142_dec_del_dltx_we0;
wire   [15:0] grp_decode_fu_142_dec_del_dltx_d0;
wire   [2:0] grp_decode_fu_142_dec_del_dltx_address1;
wire    grp_decode_fu_142_dec_del_dltx_ce1;
wire    grp_decode_fu_142_dec_del_dltx_we1;
wire   [15:0] grp_decode_fu_142_dec_del_dltx_d1;
wire   [2:0] grp_decode_fu_142_dec_del_bph_address0;
wire    grp_decode_fu_142_dec_del_bph_ce0;
wire    grp_decode_fu_142_dec_del_bph_we0;
wire   [31:0] grp_decode_fu_142_dec_del_bph_d0;
wire   [2:0] grp_decode_fu_142_dec_del_bph_address1;
wire    grp_decode_fu_142_dec_del_bph_ce1;
wire    grp_decode_fu_142_dec_del_bph_we1;
wire   [31:0] grp_decode_fu_142_dec_del_bph_d1;
wire   [2:0] grp_decode_fu_142_dec_del_dhx_address0;
wire    grp_decode_fu_142_dec_del_dhx_ce0;
wire    grp_decode_fu_142_dec_del_dhx_we0;
wire   [13:0] grp_decode_fu_142_dec_del_dhx_d0;
wire   [2:0] grp_decode_fu_142_dec_del_dhx_address1;
wire    grp_decode_fu_142_dec_del_dhx_ce1;
wire    grp_decode_fu_142_dec_del_dhx_we1;
wire   [13:0] grp_decode_fu_142_dec_del_dhx_d1;
wire   [3:0] grp_decode_fu_142_accumc_address0;
wire    grp_decode_fu_142_accumc_ce0;
wire    grp_decode_fu_142_accumc_we0;
wire   [31:0] grp_decode_fu_142_accumc_d0;
wire   [3:0] grp_decode_fu_142_accumc_address1;
wire    grp_decode_fu_142_accumc_ce1;
wire    grp_decode_fu_142_accumc_we1;
wire   [31:0] grp_decode_fu_142_accumc_d1;
wire   [3:0] grp_decode_fu_142_accumd_address0;
wire    grp_decode_fu_142_accumd_ce0;
wire    grp_decode_fu_142_accumd_we0;
wire   [31:0] grp_decode_fu_142_accumd_d0;
wire   [3:0] grp_decode_fu_142_accumd_address1;
wire    grp_decode_fu_142_accumd_ce1;
wire    grp_decode_fu_142_accumd_we1;
wire   [31:0] grp_decode_fu_142_accumd_d1;
reg    grp_decode_fu_142_ap_start_reg;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire   [63:0] zext_ln784_fu_229_p1;
wire   [63:0] zext_ln782_fu_248_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln786_fu_267_p1;
reg   [12:0] i_fu_100;
wire   [12:0] add_ln782_fu_238_p2;
wire    ap_block_pp0_stage11_11001;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_i_4;
wire   [11:0] tmp_s_fu_219_p4;
wire   [12:0] or_ln786_fu_262_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [11:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 xout1 = 32'd0;
#0 xout2 = 32'd0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_decode_fu_142_ap_start_reg = 1'b0;
#0 i_fu_100 = 13'd0;
#0 ap_done_reg = 1'b0;
end

adpcm_main_decode grp_decode_fu_142(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_decode_fu_142_ap_start),
    .ap_done(grp_decode_fu_142_ap_done),
    .ap_idle(grp_decode_fu_142_ap_idle),
    .ap_ready(grp_decode_fu_142_ap_ready),
    .input_r(trunc_ln784_reg_295),
    .dec_rlt1_i(dec_rlt1_i),
    .dec_rlt1_o(grp_decode_fu_142_dec_rlt1_o),
    .dec_rlt1_o_ap_vld(grp_decode_fu_142_dec_rlt1_o_ap_vld),
    .dec_al1_i(dec_al1_i),
    .dec_al1_o(grp_decode_fu_142_dec_al1_o),
    .dec_al1_o_ap_vld(grp_decode_fu_142_dec_al1_o_ap_vld),
    .dec_rlt2_i(dec_rlt2_i),
    .dec_rlt2_o(grp_decode_fu_142_dec_rlt2_o),
    .dec_rlt2_o_ap_vld(grp_decode_fu_142_dec_rlt2_o_ap_vld),
    .dec_al2_i(dec_al2_i),
    .dec_al2_o(grp_decode_fu_142_dec_al2_o),
    .dec_al2_o_ap_vld(grp_decode_fu_142_dec_al2_o_ap_vld),
    .dec_detl_i(dec_detl_i),
    .dec_detl_o(grp_decode_fu_142_dec_detl_o),
    .dec_detl_o_ap_vld(grp_decode_fu_142_dec_detl_o_ap_vld),
    .il(il),
    .dec_nbl_i(dec_nbl_i),
    .dec_nbl_o(grp_decode_fu_142_dec_nbl_o),
    .dec_nbl_o_ap_vld(grp_decode_fu_142_dec_nbl_o_ap_vld),
    .dec_plt1_i(dec_plt1_i),
    .dec_plt1_o(grp_decode_fu_142_dec_plt1_o),
    .dec_plt1_o_ap_vld(grp_decode_fu_142_dec_plt1_o_ap_vld),
    .dec_plt2_i(dec_plt2_i),
    .dec_plt2_o(grp_decode_fu_142_dec_plt2_o),
    .dec_plt2_o_ap_vld(grp_decode_fu_142_dec_plt2_o_ap_vld),
    .dec_rh1_i(dec_rh1_i),
    .dec_rh1_o(grp_decode_fu_142_dec_rh1_o),
    .dec_rh1_o_ap_vld(grp_decode_fu_142_dec_rh1_o_ap_vld),
    .dec_ah1_i(dec_ah1_i),
    .dec_ah1_o(grp_decode_fu_142_dec_ah1_o),
    .dec_ah1_o_ap_vld(grp_decode_fu_142_dec_ah1_o_ap_vld),
    .dec_rh2_i(dec_rh2_i),
    .dec_rh2_o(grp_decode_fu_142_dec_rh2_o),
    .dec_rh2_o_ap_vld(grp_decode_fu_142_dec_rh2_o_ap_vld),
    .dec_ah2_i(dec_ah2_i),
    .dec_ah2_o(grp_decode_fu_142_dec_ah2_o),
    .dec_ah2_o_ap_vld(grp_decode_fu_142_dec_ah2_o_ap_vld),
    .dec_deth_i(dec_deth_i),
    .dec_deth_o(grp_decode_fu_142_dec_deth_o),
    .dec_deth_o_ap_vld(grp_decode_fu_142_dec_deth_o_ap_vld),
    .dec_nbh_i(dec_nbh_i),
    .dec_nbh_o(grp_decode_fu_142_dec_nbh_o),
    .dec_nbh_o_ap_vld(grp_decode_fu_142_dec_nbh_o_ap_vld),
    .dec_ph1_i(dec_ph1_i),
    .dec_ph1_o(grp_decode_fu_142_dec_ph1_o),
    .dec_ph1_o_ap_vld(grp_decode_fu_142_dec_ph1_o_ap_vld),
    .dec_ph2_i(dec_ph2_i),
    .dec_ph2_o(grp_decode_fu_142_dec_ph2_o),
    .dec_ph2_o_ap_vld(grp_decode_fu_142_dec_ph2_o_ap_vld),
    .xout1(grp_decode_fu_142_xout1),
    .xout1_ap_vld(grp_decode_fu_142_xout1_ap_vld),
    .xout2(grp_decode_fu_142_xout2),
    .xout2_ap_vld(grp_decode_fu_142_xout2_ap_vld),
    .dec_del_bpl_address0(grp_decode_fu_142_dec_del_bpl_address0),
    .dec_del_bpl_ce0(grp_decode_fu_142_dec_del_bpl_ce0),
    .dec_del_bpl_we0(grp_decode_fu_142_dec_del_bpl_we0),
    .dec_del_bpl_d0(grp_decode_fu_142_dec_del_bpl_d0),
    .dec_del_bpl_q0(dec_del_bpl_q0),
    .dec_del_bpl_address1(grp_decode_fu_142_dec_del_bpl_address1),
    .dec_del_bpl_ce1(grp_decode_fu_142_dec_del_bpl_ce1),
    .dec_del_bpl_we1(grp_decode_fu_142_dec_del_bpl_we1),
    .dec_del_bpl_d1(grp_decode_fu_142_dec_del_bpl_d1),
    .dec_del_bpl_q1(dec_del_bpl_q1),
    .dec_del_dltx_address0(grp_decode_fu_142_dec_del_dltx_address0),
    .dec_del_dltx_ce0(grp_decode_fu_142_dec_del_dltx_ce0),
    .dec_del_dltx_we0(grp_decode_fu_142_dec_del_dltx_we0),
    .dec_del_dltx_d0(grp_decode_fu_142_dec_del_dltx_d0),
    .dec_del_dltx_q0(dec_del_dltx_q0),
    .dec_del_dltx_address1(grp_decode_fu_142_dec_del_dltx_address1),
    .dec_del_dltx_ce1(grp_decode_fu_142_dec_del_dltx_ce1),
    .dec_del_dltx_we1(grp_decode_fu_142_dec_del_dltx_we1),
    .dec_del_dltx_d1(grp_decode_fu_142_dec_del_dltx_d1),
    .dec_del_dltx_q1(dec_del_dltx_q1),
    .dec_del_bph_address0(grp_decode_fu_142_dec_del_bph_address0),
    .dec_del_bph_ce0(grp_decode_fu_142_dec_del_bph_ce0),
    .dec_del_bph_we0(grp_decode_fu_142_dec_del_bph_we0),
    .dec_del_bph_d0(grp_decode_fu_142_dec_del_bph_d0),
    .dec_del_bph_q0(dec_del_bph_q0),
    .dec_del_bph_address1(grp_decode_fu_142_dec_del_bph_address1),
    .dec_del_bph_ce1(grp_decode_fu_142_dec_del_bph_ce1),
    .dec_del_bph_we1(grp_decode_fu_142_dec_del_bph_we1),
    .dec_del_bph_d1(grp_decode_fu_142_dec_del_bph_d1),
    .dec_del_bph_q1(dec_del_bph_q1),
    .dec_del_dhx_address0(grp_decode_fu_142_dec_del_dhx_address0),
    .dec_del_dhx_ce0(grp_decode_fu_142_dec_del_dhx_ce0),
    .dec_del_dhx_we0(grp_decode_fu_142_dec_del_dhx_we0),
    .dec_del_dhx_d0(grp_decode_fu_142_dec_del_dhx_d0),
    .dec_del_dhx_q0(dec_del_dhx_q0),
    .dec_del_dhx_address1(grp_decode_fu_142_dec_del_dhx_address1),
    .dec_del_dhx_ce1(grp_decode_fu_142_dec_del_dhx_ce1),
    .dec_del_dhx_we1(grp_decode_fu_142_dec_del_dhx_we1),
    .dec_del_dhx_d1(grp_decode_fu_142_dec_del_dhx_d1),
    .dec_del_dhx_q1(dec_del_dhx_q1),
    .accumc_address0(grp_decode_fu_142_accumc_address0),
    .accumc_ce0(grp_decode_fu_142_accumc_ce0),
    .accumc_we0(grp_decode_fu_142_accumc_we0),
    .accumc_d0(grp_decode_fu_142_accumc_d0),
    .accumc_q0(accumc_q0),
    .accumc_address1(grp_decode_fu_142_accumc_address1),
    .accumc_ce1(grp_decode_fu_142_accumc_ce1),
    .accumc_we1(grp_decode_fu_142_accumc_we1),
    .accumc_d1(grp_decode_fu_142_accumc_d1),
    .accumc_q1(accumc_q1),
    .accumd_address0(grp_decode_fu_142_accumd_address0),
    .accumd_ce0(grp_decode_fu_142_accumd_ce0),
    .accumd_we0(grp_decode_fu_142_accumd_we0),
    .accumd_d0(grp_decode_fu_142_accumd_d0),
    .accumd_q0(accumd_q0),
    .accumd_address1(grp_decode_fu_142_accumd_address1),
    .accumd_ce1(grp_decode_fu_142_accumd_ce1),
    .accumd_we1(grp_decode_fu_142_accumd_we1),
    .accumd_d1(grp_decode_fu_142_accumd_d1),
    .accumd_q1(accumd_q1)
);

adpcm_main_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage11_subdone) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_decode_fu_142_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln782_reg_286 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_decode_fu_142_ap_start_reg <= 1'b1;
        end else if ((grp_decode_fu_142_ap_ready == 1'b1)) begin
            grp_decode_fu_142_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_100 <= 13'd0;
    end else if (((icmp_ln782_reg_286 == 1'd1) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        i_fu_100 <= add_ln782_fu_238_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_4_reg_279 <= ap_sig_allocacmp_i_4;
        i_4_reg_279_pp0_iter1_reg <= i_4_reg_279;
        icmp_ln782_reg_286 <= icmp_ln782_fu_213_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        trunc_ln784_reg_295 <= trunc_ln784_fu_234_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln782_reg_286 == 1'd1) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (grp_decode_fu_142_xout1_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        xout1 <= grp_decode_fu_142_xout1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln782_reg_286 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (grp_decode_fu_142_xout2_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xout2 <= grp_decode_fu_142_xout2;
    end
end

always @ (*) begin
    if (((icmp_ln782_reg_286 == 1'd0) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_4 = 13'd0;
    end else begin
        ap_sig_allocacmp_i_4 = i_fu_100;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compressed_ce0 = 1'b1;
    end else begin
        compressed_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln782_reg_286 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (grp_decode_fu_142_dec_ah1_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dec_ah1_o = grp_decode_fu_142_dec_ah1_o;
    end else begin
        dec_ah1_o = dec_ah1_i;
    end
end

always @ (*) begin
    if (((icmp_ln782_reg_286 == 1'd1) & (1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (grp_decode_fu_142_dec_ah2_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        dec_ah2_o = grp_decode_fu_142_dec_ah2_o;
    end else begin
        dec_ah2_o = dec_ah2_i;
    end
end

always @ (*) begin
    if (((icmp_ln782_reg_286 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (grp_decode_fu_142_dec_al1_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dec_al1_o = grp_decode_fu_142_dec_al1_o;
    end else begin
        dec_al1_o = dec_al1_i;
    end
end

always @ (*) begin
    if (((icmp_ln782_reg_286 == 1'd1) & (1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (grp_decode_fu_142_dec_al2_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        dec_al2_o = grp_decode_fu_142_dec_al2_o;
    end else begin
        dec_al2_o = dec_al2_i;
    end
end

always @ (*) begin
    if (((icmp_ln782_reg_286 == 1'd1) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (grp_decode_fu_142_dec_deth_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        dec_deth_o = grp_decode_fu_142_dec_deth_o;
    end else begin
        dec_deth_o = dec_deth_i;
    end
end

always @ (*) begin
    if (((icmp_ln782_reg_286 == 1'd1) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (grp_decode_fu_142_dec_detl_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        dec_detl_o = grp_decode_fu_142_dec_detl_o;
    end else begin
        dec_detl_o = dec_detl_i;
    end
end

always @ (*) begin
    if (((icmp_ln782_reg_286 == 1'd1) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (grp_decode_fu_142_dec_nbh_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        dec_nbh_o = grp_decode_fu_142_dec_nbh_o;
    end else begin
        dec_nbh_o = dec_nbh_i;
    end
end

always @ (*) begin
    if (((icmp_ln782_reg_286 == 1'd1) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (grp_decode_fu_142_dec_nbl_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        dec_nbl_o = grp_decode_fu_142_dec_nbl_o;
    end else begin
        dec_nbl_o = dec_nbl_i;
    end
end

always @ (*) begin
    if (((icmp_ln782_reg_286 == 1'd1) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (grp_decode_fu_142_dec_ph1_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        dec_ph1_o = grp_decode_fu_142_dec_ph1_o;
    end else begin
        dec_ph1_o = dec_ph1_i;
    end
end

always @ (*) begin
    if (((icmp_ln782_reg_286 == 1'd1) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (grp_decode_fu_142_dec_ph2_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        dec_ph2_o = grp_decode_fu_142_dec_ph2_o;
    end else begin
        dec_ph2_o = dec_ph2_i;
    end
end

always @ (*) begin
    if (((icmp_ln782_reg_286 == 1'd1) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (grp_decode_fu_142_dec_plt1_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        dec_plt1_o = grp_decode_fu_142_dec_plt1_o;
    end else begin
        dec_plt1_o = dec_plt1_i;
    end
end

always @ (*) begin
    if (((icmp_ln782_reg_286 == 1'd1) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (grp_decode_fu_142_dec_plt2_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        dec_plt2_o = grp_decode_fu_142_dec_plt2_o;
    end else begin
        dec_plt2_o = dec_plt2_i;
    end
end

always @ (*) begin
    if (((icmp_ln782_reg_286 == 1'd1) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (grp_decode_fu_142_dec_rh1_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        dec_rh1_o = grp_decode_fu_142_dec_rh1_o;
    end else begin
        dec_rh1_o = dec_rh1_i;
    end
end

always @ (*) begin
    if (((icmp_ln782_reg_286 == 1'd1) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (grp_decode_fu_142_dec_rh2_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        dec_rh2_o = grp_decode_fu_142_dec_rh2_o;
    end else begin
        dec_rh2_o = dec_rh2_i;
    end
end

always @ (*) begin
    if (((icmp_ln782_reg_286 == 1'd1) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (grp_decode_fu_142_dec_rlt1_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        dec_rlt1_o = grp_decode_fu_142_dec_rlt1_o;
    end else begin
        dec_rlt1_o = dec_rlt1_i;
    end
end

always @ (*) begin
    if (((icmp_ln782_reg_286 == 1'd1) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (grp_decode_fu_142_dec_rlt2_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        dec_rlt2_o = grp_decode_fu_142_dec_rlt2_o;
    end else begin
        dec_rlt2_o = dec_rlt2_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        result_ce0 = 1'b1;
    end else begin
        result_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        result_ce1 = 1'b1;
    end else begin
        result_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        result_we0 = 1'b1;
    end else begin
        result_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        result_we1 = 1'b1;
    end else begin
        result_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign accumc_address0 = grp_decode_fu_142_accumc_address0;

assign accumc_address1 = grp_decode_fu_142_accumc_address1;

assign accumc_ce0 = grp_decode_fu_142_accumc_ce0;

assign accumc_ce1 = grp_decode_fu_142_accumc_ce1;

assign accumc_d0 = grp_decode_fu_142_accumc_d0;

assign accumc_d1 = grp_decode_fu_142_accumc_d1;

assign accumc_we0 = grp_decode_fu_142_accumc_we0;

assign accumc_we1 = grp_decode_fu_142_accumc_we1;

assign accumd_address0 = grp_decode_fu_142_accumd_address0;

assign accumd_address1 = grp_decode_fu_142_accumd_address1;

assign accumd_ce0 = grp_decode_fu_142_accumd_ce0;

assign accumd_ce1 = grp_decode_fu_142_accumd_ce1;

assign accumd_d0 = grp_decode_fu_142_accumd_d0;

assign accumd_d1 = grp_decode_fu_142_accumd_d1;

assign accumd_we0 = grp_decode_fu_142_accumd_we0;

assign accumd_we1 = grp_decode_fu_142_accumd_we1;

assign add_ln782_fu_238_p2 = (i_4_reg_279 + 13'd2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign compressed_address0 = zext_ln784_fu_229_p1;

assign dec_ah1_o_ap_vld = grp_decode_fu_142_dec_ah1_o_ap_vld;

assign dec_ah2_o_ap_vld = grp_decode_fu_142_dec_ah2_o_ap_vld;

assign dec_al1_o_ap_vld = grp_decode_fu_142_dec_al1_o_ap_vld;

assign dec_al2_o_ap_vld = grp_decode_fu_142_dec_al2_o_ap_vld;

assign dec_del_bph_address0 = grp_decode_fu_142_dec_del_bph_address0;

assign dec_del_bph_address1 = grp_decode_fu_142_dec_del_bph_address1;

assign dec_del_bph_ce0 = grp_decode_fu_142_dec_del_bph_ce0;

assign dec_del_bph_ce1 = grp_decode_fu_142_dec_del_bph_ce1;

assign dec_del_bph_d0 = grp_decode_fu_142_dec_del_bph_d0;

assign dec_del_bph_d1 = grp_decode_fu_142_dec_del_bph_d1;

assign dec_del_bph_we0 = grp_decode_fu_142_dec_del_bph_we0;

assign dec_del_bph_we1 = grp_decode_fu_142_dec_del_bph_we1;

assign dec_del_bpl_address0 = grp_decode_fu_142_dec_del_bpl_address0;

assign dec_del_bpl_address1 = grp_decode_fu_142_dec_del_bpl_address1;

assign dec_del_bpl_ce0 = grp_decode_fu_142_dec_del_bpl_ce0;

assign dec_del_bpl_ce1 = grp_decode_fu_142_dec_del_bpl_ce1;

assign dec_del_bpl_d0 = grp_decode_fu_142_dec_del_bpl_d0;

assign dec_del_bpl_d1 = grp_decode_fu_142_dec_del_bpl_d1;

assign dec_del_bpl_we0 = grp_decode_fu_142_dec_del_bpl_we0;

assign dec_del_bpl_we1 = grp_decode_fu_142_dec_del_bpl_we1;

assign dec_del_dhx_address0 = grp_decode_fu_142_dec_del_dhx_address0;

assign dec_del_dhx_address1 = grp_decode_fu_142_dec_del_dhx_address1;

assign dec_del_dhx_ce0 = grp_decode_fu_142_dec_del_dhx_ce0;

assign dec_del_dhx_ce1 = grp_decode_fu_142_dec_del_dhx_ce1;

assign dec_del_dhx_d0 = grp_decode_fu_142_dec_del_dhx_d0;

assign dec_del_dhx_d1 = grp_decode_fu_142_dec_del_dhx_d1;

assign dec_del_dhx_we0 = grp_decode_fu_142_dec_del_dhx_we0;

assign dec_del_dhx_we1 = grp_decode_fu_142_dec_del_dhx_we1;

assign dec_del_dltx_address0 = grp_decode_fu_142_dec_del_dltx_address0;

assign dec_del_dltx_address1 = grp_decode_fu_142_dec_del_dltx_address1;

assign dec_del_dltx_ce0 = grp_decode_fu_142_dec_del_dltx_ce0;

assign dec_del_dltx_ce1 = grp_decode_fu_142_dec_del_dltx_ce1;

assign dec_del_dltx_d0 = grp_decode_fu_142_dec_del_dltx_d0;

assign dec_del_dltx_d1 = grp_decode_fu_142_dec_del_dltx_d1;

assign dec_del_dltx_we0 = grp_decode_fu_142_dec_del_dltx_we0;

assign dec_del_dltx_we1 = grp_decode_fu_142_dec_del_dltx_we1;

assign dec_deth_o_ap_vld = grp_decode_fu_142_dec_deth_o_ap_vld;

assign dec_detl_o_ap_vld = grp_decode_fu_142_dec_detl_o_ap_vld;

assign dec_nbh_o_ap_vld = grp_decode_fu_142_dec_nbh_o_ap_vld;

assign dec_nbl_o_ap_vld = grp_decode_fu_142_dec_nbl_o_ap_vld;

assign dec_ph1_o_ap_vld = grp_decode_fu_142_dec_ph1_o_ap_vld;

assign dec_ph2_o_ap_vld = grp_decode_fu_142_dec_ph2_o_ap_vld;

assign dec_plt1_o_ap_vld = grp_decode_fu_142_dec_plt1_o_ap_vld;

assign dec_plt2_o_ap_vld = grp_decode_fu_142_dec_plt2_o_ap_vld;

assign dec_rh1_o_ap_vld = grp_decode_fu_142_dec_rh1_o_ap_vld;

assign dec_rh2_o_ap_vld = grp_decode_fu_142_dec_rh2_o_ap_vld;

assign dec_rlt1_o_ap_vld = grp_decode_fu_142_dec_rlt1_o_ap_vld;

assign dec_rlt2_o_ap_vld = grp_decode_fu_142_dec_rlt2_o_ap_vld;

assign grp_decode_fu_142_ap_start = grp_decode_fu_142_ap_start_reg;

assign icmp_ln782_fu_213_p2 = ((ap_sig_allocacmp_i_4 < 13'd8000) ? 1'b1 : 1'b0);

assign or_ln786_fu_262_p2 = (i_4_reg_279_pp0_iter1_reg | 13'd1);

assign result_address0 = zext_ln786_fu_267_p1;

assign result_address1 = zext_ln782_fu_248_p1;

assign result_d0 = xout2;

assign result_d1 = xout1;

assign tmp_s_fu_219_p4 = {{ap_sig_allocacmp_i_4[12:1]}};

assign trunc_ln784_fu_234_p1 = compressed_q0[7:0];

assign zext_ln782_fu_248_p1 = i_4_reg_279_pp0_iter1_reg;

assign zext_ln784_fu_229_p1 = tmp_s_fu_219_p4;

assign zext_ln786_fu_267_p1 = or_ln786_fu_262_p2;

endmodule //adpcm_main_adpcm_main_Pipeline_adpcm_main_label13
