// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="SgdLR_SgdLR,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu35p-fsvh2104-1-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.647000,HLS_SYN_LAT=2893201,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=1443,HLS_SYN_LUT=1964,HLS_VERSION=2023_2}" *)

module SgdLR (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_address0,
        data_ce0,
        data_q0,
        label_r_address0,
        label_r_ce0,
        label_r_q0,
        theta_address0,
        theta_ce0,
        theta_we0,
        theta_d0,
        theta_q0,
        theta_address1,
        theta_ce1,
        theta_q1
);

parameter    ap_ST_fsm_state1 = 39'd1;
parameter    ap_ST_fsm_state2 = 39'd2;
parameter    ap_ST_fsm_state3 = 39'd4;
parameter    ap_ST_fsm_state4 = 39'd8;
parameter    ap_ST_fsm_state5 = 39'd16;
parameter    ap_ST_fsm_state6 = 39'd32;
parameter    ap_ST_fsm_state7 = 39'd64;
parameter    ap_ST_fsm_state8 = 39'd128;
parameter    ap_ST_fsm_state9 = 39'd256;
parameter    ap_ST_fsm_state10 = 39'd512;
parameter    ap_ST_fsm_state11 = 39'd1024;
parameter    ap_ST_fsm_state12 = 39'd2048;
parameter    ap_ST_fsm_state13 = 39'd4096;
parameter    ap_ST_fsm_state14 = 39'd8192;
parameter    ap_ST_fsm_state15 = 39'd16384;
parameter    ap_ST_fsm_state16 = 39'd32768;
parameter    ap_ST_fsm_state17 = 39'd65536;
parameter    ap_ST_fsm_state18 = 39'd131072;
parameter    ap_ST_fsm_state19 = 39'd262144;
parameter    ap_ST_fsm_state20 = 39'd524288;
parameter    ap_ST_fsm_state21 = 39'd1048576;
parameter    ap_ST_fsm_state22 = 39'd2097152;
parameter    ap_ST_fsm_state23 = 39'd4194304;
parameter    ap_ST_fsm_state24 = 39'd8388608;
parameter    ap_ST_fsm_state25 = 39'd16777216;
parameter    ap_ST_fsm_state26 = 39'd33554432;
parameter    ap_ST_fsm_state27 = 39'd67108864;
parameter    ap_ST_fsm_state28 = 39'd134217728;
parameter    ap_ST_fsm_state29 = 39'd268435456;
parameter    ap_ST_fsm_state30 = 39'd536870912;
parameter    ap_ST_fsm_state31 = 39'd1073741824;
parameter    ap_ST_fsm_state32 = 39'd2147483648;
parameter    ap_ST_fsm_state33 = 39'd4294967296;
parameter    ap_ST_fsm_state34 = 39'd8589934592;
parameter    ap_ST_fsm_state35 = 39'd17179869184;
parameter    ap_ST_fsm_state36 = 39'd34359738368;
parameter    ap_ST_fsm_state37 = 39'd68719476736;
parameter    ap_ST_fsm_state38 = 39'd137438953472;
parameter    ap_ST_fsm_state39 = 39'd274877906944;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [16:0] data_address0;
output   data_ce0;
input  [31:0] data_q0;
output  [6:0] label_r_address0;
output   label_r_ce0;
input  [7:0] label_r_q0;
output  [9:0] theta_address0;
output   theta_ce0;
output   theta_we0;
output  [31:0] theta_d0;
input  [31:0] theta_q0;
output  [9:0] theta_address1;
output   theta_ce1;
input  [31:0] theta_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[16:0] data_address0;
reg data_ce0;
reg label_r_ce0;
reg[9:0] theta_address0;
reg theta_ce0;
reg theta_we0;
reg theta_ce1;

(* fsm_encoding = "none" *) reg   [38:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] grp_fu_119_p2;
reg   [31:0] reg_137;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state35;
wire   [6:0] select_ln60_fu_177_p3;
reg   [6:0] select_ln60_reg_258;
wire    ap_CS_fsm_state2;
wire   [16:0] shl_ln_fu_201_p3;
reg   [16:0] shl_ln_reg_264;
wire    ap_CS_fsm_state3;
wire   [31:0] xor_ln26_fu_216_p2;
reg   [31:0] xor_ln26_reg_270;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire   [31:0] grp_fu_132_p2;
reg   [31:0] tmp_reg_280;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire   [31:0] grp_fu_124_p2;
reg   [31:0] prob_reg_295;
wire    ap_CS_fsm_state30;
wire   [31:0] grp_fu_129_p1;
reg   [31:0] conv_reg_300;
reg   [9:0] gradient_address0;
reg    gradient_ce0;
reg    gradient_we0;
wire   [31:0] gradient_q0;
wire    grp_SgdLR_Pipeline_DOT_fu_93_ap_start;
wire    grp_SgdLR_Pipeline_DOT_fu_93_ap_done;
wire    grp_SgdLR_Pipeline_DOT_fu_93_ap_idle;
wire    grp_SgdLR_Pipeline_DOT_fu_93_ap_ready;
wire   [9:0] grp_SgdLR_Pipeline_DOT_fu_93_theta_address0;
wire    grp_SgdLR_Pipeline_DOT_fu_93_theta_ce0;
wire   [16:0] grp_SgdLR_Pipeline_DOT_fu_93_data_address0;
wire    grp_SgdLR_Pipeline_DOT_fu_93_data_ce0;
wire   [31:0] grp_SgdLR_Pipeline_DOT_fu_93_result_out;
wire    grp_SgdLR_Pipeline_DOT_fu_93_result_out_ap_vld;
wire   [31:0] grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_119_p_din0;
wire   [31:0] grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_119_p_din1;
wire   [0:0] grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_119_p_opcode;
wire    grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_119_p_ce;
wire   [31:0] grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_305_p_din0;
wire   [31:0] grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_305_p_din1;
wire    grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_305_p_ce;
wire    grp_SgdLR_Pipeline_GRAD_fu_103_ap_start;
wire    grp_SgdLR_Pipeline_GRAD_fu_103_ap_done;
wire    grp_SgdLR_Pipeline_GRAD_fu_103_ap_idle;
wire    grp_SgdLR_Pipeline_GRAD_fu_103_ap_ready;
wire   [16:0] grp_SgdLR_Pipeline_GRAD_fu_103_data_address0;
wire    grp_SgdLR_Pipeline_GRAD_fu_103_data_ce0;
wire   [9:0] grp_SgdLR_Pipeline_GRAD_fu_103_gradient_address0;
wire    grp_SgdLR_Pipeline_GRAD_fu_103_gradient_ce0;
wire    grp_SgdLR_Pipeline_GRAD_fu_103_gradient_we0;
wire   [31:0] grp_SgdLR_Pipeline_GRAD_fu_103_gradient_d0;
wire   [31:0] grp_SgdLR_Pipeline_GRAD_fu_103_grp_fu_305_p_din0;
wire   [31:0] grp_SgdLR_Pipeline_GRAD_fu_103_grp_fu_305_p_din1;
wire    grp_SgdLR_Pipeline_GRAD_fu_103_grp_fu_305_p_ce;
wire    grp_SgdLR_Pipeline_UPDATE_fu_112_ap_start;
wire    grp_SgdLR_Pipeline_UPDATE_fu_112_ap_done;
wire    grp_SgdLR_Pipeline_UPDATE_fu_112_ap_idle;
wire    grp_SgdLR_Pipeline_UPDATE_fu_112_ap_ready;
wire   [9:0] grp_SgdLR_Pipeline_UPDATE_fu_112_gradient_address0;
wire    grp_SgdLR_Pipeline_UPDATE_fu_112_gradient_ce0;
wire   [9:0] grp_SgdLR_Pipeline_UPDATE_fu_112_theta_address0;
wire    grp_SgdLR_Pipeline_UPDATE_fu_112_theta_ce0;
wire    grp_SgdLR_Pipeline_UPDATE_fu_112_theta_we0;
wire   [31:0] grp_SgdLR_Pipeline_UPDATE_fu_112_theta_d0;
wire   [9:0] grp_SgdLR_Pipeline_UPDATE_fu_112_theta_address1;
wire    grp_SgdLR_Pipeline_UPDATE_fu_112_theta_ce1;
wire   [31:0] grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_119_p_din0;
wire   [31:0] grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_119_p_din1;
wire   [0:0] grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_119_p_opcode;
wire    grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_119_p_ce;
wire   [31:0] grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_305_p_din0;
wire   [31:0] grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_305_p_din1;
wire    grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_305_p_ce;
reg    grp_SgdLR_Pipeline_DOT_fu_93_ap_start_reg;
wire    ap_CS_fsm_state4;
reg    grp_SgdLR_Pipeline_GRAD_fu_103_ap_start_reg;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
reg    grp_SgdLR_Pipeline_UPDATE_fu_112_ap_start_reg;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire   [63:0] zext_ln63_fu_226_p1;
reg   [6:0] training_id_fu_64;
wire   [6:0] add_ln63_fu_185_p2;
wire   [0:0] icmp_ln60_fu_156_p2;
reg   [8:0] indvar_flatten_fu_68;
wire   [8:0] add_ln60_fu_162_p2;
reg   [31:0] grp_fu_119_p0;
reg   [31:0] grp_fu_119_p1;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state21;
wire   [31:0] grp_fu_129_p0;
wire   [31:0] grp_fu_132_p1;
wire   [0:0] icmp_ln63_fu_171_p2;
wire   [31:0] bitcast_ln26_fu_212_p1;
reg   [1:0] grp_fu_119_opcode;
reg    grp_fu_119_ce;
wire   [31:0] grp_fu_305_p2;
reg   [31:0] grp_fu_305_p0;
reg   [31:0] grp_fu_305_p1;
reg    grp_fu_305_ce;
reg   [38:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
reg    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
reg    ap_ST_fsm_state39_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 39'd1;
#0 grp_SgdLR_Pipeline_DOT_fu_93_ap_start_reg = 1'b0;
#0 grp_SgdLR_Pipeline_GRAD_fu_103_ap_start_reg = 1'b0;
#0 grp_SgdLR_Pipeline_UPDATE_fu_112_ap_start_reg = 1'b0;
#0 training_id_fu_64 = 7'd0;
#0 indvar_flatten_fu_68 = 9'd0;
end

SgdLR_gradient_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
gradient_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(gradient_address0),
    .ce0(gradient_ce0),
    .we0(gradient_we0),
    .d0(grp_SgdLR_Pipeline_GRAD_fu_103_gradient_d0),
    .q0(gradient_q0)
);

SgdLR_SgdLR_Pipeline_DOT grp_SgdLR_Pipeline_DOT_fu_93(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_SgdLR_Pipeline_DOT_fu_93_ap_start),
    .ap_done(grp_SgdLR_Pipeline_DOT_fu_93_ap_done),
    .ap_idle(grp_SgdLR_Pipeline_DOT_fu_93_ap_idle),
    .ap_ready(grp_SgdLR_Pipeline_DOT_fu_93_ap_ready),
    .theta_address0(grp_SgdLR_Pipeline_DOT_fu_93_theta_address0),
    .theta_ce0(grp_SgdLR_Pipeline_DOT_fu_93_theta_ce0),
    .theta_q0(theta_q0),
    .shl_ln(shl_ln_reg_264),
    .data_address0(grp_SgdLR_Pipeline_DOT_fu_93_data_address0),
    .data_ce0(grp_SgdLR_Pipeline_DOT_fu_93_data_ce0),
    .data_q0(data_q0),
    .result_out(grp_SgdLR_Pipeline_DOT_fu_93_result_out),
    .result_out_ap_vld(grp_SgdLR_Pipeline_DOT_fu_93_result_out_ap_vld),
    .grp_fu_119_p_din0(grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_119_p_din0),
    .grp_fu_119_p_din1(grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_119_p_din1),
    .grp_fu_119_p_opcode(grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_119_p_opcode),
    .grp_fu_119_p_dout0(grp_fu_119_p2),
    .grp_fu_119_p_ce(grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_119_p_ce),
    .grp_fu_305_p_din0(grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_305_p_din0),
    .grp_fu_305_p_din1(grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_305_p_din1),
    .grp_fu_305_p_dout0(grp_fu_305_p2),
    .grp_fu_305_p_ce(grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_305_p_ce)
);

SgdLR_SgdLR_Pipeline_GRAD grp_SgdLR_Pipeline_GRAD_fu_103(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_SgdLR_Pipeline_GRAD_fu_103_ap_start),
    .ap_done(grp_SgdLR_Pipeline_GRAD_fu_103_ap_done),
    .ap_idle(grp_SgdLR_Pipeline_GRAD_fu_103_ap_idle),
    .ap_ready(grp_SgdLR_Pipeline_GRAD_fu_103_ap_ready),
    .shl_ln(shl_ln_reg_264),
    .data_address0(grp_SgdLR_Pipeline_GRAD_fu_103_data_address0),
    .data_ce0(grp_SgdLR_Pipeline_GRAD_fu_103_data_ce0),
    .data_q0(data_q0),
    .scale_assign(reg_137),
    .gradient_address0(grp_SgdLR_Pipeline_GRAD_fu_103_gradient_address0),
    .gradient_ce0(grp_SgdLR_Pipeline_GRAD_fu_103_gradient_ce0),
    .gradient_we0(grp_SgdLR_Pipeline_GRAD_fu_103_gradient_we0),
    .gradient_d0(grp_SgdLR_Pipeline_GRAD_fu_103_gradient_d0),
    .grp_fu_305_p_din0(grp_SgdLR_Pipeline_GRAD_fu_103_grp_fu_305_p_din0),
    .grp_fu_305_p_din1(grp_SgdLR_Pipeline_GRAD_fu_103_grp_fu_305_p_din1),
    .grp_fu_305_p_dout0(grp_fu_305_p2),
    .grp_fu_305_p_ce(grp_SgdLR_Pipeline_GRAD_fu_103_grp_fu_305_p_ce)
);

SgdLR_SgdLR_Pipeline_UPDATE grp_SgdLR_Pipeline_UPDATE_fu_112(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_SgdLR_Pipeline_UPDATE_fu_112_ap_start),
    .ap_done(grp_SgdLR_Pipeline_UPDATE_fu_112_ap_done),
    .ap_idle(grp_SgdLR_Pipeline_UPDATE_fu_112_ap_idle),
    .ap_ready(grp_SgdLR_Pipeline_UPDATE_fu_112_ap_ready),
    .gradient_address0(grp_SgdLR_Pipeline_UPDATE_fu_112_gradient_address0),
    .gradient_ce0(grp_SgdLR_Pipeline_UPDATE_fu_112_gradient_ce0),
    .gradient_q0(gradient_q0),
    .theta_address0(grp_SgdLR_Pipeline_UPDATE_fu_112_theta_address0),
    .theta_ce0(grp_SgdLR_Pipeline_UPDATE_fu_112_theta_ce0),
    .theta_we0(grp_SgdLR_Pipeline_UPDATE_fu_112_theta_we0),
    .theta_d0(grp_SgdLR_Pipeline_UPDATE_fu_112_theta_d0),
    .theta_address1(grp_SgdLR_Pipeline_UPDATE_fu_112_theta_address1),
    .theta_ce1(grp_SgdLR_Pipeline_UPDATE_fu_112_theta_ce1),
    .theta_q1(theta_q1),
    .grp_fu_119_p_din0(grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_119_p_din0),
    .grp_fu_119_p_din1(grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_119_p_din1),
    .grp_fu_119_p_opcode(grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_119_p_opcode),
    .grp_fu_119_p_dout0(grp_fu_119_p2),
    .grp_fu_119_p_ce(grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_119_p_ce),
    .grp_fu_305_p_din0(grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_305_p_din0),
    .grp_fu_305_p_din1(grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_305_p_din1),
    .grp_fu_305_p_dout0(grp_fu_305_p2),
    .grp_fu_305_p_ce(grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_305_p_ce)
);

SgdLR_faddfsub_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_5_full_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_119_p0),
    .din1(grp_fu_119_p1),
    .opcode(grp_fu_119_opcode),
    .ce(grp_fu_119_ce),
    .dout(grp_fu_119_p2)
);

SgdLR_fdiv_32ns_32ns_32_10_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_10_no_dsp_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd1065353216),
    .din1(reg_137),
    .ce(1'b1),
    .dout(grp_fu_124_p2)
);

SgdLR_sitofp_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32ns_32_4_no_dsp_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_129_p0),
    .ce(1'b1),
    .dout(grp_fu_129_p1)
);

SgdLR_fexp_32ns_32ns_32_10_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fexp_32ns_32ns_32_10_full_dsp_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(grp_fu_132_p1),
    .ce(1'b1),
    .dout(grp_fu_132_p2)
);

SgdLR_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_305_p0),
    .din1(grp_fu_305_p1),
    .ce(grp_fu_305_ce),
    .dout(grp_fu_305_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_SgdLR_Pipeline_DOT_fu_93_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_SgdLR_Pipeline_DOT_fu_93_ap_start_reg <= 1'b1;
        end else if ((grp_SgdLR_Pipeline_DOT_fu_93_ap_ready == 1'b1)) begin
            grp_SgdLR_Pipeline_DOT_fu_93_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_SgdLR_Pipeline_GRAD_fu_103_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state36)) begin
            grp_SgdLR_Pipeline_GRAD_fu_103_ap_start_reg <= 1'b1;
        end else if ((grp_SgdLR_Pipeline_GRAD_fu_103_ap_ready == 1'b1)) begin
            grp_SgdLR_Pipeline_GRAD_fu_103_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_SgdLR_Pipeline_UPDATE_fu_112_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state38)) begin
            grp_SgdLR_Pipeline_UPDATE_fu_112_ap_start_reg <= 1'b1;
        end else if ((grp_SgdLR_Pipeline_UPDATE_fu_112_ap_ready == 1'b1)) begin
            grp_SgdLR_Pipeline_UPDATE_fu_112_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_fu_68 <= 9'd0;
    end else if (((icmp_ln60_fu_156_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_fu_68 <= add_ln60_fu_162_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        training_id_fu_64 <= 7'd0;
    end else if (((icmp_ln60_fu_156_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        training_id_fu_64 <= add_ln63_fu_185_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        conv_reg_300 <= grp_fu_129_p1;
        prob_reg_295 <= grp_fu_124_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state20))) begin
        reg_137 <= grp_fu_119_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        select_ln60_reg_258 <= select_ln60_fu_177_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        shl_ln_reg_264[16 : 10] <= shl_ln_fu_201_p3[16 : 10];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_reg_280 <= grp_fu_132_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        xor_ln26_reg_270 <= xor_ln26_fu_216_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

always @ (*) begin
    if ((grp_SgdLR_Pipeline_GRAD_fu_103_ap_done == 1'b0)) begin
        ap_ST_fsm_state37_blk = 1'b1;
    end else begin
        ap_ST_fsm_state37_blk = 1'b0;
    end
end

assign ap_ST_fsm_state38_blk = 1'b0;

always @ (*) begin
    if ((grp_SgdLR_Pipeline_UPDATE_fu_112_ap_done == 1'b0)) begin
        ap_ST_fsm_state39_blk = 1'b1;
    end else begin
        ap_ST_fsm_state39_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_SgdLR_Pipeline_DOT_fu_93_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln60_fu_156_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln60_fu_156_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        data_address0 = grp_SgdLR_Pipeline_GRAD_fu_103_data_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        data_address0 = grp_SgdLR_Pipeline_DOT_fu_93_data_address0;
    end else begin
        data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        data_ce0 = grp_SgdLR_Pipeline_GRAD_fu_103_data_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        data_ce0 = grp_SgdLR_Pipeline_DOT_fu_93_data_ce0;
    end else begin
        data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        gradient_address0 = grp_SgdLR_Pipeline_UPDATE_fu_112_gradient_address0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        gradient_address0 = grp_SgdLR_Pipeline_GRAD_fu_103_gradient_address0;
    end else begin
        gradient_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        gradient_ce0 = grp_SgdLR_Pipeline_UPDATE_fu_112_gradient_ce0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        gradient_ce0 = grp_SgdLR_Pipeline_GRAD_fu_103_gradient_ce0;
    end else begin
        gradient_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        gradient_we0 = grp_SgdLR_Pipeline_GRAD_fu_103_gradient_we0;
    end else begin
        gradient_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_119_ce = grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_119_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_119_ce = grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_119_p_ce;
    end else begin
        grp_fu_119_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_119_opcode = grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_119_p_opcode;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_119_opcode = grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_119_p_opcode;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_119_opcode = 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_119_opcode = 2'd0;
    end else begin
        grp_fu_119_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_119_p0 = grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_119_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_119_p0 = grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_119_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_119_p0 = prob_reg_295;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_119_p0 = tmp_reg_280;
    end else begin
        grp_fu_119_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_119_p1 = grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_119_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_119_p1 = grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_119_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_119_p1 = conv_reg_300;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_119_p1 = 32'd1065353216;
    end else begin
        grp_fu_119_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_305_ce = grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_305_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_305_ce = grp_SgdLR_Pipeline_GRAD_fu_103_grp_fu_305_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_305_ce = grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_305_p_ce;
    end else begin
        grp_fu_305_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_305_p0 = grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_305_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_305_p0 = grp_SgdLR_Pipeline_GRAD_fu_103_grp_fu_305_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_305_p0 = grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_305_p_din0;
    end else begin
        grp_fu_305_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_305_p1 = grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_305_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_305_p1 = grp_SgdLR_Pipeline_GRAD_fu_103_grp_fu_305_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_305_p1 = grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_305_p_din1;
    end else begin
        grp_fu_305_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        label_r_ce0 = 1'b1;
    end else begin
        label_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        theta_address0 = grp_SgdLR_Pipeline_UPDATE_fu_112_theta_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        theta_address0 = grp_SgdLR_Pipeline_DOT_fu_93_theta_address0;
    end else begin
        theta_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        theta_ce0 = grp_SgdLR_Pipeline_UPDATE_fu_112_theta_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        theta_ce0 = grp_SgdLR_Pipeline_DOT_fu_93_theta_ce0;
    end else begin
        theta_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        theta_ce1 = grp_SgdLR_Pipeline_UPDATE_fu_112_theta_ce1;
    end else begin
        theta_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        theta_we0 = grp_SgdLR_Pipeline_UPDATE_fu_112_theta_we0;
    end else begin
        theta_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln60_fu_156_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_SgdLR_Pipeline_DOT_fu_93_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((1'b1 == ap_CS_fsm_state37) & (grp_SgdLR_Pipeline_GRAD_fu_103_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            if (((grp_SgdLR_Pipeline_UPDATE_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln60_fu_162_p2 = (indvar_flatten_fu_68 + 9'd1);

assign add_ln63_fu_185_p2 = (select_ln60_fu_177_p3 + 7'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign bitcast_ln26_fu_212_p1 = grp_SgdLR_Pipeline_DOT_fu_93_result_out;

assign grp_SgdLR_Pipeline_DOT_fu_93_ap_start = grp_SgdLR_Pipeline_DOT_fu_93_ap_start_reg;

assign grp_SgdLR_Pipeline_GRAD_fu_103_ap_start = grp_SgdLR_Pipeline_GRAD_fu_103_ap_start_reg;

assign grp_SgdLR_Pipeline_UPDATE_fu_112_ap_start = grp_SgdLR_Pipeline_UPDATE_fu_112_ap_start_reg;

assign grp_fu_129_p0 = label_r_q0;

assign grp_fu_132_p1 = xor_ln26_reg_270;

assign icmp_ln60_fu_156_p2 = ((indvar_flatten_fu_68 == 9'd400) ? 1'b1 : 1'b0);

assign icmp_ln63_fu_171_p2 = ((training_id_fu_64 == 7'd80) ? 1'b1 : 1'b0);

assign label_r_address0 = zext_ln63_fu_226_p1;

assign select_ln60_fu_177_p3 = ((icmp_ln63_fu_171_p2[0:0] == 1'b1) ? 7'd0 : training_id_fu_64);

assign shl_ln_fu_201_p3 = {{select_ln60_reg_258}, {10'd0}};

assign theta_address1 = grp_SgdLR_Pipeline_UPDATE_fu_112_theta_address1;

assign theta_d0 = grp_SgdLR_Pipeline_UPDATE_fu_112_theta_d0;

assign xor_ln26_fu_216_p2 = (bitcast_ln26_fu_212_p1 ^ 32'd2147483648);

assign zext_ln63_fu_226_p1 = select_ln60_reg_258;

always @ (posedge ap_clk) begin
    shl_ln_reg_264[9:0] <= 10'b0000000000;
end

endmodule //SgdLR
