

================================================================
== Vitis HLS Report for 'huff_make_dhuff_tb_1_Pipeline_VITIS_LOOP_650_4'
================================================================
* Date:           Tue Jun 18 12:24:16 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        jpeg_ahls
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplusHBM
* Target device:  xcvu35p-fsvh2104-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  5.00 ns|  2.909 ns|     1.35 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_650_4  |        ?|        ?|         2|          2|          1|     ?|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 2, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.90>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%code_1 = alloca i32 1" [benchmarks/chstone/jpeg/src/jpeg_decode.c:628]   --->   Operation 5 'alloca' 'code_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%p = alloca i32 1" [benchmarks/chstone/jpeg/src/jpeg_decode.c:628]   --->   Operation 6 'alloca' 'p' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%size_4_read = read i5 @_ssdm_op_Read.ap_auto.i5, i5 %size_4"   --->   Operation 7 'read' 'size_4_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%code_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %code"   --->   Operation 8 'read' 'code_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%sext_ln650_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %sext_ln650"   --->   Operation 9 'read' 'sext_ln650_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%sext_ln650_cast = sext i32 %sext_ln650_read"   --->   Operation 10 'sext' 'sext_ln650_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.46ns)   --->   "%store_ln628 = store i34 %sext_ln650_cast, i34 %p" [benchmarks/chstone/jpeg/src/jpeg_decode.c:628]   --->   Operation 11 'store' 'store_ln628' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 12 [1/1] (0.46ns)   --->   "%store_ln628 = store i32 %code_read, i32 %code_1" [benchmarks/chstone/jpeg/src/jpeg_decode.c:628]   --->   Operation 12 'store' 'store_ln628' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%br_ln0 = br void %do.cond"   --->   Operation 13 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%code_6 = load i32 %code_1" [benchmarks/chstone/jpeg/src/jpeg_decode.c:651]   --->   Operation 14 'load' 'code_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%p_6 = load i34 %p" [benchmarks/chstone/jpeg/src/jpeg_decode.c:651]   --->   Operation 15 'load' 'p_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%zext_ln628 = zext i34 %p_6" [benchmarks/chstone/jpeg/src/jpeg_decode.c:628]   --->   Operation 16 'zext' 'zext_ln628' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (1.14ns)   --->   "%code_7 = add i32 %code_6, i32 1" [benchmarks/chstone/jpeg/src/jpeg_decode.c:651]   --->   Operation 17 'add' 'code_7' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%trunc_ln628 = trunc i32 %code_7" [benchmarks/chstone/jpeg/src/jpeg_decode.c:628]   --->   Operation 18 'trunc' 'trunc_ln628' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (1.15ns)   --->   "%add_ln651 = add i34 %p_6, i34 1" [benchmarks/chstone/jpeg/src/jpeg_decode.c:651]   --->   Operation 19 'add' 'add_ln651' <Predicate = true> <Delay = 1.15> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%trunc_ln651 = trunc i34 %add_ln651" [benchmarks/chstone/jpeg/src/jpeg_decode.c:651]   --->   Operation 20 'trunc' 'trunc_ln651' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln651 = zext i34 %add_ln651" [benchmarks/chstone/jpeg/src/jpeg_decode.c:651]   --->   Operation 21 'zext' 'zext_ln651' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%huffcode_addr = getelementptr i32 %huffcode, i64 0, i64 %zext_ln628" [benchmarks/chstone/jpeg/src/jpeg_decode.c:651]   --->   Operation 22 'getelementptr' 'huffcode_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (1.29ns)   --->   "%store_ln651 = store i32 %code_6, i9 %huffcode_addr" [benchmarks/chstone/jpeg/src/jpeg_decode.c:651]   --->   Operation 23 'store' 'store_ln651' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 257> <RAM>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%huffsize_addr = getelementptr i5 %huffsize, i64 0, i64 %zext_ln651" [benchmarks/chstone/jpeg/src/jpeg_decode.c:652]   --->   Operation 24 'getelementptr' 'huffsize_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [2/2] (1.29ns)   --->   "%huffsize_load = load i9 %huffsize_addr" [benchmarks/chstone/jpeg/src/jpeg_decode.c:652]   --->   Operation 25 'load' 'huffsize_load' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 257> <RAM>
ST_1 : Operation 26 [1/1] (1.15ns)   --->   "%icmp_ln652_2 = icmp_slt  i34 %add_ln651, i34 257" [benchmarks/chstone/jpeg/src/jpeg_decode.c:652]   --->   Operation 26 'icmp' 'icmp_ln652_2' <Predicate = true> <Delay = 1.15> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.46ns)   --->   "%store_ln628 = store i34 %add_ln651, i34 %p" [benchmarks/chstone/jpeg/src/jpeg_decode.c:628]   --->   Operation 27 'store' 'store_ln628' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 28 [1/1] (0.46ns)   --->   "%store_ln628 = store i32 %code_7, i32 %code_1" [benchmarks/chstone/jpeg/src/jpeg_decode.c:628]   --->   Operation 28 'store' 'store_ln628' <Predicate = true> <Delay = 0.46>

State 2 <SV = 1> <Delay = 2.26>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%specpipeline_ln628 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_17" [benchmarks/chstone/jpeg/src/jpeg_decode.c:628]   --->   Operation 29 'specpipeline' 'specpipeline_ln628' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%specloopname_ln650 = specloopname void @_ssdm_op_SpecLoopName, void @empty_21" [benchmarks/chstone/jpeg/src/jpeg_decode.c:650]   --->   Operation 30 'specloopname' 'specloopname_ln650' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/2] (1.29ns)   --->   "%huffsize_load = load i9 %huffsize_addr" [benchmarks/chstone/jpeg/src/jpeg_decode.c:652]   --->   Operation 31 'load' 'huffsize_load' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 257> <RAM>
ST_2 : Operation 32 [1/1] (0.82ns)   --->   "%icmp_ln652 = icmp_eq  i5 %huffsize_load, i5 %size_4_read" [benchmarks/chstone/jpeg/src/jpeg_decode.c:652]   --->   Operation 32 'icmp' 'icmp_ln652' <Predicate = true> <Delay = 0.82> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.14ns)   --->   "%and_ln652 = and i1 %icmp_ln652, i1 %icmp_ln652_2" [benchmarks/chstone/jpeg/src/jpeg_decode.c:652]   --->   Operation 33 'and' 'and_ln652' <Predicate = true> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%br_ln652 = br i1 %and_ln652, void %do.end.exitStub, void %do.cond" [benchmarks/chstone/jpeg/src/jpeg_decode.c:652]   --->   Operation 34 'br' 'br_ln652' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%write_ln628 = write void @_ssdm_op_Write.ap_auto.i31P0A, i31 %code_4_out, i31 %trunc_ln628" [benchmarks/chstone/jpeg/src/jpeg_decode.c:628]   --->   Operation 35 'write' 'write_ln628' <Predicate = (!and_ln652)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%write_ln651 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %add_ln651_out, i32 %trunc_ln651" [benchmarks/chstone/jpeg/src/jpeg_decode.c:651]   --->   Operation 36 'write' 'write_ln651' <Predicate = (!and_ln652)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%write_ln652 = write void @_ssdm_op_Write.ap_auto.i5P0A, i5 %huffsize_load_out, i5 %huffsize_load" [benchmarks/chstone/jpeg/src/jpeg_decode.c:652]   --->   Operation 37 'write' 'write_ln652' <Predicate = (!and_ln652)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 38 'ret' 'ret_ln0' <Predicate = (!and_ln652)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5.000ns, clock uncertainty: 1.350ns.

 <State 1>: 2.909ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln628', benchmarks/chstone/jpeg/src/jpeg_decode.c:628) of variable 'sext_ln650_cast' on local variable 'p', benchmarks/chstone/jpeg/src/jpeg_decode.c:628 [15]  (0.460 ns)
	'load' operation 34 bit ('p', benchmarks/chstone/jpeg/src/jpeg_decode.c:651) on local variable 'p', benchmarks/chstone/jpeg/src/jpeg_decode.c:628 [20]  (0.000 ns)
	'add' operation 34 bit ('add_ln651', benchmarks/chstone/jpeg/src/jpeg_decode.c:651) [26]  (1.152 ns)
	'getelementptr' operation 9 bit ('huffsize_addr', benchmarks/chstone/jpeg/src/jpeg_decode.c:652) [31]  (0.000 ns)
	'load' operation 5 bit ('huffsize_load', benchmarks/chstone/jpeg/src/jpeg_decode.c:652) on array 'huffsize' [32]  (1.297 ns)

 <State 2>: 2.270ns
The critical path consists of the following:
	'load' operation 5 bit ('huffsize_load', benchmarks/chstone/jpeg/src/jpeg_decode.c:652) on array 'huffsize' [32]  (1.297 ns)
	'icmp' operation 1 bit ('icmp_ln652', benchmarks/chstone/jpeg/src/jpeg_decode.c:652) [33]  (0.825 ns)
	'and' operation 1 bit ('and_ln652', benchmarks/chstone/jpeg/src/jpeg_decode.c:652) [35]  (0.148 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
