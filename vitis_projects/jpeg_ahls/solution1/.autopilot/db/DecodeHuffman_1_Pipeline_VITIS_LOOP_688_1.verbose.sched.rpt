

================================================================
== Vitis HLS Report for 'DecodeHuffman_1_Pipeline_VITIS_LOOP_688_1'
================================================================
* Date:           Tue Jun 18 12:24:18 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        jpeg_ahls
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplusHBM
* Target device:  xcvu35p-fsvh2104-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  5.00 ns|  2.899 ns|     1.35 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_688_1  |        ?|        ?|         3|          2|          1|     ?|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 2, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.75>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%code_8 = alloca i32 1" [benchmarks/chstone/jpeg/src/jpeg_decode.c:685]   --->   Operation 6 'alloca' 'code_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%l = alloca i32 1" [benchmarks/chstone/jpeg/src/jpeg_decode.c:685]   --->   Operation 7 'alloca' 'l' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%zext_ln577_3_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %zext_ln577_3"   --->   Operation 8 'read' 'zext_ln577_3_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%zext_ln577_3_cast = zext i1 %zext_ln577_3_read"   --->   Operation 9 'zext' 'zext_ln577_3_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.46ns)   --->   "%store_ln685 = store i64 1, i64 %l" [benchmarks/chstone/jpeg/src/jpeg_decode.c:685]   --->   Operation 10 'store' 'store_ln685' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 11 [1/1] (0.46ns)   --->   "%store_ln685 = store i32 %zext_ln577_3_cast, i32 %code_8" [benchmarks/chstone/jpeg/src/jpeg_decode.c:685]   --->   Operation 11 'store' 'store_ln685' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.cond"   --->   Operation 12 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%l_2 = load i64 %l" [benchmarks/chstone/jpeg/src/jpeg_decode.c:688]   --->   Operation 13 'load' 'l_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%trunc_ln688 = trunc i64 %l_2" [benchmarks/chstone/jpeg/src/jpeg_decode.c:688]   --->   Operation 14 'trunc' 'trunc_ln688' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%p_jinfo_dc_dhuff_tbl_maxcode_addr = getelementptr i32 %p_jinfo_dc_dhuff_tbl_maxcode, i64 0, i64 %l_2" [benchmarks/chstone/jpeg/src/jpeg_decode.c:688]   --->   Operation 15 'getelementptr' 'p_jinfo_dc_dhuff_tbl_maxcode_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [2/2] (1.29ns)   --->   "%p_jinfo_dc_dhuff_tbl_maxcode_load = load i7 %p_jinfo_dc_dhuff_tbl_maxcode_addr" [benchmarks/chstone/jpeg/src/jpeg_decode.c:688]   --->   Operation 16 'load' 'p_jinfo_dc_dhuff_tbl_maxcode_load' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 72> <RAM>

State 2 <SV = 1> <Delay = 2.89>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%code = load i32 %code_8" [benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 17 'load' 'code' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/2] (1.29ns)   --->   "%p_jinfo_dc_dhuff_tbl_maxcode_load = load i7 %p_jinfo_dc_dhuff_tbl_maxcode_addr" [benchmarks/chstone/jpeg/src/jpeg_decode.c:688]   --->   Operation 18 'load' 'p_jinfo_dc_dhuff_tbl_maxcode_load' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 72> <RAM>
ST_2 : Operation 19 [1/1] (1.14ns)   --->   "%icmp_ln688 = icmp_sgt  i32 %code, i32 %p_jinfo_dc_dhuff_tbl_maxcode_load" [benchmarks/chstone/jpeg/src/jpeg_decode.c:688]   --->   Operation 19 'icmp' 'icmp_ln688' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%br_ln688 = br i1 %icmp_ln688, void %for.end_ifconv.exitStub, void %for.inc" [benchmarks/chstone/jpeg/src/jpeg_decode.c:688]   --->   Operation 20 'br' 'br_ln688' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%specpipeline_ln689 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_17" [benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 21 'specpipeline' 'specpipeline_ln689' <Predicate = (icmp_ln688)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%specloopname_ln688 = specloopname void @_ssdm_op_SpecLoopName, void @empty_33" [benchmarks/chstone/jpeg/src/jpeg_decode.c:688]   --->   Operation 22 'specloopname' 'specloopname_ln688' <Predicate = (icmp_ln688)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%read_position_load = load i32 %read_position" [benchmarks/chstone/jpeg/src/jpeg_decode.c:572->benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 23 'load' 'read_position_load' <Predicate = (icmp_ln688)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %read_position_load, i32 31" [benchmarks/chstone/jpeg/src/jpeg_decode.c:572->benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 24 'bitselect' 'tmp' <Predicate = (icmp_ln688)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.46ns)   --->   "%br_ln572 = br i1 %tmp, void %buf_getb.exit13, void %if.then.i6" [benchmarks/chstone/jpeg/src/jpeg_decode.c:572->benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 25 'br' 'br_ln572' <Predicate = (icmp_ln688)> <Delay = 0.46>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%temp = load i8 %CurHuffReadBuf" [benchmarks/chstone/jpeg/src/jpeg_decode.c:555->benchmarks/chstone/jpeg/src/jpeg_decode.c:573->benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 26 'load' 'temp' <Predicate = (icmp_ln688 & tmp)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.87ns)   --->   "%add_ln555 = add i8 %temp, i8 1" [benchmarks/chstone/jpeg/src/jpeg_decode.c:555->benchmarks/chstone/jpeg/src/jpeg_decode.c:573->benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 27 'add' 'add_ln555' <Predicate = (icmp_ln688 & tmp)> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln555 = zext i8 %temp" [benchmarks/chstone/jpeg/src/jpeg_decode.c:555->benchmarks/chstone/jpeg/src/jpeg_decode.c:573->benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 28 'zext' 'zext_ln555' <Predicate = (icmp_ln688 & tmp)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.87ns)   --->   "%icmp_ln555 = icmp_eq  i8 %temp, i8 255" [benchmarks/chstone/jpeg/src/jpeg_decode.c:555->benchmarks/chstone/jpeg/src/jpeg_decode.c:573->benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 29 'icmp' 'icmp_ln555' <Predicate = (icmp_ln688 & tmp)> <Delay = 0.87> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.40ns)   --->   "%select_ln555 = select i1 %icmp_ln555, i8 1, i8 %add_ln555" [benchmarks/chstone/jpeg/src/jpeg_decode.c:555->benchmarks/chstone/jpeg/src/jpeg_decode.c:573->benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 30 'select' 'select_ln555' <Predicate = (icmp_ln688 & tmp)> <Delay = 0.40> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%store_ln555 = store i8 %select_ln555, i8 %CurHuffReadBuf" [benchmarks/chstone/jpeg/src/jpeg_decode.c:555->benchmarks/chstone/jpeg/src/jpeg_decode.c:573->benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 31 'store' 'store_ln555' <Predicate = (icmp_ln688 & tmp)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%store_ln573 = store i32 %zext_ln555, i32 %current_read_byte" [benchmarks/chstone/jpeg/src/jpeg_decode.c:573->benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 32 'store' 'store_ln573' <Predicate = (icmp_ln688 & tmp)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.46ns)   --->   "%br_ln575 = br void %buf_getb.exit13" [benchmarks/chstone/jpeg/src/jpeg_decode.c:575->benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 33 'br' 'br_ln575' <Predicate = (icmp_ln688 & tmp)> <Delay = 0.46>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%empty = phi i32 7, void %if.then.i6, i32 %read_position_load, void %for.inc" [benchmarks/chstone/jpeg/src/jpeg_decode.c:572->benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 34 'phi' 'empty' <Predicate = (icmp_ln688)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (1.14ns)   --->   "%add_ln577 = add i32 %empty, i32 4294967295" [benchmarks/chstone/jpeg/src/jpeg_decode.c:577->benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 35 'add' 'add_ln577' <Predicate = (icmp_ln688)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%store_ln577 = store i32 %add_ln577, i32 %read_position" [benchmarks/chstone/jpeg/src/jpeg_decode.c:577->benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 36 'store' 'store_ln577' <Predicate = (icmp_ln688)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln577 = zext i32 %empty" [benchmarks/chstone/jpeg/src/jpeg_decode.c:577->benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 37 'zext' 'zext_ln577' <Predicate = (icmp_ln688)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%bit_set_mask_addr = getelementptr i32 %bit_set_mask, i64 0, i64 %zext_ln577" [benchmarks/chstone/jpeg/src/jpeg_decode.c:577->benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 38 'getelementptr' 'bit_set_mask_addr' <Predicate = (icmp_ln688)> <Delay = 0.00>
ST_2 : Operation 39 [2/2] (1.29ns)   --->   "%bit_set_mask_load = load i5 %bit_set_mask_addr" [benchmarks/chstone/jpeg/src/jpeg_decode.c:577->benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 39 'load' 'bit_set_mask_load' <Predicate = (icmp_ln688)> <Delay = 1.29> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 32> <ROM>
ST_2 : Operation 40 [1/1] (1.36ns)   --->   "%add_ln688 = add i64 %l_2, i64 1" [benchmarks/chstone/jpeg/src/jpeg_decode.c:688]   --->   Operation 40 'add' 'add_ln688' <Predicate = (icmp_ln688)> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.46ns)   --->   "%store_ln685 = store i64 %add_ln688, i64 %l" [benchmarks/chstone/jpeg/src/jpeg_decode.c:685]   --->   Operation 41 'store' 'store_ln685' <Predicate = (icmp_ln688)> <Delay = 0.46>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%write_ln688 = write void @_ssdm_op_Write.ap_auto.i7P0A, i7 %l_out, i7 %trunc_ln688" [benchmarks/chstone/jpeg/src/jpeg_decode.c:688]   --->   Operation 50 'write' 'write_ln688' <Predicate = (!icmp_ln688)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%write_ln689 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %code_8_out, i32 %code" [benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 51 'write' 'write_ln689' <Predicate = (!icmp_ln688)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 52 'ret' 'ret_ln0' <Predicate = (!icmp_ln688)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.89>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%current_read_byte_load = load i32 %current_read_byte" [benchmarks/chstone/jpeg/src/jpeg_decode.c:577->benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 42 'load' 'current_read_byte_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 43 [1/2] (1.29ns)   --->   "%bit_set_mask_load = load i5 %bit_set_mask_addr" [benchmarks/chstone/jpeg/src/jpeg_decode.c:577->benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 43 'load' 'bit_set_mask_load' <Predicate = true> <Delay = 1.29> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 32> <ROM>
ST_3 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln577)   --->   "%and_ln577 = and i32 %bit_set_mask_load, i32 %current_read_byte_load" [benchmarks/chstone/jpeg/src/jpeg_decode.c:577->benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 44 'and' 'and_ln577' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 45 [1/1] (1.14ns) (out node of the LUT)   --->   "%icmp_ln577 = icmp_ne  i32 %and_ln577, i32 0" [benchmarks/chstone/jpeg/src/jpeg_decode.c:577->benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 45 'icmp' 'icmp_ln577' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%trunc_ln689 = trunc i32 %code" [benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 46 'trunc' 'trunc_ln689' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%code_9 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %trunc_ln689, i1 %icmp_ln577" [benchmarks/chstone/jpeg/src/jpeg_decode.c:689]   --->   Operation 47 'bitconcatenate' 'code_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.46ns)   --->   "%store_ln685 = store i32 %code_9, i32 %code_8" [benchmarks/chstone/jpeg/src/jpeg_decode.c:685]   --->   Operation 48 'store' 'store_ln685' <Predicate = true> <Delay = 0.46>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%br_ln688 = br void %for.cond" [benchmarks/chstone/jpeg/src/jpeg_decode.c:688]   --->   Operation 49 'br' 'br_ln688' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5.000ns, clock uncertainty: 1.350ns.

 <State 1>: 1.757ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln685', benchmarks/chstone/jpeg/src/jpeg_decode.c:685) of constant 1 on local variable 'l', benchmarks/chstone/jpeg/src/jpeg_decode.c:685 [13]  (0.460 ns)
	'load' operation 64 bit ('l', benchmarks/chstone/jpeg/src/jpeg_decode.c:688) on local variable 'l', benchmarks/chstone/jpeg/src/jpeg_decode.c:685 [18]  (0.000 ns)
	'getelementptr' operation 7 bit ('p_jinfo_dc_dhuff_tbl_maxcode_addr', benchmarks/chstone/jpeg/src/jpeg_decode.c:688) [20]  (0.000 ns)
	'load' operation 32 bit ('p_jinfo_dc_dhuff_tbl_maxcode_load', benchmarks/chstone/jpeg/src/jpeg_decode.c:688) on array 'p_jinfo_dc_dhuff_tbl_maxcode' [21]  (1.297 ns)

 <State 2>: 2.899ns
The critical path consists of the following:
	'load' operation 32 bit ('p_jinfo_dc_dhuff_tbl_maxcode_load', benchmarks/chstone/jpeg/src/jpeg_decode.c:688) on array 'p_jinfo_dc_dhuff_tbl_maxcode' [21]  (1.297 ns)
	'icmp' operation 1 bit ('icmp_ln688', benchmarks/chstone/jpeg/src/jpeg_decode.c:688) [22]  (1.142 ns)
	'store' operation 0 bit ('store_ln685', benchmarks/chstone/jpeg/src/jpeg_decode.c:685) of variable 'add_ln688', benchmarks/chstone/jpeg/src/jpeg_decode.c:688 on local variable 'l', benchmarks/chstone/jpeg/src/jpeg_decode.c:685 [52]  (0.460 ns)

 <State 3>: 2.899ns
The critical path consists of the following:
	'load' operation 32 bit ('bit_set_mask_load', benchmarks/chstone/jpeg/src/jpeg_decode.c:577->benchmarks/chstone/jpeg/src/jpeg_decode.c:689) on array 'bit_set_mask' [46]  (1.297 ns)
	'and' operation 32 bit ('and_ln577', benchmarks/chstone/jpeg/src/jpeg_decode.c:577->benchmarks/chstone/jpeg/src/jpeg_decode.c:689) [47]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln577', benchmarks/chstone/jpeg/src/jpeg_decode.c:577->benchmarks/chstone/jpeg/src/jpeg_decode.c:689) [48]  (1.142 ns)
	'store' operation 0 bit ('store_ln685', benchmarks/chstone/jpeg/src/jpeg_decode.c:685) of variable 'code', benchmarks/chstone/jpeg/src/jpeg_decode.c:689 on local variable 'code', benchmarks/chstone/jpeg/src/jpeg_decode.c:685 [53]  (0.460 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
