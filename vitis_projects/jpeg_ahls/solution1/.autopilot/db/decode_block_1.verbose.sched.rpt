

================================================================
== Vitis HLS Report for 'decode_block_1'
================================================================
* Date:           Tue Jun 18 12:24:21 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        jpeg_ahls
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplusHBM
* Target device:  xcvu35p-fsvh2104-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  5.00 ns|  3.615 ns|     1.35 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_740_2  |        ?|        ?|         ?|          -|          -|     ?|        no|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 23
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 5 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 10 
9 --> 10 
10 --> 11 15 14 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 8 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%QuantBuff = alloca i64 1"   --->   Operation 24 'alloca' 'QuantBuff' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%p_jinfo_dc_dhuff_tbl_ml_0_load = load i7 %p_jinfo_dc_dhuff_tbl_ml_0" [benchmarks/chstone/jpeg/src/jpeg_decode.c:715->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 25 'load' 'p_jinfo_dc_dhuff_tbl_ml_0_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [2/2] (0.00ns)   --->   "%s = call i8 @DecodeHuffman.1, i7 %p_jinfo_dc_dhuff_tbl_ml_0_load, i32 %read_position, i8 %CurHuffReadBuf, i32 %current_read_byte, i32 %bit_set_mask, i32 %p_jinfo_dc_dhuff_tbl_maxcode, i11 %p_jinfo_dc_dhuff_tbl_valptr, i11 %p_jinfo_dc_dhuff_tbl_mincode, i8 %p_jinfo_ac_xhuff_tbl_huffval" [benchmarks/chstone/jpeg/src/jpeg_decode.c:714->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 26 'call' 's' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 2.56>
ST_2 : Operation 27 [1/2] (1.69ns)   --->   "%s = call i8 @DecodeHuffman.1, i7 %p_jinfo_dc_dhuff_tbl_ml_0_load, i32 %read_position, i8 %CurHuffReadBuf, i32 %current_read_byte, i32 %bit_set_mask, i32 %p_jinfo_dc_dhuff_tbl_maxcode, i11 %p_jinfo_dc_dhuff_tbl_valptr, i11 %p_jinfo_dc_dhuff_tbl_mincode, i8 %p_jinfo_ac_xhuff_tbl_huffval" [benchmarks/chstone/jpeg/src/jpeg_decode.c:714->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 27 'call' 's' <Predicate = true> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%trunc_ln708 = trunc i8 %s" [benchmarks/chstone/jpeg/src/jpeg_decode.c:708->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 28 'trunc' 'trunc_ln708' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.87ns)   --->   "%icmp_ln720 = icmp_eq  i8 %s, i8 0" [benchmarks/chstone/jpeg/src/jpeg_decode.c:720->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 29 'icmp' 'icmp_ln720' <Predicate = true> <Delay = 0.87> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 3.61>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%out_buf_read = read i10 @_ssdm_op_Read.ap_auto.i10, i10 %out_buf"   --->   Operation 30 'read' 'out_buf_read' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%br_ln720 = br i1 %icmp_ln720, void %if.then.i_ifconv, void %VITIS_LOOP_736_1.i" [benchmarks/chstone/jpeg/src/jpeg_decode.c:720->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 31 'br' 'br_ln720' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [2/2] (3.61ns)   --->   "%diff = call i32 @buf_getv, i8 %s, i32 %read_position, i8 %CurHuffReadBuf, i32 %current_read_byte, i32 %lmask" [benchmarks/chstone/jpeg/src/jpeg_decode.c:721->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 32 'call' 'diff' <Predicate = (!icmp_ln720)> <Delay = 3.61> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 33 [1/1] (0.82ns)   --->   "%s_1 = add i5 %trunc_ln708, i5 31" [benchmarks/chstone/jpeg/src/jpeg_decode.c:722->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 33 'add' 's_1' <Predicate = (!icmp_ln720)> <Delay = 0.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln723 = zext i5 %s_1" [benchmarks/chstone/jpeg/src/jpeg_decode.c:723->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 34 'zext' 'zext_ln723' <Predicate = (!icmp_ln720)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%bit_set_mask_addr = getelementptr i32 %bit_set_mask, i64 0, i64 %zext_ln723" [benchmarks/chstone/jpeg/src/jpeg_decode.c:723->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 35 'getelementptr' 'bit_set_mask_addr' <Predicate = (!icmp_ln720)> <Delay = 0.00>
ST_3 : Operation 36 [2/2] (1.29ns)   --->   "%bit_set_mask_load = load i5 %bit_set_mask_addr" [benchmarks/chstone/jpeg/src/jpeg_decode.c:723->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 36 'load' 'bit_set_mask_load' <Predicate = (!icmp_ln720)> <Delay = 1.29> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 32> <ROM>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%extend_mask_addr = getelementptr i21 %extend_mask, i64 0, i64 %zext_ln723" [benchmarks/chstone/jpeg/src/jpeg_decode.c:724->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 37 'getelementptr' 'extend_mask_addr' <Predicate = (!icmp_ln720)> <Delay = 0.00>
ST_3 : Operation 38 [2/2] (0.73ns)   --->   "%extend_mask_load = load i5 %extend_mask_addr" [benchmarks/chstone/jpeg/src/jpeg_decode.c:724->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 38 'load' 'extend_mask_load' <Predicate = (!icmp_ln720)> <Delay = 0.73> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 21> <Depth = 20> <ROM>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%lshr_ln = partselect i8 @_ssdm_op_PartSelect.i8.i10.i32.i32, i10 %out_buf_read, i32 2, i32 9" [benchmarks/chstone/jpeg/src/jpeg_decode.c:728->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 39 'partselect' 'lshr_ln' <Predicate = (!icmp_ln720)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln728 = zext i8 %lshr_ln" [benchmarks/chstone/jpeg/src/jpeg_decode.c:728->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 40 'zext' 'zext_ln728' <Predicate = (!icmp_ln720)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%HuffBuff_addr = getelementptr i32 %HuffBuff, i64 0, i64 %zext_ln728" [benchmarks/chstone/jpeg/src/jpeg_decode.c:728->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 41 'getelementptr' 'HuffBuff_addr' <Predicate = (!icmp_ln720)> <Delay = 0.00>
ST_3 : Operation 42 [2/2] (1.29ns)   --->   "%HuffBuff_load = load i8 %HuffBuff_addr" [benchmarks/chstone/jpeg/src/jpeg_decode.c:728->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 42 'load' 'HuffBuff_load' <Predicate = (!icmp_ln720)> <Delay = 1.29> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 192> <RAM>

State 4 <SV = 3> <Delay = 3.21>
ST_4 : Operation 43 [1/2] (3.21ns)   --->   "%diff = call i32 @buf_getv, i8 %s, i32 %read_position, i8 %CurHuffReadBuf, i32 %current_read_byte, i32 %lmask" [benchmarks/chstone/jpeg/src/jpeg_decode.c:721->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 43 'call' 'diff' <Predicate = true> <Delay = 3.21> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 44 [1/2] (1.29ns)   --->   "%bit_set_mask_load = load i5 %bit_set_mask_addr" [benchmarks/chstone/jpeg/src/jpeg_decode.c:723->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 44 'load' 'bit_set_mask_load' <Predicate = true> <Delay = 1.29> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 32> <ROM>
ST_4 : Operation 45 [1/2] (0.73ns)   --->   "%extend_mask_load = load i5 %extend_mask_addr" [benchmarks/chstone/jpeg/src/jpeg_decode.c:724->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 45 'load' 'extend_mask_load' <Predicate = true> <Delay = 0.73> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 21> <Depth = 20> <ROM>
ST_4 : Operation 46 [1/2] (1.29ns)   --->   "%HuffBuff_load = load i8 %HuffBuff_addr" [benchmarks/chstone/jpeg/src/jpeg_decode.c:728->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 46 'load' 'HuffBuff_load' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 192> <RAM>

State 5 <SV = 4> <Delay = 3.58>
ST_5 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln723)   --->   "%and_ln723 = and i32 %bit_set_mask_load, i32 %diff" [benchmarks/chstone/jpeg/src/jpeg_decode.c:723->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 47 'and' 'and_ln723' <Predicate = (!icmp_ln720)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 48 [1/1] (1.14ns) (out node of the LUT)   --->   "%icmp_ln723 = icmp_eq  i32 %and_ln723, i32 0" [benchmarks/chstone/jpeg/src/jpeg_decode.c:723->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 48 'icmp' 'icmp_ln723' <Predicate = (!icmp_ln720)> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node diff_2)   --->   "%sext_ln724 = sext i21 %extend_mask_load" [benchmarks/chstone/jpeg/src/jpeg_decode.c:724->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 49 'sext' 'sext_ln724' <Predicate = (!icmp_ln720)> <Delay = 0.00>
ST_5 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node diff_2)   --->   "%diff_1 = or i32 %sext_ln724, i32 %diff" [benchmarks/chstone/jpeg/src/jpeg_decode.c:724->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 50 'or' 'diff_1' <Predicate = (!icmp_ln720)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 51 [1/1] (1.14ns) (out node of the LUT)   --->   "%diff_2 = add i32 %diff_1, i32 1" [benchmarks/chstone/jpeg/src/jpeg_decode.c:725->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 51 'add' 'diff_2' <Predicate = (!icmp_ln720)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node diff_4)   --->   "%diff_3 = select i1 %icmp_ln723, i32 %diff_2, i32 %diff" [benchmarks/chstone/jpeg/src/jpeg_decode.c:723->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 52 'select' 'diff_3' <Predicate = (!icmp_ln720)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 53 [1/1] (1.14ns) (out node of the LUT)   --->   "%diff_4 = add i32 %HuffBuff_load, i32 %diff_3" [benchmarks/chstone/jpeg/src/jpeg_decode.c:728->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 53 'add' 'diff_4' <Predicate = (!icmp_ln720)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 54 [1/1] (1.29ns)   --->   "%store_ln729 = store i32 %diff_4, i8 %HuffBuff_addr" [benchmarks/chstone/jpeg/src/jpeg_decode.c:729->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 54 'store' 'store_ln729' <Predicate = (!icmp_ln720)> <Delay = 1.29> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 192> <RAM>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%br_ln730 = br void %VITIS_LOOP_736_1.i" [benchmarks/chstone/jpeg/src/jpeg_decode.c:730->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 55 'br' 'br_ln730' <Predicate = (!icmp_ln720)> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%k = alloca i32 1" [benchmarks/chstone/jpeg/src/jpeg_decode.c:708->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 56 'alloca' 'k' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 57 [1/1] (0.50ns)   --->   "%store_ln708 = store i32 1, i32 %k" [benchmarks/chstone/jpeg/src/jpeg_decode.c:708->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 57 'store' 'store_ln708' <Predicate = true> <Delay = 0.50>

State 6 <SV = 5> <Delay = 2.23>
ST_6 : Operation 58 [2/2] (2.23ns)   --->   "%call_ln0 = call void @decode_block.1_Pipeline_VITIS_LOOP_736_1, i10 %out_buf_read, i32 %HuffBuff"   --->   Operation 58 'call' 'call_ln0' <Predicate = true> <Delay = 2.23> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 6> <Delay = 0.00>
ST_7 : Operation 59 [1/2] (0.00ns)   --->   "%call_ln0 = call void @decode_block.1_Pipeline_VITIS_LOOP_736_1, i10 %out_buf_read, i32 %HuffBuff"   --->   Operation 59 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 60 [1/1] (0.00ns)   --->   "%br_ln740 = br void %for.cond24.i" [benchmarks/chstone/jpeg/src/jpeg_decode.c:740->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 60 'br' 'br_ln740' <Predicate = true> <Delay = 0.00>

State 8 <SV = 7> <Delay = 1.13>
ST_8 : Operation 61 [1/1] (0.00ns)   --->   "%k_4 = load i32 %k" [benchmarks/chstone/jpeg/src/jpeg_decode.c:761->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 61 'load' 'k_4' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_5 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %k_4, i32 6, i32 31" [benchmarks/chstone/jpeg/src/jpeg_decode.c:740->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 62 'partselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 63 [1/1] (1.13ns)   --->   "%icmp_ln740 = icmp_slt  i26 %tmp_5, i26 1" [benchmarks/chstone/jpeg/src/jpeg_decode.c:740->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 63 'icmp' 'icmp_ln740' <Predicate = true> <Delay = 1.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 64 [1/1] (0.00ns)   --->   "%br_ln740 = br i1 %icmp_ln740, void %DecodeHuffMCU.exit, void %for.body26.i" [benchmarks/chstone/jpeg/src/jpeg_decode.c:740->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 64 'br' 'br_ln740' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 65 [1/1] (0.00ns)   --->   "%p_jinfo_ac_dhuff_tbl_ml_0_load = load i7 %p_jinfo_ac_dhuff_tbl_ml_0" [benchmarks/chstone/jpeg/src/jpeg_decode.c:742->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 65 'load' 'p_jinfo_ac_dhuff_tbl_ml_0_load' <Predicate = (icmp_ln740)> <Delay = 0.00>
ST_8 : Operation 66 [2/2] (0.00ns)   --->   "%r = call i8 @DecodeHuffman.2, i7 %p_jinfo_ac_dhuff_tbl_ml_0_load, i32 %read_position, i8 %CurHuffReadBuf, i32 %current_read_byte, i32 %bit_set_mask, i32 %p_jinfo_ac_dhuff_tbl_maxcode, i11 %p_jinfo_ac_dhuff_tbl_valptr, i11 %p_jinfo_ac_dhuff_tbl_mincode, i8 %p_jinfo_ac_xhuff_tbl_huffval" [benchmarks/chstone/jpeg/src/jpeg_decode.c:741->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 66 'call' 'r' <Predicate = (icmp_ln740)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 8> <Delay = 1.69>
ST_9 : Operation 67 [1/2] (1.69ns)   --->   "%r = call i8 @DecodeHuffman.2, i7 %p_jinfo_ac_dhuff_tbl_ml_0_load, i32 %read_position, i8 %CurHuffReadBuf, i32 %current_read_byte, i32 %bit_set_mask, i32 %p_jinfo_ac_dhuff_tbl_maxcode, i11 %p_jinfo_ac_dhuff_tbl_valptr, i11 %p_jinfo_ac_dhuff_tbl_mincode, i8 %p_jinfo_ac_xhuff_tbl_huffval" [benchmarks/chstone/jpeg/src/jpeg_decode.c:741->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 67 'call' 'r' <Predicate = true> <Delay = 1.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 68 [1/1] (0.00ns)   --->   "%s_2 = trunc i8 %r" [benchmarks/chstone/jpeg/src/jpeg_decode.c:708->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 68 'trunc' 's_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 69 [1/1] (0.00ns)   --->   "%n = partselect i4 @_ssdm_op_PartSelect.i4.i8.i32.i32, i8 %r, i32 4, i32 7" [benchmarks/chstone/jpeg/src/jpeg_decode.c:748->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 69 'partselect' 'n' <Predicate = true> <Delay = 0.00>

State 10 <SV = 9> <Delay = 2.27>
ST_10 : Operation 70 [1/1] (0.00ns)   --->   "%specloopname_ln740 = specloopname void @_ssdm_op_SpecLoopName, void @empty_10" [benchmarks/chstone/jpeg/src/jpeg_decode.c:740->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 70 'specloopname' 'specloopname_ln740' <Predicate = (icmp_ln740)> <Delay = 0.00>
ST_10 : Operation 71 [1/1] (0.00ns)   --->   "%zext_ln708 = zext i4 %s_2" [benchmarks/chstone/jpeg/src/jpeg_decode.c:708->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 71 'zext' 'zext_ln708' <Predicate = (icmp_ln740)> <Delay = 0.00>
ST_10 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln708_2 = zext i4 %n" [benchmarks/chstone/jpeg/src/jpeg_decode.c:708->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 72 'zext' 'zext_ln708_2' <Predicate = (icmp_ln740)> <Delay = 0.00>
ST_10 : Operation 73 [1/1] (0.80ns)   --->   "%icmp_ln750 = icmp_eq  i4 %s_2, i4 0" [benchmarks/chstone/jpeg/src/jpeg_decode.c:750->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 73 'icmp' 'icmp_ln750' <Predicate = (icmp_ln740)> <Delay = 0.80> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 74 [1/1] (0.00ns)   --->   "%br_ln750 = br i1 %icmp_ln750, void %if.then45.i, void %if.else.i" [benchmarks/chstone/jpeg/src/jpeg_decode.c:750->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 74 'br' 'br_ln750' <Predicate = (icmp_ln740)> <Delay = 0.00>
ST_10 : Operation 75 [1/1] (1.14ns)   --->   "%k_5 = add i32 %zext_ln708_2, i32 %k_4" [benchmarks/chstone/jpeg/src/jpeg_decode.c:751->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 75 'add' 'k_5' <Predicate = (icmp_ln740 & !icmp_ln750)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 76 [1/1] (0.00ns)   --->   "%tmp_6 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %k_5, i32 6, i32 31" [benchmarks/chstone/jpeg/src/jpeg_decode.c:751->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 76 'partselect' 'tmp_6' <Predicate = (icmp_ln740 & !icmp_ln750)> <Delay = 0.00>
ST_10 : Operation 77 [1/1] (1.13ns)   --->   "%icmp_ln751 = icmp_sgt  i26 %tmp_6, i26 0" [benchmarks/chstone/jpeg/src/jpeg_decode.c:751->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 77 'icmp' 'icmp_ln751' <Predicate = (icmp_ln740 & !icmp_ln750)> <Delay = 1.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 78 [1/1] (0.00ns)   --->   "%br_ln751 = br i1 %icmp_ln751, void %if.end49.i, void %DecodeHuffMCU.exit" [benchmarks/chstone/jpeg/src/jpeg_decode.c:751->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 78 'br' 'br_ln751' <Predicate = (icmp_ln740 & !icmp_ln750)> <Delay = 0.00>
ST_10 : Operation 79 [1/1] (0.80ns)   --->   "%icmp_ln760 = icmp_eq  i4 %n, i4 15" [benchmarks/chstone/jpeg/src/jpeg_decode.c:760->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 79 'icmp' 'icmp_ln760' <Predicate = (icmp_ln740 & icmp_ln750)> <Delay = 0.80> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 80 [1/1] (0.00ns)   --->   "%br_ln760 = br i1 %icmp_ln760, void %DecodeHuffMCU.exit, void %if.end75.i" [benchmarks/chstone/jpeg/src/jpeg_decode.c:760->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 80 'br' 'br_ln760' <Predicate = (icmp_ln740 & icmp_ln750)> <Delay = 0.00>
ST_10 : Operation 81 [1/1] (1.14ns)   --->   "%k_6 = add i32 %k_4, i32 16" [benchmarks/chstone/jpeg/src/jpeg_decode.c:761->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 81 'add' 'k_6' <Predicate = (icmp_ln740 & icmp_ln750 & icmp_ln760)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 82 [1/1] (0.50ns)   --->   "%store_ln708 = store i32 %k_6, i32 %k" [benchmarks/chstone/jpeg/src/jpeg_decode.c:708->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 82 'store' 'store_ln708' <Predicate = (icmp_ln740 & icmp_ln750 & icmp_ln760)> <Delay = 0.50>
ST_10 : Operation 83 [1/1] (0.00ns)   --->   "%br_ln0 = br void %if.end76.i"   --->   Operation 83 'br' 'br_ln0' <Predicate = (icmp_ln740 & icmp_ln750 & icmp_ln760)> <Delay = 0.00>
ST_10 : Operation 84 [2/2] (0.00ns)   --->   "%call_ln0 = call void @decode_block.1_Pipeline_VITIS_LOOP_322_1, i10 %out_buf_read, i32 %HuffBuff, i32 %QuantBuff, i6 %zigzag_index"   --->   Operation 84 'call' 'call_ln0' <Predicate = (icmp_ln750 & !icmp_ln760) | (!icmp_ln750 & icmp_ln751) | (!icmp_ln740)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 3.61>
ST_11 : Operation 85 [2/2] (3.61ns)   --->   "%tmp = call i32 @buf_getv, i8 %zext_ln708, i32 %read_position, i8 %CurHuffReadBuf, i32 %current_read_byte, i32 %lmask" [benchmarks/chstone/jpeg/src/jpeg_decode.c:753->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 85 'call' 'tmp' <Predicate = true> <Delay = 3.61> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 3.21>
ST_12 : Operation 86 [1/2] (3.21ns)   --->   "%tmp = call i32 @buf_getv, i8 %zext_ln708, i32 %read_position, i8 %CurHuffReadBuf, i32 %current_read_byte, i32 %lmask" [benchmarks/chstone/jpeg/src/jpeg_decode.c:753->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 86 'call' 'tmp' <Predicate = true> <Delay = 3.21> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 87 [1/1] (0.80ns)   --->   "%s_3 = add i4 %s_2, i4 15" [benchmarks/chstone/jpeg/src/jpeg_decode.c:754->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 87 'add' 's_3' <Predicate = true> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 88 [1/1] (0.00ns)   --->   "%zext_ln755 = zext i4 %s_3" [benchmarks/chstone/jpeg/src/jpeg_decode.c:755->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 88 'zext' 'zext_ln755' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 89 [1/1] (0.00ns)   --->   "%bit_set_mask_addr_1 = getelementptr i32 %bit_set_mask, i64 0, i64 %zext_ln755" [benchmarks/chstone/jpeg/src/jpeg_decode.c:755->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 89 'getelementptr' 'bit_set_mask_addr_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 90 [2/2] (1.29ns)   --->   "%bit_set_mask_load_1 = load i5 %bit_set_mask_addr_1" [benchmarks/chstone/jpeg/src/jpeg_decode.c:755->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 90 'load' 'bit_set_mask_load_1' <Predicate = true> <Delay = 1.29> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 32> <ROM>

State 13 <SV = 12> <Delay = 2.43>
ST_13 : Operation 91 [1/1] (0.00ns)   --->   "%trunc_ln753 = trunc i32 %k_5" [benchmarks/chstone/jpeg/src/jpeg_decode.c:753->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 91 'trunc' 'trunc_ln753' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 92 [1/1] (0.00ns)   --->   "%shl_ln7 = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i8.i2, i8 %trunc_ln753, i2 0" [benchmarks/chstone/jpeg/src/jpeg_decode.c:753->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 92 'bitconcatenate' 'shl_ln7' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 93 [1/1] (0.93ns)   --->   "%add_ln753 = add i10 %shl_ln7, i10 %out_buf_read" [benchmarks/chstone/jpeg/src/jpeg_decode.c:753->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 93 'add' 'add_ln753' <Predicate = true> <Delay = 0.93> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 94 [1/1] (0.00ns)   --->   "%lshr_ln3 = partselect i8 @_ssdm_op_PartSelect.i8.i10.i32.i32, i10 %add_ln753, i32 2, i32 9" [benchmarks/chstone/jpeg/src/jpeg_decode.c:753->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 94 'partselect' 'lshr_ln3' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 95 [1/1] (0.00ns)   --->   "%zext_ln753 = zext i8 %lshr_ln3" [benchmarks/chstone/jpeg/src/jpeg_decode.c:753->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 95 'zext' 'zext_ln753' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 96 [1/1] (0.00ns)   --->   "%HuffBuff_addr_1 = getelementptr i32 %HuffBuff, i64 0, i64 %zext_ln753" [benchmarks/chstone/jpeg/src/jpeg_decode.c:753->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 96 'getelementptr' 'HuffBuff_addr_1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 97 [1/1] (1.29ns)   --->   "%store_ln753 = store i32 %tmp, i8 %HuffBuff_addr_1" [benchmarks/chstone/jpeg/src/jpeg_decode.c:753->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 97 'store' 'store_ln753' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 192> <RAM>
ST_13 : Operation 98 [1/2] (1.29ns)   --->   "%bit_set_mask_load_1 = load i5 %bit_set_mask_addr_1" [benchmarks/chstone/jpeg/src/jpeg_decode.c:755->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 98 'load' 'bit_set_mask_load_1' <Predicate = true> <Delay = 1.29> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 32> <ROM>
ST_13 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln755)   --->   "%and_ln755 = and i32 %bit_set_mask_load_1, i32 %tmp" [benchmarks/chstone/jpeg/src/jpeg_decode.c:755->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 99 'and' 'and_ln755' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 100 [1/1] (1.14ns) (out node of the LUT)   --->   "%icmp_ln755 = icmp_eq  i32 %and_ln755, i32 0" [benchmarks/chstone/jpeg/src/jpeg_decode.c:755->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 100 'icmp' 'icmp_ln755' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 101 [1/1] (0.00ns)   --->   "%br_ln755 = br i1 %icmp_ln755, void %if.end69.i, void %if.then60.i" [benchmarks/chstone/jpeg/src/jpeg_decode.c:755->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 101 'br' 'br_ln755' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 102 [1/1] (0.00ns)   --->   "%extend_mask_addr_1 = getelementptr i21 %extend_mask, i64 0, i64 %zext_ln755" [benchmarks/chstone/jpeg/src/jpeg_decode.c:756->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 102 'getelementptr' 'extend_mask_addr_1' <Predicate = (icmp_ln755)> <Delay = 0.00>
ST_13 : Operation 103 [2/2] (0.73ns)   --->   "%extend_mask_load_1 = load i5 %extend_mask_addr_1" [benchmarks/chstone/jpeg/src/jpeg_decode.c:756->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 103 'load' 'extend_mask_load_1' <Predicate = (icmp_ln755)> <Delay = 0.73> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 21> <Depth = 20> <ROM>

State 14 <SV = 13> <Delay = 3.16>
ST_14 : Operation 104 [1/2] (0.73ns)   --->   "%extend_mask_load_1 = load i5 %extend_mask_addr_1" [benchmarks/chstone/jpeg/src/jpeg_decode.c:756->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 104 'load' 'extend_mask_load_1' <Predicate = (!icmp_ln750 & icmp_ln755)> <Delay = 0.73> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 21> <Depth = 20> <ROM>
ST_14 : Operation 105 [1/1] (0.00ns) (grouped into LUT with out node add_ln757)   --->   "%sext_ln756 = sext i21 %extend_mask_load_1" [benchmarks/chstone/jpeg/src/jpeg_decode.c:756->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 105 'sext' 'sext_ln756' <Predicate = (!icmp_ln750 & icmp_ln755)> <Delay = 0.00>
ST_14 : Operation 106 [1/1] (0.00ns) (grouped into LUT with out node add_ln757)   --->   "%or_ln756 = or i32 %sext_ln756, i32 %tmp" [benchmarks/chstone/jpeg/src/jpeg_decode.c:756->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 106 'or' 'or_ln756' <Predicate = (!icmp_ln750 & icmp_ln755)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 107 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln757 = add i32 %or_ln756, i32 1" [benchmarks/chstone/jpeg/src/jpeg_decode.c:757->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 107 'add' 'add_ln757' <Predicate = (!icmp_ln750 & icmp_ln755)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 108 [1/1] (1.29ns)   --->   "%store_ln757 = store i32 %add_ln757, i8 %HuffBuff_addr_1" [benchmarks/chstone/jpeg/src/jpeg_decode.c:757->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 108 'store' 'store_ln757' <Predicate = (!icmp_ln750 & icmp_ln755)> <Delay = 1.29> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 192> <RAM>
ST_14 : Operation 109 [1/1] (0.00ns)   --->   "%br_ln758 = br void %if.end69.i" [benchmarks/chstone/jpeg/src/jpeg_decode.c:758->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 109 'br' 'br_ln758' <Predicate = (!icmp_ln750 & icmp_ln755)> <Delay = 0.00>
ST_14 : Operation 110 [1/1] (1.14ns)   --->   "%k_7 = add i32 %k_5, i32 1" [benchmarks/chstone/jpeg/src/jpeg_decode.c:759->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 110 'add' 'k_7' <Predicate = (!icmp_ln750)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 111 [1/1] (0.50ns)   --->   "%store_ln708 = store i32 %k_7, i32 %k" [benchmarks/chstone/jpeg/src/jpeg_decode.c:708->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 111 'store' 'store_ln708' <Predicate = (!icmp_ln750)> <Delay = 0.50>
ST_14 : Operation 112 [1/1] (0.00ns)   --->   "%br_ln760 = br void %if.end76.i" [benchmarks/chstone/jpeg/src/jpeg_decode.c:760->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 112 'br' 'br_ln760' <Predicate = (!icmp_ln750)> <Delay = 0.00>
ST_14 : Operation 113 [1/1] (0.00ns)   --->   "%br_ln740 = br void %for.cond24.i" [benchmarks/chstone/jpeg/src/jpeg_decode.c:740->benchmarks/chstone/jpeg/src/jpeg_decode.c:774]   --->   Operation 113 'br' 'br_ln740' <Predicate = true> <Delay = 0.00>

State 15 <SV = 10> <Delay = 0.00>
ST_15 : Operation 114 [1/2] (0.00ns)   --->   "%call_ln0 = call void @decode_block.1_Pipeline_VITIS_LOOP_322_1, i10 %out_buf_read, i32 %HuffBuff, i32 %QuantBuff, i6 %zigzag_index"   --->   Operation 114 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 16 <SV = 11> <Delay = 0.00>
ST_16 : Operation 115 [2/2] (0.00ns)   --->   "%call_ln0 = call void @decode_block.1_Pipeline_VITIS_LOOP_334_1, i32 %QuantBuff, i16 %p_jinfo_quant_tbl_quantval"   --->   Operation 115 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 17 <SV = 12> <Delay = 0.00>
ST_17 : Operation 116 [1/2] (0.00ns)   --->   "%call_ln0 = call void @decode_block.1_Pipeline_VITIS_LOOP_334_1, i32 %QuantBuff, i16 %p_jinfo_quant_tbl_quantval"   --->   Operation 116 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 18 <SV = 13> <Delay = 0.00>
ST_18 : Operation 117 [2/2] (0.00ns)   --->   "%call_ln781 = call void @ChenIDct.1, i32 %QuantBuff, i32 %IDCTBuff, i10 %out_buf_read" [benchmarks/chstone/jpeg/src/jpeg_decode.c:781]   --->   Operation 117 'call' 'call_ln781' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 19 <SV = 14> <Delay = 0.00>
ST_19 : Operation 118 [1/2] (0.00ns)   --->   "%call_ln781 = call void @ChenIDct.1, i32 %QuantBuff, i32 %IDCTBuff, i10 %out_buf_read" [benchmarks/chstone/jpeg/src/jpeg_decode.c:781]   --->   Operation 118 'call' 'call_ln781' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 20 <SV = 15> <Delay = 0.00>
ST_20 : Operation 119 [2/2] (0.00ns)   --->   "%call_ln0 = call void @decode_block.1_Pipeline_VITIS_LOOP_347_1, i10 %out_buf_read, i32 %IDCTBuff"   --->   Operation 119 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 16> <Delay = 0.00>
ST_21 : Operation 120 [1/2] (0.00ns)   --->   "%call_ln0 = call void @decode_block.1_Pipeline_VITIS_LOOP_347_1, i10 %out_buf_read, i32 %IDCTBuff"   --->   Operation 120 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 17> <Delay = 2.23>
ST_22 : Operation 121 [2/2] (2.23ns)   --->   "%call_ln0 = call void @decode_block.1_Pipeline_VITIS_LOOP_360_1, i10 %out_buf_read, i32 %IDCTBuff"   --->   Operation 121 'call' 'call_ln0' <Predicate = true> <Delay = 2.23> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 23 <SV = 18> <Delay = 0.00>
ST_23 : Operation 122 [1/2] (0.00ns)   --->   "%call_ln0 = call void @decode_block.1_Pipeline_VITIS_LOOP_360_1, i10 %out_buf_read, i32 %IDCTBuff"   --->   Operation 122 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_23 : Operation 123 [1/1] (0.00ns)   --->   "%ret_ln787 = ret" [benchmarks/chstone/jpeg/src/jpeg_decode.c:787]   --->   Operation 123 'ret' 'ret_ln787' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5.000ns, clock uncertainty: 1.350ns.

 <State 1>: 0.000ns
The critical path consists of the following:

 <State 2>: 2.568ns
The critical path consists of the following:
	'call' operation 8 bit ('s', benchmarks/chstone/jpeg/src/jpeg_decode.c:714->benchmarks/chstone/jpeg/src/jpeg_decode.c:774) to 'DecodeHuffman.1' [24]  (1.697 ns)
	'icmp' operation 1 bit ('icmp_ln720', benchmarks/chstone/jpeg/src/jpeg_decode.c:720->benchmarks/chstone/jpeg/src/jpeg_decode.c:774) [26]  (0.871 ns)

 <State 3>: 3.615ns
The critical path consists of the following:
	'call' operation 32 bit ('diff', benchmarks/chstone/jpeg/src/jpeg_decode.c:721->benchmarks/chstone/jpeg/src/jpeg_decode.c:774) to 'buf_getv' [29]  (3.615 ns)

 <State 4>: 3.212ns
The critical path consists of the following:
	'call' operation 32 bit ('diff', benchmarks/chstone/jpeg/src/jpeg_decode.c:721->benchmarks/chstone/jpeg/src/jpeg_decode.c:774) to 'buf_getv' [29]  (3.212 ns)

 <State 5>: 3.581ns
The critical path consists of the following:
	'and' operation 32 bit ('and_ln723', benchmarks/chstone/jpeg/src/jpeg_decode.c:723->benchmarks/chstone/jpeg/src/jpeg_decode.c:774) [34]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln723', benchmarks/chstone/jpeg/src/jpeg_decode.c:723->benchmarks/chstone/jpeg/src/jpeg_decode.c:774) [35]  (1.142 ns)
	'select' operation 32 bit ('diff', benchmarks/chstone/jpeg/src/jpeg_decode.c:723->benchmarks/chstone/jpeg/src/jpeg_decode.c:774) [41]  (0.000 ns)
	'add' operation 32 bit ('diff', benchmarks/chstone/jpeg/src/jpeg_decode.c:728->benchmarks/chstone/jpeg/src/jpeg_decode.c:774) [46]  (1.142 ns)
	'store' operation 0 bit ('store_ln729', benchmarks/chstone/jpeg/src/jpeg_decode.c:729->benchmarks/chstone/jpeg/src/jpeg_decode.c:774) of variable 'diff', benchmarks/chstone/jpeg/src/jpeg_decode.c:728->benchmarks/chstone/jpeg/src/jpeg_decode.c:774 on array 'HuffBuff' [47]  (1.297 ns)

 <State 6>: 2.231ns
The critical path consists of the following:
	'call' operation 0 bit ('call_ln0') to 'decode_block.1_Pipeline_VITIS_LOOP_736_1' [51]  (2.231 ns)

 <State 7>: 0.000ns
The critical path consists of the following:

 <State 8>: 1.134ns
The critical path consists of the following:
	'load' operation 32 bit ('k', benchmarks/chstone/jpeg/src/jpeg_decode.c:761->benchmarks/chstone/jpeg/src/jpeg_decode.c:774) on local variable 'k', benchmarks/chstone/jpeg/src/jpeg_decode.c:708->benchmarks/chstone/jpeg/src/jpeg_decode.c:774 [55]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln740', benchmarks/chstone/jpeg/src/jpeg_decode.c:740->benchmarks/chstone/jpeg/src/jpeg_decode.c:774) [57]  (1.134 ns)

 <State 9>: 1.697ns
The critical path consists of the following:
	'call' operation 8 bit ('r', benchmarks/chstone/jpeg/src/jpeg_decode.c:741->benchmarks/chstone/jpeg/src/jpeg_decode.c:774) to 'DecodeHuffman.2' [62]  (1.697 ns)

 <State 10>: 2.276ns
The critical path consists of the following:
	'add' operation 32 bit ('k', benchmarks/chstone/jpeg/src/jpeg_decode.c:751->benchmarks/chstone/jpeg/src/jpeg_decode.c:774) [70]  (1.142 ns)
	'icmp' operation 1 bit ('icmp_ln751', benchmarks/chstone/jpeg/src/jpeg_decode.c:751->benchmarks/chstone/jpeg/src/jpeg_decode.c:774) [72]  (1.134 ns)

 <State 11>: 3.615ns
The critical path consists of the following:
	'call' operation 32 bit ('tmp', benchmarks/chstone/jpeg/src/jpeg_decode.c:753->benchmarks/chstone/jpeg/src/jpeg_decode.c:774) to 'buf_getv' [75]  (3.615 ns)

 <State 12>: 3.212ns
The critical path consists of the following:
	'call' operation 32 bit ('tmp', benchmarks/chstone/jpeg/src/jpeg_decode.c:753->benchmarks/chstone/jpeg/src/jpeg_decode.c:774) to 'buf_getv' [75]  (3.212 ns)

 <State 13>: 2.439ns
The critical path consists of the following:
	'load' operation 32 bit ('bit_set_mask_load_1', benchmarks/chstone/jpeg/src/jpeg_decode.c:755->benchmarks/chstone/jpeg/src/jpeg_decode.c:774) on array 'bit_set_mask' [86]  (1.297 ns)
	'and' operation 32 bit ('and_ln755', benchmarks/chstone/jpeg/src/jpeg_decode.c:755->benchmarks/chstone/jpeg/src/jpeg_decode.c:774) [87]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln755', benchmarks/chstone/jpeg/src/jpeg_decode.c:755->benchmarks/chstone/jpeg/src/jpeg_decode.c:774) [88]  (1.142 ns)

 <State 14>: 3.169ns
The critical path consists of the following:
	'load' operation 21 bit ('extend_mask_load_1', benchmarks/chstone/jpeg/src/jpeg_decode.c:756->benchmarks/chstone/jpeg/src/jpeg_decode.c:774) on array 'extend_mask' [92]  (0.730 ns)
	'or' operation 32 bit ('or_ln756', benchmarks/chstone/jpeg/src/jpeg_decode.c:756->benchmarks/chstone/jpeg/src/jpeg_decode.c:774) [94]  (0.000 ns)
	'add' operation 32 bit ('add_ln757', benchmarks/chstone/jpeg/src/jpeg_decode.c:757->benchmarks/chstone/jpeg/src/jpeg_decode.c:774) [95]  (1.142 ns)
	'store' operation 0 bit ('store_ln757', benchmarks/chstone/jpeg/src/jpeg_decode.c:757->benchmarks/chstone/jpeg/src/jpeg_decode.c:774) of variable 'add_ln757', benchmarks/chstone/jpeg/src/jpeg_decode.c:757->benchmarks/chstone/jpeg/src/jpeg_decode.c:774 on array 'HuffBuff' [96]  (1.297 ns)

 <State 15>: 0.000ns
The critical path consists of the following:

 <State 16>: 0.000ns
The critical path consists of the following:

 <State 17>: 0.000ns
The critical path consists of the following:

 <State 18>: 0.000ns
The critical path consists of the following:

 <State 19>: 0.000ns
The critical path consists of the following:

 <State 20>: 0.000ns
The critical path consists of the following:

 <State 21>: 0.000ns
The critical path consists of the following:

 <State 22>: 2.231ns
The critical path consists of the following:
	'call' operation 0 bit ('call_ln0') to 'decode_block.1_Pipeline_VITIS_LOOP_360_1' [116]  (2.231 ns)

 <State 23>: 0.000ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
