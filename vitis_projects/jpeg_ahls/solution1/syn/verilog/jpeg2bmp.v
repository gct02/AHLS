// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="jpeg2bmp_jpeg2bmp,hls_ip_2023_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu35p-fsvh2104-1-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.615000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=25,HLS_SYN_DSP=0,HLS_SYN_FF=8869,HLS_SYN_LUT=20521,HLS_VERSION=2023_2}" *)

module jpeg2bmp (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        inputVector_address0,
        inputVector_ce0,
        inputVector_we0,
        inputVector_d0,
        inputVector_q0,
        inputVector_address1,
        inputVector_ce1,
        inputVector_we1,
        inputVector_d1,
        inputVector_q1,
        jpegSize,
        outputVector_address0,
        outputVector_ce0,
        outputVector_we0,
        outputVector_d0
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_state8 = 12'd128;
parameter    ap_ST_fsm_state9 = 12'd256;
parameter    ap_ST_fsm_state10 = 12'd512;
parameter    ap_ST_fsm_state11 = 12'd1024;
parameter    ap_ST_fsm_state12 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] inputVector_address0;
output   inputVector_ce0;
output   inputVector_we0;
output  [7:0] inputVector_d0;
input  [7:0] inputVector_q0;
output  [12:0] inputVector_address1;
output   inputVector_ce1;
output   inputVector_we1;
output  [7:0] inputVector_d1;
input  [7:0] inputVector_q1;
input  [31:0] jpegSize;
output  [15:0] outputVector_address0;
output   outputVector_ce0;
output   outputVector_we0;
output  [7:0] outputVector_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] p_jinfo_image_height;
reg   [15:0] p_jinfo_image_width;
reg   [7:0] p_jinfo_jpeg_data;
reg   [7:0] p_jinfo_dc_xhuff_tbl_bits_address0;
reg    p_jinfo_dc_xhuff_tbl_bits_ce0;
reg    p_jinfo_dc_xhuff_tbl_bits_we0;
wire   [7:0] p_jinfo_dc_xhuff_tbl_bits_q0;
reg   [10:0] p_jinfo_ac_xhuff_tbl_huffval_address0;
reg    p_jinfo_ac_xhuff_tbl_huffval_ce0;
reg    p_jinfo_ac_xhuff_tbl_huffval_we0;
wire   [7:0] p_jinfo_ac_xhuff_tbl_huffval_q0;
reg   [7:0] p_jinfo_quant_tbl_quantval_address0;
reg    p_jinfo_quant_tbl_quantval_ce0;
reg    p_jinfo_quant_tbl_quantval_we0;
wire   [15:0] p_jinfo_quant_tbl_quantval_q0;
reg    p_jinfo_quant_tbl_quantval_ce1;
reg    p_jinfo_quant_tbl_quantval_we1;
reg   [16:0] p_jinfo_MCUWidth;
reg   [31:0] p_jinfo_NumMCU;
reg   [6:0] p_jinfo_dc_dhuff_tbl_maxcode_address0;
reg    p_jinfo_dc_dhuff_tbl_maxcode_ce0;
reg    p_jinfo_dc_dhuff_tbl_maxcode_we0;
wire   [31:0] p_jinfo_dc_dhuff_tbl_maxcode_q0;
reg    p_jinfo_dc_dhuff_tbl_maxcode_ce1;
reg    p_jinfo_dc_dhuff_tbl_maxcode_we1;
reg   [6:0] p_jinfo_dc_dhuff_tbl_mincode_address0;
reg    p_jinfo_dc_dhuff_tbl_mincode_ce0;
reg    p_jinfo_dc_dhuff_tbl_mincode_we0;
wire   [10:0] p_jinfo_dc_dhuff_tbl_mincode_q0;
reg   [6:0] p_jinfo_dc_dhuff_tbl_valptr_address0;
reg    p_jinfo_dc_dhuff_tbl_valptr_ce0;
reg    p_jinfo_dc_dhuff_tbl_valptr_we0;
wire   [10:0] p_jinfo_dc_dhuff_tbl_valptr_q0;
reg   [6:0] p_jinfo_dc_dhuff_tbl_ml_0;
reg   [6:0] p_jinfo_ac_dhuff_tbl_maxcode_address0;
reg    p_jinfo_ac_dhuff_tbl_maxcode_ce0;
reg    p_jinfo_ac_dhuff_tbl_maxcode_we0;
reg   [31:0] p_jinfo_ac_dhuff_tbl_maxcode_d0;
wire   [31:0] p_jinfo_ac_dhuff_tbl_maxcode_q0;
reg   [6:0] p_jinfo_ac_dhuff_tbl_maxcode_address1;
reg    p_jinfo_ac_dhuff_tbl_maxcode_ce1;
reg    p_jinfo_ac_dhuff_tbl_maxcode_we1;
reg   [31:0] p_jinfo_ac_dhuff_tbl_maxcode_d1;
reg   [6:0] p_jinfo_ac_dhuff_tbl_valptr_address0;
reg    p_jinfo_ac_dhuff_tbl_valptr_ce0;
reg    p_jinfo_ac_dhuff_tbl_valptr_we0;
reg   [10:0] p_jinfo_ac_dhuff_tbl_valptr_d0;
wire   [10:0] p_jinfo_ac_dhuff_tbl_valptr_q0;
reg   [6:0] p_jinfo_ac_dhuff_tbl_mincode_address0;
reg    p_jinfo_ac_dhuff_tbl_mincode_ce0;
reg    p_jinfo_ac_dhuff_tbl_mincode_we0;
reg   [10:0] p_jinfo_ac_dhuff_tbl_mincode_d0;
wire   [10:0] p_jinfo_ac_dhuff_tbl_mincode_q0;
reg   [6:0] p_jinfo_ac_dhuff_tbl_ml_0;
wire   [16:0] add_ln1207_1_fu_310_p2;
reg  signed [16:0] add_ln1207_1_reg_444;
wire    ap_CS_fsm_state3;
wire  signed [16:0] add_ln1208_1_fu_398_p2;
reg  signed [16:0] add_ln1208_1_reg_449;
wire    grp_read_markers_1_fu_112_ap_start;
wire    grp_read_markers_1_fu_112_ap_done;
wire    grp_read_markers_1_fu_112_ap_idle;
wire    grp_read_markers_1_fu_112_ap_ready;
wire   [15:0] grp_read_markers_1_fu_112_p_jinfo_image_height;
wire    grp_read_markers_1_fu_112_p_jinfo_image_height_ap_vld;
wire   [15:0] grp_read_markers_1_fu_112_p_jinfo_image_width;
wire    grp_read_markers_1_fu_112_p_jinfo_image_width_ap_vld;
wire   [7:0] grp_read_markers_1_fu_112_p_jinfo_jpeg_data;
wire    grp_read_markers_1_fu_112_p_jinfo_jpeg_data_ap_vld;
wire   [7:0] grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_address0;
wire    grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_ce0;
wire    grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_we0;
wire   [7:0] grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_d0;
wire   [10:0] grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_address0;
wire    grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_ce0;
wire    grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_we0;
wire   [7:0] grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_d0;
wire   [7:0] grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_address0;
wire    grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_ce0;
wire    grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_we0;
wire   [15:0] grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_d0;
wire   [7:0] grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_address1;
wire    grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_ce1;
wire    grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_we1;
wire   [15:0] grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_d1;
wire    grp_huff_make_dhuff_tb_1_fu_136_ap_start;
wire    grp_huff_make_dhuff_tb_1_fu_136_ap_done;
wire    grp_huff_make_dhuff_tb_1_fu_136_ap_idle;
wire    grp_huff_make_dhuff_tb_1_fu_136_ap_ready;
reg   [9:0] grp_huff_make_dhuff_tb_1_fu_136_p_xhtbl_bits_offset;
wire   [6:0] grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_address0;
wire    grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_ce0;
wire    grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_we0;
wire   [31:0] grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_d0;
reg   [31:0] grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_q0;
wire   [6:0] grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_address1;
wire    grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_ce1;
wire    grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_we1;
wire   [31:0] grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_d1;
reg   [0:0] grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_offset;
wire   [6:0] grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_address0;
wire    grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_ce0;
wire    grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_we0;
wire   [10:0] grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_d0;
reg   [0:0] grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_offset;
wire   [6:0] grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_address0;
wire    grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_ce0;
wire    grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_we0;
wire   [10:0] grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_d0;
reg   [0:0] grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_offset;
wire   [7:0] grp_huff_make_dhuff_tb_1_fu_136_p_jinfo_dc_xhuff_tbl_bits_address0;
wire    grp_huff_make_dhuff_tb_1_fu_136_p_jinfo_dc_xhuff_tbl_bits_ce0;
wire   [31:0] grp_huff_make_dhuff_tb_1_fu_136_ap_return;
wire    grp_huff_make_dhuff_tb_2_fu_164_ap_start;
wire    grp_huff_make_dhuff_tb_2_fu_164_ap_done;
wire    grp_huff_make_dhuff_tb_2_fu_164_ap_idle;
wire    grp_huff_make_dhuff_tb_2_fu_164_ap_ready;
wire   [7:0] grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_dc_xhuff_tbl_bits_address0;
wire    grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_dc_xhuff_tbl_bits_ce0;
wire   [6:0] grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_address0;
wire    grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_ce0;
wire    grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_we0;
wire   [31:0] grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_d0;
wire   [6:0] grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_address1;
wire    grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_ce1;
wire    grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_we1;
wire   [31:0] grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_d1;
wire   [6:0] grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_address0;
wire    grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_ce0;
wire    grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_we0;
wire   [10:0] grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_d0;
wire   [6:0] grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_address0;
wire    grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_ce0;
wire    grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_we0;
wire   [10:0] grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_d0;
wire   [6:0] grp_huff_make_dhuff_tb_2_fu_164_ap_return;
wire    grp_decode_1_fu_176_ap_start;
wire    grp_decode_1_fu_176_ap_done;
wire    grp_decode_1_fu_176_ap_idle;
wire    grp_decode_1_fu_176_ap_ready;
wire   [15:0] grp_decode_1_fu_176_outputVector_address0;
wire    grp_decode_1_fu_176_outputVector_ce0;
wire    grp_decode_1_fu_176_outputVector_we0;
wire   [7:0] grp_decode_1_fu_176_outputVector_d0;
wire   [6:0] grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_maxcode_address0;
wire    grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_maxcode_ce0;
wire   [6:0] grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_valptr_address0;
wire    grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_valptr_ce0;
wire   [6:0] grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_mincode_address0;
wire    grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_mincode_ce0;
wire   [10:0] grp_decode_1_fu_176_p_jinfo_ac_xhuff_tbl_huffval_address0;
wire    grp_decode_1_fu_176_p_jinfo_ac_xhuff_tbl_huffval_ce0;
wire   [6:0] grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_maxcode_address0;
wire    grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_maxcode_ce0;
wire   [6:0] grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_valptr_address0;
wire    grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_valptr_ce0;
wire   [6:0] grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_mincode_address0;
wire    grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_mincode_ce0;
wire   [7:0] grp_decode_1_fu_176_p_jinfo_quant_tbl_quantval_address0;
wire    grp_decode_1_fu_176_p_jinfo_quant_tbl_quantval_ce0;
reg    grp_read_markers_1_fu_112_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_huff_make_dhuff_tb_1_fu_136_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state10;
reg    grp_huff_make_dhuff_tb_2_fu_164_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg    grp_decode_1_fu_176_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire   [31:0] mul_ln1209_fu_416_p2;
wire   [6:0] trunc_ln1204_fu_428_p1;
wire  signed [16:0] sext_ln1207_fu_232_p1;
wire   [16:0] add_ln1207_fu_236_p2;
wire   [16:0] sub_ln1207_fu_250_p2;
wire   [13:0] trunc_ln1207_1_fu_256_p4;
wire  signed [14:0] sext_ln1207_2_fu_266_p1;
wire   [15:0] zext_ln1207_fu_270_p1;
wire   [13:0] trunc_ln1207_2_fu_280_p4;
wire  signed [14:0] sext_ln1207_3_fu_290_p1;
wire   [0:0] tmp_2_fu_242_p3;
wire   [15:0] sub_ln1207_1_fu_274_p2;
wire   [15:0] zext_ln1207_1_fu_294_p1;
wire   [15:0] select_ln1207_fu_298_p3;
wire  signed [16:0] sext_ln1207_4_fu_306_p1;
wire  signed [16:0] sext_ln1208_fu_320_p1;
wire   [16:0] add_ln1208_fu_324_p2;
wire   [16:0] sub_ln1208_fu_338_p2;
wire   [13:0] trunc_ln1208_1_fu_344_p4;
wire  signed [14:0] sext_ln1208_2_fu_354_p1;
wire   [15:0] zext_ln1208_fu_358_p1;
wire   [13:0] trunc_ln1208_2_fu_368_p4;
wire  signed [14:0] sext_ln1208_3_fu_378_p1;
wire   [0:0] tmp_3_fu_330_p3;
wire   [15:0] sub_ln1208_1_fu_362_p2;
wire   [15:0] zext_ln1208_1_fu_382_p1;
wire   [15:0] select_ln1208_fu_386_p3;
wire  signed [16:0] sext_ln1208_4_fu_394_p1;
reg   [11:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 p_jinfo_image_height = 16'd0;
#0 p_jinfo_image_width = 16'd0;
#0 p_jinfo_jpeg_data = 8'd0;
#0 p_jinfo_MCUWidth = 17'd0;
#0 p_jinfo_NumMCU = 32'd0;
#0 p_jinfo_dc_dhuff_tbl_ml_0 = 7'd0;
#0 p_jinfo_ac_dhuff_tbl_ml_0 = 7'd0;
#0 grp_read_markers_1_fu_112_ap_start_reg = 1'b0;
#0 grp_huff_make_dhuff_tb_1_fu_136_ap_start_reg = 1'b0;
#0 grp_huff_make_dhuff_tb_2_fu_164_ap_start_reg = 1'b0;
#0 grp_decode_1_fu_176_ap_start_reg = 1'b0;
end

jpeg2bmp_p_jinfo_dc_xhuff_tbl_bits_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
p_jinfo_dc_xhuff_tbl_bits_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_jinfo_dc_xhuff_tbl_bits_address0),
    .ce0(p_jinfo_dc_xhuff_tbl_bits_ce0),
    .we0(p_jinfo_dc_xhuff_tbl_bits_we0),
    .d0(grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_d0),
    .q0(p_jinfo_dc_xhuff_tbl_bits_q0)
);

jpeg2bmp_p_jinfo_ac_xhuff_tbl_huffval_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 1154 ),
    .AddressWidth( 11 ))
p_jinfo_ac_xhuff_tbl_huffval_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_jinfo_ac_xhuff_tbl_huffval_address0),
    .ce0(p_jinfo_ac_xhuff_tbl_huffval_ce0),
    .we0(p_jinfo_ac_xhuff_tbl_huffval_we0),
    .d0(grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_d0),
    .q0(p_jinfo_ac_xhuff_tbl_huffval_q0)
);

jpeg2bmp_p_jinfo_quant_tbl_quantval_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
p_jinfo_quant_tbl_quantval_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_jinfo_quant_tbl_quantval_address0),
    .ce0(p_jinfo_quant_tbl_quantval_ce0),
    .we0(p_jinfo_quant_tbl_quantval_we0),
    .d0(grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_d0),
    .q0(p_jinfo_quant_tbl_quantval_q0),
    .address1(grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_address1),
    .ce1(p_jinfo_quant_tbl_quantval_ce1),
    .we1(p_jinfo_quant_tbl_quantval_we1),
    .d1(grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_d1)
);

jpeg2bmp_p_jinfo_dc_dhuff_tbl_maxcode_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
p_jinfo_dc_dhuff_tbl_maxcode_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_jinfo_dc_dhuff_tbl_maxcode_address0),
    .ce0(p_jinfo_dc_dhuff_tbl_maxcode_ce0),
    .we0(p_jinfo_dc_dhuff_tbl_maxcode_we0),
    .d0(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_d0),
    .q0(p_jinfo_dc_dhuff_tbl_maxcode_q0),
    .address1(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_address1),
    .ce1(p_jinfo_dc_dhuff_tbl_maxcode_ce1),
    .we1(p_jinfo_dc_dhuff_tbl_maxcode_we1),
    .d1(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_d1)
);

jpeg2bmp_p_jinfo_dc_dhuff_tbl_mincode_RAM_AUTO_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
p_jinfo_dc_dhuff_tbl_mincode_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_jinfo_dc_dhuff_tbl_mincode_address0),
    .ce0(p_jinfo_dc_dhuff_tbl_mincode_ce0),
    .we0(p_jinfo_dc_dhuff_tbl_mincode_we0),
    .d0(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_d0),
    .q0(p_jinfo_dc_dhuff_tbl_mincode_q0)
);

jpeg2bmp_p_jinfo_dc_dhuff_tbl_mincode_RAM_AUTO_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
p_jinfo_dc_dhuff_tbl_valptr_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_jinfo_dc_dhuff_tbl_valptr_address0),
    .ce0(p_jinfo_dc_dhuff_tbl_valptr_ce0),
    .we0(p_jinfo_dc_dhuff_tbl_valptr_we0),
    .d0(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_d0),
    .q0(p_jinfo_dc_dhuff_tbl_valptr_q0)
);

jpeg2bmp_p_jinfo_dc_dhuff_tbl_maxcode_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
p_jinfo_ac_dhuff_tbl_maxcode_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_jinfo_ac_dhuff_tbl_maxcode_address0),
    .ce0(p_jinfo_ac_dhuff_tbl_maxcode_ce0),
    .we0(p_jinfo_ac_dhuff_tbl_maxcode_we0),
    .d0(p_jinfo_ac_dhuff_tbl_maxcode_d0),
    .q0(p_jinfo_ac_dhuff_tbl_maxcode_q0),
    .address1(p_jinfo_ac_dhuff_tbl_maxcode_address1),
    .ce1(p_jinfo_ac_dhuff_tbl_maxcode_ce1),
    .we1(p_jinfo_ac_dhuff_tbl_maxcode_we1),
    .d1(p_jinfo_ac_dhuff_tbl_maxcode_d1)
);

jpeg2bmp_p_jinfo_dc_dhuff_tbl_mincode_RAM_AUTO_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
p_jinfo_ac_dhuff_tbl_valptr_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_jinfo_ac_dhuff_tbl_valptr_address0),
    .ce0(p_jinfo_ac_dhuff_tbl_valptr_ce0),
    .we0(p_jinfo_ac_dhuff_tbl_valptr_we0),
    .d0(p_jinfo_ac_dhuff_tbl_valptr_d0),
    .q0(p_jinfo_ac_dhuff_tbl_valptr_q0)
);

jpeg2bmp_p_jinfo_dc_dhuff_tbl_mincode_RAM_AUTO_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
p_jinfo_ac_dhuff_tbl_mincode_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_jinfo_ac_dhuff_tbl_mincode_address0),
    .ce0(p_jinfo_ac_dhuff_tbl_mincode_ce0),
    .we0(p_jinfo_ac_dhuff_tbl_mincode_we0),
    .d0(p_jinfo_ac_dhuff_tbl_mincode_d0),
    .q0(p_jinfo_ac_dhuff_tbl_mincode_q0)
);

jpeg2bmp_read_markers_1 grp_read_markers_1_fu_112(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_read_markers_1_fu_112_ap_start),
    .ap_done(grp_read_markers_1_fu_112_ap_done),
    .ap_idle(grp_read_markers_1_fu_112_ap_idle),
    .ap_ready(grp_read_markers_1_fu_112_ap_ready),
    .p_jinfo_image_height(grp_read_markers_1_fu_112_p_jinfo_image_height),
    .p_jinfo_image_height_ap_vld(grp_read_markers_1_fu_112_p_jinfo_image_height_ap_vld),
    .p_jinfo_image_width(grp_read_markers_1_fu_112_p_jinfo_image_width),
    .p_jinfo_image_width_ap_vld(grp_read_markers_1_fu_112_p_jinfo_image_width_ap_vld),
    .p_jinfo_jpeg_data(grp_read_markers_1_fu_112_p_jinfo_jpeg_data),
    .p_jinfo_jpeg_data_ap_vld(grp_read_markers_1_fu_112_p_jinfo_jpeg_data_ap_vld),
    .p_jinfo_dc_xhuff_tbl_bits_address0(grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_address0),
    .p_jinfo_dc_xhuff_tbl_bits_ce0(grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_ce0),
    .p_jinfo_dc_xhuff_tbl_bits_we0(grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_we0),
    .p_jinfo_dc_xhuff_tbl_bits_d0(grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_d0),
    .p_jinfo_ac_xhuff_tbl_huffval_address0(grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_address0),
    .p_jinfo_ac_xhuff_tbl_huffval_ce0(grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_ce0),
    .p_jinfo_ac_xhuff_tbl_huffval_we0(grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_we0),
    .p_jinfo_ac_xhuff_tbl_huffval_d0(grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_d0),
    .p_jinfo_quant_tbl_quantval_address0(grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_address0),
    .p_jinfo_quant_tbl_quantval_ce0(grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_ce0),
    .p_jinfo_quant_tbl_quantval_we0(grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_we0),
    .p_jinfo_quant_tbl_quantval_d0(grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_d0),
    .p_jinfo_quant_tbl_quantval_address1(grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_address1),
    .p_jinfo_quant_tbl_quantval_ce1(grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_ce1),
    .p_jinfo_quant_tbl_quantval_we1(grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_we1),
    .p_jinfo_quant_tbl_quantval_d1(grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_d1)
);

jpeg2bmp_huff_make_dhuff_tb_1 grp_huff_make_dhuff_tb_1_fu_136(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_huff_make_dhuff_tb_1_fu_136_ap_start),
    .ap_done(grp_huff_make_dhuff_tb_1_fu_136_ap_done),
    .ap_idle(grp_huff_make_dhuff_tb_1_fu_136_ap_idle),
    .ap_ready(grp_huff_make_dhuff_tb_1_fu_136_ap_ready),
    .p_xhtbl_bits_offset(grp_huff_make_dhuff_tb_1_fu_136_p_xhtbl_bits_offset),
    .p_dhtbl_maxcode_address0(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_address0),
    .p_dhtbl_maxcode_ce0(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_ce0),
    .p_dhtbl_maxcode_we0(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_we0),
    .p_dhtbl_maxcode_d0(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_d0),
    .p_dhtbl_maxcode_q0(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_q0),
    .p_dhtbl_maxcode_address1(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_address1),
    .p_dhtbl_maxcode_ce1(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_ce1),
    .p_dhtbl_maxcode_we1(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_we1),
    .p_dhtbl_maxcode_d1(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_d1),
    .p_dhtbl_maxcode_offset(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_offset),
    .p_dhtbl_mincode_address0(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_address0),
    .p_dhtbl_mincode_ce0(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_ce0),
    .p_dhtbl_mincode_we0(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_we0),
    .p_dhtbl_mincode_d0(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_d0),
    .p_dhtbl_mincode_offset(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_offset),
    .p_dhtbl_valptr_address0(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_address0),
    .p_dhtbl_valptr_ce0(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_ce0),
    .p_dhtbl_valptr_we0(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_we0),
    .p_dhtbl_valptr_d0(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_d0),
    .p_dhtbl_valptr_offset(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_offset),
    .p_jinfo_dc_xhuff_tbl_bits_address0(grp_huff_make_dhuff_tb_1_fu_136_p_jinfo_dc_xhuff_tbl_bits_address0),
    .p_jinfo_dc_xhuff_tbl_bits_ce0(grp_huff_make_dhuff_tb_1_fu_136_p_jinfo_dc_xhuff_tbl_bits_ce0),
    .p_jinfo_dc_xhuff_tbl_bits_q0(p_jinfo_dc_xhuff_tbl_bits_q0),
    .ap_return(grp_huff_make_dhuff_tb_1_fu_136_ap_return)
);

jpeg2bmp_huff_make_dhuff_tb_2 grp_huff_make_dhuff_tb_2_fu_164(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_huff_make_dhuff_tb_2_fu_164_ap_start),
    .ap_done(grp_huff_make_dhuff_tb_2_fu_164_ap_done),
    .ap_idle(grp_huff_make_dhuff_tb_2_fu_164_ap_idle),
    .ap_ready(grp_huff_make_dhuff_tb_2_fu_164_ap_ready),
    .p_jinfo_dc_xhuff_tbl_bits_address0(grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_dc_xhuff_tbl_bits_address0),
    .p_jinfo_dc_xhuff_tbl_bits_ce0(grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_dc_xhuff_tbl_bits_ce0),
    .p_jinfo_dc_xhuff_tbl_bits_q0(p_jinfo_dc_xhuff_tbl_bits_q0),
    .p_jinfo_ac_dhuff_tbl_maxcode_address0(grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_address0),
    .p_jinfo_ac_dhuff_tbl_maxcode_ce0(grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_ce0),
    .p_jinfo_ac_dhuff_tbl_maxcode_we0(grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_we0),
    .p_jinfo_ac_dhuff_tbl_maxcode_d0(grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_d0),
    .p_jinfo_ac_dhuff_tbl_maxcode_q0(p_jinfo_ac_dhuff_tbl_maxcode_q0),
    .p_jinfo_ac_dhuff_tbl_maxcode_address1(grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_address1),
    .p_jinfo_ac_dhuff_tbl_maxcode_ce1(grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_ce1),
    .p_jinfo_ac_dhuff_tbl_maxcode_we1(grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_we1),
    .p_jinfo_ac_dhuff_tbl_maxcode_d1(grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_d1),
    .p_jinfo_ac_dhuff_tbl_valptr_address0(grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_address0),
    .p_jinfo_ac_dhuff_tbl_valptr_ce0(grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_ce0),
    .p_jinfo_ac_dhuff_tbl_valptr_we0(grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_we0),
    .p_jinfo_ac_dhuff_tbl_valptr_d0(grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_d0),
    .p_jinfo_ac_dhuff_tbl_mincode_address0(grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_address0),
    .p_jinfo_ac_dhuff_tbl_mincode_ce0(grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_ce0),
    .p_jinfo_ac_dhuff_tbl_mincode_we0(grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_we0),
    .p_jinfo_ac_dhuff_tbl_mincode_d0(grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_d0),
    .ap_return(grp_huff_make_dhuff_tb_2_fu_164_ap_return)
);

jpeg2bmp_decode_1 grp_decode_1_fu_176(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_decode_1_fu_176_ap_start),
    .ap_done(grp_decode_1_fu_176_ap_done),
    .ap_idle(grp_decode_1_fu_176_ap_idle),
    .ap_ready(grp_decode_1_fu_176_ap_ready),
    .outputVector_address0(grp_decode_1_fu_176_outputVector_address0),
    .outputVector_ce0(grp_decode_1_fu_176_outputVector_ce0),
    .outputVector_we0(grp_decode_1_fu_176_outputVector_we0),
    .outputVector_d0(grp_decode_1_fu_176_outputVector_d0),
    .p_jinfo_jpeg_data(p_jinfo_jpeg_data),
    .p_jinfo_NumMCU(p_jinfo_NumMCU),
    .p_jinfo_image_width(p_jinfo_image_width),
    .p_jinfo_image_height(p_jinfo_image_height),
    .p_jinfo_MCUWidth(p_jinfo_MCUWidth),
    .p_jinfo_dc_dhuff_tbl_ml_0(p_jinfo_dc_dhuff_tbl_ml_0),
    .p_jinfo_dc_dhuff_tbl_maxcode_address0(grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_maxcode_address0),
    .p_jinfo_dc_dhuff_tbl_maxcode_ce0(grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_maxcode_ce0),
    .p_jinfo_dc_dhuff_tbl_maxcode_q0(p_jinfo_dc_dhuff_tbl_maxcode_q0),
    .p_jinfo_dc_dhuff_tbl_valptr_address0(grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_valptr_address0),
    .p_jinfo_dc_dhuff_tbl_valptr_ce0(grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_valptr_ce0),
    .p_jinfo_dc_dhuff_tbl_valptr_q0(p_jinfo_dc_dhuff_tbl_valptr_q0),
    .p_jinfo_dc_dhuff_tbl_mincode_address0(grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_mincode_address0),
    .p_jinfo_dc_dhuff_tbl_mincode_ce0(grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_mincode_ce0),
    .p_jinfo_dc_dhuff_tbl_mincode_q0(p_jinfo_dc_dhuff_tbl_mincode_q0),
    .p_jinfo_ac_xhuff_tbl_huffval_address0(grp_decode_1_fu_176_p_jinfo_ac_xhuff_tbl_huffval_address0),
    .p_jinfo_ac_xhuff_tbl_huffval_ce0(grp_decode_1_fu_176_p_jinfo_ac_xhuff_tbl_huffval_ce0),
    .p_jinfo_ac_xhuff_tbl_huffval_q0(p_jinfo_ac_xhuff_tbl_huffval_q0),
    .p_jinfo_ac_dhuff_tbl_ml_0(p_jinfo_ac_dhuff_tbl_ml_0),
    .p_jinfo_ac_dhuff_tbl_maxcode_address0(grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_maxcode_address0),
    .p_jinfo_ac_dhuff_tbl_maxcode_ce0(grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_maxcode_ce0),
    .p_jinfo_ac_dhuff_tbl_maxcode_q0(p_jinfo_ac_dhuff_tbl_maxcode_q0),
    .p_jinfo_ac_dhuff_tbl_valptr_address0(grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_valptr_address0),
    .p_jinfo_ac_dhuff_tbl_valptr_ce0(grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_valptr_ce0),
    .p_jinfo_ac_dhuff_tbl_valptr_q0(p_jinfo_ac_dhuff_tbl_valptr_q0),
    .p_jinfo_ac_dhuff_tbl_mincode_address0(grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_mincode_address0),
    .p_jinfo_ac_dhuff_tbl_mincode_ce0(grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_mincode_ce0),
    .p_jinfo_ac_dhuff_tbl_mincode_q0(p_jinfo_ac_dhuff_tbl_mincode_q0),
    .p_jinfo_quant_tbl_quantval_address0(grp_decode_1_fu_176_p_jinfo_quant_tbl_quantval_address0),
    .p_jinfo_quant_tbl_quantval_ce0(grp_decode_1_fu_176_p_jinfo_quant_tbl_quantval_ce0),
    .p_jinfo_quant_tbl_quantval_q0(p_jinfo_quant_tbl_quantval_q0)
);

jpeg2bmp_mul_17s_17s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 32 ))
mul_17s_17s_32_1_1_U234(
    .din0(add_ln1208_1_reg_449),
    .din1(add_ln1207_1_reg_444),
    .dout(mul_ln1209_fu_416_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_decode_1_fu_176_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_decode_1_fu_176_ap_start_reg <= 1'b1;
        end else if ((grp_decode_1_fu_176_ap_ready == 1'b1)) begin
            grp_decode_1_fu_176_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_huff_make_dhuff_tb_1_fu_136_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
            grp_huff_make_dhuff_tb_1_fu_136_ap_start_reg <= 1'b1;
        end else if ((grp_huff_make_dhuff_tb_1_fu_136_ap_ready == 1'b1)) begin
            grp_huff_make_dhuff_tb_1_fu_136_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_huff_make_dhuff_tb_2_fu_164_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_huff_make_dhuff_tb_2_fu_164_ap_start_reg <= 1'b1;
        end else if ((grp_huff_make_dhuff_tb_2_fu_164_ap_ready == 1'b1)) begin
            grp_huff_make_dhuff_tb_2_fu_164_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_read_markers_1_fu_112_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_read_markers_1_fu_112_ap_start_reg <= 1'b1;
        end else if ((grp_read_markers_1_fu_112_ap_ready == 1'b1)) begin
            grp_read_markers_1_fu_112_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln1207_1_reg_444 <= add_ln1207_1_fu_310_p2;
        add_ln1208_1_reg_449 <= add_ln1208_1_fu_398_p2;
        p_jinfo_MCUWidth <= add_ln1208_1_fu_398_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_huff_make_dhuff_tb_1_fu_136_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        p_jinfo_NumMCU <= mul_ln1209_fu_416_p2;
        p_jinfo_dc_dhuff_tbl_ml_0 <= trunc_ln1204_fu_428_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_huff_make_dhuff_tb_2_fu_164_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        p_jinfo_ac_dhuff_tbl_ml_0 <= grp_huff_make_dhuff_tb_2_fu_164_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_read_markers_1_fu_112_p_jinfo_image_height_ap_vld == 1'b1))) begin
        p_jinfo_image_height <= grp_read_markers_1_fu_112_p_jinfo_image_height;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_read_markers_1_fu_112_p_jinfo_image_width_ap_vld == 1'b1))) begin
        p_jinfo_image_width <= grp_read_markers_1_fu_112_p_jinfo_image_width;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_read_markers_1_fu_112_p_jinfo_jpeg_data_ap_vld == 1'b1))) begin
        p_jinfo_jpeg_data <= grp_read_markers_1_fu_112_p_jinfo_jpeg_data;
    end
end

always @ (*) begin
    if ((grp_huff_make_dhuff_tb_1_fu_136_ap_done == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if ((grp_decode_1_fu_176_ap_done == 1'b0)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_read_markers_1_fu_112_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_huff_make_dhuff_tb_1_fu_136_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_huff_make_dhuff_tb_1_fu_136_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((grp_huff_make_dhuff_tb_2_fu_164_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((grp_decode_1_fu_176_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_decode_1_fu_176_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_offset = 1'd1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_offset = 1'd0;
    end else begin
        grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_q0 = p_jinfo_ac_dhuff_tbl_maxcode_q0;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_q0 = p_jinfo_dc_dhuff_tbl_maxcode_q0;
    end else begin
        grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_offset = 1'd1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_offset = 1'd0;
    end else begin
        grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_offset = 1'd1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_offset = 1'd0;
    end else begin
        grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_huff_make_dhuff_tb_1_fu_136_p_xhtbl_bits_offset = 10'd144;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_huff_make_dhuff_tb_1_fu_136_p_xhtbl_bits_offset = 10'd656;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_huff_make_dhuff_tb_1_fu_136_p_xhtbl_bits_offset = 10'd512;
    end else begin
        grp_huff_make_dhuff_tb_1_fu_136_p_xhtbl_bits_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_jinfo_ac_dhuff_tbl_maxcode_address0 = grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_maxcode_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        p_jinfo_ac_dhuff_tbl_maxcode_address0 = grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_jinfo_ac_dhuff_tbl_maxcode_address0 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_address0;
    end else begin
        p_jinfo_ac_dhuff_tbl_maxcode_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_jinfo_ac_dhuff_tbl_maxcode_address1 = grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_address1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_jinfo_ac_dhuff_tbl_maxcode_address1 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_address1;
    end else begin
        p_jinfo_ac_dhuff_tbl_maxcode_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_jinfo_ac_dhuff_tbl_maxcode_ce0 = grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_maxcode_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        p_jinfo_ac_dhuff_tbl_maxcode_ce0 = grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_jinfo_ac_dhuff_tbl_maxcode_ce0 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_ce0;
    end else begin
        p_jinfo_ac_dhuff_tbl_maxcode_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_jinfo_ac_dhuff_tbl_maxcode_ce1 = grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_ce1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_jinfo_ac_dhuff_tbl_maxcode_ce1 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_ce1;
    end else begin
        p_jinfo_ac_dhuff_tbl_maxcode_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_jinfo_ac_dhuff_tbl_maxcode_d0 = grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_d0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_jinfo_ac_dhuff_tbl_maxcode_d0 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_d0;
    end else begin
        p_jinfo_ac_dhuff_tbl_maxcode_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_jinfo_ac_dhuff_tbl_maxcode_d1 = grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_d1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_jinfo_ac_dhuff_tbl_maxcode_d1 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_d1;
    end else begin
        p_jinfo_ac_dhuff_tbl_maxcode_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_jinfo_ac_dhuff_tbl_maxcode_we0 = grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_we0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_jinfo_ac_dhuff_tbl_maxcode_we0 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_we0;
    end else begin
        p_jinfo_ac_dhuff_tbl_maxcode_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_jinfo_ac_dhuff_tbl_maxcode_we1 = grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_we1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_jinfo_ac_dhuff_tbl_maxcode_we1 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_we1;
    end else begin
        p_jinfo_ac_dhuff_tbl_maxcode_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_jinfo_ac_dhuff_tbl_mincode_address0 = grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_mincode_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        p_jinfo_ac_dhuff_tbl_mincode_address0 = grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_jinfo_ac_dhuff_tbl_mincode_address0 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_address0;
    end else begin
        p_jinfo_ac_dhuff_tbl_mincode_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_jinfo_ac_dhuff_tbl_mincode_ce0 = grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_mincode_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        p_jinfo_ac_dhuff_tbl_mincode_ce0 = grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_jinfo_ac_dhuff_tbl_mincode_ce0 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_ce0;
    end else begin
        p_jinfo_ac_dhuff_tbl_mincode_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_jinfo_ac_dhuff_tbl_mincode_d0 = grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_d0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_jinfo_ac_dhuff_tbl_mincode_d0 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_d0;
    end else begin
        p_jinfo_ac_dhuff_tbl_mincode_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_jinfo_ac_dhuff_tbl_mincode_we0 = grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_we0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_jinfo_ac_dhuff_tbl_mincode_we0 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_we0;
    end else begin
        p_jinfo_ac_dhuff_tbl_mincode_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_jinfo_ac_dhuff_tbl_valptr_address0 = grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_valptr_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        p_jinfo_ac_dhuff_tbl_valptr_address0 = grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_jinfo_ac_dhuff_tbl_valptr_address0 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_address0;
    end else begin
        p_jinfo_ac_dhuff_tbl_valptr_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_jinfo_ac_dhuff_tbl_valptr_ce0 = grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_valptr_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        p_jinfo_ac_dhuff_tbl_valptr_ce0 = grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_jinfo_ac_dhuff_tbl_valptr_ce0 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_ce0;
    end else begin
        p_jinfo_ac_dhuff_tbl_valptr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_jinfo_ac_dhuff_tbl_valptr_d0 = grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_d0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_jinfo_ac_dhuff_tbl_valptr_d0 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_d0;
    end else begin
        p_jinfo_ac_dhuff_tbl_valptr_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_jinfo_ac_dhuff_tbl_valptr_we0 = grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_we0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_jinfo_ac_dhuff_tbl_valptr_we0 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_we0;
    end else begin
        p_jinfo_ac_dhuff_tbl_valptr_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_jinfo_ac_xhuff_tbl_huffval_address0 = grp_decode_1_fu_176_p_jinfo_ac_xhuff_tbl_huffval_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        p_jinfo_ac_xhuff_tbl_huffval_address0 = grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_address0;
    end else begin
        p_jinfo_ac_xhuff_tbl_huffval_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_jinfo_ac_xhuff_tbl_huffval_ce0 = grp_decode_1_fu_176_p_jinfo_ac_xhuff_tbl_huffval_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        p_jinfo_ac_xhuff_tbl_huffval_ce0 = grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_ce0;
    end else begin
        p_jinfo_ac_xhuff_tbl_huffval_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_jinfo_ac_xhuff_tbl_huffval_we0 = grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_we0;
    end else begin
        p_jinfo_ac_xhuff_tbl_huffval_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_jinfo_dc_dhuff_tbl_maxcode_address0 = grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_maxcode_address0;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        p_jinfo_dc_dhuff_tbl_maxcode_address0 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_address0;
    end else begin
        p_jinfo_dc_dhuff_tbl_maxcode_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_jinfo_dc_dhuff_tbl_maxcode_ce0 = grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_maxcode_ce0;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        p_jinfo_dc_dhuff_tbl_maxcode_ce0 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_ce0;
    end else begin
        p_jinfo_dc_dhuff_tbl_maxcode_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        p_jinfo_dc_dhuff_tbl_maxcode_ce1 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_ce1;
    end else begin
        p_jinfo_dc_dhuff_tbl_maxcode_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        p_jinfo_dc_dhuff_tbl_maxcode_we0 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_we0;
    end else begin
        p_jinfo_dc_dhuff_tbl_maxcode_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        p_jinfo_dc_dhuff_tbl_maxcode_we1 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_we1;
    end else begin
        p_jinfo_dc_dhuff_tbl_maxcode_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_jinfo_dc_dhuff_tbl_mincode_address0 = grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_mincode_address0;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        p_jinfo_dc_dhuff_tbl_mincode_address0 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_address0;
    end else begin
        p_jinfo_dc_dhuff_tbl_mincode_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_jinfo_dc_dhuff_tbl_mincode_ce0 = grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_mincode_ce0;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        p_jinfo_dc_dhuff_tbl_mincode_ce0 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_ce0;
    end else begin
        p_jinfo_dc_dhuff_tbl_mincode_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        p_jinfo_dc_dhuff_tbl_mincode_we0 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_we0;
    end else begin
        p_jinfo_dc_dhuff_tbl_mincode_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_jinfo_dc_dhuff_tbl_valptr_address0 = grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_valptr_address0;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        p_jinfo_dc_dhuff_tbl_valptr_address0 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_address0;
    end else begin
        p_jinfo_dc_dhuff_tbl_valptr_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_jinfo_dc_dhuff_tbl_valptr_ce0 = grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_valptr_ce0;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        p_jinfo_dc_dhuff_tbl_valptr_ce0 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_ce0;
    end else begin
        p_jinfo_dc_dhuff_tbl_valptr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        p_jinfo_dc_dhuff_tbl_valptr_we0 = grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_we0;
    end else begin
        p_jinfo_dc_dhuff_tbl_valptr_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_jinfo_dc_xhuff_tbl_bits_address0 = grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_dc_xhuff_tbl_bits_address0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        p_jinfo_dc_xhuff_tbl_bits_address0 = grp_huff_make_dhuff_tb_1_fu_136_p_jinfo_dc_xhuff_tbl_bits_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        p_jinfo_dc_xhuff_tbl_bits_address0 = grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_address0;
    end else begin
        p_jinfo_dc_xhuff_tbl_bits_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_jinfo_dc_xhuff_tbl_bits_ce0 = grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_dc_xhuff_tbl_bits_ce0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        p_jinfo_dc_xhuff_tbl_bits_ce0 = grp_huff_make_dhuff_tb_1_fu_136_p_jinfo_dc_xhuff_tbl_bits_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        p_jinfo_dc_xhuff_tbl_bits_ce0 = grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_ce0;
    end else begin
        p_jinfo_dc_xhuff_tbl_bits_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_jinfo_dc_xhuff_tbl_bits_we0 = grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_we0;
    end else begin
        p_jinfo_dc_xhuff_tbl_bits_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_jinfo_quant_tbl_quantval_address0 = grp_decode_1_fu_176_p_jinfo_quant_tbl_quantval_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        p_jinfo_quant_tbl_quantval_address0 = grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_address0;
    end else begin
        p_jinfo_quant_tbl_quantval_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_jinfo_quant_tbl_quantval_ce0 = grp_decode_1_fu_176_p_jinfo_quant_tbl_quantval_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        p_jinfo_quant_tbl_quantval_ce0 = grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_ce0;
    end else begin
        p_jinfo_quant_tbl_quantval_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_jinfo_quant_tbl_quantval_ce1 = grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_ce1;
    end else begin
        p_jinfo_quant_tbl_quantval_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_jinfo_quant_tbl_quantval_we0 = grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_we0;
    end else begin
        p_jinfo_quant_tbl_quantval_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_jinfo_quant_tbl_quantval_we1 = grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_we1;
    end else begin
        p_jinfo_quant_tbl_quantval_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_read_markers_1_fu_112_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_huff_make_dhuff_tb_1_fu_136_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_huff_make_dhuff_tb_1_fu_136_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_huff_make_dhuff_tb_2_fu_164_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_huff_make_dhuff_tb_1_fu_136_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_decode_1_fu_176_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1207_1_fu_310_p2 = ($signed(sext_ln1207_4_fu_306_p1) + $signed(17'd1));

assign add_ln1207_fu_236_p2 = ($signed(sext_ln1207_fu_232_p1) + $signed(17'd131071));

assign add_ln1208_1_fu_398_p2 = ($signed(sext_ln1208_4_fu_394_p1) + $signed(17'd1));

assign add_ln1208_fu_324_p2 = ($signed(sext_ln1208_fu_320_p1) + $signed(17'd131071));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_decode_1_fu_176_ap_start = grp_decode_1_fu_176_ap_start_reg;

assign grp_huff_make_dhuff_tb_1_fu_136_ap_start = grp_huff_make_dhuff_tb_1_fu_136_ap_start_reg;

assign grp_huff_make_dhuff_tb_2_fu_164_ap_start = grp_huff_make_dhuff_tb_2_fu_164_ap_start_reg;

assign grp_read_markers_1_fu_112_ap_start = grp_read_markers_1_fu_112_ap_start_reg;

assign inputVector_address0 = 13'd0;

assign inputVector_address1 = 13'd0;

assign inputVector_ce0 = 1'b0;

assign inputVector_ce1 = 1'b0;

assign inputVector_d0 = 8'd0;

assign inputVector_d1 = 8'd0;

assign inputVector_we0 = 1'b0;

assign inputVector_we1 = 1'b0;

assign outputVector_address0 = grp_decode_1_fu_176_outputVector_address0;

assign outputVector_ce0 = grp_decode_1_fu_176_outputVector_ce0;

assign outputVector_d0 = grp_decode_1_fu_176_outputVector_d0;

assign outputVector_we0 = grp_decode_1_fu_176_outputVector_we0;

assign select_ln1207_fu_298_p3 = ((tmp_2_fu_242_p3[0:0] == 1'b1) ? sub_ln1207_1_fu_274_p2 : zext_ln1207_1_fu_294_p1);

assign select_ln1208_fu_386_p3 = ((tmp_3_fu_330_p3[0:0] == 1'b1) ? sub_ln1208_1_fu_362_p2 : zext_ln1208_1_fu_382_p1);

assign sext_ln1207_2_fu_266_p1 = $signed(trunc_ln1207_1_fu_256_p4);

assign sext_ln1207_3_fu_290_p1 = $signed(trunc_ln1207_2_fu_280_p4);

assign sext_ln1207_4_fu_306_p1 = $signed(select_ln1207_fu_298_p3);

assign sext_ln1207_fu_232_p1 = $signed(p_jinfo_image_height);

assign sext_ln1208_2_fu_354_p1 = $signed(trunc_ln1208_1_fu_344_p4);

assign sext_ln1208_3_fu_378_p1 = $signed(trunc_ln1208_2_fu_368_p4);

assign sext_ln1208_4_fu_394_p1 = $signed(select_ln1208_fu_386_p3);

assign sext_ln1208_fu_320_p1 = $signed(p_jinfo_image_width);

assign sub_ln1207_1_fu_274_p2 = (16'd0 - zext_ln1207_fu_270_p1);

assign sub_ln1207_fu_250_p2 = ($signed(17'd1) - $signed(sext_ln1207_fu_232_p1));

assign sub_ln1208_1_fu_362_p2 = (16'd0 - zext_ln1208_fu_358_p1);

assign sub_ln1208_fu_338_p2 = ($signed(17'd1) - $signed(sext_ln1208_fu_320_p1));

assign tmp_2_fu_242_p3 = add_ln1207_fu_236_p2[32'd16];

assign tmp_3_fu_330_p3 = add_ln1208_fu_324_p2[32'd16];

assign trunc_ln1204_fu_428_p1 = grp_huff_make_dhuff_tb_1_fu_136_ap_return[6:0];

assign trunc_ln1207_1_fu_256_p4 = {{sub_ln1207_fu_250_p2[16:3]}};

assign trunc_ln1207_2_fu_280_p4 = {{add_ln1207_fu_236_p2[16:3]}};

assign trunc_ln1208_1_fu_344_p4 = {{sub_ln1208_fu_338_p2[16:3]}};

assign trunc_ln1208_2_fu_368_p4 = {{add_ln1208_fu_324_p2[16:3]}};

assign zext_ln1207_1_fu_294_p1 = $unsigned(sext_ln1207_3_fu_290_p1);

assign zext_ln1207_fu_270_p1 = $unsigned(sext_ln1207_2_fu_266_p1);

assign zext_ln1208_1_fu_382_p1 = $unsigned(sext_ln1208_3_fu_378_p1);

assign zext_ln1208_fu_358_p1 = $unsigned(sext_ln1208_2_fu_354_p1);

endmodule //jpeg2bmp
