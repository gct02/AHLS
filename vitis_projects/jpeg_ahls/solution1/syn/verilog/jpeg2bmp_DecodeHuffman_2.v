// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module jpeg2bmp_DecodeHuffman_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Dhuff_ml,
        read_position_i,
        read_position_o,
        read_position_o_ap_vld,
        CurHuffReadBuf_i,
        CurHuffReadBuf_o,
        CurHuffReadBuf_o_ap_vld,
        current_read_byte_i,
        current_read_byte_o,
        current_read_byte_o_ap_vld,
        p_jinfo_ac_dhuff_tbl_maxcode_address0,
        p_jinfo_ac_dhuff_tbl_maxcode_ce0,
        p_jinfo_ac_dhuff_tbl_maxcode_q0,
        p_jinfo_ac_dhuff_tbl_valptr_address0,
        p_jinfo_ac_dhuff_tbl_valptr_ce0,
        p_jinfo_ac_dhuff_tbl_valptr_q0,
        p_jinfo_ac_dhuff_tbl_mincode_address0,
        p_jinfo_ac_dhuff_tbl_mincode_ce0,
        p_jinfo_ac_dhuff_tbl_mincode_q0,
        p_jinfo_ac_xhuff_tbl_huffval_address0,
        p_jinfo_ac_xhuff_tbl_huffval_ce0,
        p_jinfo_ac_xhuff_tbl_huffval_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [6:0] Dhuff_ml;
input  [31:0] read_position_i;
output  [31:0] read_position_o;
output   read_position_o_ap_vld;
input  [7:0] CurHuffReadBuf_i;
output  [7:0] CurHuffReadBuf_o;
output   CurHuffReadBuf_o_ap_vld;
input  [31:0] current_read_byte_i;
output  [31:0] current_read_byte_o;
output   current_read_byte_o_ap_vld;
output  [6:0] p_jinfo_ac_dhuff_tbl_maxcode_address0;
output   p_jinfo_ac_dhuff_tbl_maxcode_ce0;
input  [31:0] p_jinfo_ac_dhuff_tbl_maxcode_q0;
output  [6:0] p_jinfo_ac_dhuff_tbl_valptr_address0;
output   p_jinfo_ac_dhuff_tbl_valptr_ce0;
input  [10:0] p_jinfo_ac_dhuff_tbl_valptr_q0;
output  [6:0] p_jinfo_ac_dhuff_tbl_mincode_address0;
output   p_jinfo_ac_dhuff_tbl_mincode_ce0;
input  [10:0] p_jinfo_ac_dhuff_tbl_mincode_q0;
output  [10:0] p_jinfo_ac_xhuff_tbl_huffval_address0;
output   p_jinfo_ac_xhuff_tbl_huffval_ce0;
input  [7:0] p_jinfo_ac_xhuff_tbl_huffval_q0;
output  [7:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] read_position_o;
reg read_position_o_ap_vld;
reg[7:0] CurHuffReadBuf_o;
reg CurHuffReadBuf_o_ap_vld;
reg[31:0] current_read_byte_o;
reg current_read_byte_o_ap_vld;
reg[6:0] p_jinfo_ac_dhuff_tbl_maxcode_address0;
reg p_jinfo_ac_dhuff_tbl_maxcode_ce0;
reg p_jinfo_ac_dhuff_tbl_valptr_ce0;
reg p_jinfo_ac_dhuff_tbl_mincode_ce0;
reg p_jinfo_ac_xhuff_tbl_huffval_ce0;
reg[7:0] ap_return;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [4:0] bit_set_mask_address0;
reg    bit_set_mask_ce0;
wire   [31:0] bit_set_mask_q0;
wire   [0:0] code_fu_240_p2;
reg   [0:0] code_reg_344;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln692_fu_266_p2;
reg   [0:0] icmp_ln692_reg_364;
wire    ap_CS_fsm_state6;
wire   [10:0] p_fu_278_p2;
reg   [10:0] p_reg_369;
wire    ap_CS_fsm_state7;
wire    grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_ap_start;
wire    grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_ap_done;
wire    grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_ap_idle;
wire    grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_ap_ready;
wire   [6:0] grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_l_out;
wire    grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_l_out_ap_vld;
wire   [31:0] grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_code_6_out;
wire    grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_code_6_out_ap_vld;
wire   [6:0] grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_p_jinfo_ac_dhuff_tbl_maxcode_address0;
wire    grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_p_jinfo_ac_dhuff_tbl_maxcode_ce0;
wire   [31:0] grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_current_read_byte_o;
wire    grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_current_read_byte_o_ap_vld;
wire   [31:0] grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_read_position_o;
wire    grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_read_position_o_ap_vld;
wire   [7:0] grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_CurHuffReadBuf_o;
wire    grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_CurHuffReadBuf_o_ap_vld;
reg   [31:0] ap_phi_mux_empty_phi_fu_136_p4;
wire   [0:0] tmp_fu_165_p3;
reg    grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire   [63:0] zext_ln577_fu_225_p1;
wire   [63:0] l_reload_cast_fu_249_p1;
wire   [63:0] zext_ln692_fu_255_p1;
wire   [63:0] zext_ln694_fu_307_p1;
wire   [31:0] add_ln577_fu_213_p2;
wire   [7:0] select_ln555_fu_193_p3;
wire   [31:0] zext_ln555_fu_183_p1;
wire   [0:0] icmp_ln555_fu_187_p2;
wire   [7:0] add_ln555_fu_177_p2;
wire   [31:0] and_ln577_fu_234_p2;
wire   [10:0] trunc_ln685_fu_262_p1;
wire   [10:0] add_ln693_fu_272_p2;
wire   [12:0] shl_ln_fu_284_p3;
wire   [12:0] add_ln694_fu_291_p2;
wire   [10:0] lshr_ln_fu_297_p4;
wire    ap_CS_fsm_state8;
wire   [7:0] select_ln692_fu_312_p3;
reg   [7:0] ap_return_preg;
reg   [7:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_ap_start_reg = 1'b0;
#0 ap_return_preg = 8'd0;
end

jpeg2bmp_DecodeHuffman_1_Pipeline_VITIS_LOOP_688_1_bit_set_mask_ROM_AUTO_1R #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
bit_set_mask_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bit_set_mask_address0),
    .ce0(bit_set_mask_ce0),
    .q0(bit_set_mask_q0)
);

jpeg2bmp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1 grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_ap_start),
    .ap_done(grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_ap_done),
    .ap_idle(grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_ap_idle),
    .ap_ready(grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_ap_ready),
    .zext_ln577_1(code_reg_344),
    .l_out(grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_l_out),
    .l_out_ap_vld(grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_l_out_ap_vld),
    .code_6_out(grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_code_6_out),
    .code_6_out_ap_vld(grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_code_6_out_ap_vld),
    .p_jinfo_ac_dhuff_tbl_maxcode_address0(grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_p_jinfo_ac_dhuff_tbl_maxcode_address0),
    .p_jinfo_ac_dhuff_tbl_maxcode_ce0(grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_p_jinfo_ac_dhuff_tbl_maxcode_ce0),
    .p_jinfo_ac_dhuff_tbl_maxcode_q0(p_jinfo_ac_dhuff_tbl_maxcode_q0),
    .current_read_byte_i(current_read_byte_i),
    .current_read_byte_o(grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_current_read_byte_o),
    .current_read_byte_o_ap_vld(grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_current_read_byte_o_ap_vld),
    .read_position_i(read_position_i),
    .read_position_o(grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_read_position_o),
    .read_position_o_ap_vld(grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_read_position_o_ap_vld),
    .CurHuffReadBuf_i(CurHuffReadBuf_i),
    .CurHuffReadBuf_o(grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_CurHuffReadBuf_o),
    .CurHuffReadBuf_o_ap_vld(grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_CurHuffReadBuf_o_ap_vld)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_return_preg <= select_ln692_fu_312_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_ap_start_reg <= 1'b1;
        end else if ((grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_ap_ready == 1'b1)) begin
            grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        code_reg_344 <= code_fu_240_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln692_reg_364 <= icmp_ln692_fu_266_p2;
        p_reg_369 <= p_fu_278_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (tmp_fu_165_p3 == 1'd1))) begin
        CurHuffReadBuf_o = select_ln555_fu_193_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_CurHuffReadBuf_o_ap_vld == 1'b1))) begin
        CurHuffReadBuf_o = grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_CurHuffReadBuf_o;
    end else begin
        CurHuffReadBuf_o = CurHuffReadBuf_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_165_p3 == 1'd1))) begin
        CurHuffReadBuf_o_ap_vld = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        CurHuffReadBuf_o_ap_vld = grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_CurHuffReadBuf_o_ap_vld;
    end else begin
        CurHuffReadBuf_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        if ((tmp_fu_165_p3 == 1'd0)) begin
            ap_phi_mux_empty_phi_fu_136_p4 = read_position_i;
        end else if ((tmp_fu_165_p3 == 1'd1)) begin
            ap_phi_mux_empty_phi_fu_136_p4 = 32'd7;
        end else begin
            ap_phi_mux_empty_phi_fu_136_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_empty_phi_fu_136_p4 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_return = select_ln692_fu_312_p3;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        bit_set_mask_address0 = zext_ln577_fu_225_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        bit_set_mask_address0 = 5'd0;
    end else begin
        bit_set_mask_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        bit_set_mask_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        bit_set_mask_ce0 = 1'b0;
    end else begin
        bit_set_mask_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (tmp_fu_165_p3 == 1'd1))) begin
        current_read_byte_o = zext_ln555_fu_183_p1;
    end else if (((1'b1 == ap_CS_fsm_state4) & (grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_current_read_byte_o_ap_vld == 1'b1))) begin
        current_read_byte_o = grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_current_read_byte_o;
    end else begin
        current_read_byte_o = current_read_byte_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_165_p3 == 1'd1))) begin
        current_read_byte_o_ap_vld = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        current_read_byte_o_ap_vld = grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_current_read_byte_o_ap_vld;
    end else begin
        current_read_byte_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_jinfo_ac_dhuff_tbl_maxcode_address0 = zext_ln692_fu_255_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_jinfo_ac_dhuff_tbl_maxcode_address0 = grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_p_jinfo_ac_dhuff_tbl_maxcode_address0;
    end else begin
        p_jinfo_ac_dhuff_tbl_maxcode_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_jinfo_ac_dhuff_tbl_maxcode_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_jinfo_ac_dhuff_tbl_maxcode_ce0 = grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_p_jinfo_ac_dhuff_tbl_maxcode_ce0;
    end else begin
        p_jinfo_ac_dhuff_tbl_maxcode_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_jinfo_ac_dhuff_tbl_mincode_ce0 = 1'b1;
    end else begin
        p_jinfo_ac_dhuff_tbl_mincode_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_jinfo_ac_dhuff_tbl_valptr_ce0 = 1'b1;
    end else begin
        p_jinfo_ac_dhuff_tbl_valptr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_jinfo_ac_xhuff_tbl_huffval_ce0 = 1'b1;
    end else begin
        p_jinfo_ac_xhuff_tbl_huffval_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        read_position_o = add_ln577_fu_213_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) & (grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_read_position_o_ap_vld == 1'b1))) begin
        read_position_o = grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_read_position_o;
    end else begin
        read_position_o = read_position_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        read_position_o_ap_vld = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        read_position_o_ap_vld = grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_read_position_o_ap_vld;
    end else begin
        read_position_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln555_fu_177_p2 = (CurHuffReadBuf_i + 8'd1);

assign add_ln577_fu_213_p2 = ($signed(ap_phi_mux_empty_phi_fu_136_p4) + $signed(32'd4294967295));

assign add_ln693_fu_272_p2 = (p_jinfo_ac_dhuff_tbl_valptr_q0 + trunc_ln685_fu_262_p1);

assign add_ln694_fu_291_p2 = (shl_ln_fu_284_p3 + 13'd2560);

assign and_ln577_fu_234_p2 = (current_read_byte_i & bit_set_mask_q0);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign code_fu_240_p2 = ((and_ln577_fu_234_p2 != 32'd0) ? 1'b1 : 1'b0);

assign grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_ap_start = grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_ap_start_reg;

assign icmp_ln555_fu_187_p2 = ((CurHuffReadBuf_i == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln692_fu_266_p2 = (($signed(grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_code_6_out) < $signed(p_jinfo_ac_dhuff_tbl_maxcode_q0)) ? 1'b1 : 1'b0);

assign l_reload_cast_fu_249_p1 = grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_l_out;

assign lshr_ln_fu_297_p4 = {{add_ln694_fu_291_p2[12:2]}};

assign p_fu_278_p2 = (add_ln693_fu_272_p2 - p_jinfo_ac_dhuff_tbl_mincode_q0);

assign p_jinfo_ac_dhuff_tbl_mincode_address0 = l_reload_cast_fu_249_p1;

assign p_jinfo_ac_dhuff_tbl_valptr_address0 = l_reload_cast_fu_249_p1;

assign p_jinfo_ac_xhuff_tbl_huffval_address0 = zext_ln694_fu_307_p1;

assign select_ln555_fu_193_p3 = ((icmp_ln555_fu_187_p2[0:0] == 1'b1) ? 8'd1 : add_ln555_fu_177_p2);

assign select_ln692_fu_312_p3 = ((icmp_ln692_reg_364[0:0] == 1'b1) ? p_jinfo_ac_xhuff_tbl_huffval_q0 : 8'd0);

assign shl_ln_fu_284_p3 = {{p_reg_369}, {2'd0}};

assign tmp_fu_165_p3 = read_position_i[32'd31];

assign trunc_ln685_fu_262_p1 = grp_DecodeHuffman_2_Pipeline_VITIS_LOOP_688_1_fu_143_code_6_out[10:0];

assign zext_ln555_fu_183_p1 = CurHuffReadBuf_i;

assign zext_ln577_fu_225_p1 = ap_phi_mux_empty_phi_fu_136_p4;

assign zext_ln692_fu_255_p1 = Dhuff_ml;

assign zext_ln694_fu_307_p1 = lshr_ln_fu_297_p4;

endmodule //jpeg2bmp_DecodeHuffman_2
