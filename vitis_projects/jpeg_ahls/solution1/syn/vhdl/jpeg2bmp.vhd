-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity jpeg2bmp is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    inputVector_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    inputVector_ce0 : OUT STD_LOGIC;
    inputVector_we0 : OUT STD_LOGIC;
    inputVector_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    inputVector_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    inputVector_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    inputVector_ce1 : OUT STD_LOGIC;
    inputVector_we1 : OUT STD_LOGIC;
    inputVector_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    inputVector_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    jpegSize : IN STD_LOGIC_VECTOR (31 downto 0);
    outputVector_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    outputVector_ce0 : OUT STD_LOGIC;
    outputVector_we0 : OUT STD_LOGIC;
    outputVector_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of jpeg2bmp is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "jpeg2bmp_jpeg2bmp,hls_ip_2023_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu35p-fsvh2104-1-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.615000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=25,HLS_SYN_DSP=0,HLS_SYN_FF=8869,HLS_SYN_LUT=20521,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv10_290 : STD_LOGIC_VECTOR (9 downto 0) := "1010010000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv10_90 : STD_LOGIC_VECTOR (9 downto 0) := "0010010000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_jinfo_image_height : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal p_jinfo_image_width : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal p_jinfo_jpeg_data : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal p_jinfo_dc_xhuff_tbl_bits_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_jinfo_dc_xhuff_tbl_bits_ce0 : STD_LOGIC;
    signal p_jinfo_dc_xhuff_tbl_bits_we0 : STD_LOGIC;
    signal p_jinfo_dc_xhuff_tbl_bits_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_jinfo_ac_xhuff_tbl_huffval_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_jinfo_ac_xhuff_tbl_huffval_ce0 : STD_LOGIC;
    signal p_jinfo_ac_xhuff_tbl_huffval_we0 : STD_LOGIC;
    signal p_jinfo_ac_xhuff_tbl_huffval_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_jinfo_quant_tbl_quantval_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_jinfo_quant_tbl_quantval_ce0 : STD_LOGIC;
    signal p_jinfo_quant_tbl_quantval_we0 : STD_LOGIC;
    signal p_jinfo_quant_tbl_quantval_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_jinfo_quant_tbl_quantval_ce1 : STD_LOGIC;
    signal p_jinfo_quant_tbl_quantval_we1 : STD_LOGIC;
    signal p_jinfo_MCUWidth : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    signal p_jinfo_NumMCU : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_jinfo_dc_dhuff_tbl_maxcode_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_jinfo_dc_dhuff_tbl_maxcode_ce0 : STD_LOGIC;
    signal p_jinfo_dc_dhuff_tbl_maxcode_we0 : STD_LOGIC;
    signal p_jinfo_dc_dhuff_tbl_maxcode_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_jinfo_dc_dhuff_tbl_maxcode_ce1 : STD_LOGIC;
    signal p_jinfo_dc_dhuff_tbl_maxcode_we1 : STD_LOGIC;
    signal p_jinfo_dc_dhuff_tbl_mincode_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_jinfo_dc_dhuff_tbl_mincode_ce0 : STD_LOGIC;
    signal p_jinfo_dc_dhuff_tbl_mincode_we0 : STD_LOGIC;
    signal p_jinfo_dc_dhuff_tbl_mincode_q0 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_jinfo_dc_dhuff_tbl_valptr_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_jinfo_dc_dhuff_tbl_valptr_ce0 : STD_LOGIC;
    signal p_jinfo_dc_dhuff_tbl_valptr_we0 : STD_LOGIC;
    signal p_jinfo_dc_dhuff_tbl_valptr_q0 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_jinfo_dc_dhuff_tbl_ml_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal p_jinfo_ac_dhuff_tbl_maxcode_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_jinfo_ac_dhuff_tbl_maxcode_ce0 : STD_LOGIC;
    signal p_jinfo_ac_dhuff_tbl_maxcode_we0 : STD_LOGIC;
    signal p_jinfo_ac_dhuff_tbl_maxcode_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_jinfo_ac_dhuff_tbl_maxcode_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_jinfo_ac_dhuff_tbl_maxcode_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_jinfo_ac_dhuff_tbl_maxcode_ce1 : STD_LOGIC;
    signal p_jinfo_ac_dhuff_tbl_maxcode_we1 : STD_LOGIC;
    signal p_jinfo_ac_dhuff_tbl_maxcode_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_jinfo_ac_dhuff_tbl_valptr_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_jinfo_ac_dhuff_tbl_valptr_ce0 : STD_LOGIC;
    signal p_jinfo_ac_dhuff_tbl_valptr_we0 : STD_LOGIC;
    signal p_jinfo_ac_dhuff_tbl_valptr_d0 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_jinfo_ac_dhuff_tbl_valptr_q0 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_jinfo_ac_dhuff_tbl_mincode_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_jinfo_ac_dhuff_tbl_mincode_ce0 : STD_LOGIC;
    signal p_jinfo_ac_dhuff_tbl_mincode_we0 : STD_LOGIC;
    signal p_jinfo_ac_dhuff_tbl_mincode_d0 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_jinfo_ac_dhuff_tbl_mincode_q0 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_jinfo_ac_dhuff_tbl_ml_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal add_ln1207_1_fu_310_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln1207_1_reg_444 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln1208_1_fu_398_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln1208_1_reg_449 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_read_markers_1_fu_112_ap_start : STD_LOGIC;
    signal grp_read_markers_1_fu_112_ap_done : STD_LOGIC;
    signal grp_read_markers_1_fu_112_ap_idle : STD_LOGIC;
    signal grp_read_markers_1_fu_112_ap_ready : STD_LOGIC;
    signal grp_read_markers_1_fu_112_p_jinfo_image_height : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_read_markers_1_fu_112_p_jinfo_image_height_ap_vld : STD_LOGIC;
    signal grp_read_markers_1_fu_112_p_jinfo_image_width : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_read_markers_1_fu_112_p_jinfo_image_width_ap_vld : STD_LOGIC;
    signal grp_read_markers_1_fu_112_p_jinfo_jpeg_data : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_read_markers_1_fu_112_p_jinfo_jpeg_data_ap_vld : STD_LOGIC;
    signal grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_ce0 : STD_LOGIC;
    signal grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_we0 : STD_LOGIC;
    signal grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_ce0 : STD_LOGIC;
    signal grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_we0 : STD_LOGIC;
    signal grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_ce0 : STD_LOGIC;
    signal grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_we0 : STD_LOGIC;
    signal grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_ce1 : STD_LOGIC;
    signal grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_we1 : STD_LOGIC;
    signal grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_huff_make_dhuff_tb_1_fu_136_ap_start : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_1_fu_136_ap_done : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_1_fu_136_ap_idle : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_1_fu_136_ap_ready : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_1_fu_136_p_xhtbl_bits_offset : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_ce0 : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_we0 : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_ce1 : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_we1 : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_offset : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_ce0 : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_we0 : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_d0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_offset : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_ce0 : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_we0 : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_d0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_offset : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_huff_make_dhuff_tb_1_fu_136_p_jinfo_dc_xhuff_tbl_bits_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_huff_make_dhuff_tb_1_fu_136_p_jinfo_dc_xhuff_tbl_bits_ce0 : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_1_fu_136_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_huff_make_dhuff_tb_2_fu_164_ap_start : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_2_fu_164_ap_done : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_2_fu_164_ap_idle : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_2_fu_164_ap_ready : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_dc_xhuff_tbl_bits_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_dc_xhuff_tbl_bits_ce0 : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_ce0 : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_we0 : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_ce1 : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_we1 : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_ce0 : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_we0 : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_d0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_ce0 : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_we0 : STD_LOGIC;
    signal grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_d0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_huff_make_dhuff_tb_2_fu_164_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_decode_1_fu_176_ap_start : STD_LOGIC;
    signal grp_decode_1_fu_176_ap_done : STD_LOGIC;
    signal grp_decode_1_fu_176_ap_idle : STD_LOGIC;
    signal grp_decode_1_fu_176_ap_ready : STD_LOGIC;
    signal grp_decode_1_fu_176_outputVector_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_decode_1_fu_176_outputVector_ce0 : STD_LOGIC;
    signal grp_decode_1_fu_176_outputVector_we0 : STD_LOGIC;
    signal grp_decode_1_fu_176_outputVector_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_maxcode_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_maxcode_ce0 : STD_LOGIC;
    signal grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_valptr_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_valptr_ce0 : STD_LOGIC;
    signal grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_mincode_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_mincode_ce0 : STD_LOGIC;
    signal grp_decode_1_fu_176_p_jinfo_ac_xhuff_tbl_huffval_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_decode_1_fu_176_p_jinfo_ac_xhuff_tbl_huffval_ce0 : STD_LOGIC;
    signal grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_maxcode_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_maxcode_ce0 : STD_LOGIC;
    signal grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_valptr_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_valptr_ce0 : STD_LOGIC;
    signal grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_mincode_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_mincode_ce0 : STD_LOGIC;
    signal grp_decode_1_fu_176_p_jinfo_quant_tbl_quantval_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_decode_1_fu_176_p_jinfo_quant_tbl_quantval_ce0 : STD_LOGIC;
    signal grp_read_markers_1_fu_112_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_huff_make_dhuff_tb_1_fu_136_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_huff_make_dhuff_tb_2_fu_164_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_decode_1_fu_176_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal mul_ln1209_fu_416_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1204_fu_428_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1207_fu_232_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln1207_fu_236_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1207_fu_250_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln1207_1_fu_256_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1207_2_fu_266_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln1207_fu_270_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1207_2_fu_280_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1207_3_fu_290_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_2_fu_242_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1207_1_fu_274_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1207_1_fu_294_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1207_fu_298_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1207_4_fu_306_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1208_fu_320_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln1208_fu_324_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1208_fu_338_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln1208_1_fu_344_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1208_2_fu_354_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln1208_fu_358_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1208_2_fu_368_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1208_3_fu_378_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_3_fu_330_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1208_1_fu_362_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1208_1_fu_382_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1208_fu_386_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1208_4_fu_394_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component jpeg2bmp_read_markers_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_jinfo_image_height : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_jinfo_image_height_ap_vld : OUT STD_LOGIC;
        p_jinfo_image_width : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_jinfo_image_width_ap_vld : OUT STD_LOGIC;
        p_jinfo_jpeg_data : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_jinfo_jpeg_data_ap_vld : OUT STD_LOGIC;
        p_jinfo_dc_xhuff_tbl_bits_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_jinfo_dc_xhuff_tbl_bits_ce0 : OUT STD_LOGIC;
        p_jinfo_dc_xhuff_tbl_bits_we0 : OUT STD_LOGIC;
        p_jinfo_dc_xhuff_tbl_bits_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_jinfo_ac_xhuff_tbl_huffval_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        p_jinfo_ac_xhuff_tbl_huffval_ce0 : OUT STD_LOGIC;
        p_jinfo_ac_xhuff_tbl_huffval_we0 : OUT STD_LOGIC;
        p_jinfo_ac_xhuff_tbl_huffval_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_jinfo_quant_tbl_quantval_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_jinfo_quant_tbl_quantval_ce0 : OUT STD_LOGIC;
        p_jinfo_quant_tbl_quantval_we0 : OUT STD_LOGIC;
        p_jinfo_quant_tbl_quantval_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_jinfo_quant_tbl_quantval_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_jinfo_quant_tbl_quantval_ce1 : OUT STD_LOGIC;
        p_jinfo_quant_tbl_quantval_we1 : OUT STD_LOGIC;
        p_jinfo_quant_tbl_quantval_d1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component jpeg2bmp_huff_make_dhuff_tb_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_xhtbl_bits_offset : IN STD_LOGIC_VECTOR (9 downto 0);
        p_dhtbl_maxcode_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_dhtbl_maxcode_ce0 : OUT STD_LOGIC;
        p_dhtbl_maxcode_we0 : OUT STD_LOGIC;
        p_dhtbl_maxcode_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_dhtbl_maxcode_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_dhtbl_maxcode_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_dhtbl_maxcode_ce1 : OUT STD_LOGIC;
        p_dhtbl_maxcode_we1 : OUT STD_LOGIC;
        p_dhtbl_maxcode_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_dhtbl_maxcode_offset : IN STD_LOGIC_VECTOR (0 downto 0);
        p_dhtbl_mincode_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_dhtbl_mincode_ce0 : OUT STD_LOGIC;
        p_dhtbl_mincode_we0 : OUT STD_LOGIC;
        p_dhtbl_mincode_d0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        p_dhtbl_mincode_offset : IN STD_LOGIC_VECTOR (0 downto 0);
        p_dhtbl_valptr_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_dhtbl_valptr_ce0 : OUT STD_LOGIC;
        p_dhtbl_valptr_we0 : OUT STD_LOGIC;
        p_dhtbl_valptr_d0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        p_dhtbl_valptr_offset : IN STD_LOGIC_VECTOR (0 downto 0);
        p_jinfo_dc_xhuff_tbl_bits_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_jinfo_dc_xhuff_tbl_bits_ce0 : OUT STD_LOGIC;
        p_jinfo_dc_xhuff_tbl_bits_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component jpeg2bmp_huff_make_dhuff_tb_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_jinfo_dc_xhuff_tbl_bits_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_jinfo_dc_xhuff_tbl_bits_ce0 : OUT STD_LOGIC;
        p_jinfo_dc_xhuff_tbl_bits_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_jinfo_ac_dhuff_tbl_maxcode_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_jinfo_ac_dhuff_tbl_maxcode_ce0 : OUT STD_LOGIC;
        p_jinfo_ac_dhuff_tbl_maxcode_we0 : OUT STD_LOGIC;
        p_jinfo_ac_dhuff_tbl_maxcode_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_jinfo_ac_dhuff_tbl_maxcode_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_jinfo_ac_dhuff_tbl_maxcode_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_jinfo_ac_dhuff_tbl_maxcode_ce1 : OUT STD_LOGIC;
        p_jinfo_ac_dhuff_tbl_maxcode_we1 : OUT STD_LOGIC;
        p_jinfo_ac_dhuff_tbl_maxcode_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_jinfo_ac_dhuff_tbl_valptr_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_jinfo_ac_dhuff_tbl_valptr_ce0 : OUT STD_LOGIC;
        p_jinfo_ac_dhuff_tbl_valptr_we0 : OUT STD_LOGIC;
        p_jinfo_ac_dhuff_tbl_valptr_d0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        p_jinfo_ac_dhuff_tbl_mincode_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_jinfo_ac_dhuff_tbl_mincode_ce0 : OUT STD_LOGIC;
        p_jinfo_ac_dhuff_tbl_mincode_we0 : OUT STD_LOGIC;
        p_jinfo_ac_dhuff_tbl_mincode_d0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component jpeg2bmp_decode_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        outputVector_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        outputVector_ce0 : OUT STD_LOGIC;
        outputVector_we0 : OUT STD_LOGIC;
        outputVector_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_jinfo_jpeg_data : IN STD_LOGIC_VECTOR (7 downto 0);
        p_jinfo_NumMCU : IN STD_LOGIC_VECTOR (31 downto 0);
        p_jinfo_image_width : IN STD_LOGIC_VECTOR (15 downto 0);
        p_jinfo_image_height : IN STD_LOGIC_VECTOR (15 downto 0);
        p_jinfo_MCUWidth : IN STD_LOGIC_VECTOR (16 downto 0);
        p_jinfo_dc_dhuff_tbl_ml_0 : IN STD_LOGIC_VECTOR (6 downto 0);
        p_jinfo_dc_dhuff_tbl_maxcode_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_jinfo_dc_dhuff_tbl_maxcode_ce0 : OUT STD_LOGIC;
        p_jinfo_dc_dhuff_tbl_maxcode_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_jinfo_dc_dhuff_tbl_valptr_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_jinfo_dc_dhuff_tbl_valptr_ce0 : OUT STD_LOGIC;
        p_jinfo_dc_dhuff_tbl_valptr_q0 : IN STD_LOGIC_VECTOR (10 downto 0);
        p_jinfo_dc_dhuff_tbl_mincode_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_jinfo_dc_dhuff_tbl_mincode_ce0 : OUT STD_LOGIC;
        p_jinfo_dc_dhuff_tbl_mincode_q0 : IN STD_LOGIC_VECTOR (10 downto 0);
        p_jinfo_ac_xhuff_tbl_huffval_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        p_jinfo_ac_xhuff_tbl_huffval_ce0 : OUT STD_LOGIC;
        p_jinfo_ac_xhuff_tbl_huffval_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_jinfo_ac_dhuff_tbl_ml_0 : IN STD_LOGIC_VECTOR (6 downto 0);
        p_jinfo_ac_dhuff_tbl_maxcode_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_jinfo_ac_dhuff_tbl_maxcode_ce0 : OUT STD_LOGIC;
        p_jinfo_ac_dhuff_tbl_maxcode_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_jinfo_ac_dhuff_tbl_valptr_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_jinfo_ac_dhuff_tbl_valptr_ce0 : OUT STD_LOGIC;
        p_jinfo_ac_dhuff_tbl_valptr_q0 : IN STD_LOGIC_VECTOR (10 downto 0);
        p_jinfo_ac_dhuff_tbl_mincode_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_jinfo_ac_dhuff_tbl_mincode_ce0 : OUT STD_LOGIC;
        p_jinfo_ac_dhuff_tbl_mincode_q0 : IN STD_LOGIC_VECTOR (10 downto 0);
        p_jinfo_quant_tbl_quantval_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_jinfo_quant_tbl_quantval_ce0 : OUT STD_LOGIC;
        p_jinfo_quant_tbl_quantval_q0 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component jpeg2bmp_mul_17s_17s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component jpeg2bmp_p_jinfo_dc_xhuff_tbl_bits_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component jpeg2bmp_p_jinfo_ac_xhuff_tbl_huffval_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component jpeg2bmp_p_jinfo_quant_tbl_quantval_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component jpeg2bmp_p_jinfo_dc_dhuff_tbl_maxcode_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component jpeg2bmp_p_jinfo_dc_dhuff_tbl_mincode_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (10 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;



begin
    p_jinfo_dc_xhuff_tbl_bits_U : component jpeg2bmp_p_jinfo_dc_xhuff_tbl_bits_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 200,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_jinfo_dc_xhuff_tbl_bits_address0,
        ce0 => p_jinfo_dc_xhuff_tbl_bits_ce0,
        we0 => p_jinfo_dc_xhuff_tbl_bits_we0,
        d0 => grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_d0,
        q0 => p_jinfo_dc_xhuff_tbl_bits_q0);

    p_jinfo_ac_xhuff_tbl_huffval_U : component jpeg2bmp_p_jinfo_ac_xhuff_tbl_huffval_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 1154,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_jinfo_ac_xhuff_tbl_huffval_address0,
        ce0 => p_jinfo_ac_xhuff_tbl_huffval_ce0,
        we0 => p_jinfo_ac_xhuff_tbl_huffval_we0,
        d0 => grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_d0,
        q0 => p_jinfo_ac_xhuff_tbl_huffval_q0);

    p_jinfo_quant_tbl_quantval_U : component jpeg2bmp_p_jinfo_quant_tbl_quantval_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_jinfo_quant_tbl_quantval_address0,
        ce0 => p_jinfo_quant_tbl_quantval_ce0,
        we0 => p_jinfo_quant_tbl_quantval_we0,
        d0 => grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_d0,
        q0 => p_jinfo_quant_tbl_quantval_q0,
        address1 => grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_address1,
        ce1 => p_jinfo_quant_tbl_quantval_ce1,
        we1 => p_jinfo_quant_tbl_quantval_we1,
        d1 => grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_d1);

    p_jinfo_dc_dhuff_tbl_maxcode_U : component jpeg2bmp_p_jinfo_dc_dhuff_tbl_maxcode_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_jinfo_dc_dhuff_tbl_maxcode_address0,
        ce0 => p_jinfo_dc_dhuff_tbl_maxcode_ce0,
        we0 => p_jinfo_dc_dhuff_tbl_maxcode_we0,
        d0 => grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_d0,
        q0 => p_jinfo_dc_dhuff_tbl_maxcode_q0,
        address1 => grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_address1,
        ce1 => p_jinfo_dc_dhuff_tbl_maxcode_ce1,
        we1 => p_jinfo_dc_dhuff_tbl_maxcode_we1,
        d1 => grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_d1);

    p_jinfo_dc_dhuff_tbl_mincode_U : component jpeg2bmp_p_jinfo_dc_dhuff_tbl_mincode_RAM_AUTO_1R1W
    generic map (
        DataWidth => 11,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_jinfo_dc_dhuff_tbl_mincode_address0,
        ce0 => p_jinfo_dc_dhuff_tbl_mincode_ce0,
        we0 => p_jinfo_dc_dhuff_tbl_mincode_we0,
        d0 => grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_d0,
        q0 => p_jinfo_dc_dhuff_tbl_mincode_q0);

    p_jinfo_dc_dhuff_tbl_valptr_U : component jpeg2bmp_p_jinfo_dc_dhuff_tbl_mincode_RAM_AUTO_1R1W
    generic map (
        DataWidth => 11,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_jinfo_dc_dhuff_tbl_valptr_address0,
        ce0 => p_jinfo_dc_dhuff_tbl_valptr_ce0,
        we0 => p_jinfo_dc_dhuff_tbl_valptr_we0,
        d0 => grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_d0,
        q0 => p_jinfo_dc_dhuff_tbl_valptr_q0);

    p_jinfo_ac_dhuff_tbl_maxcode_U : component jpeg2bmp_p_jinfo_dc_dhuff_tbl_maxcode_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_jinfo_ac_dhuff_tbl_maxcode_address0,
        ce0 => p_jinfo_ac_dhuff_tbl_maxcode_ce0,
        we0 => p_jinfo_ac_dhuff_tbl_maxcode_we0,
        d0 => p_jinfo_ac_dhuff_tbl_maxcode_d0,
        q0 => p_jinfo_ac_dhuff_tbl_maxcode_q0,
        address1 => p_jinfo_ac_dhuff_tbl_maxcode_address1,
        ce1 => p_jinfo_ac_dhuff_tbl_maxcode_ce1,
        we1 => p_jinfo_ac_dhuff_tbl_maxcode_we1,
        d1 => p_jinfo_ac_dhuff_tbl_maxcode_d1);

    p_jinfo_ac_dhuff_tbl_valptr_U : component jpeg2bmp_p_jinfo_dc_dhuff_tbl_mincode_RAM_AUTO_1R1W
    generic map (
        DataWidth => 11,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_jinfo_ac_dhuff_tbl_valptr_address0,
        ce0 => p_jinfo_ac_dhuff_tbl_valptr_ce0,
        we0 => p_jinfo_ac_dhuff_tbl_valptr_we0,
        d0 => p_jinfo_ac_dhuff_tbl_valptr_d0,
        q0 => p_jinfo_ac_dhuff_tbl_valptr_q0);

    p_jinfo_ac_dhuff_tbl_mincode_U : component jpeg2bmp_p_jinfo_dc_dhuff_tbl_mincode_RAM_AUTO_1R1W
    generic map (
        DataWidth => 11,
        AddressRange => 72,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_jinfo_ac_dhuff_tbl_mincode_address0,
        ce0 => p_jinfo_ac_dhuff_tbl_mincode_ce0,
        we0 => p_jinfo_ac_dhuff_tbl_mincode_we0,
        d0 => p_jinfo_ac_dhuff_tbl_mincode_d0,
        q0 => p_jinfo_ac_dhuff_tbl_mincode_q0);

    grp_read_markers_1_fu_112 : component jpeg2bmp_read_markers_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_read_markers_1_fu_112_ap_start,
        ap_done => grp_read_markers_1_fu_112_ap_done,
        ap_idle => grp_read_markers_1_fu_112_ap_idle,
        ap_ready => grp_read_markers_1_fu_112_ap_ready,
        p_jinfo_image_height => grp_read_markers_1_fu_112_p_jinfo_image_height,
        p_jinfo_image_height_ap_vld => grp_read_markers_1_fu_112_p_jinfo_image_height_ap_vld,
        p_jinfo_image_width => grp_read_markers_1_fu_112_p_jinfo_image_width,
        p_jinfo_image_width_ap_vld => grp_read_markers_1_fu_112_p_jinfo_image_width_ap_vld,
        p_jinfo_jpeg_data => grp_read_markers_1_fu_112_p_jinfo_jpeg_data,
        p_jinfo_jpeg_data_ap_vld => grp_read_markers_1_fu_112_p_jinfo_jpeg_data_ap_vld,
        p_jinfo_dc_xhuff_tbl_bits_address0 => grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_address0,
        p_jinfo_dc_xhuff_tbl_bits_ce0 => grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_ce0,
        p_jinfo_dc_xhuff_tbl_bits_we0 => grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_we0,
        p_jinfo_dc_xhuff_tbl_bits_d0 => grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_d0,
        p_jinfo_ac_xhuff_tbl_huffval_address0 => grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_address0,
        p_jinfo_ac_xhuff_tbl_huffval_ce0 => grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_ce0,
        p_jinfo_ac_xhuff_tbl_huffval_we0 => grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_we0,
        p_jinfo_ac_xhuff_tbl_huffval_d0 => grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_d0,
        p_jinfo_quant_tbl_quantval_address0 => grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_address0,
        p_jinfo_quant_tbl_quantval_ce0 => grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_ce0,
        p_jinfo_quant_tbl_quantval_we0 => grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_we0,
        p_jinfo_quant_tbl_quantval_d0 => grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_d0,
        p_jinfo_quant_tbl_quantval_address1 => grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_address1,
        p_jinfo_quant_tbl_quantval_ce1 => grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_ce1,
        p_jinfo_quant_tbl_quantval_we1 => grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_we1,
        p_jinfo_quant_tbl_quantval_d1 => grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_d1);

    grp_huff_make_dhuff_tb_1_fu_136 : component jpeg2bmp_huff_make_dhuff_tb_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_huff_make_dhuff_tb_1_fu_136_ap_start,
        ap_done => grp_huff_make_dhuff_tb_1_fu_136_ap_done,
        ap_idle => grp_huff_make_dhuff_tb_1_fu_136_ap_idle,
        ap_ready => grp_huff_make_dhuff_tb_1_fu_136_ap_ready,
        p_xhtbl_bits_offset => grp_huff_make_dhuff_tb_1_fu_136_p_xhtbl_bits_offset,
        p_dhtbl_maxcode_address0 => grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_address0,
        p_dhtbl_maxcode_ce0 => grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_ce0,
        p_dhtbl_maxcode_we0 => grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_we0,
        p_dhtbl_maxcode_d0 => grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_d0,
        p_dhtbl_maxcode_q0 => grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_q0,
        p_dhtbl_maxcode_address1 => grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_address1,
        p_dhtbl_maxcode_ce1 => grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_ce1,
        p_dhtbl_maxcode_we1 => grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_we1,
        p_dhtbl_maxcode_d1 => grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_d1,
        p_dhtbl_maxcode_offset => grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_offset,
        p_dhtbl_mincode_address0 => grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_address0,
        p_dhtbl_mincode_ce0 => grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_ce0,
        p_dhtbl_mincode_we0 => grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_we0,
        p_dhtbl_mincode_d0 => grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_d0,
        p_dhtbl_mincode_offset => grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_offset,
        p_dhtbl_valptr_address0 => grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_address0,
        p_dhtbl_valptr_ce0 => grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_ce0,
        p_dhtbl_valptr_we0 => grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_we0,
        p_dhtbl_valptr_d0 => grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_d0,
        p_dhtbl_valptr_offset => grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_offset,
        p_jinfo_dc_xhuff_tbl_bits_address0 => grp_huff_make_dhuff_tb_1_fu_136_p_jinfo_dc_xhuff_tbl_bits_address0,
        p_jinfo_dc_xhuff_tbl_bits_ce0 => grp_huff_make_dhuff_tb_1_fu_136_p_jinfo_dc_xhuff_tbl_bits_ce0,
        p_jinfo_dc_xhuff_tbl_bits_q0 => p_jinfo_dc_xhuff_tbl_bits_q0,
        ap_return => grp_huff_make_dhuff_tb_1_fu_136_ap_return);

    grp_huff_make_dhuff_tb_2_fu_164 : component jpeg2bmp_huff_make_dhuff_tb_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_huff_make_dhuff_tb_2_fu_164_ap_start,
        ap_done => grp_huff_make_dhuff_tb_2_fu_164_ap_done,
        ap_idle => grp_huff_make_dhuff_tb_2_fu_164_ap_idle,
        ap_ready => grp_huff_make_dhuff_tb_2_fu_164_ap_ready,
        p_jinfo_dc_xhuff_tbl_bits_address0 => grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_dc_xhuff_tbl_bits_address0,
        p_jinfo_dc_xhuff_tbl_bits_ce0 => grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_dc_xhuff_tbl_bits_ce0,
        p_jinfo_dc_xhuff_tbl_bits_q0 => p_jinfo_dc_xhuff_tbl_bits_q0,
        p_jinfo_ac_dhuff_tbl_maxcode_address0 => grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_address0,
        p_jinfo_ac_dhuff_tbl_maxcode_ce0 => grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_ce0,
        p_jinfo_ac_dhuff_tbl_maxcode_we0 => grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_we0,
        p_jinfo_ac_dhuff_tbl_maxcode_d0 => grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_d0,
        p_jinfo_ac_dhuff_tbl_maxcode_q0 => p_jinfo_ac_dhuff_tbl_maxcode_q0,
        p_jinfo_ac_dhuff_tbl_maxcode_address1 => grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_address1,
        p_jinfo_ac_dhuff_tbl_maxcode_ce1 => grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_ce1,
        p_jinfo_ac_dhuff_tbl_maxcode_we1 => grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_we1,
        p_jinfo_ac_dhuff_tbl_maxcode_d1 => grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_d1,
        p_jinfo_ac_dhuff_tbl_valptr_address0 => grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_address0,
        p_jinfo_ac_dhuff_tbl_valptr_ce0 => grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_ce0,
        p_jinfo_ac_dhuff_tbl_valptr_we0 => grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_we0,
        p_jinfo_ac_dhuff_tbl_valptr_d0 => grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_d0,
        p_jinfo_ac_dhuff_tbl_mincode_address0 => grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_address0,
        p_jinfo_ac_dhuff_tbl_mincode_ce0 => grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_ce0,
        p_jinfo_ac_dhuff_tbl_mincode_we0 => grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_we0,
        p_jinfo_ac_dhuff_tbl_mincode_d0 => grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_d0,
        ap_return => grp_huff_make_dhuff_tb_2_fu_164_ap_return);

    grp_decode_1_fu_176 : component jpeg2bmp_decode_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_decode_1_fu_176_ap_start,
        ap_done => grp_decode_1_fu_176_ap_done,
        ap_idle => grp_decode_1_fu_176_ap_idle,
        ap_ready => grp_decode_1_fu_176_ap_ready,
        outputVector_address0 => grp_decode_1_fu_176_outputVector_address0,
        outputVector_ce0 => grp_decode_1_fu_176_outputVector_ce0,
        outputVector_we0 => grp_decode_1_fu_176_outputVector_we0,
        outputVector_d0 => grp_decode_1_fu_176_outputVector_d0,
        p_jinfo_jpeg_data => p_jinfo_jpeg_data,
        p_jinfo_NumMCU => p_jinfo_NumMCU,
        p_jinfo_image_width => p_jinfo_image_width,
        p_jinfo_image_height => p_jinfo_image_height,
        p_jinfo_MCUWidth => p_jinfo_MCUWidth,
        p_jinfo_dc_dhuff_tbl_ml_0 => p_jinfo_dc_dhuff_tbl_ml_0,
        p_jinfo_dc_dhuff_tbl_maxcode_address0 => grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_maxcode_address0,
        p_jinfo_dc_dhuff_tbl_maxcode_ce0 => grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_maxcode_ce0,
        p_jinfo_dc_dhuff_tbl_maxcode_q0 => p_jinfo_dc_dhuff_tbl_maxcode_q0,
        p_jinfo_dc_dhuff_tbl_valptr_address0 => grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_valptr_address0,
        p_jinfo_dc_dhuff_tbl_valptr_ce0 => grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_valptr_ce0,
        p_jinfo_dc_dhuff_tbl_valptr_q0 => p_jinfo_dc_dhuff_tbl_valptr_q0,
        p_jinfo_dc_dhuff_tbl_mincode_address0 => grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_mincode_address0,
        p_jinfo_dc_dhuff_tbl_mincode_ce0 => grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_mincode_ce0,
        p_jinfo_dc_dhuff_tbl_mincode_q0 => p_jinfo_dc_dhuff_tbl_mincode_q0,
        p_jinfo_ac_xhuff_tbl_huffval_address0 => grp_decode_1_fu_176_p_jinfo_ac_xhuff_tbl_huffval_address0,
        p_jinfo_ac_xhuff_tbl_huffval_ce0 => grp_decode_1_fu_176_p_jinfo_ac_xhuff_tbl_huffval_ce0,
        p_jinfo_ac_xhuff_tbl_huffval_q0 => p_jinfo_ac_xhuff_tbl_huffval_q0,
        p_jinfo_ac_dhuff_tbl_ml_0 => p_jinfo_ac_dhuff_tbl_ml_0,
        p_jinfo_ac_dhuff_tbl_maxcode_address0 => grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_maxcode_address0,
        p_jinfo_ac_dhuff_tbl_maxcode_ce0 => grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_maxcode_ce0,
        p_jinfo_ac_dhuff_tbl_maxcode_q0 => p_jinfo_ac_dhuff_tbl_maxcode_q0,
        p_jinfo_ac_dhuff_tbl_valptr_address0 => grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_valptr_address0,
        p_jinfo_ac_dhuff_tbl_valptr_ce0 => grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_valptr_ce0,
        p_jinfo_ac_dhuff_tbl_valptr_q0 => p_jinfo_ac_dhuff_tbl_valptr_q0,
        p_jinfo_ac_dhuff_tbl_mincode_address0 => grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_mincode_address0,
        p_jinfo_ac_dhuff_tbl_mincode_ce0 => grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_mincode_ce0,
        p_jinfo_ac_dhuff_tbl_mincode_q0 => p_jinfo_ac_dhuff_tbl_mincode_q0,
        p_jinfo_quant_tbl_quantval_address0 => grp_decode_1_fu_176_p_jinfo_quant_tbl_quantval_address0,
        p_jinfo_quant_tbl_quantval_ce0 => grp_decode_1_fu_176_p_jinfo_quant_tbl_quantval_ce0,
        p_jinfo_quant_tbl_quantval_q0 => p_jinfo_quant_tbl_quantval_q0);

    mul_17s_17s_32_1_1_U234 : component jpeg2bmp_mul_17s_17s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 17,
        dout_WIDTH => 32)
    port map (
        din0 => add_ln1208_1_reg_449,
        din1 => add_ln1207_1_reg_444,
        dout => mul_ln1209_fu_416_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_decode_1_fu_176_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_decode_1_fu_176_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_decode_1_fu_176_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_decode_1_fu_176_ap_ready = ap_const_logic_1)) then 
                    grp_decode_1_fu_176_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_huff_make_dhuff_tb_1_fu_136_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_huff_make_dhuff_tb_1_fu_136_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    grp_huff_make_dhuff_tb_1_fu_136_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_huff_make_dhuff_tb_1_fu_136_ap_ready = ap_const_logic_1)) then 
                    grp_huff_make_dhuff_tb_1_fu_136_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_huff_make_dhuff_tb_2_fu_164_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_huff_make_dhuff_tb_2_fu_164_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_huff_make_dhuff_tb_2_fu_164_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_huff_make_dhuff_tb_2_fu_164_ap_ready = ap_const_logic_1)) then 
                    grp_huff_make_dhuff_tb_2_fu_164_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_read_markers_1_fu_112_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_read_markers_1_fu_112_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_read_markers_1_fu_112_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_read_markers_1_fu_112_ap_ready = ap_const_logic_1)) then 
                    grp_read_markers_1_fu_112_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln1207_1_reg_444 <= add_ln1207_1_fu_310_p2;
                add_ln1208_1_reg_449 <= add_ln1208_1_fu_398_p2;
                p_jinfo_MCUWidth <= add_ln1208_1_fu_398_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_huff_make_dhuff_tb_1_fu_136_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                p_jinfo_NumMCU <= mul_ln1209_fu_416_p2;
                p_jinfo_dc_dhuff_tbl_ml_0 <= trunc_ln1204_fu_428_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_huff_make_dhuff_tb_2_fu_164_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                p_jinfo_ac_dhuff_tbl_ml_0 <= grp_huff_make_dhuff_tb_2_fu_164_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_read_markers_1_fu_112_p_jinfo_image_height_ap_vld = ap_const_logic_1))) then
                p_jinfo_image_height <= grp_read_markers_1_fu_112_p_jinfo_image_height;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_read_markers_1_fu_112_p_jinfo_image_width_ap_vld = ap_const_logic_1))) then
                p_jinfo_image_width <= grp_read_markers_1_fu_112_p_jinfo_image_width;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_read_markers_1_fu_112_p_jinfo_jpeg_data_ap_vld = ap_const_logic_1))) then
                p_jinfo_jpeg_data <= grp_read_markers_1_fu_112_p_jinfo_jpeg_data;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_read_markers_1_fu_112_ap_done, grp_huff_make_dhuff_tb_1_fu_136_ap_done, grp_huff_make_dhuff_tb_2_fu_164_ap_done, grp_decode_1_fu_176_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state12)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_read_markers_1_fu_112_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_huff_make_dhuff_tb_1_fu_136_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_huff_make_dhuff_tb_1_fu_136_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((grp_huff_make_dhuff_tb_2_fu_164_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((grp_huff_make_dhuff_tb_1_fu_136_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((grp_decode_1_fu_176_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    add_ln1207_1_fu_310_p2 <= std_logic_vector(signed(sext_ln1207_4_fu_306_p1) + signed(ap_const_lv17_1));
    add_ln1207_fu_236_p2 <= std_logic_vector(signed(sext_ln1207_fu_232_p1) + signed(ap_const_lv17_1FFFF));
    add_ln1208_1_fu_398_p2 <= std_logic_vector(signed(sext_ln1208_4_fu_394_p1) + signed(ap_const_lv17_1));
    add_ln1208_fu_324_p2 <= std_logic_vector(signed(sext_ln1208_fu_320_p1) + signed(ap_const_lv17_1FFFF));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_ap_done)
    begin
        if ((grp_huff_make_dhuff_tb_1_fu_136_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(grp_decode_1_fu_176_ap_done)
    begin
        if ((grp_decode_1_fu_176_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_read_markers_1_fu_112_ap_done)
    begin
        if ((grp_read_markers_1_fu_112_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_ap_done)
    begin
        if ((grp_huff_make_dhuff_tb_1_fu_136_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_ap_done)
    begin
        if ((grp_huff_make_dhuff_tb_1_fu_136_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_huff_make_dhuff_tb_2_fu_164_ap_done)
    begin
        if ((grp_huff_make_dhuff_tb_2_fu_164_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(grp_decode_1_fu_176_ap_done, ap_CS_fsm_state12)
    begin
        if (((grp_decode_1_fu_176_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_decode_1_fu_176_ap_done, ap_CS_fsm_state12)
    begin
        if (((grp_decode_1_fu_176_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_decode_1_fu_176_ap_start <= grp_decode_1_fu_176_ap_start_reg;
    grp_huff_make_dhuff_tb_1_fu_136_ap_start <= grp_huff_make_dhuff_tb_1_fu_136_ap_start_reg;

    grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_offset_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_offset <= ap_const_lv1_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_offset <= ap_const_lv1_0;
        else 
            grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_offset <= "X";
        end if; 
    end process;


    grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_q0_assign_proc : process(p_jinfo_dc_dhuff_tbl_maxcode_q0, p_jinfo_ac_dhuff_tbl_maxcode_q0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_q0 <= p_jinfo_ac_dhuff_tbl_maxcode_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_q0 <= p_jinfo_dc_dhuff_tbl_maxcode_q0;
        else 
            grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_offset_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_offset <= ap_const_lv1_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_offset <= ap_const_lv1_0;
        else 
            grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_offset <= "X";
        end if; 
    end process;


    grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_offset_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_offset <= ap_const_lv1_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_offset <= ap_const_lv1_0;
        else 
            grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_offset <= "X";
        end if; 
    end process;


    grp_huff_make_dhuff_tb_1_fu_136_p_xhtbl_bits_offset_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_huff_make_dhuff_tb_1_fu_136_p_xhtbl_bits_offset <= ap_const_lv10_90;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_huff_make_dhuff_tb_1_fu_136_p_xhtbl_bits_offset <= ap_const_lv10_290;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_huff_make_dhuff_tb_1_fu_136_p_xhtbl_bits_offset <= ap_const_lv10_200;
        else 
            grp_huff_make_dhuff_tb_1_fu_136_p_xhtbl_bits_offset <= "XXXXXXXXXX";
        end if; 
    end process;

    grp_huff_make_dhuff_tb_2_fu_164_ap_start <= grp_huff_make_dhuff_tb_2_fu_164_ap_start_reg;
    grp_read_markers_1_fu_112_ap_start <= grp_read_markers_1_fu_112_ap_start_reg;
    inputVector_address0 <= ap_const_lv13_0;
    inputVector_address1 <= ap_const_lv13_0;
    inputVector_ce0 <= ap_const_logic_0;
    inputVector_ce1 <= ap_const_logic_0;
    inputVector_d0 <= ap_const_lv8_0;
    inputVector_d1 <= ap_const_lv8_0;
    inputVector_we0 <= ap_const_logic_0;
    inputVector_we1 <= ap_const_logic_0;
    outputVector_address0 <= grp_decode_1_fu_176_outputVector_address0;
    outputVector_ce0 <= grp_decode_1_fu_176_outputVector_ce0;
    outputVector_d0 <= grp_decode_1_fu_176_outputVector_d0;
    outputVector_we0 <= grp_decode_1_fu_176_outputVector_we0;

    p_jinfo_ac_dhuff_tbl_maxcode_address0_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_address0, grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_address0, grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_maxcode_address0, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_jinfo_ac_dhuff_tbl_maxcode_address0 <= grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_maxcode_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_jinfo_ac_dhuff_tbl_maxcode_address0 <= grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_jinfo_ac_dhuff_tbl_maxcode_address0 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_address0;
        else 
            p_jinfo_ac_dhuff_tbl_maxcode_address0 <= "XXXXXXX";
        end if; 
    end process;


    p_jinfo_ac_dhuff_tbl_maxcode_address1_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_address1, grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_address1, ap_CS_fsm_state10, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_jinfo_ac_dhuff_tbl_maxcode_address1 <= grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_jinfo_ac_dhuff_tbl_maxcode_address1 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_address1;
        else 
            p_jinfo_ac_dhuff_tbl_maxcode_address1 <= "XXXXXXX";
        end if; 
    end process;


    p_jinfo_ac_dhuff_tbl_maxcode_ce0_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_ce0, grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_ce0, grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_maxcode_ce0, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_jinfo_ac_dhuff_tbl_maxcode_ce0 <= grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_maxcode_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_jinfo_ac_dhuff_tbl_maxcode_ce0 <= grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_jinfo_ac_dhuff_tbl_maxcode_ce0 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_ce0;
        else 
            p_jinfo_ac_dhuff_tbl_maxcode_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_jinfo_ac_dhuff_tbl_maxcode_ce1_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_ce1, grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_ce1, ap_CS_fsm_state10, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_jinfo_ac_dhuff_tbl_maxcode_ce1 <= grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_jinfo_ac_dhuff_tbl_maxcode_ce1 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_ce1;
        else 
            p_jinfo_ac_dhuff_tbl_maxcode_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    p_jinfo_ac_dhuff_tbl_maxcode_d0_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_d0, grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_d0, ap_CS_fsm_state10, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_jinfo_ac_dhuff_tbl_maxcode_d0 <= grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_jinfo_ac_dhuff_tbl_maxcode_d0 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_d0;
        else 
            p_jinfo_ac_dhuff_tbl_maxcode_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_jinfo_ac_dhuff_tbl_maxcode_d1_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_d1, grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_d1, ap_CS_fsm_state10, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_jinfo_ac_dhuff_tbl_maxcode_d1 <= grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_jinfo_ac_dhuff_tbl_maxcode_d1 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_d1;
        else 
            p_jinfo_ac_dhuff_tbl_maxcode_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_jinfo_ac_dhuff_tbl_maxcode_we0_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_we0, grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_we0, ap_CS_fsm_state10, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_jinfo_ac_dhuff_tbl_maxcode_we0 <= grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_jinfo_ac_dhuff_tbl_maxcode_we0 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_we0;
        else 
            p_jinfo_ac_dhuff_tbl_maxcode_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_jinfo_ac_dhuff_tbl_maxcode_we1_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_we1, grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_we1, ap_CS_fsm_state10, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_jinfo_ac_dhuff_tbl_maxcode_we1 <= grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_maxcode_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_jinfo_ac_dhuff_tbl_maxcode_we1 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_we1;
        else 
            p_jinfo_ac_dhuff_tbl_maxcode_we1 <= ap_const_logic_0;
        end if; 
    end process;


    p_jinfo_ac_dhuff_tbl_mincode_address0_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_address0, grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_address0, grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_mincode_address0, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_jinfo_ac_dhuff_tbl_mincode_address0 <= grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_mincode_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_jinfo_ac_dhuff_tbl_mincode_address0 <= grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_jinfo_ac_dhuff_tbl_mincode_address0 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_address0;
        else 
            p_jinfo_ac_dhuff_tbl_mincode_address0 <= "XXXXXXX";
        end if; 
    end process;


    p_jinfo_ac_dhuff_tbl_mincode_ce0_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_ce0, grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_ce0, grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_mincode_ce0, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_jinfo_ac_dhuff_tbl_mincode_ce0 <= grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_mincode_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_jinfo_ac_dhuff_tbl_mincode_ce0 <= grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_jinfo_ac_dhuff_tbl_mincode_ce0 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_ce0;
        else 
            p_jinfo_ac_dhuff_tbl_mincode_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_jinfo_ac_dhuff_tbl_mincode_d0_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_d0, grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_d0, ap_CS_fsm_state10, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_jinfo_ac_dhuff_tbl_mincode_d0 <= grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_jinfo_ac_dhuff_tbl_mincode_d0 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_d0;
        else 
            p_jinfo_ac_dhuff_tbl_mincode_d0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    p_jinfo_ac_dhuff_tbl_mincode_we0_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_we0, grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_we0, ap_CS_fsm_state10, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_jinfo_ac_dhuff_tbl_mincode_we0 <= grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_mincode_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_jinfo_ac_dhuff_tbl_mincode_we0 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_we0;
        else 
            p_jinfo_ac_dhuff_tbl_mincode_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_jinfo_ac_dhuff_tbl_valptr_address0_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_address0, grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_address0, grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_valptr_address0, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_jinfo_ac_dhuff_tbl_valptr_address0 <= grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_valptr_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_jinfo_ac_dhuff_tbl_valptr_address0 <= grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_jinfo_ac_dhuff_tbl_valptr_address0 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_address0;
        else 
            p_jinfo_ac_dhuff_tbl_valptr_address0 <= "XXXXXXX";
        end if; 
    end process;


    p_jinfo_ac_dhuff_tbl_valptr_ce0_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_ce0, grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_ce0, grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_valptr_ce0, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_jinfo_ac_dhuff_tbl_valptr_ce0 <= grp_decode_1_fu_176_p_jinfo_ac_dhuff_tbl_valptr_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_jinfo_ac_dhuff_tbl_valptr_ce0 <= grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_jinfo_ac_dhuff_tbl_valptr_ce0 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_ce0;
        else 
            p_jinfo_ac_dhuff_tbl_valptr_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_jinfo_ac_dhuff_tbl_valptr_d0_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_d0, grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_d0, ap_CS_fsm_state10, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_jinfo_ac_dhuff_tbl_valptr_d0 <= grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_jinfo_ac_dhuff_tbl_valptr_d0 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_d0;
        else 
            p_jinfo_ac_dhuff_tbl_valptr_d0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    p_jinfo_ac_dhuff_tbl_valptr_we0_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_we0, grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_we0, ap_CS_fsm_state10, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_jinfo_ac_dhuff_tbl_valptr_we0 <= grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_ac_dhuff_tbl_valptr_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_jinfo_ac_dhuff_tbl_valptr_we0 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_we0;
        else 
            p_jinfo_ac_dhuff_tbl_valptr_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_jinfo_ac_xhuff_tbl_huffval_address0_assign_proc : process(grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_address0, grp_decode_1_fu_176_p_jinfo_ac_xhuff_tbl_huffval_address0, ap_CS_fsm_state2, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_jinfo_ac_xhuff_tbl_huffval_address0 <= grp_decode_1_fu_176_p_jinfo_ac_xhuff_tbl_huffval_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_jinfo_ac_xhuff_tbl_huffval_address0 <= grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_address0;
        else 
            p_jinfo_ac_xhuff_tbl_huffval_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    p_jinfo_ac_xhuff_tbl_huffval_ce0_assign_proc : process(grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_ce0, grp_decode_1_fu_176_p_jinfo_ac_xhuff_tbl_huffval_ce0, ap_CS_fsm_state2, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_jinfo_ac_xhuff_tbl_huffval_ce0 <= grp_decode_1_fu_176_p_jinfo_ac_xhuff_tbl_huffval_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_jinfo_ac_xhuff_tbl_huffval_ce0 <= grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_ce0;
        else 
            p_jinfo_ac_xhuff_tbl_huffval_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_jinfo_ac_xhuff_tbl_huffval_we0_assign_proc : process(grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_jinfo_ac_xhuff_tbl_huffval_we0 <= grp_read_markers_1_fu_112_p_jinfo_ac_xhuff_tbl_huffval_we0;
        else 
            p_jinfo_ac_xhuff_tbl_huffval_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_jinfo_dc_dhuff_tbl_maxcode_address0_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_address0, grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_maxcode_address0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_jinfo_dc_dhuff_tbl_maxcode_address0 <= grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_maxcode_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            p_jinfo_dc_dhuff_tbl_maxcode_address0 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_address0;
        else 
            p_jinfo_dc_dhuff_tbl_maxcode_address0 <= "XXXXXXX";
        end if; 
    end process;


    p_jinfo_dc_dhuff_tbl_maxcode_ce0_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_ce0, grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_maxcode_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_jinfo_dc_dhuff_tbl_maxcode_ce0 <= grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_maxcode_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            p_jinfo_dc_dhuff_tbl_maxcode_ce0 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_ce0;
        else 
            p_jinfo_dc_dhuff_tbl_maxcode_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_jinfo_dc_dhuff_tbl_maxcode_ce1_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_ce1, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            p_jinfo_dc_dhuff_tbl_maxcode_ce1 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_ce1;
        else 
            p_jinfo_dc_dhuff_tbl_maxcode_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    p_jinfo_dc_dhuff_tbl_maxcode_we0_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_we0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            p_jinfo_dc_dhuff_tbl_maxcode_we0 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_we0;
        else 
            p_jinfo_dc_dhuff_tbl_maxcode_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_jinfo_dc_dhuff_tbl_maxcode_we1_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_we1, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            p_jinfo_dc_dhuff_tbl_maxcode_we1 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_maxcode_we1;
        else 
            p_jinfo_dc_dhuff_tbl_maxcode_we1 <= ap_const_logic_0;
        end if; 
    end process;


    p_jinfo_dc_dhuff_tbl_mincode_address0_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_address0, grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_mincode_address0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_jinfo_dc_dhuff_tbl_mincode_address0 <= grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_mincode_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            p_jinfo_dc_dhuff_tbl_mincode_address0 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_address0;
        else 
            p_jinfo_dc_dhuff_tbl_mincode_address0 <= "XXXXXXX";
        end if; 
    end process;


    p_jinfo_dc_dhuff_tbl_mincode_ce0_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_ce0, grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_mincode_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_jinfo_dc_dhuff_tbl_mincode_ce0 <= grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_mincode_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            p_jinfo_dc_dhuff_tbl_mincode_ce0 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_ce0;
        else 
            p_jinfo_dc_dhuff_tbl_mincode_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_jinfo_dc_dhuff_tbl_mincode_we0_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_we0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            p_jinfo_dc_dhuff_tbl_mincode_we0 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_mincode_we0;
        else 
            p_jinfo_dc_dhuff_tbl_mincode_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_jinfo_dc_dhuff_tbl_valptr_address0_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_address0, grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_valptr_address0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_jinfo_dc_dhuff_tbl_valptr_address0 <= grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_valptr_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            p_jinfo_dc_dhuff_tbl_valptr_address0 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_address0;
        else 
            p_jinfo_dc_dhuff_tbl_valptr_address0 <= "XXXXXXX";
        end if; 
    end process;


    p_jinfo_dc_dhuff_tbl_valptr_ce0_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_ce0, grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_valptr_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_jinfo_dc_dhuff_tbl_valptr_ce0 <= grp_decode_1_fu_176_p_jinfo_dc_dhuff_tbl_valptr_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            p_jinfo_dc_dhuff_tbl_valptr_ce0 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_ce0;
        else 
            p_jinfo_dc_dhuff_tbl_valptr_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_jinfo_dc_dhuff_tbl_valptr_we0_assign_proc : process(grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_we0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            p_jinfo_dc_dhuff_tbl_valptr_we0 <= grp_huff_make_dhuff_tb_1_fu_136_p_dhtbl_valptr_we0;
        else 
            p_jinfo_dc_dhuff_tbl_valptr_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_jinfo_dc_xhuff_tbl_bits_address0_assign_proc : process(grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_address0, grp_huff_make_dhuff_tb_1_fu_136_p_jinfo_dc_xhuff_tbl_bits_address0, grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_dc_xhuff_tbl_bits_address0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_jinfo_dc_xhuff_tbl_bits_address0 <= grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_dc_xhuff_tbl_bits_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            p_jinfo_dc_xhuff_tbl_bits_address0 <= grp_huff_make_dhuff_tb_1_fu_136_p_jinfo_dc_xhuff_tbl_bits_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_jinfo_dc_xhuff_tbl_bits_address0 <= grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_address0;
        else 
            p_jinfo_dc_xhuff_tbl_bits_address0 <= "XXXXXXXX";
        end if; 
    end process;


    p_jinfo_dc_xhuff_tbl_bits_ce0_assign_proc : process(grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_ce0, grp_huff_make_dhuff_tb_1_fu_136_p_jinfo_dc_xhuff_tbl_bits_ce0, grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_dc_xhuff_tbl_bits_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state10, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_jinfo_dc_xhuff_tbl_bits_ce0 <= grp_huff_make_dhuff_tb_2_fu_164_p_jinfo_dc_xhuff_tbl_bits_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            p_jinfo_dc_xhuff_tbl_bits_ce0 <= grp_huff_make_dhuff_tb_1_fu_136_p_jinfo_dc_xhuff_tbl_bits_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_jinfo_dc_xhuff_tbl_bits_ce0 <= grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_ce0;
        else 
            p_jinfo_dc_xhuff_tbl_bits_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_jinfo_dc_xhuff_tbl_bits_we0_assign_proc : process(grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_jinfo_dc_xhuff_tbl_bits_we0 <= grp_read_markers_1_fu_112_p_jinfo_dc_xhuff_tbl_bits_we0;
        else 
            p_jinfo_dc_xhuff_tbl_bits_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_jinfo_quant_tbl_quantval_address0_assign_proc : process(grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_address0, grp_decode_1_fu_176_p_jinfo_quant_tbl_quantval_address0, ap_CS_fsm_state2, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_jinfo_quant_tbl_quantval_address0 <= grp_decode_1_fu_176_p_jinfo_quant_tbl_quantval_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_jinfo_quant_tbl_quantval_address0 <= grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_address0;
        else 
            p_jinfo_quant_tbl_quantval_address0 <= "XXXXXXXX";
        end if; 
    end process;


    p_jinfo_quant_tbl_quantval_ce0_assign_proc : process(grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_ce0, grp_decode_1_fu_176_p_jinfo_quant_tbl_quantval_ce0, ap_CS_fsm_state2, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            p_jinfo_quant_tbl_quantval_ce0 <= grp_decode_1_fu_176_p_jinfo_quant_tbl_quantval_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_jinfo_quant_tbl_quantval_ce0 <= grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_ce0;
        else 
            p_jinfo_quant_tbl_quantval_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_jinfo_quant_tbl_quantval_ce1_assign_proc : process(grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_ce1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_jinfo_quant_tbl_quantval_ce1 <= grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_ce1;
        else 
            p_jinfo_quant_tbl_quantval_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    p_jinfo_quant_tbl_quantval_we0_assign_proc : process(grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_jinfo_quant_tbl_quantval_we0 <= grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_we0;
        else 
            p_jinfo_quant_tbl_quantval_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_jinfo_quant_tbl_quantval_we1_assign_proc : process(grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_we1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_jinfo_quant_tbl_quantval_we1 <= grp_read_markers_1_fu_112_p_jinfo_quant_tbl_quantval_we1;
        else 
            p_jinfo_quant_tbl_quantval_we1 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln1207_fu_298_p3 <= 
        sub_ln1207_1_fu_274_p2 when (tmp_2_fu_242_p3(0) = '1') else 
        zext_ln1207_1_fu_294_p1;
    select_ln1208_fu_386_p3 <= 
        sub_ln1208_1_fu_362_p2 when (tmp_3_fu_330_p3(0) = '1') else 
        zext_ln1208_1_fu_382_p1;
        sext_ln1207_2_fu_266_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1207_1_fu_256_p4),15));

        sext_ln1207_3_fu_290_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1207_2_fu_280_p4),15));

        sext_ln1207_4_fu_306_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln1207_fu_298_p3),17));

        sext_ln1207_fu_232_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_jinfo_image_height),17));

        sext_ln1208_2_fu_354_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1208_1_fu_344_p4),15));

        sext_ln1208_3_fu_378_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1208_2_fu_368_p4),15));

        sext_ln1208_4_fu_394_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln1208_fu_386_p3),17));

        sext_ln1208_fu_320_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_jinfo_image_width),17));

    sub_ln1207_1_fu_274_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(zext_ln1207_fu_270_p1));
    sub_ln1207_fu_250_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) - unsigned(sext_ln1207_fu_232_p1));
    sub_ln1208_1_fu_362_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(zext_ln1208_fu_358_p1));
    sub_ln1208_fu_338_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) - unsigned(sext_ln1208_fu_320_p1));
    tmp_2_fu_242_p3 <= add_ln1207_fu_236_p2(16 downto 16);
    tmp_3_fu_330_p3 <= add_ln1208_fu_324_p2(16 downto 16);
    trunc_ln1204_fu_428_p1 <= grp_huff_make_dhuff_tb_1_fu_136_ap_return(7 - 1 downto 0);
    trunc_ln1207_1_fu_256_p4 <= sub_ln1207_fu_250_p2(16 downto 3);
    trunc_ln1207_2_fu_280_p4 <= add_ln1207_fu_236_p2(16 downto 3);
    trunc_ln1208_1_fu_344_p4 <= sub_ln1208_fu_338_p2(16 downto 3);
    trunc_ln1208_2_fu_368_p4 <= add_ln1208_fu_324_p2(16 downto 3);
    zext_ln1207_1_fu_294_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1207_3_fu_290_p1),16));
    zext_ln1207_fu_270_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1207_2_fu_266_p1),16));
    zext_ln1208_1_fu_382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1208_3_fu_378_p1),16));
    zext_ln1208_fu_358_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1208_2_fu_354_p1),16));
end behav;
