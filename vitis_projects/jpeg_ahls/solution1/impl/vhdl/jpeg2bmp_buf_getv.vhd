-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity jpeg2bmp_buf_getv is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    n : IN STD_LOGIC_VECTOR (7 downto 0);
    read_position_i : IN STD_LOGIC_VECTOR (31 downto 0);
    read_position_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    read_position_o_ap_vld : OUT STD_LOGIC;
    CurHuffReadBuf_i : IN STD_LOGIC_VECTOR (7 downto 0);
    CurHuffReadBuf_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    CurHuffReadBuf_o_ap_vld : OUT STD_LOGIC;
    current_read_byte_i : IN STD_LOGIC_VECTOR (31 downto 0);
    current_read_byte_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    current_read_byte_o_ap_vld : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of jpeg2bmp_buf_getv is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal lmask_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal lmask_ce0 : STD_LOGIC;
    signal lmask_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal read_position_load_reg_312 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln592_fu_114_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln592_reg_317 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal p_fu_124_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln590_fu_129_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln590_reg_328 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln594_fu_134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln594_reg_333 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal targetBlock_reg_340 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_start : STD_LOGIC;
    signal grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_done : STD_LOGIC;
    signal grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_idle : STD_LOGIC;
    signal grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_ready : STD_LOGIC;
    signal grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_temp_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_temp_out_ap_vld : STD_LOGIC;
    signal grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_p_03_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_p_03_out_ap_vld : STD_LOGIC;
    signal grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_load_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_load_out_ap_vld : STD_LOGIC;
    signal grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_select_ln555_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_select_ln555_out_ap_vld : STD_LOGIC;
    signal grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_o_ap_vld : STD_LOGIC;
    signal grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_read_position : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_read_position_ap_vld : STD_LOGIC;
    signal p_0_lcssa_reg_71 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln601_fu_227_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_retval_0_phi_fu_83_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal and_ln618_fu_268_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln609_fu_234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln612_fu_281_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_start_reg : STD_LOGIC := '0';
    signal temp_loc_fu_40 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_03_loc_fu_36 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln555_loc_fu_28 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln601_fu_178_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln612_fu_192_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln617_fu_250_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln600_fu_163_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln555_fu_197_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln589_fu_110_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln589_fu_120_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln601_fu_175_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln612_fu_189_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln599_fu_210_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln599_fu_215_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal rv_fu_200_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal rv_1_fu_221_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_10_fu_244_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln618_fu_262_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_condition_124 : BOOLEAN;
    signal ap_condition_130 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component jpeg2bmp_buf_getv_Pipeline_VITIS_LOOP_594_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        read_position_load : IN STD_LOGIC_VECTOR (31 downto 0);
        CurHuffReadBuf_load : IN STD_LOGIC_VECTOR (7 downto 0);
        p : IN STD_LOGIC_VECTOR (30 downto 0);
        temp_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        temp_out_ap_vld : OUT STD_LOGIC;
        p_03_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_03_out_ap_vld : OUT STD_LOGIC;
        current_read_byte_load_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        current_read_byte_load_out_ap_vld : OUT STD_LOGIC;
        select_ln555_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        select_ln555_out_ap_vld : OUT STD_LOGIC;
        current_read_byte_i : IN STD_LOGIC_VECTOR (31 downto 0);
        current_read_byte_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        current_read_byte_o_ap_vld : OUT STD_LOGIC;
        read_position : OUT STD_LOGIC_VECTOR (31 downto 0);
        read_position_ap_vld : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component jpeg2bmp_buf_getv_lmask_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    lmask_U : component jpeg2bmp_buf_getv_lmask_ROM_AUTO_1R
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lmask_address0,
        ce0 => lmask_ce0,
        q0 => lmask_q0);

    grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91 : component jpeg2bmp_buf_getv_Pipeline_VITIS_LOOP_594_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_start,
        ap_done => grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_done,
        ap_idle => grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_idle,
        ap_ready => grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_ready,
        read_position_load => read_position_load_reg_312,
        CurHuffReadBuf_load => CurHuffReadBuf_i,
        p => trunc_ln590_reg_328,
        temp_out => grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_temp_out,
        temp_out_ap_vld => grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_temp_out_ap_vld,
        p_03_out => grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_p_03_out,
        p_03_out_ap_vld => grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_p_03_out_ap_vld,
        current_read_byte_load_out => grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_load_out,
        current_read_byte_load_out_ap_vld => grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_load_out_ap_vld,
        select_ln555_out => grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_select_ln555_out,
        select_ln555_out_ap_vld => grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_select_ln555_out_ap_vld,
        current_read_byte_i => current_read_byte_i,
        current_read_byte_o => grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_o,
        current_read_byte_o_ap_vld => grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_o_ap_vld,
        read_position => grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_read_position,
        read_position_ap_vld => grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_read_position_ap_vld,
        ap_return => grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_return_preg <= ap_phi_mux_retval_0_phi_fu_83_p6;
                end if; 
            end if;
        end if;
    end process;


    grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln594_fu_134_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_ready = ap_const_logic_1)) then 
                    grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    p_0_lcssa_reg_71_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln594_fu_134_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                p_0_lcssa_reg_71 <= p_fu_124_p2;
            elsif (((targetBlock_reg_340 = ap_const_lv1_1) and (icmp_ln594_reg_333 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                p_0_lcssa_reg_71 <= p_03_loc_fu_36;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln592_reg_317 <= add_ln592_fu_114_p2;
                icmp_ln594_reg_333 <= icmp_ln594_fu_134_p2;
                trunc_ln590_reg_328 <= trunc_ln590_fu_129_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_p_03_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                p_03_loc_fu_36 <= grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_p_03_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                read_position_load_reg_312 <= read_position_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_select_ln555_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                select_ln555_loc_fu_28 <= grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_select_ln555_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                targetBlock_reg_340 <= grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_temp_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                temp_loc_fu_40 <= grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_temp_out;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln594_fu_134_p2, ap_CS_fsm_state3, grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln594_fu_134_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;

    CurHuffReadBuf_o_assign_proc : process(CurHuffReadBuf_i, icmp_ln594_reg_333, targetBlock_reg_340, ap_CS_fsm_state4, temp_loc_fu_40, select_ln555_loc_fu_28)
    begin
        if (((icmp_ln594_reg_333 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
            if ((targetBlock_reg_340 = ap_const_lv1_1)) then 
                CurHuffReadBuf_o <= temp_loc_fu_40;
            elsif ((targetBlock_reg_340 = ap_const_lv1_0)) then 
                CurHuffReadBuf_o <= select_ln555_loc_fu_28;
            else 
                CurHuffReadBuf_o <= CurHuffReadBuf_i;
            end if;
        else 
            CurHuffReadBuf_o <= CurHuffReadBuf_i;
        end if; 
    end process;


    CurHuffReadBuf_o_ap_vld_assign_proc : process(icmp_ln594_reg_333, targetBlock_reg_340, ap_CS_fsm_state4)
    begin
        if ((((targetBlock_reg_340 = ap_const_lv1_0) and (icmp_ln594_reg_333 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((targetBlock_reg_340 = ap_const_lv1_1) and (icmp_ln594_reg_333 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            CurHuffReadBuf_o_ap_vld <= ap_const_logic_1;
        else 
            CurHuffReadBuf_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add_ln592_fu_114_p2 <= std_logic_vector(unsigned(zext_ln589_fu_110_p1) + unsigned(ap_const_lv9_1FF));
    and_ln601_fu_227_p2 <= (rv_1_fu_221_p2 and lmask_q0);
    and_ln612_fu_281_p2 <= (lmask_q0 and current_read_byte_i);
    and_ln618_fu_268_p2 <= (lshr_ln618_fu_262_p2 and lmask_q0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_done)
    begin
        if ((grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_condition_124_assign_proc : process(icmp_ln594_reg_333, targetBlock_reg_340, icmp_ln609_fu_234_p2)
    begin
                ap_condition_124 <= (((icmp_ln594_reg_333 = ap_const_lv1_0) and (icmp_ln609_fu_234_p2 = ap_const_lv1_0)) or ((targetBlock_reg_340 = ap_const_lv1_1) and (icmp_ln609_fu_234_p2 = ap_const_lv1_0)));
    end process;


    ap_condition_130_assign_proc : process(icmp_ln594_reg_333, targetBlock_reg_340, icmp_ln609_fu_234_p2)
    begin
                ap_condition_130 <= (((icmp_ln594_reg_333 = ap_const_lv1_0) and (icmp_ln609_fu_234_p2 = ap_const_lv1_1)) or ((targetBlock_reg_340 = ap_const_lv1_1) and (icmp_ln609_fu_234_p2 = ap_const_lv1_1)));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_retval_0_phi_fu_83_p6_assign_proc : process(icmp_ln594_reg_333, targetBlock_reg_340, and_ln601_fu_227_p2, ap_CS_fsm_state5, and_ln618_fu_268_p2, and_ln612_fu_281_p2, ap_condition_124, ap_condition_130)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
            if ((ap_const_boolean_1 = ap_condition_130)) then 
                ap_phi_mux_retval_0_phi_fu_83_p6 <= and_ln612_fu_281_p2;
            elsif ((ap_const_boolean_1 = ap_condition_124)) then 
                ap_phi_mux_retval_0_phi_fu_83_p6 <= and_ln618_fu_268_p2;
            elsif (((targetBlock_reg_340 = ap_const_lv1_0) and (icmp_ln594_reg_333 = ap_const_lv1_1))) then 
                ap_phi_mux_retval_0_phi_fu_83_p6 <= and_ln601_fu_227_p2;
            else 
                ap_phi_mux_retval_0_phi_fu_83_p6 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_retval_0_phi_fu_83_p6 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_phi_mux_retval_0_phi_fu_83_p6, ap_CS_fsm_state5, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_return <= ap_phi_mux_retval_0_phi_fu_83_p6;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;


    current_read_byte_o_assign_proc : process(current_read_byte_i, icmp_ln594_reg_333, targetBlock_reg_340, ap_CS_fsm_state3, grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_o, grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_o_ap_vld, ap_CS_fsm_state5, zext_ln555_fu_197_p1)
    begin
        if (((targetBlock_reg_340 = ap_const_lv1_0) and (icmp_ln594_reg_333 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            current_read_byte_o <= zext_ln555_fu_197_p1;
        elsif (((grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            current_read_byte_o <= grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_o;
        else 
            current_read_byte_o <= current_read_byte_i;
        end if; 
    end process;


    current_read_byte_o_ap_vld_assign_proc : process(icmp_ln594_reg_333, targetBlock_reg_340, ap_CS_fsm_state3, grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_o_ap_vld, ap_CS_fsm_state5)
    begin
        if (((targetBlock_reg_340 = ap_const_lv1_0) and (icmp_ln594_reg_333 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            current_read_byte_o_ap_vld <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            current_read_byte_o_ap_vld <= grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_o_ap_vld;
        else 
            current_read_byte_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_start <= grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_start_reg;
    icmp_ln594_fu_134_p2 <= "1" when (signed(p_fu_124_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln609_fu_234_p2 <= "1" when (p_0_lcssa_reg_71 = ap_const_lv32_0) else "0";

    lmask_address0_assign_proc : process(icmp_ln594_reg_333, targetBlock_reg_340, ap_CS_fsm_state4, zext_ln601_fu_178_p1, zext_ln612_fu_192_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
            if (((targetBlock_reg_340 = ap_const_lv1_1) or (icmp_ln594_reg_333 = ap_const_lv1_0))) then 
                lmask_address0 <= zext_ln612_fu_192_p1(5 - 1 downto 0);
            elsif (((targetBlock_reg_340 = ap_const_lv1_0) and (icmp_ln594_reg_333 = ap_const_lv1_1))) then 
                lmask_address0 <= zext_ln601_fu_178_p1(5 - 1 downto 0);
            else 
                lmask_address0 <= "XXXXX";
            end if;
        else 
            lmask_address0 <= "XXXXX";
        end if; 
    end process;


    lmask_ce0_assign_proc : process(icmp_ln594_reg_333, targetBlock_reg_340, ap_CS_fsm_state4)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state4) and ((targetBlock_reg_340 = ap_const_lv1_1) or (icmp_ln594_reg_333 = ap_const_lv1_0))) or ((targetBlock_reg_340 = ap_const_lv1_0) and (icmp_ln594_reg_333 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            lmask_ce0 <= ap_const_logic_1;
        else 
            lmask_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln599_fu_215_p2 <= std_logic_vector(shift_right(unsigned(zext_ln555_fu_197_p1),to_integer(unsigned('0' & sub_ln599_fu_210_p2(31-1 downto 0)))));
    lshr_ln618_fu_262_p2 <= std_logic_vector(shift_right(unsigned(current_read_byte_i),to_integer(unsigned('0' & p_10_fu_244_p2(31-1 downto 0)))));
    p_10_fu_244_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_0_lcssa_reg_71));
    p_fu_124_p2 <= std_logic_vector(signed(sext_ln589_fu_120_p1) - signed(read_position_i));

    read_position_o_assign_proc : process(read_position_i, icmp_ln594_reg_333, targetBlock_reg_340, ap_CS_fsm_state3, ap_CS_fsm_state4, grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_read_position, grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_read_position_ap_vld, ap_CS_fsm_state5, icmp_ln609_fu_234_p2, xor_ln617_fu_250_p2, sub_ln600_fu_163_p2)
    begin
        if (((targetBlock_reg_340 = ap_const_lv1_0) and (icmp_ln594_reg_333 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            read_position_o <= sub_ln600_fu_163_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (((icmp_ln594_reg_333 = ap_const_lv1_0) and (icmp_ln609_fu_234_p2 = ap_const_lv1_1)) or ((targetBlock_reg_340 = ap_const_lv1_1) and (icmp_ln609_fu_234_p2 = ap_const_lv1_1))))) then 
            read_position_o <= ap_const_lv32_FFFFFFFF;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (((icmp_ln594_reg_333 = ap_const_lv1_0) and (icmp_ln609_fu_234_p2 = ap_const_lv1_0)) or ((targetBlock_reg_340 = ap_const_lv1_1) and (icmp_ln609_fu_234_p2 = ap_const_lv1_0))))) then 
            read_position_o <= xor_ln617_fu_250_p2;
        elsif (((grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_read_position_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            read_position_o <= grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_read_position;
        else 
            read_position_o <= read_position_i;
        end if; 
    end process;


    read_position_o_ap_vld_assign_proc : process(icmp_ln594_reg_333, targetBlock_reg_340, ap_CS_fsm_state3, ap_CS_fsm_state4, grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_read_position_ap_vld, ap_CS_fsm_state5, icmp_ln609_fu_234_p2)
    begin
        if ((((targetBlock_reg_340 = ap_const_lv1_0) and (icmp_ln594_reg_333 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (((icmp_ln594_reg_333 = ap_const_lv1_0) and (icmp_ln609_fu_234_p2 = ap_const_lv1_1)) or ((targetBlock_reg_340 = ap_const_lv1_1) and (icmp_ln609_fu_234_p2 = ap_const_lv1_1)))) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (((icmp_ln594_reg_333 = ap_const_lv1_0) and (icmp_ln609_fu_234_p2 = ap_const_lv1_0)) or ((targetBlock_reg_340 = ap_const_lv1_1) and (icmp_ln609_fu_234_p2 = ap_const_lv1_0)))))) then 
            read_position_o_ap_vld <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            read_position_o_ap_vld <= grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_read_position_ap_vld;
        else 
            read_position_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    rv_1_fu_221_p2 <= (rv_fu_200_p2 or lshr_ln599_fu_215_p2);
    rv_fu_200_p2 <= std_logic_vector(shift_left(unsigned(grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_load_out),to_integer(unsigned('0' & p_03_loc_fu_36(31-1 downto 0)))));
        sext_ln589_fu_120_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln592_fu_114_p2),32));

    sub_ln599_fu_210_p2 <= std_logic_vector(unsigned(ap_const_lv32_8) - unsigned(p_03_loc_fu_36));
    sub_ln600_fu_163_p2 <= std_logic_vector(unsigned(ap_const_lv32_7) - unsigned(p_03_loc_fu_36));
    trunc_ln590_fu_129_p1 <= p_fu_124_p2(31 - 1 downto 0);
    trunc_ln601_fu_175_p1 <= add_ln592_reg_317(5 - 1 downto 0);
    trunc_ln612_fu_189_p1 <= add_ln592_reg_317(5 - 1 downto 0);
    xor_ln617_fu_250_p2 <= (p_0_lcssa_reg_71 xor ap_const_lv32_FFFFFFFF);
    zext_ln555_fu_197_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(temp_loc_fu_40),32));
    zext_ln589_fu_110_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n),9));
    zext_ln601_fu_178_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln601_fu_175_p1),64));
    zext_ln612_fu_192_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln612_fu_189_p1),64));
end behav;
