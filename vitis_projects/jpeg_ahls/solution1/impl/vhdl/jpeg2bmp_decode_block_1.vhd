-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity jpeg2bmp_decode_block_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    IDCTBuff_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    IDCTBuff_ce0 : OUT STD_LOGIC;
    IDCTBuff_we0 : OUT STD_LOGIC;
    IDCTBuff_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    IDCTBuff_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    IDCTBuff_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    IDCTBuff_ce1 : OUT STD_LOGIC;
    IDCTBuff_we1 : OUT STD_LOGIC;
    IDCTBuff_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    IDCTBuff_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_buf : IN STD_LOGIC_VECTOR (9 downto 0);
    HuffBuff_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    HuffBuff_ce0 : OUT STD_LOGIC;
    HuffBuff_we0 : OUT STD_LOGIC;
    HuffBuff_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    HuffBuff_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_jinfo_dc_dhuff_tbl_ml_0 : IN STD_LOGIC_VECTOR (6 downto 0);
    CurHuffReadBuf_i : IN STD_LOGIC_VECTOR (7 downto 0);
    CurHuffReadBuf_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    CurHuffReadBuf_o_ap_vld : OUT STD_LOGIC;
    p_jinfo_dc_dhuff_tbl_maxcode_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_jinfo_dc_dhuff_tbl_maxcode_ce0 : OUT STD_LOGIC;
    p_jinfo_dc_dhuff_tbl_maxcode_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_jinfo_dc_dhuff_tbl_valptr_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_jinfo_dc_dhuff_tbl_valptr_ce0 : OUT STD_LOGIC;
    p_jinfo_dc_dhuff_tbl_valptr_q0 : IN STD_LOGIC_VECTOR (10 downto 0);
    p_jinfo_dc_dhuff_tbl_mincode_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_jinfo_dc_dhuff_tbl_mincode_ce0 : OUT STD_LOGIC;
    p_jinfo_dc_dhuff_tbl_mincode_q0 : IN STD_LOGIC_VECTOR (10 downto 0);
    p_jinfo_ac_xhuff_tbl_huffval_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    p_jinfo_ac_xhuff_tbl_huffval_ce0 : OUT STD_LOGIC;
    p_jinfo_ac_xhuff_tbl_huffval_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_jinfo_ac_dhuff_tbl_ml_0 : IN STD_LOGIC_VECTOR (6 downto 0);
    p_jinfo_ac_dhuff_tbl_maxcode_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_jinfo_ac_dhuff_tbl_maxcode_ce0 : OUT STD_LOGIC;
    p_jinfo_ac_dhuff_tbl_maxcode_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_jinfo_ac_dhuff_tbl_valptr_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_jinfo_ac_dhuff_tbl_valptr_ce0 : OUT STD_LOGIC;
    p_jinfo_ac_dhuff_tbl_valptr_q0 : IN STD_LOGIC_VECTOR (10 downto 0);
    p_jinfo_ac_dhuff_tbl_mincode_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    p_jinfo_ac_dhuff_tbl_mincode_ce0 : OUT STD_LOGIC;
    p_jinfo_ac_dhuff_tbl_mincode_q0 : IN STD_LOGIC_VECTOR (10 downto 0);
    p_jinfo_quant_tbl_quantval_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_jinfo_quant_tbl_quantval_ce0 : OUT STD_LOGIC;
    p_jinfo_quant_tbl_quantval_q0 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of jpeg2bmp_decode_block_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (22 downto 0) := "00000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (22 downto 0) := "00000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (22 downto 0) := "00000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (22 downto 0) := "00000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (22 downto 0) := "00000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (22 downto 0) := "00000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (22 downto 0) := "00001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (22 downto 0) := "00010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (22 downto 0) := "00100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (22 downto 0) := "01000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (22 downto 0) := "10000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv26_1 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal read_position : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    signal current_read_byte : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal bit_set_mask_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal bit_set_mask_ce0 : STD_LOGIC;
    signal bit_set_mask_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal extend_mask_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal extend_mask_ce0 : STD_LOGIC;
    signal extend_mask_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_buf_getv_fu_206_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_286 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_DecodeHuffman_1_fu_185_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal s_reg_545 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal trunc_ln708_fu_296_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln708_reg_550 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln720_fu_300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln720_reg_555 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal HuffBuff_addr_reg_579 : STD_LOGIC_VECTOR (7 downto 0);
    signal bit_set_mask_load_reg_584 : STD_LOGIC_VECTOR (31 downto 0);
    signal extend_mask_load_reg_589 : STD_LOGIC_VECTOR (20 downto 0);
    signal HuffBuff_load_reg_594 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln740_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln740_reg_610 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal s_2_fu_401_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal s_2_reg_617 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal n_reg_624 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln708_fu_415_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln708_reg_630 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal icmp_ln750_fu_421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln750_reg_635 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_5_fu_426_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_5_reg_639 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln755_fu_467_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln755_reg_651 : STD_LOGIC_VECTOR (63 downto 0);
    signal HuffBuff_addr_1_reg_661 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal icmp_ln755_fu_509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln755_reg_666 : STD_LOGIC_VECTOR (0 downto 0);
    signal QuantBuff_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal QuantBuff_ce0 : STD_LOGIC;
    signal QuantBuff_we0 : STD_LOGIC;
    signal QuantBuff_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal QuantBuff_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal QuantBuff_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal QuantBuff_ce1 : STD_LOGIC;
    signal QuantBuff_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DecodeHuffman_1_fu_185_ap_start : STD_LOGIC;
    signal grp_DecodeHuffman_1_fu_185_ap_done : STD_LOGIC;
    signal grp_DecodeHuffman_1_fu_185_ap_idle : STD_LOGIC;
    signal grp_DecodeHuffman_1_fu_185_ap_ready : STD_LOGIC;
    signal grp_DecodeHuffman_1_fu_185_read_position_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DecodeHuffman_1_fu_185_read_position_o_ap_vld : STD_LOGIC;
    signal grp_DecodeHuffman_1_fu_185_CurHuffReadBuf_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_DecodeHuffman_1_fu_185_CurHuffReadBuf_o_ap_vld : STD_LOGIC;
    signal grp_DecodeHuffman_1_fu_185_current_read_byte_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DecodeHuffman_1_fu_185_current_read_byte_o_ap_vld : STD_LOGIC;
    signal grp_DecodeHuffman_1_fu_185_p_jinfo_dc_dhuff_tbl_maxcode_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_DecodeHuffman_1_fu_185_p_jinfo_dc_dhuff_tbl_maxcode_ce0 : STD_LOGIC;
    signal grp_DecodeHuffman_1_fu_185_p_jinfo_dc_dhuff_tbl_valptr_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_DecodeHuffman_1_fu_185_p_jinfo_dc_dhuff_tbl_valptr_ce0 : STD_LOGIC;
    signal grp_DecodeHuffman_1_fu_185_p_jinfo_dc_dhuff_tbl_mincode_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_DecodeHuffman_1_fu_185_p_jinfo_dc_dhuff_tbl_mincode_ce0 : STD_LOGIC;
    signal grp_DecodeHuffman_1_fu_185_p_jinfo_ac_xhuff_tbl_huffval_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_DecodeHuffman_1_fu_185_p_jinfo_ac_xhuff_tbl_huffval_ce0 : STD_LOGIC;
    signal grp_buf_getv_fu_206_ap_start : STD_LOGIC;
    signal grp_buf_getv_fu_206_ap_done : STD_LOGIC;
    signal grp_buf_getv_fu_206_ap_idle : STD_LOGIC;
    signal grp_buf_getv_fu_206_ap_ready : STD_LOGIC;
    signal grp_buf_getv_fu_206_n : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_buf_getv_fu_206_read_position_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buf_getv_fu_206_read_position_o_ap_vld : STD_LOGIC;
    signal grp_buf_getv_fu_206_CurHuffReadBuf_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_buf_getv_fu_206_CurHuffReadBuf_o_ap_vld : STD_LOGIC;
    signal grp_buf_getv_fu_206_current_read_byte_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buf_getv_fu_206_current_read_byte_o_ap_vld : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_ap_start : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_ap_done : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_ap_idle : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_ap_ready : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_HuffBuff_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_HuffBuff_ce0 : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_HuffBuff_we0 : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_HuffBuff_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DecodeHuffman_2_fu_226_ap_start : STD_LOGIC;
    signal grp_DecodeHuffman_2_fu_226_ap_done : STD_LOGIC;
    signal grp_DecodeHuffman_2_fu_226_ap_idle : STD_LOGIC;
    signal grp_DecodeHuffman_2_fu_226_ap_ready : STD_LOGIC;
    signal grp_DecodeHuffman_2_fu_226_read_position_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DecodeHuffman_2_fu_226_read_position_o_ap_vld : STD_LOGIC;
    signal grp_DecodeHuffman_2_fu_226_CurHuffReadBuf_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_DecodeHuffman_2_fu_226_CurHuffReadBuf_o_ap_vld : STD_LOGIC;
    signal grp_DecodeHuffman_2_fu_226_current_read_byte_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DecodeHuffman_2_fu_226_current_read_byte_o_ap_vld : STD_LOGIC;
    signal grp_DecodeHuffman_2_fu_226_p_jinfo_ac_dhuff_tbl_maxcode_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_DecodeHuffman_2_fu_226_p_jinfo_ac_dhuff_tbl_maxcode_ce0 : STD_LOGIC;
    signal grp_DecodeHuffman_2_fu_226_p_jinfo_ac_dhuff_tbl_valptr_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_DecodeHuffman_2_fu_226_p_jinfo_ac_dhuff_tbl_valptr_ce0 : STD_LOGIC;
    signal grp_DecodeHuffman_2_fu_226_p_jinfo_ac_dhuff_tbl_mincode_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_DecodeHuffman_2_fu_226_p_jinfo_ac_dhuff_tbl_mincode_ce0 : STD_LOGIC;
    signal grp_DecodeHuffman_2_fu_226_p_jinfo_ac_xhuff_tbl_huffval_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_DecodeHuffman_2_fu_226_p_jinfo_ac_xhuff_tbl_huffval_ce0 : STD_LOGIC;
    signal grp_DecodeHuffman_2_fu_226_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_ap_start : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_ap_done : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_ap_idle : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_ap_ready : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_HuffBuff_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_HuffBuff_ce0 : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_QuantBuff_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_QuantBuff_ce0 : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_QuantBuff_we0 : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_QuantBuff_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_ap_start : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_ap_done : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_ap_idle : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_ap_ready : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_QuantBuff_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_QuantBuff_ce0 : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_QuantBuff_we0 : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_QuantBuff_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_QuantBuff_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_QuantBuff_ce1 : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_p_jinfo_quant_tbl_quantval_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_p_jinfo_quant_tbl_quantval_ce0 : STD_LOGIC;
    signal grp_ChenIDct_1_fu_264_ap_start : STD_LOGIC;
    signal grp_ChenIDct_1_fu_264_ap_done : STD_LOGIC;
    signal grp_ChenIDct_1_fu_264_ap_idle : STD_LOGIC;
    signal grp_ChenIDct_1_fu_264_ap_ready : STD_LOGIC;
    signal grp_ChenIDct_1_fu_264_QuantBuff_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_ChenIDct_1_fu_264_QuantBuff_ce0 : STD_LOGIC;
    signal grp_ChenIDct_1_fu_264_QuantBuff_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_ChenIDct_1_fu_264_QuantBuff_ce1 : STD_LOGIC;
    signal grp_ChenIDct_1_fu_264_IDCTBuff_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_ChenIDct_1_fu_264_IDCTBuff_ce0 : STD_LOGIC;
    signal grp_ChenIDct_1_fu_264_IDCTBuff_we0 : STD_LOGIC;
    signal grp_ChenIDct_1_fu_264_IDCTBuff_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ChenIDct_1_fu_264_IDCTBuff_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_ChenIDct_1_fu_264_IDCTBuff_ce1 : STD_LOGIC;
    signal grp_ChenIDct_1_fu_264_IDCTBuff_we1 : STD_LOGIC;
    signal grp_ChenIDct_1_fu_264_IDCTBuff_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_ap_start : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_ap_done : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_ap_idle : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_ap_ready : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_IDCTBuff_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_IDCTBuff_ce0 : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_IDCTBuff_we0 : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_IDCTBuff_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_IDCTBuff_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_IDCTBuff_ce1 : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_ap_start : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_ap_done : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_ap_idle : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_ap_ready : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_IDCTBuff_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_IDCTBuff_ce0 : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_IDCTBuff_we0 : STD_LOGIC;
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_IDCTBuff_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DecodeHuffman_1_fu_185_ap_start_reg : STD_LOGIC := '0';
    signal grp_DecodeHuffman_1_fu_185_bit_set_mask_ce0 : STD_LOGIC;
    signal grp_DecodeHuffman_1_fu_185_bit_set_mask_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_buf_getv_fu_206_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_DecodeHuffman_2_fu_226_ap_start_reg : STD_LOGIC := '0';
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln760_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln751_fu_441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_ChenIDct_1_fu_264_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_NS_fsm_state20 : STD_LOGIC;
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal zext_ln723_fu_311_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln728_fu_327_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln753_fu_498_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k_fu_112 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal k_7_fu_532_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_6_fu_452_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal diff_4_fu_366_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln757_fu_525_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_1_fu_306_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal lshr_ln_fu_317_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln723_fu_332_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln724_fu_343_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal diff_1_fu_346_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln723_fu_337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal diff_2_fu_352_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal diff_3_fu_358_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_380_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln708_2_fu_418_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_431_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal s_3_fu_462_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln753_fu_472_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln7_fu_475_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln753_fu_483_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln3_fu_488_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln755_fu_503_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln756_fu_515_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln756_fu_519_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component jpeg2bmp_DecodeHuffman_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Dhuff_ml : IN STD_LOGIC_VECTOR (6 downto 0);
        read_position_i : IN STD_LOGIC_VECTOR (31 downto 0);
        read_position_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        read_position_o_ap_vld : OUT STD_LOGIC;
        CurHuffReadBuf_i : IN STD_LOGIC_VECTOR (7 downto 0);
        CurHuffReadBuf_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        CurHuffReadBuf_o_ap_vld : OUT STD_LOGIC;
        current_read_byte_i : IN STD_LOGIC_VECTOR (31 downto 0);
        current_read_byte_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        current_read_byte_o_ap_vld : OUT STD_LOGIC;
        p_jinfo_dc_dhuff_tbl_maxcode_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_jinfo_dc_dhuff_tbl_maxcode_ce0 : OUT STD_LOGIC;
        p_jinfo_dc_dhuff_tbl_maxcode_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_jinfo_dc_dhuff_tbl_valptr_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_jinfo_dc_dhuff_tbl_valptr_ce0 : OUT STD_LOGIC;
        p_jinfo_dc_dhuff_tbl_valptr_q0 : IN STD_LOGIC_VECTOR (10 downto 0);
        p_jinfo_dc_dhuff_tbl_mincode_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_jinfo_dc_dhuff_tbl_mincode_ce0 : OUT STD_LOGIC;
        p_jinfo_dc_dhuff_tbl_mincode_q0 : IN STD_LOGIC_VECTOR (10 downto 0);
        p_jinfo_ac_xhuff_tbl_huffval_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        p_jinfo_ac_xhuff_tbl_huffval_ce0 : OUT STD_LOGIC;
        p_jinfo_ac_xhuff_tbl_huffval_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component jpeg2bmp_buf_getv IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n : IN STD_LOGIC_VECTOR (7 downto 0);
        read_position_i : IN STD_LOGIC_VECTOR (31 downto 0);
        read_position_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        read_position_o_ap_vld : OUT STD_LOGIC;
        CurHuffReadBuf_i : IN STD_LOGIC_VECTOR (7 downto 0);
        CurHuffReadBuf_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        CurHuffReadBuf_o_ap_vld : OUT STD_LOGIC;
        current_read_byte_i : IN STD_LOGIC_VECTOR (31 downto 0);
        current_read_byte_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        current_read_byte_o_ap_vld : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component jpeg2bmp_decode_block_1_Pipeline_VITIS_LOOP_736_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_buf : IN STD_LOGIC_VECTOR (9 downto 0);
        HuffBuff_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        HuffBuff_ce0 : OUT STD_LOGIC;
        HuffBuff_we0 : OUT STD_LOGIC;
        HuffBuff_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component jpeg2bmp_DecodeHuffman_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Dhuff_ml : IN STD_LOGIC_VECTOR (6 downto 0);
        read_position_i : IN STD_LOGIC_VECTOR (31 downto 0);
        read_position_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        read_position_o_ap_vld : OUT STD_LOGIC;
        CurHuffReadBuf_i : IN STD_LOGIC_VECTOR (7 downto 0);
        CurHuffReadBuf_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        CurHuffReadBuf_o_ap_vld : OUT STD_LOGIC;
        current_read_byte_i : IN STD_LOGIC_VECTOR (31 downto 0);
        current_read_byte_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        current_read_byte_o_ap_vld : OUT STD_LOGIC;
        p_jinfo_ac_dhuff_tbl_maxcode_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_jinfo_ac_dhuff_tbl_maxcode_ce0 : OUT STD_LOGIC;
        p_jinfo_ac_dhuff_tbl_maxcode_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_jinfo_ac_dhuff_tbl_valptr_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_jinfo_ac_dhuff_tbl_valptr_ce0 : OUT STD_LOGIC;
        p_jinfo_ac_dhuff_tbl_valptr_q0 : IN STD_LOGIC_VECTOR (10 downto 0);
        p_jinfo_ac_dhuff_tbl_mincode_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        p_jinfo_ac_dhuff_tbl_mincode_ce0 : OUT STD_LOGIC;
        p_jinfo_ac_dhuff_tbl_mincode_q0 : IN STD_LOGIC_VECTOR (10 downto 0);
        p_jinfo_ac_xhuff_tbl_huffval_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        p_jinfo_ac_xhuff_tbl_huffval_ce0 : OUT STD_LOGIC;
        p_jinfo_ac_xhuff_tbl_huffval_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component jpeg2bmp_decode_block_1_Pipeline_VITIS_LOOP_322_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_buf : IN STD_LOGIC_VECTOR (9 downto 0);
        HuffBuff_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        HuffBuff_ce0 : OUT STD_LOGIC;
        HuffBuff_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        QuantBuff_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        QuantBuff_ce0 : OUT STD_LOGIC;
        QuantBuff_we0 : OUT STD_LOGIC;
        QuantBuff_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component jpeg2bmp_decode_block_1_Pipeline_VITIS_LOOP_334_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        QuantBuff_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        QuantBuff_ce0 : OUT STD_LOGIC;
        QuantBuff_we0 : OUT STD_LOGIC;
        QuantBuff_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        QuantBuff_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        QuantBuff_ce1 : OUT STD_LOGIC;
        QuantBuff_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_jinfo_quant_tbl_quantval_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_jinfo_quant_tbl_quantval_ce0 : OUT STD_LOGIC;
        p_jinfo_quant_tbl_quantval_q0 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component jpeg2bmp_ChenIDct_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        QuantBuff_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        QuantBuff_ce0 : OUT STD_LOGIC;
        QuantBuff_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        QuantBuff_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        QuantBuff_ce1 : OUT STD_LOGIC;
        QuantBuff_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        IDCTBuff_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        IDCTBuff_ce0 : OUT STD_LOGIC;
        IDCTBuff_we0 : OUT STD_LOGIC;
        IDCTBuff_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        IDCTBuff_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        IDCTBuff_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        IDCTBuff_ce1 : OUT STD_LOGIC;
        IDCTBuff_we1 : OUT STD_LOGIC;
        IDCTBuff_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        IDCTBuff_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        y : IN STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component jpeg2bmp_decode_block_1_Pipeline_VITIS_LOOP_347_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_buf : IN STD_LOGIC_VECTOR (9 downto 0);
        IDCTBuff_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        IDCTBuff_ce0 : OUT STD_LOGIC;
        IDCTBuff_we0 : OUT STD_LOGIC;
        IDCTBuff_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        IDCTBuff_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        IDCTBuff_ce1 : OUT STD_LOGIC;
        IDCTBuff_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component jpeg2bmp_decode_block_1_Pipeline_VITIS_LOOP_360_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_buf : IN STD_LOGIC_VECTOR (9 downto 0);
        IDCTBuff_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        IDCTBuff_ce0 : OUT STD_LOGIC;
        IDCTBuff_we0 : OUT STD_LOGIC;
        IDCTBuff_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        IDCTBuff_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component jpeg2bmp_DecodeHuffman_1_Pipeline_VITIS_LOOP_688_1_bit_set_mask_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component jpeg2bmp_decode_block_1_extend_mask_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component jpeg2bmp_decode_block_1_QuantBuff_RAM_1WNR_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    bit_set_mask_U : component jpeg2bmp_DecodeHuffman_1_Pipeline_VITIS_LOOP_688_1_bit_set_mask_ROM_AUTO_1R
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => bit_set_mask_address0,
        ce0 => bit_set_mask_ce0,
        q0 => bit_set_mask_q0);

    extend_mask_U : component jpeg2bmp_decode_block_1_extend_mask_ROM_AUTO_1R
    generic map (
        DataWidth => 21,
        AddressRange => 20,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => extend_mask_address0,
        ce0 => extend_mask_ce0,
        q0 => extend_mask_q0);

    QuantBuff_U : component jpeg2bmp_decode_block_1_QuantBuff_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => QuantBuff_address0,
        ce0 => QuantBuff_ce0,
        we0 => QuantBuff_we0,
        d0 => QuantBuff_d0,
        q0 => QuantBuff_q0,
        address1 => QuantBuff_address1,
        ce1 => QuantBuff_ce1,
        q1 => QuantBuff_q1);

    grp_DecodeHuffman_1_fu_185 : component jpeg2bmp_DecodeHuffman_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_DecodeHuffman_1_fu_185_ap_start,
        ap_done => grp_DecodeHuffman_1_fu_185_ap_done,
        ap_idle => grp_DecodeHuffman_1_fu_185_ap_idle,
        ap_ready => grp_DecodeHuffman_1_fu_185_ap_ready,
        Dhuff_ml => p_jinfo_dc_dhuff_tbl_ml_0,
        read_position_i => read_position,
        read_position_o => grp_DecodeHuffman_1_fu_185_read_position_o,
        read_position_o_ap_vld => grp_DecodeHuffman_1_fu_185_read_position_o_ap_vld,
        CurHuffReadBuf_i => CurHuffReadBuf_i,
        CurHuffReadBuf_o => grp_DecodeHuffman_1_fu_185_CurHuffReadBuf_o,
        CurHuffReadBuf_o_ap_vld => grp_DecodeHuffman_1_fu_185_CurHuffReadBuf_o_ap_vld,
        current_read_byte_i => current_read_byte,
        current_read_byte_o => grp_DecodeHuffman_1_fu_185_current_read_byte_o,
        current_read_byte_o_ap_vld => grp_DecodeHuffman_1_fu_185_current_read_byte_o_ap_vld,
        p_jinfo_dc_dhuff_tbl_maxcode_address0 => grp_DecodeHuffman_1_fu_185_p_jinfo_dc_dhuff_tbl_maxcode_address0,
        p_jinfo_dc_dhuff_tbl_maxcode_ce0 => grp_DecodeHuffman_1_fu_185_p_jinfo_dc_dhuff_tbl_maxcode_ce0,
        p_jinfo_dc_dhuff_tbl_maxcode_q0 => p_jinfo_dc_dhuff_tbl_maxcode_q0,
        p_jinfo_dc_dhuff_tbl_valptr_address0 => grp_DecodeHuffman_1_fu_185_p_jinfo_dc_dhuff_tbl_valptr_address0,
        p_jinfo_dc_dhuff_tbl_valptr_ce0 => grp_DecodeHuffman_1_fu_185_p_jinfo_dc_dhuff_tbl_valptr_ce0,
        p_jinfo_dc_dhuff_tbl_valptr_q0 => p_jinfo_dc_dhuff_tbl_valptr_q0,
        p_jinfo_dc_dhuff_tbl_mincode_address0 => grp_DecodeHuffman_1_fu_185_p_jinfo_dc_dhuff_tbl_mincode_address0,
        p_jinfo_dc_dhuff_tbl_mincode_ce0 => grp_DecodeHuffman_1_fu_185_p_jinfo_dc_dhuff_tbl_mincode_ce0,
        p_jinfo_dc_dhuff_tbl_mincode_q0 => p_jinfo_dc_dhuff_tbl_mincode_q0,
        p_jinfo_ac_xhuff_tbl_huffval_address0 => grp_DecodeHuffman_1_fu_185_p_jinfo_ac_xhuff_tbl_huffval_address0,
        p_jinfo_ac_xhuff_tbl_huffval_ce0 => grp_DecodeHuffman_1_fu_185_p_jinfo_ac_xhuff_tbl_huffval_ce0,
        p_jinfo_ac_xhuff_tbl_huffval_q0 => p_jinfo_ac_xhuff_tbl_huffval_q0,
        ap_return => grp_DecodeHuffman_1_fu_185_ap_return);

    grp_buf_getv_fu_206 : component jpeg2bmp_buf_getv
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_buf_getv_fu_206_ap_start,
        ap_done => grp_buf_getv_fu_206_ap_done,
        ap_idle => grp_buf_getv_fu_206_ap_idle,
        ap_ready => grp_buf_getv_fu_206_ap_ready,
        n => grp_buf_getv_fu_206_n,
        read_position_i => read_position,
        read_position_o => grp_buf_getv_fu_206_read_position_o,
        read_position_o_ap_vld => grp_buf_getv_fu_206_read_position_o_ap_vld,
        CurHuffReadBuf_i => CurHuffReadBuf_i,
        CurHuffReadBuf_o => grp_buf_getv_fu_206_CurHuffReadBuf_o,
        CurHuffReadBuf_o_ap_vld => grp_buf_getv_fu_206_CurHuffReadBuf_o_ap_vld,
        current_read_byte_i => current_read_byte,
        current_read_byte_o => grp_buf_getv_fu_206_current_read_byte_o,
        current_read_byte_o_ap_vld => grp_buf_getv_fu_206_current_read_byte_o_ap_vld,
        ap_return => grp_buf_getv_fu_206_ap_return);

    grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219 : component jpeg2bmp_decode_block_1_Pipeline_VITIS_LOOP_736_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_ap_start,
        ap_done => grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_ap_done,
        ap_idle => grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_ap_idle,
        ap_ready => grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_ap_ready,
        out_buf => out_buf,
        HuffBuff_address0 => grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_HuffBuff_address0,
        HuffBuff_ce0 => grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_HuffBuff_ce0,
        HuffBuff_we0 => grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_HuffBuff_we0,
        HuffBuff_d0 => grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_HuffBuff_d0);

    grp_DecodeHuffman_2_fu_226 : component jpeg2bmp_DecodeHuffman_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_DecodeHuffman_2_fu_226_ap_start,
        ap_done => grp_DecodeHuffman_2_fu_226_ap_done,
        ap_idle => grp_DecodeHuffman_2_fu_226_ap_idle,
        ap_ready => grp_DecodeHuffman_2_fu_226_ap_ready,
        Dhuff_ml => p_jinfo_ac_dhuff_tbl_ml_0,
        read_position_i => read_position,
        read_position_o => grp_DecodeHuffman_2_fu_226_read_position_o,
        read_position_o_ap_vld => grp_DecodeHuffman_2_fu_226_read_position_o_ap_vld,
        CurHuffReadBuf_i => CurHuffReadBuf_i,
        CurHuffReadBuf_o => grp_DecodeHuffman_2_fu_226_CurHuffReadBuf_o,
        CurHuffReadBuf_o_ap_vld => grp_DecodeHuffman_2_fu_226_CurHuffReadBuf_o_ap_vld,
        current_read_byte_i => current_read_byte,
        current_read_byte_o => grp_DecodeHuffman_2_fu_226_current_read_byte_o,
        current_read_byte_o_ap_vld => grp_DecodeHuffman_2_fu_226_current_read_byte_o_ap_vld,
        p_jinfo_ac_dhuff_tbl_maxcode_address0 => grp_DecodeHuffman_2_fu_226_p_jinfo_ac_dhuff_tbl_maxcode_address0,
        p_jinfo_ac_dhuff_tbl_maxcode_ce0 => grp_DecodeHuffman_2_fu_226_p_jinfo_ac_dhuff_tbl_maxcode_ce0,
        p_jinfo_ac_dhuff_tbl_maxcode_q0 => p_jinfo_ac_dhuff_tbl_maxcode_q0,
        p_jinfo_ac_dhuff_tbl_valptr_address0 => grp_DecodeHuffman_2_fu_226_p_jinfo_ac_dhuff_tbl_valptr_address0,
        p_jinfo_ac_dhuff_tbl_valptr_ce0 => grp_DecodeHuffman_2_fu_226_p_jinfo_ac_dhuff_tbl_valptr_ce0,
        p_jinfo_ac_dhuff_tbl_valptr_q0 => p_jinfo_ac_dhuff_tbl_valptr_q0,
        p_jinfo_ac_dhuff_tbl_mincode_address0 => grp_DecodeHuffman_2_fu_226_p_jinfo_ac_dhuff_tbl_mincode_address0,
        p_jinfo_ac_dhuff_tbl_mincode_ce0 => grp_DecodeHuffman_2_fu_226_p_jinfo_ac_dhuff_tbl_mincode_ce0,
        p_jinfo_ac_dhuff_tbl_mincode_q0 => p_jinfo_ac_dhuff_tbl_mincode_q0,
        p_jinfo_ac_xhuff_tbl_huffval_address0 => grp_DecodeHuffman_2_fu_226_p_jinfo_ac_xhuff_tbl_huffval_address0,
        p_jinfo_ac_xhuff_tbl_huffval_ce0 => grp_DecodeHuffman_2_fu_226_p_jinfo_ac_xhuff_tbl_huffval_ce0,
        p_jinfo_ac_xhuff_tbl_huffval_q0 => p_jinfo_ac_xhuff_tbl_huffval_q0,
        ap_return => grp_DecodeHuffman_2_fu_226_ap_return);

    grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247 : component jpeg2bmp_decode_block_1_Pipeline_VITIS_LOOP_322_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_ap_start,
        ap_done => grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_ap_done,
        ap_idle => grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_ap_idle,
        ap_ready => grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_ap_ready,
        out_buf => out_buf,
        HuffBuff_address0 => grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_HuffBuff_address0,
        HuffBuff_ce0 => grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_HuffBuff_ce0,
        HuffBuff_q0 => HuffBuff_q0,
        QuantBuff_address0 => grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_QuantBuff_address0,
        QuantBuff_ce0 => grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_QuantBuff_ce0,
        QuantBuff_we0 => grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_QuantBuff_we0,
        QuantBuff_d0 => grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_QuantBuff_d0);

    grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257 : component jpeg2bmp_decode_block_1_Pipeline_VITIS_LOOP_334_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_ap_start,
        ap_done => grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_ap_done,
        ap_idle => grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_ap_idle,
        ap_ready => grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_ap_ready,
        QuantBuff_address0 => grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_QuantBuff_address0,
        QuantBuff_ce0 => grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_QuantBuff_ce0,
        QuantBuff_we0 => grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_QuantBuff_we0,
        QuantBuff_d0 => grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_QuantBuff_d0,
        QuantBuff_address1 => grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_QuantBuff_address1,
        QuantBuff_ce1 => grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_QuantBuff_ce1,
        QuantBuff_q1 => QuantBuff_q1,
        p_jinfo_quant_tbl_quantval_address0 => grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_p_jinfo_quant_tbl_quantval_address0,
        p_jinfo_quant_tbl_quantval_ce0 => grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_p_jinfo_quant_tbl_quantval_ce0,
        p_jinfo_quant_tbl_quantval_q0 => p_jinfo_quant_tbl_quantval_q0);

    grp_ChenIDct_1_fu_264 : component jpeg2bmp_ChenIDct_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ChenIDct_1_fu_264_ap_start,
        ap_done => grp_ChenIDct_1_fu_264_ap_done,
        ap_idle => grp_ChenIDct_1_fu_264_ap_idle,
        ap_ready => grp_ChenIDct_1_fu_264_ap_ready,
        QuantBuff_address0 => grp_ChenIDct_1_fu_264_QuantBuff_address0,
        QuantBuff_ce0 => grp_ChenIDct_1_fu_264_QuantBuff_ce0,
        QuantBuff_q0 => QuantBuff_q0,
        QuantBuff_address1 => grp_ChenIDct_1_fu_264_QuantBuff_address1,
        QuantBuff_ce1 => grp_ChenIDct_1_fu_264_QuantBuff_ce1,
        QuantBuff_q1 => QuantBuff_q1,
        IDCTBuff_address0 => grp_ChenIDct_1_fu_264_IDCTBuff_address0,
        IDCTBuff_ce0 => grp_ChenIDct_1_fu_264_IDCTBuff_ce0,
        IDCTBuff_we0 => grp_ChenIDct_1_fu_264_IDCTBuff_we0,
        IDCTBuff_d0 => grp_ChenIDct_1_fu_264_IDCTBuff_d0,
        IDCTBuff_q0 => IDCTBuff_q0,
        IDCTBuff_address1 => grp_ChenIDct_1_fu_264_IDCTBuff_address1,
        IDCTBuff_ce1 => grp_ChenIDct_1_fu_264_IDCTBuff_ce1,
        IDCTBuff_we1 => grp_ChenIDct_1_fu_264_IDCTBuff_we1,
        IDCTBuff_d1 => grp_ChenIDct_1_fu_264_IDCTBuff_d1,
        IDCTBuff_q1 => IDCTBuff_q1,
        y => out_buf);

    grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272 : component jpeg2bmp_decode_block_1_Pipeline_VITIS_LOOP_347_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_ap_start,
        ap_done => grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_ap_done,
        ap_idle => grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_ap_idle,
        ap_ready => grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_ap_ready,
        out_buf => out_buf,
        IDCTBuff_address0 => grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_IDCTBuff_address0,
        IDCTBuff_ce0 => grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_IDCTBuff_ce0,
        IDCTBuff_we0 => grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_IDCTBuff_we0,
        IDCTBuff_d0 => grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_IDCTBuff_d0,
        IDCTBuff_address1 => grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_IDCTBuff_address1,
        IDCTBuff_ce1 => grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_IDCTBuff_ce1,
        IDCTBuff_q1 => IDCTBuff_q1);

    grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279 : component jpeg2bmp_decode_block_1_Pipeline_VITIS_LOOP_360_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_ap_start,
        ap_done => grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_ap_done,
        ap_idle => grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_ap_idle,
        ap_ready => grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_ap_ready,
        out_buf => out_buf,
        IDCTBuff_address0 => grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_IDCTBuff_address0,
        IDCTBuff_ce0 => grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_IDCTBuff_ce0,
        IDCTBuff_we0 => grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_IDCTBuff_we0,
        IDCTBuff_d0 => grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_IDCTBuff_d0,
        IDCTBuff_q0 => IDCTBuff_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_ChenIDct_1_fu_264_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ChenIDct_1_fu_264_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    grp_ChenIDct_1_fu_264_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ChenIDct_1_fu_264_ap_ready = ap_const_logic_1)) then 
                    grp_ChenIDct_1_fu_264_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_DecodeHuffman_1_fu_185_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_DecodeHuffman_1_fu_185_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_DecodeHuffman_1_fu_185_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_DecodeHuffman_1_fu_185_ap_ready = ap_const_logic_1)) then 
                    grp_DecodeHuffman_1_fu_185_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_DecodeHuffman_2_fu_226_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_DecodeHuffman_2_fu_226_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln740_fu_390_p2 = ap_const_lv1_1))) then 
                    grp_DecodeHuffman_2_fu_226_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_DecodeHuffman_2_fu_226_ap_ready = ap_const_logic_1)) then 
                    grp_DecodeHuffman_2_fu_226_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_buf_getv_fu_206_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_buf_getv_fu_206_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln720_reg_555 = ap_const_lv1_0)))) then 
                    grp_buf_getv_fu_206_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_buf_getv_fu_206_ap_ready = ap_const_logic_1)) then 
                    grp_buf_getv_fu_206_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and ((icmp_ln740_reg_610 = ap_const_lv1_0) or (((icmp_ln751_fu_441_p2 = ap_const_lv1_1) and (icmp_ln750_fu_421_p2 = ap_const_lv1_0)) or ((icmp_ln760_fu_447_p2 = ap_const_lv1_0) and (icmp_ln750_fu_421_p2 = ap_const_lv1_1)))))) then 
                    grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_ap_ready = ap_const_logic_1)) then 
                    grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_ap_ready = ap_const_logic_1)) then 
                    grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state20) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                    grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_ap_ready = ap_const_logic_1)) then 
                    grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                    grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_ap_ready = ap_const_logic_1)) then 
                    grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_ap_ready = ap_const_logic_1)) then 
                    grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    current_read_byte_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_DecodeHuffman_2_fu_226_current_read_byte_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                current_read_byte <= grp_DecodeHuffman_2_fu_226_current_read_byte_o;
            elsif ((((grp_buf_getv_fu_206_current_read_byte_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((grp_buf_getv_fu_206_current_read_byte_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
                current_read_byte <= grp_buf_getv_fu_206_current_read_byte_o;
            elsif (((grp_DecodeHuffman_1_fu_185_current_read_byte_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                current_read_byte <= grp_DecodeHuffman_1_fu_185_current_read_byte_o;
            end if; 
        end if;
    end process;

    k_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                k_fu_112 <= ap_const_lv32_1;
            elsif (((icmp_ln760_fu_447_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln750_fu_421_p2 = ap_const_lv1_1) and (icmp_ln740_reg_610 = ap_const_lv1_1))) then 
                k_fu_112 <= k_6_fu_452_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln750_reg_635 = ap_const_lv1_0))) then 
                k_fu_112 <= k_7_fu_532_p2;
            end if; 
        end if;
    end process;

    read_position_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_DecodeHuffman_2_fu_226_read_position_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                read_position <= grp_DecodeHuffman_2_fu_226_read_position_o;
            elsif ((((grp_buf_getv_fu_206_read_position_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((grp_buf_getv_fu_206_read_position_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
                read_position <= grp_buf_getv_fu_206_read_position_o;
            elsif (((grp_DecodeHuffman_1_fu_185_read_position_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                read_position <= grp_DecodeHuffman_1_fu_185_read_position_o;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                HuffBuff_addr_1_reg_661 <= zext_ln753_fu_498_p1(8 - 1 downto 0);
                icmp_ln755_reg_666 <= icmp_ln755_fu_509_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                HuffBuff_addr_reg_579 <= zext_ln728_fu_327_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                HuffBuff_load_reg_594 <= HuffBuff_q0;
                bit_set_mask_load_reg_584 <= bit_set_mask_q0;
                extend_mask_load_reg_589 <= extend_mask_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                icmp_ln720_reg_555 <= icmp_ln720_fu_300_p2;
                s_reg_545 <= grp_DecodeHuffman_1_fu_185_ap_return;
                trunc_ln708_reg_550 <= trunc_ln708_fu_296_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                icmp_ln740_reg_610 <= icmp_ln740_fu_390_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                icmp_ln750_reg_635 <= icmp_ln750_fu_421_p2;
                k_5_reg_639 <= k_5_fu_426_p2;
                    zext_ln708_reg_630(3 downto 0) <= zext_ln708_fu_415_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                n_reg_624 <= grp_DecodeHuffman_2_fu_226_ap_return(7 downto 4);
                s_2_reg_617 <= s_2_fu_401_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state4))) then
                reg_286 <= grp_buf_getv_fu_206_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                    zext_ln755_reg_651(3 downto 0) <= zext_ln755_fu_467_p1(3 downto 0);
            end if;
        end if;
    end process;
    zext_ln708_reg_630(7 downto 4) <= "0000";
    zext_ln755_reg_651(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state12, ap_CS_fsm_state2, icmp_ln720_reg_555, ap_CS_fsm_state3, icmp_ln740_fu_390_p2, icmp_ln740_reg_610, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, icmp_ln750_fu_421_p2, grp_DecodeHuffman_1_fu_185_ap_done, grp_buf_getv_fu_206_ap_done, grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_ap_done, grp_DecodeHuffman_2_fu_226_ap_done, grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_ap_done, grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_ap_done, grp_ChenIDct_1_fu_264_ap_done, grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_ap_done, grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_ap_done, ap_CS_fsm_state7, icmp_ln760_fu_447_p2, icmp_ln751_fu_441_p2, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_DecodeHuffman_1_fu_185_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln720_reg_555 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((grp_buf_getv_fu_206_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln740_fu_390_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((grp_DecodeHuffman_2_fu_226_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((icmp_ln760_fu_447_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln750_fu_421_p2 = ap_const_lv1_1) and (icmp_ln740_reg_610 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and ((icmp_ln740_reg_610 = ap_const_lv1_0) or (((icmp_ln751_fu_441_p2 = ap_const_lv1_1) and (icmp_ln750_fu_421_p2 = ap_const_lv1_0)) or ((icmp_ln760_fu_447_p2 = ap_const_lv1_0) and (icmp_ln750_fu_421_p2 = ap_const_lv1_1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((grp_buf_getv_fu_206_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state15 => 
                if (((grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((grp_ChenIDct_1_fu_264_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (((grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    CurHuffReadBuf_o_assign_proc : process(CurHuffReadBuf_i, ap_CS_fsm_state4, ap_CS_fsm_state12, ap_CS_fsm_state2, ap_CS_fsm_state9, grp_DecodeHuffman_1_fu_185_CurHuffReadBuf_o, grp_DecodeHuffman_1_fu_185_CurHuffReadBuf_o_ap_vld, grp_buf_getv_fu_206_CurHuffReadBuf_o, grp_buf_getv_fu_206_CurHuffReadBuf_o_ap_vld, grp_DecodeHuffman_2_fu_226_CurHuffReadBuf_o, grp_DecodeHuffman_2_fu_226_CurHuffReadBuf_o_ap_vld)
    begin
        if (((grp_DecodeHuffman_2_fu_226_CurHuffReadBuf_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            CurHuffReadBuf_o <= grp_DecodeHuffman_2_fu_226_CurHuffReadBuf_o;
        elsif ((((grp_buf_getv_fu_206_CurHuffReadBuf_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((grp_buf_getv_fu_206_CurHuffReadBuf_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            CurHuffReadBuf_o <= grp_buf_getv_fu_206_CurHuffReadBuf_o;
        elsif (((grp_DecodeHuffman_1_fu_185_CurHuffReadBuf_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            CurHuffReadBuf_o <= grp_DecodeHuffman_1_fu_185_CurHuffReadBuf_o;
        else 
            CurHuffReadBuf_o <= CurHuffReadBuf_i;
        end if; 
    end process;


    CurHuffReadBuf_o_ap_vld_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state12, ap_CS_fsm_state2, ap_CS_fsm_state9, grp_DecodeHuffman_1_fu_185_CurHuffReadBuf_o_ap_vld, grp_buf_getv_fu_206_CurHuffReadBuf_o_ap_vld, grp_DecodeHuffman_2_fu_226_CurHuffReadBuf_o_ap_vld)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            CurHuffReadBuf_o_ap_vld <= grp_DecodeHuffman_2_fu_226_CurHuffReadBuf_o_ap_vld;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            CurHuffReadBuf_o_ap_vld <= grp_buf_getv_fu_206_CurHuffReadBuf_o_ap_vld;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            CurHuffReadBuf_o_ap_vld <= grp_DecodeHuffman_1_fu_185_CurHuffReadBuf_o_ap_vld;
        else 
            CurHuffReadBuf_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    HuffBuff_address0_assign_proc : process(ap_CS_fsm_state3, HuffBuff_addr_reg_579, HuffBuff_addr_1_reg_661, ap_CS_fsm_state13, grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_HuffBuff_address0, grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_HuffBuff_address0, ap_CS_fsm_state7, ap_CS_fsm_state15, zext_ln728_fu_327_p1, zext_ln753_fu_498_p1, ap_CS_fsm_state14, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            HuffBuff_address0 <= HuffBuff_addr_1_reg_661;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            HuffBuff_address0 <= zext_ln753_fu_498_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            HuffBuff_address0 <= HuffBuff_addr_reg_579;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            HuffBuff_address0 <= zext_ln728_fu_327_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            HuffBuff_address0 <= grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_HuffBuff_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            HuffBuff_address0 <= grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_HuffBuff_address0;
        else 
            HuffBuff_address0 <= "XXXXXXXX";
        end if; 
    end process;


    HuffBuff_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state13, grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_HuffBuff_ce0, grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_HuffBuff_ce0, ap_CS_fsm_state7, ap_CS_fsm_state15, ap_CS_fsm_state14, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            HuffBuff_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            HuffBuff_ce0 <= grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_HuffBuff_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            HuffBuff_ce0 <= grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_HuffBuff_ce0;
        else 
            HuffBuff_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    HuffBuff_d0_assign_proc : process(reg_286, ap_CS_fsm_state13, grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_HuffBuff_d0, ap_CS_fsm_state7, ap_CS_fsm_state14, ap_CS_fsm_state5, diff_4_fu_366_p2, add_ln757_fu_525_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            HuffBuff_d0 <= add_ln757_fu_525_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            HuffBuff_d0 <= reg_286;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            HuffBuff_d0 <= diff_4_fu_366_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            HuffBuff_d0 <= grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_HuffBuff_d0;
        else 
            HuffBuff_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    HuffBuff_we0_assign_proc : process(icmp_ln720_reg_555, icmp_ln750_reg_635, ap_CS_fsm_state13, icmp_ln755_reg_666, grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_HuffBuff_we0, ap_CS_fsm_state7, ap_CS_fsm_state14, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or ((icmp_ln755_reg_666 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln750_reg_635 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln720_reg_555 = ap_const_lv1_0)))) then 
            HuffBuff_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            HuffBuff_we0 <= grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_HuffBuff_we0;
        else 
            HuffBuff_we0 <= ap_const_logic_0;
        end if; 
    end process;


    IDCTBuff_address0_assign_proc : process(grp_ChenIDct_1_fu_264_IDCTBuff_address0, grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_IDCTBuff_address0, grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_IDCTBuff_address0, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            IDCTBuff_address0 <= grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_IDCTBuff_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            IDCTBuff_address0 <= grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_IDCTBuff_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            IDCTBuff_address0 <= grp_ChenIDct_1_fu_264_IDCTBuff_address0;
        else 
            IDCTBuff_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    IDCTBuff_address1_assign_proc : process(grp_ChenIDct_1_fu_264_IDCTBuff_address1, grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_IDCTBuff_address1, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            IDCTBuff_address1 <= grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_IDCTBuff_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            IDCTBuff_address1 <= grp_ChenIDct_1_fu_264_IDCTBuff_address1;
        else 
            IDCTBuff_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    IDCTBuff_ce0_assign_proc : process(grp_ChenIDct_1_fu_264_IDCTBuff_ce0, grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_IDCTBuff_ce0, grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_IDCTBuff_ce0, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            IDCTBuff_ce0 <= grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_IDCTBuff_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            IDCTBuff_ce0 <= grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_IDCTBuff_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            IDCTBuff_ce0 <= grp_ChenIDct_1_fu_264_IDCTBuff_ce0;
        else 
            IDCTBuff_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    IDCTBuff_ce1_assign_proc : process(grp_ChenIDct_1_fu_264_IDCTBuff_ce1, grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_IDCTBuff_ce1, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            IDCTBuff_ce1 <= grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_IDCTBuff_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            IDCTBuff_ce1 <= grp_ChenIDct_1_fu_264_IDCTBuff_ce1;
        else 
            IDCTBuff_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    IDCTBuff_d0_assign_proc : process(grp_ChenIDct_1_fu_264_IDCTBuff_d0, grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_IDCTBuff_d0, grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_IDCTBuff_d0, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            IDCTBuff_d0 <= grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_IDCTBuff_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            IDCTBuff_d0 <= grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_IDCTBuff_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            IDCTBuff_d0 <= grp_ChenIDct_1_fu_264_IDCTBuff_d0;
        else 
            IDCTBuff_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    IDCTBuff_d1 <= grp_ChenIDct_1_fu_264_IDCTBuff_d1;

    IDCTBuff_we0_assign_proc : process(grp_ChenIDct_1_fu_264_IDCTBuff_we0, grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_IDCTBuff_we0, grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_IDCTBuff_we0, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            IDCTBuff_we0 <= grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_IDCTBuff_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            IDCTBuff_we0 <= grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_IDCTBuff_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            IDCTBuff_we0 <= grp_ChenIDct_1_fu_264_IDCTBuff_we0;
        else 
            IDCTBuff_we0 <= ap_const_logic_0;
        end if; 
    end process;


    IDCTBuff_we1_assign_proc : process(grp_ChenIDct_1_fu_264_IDCTBuff_we1, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            IDCTBuff_we1 <= grp_ChenIDct_1_fu_264_IDCTBuff_we1;
        else 
            IDCTBuff_we1 <= ap_const_logic_0;
        end if; 
    end process;


    QuantBuff_address0_assign_proc : process(grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_QuantBuff_address0, grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_QuantBuff_address0, grp_ChenIDct_1_fu_264_QuantBuff_address0, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            QuantBuff_address0 <= grp_ChenIDct_1_fu_264_QuantBuff_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            QuantBuff_address0 <= grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_QuantBuff_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            QuantBuff_address0 <= grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_QuantBuff_address0;
        else 
            QuantBuff_address0 <= "XXXXXX";
        end if; 
    end process;


    QuantBuff_address1_assign_proc : process(grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_QuantBuff_address1, grp_ChenIDct_1_fu_264_QuantBuff_address1, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            QuantBuff_address1 <= grp_ChenIDct_1_fu_264_QuantBuff_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            QuantBuff_address1 <= grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_QuantBuff_address1;
        else 
            QuantBuff_address1 <= "XXXXXX";
        end if; 
    end process;


    QuantBuff_ce0_assign_proc : process(grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_QuantBuff_ce0, grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_QuantBuff_ce0, grp_ChenIDct_1_fu_264_QuantBuff_ce0, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            QuantBuff_ce0 <= grp_ChenIDct_1_fu_264_QuantBuff_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            QuantBuff_ce0 <= grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_QuantBuff_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            QuantBuff_ce0 <= grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_QuantBuff_ce0;
        else 
            QuantBuff_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    QuantBuff_ce1_assign_proc : process(grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_QuantBuff_ce1, grp_ChenIDct_1_fu_264_QuantBuff_ce1, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            QuantBuff_ce1 <= grp_ChenIDct_1_fu_264_QuantBuff_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            QuantBuff_ce1 <= grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_QuantBuff_ce1;
        else 
            QuantBuff_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    QuantBuff_d0_assign_proc : process(grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_QuantBuff_d0, grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_QuantBuff_d0, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            QuantBuff_d0 <= grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_QuantBuff_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            QuantBuff_d0 <= grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_QuantBuff_d0;
        else 
            QuantBuff_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    QuantBuff_we0_assign_proc : process(grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_QuantBuff_we0, grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_QuantBuff_we0, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            QuantBuff_we0 <= grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_QuantBuff_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            QuantBuff_we0 <= grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_QuantBuff_we0;
        else 
            QuantBuff_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln753_fu_483_p2 <= std_logic_vector(unsigned(shl_ln7_fu_475_p3) + unsigned(out_buf));
    add_ln757_fu_525_p2 <= std_logic_vector(unsigned(or_ln756_fu_519_p2) + unsigned(ap_const_lv32_1));
    and_ln723_fu_332_p2 <= (reg_286 and bit_set_mask_load_reg_584);
    and_ln755_fu_503_p2 <= (reg_286 and bit_set_mask_q0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_NS_fsm_state20 <= ap_NS_fsm(19);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(grp_buf_getv_fu_206_ap_done)
    begin
        if ((grp_buf_getv_fu_206_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_ap_done)
    begin
        if ((grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state17_blk_assign_proc : process(grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_ap_done)
    begin
        if ((grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state18_blk <= ap_const_logic_0;

    ap_ST_fsm_state19_blk_assign_proc : process(grp_ChenIDct_1_fu_264_ap_done)
    begin
        if ((grp_ChenIDct_1_fu_264_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;

    ap_ST_fsm_state21_blk_assign_proc : process(grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_ap_done)
    begin
        if ((grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state21_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state21_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state22_blk <= ap_const_logic_0;

    ap_ST_fsm_state23_blk_assign_proc : process(grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_ap_done)
    begin
        if ((grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state23_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state23_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_DecodeHuffman_1_fu_185_ap_done)
    begin
        if ((grp_DecodeHuffman_1_fu_185_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_buf_getv_fu_206_ap_done)
    begin
        if ((grp_buf_getv_fu_206_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_ap_done)
    begin
        if ((grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_DecodeHuffman_2_fu_226_ap_done)
    begin
        if ((grp_DecodeHuffman_2_fu_226_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_ap_done, ap_CS_fsm_state23)
    begin
        if ((((grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_ap_done, ap_CS_fsm_state23)
    begin
        if (((grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    bit_set_mask_address0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state9, zext_ln755_fu_467_p1, grp_DecodeHuffman_1_fu_185_bit_set_mask_address0, zext_ln723_fu_311_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            bit_set_mask_address0 <= zext_ln755_fu_467_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            bit_set_mask_address0 <= zext_ln723_fu_311_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            bit_set_mask_address0 <= ap_const_lv5_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            bit_set_mask_address0 <= grp_DecodeHuffman_1_fu_185_bit_set_mask_address0;
        else 
            bit_set_mask_address0 <= "XXXXX";
        end if; 
    end process;


    bit_set_mask_ce0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state9, grp_buf_getv_fu_206_ap_done, grp_DecodeHuffman_1_fu_185_bit_set_mask_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((grp_buf_getv_fu_206_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            bit_set_mask_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            bit_set_mask_ce0 <= ap_const_logic_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            bit_set_mask_ce0 <= grp_DecodeHuffman_1_fu_185_bit_set_mask_ce0;
        else 
            bit_set_mask_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    diff_1_fu_346_p2 <= (sext_ln724_fu_343_p1 or reg_286);
    diff_2_fu_352_p2 <= std_logic_vector(unsigned(diff_1_fu_346_p2) + unsigned(ap_const_lv32_1));
    diff_3_fu_358_p3 <= 
        diff_2_fu_352_p2 when (icmp_ln723_fu_337_p2(0) = '1') else 
        reg_286;
    diff_4_fu_366_p2 <= std_logic_vector(unsigned(HuffBuff_load_reg_594) + unsigned(diff_3_fu_358_p3));

    extend_mask_address0_assign_proc : process(ap_CS_fsm_state3, zext_ln755_reg_651, ap_CS_fsm_state13, zext_ln723_fu_311_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            extend_mask_address0 <= zext_ln755_reg_651(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            extend_mask_address0 <= zext_ln723_fu_311_p1(5 - 1 downto 0);
        else 
            extend_mask_address0 <= "XXXXX";
        end if; 
    end process;


    extend_mask_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            extend_mask_ce0 <= ap_const_logic_1;
        else 
            extend_mask_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_ChenIDct_1_fu_264_ap_start <= grp_ChenIDct_1_fu_264_ap_start_reg;
    grp_DecodeHuffman_1_fu_185_ap_start <= grp_DecodeHuffman_1_fu_185_ap_start_reg;
    grp_DecodeHuffman_1_fu_185_bit_set_mask_address0 <= ap_const_lv5_0;
    grp_DecodeHuffman_1_fu_185_bit_set_mask_ce0 <= ap_const_logic_0;
    grp_DecodeHuffman_2_fu_226_ap_start <= grp_DecodeHuffman_2_fu_226_ap_start_reg;
    grp_buf_getv_fu_206_ap_start <= grp_buf_getv_fu_206_ap_start_reg;

    grp_buf_getv_fu_206_n_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state12, s_reg_545, zext_ln708_reg_630)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_buf_getv_fu_206_n <= zext_ln708_reg_630;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_buf_getv_fu_206_n <= s_reg_545;
        else 
            grp_buf_getv_fu_206_n <= "XXXXXXXX";
        end if; 
    end process;

    grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_ap_start <= grp_decode_block_1_Pipeline_VITIS_LOOP_322_1_fu_247_ap_start_reg;
    grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_ap_start <= grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_ap_start_reg;
    grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_ap_start <= grp_decode_block_1_Pipeline_VITIS_LOOP_347_1_fu_272_ap_start_reg;
    grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_ap_start <= grp_decode_block_1_Pipeline_VITIS_LOOP_360_1_fu_279_ap_start_reg;
    grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_ap_start <= grp_decode_block_1_Pipeline_VITIS_LOOP_736_1_fu_219_ap_start_reg;
    icmp_ln720_fu_300_p2 <= "1" when (grp_DecodeHuffman_1_fu_185_ap_return = ap_const_lv8_0) else "0";
    icmp_ln723_fu_337_p2 <= "1" when (and_ln723_fu_332_p2 = ap_const_lv32_0) else "0";
    icmp_ln740_fu_390_p2 <= "1" when (signed(tmp_5_fu_380_p4) < signed(ap_const_lv26_1)) else "0";
    icmp_ln750_fu_421_p2 <= "1" when (s_2_reg_617 = ap_const_lv4_0) else "0";
    icmp_ln751_fu_441_p2 <= "1" when (signed(tmp_6_fu_431_p4) > signed(ap_const_lv26_0)) else "0";
    icmp_ln755_fu_509_p2 <= "1" when (and_ln755_fu_503_p2 = ap_const_lv32_0) else "0";
    icmp_ln760_fu_447_p2 <= "1" when (n_reg_624 = ap_const_lv4_F) else "0";
    k_5_fu_426_p2 <= std_logic_vector(unsigned(zext_ln708_2_fu_418_p1) + unsigned(k_fu_112));
    k_6_fu_452_p2 <= std_logic_vector(unsigned(k_fu_112) + unsigned(ap_const_lv32_10));
    k_7_fu_532_p2 <= std_logic_vector(unsigned(k_5_reg_639) + unsigned(ap_const_lv32_1));
    lshr_ln3_fu_488_p4 <= add_ln753_fu_483_p2(9 downto 2);
    lshr_ln_fu_317_p4 <= out_buf(9 downto 2);
    or_ln756_fu_519_p2 <= (sext_ln756_fu_515_p1 or reg_286);
    p_jinfo_ac_dhuff_tbl_maxcode_address0 <= grp_DecodeHuffman_2_fu_226_p_jinfo_ac_dhuff_tbl_maxcode_address0;
    p_jinfo_ac_dhuff_tbl_maxcode_ce0 <= grp_DecodeHuffman_2_fu_226_p_jinfo_ac_dhuff_tbl_maxcode_ce0;
    p_jinfo_ac_dhuff_tbl_mincode_address0 <= grp_DecodeHuffman_2_fu_226_p_jinfo_ac_dhuff_tbl_mincode_address0;
    p_jinfo_ac_dhuff_tbl_mincode_ce0 <= grp_DecodeHuffman_2_fu_226_p_jinfo_ac_dhuff_tbl_mincode_ce0;
    p_jinfo_ac_dhuff_tbl_valptr_address0 <= grp_DecodeHuffman_2_fu_226_p_jinfo_ac_dhuff_tbl_valptr_address0;
    p_jinfo_ac_dhuff_tbl_valptr_ce0 <= grp_DecodeHuffman_2_fu_226_p_jinfo_ac_dhuff_tbl_valptr_ce0;

    p_jinfo_ac_xhuff_tbl_huffval_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state9, grp_DecodeHuffman_1_fu_185_p_jinfo_ac_xhuff_tbl_huffval_address0, grp_DecodeHuffman_2_fu_226_p_jinfo_ac_xhuff_tbl_huffval_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            p_jinfo_ac_xhuff_tbl_huffval_address0 <= grp_DecodeHuffman_2_fu_226_p_jinfo_ac_xhuff_tbl_huffval_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_jinfo_ac_xhuff_tbl_huffval_address0 <= grp_DecodeHuffman_1_fu_185_p_jinfo_ac_xhuff_tbl_huffval_address0;
        else 
            p_jinfo_ac_xhuff_tbl_huffval_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    p_jinfo_ac_xhuff_tbl_huffval_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state9, grp_DecodeHuffman_1_fu_185_p_jinfo_ac_xhuff_tbl_huffval_ce0, grp_DecodeHuffman_2_fu_226_p_jinfo_ac_xhuff_tbl_huffval_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            p_jinfo_ac_xhuff_tbl_huffval_ce0 <= grp_DecodeHuffman_2_fu_226_p_jinfo_ac_xhuff_tbl_huffval_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_jinfo_ac_xhuff_tbl_huffval_ce0 <= grp_DecodeHuffman_1_fu_185_p_jinfo_ac_xhuff_tbl_huffval_ce0;
        else 
            p_jinfo_ac_xhuff_tbl_huffval_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_jinfo_dc_dhuff_tbl_maxcode_address0 <= grp_DecodeHuffman_1_fu_185_p_jinfo_dc_dhuff_tbl_maxcode_address0;
    p_jinfo_dc_dhuff_tbl_maxcode_ce0 <= grp_DecodeHuffman_1_fu_185_p_jinfo_dc_dhuff_tbl_maxcode_ce0;
    p_jinfo_dc_dhuff_tbl_mincode_address0 <= grp_DecodeHuffman_1_fu_185_p_jinfo_dc_dhuff_tbl_mincode_address0;
    p_jinfo_dc_dhuff_tbl_mincode_ce0 <= grp_DecodeHuffman_1_fu_185_p_jinfo_dc_dhuff_tbl_mincode_ce0;
    p_jinfo_dc_dhuff_tbl_valptr_address0 <= grp_DecodeHuffman_1_fu_185_p_jinfo_dc_dhuff_tbl_valptr_address0;
    p_jinfo_dc_dhuff_tbl_valptr_ce0 <= grp_DecodeHuffman_1_fu_185_p_jinfo_dc_dhuff_tbl_valptr_ce0;
    p_jinfo_quant_tbl_quantval_address0 <= grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_p_jinfo_quant_tbl_quantval_address0;
    p_jinfo_quant_tbl_quantval_ce0 <= grp_decode_block_1_Pipeline_VITIS_LOOP_334_1_fu_257_p_jinfo_quant_tbl_quantval_ce0;
    s_1_fu_306_p2 <= std_logic_vector(unsigned(trunc_ln708_reg_550) + unsigned(ap_const_lv5_1F));
    s_2_fu_401_p1 <= grp_DecodeHuffman_2_fu_226_ap_return(4 - 1 downto 0);
    s_3_fu_462_p2 <= std_logic_vector(unsigned(s_2_reg_617) + unsigned(ap_const_lv4_F));
        sext_ln724_fu_343_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(extend_mask_load_reg_589),32));

        sext_ln756_fu_515_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(extend_mask_q0),32));

    shl_ln7_fu_475_p3 <= (trunc_ln753_fu_472_p1 & ap_const_lv2_0);
    tmp_5_fu_380_p4 <= k_fu_112(31 downto 6);
    tmp_6_fu_431_p4 <= k_5_fu_426_p2(31 downto 6);
    trunc_ln708_fu_296_p1 <= grp_DecodeHuffman_1_fu_185_ap_return(5 - 1 downto 0);
    trunc_ln753_fu_472_p1 <= k_5_reg_639(8 - 1 downto 0);
    zext_ln708_2_fu_418_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_reg_624),32));
    zext_ln708_fu_415_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(s_2_reg_617),8));
    zext_ln723_fu_311_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(s_1_fu_306_p2),64));
    zext_ln728_fu_327_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_317_p4),64));
    zext_ln753_fu_498_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln3_fu_488_p4),64));
    zext_ln755_fu_467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(s_3_fu_462_p2),64));
end behav;
