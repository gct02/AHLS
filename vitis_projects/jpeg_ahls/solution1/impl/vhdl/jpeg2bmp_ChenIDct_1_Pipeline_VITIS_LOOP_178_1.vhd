-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity jpeg2bmp_ChenIDct_1_Pipeline_VITIS_LOOP_178_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    QuantBuff_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    QuantBuff_ce0 : OUT STD_LOGIC;
    QuantBuff_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    QuantBuff_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    QuantBuff_ce1 : OUT STD_LOGIC;
    QuantBuff_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    y : IN STD_LOGIC_VECTOR (9 downto 0);
    IDCTBuff_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    IDCTBuff_ce0 : OUT STD_LOGIC;
    IDCTBuff_we0 : OUT STD_LOGIC;
    IDCTBuff_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_51_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_51_p_din1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    grp_fu_51_p_dout0 : IN STD_LOGIC_VECTOR (39 downto 0);
    grp_fu_51_p_ce : OUT STD_LOGIC;
    grp_fu_55_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_55_p_din1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    grp_fu_55_p_dout0 : IN STD_LOGIC_VECTOR (40 downto 0);
    grp_fu_55_p_ce : OUT STD_LOGIC;
    grp_fu_59_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_59_p_din1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    grp_fu_59_p_dout0 : IN STD_LOGIC_VECTOR (40 downto 0);
    grp_fu_59_p_ce : OUT STD_LOGIC;
    grp_fu_63_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_63_p_din1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    grp_fu_63_p_dout0 : IN STD_LOGIC_VECTOR (40 downto 0);
    grp_fu_63_p_ce : OUT STD_LOGIC );
end;


architecture behav of jpeg2bmp_ChenIDct_1_Pipeline_VITIS_LOOP_178_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv40_64 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000001100100";
    constant ap_const_lv41_1AA : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000110101010";
    constant ap_const_lv41_1F6 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000111110110";
    constant ap_const_lv41_1D9 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000111011001";
    constant ap_const_lv41_16A : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000101101010";
    constant ap_const_lv41_11C : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000100011100";
    constant ap_const_lv41_C4 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000011000100";
    constant ap_const_lv41_1FFFFFFFEE4 : STD_LOGIC_VECTOR (40 downto 0) := "11111111111111111111111111111111011100100";
    constant ap_const_lv41_1FFFFFFFE0A : STD_LOGIC_VECTOR (40 downto 0) := "11111111111111111111111111111111000001010";
    constant ap_const_lv41_1FFFFFFFE27 : STD_LOGIC_VECTOR (40 downto 0) := "11111111111111111111111111111111000100111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal icmp_ln178_reg_987 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage7 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal reg_277 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal reg_281 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_285 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal reg_289 : STD_LOGIC_VECTOR (40 downto 0);
    signal reg_293 : STD_LOGIC_VECTOR (40 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal reg_297 : STD_LOGIC_VECTOR (40 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_301 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_321 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_12_reg_978 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln178_fu_333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln178_reg_987_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln181_fu_345_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal xor_ln181_reg_991 : STD_LOGIC_VECTOR (3 downto 0);
    signal a0_fu_392_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a0_reg_1016 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln200_fu_425_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln201_1_fu_430_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln201_1_reg_1036 : STD_LOGIC_VECTOR (40 downto 0);
    signal a3_fu_457_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a3_reg_1052 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln200_3_fu_463_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln201_fu_468_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln201_reg_1062 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln230_fu_473_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln230_reg_1068 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln230_reg_1068_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal QuantBuff_load_reg_1077 : STD_LOGIC_VECTOR (31 downto 0);
    signal QuantBuff_load_4_reg_1082 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln200_1_reg_1087 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln203_fu_476_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln200_2_fu_484_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal c0_reg_1102 : STD_LOGIC_VECTOR (31 downto 0);
    signal c1_reg_1108 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln207_fu_541_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln207_reg_1114 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln208_fu_547_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln208_reg_1119 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln211_fu_553_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln211_reg_1124 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln210_fu_558_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln210_reg_1130 : STD_LOGIC_VECTOR (40 downto 0);
    signal c3_reg_1136 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln207_fu_583_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln208_fu_587_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal a0_5_fu_591_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a0_5_reg_1152 : STD_LOGIC_VECTOR (31 downto 0);
    signal a3_5_fu_604_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a3_5_reg_1158 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln226_fu_609_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln226_reg_1164 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln227_fu_615_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln227_reg_1169 : STD_LOGIC_VECTOR (31 downto 0);
    signal a1_1_reg_1174 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln226_fu_621_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln227_fu_625_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal a2_1_reg_1190 : STD_LOGIC_VECTOR (31 downto 0);
    signal b3_2_fu_651_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal b3_2_reg_1196 : STD_LOGIC_VECTOR (31 downto 0);
    signal c2_1_reg_1202 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln245_fu_704_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln245_reg_1208 : STD_LOGIC_VECTOR (31 downto 0);
    signal b2_2_fu_713_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal b2_2_reg_1213 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln232_cast_fu_717_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln232_cast_reg_1219 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln243_fu_756_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln243_reg_1225 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln234_cast_fu_761_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln234_cast_reg_1230 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln241_fu_800_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln241_reg_1235 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln239_fu_837_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln239_reg_1240 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln12_reg_1245 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln13_reg_1250 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal zext_ln182_fu_351_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln186_fu_360_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln190_fu_379_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln194_fu_387_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln184_fu_405_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln192_fu_420_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln178_fu_435_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln188_fu_446_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln231_fu_699_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln233_fu_751_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln235_fu_795_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln237_fu_832_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal zext_ln239_fu_869_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal zext_ln241_fu_902_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal zext_ln243_fu_951_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln245_fu_955_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_88 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal add_ln178_fu_339_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_12 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln231_fu_683_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln233_fu_735_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln235_fu_779_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln237_fu_817_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_240_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_245_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_245_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_250_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_250_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_260_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_260_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_305_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln186_fu_356_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln178_1_fu_370_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln189_fu_373_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln194_fu_384_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln184_cast_fu_398_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln192_fu_416_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal a1_fu_410_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln188_cast_fu_439_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal a2_fu_451_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln200_1_fu_480_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal add_ln200_fu_488_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal add_ln201_fu_503_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal b1_fu_530_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal b0_fu_519_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal b2_fu_524_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal b3_fu_535_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln203_1_fu_563_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal add_ln203_fu_567_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal a2_3_fu_599_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a1_3_fu_595_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln210_fu_629_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal shl_ln_fu_667_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln230_fu_674_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal b0_2_fu_645_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal aptr_fu_678_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln_fu_689_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln232_fu_726_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal b1_2_fu_709_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal aptr_8_fu_730_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln7_fu_741_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln234_fu_770_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal aptr_9_fu_774_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln8_fu_785_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln236_fu_805_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln236_fu_808_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal aptr_10_fu_812_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln9_fu_822_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln238_cast_fu_841_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln238_fu_850_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal aptr_11_fu_854_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln10_fu_859_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln240_cast_fu_874_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln240_fu_883_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal aptr_12_fu_887_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln11_fu_892_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln242_fu_907_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln242_fu_910_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal aptr_13_fu_914_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln244_fu_929_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln244_fu_932_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal aptr_14_fu_936_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter1_stage1 : STD_LOGIC;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to2 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component jpeg2bmp_mul_32s_8ns_40_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component jpeg2bmp_mul_32s_10ns_41_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (40 downto 0) );
    end component;


    component jpeg2bmp_mul_32s_10s_41_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (40 downto 0) );
    end component;


    component jpeg2bmp_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component jpeg2bmp_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage7,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage7)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to0 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    i_fu_88_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln178_fu_333_p2 = ap_const_lv1_0))) then 
                    i_fu_88 <= add_ln178_fu_339_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_88 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                QuantBuff_load_4_reg_1082 <= QuantBuff_q0;
                QuantBuff_load_reg_1077 <= QuantBuff_q1;
                mul_ln200_1_reg_1087 <= grp_fu_63_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                a0_5_reg_1152 <= a0_5_fu_591_p2;
                a3_5_reg_1158 <= a3_5_fu_604_p2;
                add_ln227_reg_1169 <= add_ln227_fu_615_p2;
                i_12_reg_978 <= ap_sig_allocacmp_i_12;
                icmp_ln178_reg_987 <= icmp_ln178_fu_333_p2;
                icmp_ln178_reg_987_pp0_iter1_reg <= icmp_ln178_reg_987;
                sub_ln226_reg_1164 <= sub_ln226_fu_609_p2;
                xor_ln181_reg_991 <= xor_ln181_fu_345_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                    a0_reg_1016(31 downto 2) <= a0_fu_392_p2(31 downto 2);
                a2_1_reg_1190 <= add_ln210_fu_629_p2(40 downto 9);
                b3_2_reg_1196 <= b3_2_fu_651_p2;
                c2_1_reg_1202 <= grp_fu_59_p_dout0(40 downto 9);
                    sext_ln201_1_reg_1036(40 downto 2) <= sext_ln201_1_fu_430_p1(40 downto 2);
                sub_ln245_reg_1208 <= sub_ln245_fu_704_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                a1_1_reg_1174 <= grp_fu_55_p_dout0(40 downto 9);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                    a3_reg_1052(31 downto 2) <= a3_fu_457_p2(31 downto 2);
                b2_2_reg_1213 <= b2_2_fu_713_p2;
                    sext_ln201_reg_1062(40 downto 2) <= sext_ln201_fu_468_p1(40 downto 2);
                sub_ln243_reg_1225 <= sub_ln243_fu_756_p2;
                trunc_ln230_reg_1068 <= trunc_ln230_fu_473_p1;
                trunc_ln230_reg_1068_pp0_iter1_reg <= trunc_ln230_reg_1068;
                    zext_ln232_cast_reg_1219(4 downto 2) <= zext_ln232_cast_fu_717_p4(4 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                    add_ln207_reg_1114(31 downto 2) <= add_ln207_fu_541_p2(31 downto 2);
                    sext_ln210_reg_1130(40 downto 2) <= sext_ln210_fu_558_p1(40 downto 2);
                    sext_ln211_reg_1124(40 downto 2) <= sext_ln211_fu_553_p1(40 downto 2);
                    sub_ln208_reg_1119(31 downto 2) <= sub_ln208_fu_547_p2(31 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                c0_reg_1102 <= add_ln200_fu_488_p2(40 downto 9);
                c1_reg_1108 <= add_ln201_fu_503_p2(40 downto 9);
                sub_ln239_reg_1240 <= sub_ln239_fu_837_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                c3_reg_1136 <= add_ln203_fu_567_p2(40 downto 9);
                lshr_ln12_reg_1245 <= aptr_13_fu_914_p2(9 downto 2);
                lshr_ln13_reg_1250 <= aptr_14_fu_936_p2(9 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then
                reg_277 <= QuantBuff_q1;
                reg_281 <= QuantBuff_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_285 <= grp_fu_51_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_289 <= grp_fu_63_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then
                reg_293 <= grp_fu_55_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then
                reg_297 <= grp_fu_59_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then
                reg_301 <= grp_fu_55_p_dout0(40 downto 9);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then
                reg_321 <= grp_fu_305_p2(40 downto 9);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                sub_ln241_reg_1235 <= sub_ln241_fu_800_p2;
                    zext_ln234_cast_reg_1230(4 downto 2) <= zext_ln234_cast_fu_761_p4(4 downto 2);
            end if;
        end if;
    end process;
    a0_reg_1016(1 downto 0) <= "00";
    sext_ln201_1_reg_1036(1 downto 0) <= "00";
    a3_reg_1052(1 downto 0) <= "00";
    sext_ln201_reg_1062(1 downto 0) <= "00";
    add_ln207_reg_1114(1 downto 0) <= "00";
    sub_ln208_reg_1119(1 downto 0) <= "00";
    sext_ln211_reg_1124(1 downto 0) <= "00";
    sext_ln210_reg_1130(1 downto 0) <= "00";
    zext_ln232_cast_reg_1219(1 downto 0) <= "00";
    zext_ln232_cast_reg_1219(5) <= '1';
    zext_ln234_cast_reg_1230(1 downto 0) <= "00";
    zext_ln234_cast_reg_1230(6 downto 5) <= "10";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage7_subdone, ap_block_pp0_stage1_subdone, ap_condition_exit_pp0_iter1_stage1, ap_idle_pp0_0to0, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to2, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to2 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (((ap_idle_pp0_0to0 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;

    IDCTBuff_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, zext_ln231_fu_699_p1, zext_ln233_fu_751_p1, zext_ln235_fu_795_p1, ap_block_pp0_stage4, zext_ln237_fu_832_p1, ap_block_pp0_stage5, zext_ln239_fu_869_p1, ap_block_pp0_stage6, zext_ln241_fu_902_p1, ap_block_pp0_stage7, zext_ln243_fu_951_p1, zext_ln245_fu_955_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            IDCTBuff_address0 <= zext_ln245_fu_955_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            IDCTBuff_address0 <= zext_ln243_fu_951_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            IDCTBuff_address0 <= zext_ln241_fu_902_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            IDCTBuff_address0 <= zext_ln239_fu_869_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            IDCTBuff_address0 <= zext_ln237_fu_832_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            IDCTBuff_address0 <= zext_ln235_fu_795_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            IDCTBuff_address0 <= zext_ln233_fu_751_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            IDCTBuff_address0 <= zext_ln231_fu_699_p1(9 - 1 downto 0);
        else 
            IDCTBuff_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    IDCTBuff_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            IDCTBuff_ce0 <= ap_const_logic_1;
        else 
            IDCTBuff_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    IDCTBuff_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, sub_ln245_reg_1208, sub_ln243_reg_1225, sub_ln241_reg_1235, sub_ln239_reg_1240, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, add_ln231_fu_683_p2, add_ln233_fu_735_p2, add_ln235_fu_779_p2, add_ln237_fu_817_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            IDCTBuff_d0 <= sub_ln245_reg_1208;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            IDCTBuff_d0 <= sub_ln243_reg_1225;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            IDCTBuff_d0 <= sub_ln241_reg_1235;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            IDCTBuff_d0 <= sub_ln239_reg_1240;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            IDCTBuff_d0 <= add_ln237_fu_817_p2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            IDCTBuff_d0 <= add_ln235_fu_779_p2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            IDCTBuff_d0 <= add_ln233_fu_735_p2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            IDCTBuff_d0 <= add_ln231_fu_683_p2;
        else 
            IDCTBuff_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    IDCTBuff_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            IDCTBuff_we0 <= ap_const_logic_1;
        else 
            IDCTBuff_we0 <= ap_const_logic_0;
        end if; 
    end process;


    QuantBuff_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, zext_ln186_fu_360_p1, ap_block_pp0_stage1, zext_ln194_fu_387_p1, ap_block_pp0_stage2, zext_ln192_fu_420_p1, ap_block_pp0_stage3, zext_ln188_fu_446_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                QuantBuff_address0 <= zext_ln188_fu_446_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                QuantBuff_address0 <= zext_ln192_fu_420_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                QuantBuff_address0 <= zext_ln194_fu_387_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                QuantBuff_address0 <= zext_ln186_fu_360_p1(6 - 1 downto 0);
            else 
                QuantBuff_address0 <= "XXXXXX";
            end if;
        else 
            QuantBuff_address0 <= "XXXXXX";
        end if; 
    end process;


    QuantBuff_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, zext_ln182_fu_351_p1, ap_block_pp0_stage0, zext_ln190_fu_379_p1, ap_block_pp0_stage1, zext_ln184_fu_405_p1, ap_block_pp0_stage2, zext_ln178_fu_435_p1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                QuantBuff_address1 <= zext_ln178_fu_435_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                QuantBuff_address1 <= zext_ln184_fu_405_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                QuantBuff_address1 <= zext_ln190_fu_379_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                QuantBuff_address1 <= zext_ln182_fu_351_p1(6 - 1 downto 0);
            else 
                QuantBuff_address1 <= "XXXXXX";
            end if;
        else 
            QuantBuff_address1 <= "XXXXXX";
        end if; 
    end process;


    QuantBuff_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            QuantBuff_ce0 <= ap_const_logic_1;
        else 
            QuantBuff_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    QuantBuff_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            QuantBuff_ce1 <= ap_const_logic_1;
        else 
            QuantBuff_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    a0_5_fu_591_p2 <= std_logic_vector(unsigned(c0_reg_1102) + unsigned(c1_reg_1108));
    a0_fu_392_p2 <= std_logic_vector(shift_left(unsigned(reg_277),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    a1_3_fu_595_p2 <= std_logic_vector(unsigned(c0_reg_1102) - unsigned(c1_reg_1108));
    a1_fu_410_p2 <= std_logic_vector(shift_left(unsigned(reg_281),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    a2_3_fu_599_p2 <= std_logic_vector(unsigned(c3_reg_1136) - unsigned(reg_321));
    a2_fu_451_p2 <= std_logic_vector(shift_left(unsigned(reg_277),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    a3_5_fu_604_p2 <= std_logic_vector(unsigned(c3_reg_1136) + unsigned(reg_321));
    a3_fu_457_p2 <= std_logic_vector(shift_left(unsigned(reg_281),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    add_ln178_fu_339_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_12) + unsigned(ap_const_lv4_1));
    add_ln189_fu_373_p2 <= std_logic_vector(unsigned(zext_ln178_1_fu_370_p1) + unsigned(ap_const_lv6_28));
    add_ln200_fu_488_p2 <= std_logic_vector(unsigned(mul_ln200_1_reg_1087) + unsigned(sext_ln200_1_fu_480_p1));
    add_ln201_fu_503_p2 <= std_logic_vector(unsigned(reg_293) + unsigned(reg_289));
    add_ln203_fu_567_p2 <= std_logic_vector(signed(sext_ln203_1_fu_563_p1) + signed(reg_293));
    add_ln207_fu_541_p2 <= std_logic_vector(unsigned(b1_fu_530_p2) + unsigned(b0_fu_519_p2));
    add_ln210_fu_629_p2 <= std_logic_vector(unsigned(reg_289) + unsigned(reg_297));
    add_ln227_fu_615_p2 <= std_logic_vector(unsigned(a2_3_fu_599_p2) + unsigned(a1_3_fu_595_p2));
    add_ln231_fu_683_p2 <= std_logic_vector(unsigned(a3_5_reg_1158) + unsigned(b0_2_fu_645_p2));
    add_ln233_fu_735_p2 <= std_logic_vector(unsigned(c2_1_reg_1202) + unsigned(b1_2_fu_709_p2));
    add_ln235_fu_779_p2 <= std_logic_vector(unsigned(reg_301) + unsigned(b2_2_reg_1213));
    add_ln237_fu_817_p2 <= std_logic_vector(unsigned(a0_5_reg_1152) + unsigned(b3_2_reg_1196));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage7_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone, icmp_ln178_reg_987)
    begin
        if (((icmp_ln178_reg_987 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_condition_exit_pp0_iter0_stage7 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter1_stage1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, icmp_ln178_reg_987_pp0_iter1_reg, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln178_reg_987_pp0_iter1_reg = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter1_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to2_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to2 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage7;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_12_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_fu_88, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_12 <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_i_12 <= i_fu_88;
        end if; 
    end process;

    aptr_10_fu_812_p2 <= std_logic_vector(unsigned(zext_ln236_fu_808_p1) + unsigned(y));
    aptr_11_fu_854_p2 <= std_logic_vector(unsigned(zext_ln238_fu_850_p1) + unsigned(y));
    aptr_12_fu_887_p2 <= std_logic_vector(unsigned(zext_ln240_fu_883_p1) + unsigned(y));
    aptr_13_fu_914_p2 <= std_logic_vector(unsigned(zext_ln242_fu_910_p1) + unsigned(y));
    aptr_14_fu_936_p2 <= std_logic_vector(unsigned(zext_ln244_fu_932_p1) + unsigned(y));
    aptr_8_fu_730_p2 <= std_logic_vector(unsigned(zext_ln232_fu_726_p1) + unsigned(y));
    aptr_9_fu_774_p2 <= std_logic_vector(unsigned(zext_ln234_fu_770_p1) + unsigned(y));
    aptr_fu_678_p2 <= std_logic_vector(unsigned(zext_ln230_fu_674_p1) + unsigned(y));
    b0_2_fu_645_p2 <= std_logic_vector(unsigned(reg_321) + unsigned(reg_301));
    b0_fu_519_p2 <= std_logic_vector(shift_left(unsigned(QuantBuff_load_reg_1077),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    b1_2_fu_709_p2 <= std_logic_vector(unsigned(a2_1_reg_1190) + unsigned(a1_1_reg_1174));
    b1_fu_530_p2 <= std_logic_vector(shift_left(unsigned(QuantBuff_load_4_reg_1082),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    b2_2_fu_713_p2 <= std_logic_vector(unsigned(a1_1_reg_1174) - unsigned(a2_1_reg_1190));
    b2_fu_524_p2 <= std_logic_vector(shift_left(unsigned(reg_277),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    b3_2_fu_651_p2 <= std_logic_vector(unsigned(reg_301) - unsigned(reg_321));
    b3_fu_535_p2 <= std_logic_vector(shift_left(unsigned(reg_281),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    grp_fu_240_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, sext_ln200_fu_425_p1, sext_ln200_2_fu_484_p1, ap_block_pp0_stage2, ap_block_pp0_stage5)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_240_p0 <= sext_ln200_2_fu_484_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_240_p0 <= sext_ln200_fu_425_p1(32 - 1 downto 0);
            else 
                grp_fu_240_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_240_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_245_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, sext_ln201_1_reg_1036, sext_ln201_fu_468_p1, sext_ln203_fu_476_p1, sext_ln211_fu_553_p1, sext_ln207_fu_583_p1, sext_ln208_fu_587_p1, sext_ln226_fu_621_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_245_p0 <= sext_ln226_fu_621_p1(32 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_245_p0 <= sext_ln208_fu_587_p1(32 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_245_p0 <= sext_ln207_fu_583_p1(32 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_245_p0 <= sext_ln211_fu_553_p1(32 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_245_p0 <= sext_ln203_fu_476_p1(32 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_245_p0 <= sext_ln201_1_reg_1036(32 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_245_p0 <= sext_ln201_fu_468_p1(32 - 1 downto 0);
        else 
            grp_fu_245_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_245_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_245_p1 <= ap_const_lv41_16A(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_245_p1 <= ap_const_lv41_1D9(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_245_p1 <= ap_const_lv41_1F6(10 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_245_p1 <= ap_const_lv41_1AA(10 - 1 downto 0);
        else 
            grp_fu_245_p1 <= "XXXXXXXXXX";
        end if; 
    end process;


    grp_fu_250_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, sext_ln201_reg_1062, sext_ln211_reg_1124, sext_ln210_fu_558_p1, sext_ln227_fu_625_p1, ap_block_pp0_stage1, ap_block_pp0_stage4, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_250_p0 <= sext_ln227_fu_625_p1(32 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_250_p0 <= sext_ln211_reg_1124(32 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_250_p0 <= sext_ln210_fu_558_p1(32 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_250_p0 <= sext_ln201_reg_1062(32 - 1 downto 0);
        else 
            grp_fu_250_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_250_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1, ap_block_pp0_stage4, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_250_p1 <= ap_const_lv41_16A(10 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            grp_fu_250_p1 <= ap_const_lv41_C4(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_250_p1 <= ap_const_lv41_11C(10 - 1 downto 0);
        else 
            grp_fu_250_p1 <= "XXXXXXXXXX";
        end if; 
    end process;


    grp_fu_260_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, sext_ln201_1_fu_430_p1, sext_ln200_3_fu_463_p1, sext_ln210_reg_1130, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_260_p0 <= sext_ln210_reg_1130(32 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_260_p0 <= sext_ln200_3_fu_463_p1(32 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_260_p0 <= sext_ln201_1_fu_430_p1(32 - 1 downto 0);
        else 
            grp_fu_260_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_260_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_260_p1 <= ap_const_lv41_1FFFFFFFE27(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_260_p1 <= ap_const_lv41_1FFFFFFFE0A(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_260_p1 <= ap_const_lv41_1FFFFFFFEE4(10 - 1 downto 0);
        else 
            grp_fu_260_p1 <= "XXXXXXXXXX";
        end if; 
    end process;

    grp_fu_305_p2 <= std_logic_vector(unsigned(reg_297) + unsigned(reg_293));
    grp_fu_51_p_ce <= ap_const_logic_1;
    grp_fu_51_p_din0 <= grp_fu_240_p0;
    grp_fu_51_p_din1 <= ap_const_lv40_64(8 - 1 downto 0);
    grp_fu_55_p_ce <= ap_const_logic_1;
    grp_fu_55_p_din0 <= grp_fu_245_p0;
    grp_fu_55_p_din1 <= grp_fu_245_p1;
    grp_fu_59_p_ce <= ap_const_logic_1;
    grp_fu_59_p_din0 <= grp_fu_250_p0;
    grp_fu_59_p_din1 <= grp_fu_250_p1;
    grp_fu_63_p_ce <= ap_const_logic_1;
    grp_fu_63_p_din0 <= grp_fu_260_p0;
    grp_fu_63_p_din1 <= grp_fu_260_p1;
    icmp_ln178_fu_333_p2 <= "1" when (ap_sig_allocacmp_i_12 = ap_const_lv4_8) else "0";
    lshr_ln10_fu_859_p4 <= aptr_11_fu_854_p2(9 downto 2);
    lshr_ln11_fu_892_p4 <= aptr_12_fu_887_p2(9 downto 2);
    lshr_ln7_fu_741_p4 <= aptr_8_fu_730_p2(9 downto 2);
    lshr_ln8_fu_785_p4 <= aptr_9_fu_774_p2(9 downto 2);
    lshr_ln9_fu_822_p4 <= aptr_10_fu_812_p2(9 downto 2);
    lshr_ln_fu_689_p4 <= aptr_fu_678_p2(9 downto 2);
        sext_ln186_fu_356_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xor_ln181_fu_345_p2),5));

        sext_ln192_fu_416_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(zext_ln184_cast_fu_398_p3),6));

        sext_ln194_fu_384_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xor_ln181_reg_991),6));

        sext_ln200_1_fu_480_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_285),41));

        sext_ln200_2_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(a3_reg_1052),40));

        sext_ln200_3_fu_463_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(a3_fu_457_p2),41));

        sext_ln200_fu_425_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(a0_fu_392_p2),40));

        sext_ln201_1_fu_430_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(a1_fu_410_p2),41));

        sext_ln201_fu_468_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(a2_fu_451_p2),41));

        sext_ln203_1_fu_563_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_285),41));

        sext_ln203_fu_476_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(a0_reg_1016),41));

        sext_ln207_fu_583_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln207_reg_1114),41));

        sext_ln208_fu_587_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln208_reg_1119),41));

        sext_ln210_fu_558_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b3_fu_535_p2),41));

        sext_ln211_fu_553_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b2_fu_524_p2),41));

        sext_ln226_fu_621_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln226_reg_1164),41));

        sext_ln227_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln227_reg_1169),41));

        sext_ln236_fu_805_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(zext_ln232_cast_reg_1219),7));

        sext_ln242_fu_907_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(zext_ln234_cast_reg_1230),8));

        sext_ln244_fu_929_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(zext_ln232_cast_reg_1219),8));

    shl_ln_fu_667_p3 <= (trunc_ln230_reg_1068 & ap_const_lv2_0);
    sub_ln208_fu_547_p2 <= std_logic_vector(unsigned(b0_fu_519_p2) - unsigned(b1_fu_530_p2));
    sub_ln226_fu_609_p2 <= std_logic_vector(unsigned(a2_3_fu_599_p2) - unsigned(a1_3_fu_595_p2));
    sub_ln239_fu_837_p2 <= std_logic_vector(unsigned(b3_2_reg_1196) - unsigned(a0_5_reg_1152));
    sub_ln241_fu_800_p2 <= std_logic_vector(unsigned(b2_2_reg_1213) - unsigned(reg_301));
    sub_ln243_fu_756_p2 <= std_logic_vector(unsigned(b1_2_fu_709_p2) - unsigned(c2_1_reg_1202));
    sub_ln245_fu_704_p2 <= std_logic_vector(unsigned(b0_2_fu_645_p2) - unsigned(a3_5_reg_1158));
    trunc_ln230_fu_473_p1 <= i_12_reg_978(3 - 1 downto 0);
    xor_ln181_fu_345_p2 <= (ap_sig_allocacmp_i_12 xor ap_const_lv4_8);
    zext_ln178_1_fu_370_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_12_reg_978),6));
    zext_ln178_fu_435_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_12_reg_978),64));
    zext_ln182_fu_351_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln181_fu_345_p2),64));
    zext_ln184_cast_fu_398_p3 <= (ap_const_lv1_1 & i_12_reg_978);
    zext_ln184_fu_405_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln184_cast_fu_398_p3),64));
    zext_ln186_fu_360_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln186_fu_356_p1),64));
    zext_ln188_cast_fu_439_p3 <= (ap_const_lv2_2 & i_12_reg_978);
    zext_ln188_fu_446_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln188_cast_fu_439_p3),64));
    zext_ln190_fu_379_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln189_fu_373_p2),64));
    zext_ln192_fu_420_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln192_fu_416_p1),64));
    zext_ln194_fu_387_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln194_fu_384_p1),64));
    zext_ln230_fu_674_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_667_p3),10));
    zext_ln231_fu_699_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_689_p4),64));
    zext_ln232_cast_fu_717_p4 <= ((ap_const_lv1_1 & trunc_ln230_reg_1068) & ap_const_lv2_0);
    zext_ln232_fu_726_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln232_cast_fu_717_p4),10));
    zext_ln233_fu_751_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln7_fu_741_p4),64));
    zext_ln234_cast_fu_761_p4 <= ((ap_const_lv2_2 & trunc_ln230_reg_1068_pp0_iter1_reg) & ap_const_lv2_0);
    zext_ln234_fu_770_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln234_cast_fu_761_p4),10));
    zext_ln235_fu_795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln8_fu_785_p4),64));
    zext_ln236_fu_808_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln236_fu_805_p1),10));
    zext_ln237_fu_832_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln9_fu_822_p4),64));
    zext_ln238_cast_fu_841_p4 <= ((ap_const_lv3_4 & trunc_ln230_reg_1068_pp0_iter1_reg) & ap_const_lv2_0);
    zext_ln238_fu_850_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln238_cast_fu_841_p4),10));
    zext_ln239_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln10_fu_859_p4),64));
    zext_ln240_cast_fu_874_p4 <= ((ap_const_lv3_5 & trunc_ln230_reg_1068_pp0_iter1_reg) & ap_const_lv2_0);
    zext_ln240_fu_883_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln240_cast_fu_874_p4),10));
    zext_ln241_fu_902_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln11_fu_892_p4),64));
    zext_ln242_fu_910_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln242_fu_907_p1),10));
    zext_ln243_fu_951_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln12_reg_1245),64));
    zext_ln244_fu_932_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln244_fu_929_p1),10));
    zext_ln245_fu_955_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln13_reg_1250),64));
end behav;
