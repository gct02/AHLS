// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module jpeg2bmp_buf_getv (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        n,
        read_position_i,
        read_position_o,
        read_position_o_ap_vld,
        CurHuffReadBuf_i,
        CurHuffReadBuf_o,
        CurHuffReadBuf_o_ap_vld,
        current_read_byte_i,
        current_read_byte_o,
        current_read_byte_o_ap_vld,
        ap_return
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] n;
input  [31:0] read_position_i;
output  [31:0] read_position_o;
output   read_position_o_ap_vld;
input  [7:0] CurHuffReadBuf_i;
output  [7:0] CurHuffReadBuf_o;
output   CurHuffReadBuf_o_ap_vld;
input  [31:0] current_read_byte_i;
output  [31:0] current_read_byte_o;
output   current_read_byte_o_ap_vld;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] read_position_o;
reg read_position_o_ap_vld;
reg[7:0] CurHuffReadBuf_o;
reg CurHuffReadBuf_o_ap_vld;
reg[31:0] current_read_byte_o;
reg current_read_byte_o_ap_vld;
reg[31:0] ap_return;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [4:0] lmask_address0;
reg    lmask_ce0;
wire   [31:0] lmask_q0;
reg   [31:0] read_position_load_reg_312;
wire  signed [8:0] add_ln592_fu_114_p2;
reg  signed [8:0] add_ln592_reg_317;
wire    ap_CS_fsm_state2;
wire   [31:0] p_fu_124_p2;
wire   [30:0] trunc_ln590_fu_129_p1;
reg   [30:0] trunc_ln590_reg_328;
wire   [0:0] icmp_ln594_fu_134_p2;
reg   [0:0] icmp_ln594_reg_333;
wire   [0:0] grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_return;
reg   [0:0] targetBlock_reg_340;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_start;
wire    grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_done;
wire    grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_idle;
wire    grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_ready;
wire   [7:0] grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_temp_out;
wire    grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_temp_out_ap_vld;
wire   [31:0] grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_p_03_out;
wire    grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_p_03_out_ap_vld;
wire   [31:0] grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_load_out;
wire    grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_load_out_ap_vld;
wire   [7:0] grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_select_ln555_out;
wire    grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_select_ln555_out_ap_vld;
wire   [31:0] grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_o;
wire    grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_o_ap_vld;
wire   [31:0] grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_read_position;
wire    grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_read_position_ap_vld;
reg   [31:0] p_0_lcssa_reg_71;
wire   [31:0] and_ln601_fu_227_p2;
reg   [31:0] ap_phi_mux_retval_0_phi_fu_83_p6;
wire    ap_CS_fsm_state5;
wire   [31:0] and_ln618_fu_268_p2;
wire   [0:0] icmp_ln609_fu_234_p2;
wire   [31:0] and_ln612_fu_281_p2;
reg    grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_start_reg;
reg   [7:0] temp_loc_fu_40;
reg   [31:0] p_03_loc_fu_36;
reg   [7:0] select_ln555_loc_fu_28;
wire   [63:0] zext_ln601_fu_178_p1;
wire   [63:0] zext_ln612_fu_192_p1;
wire   [31:0] xor_ln617_fu_250_p2;
wire   [31:0] sub_ln600_fu_163_p2;
wire   [31:0] zext_ln555_fu_197_p1;
wire   [8:0] zext_ln589_fu_110_p1;
wire  signed [31:0] sext_ln589_fu_120_p1;
wire   [4:0] trunc_ln601_fu_175_p1;
wire   [4:0] trunc_ln612_fu_189_p1;
wire   [31:0] sub_ln599_fu_210_p2;
wire   [31:0] lshr_ln599_fu_215_p2;
wire   [31:0] rv_fu_200_p2;
wire   [31:0] rv_1_fu_221_p2;
wire   [31:0] p_10_fu_244_p2;
wire   [31:0] lshr_ln618_fu_262_p2;
reg   [31:0] ap_return_preg;
reg   [4:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_condition_124;
reg    ap_condition_130;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_start_reg = 1'b0;
#0 ap_return_preg = 32'd0;
end

jpeg2bmp_buf_getv_lmask_ROM_AUTO_1R #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
lmask_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lmask_address0),
    .ce0(lmask_ce0),
    .q0(lmask_q0)
);

jpeg2bmp_buf_getv_Pipeline_VITIS_LOOP_594_1 grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_start),
    .ap_done(grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_done),
    .ap_idle(grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_idle),
    .ap_ready(grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_ready),
    .read_position_load(read_position_load_reg_312),
    .CurHuffReadBuf_load(CurHuffReadBuf_i),
    .p(trunc_ln590_reg_328),
    .temp_out(grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_temp_out),
    .temp_out_ap_vld(grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_temp_out_ap_vld),
    .p_03_out(grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_p_03_out),
    .p_03_out_ap_vld(grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_p_03_out_ap_vld),
    .current_read_byte_load_out(grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_load_out),
    .current_read_byte_load_out_ap_vld(grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_load_out_ap_vld),
    .select_ln555_out(grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_select_ln555_out),
    .select_ln555_out_ap_vld(grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_select_ln555_out_ap_vld),
    .current_read_byte_i(current_read_byte_i),
    .current_read_byte_o(grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_o),
    .current_read_byte_o_ap_vld(grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_o_ap_vld),
    .read_position(grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_read_position),
    .read_position_ap_vld(grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_read_position_ap_vld),
    .ap_return(grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_return_preg <= ap_phi_mux_retval_0_phi_fu_83_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln594_fu_134_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_start_reg <= 1'b1;
        end else if ((grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_ready == 1'b1)) begin
            grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln594_fu_134_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_0_lcssa_reg_71 <= p_fu_124_p2;
    end else if (((targetBlock_reg_340 == 1'd1) & (icmp_ln594_reg_333 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        p_0_lcssa_reg_71 <= p_03_loc_fu_36;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln592_reg_317 <= add_ln592_fu_114_p2;
        icmp_ln594_reg_333 <= icmp_ln594_fu_134_p2;
        trunc_ln590_reg_328 <= trunc_ln590_fu_129_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_p_03_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        p_03_loc_fu_36 <= grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_p_03_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        read_position_load_reg_312 <= read_position_i;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_select_ln555_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        select_ln555_loc_fu_28 <= grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_select_ln555_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        targetBlock_reg_340 <= grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_temp_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        temp_loc_fu_40 <= grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_temp_out;
    end
end

always @ (*) begin
    if (((icmp_ln594_reg_333 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        if ((targetBlock_reg_340 == 1'd1)) begin
            CurHuffReadBuf_o = temp_loc_fu_40;
        end else if ((targetBlock_reg_340 == 1'd0)) begin
            CurHuffReadBuf_o = select_ln555_loc_fu_28;
        end else begin
            CurHuffReadBuf_o = CurHuffReadBuf_i;
        end
    end else begin
        CurHuffReadBuf_o = CurHuffReadBuf_i;
    end
end

always @ (*) begin
    if ((((targetBlock_reg_340 == 1'd0) & (icmp_ln594_reg_333 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((targetBlock_reg_340 == 1'd1) & (icmp_ln594_reg_333 == 1'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
        CurHuffReadBuf_o_ap_vld = 1'b1;
    end else begin
        CurHuffReadBuf_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        if ((1'b1 == ap_condition_130)) begin
            ap_phi_mux_retval_0_phi_fu_83_p6 = and_ln612_fu_281_p2;
        end else if ((1'b1 == ap_condition_124)) begin
            ap_phi_mux_retval_0_phi_fu_83_p6 = and_ln618_fu_268_p2;
        end else if (((targetBlock_reg_340 == 1'd0) & (icmp_ln594_reg_333 == 1'd1))) begin
            ap_phi_mux_retval_0_phi_fu_83_p6 = and_ln601_fu_227_p2;
        end else begin
            ap_phi_mux_retval_0_phi_fu_83_p6 = 'bx;
        end
    end else begin
        ap_phi_mux_retval_0_phi_fu_83_p6 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_return = ap_phi_mux_retval_0_phi_fu_83_p6;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((targetBlock_reg_340 == 1'd0) & (icmp_ln594_reg_333 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        current_read_byte_o = zext_ln555_fu_197_p1;
    end else if (((grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        current_read_byte_o = grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_o;
    end else begin
        current_read_byte_o = current_read_byte_i;
    end
end

always @ (*) begin
    if (((targetBlock_reg_340 == 1'd0) & (icmp_ln594_reg_333 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        current_read_byte_o_ap_vld = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        current_read_byte_o_ap_vld = grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_o_ap_vld;
    end else begin
        current_read_byte_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        if (((targetBlock_reg_340 == 1'd1) | (icmp_ln594_reg_333 == 1'd0))) begin
            lmask_address0 = zext_ln612_fu_192_p1;
        end else if (((targetBlock_reg_340 == 1'd0) & (icmp_ln594_reg_333 == 1'd1))) begin
            lmask_address0 = zext_ln601_fu_178_p1;
        end else begin
            lmask_address0 = 'bx;
        end
    end else begin
        lmask_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state4) & ((targetBlock_reg_340 == 1'd1) | (icmp_ln594_reg_333 == 1'd0))) | ((targetBlock_reg_340 == 1'd0) & (icmp_ln594_reg_333 == 1'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
        lmask_ce0 = 1'b1;
    end else begin
        lmask_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((targetBlock_reg_340 == 1'd0) & (icmp_ln594_reg_333 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        read_position_o = sub_ln600_fu_163_p2;
    end else if (((1'b1 == ap_CS_fsm_state5) & (((icmp_ln594_reg_333 == 1'd0) & (icmp_ln609_fu_234_p2 == 1'd1)) | ((targetBlock_reg_340 == 1'd1) & (icmp_ln609_fu_234_p2 == 1'd1))))) begin
        read_position_o = 32'd4294967295;
    end else if (((1'b1 == ap_CS_fsm_state5) & (((icmp_ln594_reg_333 == 1'd0) & (icmp_ln609_fu_234_p2 == 1'd0)) | ((targetBlock_reg_340 == 1'd1) & (icmp_ln609_fu_234_p2 == 1'd0))))) begin
        read_position_o = xor_ln617_fu_250_p2;
    end else if (((grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_read_position_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        read_position_o = grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_read_position;
    end else begin
        read_position_o = read_position_i;
    end
end

always @ (*) begin
    if ((((targetBlock_reg_340 == 1'd0) & (icmp_ln594_reg_333 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == ap_CS_fsm_state5) & (((icmp_ln594_reg_333 == 1'd0) & (icmp_ln609_fu_234_p2 == 1'd1)) | ((targetBlock_reg_340 == 1'd1) & (icmp_ln609_fu_234_p2 == 1'd1)))) | ((1'b1 == ap_CS_fsm_state5) & (((icmp_ln594_reg_333 == 1'd0) & (icmp_ln609_fu_234_p2 == 1'd0)) | ((targetBlock_reg_340 == 1'd1) & (icmp_ln609_fu_234_p2 == 1'd0)))))) begin
        read_position_o_ap_vld = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        read_position_o_ap_vld = grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_read_position_ap_vld;
    end else begin
        read_position_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln594_fu_134_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln592_fu_114_p2 = ($signed(zext_ln589_fu_110_p1) + $signed(9'd511));

assign and_ln601_fu_227_p2 = (rv_1_fu_221_p2 & lmask_q0);

assign and_ln612_fu_281_p2 = (lmask_q0 & current_read_byte_i);

assign and_ln618_fu_268_p2 = (lshr_ln618_fu_262_p2 & lmask_q0);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_condition_124 = (((icmp_ln594_reg_333 == 1'd0) & (icmp_ln609_fu_234_p2 == 1'd0)) | ((targetBlock_reg_340 == 1'd1) & (icmp_ln609_fu_234_p2 == 1'd0)));
end

always @ (*) begin
    ap_condition_130 = (((icmp_ln594_reg_333 == 1'd0) & (icmp_ln609_fu_234_p2 == 1'd1)) | ((targetBlock_reg_340 == 1'd1) & (icmp_ln609_fu_234_p2 == 1'd1)));
end

assign grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_start = grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_ap_start_reg;

assign icmp_ln594_fu_134_p2 = (($signed(p_fu_124_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln609_fu_234_p2 = ((p_0_lcssa_reg_71 == 32'd0) ? 1'b1 : 1'b0);

assign lshr_ln599_fu_215_p2 = zext_ln555_fu_197_p1 >> sub_ln599_fu_210_p2;

assign lshr_ln618_fu_262_p2 = current_read_byte_i >> p_10_fu_244_p2;

assign p_10_fu_244_p2 = (32'd0 - p_0_lcssa_reg_71);

assign p_fu_124_p2 = ($signed(sext_ln589_fu_120_p1) - $signed(read_position_i));

assign rv_1_fu_221_p2 = (rv_fu_200_p2 | lshr_ln599_fu_215_p2);

assign rv_fu_200_p2 = grp_buf_getv_Pipeline_VITIS_LOOP_594_1_fu_91_current_read_byte_load_out << p_03_loc_fu_36;

assign sext_ln589_fu_120_p1 = add_ln592_fu_114_p2;

assign sub_ln599_fu_210_p2 = (32'd8 - p_03_loc_fu_36);

assign sub_ln600_fu_163_p2 = (32'd7 - p_03_loc_fu_36);

assign trunc_ln590_fu_129_p1 = p_fu_124_p2[30:0];

assign trunc_ln601_fu_175_p1 = add_ln592_reg_317[4:0];

assign trunc_ln612_fu_189_p1 = add_ln592_reg_317[4:0];

assign xor_ln617_fu_250_p2 = (p_0_lcssa_reg_71 ^ 32'd4294967295);

assign zext_ln555_fu_197_p1 = temp_loc_fu_40;

assign zext_ln589_fu_110_p1 = n;

assign zext_ln601_fu_178_p1 = trunc_ln601_fu_175_p1;

assign zext_ln612_fu_192_p1 = trunc_ln612_fu_189_p1;

endmodule //jpeg2bmp_buf_getv
