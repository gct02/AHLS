// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module jpeg2bmp_ChenIDct_1_Pipeline_VITIS_LOOP_178_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        QuantBuff_address0,
        QuantBuff_ce0,
        QuantBuff_q0,
        QuantBuff_address1,
        QuantBuff_ce1,
        QuantBuff_q1,
        y,
        IDCTBuff_address0,
        IDCTBuff_ce0,
        IDCTBuff_we0,
        IDCTBuff_d0,
        grp_fu_51_p_din0,
        grp_fu_51_p_din1,
        grp_fu_51_p_dout0,
        grp_fu_51_p_ce,
        grp_fu_55_p_din0,
        grp_fu_55_p_din1,
        grp_fu_55_p_dout0,
        grp_fu_55_p_ce,
        grp_fu_59_p_din0,
        grp_fu_59_p_din1,
        grp_fu_59_p_dout0,
        grp_fu_59_p_ce,
        grp_fu_63_p_din0,
        grp_fu_63_p_din1,
        grp_fu_63_p_dout0,
        grp_fu_63_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] QuantBuff_address0;
output   QuantBuff_ce0;
input  [31:0] QuantBuff_q0;
output  [5:0] QuantBuff_address1;
output   QuantBuff_ce1;
input  [31:0] QuantBuff_q1;
input  [9:0] y;
output  [8:0] IDCTBuff_address0;
output   IDCTBuff_ce0;
output   IDCTBuff_we0;
output  [31:0] IDCTBuff_d0;
output  [31:0] grp_fu_51_p_din0;
output  [7:0] grp_fu_51_p_din1;
input  [39:0] grp_fu_51_p_dout0;
output   grp_fu_51_p_ce;
output  [31:0] grp_fu_55_p_din0;
output  [9:0] grp_fu_55_p_din1;
input  [40:0] grp_fu_55_p_dout0;
output   grp_fu_55_p_ce;
output  [31:0] grp_fu_59_p_din0;
output  [9:0] grp_fu_59_p_din1;
input  [40:0] grp_fu_59_p_dout0;
output   grp_fu_59_p_ce;
output  [31:0] grp_fu_63_p_din0;
output  [9:0] grp_fu_63_p_din1;
input  [40:0] grp_fu_63_p_dout0;
output   grp_fu_63_p_ce;

reg ap_idle;
reg[5:0] QuantBuff_address0;
reg QuantBuff_ce0;
reg[5:0] QuantBuff_address1;
reg QuantBuff_ce1;
reg[8:0] IDCTBuff_address0;
reg IDCTBuff_ce0;
reg IDCTBuff_we0;
reg[31:0] IDCTBuff_d0;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7_subdone;
reg   [0:0] icmp_ln178_reg_987;
reg    ap_condition_exit_pp0_iter0_stage7;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_277;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_11001;
reg   [31:0] reg_281;
reg   [39:0] reg_285;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6_11001;
reg   [40:0] reg_289;
reg   [40:0] reg_293;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_11001;
wire    ap_block_pp0_stage7_11001;
reg   [40:0] reg_297;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] reg_301;
reg   [31:0] reg_321;
reg   [3:0] i_12_reg_978;
wire   [0:0] icmp_ln178_fu_333_p2;
reg   [0:0] icmp_ln178_reg_987_pp0_iter1_reg;
wire  signed [3:0] xor_ln181_fu_345_p2;
reg  signed [3:0] xor_ln181_reg_991;
wire  signed [31:0] a0_fu_392_p2;
reg  signed [31:0] a0_reg_1016;
wire  signed [39:0] sext_ln200_fu_425_p1;
wire  signed [40:0] sext_ln201_1_fu_430_p1;
reg  signed [40:0] sext_ln201_1_reg_1036;
wire  signed [31:0] a3_fu_457_p2;
reg  signed [31:0] a3_reg_1052;
wire  signed [40:0] sext_ln200_3_fu_463_p1;
wire  signed [40:0] sext_ln201_fu_468_p1;
reg  signed [40:0] sext_ln201_reg_1062;
wire   [2:0] trunc_ln230_fu_473_p1;
reg   [2:0] trunc_ln230_reg_1068;
reg   [2:0] trunc_ln230_reg_1068_pp0_iter1_reg;
reg   [31:0] QuantBuff_load_reg_1077;
reg   [31:0] QuantBuff_load_4_reg_1082;
reg   [40:0] mul_ln200_1_reg_1087;
wire  signed [40:0] sext_ln203_fu_476_p1;
wire  signed [39:0] sext_ln200_2_fu_484_p1;
reg   [31:0] c0_reg_1102;
reg   [31:0] c1_reg_1108;
wire   [31:0] add_ln207_fu_541_p2;
reg   [31:0] add_ln207_reg_1114;
wire   [31:0] sub_ln208_fu_547_p2;
reg   [31:0] sub_ln208_reg_1119;
wire  signed [40:0] sext_ln211_fu_553_p1;
reg  signed [40:0] sext_ln211_reg_1124;
wire  signed [40:0] sext_ln210_fu_558_p1;
reg  signed [40:0] sext_ln210_reg_1130;
reg   [31:0] c3_reg_1136;
wire  signed [40:0] sext_ln207_fu_583_p1;
wire  signed [40:0] sext_ln208_fu_587_p1;
wire   [31:0] a0_5_fu_591_p2;
reg   [31:0] a0_5_reg_1152;
wire   [31:0] a3_5_fu_604_p2;
reg   [31:0] a3_5_reg_1158;
wire   [31:0] sub_ln226_fu_609_p2;
reg   [31:0] sub_ln226_reg_1164;
wire   [31:0] add_ln227_fu_615_p2;
reg   [31:0] add_ln227_reg_1169;
reg   [31:0] a1_1_reg_1174;
wire  signed [40:0] sext_ln226_fu_621_p1;
wire  signed [40:0] sext_ln227_fu_625_p1;
reg   [31:0] a2_1_reg_1190;
wire   [31:0] b3_2_fu_651_p2;
reg   [31:0] b3_2_reg_1196;
reg   [31:0] c2_1_reg_1202;
wire   [31:0] sub_ln245_fu_704_p2;
reg   [31:0] sub_ln245_reg_1208;
wire   [31:0] b2_2_fu_713_p2;
reg   [31:0] b2_2_reg_1213;
wire  signed [5:0] zext_ln232_cast_fu_717_p4;
reg  signed [5:0] zext_ln232_cast_reg_1219;
wire   [31:0] sub_ln243_fu_756_p2;
reg   [31:0] sub_ln243_reg_1225;
wire  signed [6:0] zext_ln234_cast_fu_761_p4;
reg  signed [6:0] zext_ln234_cast_reg_1230;
wire   [31:0] sub_ln241_fu_800_p2;
reg   [31:0] sub_ln241_reg_1235;
wire   [31:0] sub_ln239_fu_837_p2;
reg   [31:0] sub_ln239_reg_1240;
reg   [7:0] lshr_ln12_reg_1245;
reg   [7:0] lshr_ln13_reg_1250;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
wire   [63:0] zext_ln182_fu_351_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln186_fu_360_p1;
wire   [63:0] zext_ln190_fu_379_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln194_fu_387_p1;
wire   [63:0] zext_ln184_fu_405_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln192_fu_420_p1;
wire   [63:0] zext_ln178_fu_435_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln188_fu_446_p1;
wire   [63:0] zext_ln231_fu_699_p1;
wire   [63:0] zext_ln233_fu_751_p1;
wire   [63:0] zext_ln235_fu_795_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln237_fu_832_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln239_fu_869_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln241_fu_902_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln243_fu_951_p1;
wire   [63:0] zext_ln245_fu_955_p1;
reg   [3:0] i_fu_88;
wire   [3:0] add_ln178_fu_339_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i_12;
wire   [31:0] add_ln231_fu_683_p2;
wire   [31:0] add_ln233_fu_735_p2;
wire   [31:0] add_ln235_fu_779_p2;
wire   [31:0] add_ln237_fu_817_p2;
reg  signed [31:0] grp_fu_240_p0;
reg  signed [31:0] grp_fu_245_p0;
reg   [9:0] grp_fu_245_p1;
reg  signed [31:0] grp_fu_250_p0;
reg   [9:0] grp_fu_250_p1;
reg  signed [31:0] grp_fu_260_p0;
reg  signed [9:0] grp_fu_260_p1;
wire   [40:0] grp_fu_305_p2;
wire  signed [4:0] sext_ln186_fu_356_p1;
wire   [5:0] zext_ln178_1_fu_370_p1;
wire   [5:0] add_ln189_fu_373_p2;
wire  signed [5:0] sext_ln194_fu_384_p1;
wire  signed [4:0] zext_ln184_cast_fu_398_p3;
wire  signed [5:0] sext_ln192_fu_416_p1;
wire   [31:0] a1_fu_410_p2;
wire   [5:0] zext_ln188_cast_fu_439_p3;
wire   [31:0] a2_fu_451_p2;
wire  signed [40:0] sext_ln200_1_fu_480_p1;
wire   [40:0] add_ln200_fu_488_p2;
wire   [40:0] add_ln201_fu_503_p2;
wire   [31:0] b1_fu_530_p2;
wire   [31:0] b0_fu_519_p2;
wire   [31:0] b2_fu_524_p2;
wire   [31:0] b3_fu_535_p2;
wire  signed [40:0] sext_ln203_1_fu_563_p1;
wire   [40:0] add_ln203_fu_567_p2;
wire   [31:0] a2_3_fu_599_p2;
wire   [31:0] a1_3_fu_595_p2;
wire   [40:0] add_ln210_fu_629_p2;
wire   [4:0] shl_ln_fu_667_p3;
wire   [9:0] zext_ln230_fu_674_p1;
wire   [31:0] b0_2_fu_645_p2;
wire   [9:0] aptr_fu_678_p2;
wire   [7:0] lshr_ln_fu_689_p4;
wire   [9:0] zext_ln232_fu_726_p1;
wire   [31:0] b1_2_fu_709_p2;
wire   [9:0] aptr_8_fu_730_p2;
wire   [7:0] lshr_ln7_fu_741_p4;
wire   [9:0] zext_ln234_fu_770_p1;
wire   [9:0] aptr_9_fu_774_p2;
wire   [7:0] lshr_ln8_fu_785_p4;
wire  signed [6:0] sext_ln236_fu_805_p1;
wire   [9:0] zext_ln236_fu_808_p1;
wire   [9:0] aptr_10_fu_812_p2;
wire   [7:0] lshr_ln9_fu_822_p4;
wire   [7:0] zext_ln238_cast_fu_841_p4;
wire   [9:0] zext_ln238_fu_850_p1;
wire   [9:0] aptr_11_fu_854_p2;
wire   [7:0] lshr_ln10_fu_859_p4;
wire   [7:0] zext_ln240_cast_fu_874_p4;
wire   [9:0] zext_ln240_fu_883_p1;
wire   [9:0] aptr_12_fu_887_p2;
wire   [7:0] lshr_ln11_fu_892_p4;
wire  signed [7:0] sext_ln242_fu_907_p1;
wire   [9:0] zext_ln242_fu_910_p1;
wire   [9:0] aptr_13_fu_914_p2;
wire  signed [7:0] sext_ln244_fu_929_p1;
wire   [9:0] zext_ln244_fu_932_p1;
wire   [9:0] aptr_14_fu_936_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter1_stage1;
reg    ap_idle_pp0_0to0;
reg   [7:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to2;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 i_fu_88 = 4'd0;
#0 ap_done_reg = 1'b0;
end

jpeg2bmp_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage7),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage7)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln178_fu_333_p2 == 1'd0))) begin
            i_fu_88 <= add_ln178_fu_339_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_88 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        QuantBuff_load_4_reg_1082 <= QuantBuff_q0;
        QuantBuff_load_reg_1077 <= QuantBuff_q1;
        mul_ln200_1_reg_1087 <= grp_fu_63_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a0_5_reg_1152 <= a0_5_fu_591_p2;
        a3_5_reg_1158 <= a3_5_fu_604_p2;
        add_ln227_reg_1169 <= add_ln227_fu_615_p2;
        i_12_reg_978 <= ap_sig_allocacmp_i_12;
        icmp_ln178_reg_987 <= icmp_ln178_fu_333_p2;
        icmp_ln178_reg_987_pp0_iter1_reg <= icmp_ln178_reg_987;
        sub_ln226_reg_1164 <= sub_ln226_fu_609_p2;
        xor_ln181_reg_991 <= xor_ln181_fu_345_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        a0_reg_1016[31 : 2] <= a0_fu_392_p2[31 : 2];
        a2_1_reg_1190 <= {{add_ln210_fu_629_p2[40:9]}};
        b3_2_reg_1196 <= b3_2_fu_651_p2;
        c2_1_reg_1202 <= {{grp_fu_59_p_dout0[40:9]}};
        sext_ln201_1_reg_1036[40 : 2] <= sext_ln201_1_fu_430_p1[40 : 2];
        sub_ln245_reg_1208 <= sub_ln245_fu_704_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        a1_1_reg_1174 <= {{grp_fu_55_p_dout0[40:9]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        a3_reg_1052[31 : 2] <= a3_fu_457_p2[31 : 2];
        b2_2_reg_1213 <= b2_2_fu_713_p2;
        sext_ln201_reg_1062[40 : 2] <= sext_ln201_fu_468_p1[40 : 2];
        sub_ln243_reg_1225 <= sub_ln243_fu_756_p2;
        trunc_ln230_reg_1068 <= trunc_ln230_fu_473_p1;
        trunc_ln230_reg_1068_pp0_iter1_reg <= trunc_ln230_reg_1068;
        zext_ln232_cast_reg_1219[4 : 2] <= zext_ln232_cast_fu_717_p4[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        add_ln207_reg_1114[31 : 2] <= add_ln207_fu_541_p2[31 : 2];
        sext_ln210_reg_1130[40 : 2] <= sext_ln210_fu_558_p1[40 : 2];
        sext_ln211_reg_1124[40 : 2] <= sext_ln211_fu_553_p1[40 : 2];
        sub_ln208_reg_1119[31 : 2] <= sub_ln208_fu_547_p2[31 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        c0_reg_1102 <= {{add_ln200_fu_488_p2[40:9]}};
        c1_reg_1108 <= {{add_ln201_fu_503_p2[40:9]}};
        sub_ln239_reg_1240 <= sub_ln239_fu_837_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        c3_reg_1136 <= {{add_ln203_fu_567_p2[40:9]}};
        lshr_ln12_reg_1245 <= {{aptr_13_fu_914_p2[9:2]}};
        lshr_ln13_reg_1250 <= {{aptr_14_fu_936_p2[9:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_277 <= QuantBuff_q1;
        reg_281 <= QuantBuff_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_285 <= grp_fu_51_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_289 <= grp_fu_63_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_293 <= grp_fu_55_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_297 <= grp_fu_59_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_301 <= {{grp_fu_55_p_dout0[40:9]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_321 <= {{grp_fu_305_p2[40:9]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        sub_ln241_reg_1235 <= sub_ln241_fu_800_p2;
        zext_ln234_cast_reg_1230[4 : 2] <= zext_ln234_cast_fu_761_p4[4 : 2];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        IDCTBuff_address0 = zext_ln245_fu_955_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        IDCTBuff_address0 = zext_ln243_fu_951_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        IDCTBuff_address0 = zext_ln241_fu_902_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        IDCTBuff_address0 = zext_ln239_fu_869_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        IDCTBuff_address0 = zext_ln237_fu_832_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        IDCTBuff_address0 = zext_ln235_fu_795_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        IDCTBuff_address0 = zext_ln233_fu_751_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        IDCTBuff_address0 = zext_ln231_fu_699_p1;
    end else begin
        IDCTBuff_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        IDCTBuff_ce0 = 1'b1;
    end else begin
        IDCTBuff_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        IDCTBuff_d0 = sub_ln245_reg_1208;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        IDCTBuff_d0 = sub_ln243_reg_1225;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        IDCTBuff_d0 = sub_ln241_reg_1235;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        IDCTBuff_d0 = sub_ln239_reg_1240;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        IDCTBuff_d0 = add_ln237_fu_817_p2;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        IDCTBuff_d0 = add_ln235_fu_779_p2;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        IDCTBuff_d0 = add_ln233_fu_735_p2;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        IDCTBuff_d0 = add_ln231_fu_683_p2;
    end else begin
        IDCTBuff_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        IDCTBuff_we0 = 1'b1;
    end else begin
        IDCTBuff_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            QuantBuff_address0 = zext_ln188_fu_446_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            QuantBuff_address0 = zext_ln192_fu_420_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            QuantBuff_address0 = zext_ln194_fu_387_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            QuantBuff_address0 = zext_ln186_fu_360_p1;
        end else begin
            QuantBuff_address0 = 'bx;
        end
    end else begin
        QuantBuff_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            QuantBuff_address1 = zext_ln178_fu_435_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            QuantBuff_address1 = zext_ln184_fu_405_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            QuantBuff_address1 = zext_ln190_fu_379_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            QuantBuff_address1 = zext_ln182_fu_351_p1;
        end else begin
            QuantBuff_address1 = 'bx;
        end
    end else begin
        QuantBuff_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        QuantBuff_ce0 = 1'b1;
    end else begin
        QuantBuff_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        QuantBuff_ce1 = 1'b1;
    end else begin
        QuantBuff_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln178_reg_987 == 1'd1) & (1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln178_reg_987_pp0_iter1_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter1_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_12 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_12 = i_fu_88;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            grp_fu_240_p0 = sext_ln200_2_fu_484_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_240_p0 = sext_ln200_fu_425_p1;
        end else begin
            grp_fu_240_p0 = 'bx;
        end
    end else begin
        grp_fu_240_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_245_p0 = sext_ln226_fu_621_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_245_p0 = sext_ln208_fu_587_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_245_p0 = sext_ln207_fu_583_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_245_p0 = sext_ln211_fu_553_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_245_p0 = sext_ln203_fu_476_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_245_p0 = sext_ln201_1_reg_1036;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_245_p0 = sext_ln201_fu_468_p1;
    end else begin
        grp_fu_245_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_245_p1 = 41'd362;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_245_p1 = 41'd473;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_245_p1 = 41'd502;
    end else if ((((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_245_p1 = 41'd426;
    end else begin
        grp_fu_245_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_250_p0 = sext_ln227_fu_625_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_250_p0 = sext_ln211_reg_1124;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_250_p0 = sext_ln210_fu_558_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_250_p0 = sext_ln201_reg_1062;
    end else begin
        grp_fu_250_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_250_p1 = 41'd362;
    end else if ((((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_250_p1 = 41'd196;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_250_p1 = 41'd284;
    end else begin
        grp_fu_250_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_260_p0 = sext_ln210_reg_1130;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_260_p0 = sext_ln200_3_fu_463_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_260_p0 = sext_ln201_1_fu_430_p1;
    end else begin
        grp_fu_260_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_260_p1 = 41'd2199023255079;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_260_p1 = 41'd2199023255050;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_260_p1 = 41'd2199023255268;
    end else begin
        grp_fu_260_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a0_5_fu_591_p2 = (c0_reg_1102 + c1_reg_1108);

assign a0_fu_392_p2 = reg_277 << 32'd2;

assign a1_3_fu_595_p2 = (c0_reg_1102 - c1_reg_1108);

assign a1_fu_410_p2 = reg_281 << 32'd2;

assign a2_3_fu_599_p2 = (c3_reg_1136 - reg_321);

assign a2_fu_451_p2 = reg_277 << 32'd2;

assign a3_5_fu_604_p2 = (c3_reg_1136 + reg_321);

assign a3_fu_457_p2 = reg_281 << 32'd2;

assign add_ln178_fu_339_p2 = (ap_sig_allocacmp_i_12 + 4'd1);

assign add_ln189_fu_373_p2 = ($signed(zext_ln178_1_fu_370_p1) + $signed(6'd40));

assign add_ln200_fu_488_p2 = ($signed(mul_ln200_1_reg_1087) + $signed(sext_ln200_1_fu_480_p1));

assign add_ln201_fu_503_p2 = (reg_293 + reg_289);

assign add_ln203_fu_567_p2 = ($signed(sext_ln203_1_fu_563_p1) + $signed(reg_293));

assign add_ln207_fu_541_p2 = (b1_fu_530_p2 + b0_fu_519_p2);

assign add_ln210_fu_629_p2 = (reg_289 + reg_297);

assign add_ln227_fu_615_p2 = (a2_3_fu_599_p2 + a1_3_fu_595_p2);

assign add_ln231_fu_683_p2 = (a3_5_reg_1158 + b0_2_fu_645_p2);

assign add_ln233_fu_735_p2 = (c2_1_reg_1202 + b1_2_fu_709_p2);

assign add_ln235_fu_779_p2 = (reg_301 + b2_2_reg_1213);

assign add_ln237_fu_817_p2 = (a0_5_reg_1152 + b3_2_reg_1196);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage7;

assign aptr_10_fu_812_p2 = (zext_ln236_fu_808_p1 + y);

assign aptr_11_fu_854_p2 = (zext_ln238_fu_850_p1 + y);

assign aptr_12_fu_887_p2 = (zext_ln240_fu_883_p1 + y);

assign aptr_13_fu_914_p2 = (zext_ln242_fu_910_p1 + y);

assign aptr_14_fu_936_p2 = (zext_ln244_fu_932_p1 + y);

assign aptr_8_fu_730_p2 = (zext_ln232_fu_726_p1 + y);

assign aptr_9_fu_774_p2 = (zext_ln234_fu_770_p1 + y);

assign aptr_fu_678_p2 = (zext_ln230_fu_674_p1 + y);

assign b0_2_fu_645_p2 = (reg_321 + reg_301);

assign b0_fu_519_p2 = QuantBuff_load_reg_1077 << 32'd2;

assign b1_2_fu_709_p2 = (a2_1_reg_1190 + a1_1_reg_1174);

assign b1_fu_530_p2 = QuantBuff_load_4_reg_1082 << 32'd2;

assign b2_2_fu_713_p2 = (a1_1_reg_1174 - a2_1_reg_1190);

assign b2_fu_524_p2 = reg_277 << 32'd2;

assign b3_2_fu_651_p2 = (reg_301 - reg_321);

assign b3_fu_535_p2 = reg_281 << 32'd2;

assign grp_fu_305_p2 = (reg_297 + reg_293);

assign grp_fu_51_p_ce = 1'b1;

assign grp_fu_51_p_din0 = grp_fu_240_p0;

assign grp_fu_51_p_din1 = 40'd100;

assign grp_fu_55_p_ce = 1'b1;

assign grp_fu_55_p_din0 = grp_fu_245_p0;

assign grp_fu_55_p_din1 = grp_fu_245_p1;

assign grp_fu_59_p_ce = 1'b1;

assign grp_fu_59_p_din0 = grp_fu_250_p0;

assign grp_fu_59_p_din1 = grp_fu_250_p1;

assign grp_fu_63_p_ce = 1'b1;

assign grp_fu_63_p_din0 = grp_fu_260_p0;

assign grp_fu_63_p_din1 = grp_fu_260_p1;

assign icmp_ln178_fu_333_p2 = ((ap_sig_allocacmp_i_12 == 4'd8) ? 1'b1 : 1'b0);

assign lshr_ln10_fu_859_p4 = {{aptr_11_fu_854_p2[9:2]}};

assign lshr_ln11_fu_892_p4 = {{aptr_12_fu_887_p2[9:2]}};

assign lshr_ln7_fu_741_p4 = {{aptr_8_fu_730_p2[9:2]}};

assign lshr_ln8_fu_785_p4 = {{aptr_9_fu_774_p2[9:2]}};

assign lshr_ln9_fu_822_p4 = {{aptr_10_fu_812_p2[9:2]}};

assign lshr_ln_fu_689_p4 = {{aptr_fu_678_p2[9:2]}};

assign sext_ln186_fu_356_p1 = xor_ln181_fu_345_p2;

assign sext_ln192_fu_416_p1 = zext_ln184_cast_fu_398_p3;

assign sext_ln194_fu_384_p1 = xor_ln181_reg_991;

assign sext_ln200_1_fu_480_p1 = $signed(reg_285);

assign sext_ln200_2_fu_484_p1 = a3_reg_1052;

assign sext_ln200_3_fu_463_p1 = a3_fu_457_p2;

assign sext_ln200_fu_425_p1 = a0_fu_392_p2;

assign sext_ln201_1_fu_430_p1 = $signed(a1_fu_410_p2);

assign sext_ln201_fu_468_p1 = $signed(a2_fu_451_p2);

assign sext_ln203_1_fu_563_p1 = $signed(reg_285);

assign sext_ln203_fu_476_p1 = a0_reg_1016;

assign sext_ln207_fu_583_p1 = $signed(add_ln207_reg_1114);

assign sext_ln208_fu_587_p1 = $signed(sub_ln208_reg_1119);

assign sext_ln210_fu_558_p1 = $signed(b3_fu_535_p2);

assign sext_ln211_fu_553_p1 = $signed(b2_fu_524_p2);

assign sext_ln226_fu_621_p1 = $signed(sub_ln226_reg_1164);

assign sext_ln227_fu_625_p1 = $signed(add_ln227_reg_1169);

assign sext_ln236_fu_805_p1 = zext_ln232_cast_reg_1219;

assign sext_ln242_fu_907_p1 = zext_ln234_cast_reg_1230;

assign sext_ln244_fu_929_p1 = zext_ln232_cast_reg_1219;

assign shl_ln_fu_667_p3 = {{trunc_ln230_reg_1068}, {2'd0}};

assign sub_ln208_fu_547_p2 = (b0_fu_519_p2 - b1_fu_530_p2);

assign sub_ln226_fu_609_p2 = (a2_3_fu_599_p2 - a1_3_fu_595_p2);

assign sub_ln239_fu_837_p2 = (b3_2_reg_1196 - a0_5_reg_1152);

assign sub_ln241_fu_800_p2 = (b2_2_reg_1213 - reg_301);

assign sub_ln243_fu_756_p2 = (b1_2_fu_709_p2 - c2_1_reg_1202);

assign sub_ln245_fu_704_p2 = (b0_2_fu_645_p2 - a3_5_reg_1158);

assign trunc_ln230_fu_473_p1 = i_12_reg_978[2:0];

assign xor_ln181_fu_345_p2 = (ap_sig_allocacmp_i_12 ^ 4'd8);

assign zext_ln178_1_fu_370_p1 = i_12_reg_978;

assign zext_ln178_fu_435_p1 = i_12_reg_978;

assign zext_ln182_fu_351_p1 = $unsigned(xor_ln181_fu_345_p2);

assign zext_ln184_cast_fu_398_p3 = {{1'd1}, {i_12_reg_978}};

assign zext_ln184_fu_405_p1 = $unsigned(zext_ln184_cast_fu_398_p3);

assign zext_ln186_fu_360_p1 = $unsigned(sext_ln186_fu_356_p1);

assign zext_ln188_cast_fu_439_p3 = {{2'd2}, {i_12_reg_978}};

assign zext_ln188_fu_446_p1 = zext_ln188_cast_fu_439_p3;

assign zext_ln190_fu_379_p1 = add_ln189_fu_373_p2;

assign zext_ln192_fu_420_p1 = $unsigned(sext_ln192_fu_416_p1);

assign zext_ln194_fu_387_p1 = $unsigned(sext_ln194_fu_384_p1);

assign zext_ln230_fu_674_p1 = shl_ln_fu_667_p3;

assign zext_ln231_fu_699_p1 = lshr_ln_fu_689_p4;

assign zext_ln232_cast_fu_717_p4 = {{{{1'd1}, {trunc_ln230_reg_1068}}}, {2'd0}};

assign zext_ln232_fu_726_p1 = $unsigned(zext_ln232_cast_fu_717_p4);

assign zext_ln233_fu_751_p1 = lshr_ln7_fu_741_p4;

assign zext_ln234_cast_fu_761_p4 = {{{{2'd2}, {trunc_ln230_reg_1068_pp0_iter1_reg}}}, {2'd0}};

assign zext_ln234_fu_770_p1 = $unsigned(zext_ln234_cast_fu_761_p4);

assign zext_ln235_fu_795_p1 = lshr_ln8_fu_785_p4;

assign zext_ln236_fu_808_p1 = $unsigned(sext_ln236_fu_805_p1);

assign zext_ln237_fu_832_p1 = lshr_ln9_fu_822_p4;

assign zext_ln238_cast_fu_841_p4 = {{{{3'd4}, {trunc_ln230_reg_1068_pp0_iter1_reg}}}, {2'd0}};

assign zext_ln238_fu_850_p1 = zext_ln238_cast_fu_841_p4;

assign zext_ln239_fu_869_p1 = lshr_ln10_fu_859_p4;

assign zext_ln240_cast_fu_874_p4 = {{{{3'd5}, {trunc_ln230_reg_1068_pp0_iter1_reg}}}, {2'd0}};

assign zext_ln240_fu_883_p1 = zext_ln240_cast_fu_874_p4;

assign zext_ln241_fu_902_p1 = lshr_ln11_fu_892_p4;

assign zext_ln242_fu_910_p1 = $unsigned(sext_ln242_fu_907_p1);

assign zext_ln243_fu_951_p1 = lshr_ln12_reg_1245;

assign zext_ln244_fu_932_p1 = $unsigned(sext_ln244_fu_929_p1);

assign zext_ln245_fu_955_p1 = lshr_ln13_reg_1250;

always @ (posedge ap_clk) begin
    a0_reg_1016[1:0] <= 2'b00;
    sext_ln201_1_reg_1036[1:0] <= 2'b00;
    a3_reg_1052[1:0] <= 2'b00;
    sext_ln201_reg_1062[1:0] <= 2'b00;
    add_ln207_reg_1114[1:0] <= 2'b00;
    sub_ln208_reg_1119[1:0] <= 2'b00;
    sext_ln211_reg_1124[1:0] <= 2'b00;
    sext_ln210_reg_1130[1:0] <= 2'b00;
    zext_ln232_cast_reg_1219[1:0] <= 2'b00;
    zext_ln232_cast_reg_1219[5] <= 1'b1;
    zext_ln234_cast_reg_1230[1:0] <= 2'b00;
    zext_ln234_cast_reg_1230[6:5] <= 2'b10;
end

endmodule //jpeg2bmp_ChenIDct_1_Pipeline_VITIS_LOOP_178_1
