// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matrixadd_matrixadd,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu35p-fsvh2104-1-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.981429,HLS_SYN_LAT=49191,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2235,HLS_SYN_LUT=2913,HLS_VERSION=2023_2}" *)

module matrixadd (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        array_0_address0,
        array_0_ce0,
        array_0_q0,
        array_1_address0,
        array_1_ce0,
        array_1_q0,
        array_2_address0,
        array_2_ce0,
        array_2_q0,
        array_3_address0,
        array_3_ce0,
        array_3_we0,
        array_3_d0,
        array_3_q0,
        array_3_address1,
        array_3_ce1,
        array_3_we1,
        array_3_d1,
        array_3_q1,
        array_4_address0,
        array_4_ce0,
        array_4_q0,
        array_5_address0,
        array_5_ce0,
        array_5_we0,
        array_5_d0,
        array_5_q0,
        array_5_address1,
        array_5_ce1,
        array_5_we1,
        array_5_d1,
        array_5_q1,
        array_6_address0,
        array_6_ce0,
        array_6_q0,
        array_7_address0,
        array_7_ce0,
        array_7_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 37'd1;
parameter    ap_ST_fsm_state2 = 37'd2;
parameter    ap_ST_fsm_state3 = 37'd4;
parameter    ap_ST_fsm_state4 = 37'd8;
parameter    ap_ST_fsm_state5 = 37'd16;
parameter    ap_ST_fsm_state6 = 37'd32;
parameter    ap_ST_fsm_state7 = 37'd64;
parameter    ap_ST_fsm_state8 = 37'd128;
parameter    ap_ST_fsm_state9 = 37'd256;
parameter    ap_ST_fsm_state10 = 37'd512;
parameter    ap_ST_fsm_state11 = 37'd1024;
parameter    ap_ST_fsm_state12 = 37'd2048;
parameter    ap_ST_fsm_state13 = 37'd4096;
parameter    ap_ST_fsm_state14 = 37'd8192;
parameter    ap_ST_fsm_state15 = 37'd16384;
parameter    ap_ST_fsm_state16 = 37'd32768;
parameter    ap_ST_fsm_state17 = 37'd65536;
parameter    ap_ST_fsm_state18 = 37'd131072;
parameter    ap_ST_fsm_state19 = 37'd262144;
parameter    ap_ST_fsm_state20 = 37'd524288;
parameter    ap_ST_fsm_state21 = 37'd1048576;
parameter    ap_ST_fsm_state22 = 37'd2097152;
parameter    ap_ST_fsm_state23 = 37'd4194304;
parameter    ap_ST_fsm_state24 = 37'd8388608;
parameter    ap_ST_fsm_state25 = 37'd16777216;
parameter    ap_ST_fsm_state26 = 37'd33554432;
parameter    ap_ST_fsm_state27 = 37'd67108864;
parameter    ap_ST_fsm_state28 = 37'd134217728;
parameter    ap_ST_fsm_state29 = 37'd268435456;
parameter    ap_ST_fsm_state30 = 37'd536870912;
parameter    ap_ST_fsm_state31 = 37'd1073741824;
parameter    ap_ST_fsm_state32 = 37'd2147483648;
parameter    ap_ST_fsm_state33 = 37'd4294967296;
parameter    ap_ST_fsm_state34 = 37'd8589934592;
parameter    ap_ST_fsm_state35 = 37'd17179869184;
parameter    ap_ST_fsm_state36 = 37'd34359738368;
parameter    ap_ST_fsm_state37 = 37'd68719476736;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] array_0_address0;
output   array_0_ce0;
input  [31:0] array_0_q0;
output  [12:0] array_1_address0;
output   array_1_ce0;
input  [31:0] array_1_q0;
output  [12:0] array_2_address0;
output   array_2_ce0;
input  [31:0] array_2_q0;
output  [12:0] array_3_address0;
output   array_3_ce0;
output   array_3_we0;
output  [31:0] array_3_d0;
input  [31:0] array_3_q0;
output  [12:0] array_3_address1;
output   array_3_ce1;
output   array_3_we1;
output  [31:0] array_3_d1;
input  [31:0] array_3_q1;
output  [12:0] array_4_address0;
output   array_4_ce0;
input  [31:0] array_4_q0;
output  [12:0] array_5_address0;
output   array_5_ce0;
output   array_5_we0;
output  [31:0] array_5_d0;
input  [31:0] array_5_q0;
output  [12:0] array_5_address1;
output   array_5_ce1;
output   array_5_we1;
output  [31:0] array_5_d1;
input  [31:0] array_5_q1;
output  [12:0] array_6_address0;
output   array_6_ce0;
input  [31:0] array_6_q0;
output  [12:0] array_7_address0;
output   array_7_ce0;
input  [31:0] array_7_q0;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [36:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] grp_fu_114_p2;
reg   [31:0] reg_119;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state32;
wire    grp_matrixadd_Pipeline_loop_0_fu_72_ap_start;
wire    grp_matrixadd_Pipeline_loop_0_fu_72_ap_done;
wire    grp_matrixadd_Pipeline_loop_0_fu_72_ap_idle;
wire    grp_matrixadd_Pipeline_loop_0_fu_72_ap_ready;
wire   [12:0] grp_matrixadd_Pipeline_loop_0_fu_72_array_0_address0;
wire    grp_matrixadd_Pipeline_loop_0_fu_72_array_0_ce0;
wire   [31:0] grp_matrixadd_Pipeline_loop_0_fu_72_s_0_out;
wire    grp_matrixadd_Pipeline_loop_0_fu_72_s_0_out_ap_vld;
wire   [31:0] grp_matrixadd_Pipeline_loop_0_fu_72_grp_fu_114_p_din0;
wire   [31:0] grp_matrixadd_Pipeline_loop_0_fu_72_grp_fu_114_p_din1;
wire   [1:0] grp_matrixadd_Pipeline_loop_0_fu_72_grp_fu_114_p_opcode;
wire    grp_matrixadd_Pipeline_loop_0_fu_72_grp_fu_114_p_ce;
wire    grp_matrixadd_Pipeline_loop_1_fu_79_ap_start;
wire    grp_matrixadd_Pipeline_loop_1_fu_79_ap_done;
wire    grp_matrixadd_Pipeline_loop_1_fu_79_ap_idle;
wire    grp_matrixadd_Pipeline_loop_1_fu_79_ap_ready;
wire   [12:0] grp_matrixadd_Pipeline_loop_1_fu_79_array_1_address0;
wire    grp_matrixadd_Pipeline_loop_1_fu_79_array_1_ce0;
wire   [31:0] grp_matrixadd_Pipeline_loop_1_fu_79_s_1_out;
wire    grp_matrixadd_Pipeline_loop_1_fu_79_s_1_out_ap_vld;
wire    grp_matrixadd_Pipeline_loop_2_fu_86_ap_start;
wire    grp_matrixadd_Pipeline_loop_2_fu_86_ap_done;
wire    grp_matrixadd_Pipeline_loop_2_fu_86_ap_idle;
wire    grp_matrixadd_Pipeline_loop_2_fu_86_ap_ready;
wire   [12:0] grp_matrixadd_Pipeline_loop_2_fu_86_array_2_address0;
wire    grp_matrixadd_Pipeline_loop_2_fu_86_array_2_ce0;
wire   [31:0] grp_matrixadd_Pipeline_loop_2_fu_86_s_2_out;
wire    grp_matrixadd_Pipeline_loop_2_fu_86_s_2_out_ap_vld;
wire    grp_matrixadd_Pipeline_loop_3_fu_93_ap_start;
wire    grp_matrixadd_Pipeline_loop_3_fu_93_ap_done;
wire    grp_matrixadd_Pipeline_loop_3_fu_93_ap_idle;
wire    grp_matrixadd_Pipeline_loop_3_fu_93_ap_ready;
wire   [12:0] grp_matrixadd_Pipeline_loop_3_fu_93_array_4_address0;
wire    grp_matrixadd_Pipeline_loop_3_fu_93_array_4_ce0;
wire   [31:0] grp_matrixadd_Pipeline_loop_3_fu_93_s_4_out;
wire    grp_matrixadd_Pipeline_loop_3_fu_93_s_4_out_ap_vld;
wire    grp_matrixadd_Pipeline_loop_5_fu_100_ap_start;
wire    grp_matrixadd_Pipeline_loop_5_fu_100_ap_done;
wire    grp_matrixadd_Pipeline_loop_5_fu_100_ap_idle;
wire    grp_matrixadd_Pipeline_loop_5_fu_100_ap_ready;
wire   [12:0] grp_matrixadd_Pipeline_loop_5_fu_100_array_6_address0;
wire    grp_matrixadd_Pipeline_loop_5_fu_100_array_6_ce0;
wire   [31:0] grp_matrixadd_Pipeline_loop_5_fu_100_s_6_out;
wire    grp_matrixadd_Pipeline_loop_5_fu_100_s_6_out_ap_vld;
wire    grp_matrixadd_Pipeline_loop_7_fu_107_ap_start;
wire    grp_matrixadd_Pipeline_loop_7_fu_107_ap_done;
wire    grp_matrixadd_Pipeline_loop_7_fu_107_ap_idle;
wire    grp_matrixadd_Pipeline_loop_7_fu_107_ap_ready;
wire   [12:0] grp_matrixadd_Pipeline_loop_7_fu_107_array_7_address0;
wire    grp_matrixadd_Pipeline_loop_7_fu_107_array_7_ce0;
wire   [31:0] grp_matrixadd_Pipeline_loop_7_fu_107_s_7_out;
wire    grp_matrixadd_Pipeline_loop_7_fu_107_s_7_out_ap_vld;
reg    grp_matrixadd_Pipeline_loop_0_fu_72_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_matrixadd_Pipeline_loop_1_fu_79_ap_start_reg;
reg    grp_matrixadd_Pipeline_loop_2_fu_86_ap_start_reg;
reg    grp_matrixadd_Pipeline_loop_3_fu_93_ap_start_reg;
reg    grp_matrixadd_Pipeline_loop_5_fu_100_ap_start_reg;
reg    grp_matrixadd_Pipeline_loop_7_fu_107_ap_start_reg;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state3;
reg   [31:0] grp_fu_114_p0;
reg   [31:0] grp_fu_114_p1;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state23;
reg    grp_fu_114_ce;
wire    ap_CS_fsm_state37;
reg   [36:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_block_state2_on_subcall_done;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 37'd1;
#0 grp_matrixadd_Pipeline_loop_0_fu_72_ap_start_reg = 1'b0;
#0 grp_matrixadd_Pipeline_loop_1_fu_79_ap_start_reg = 1'b0;
#0 grp_matrixadd_Pipeline_loop_2_fu_86_ap_start_reg = 1'b0;
#0 grp_matrixadd_Pipeline_loop_3_fu_93_ap_start_reg = 1'b0;
#0 grp_matrixadd_Pipeline_loop_5_fu_100_ap_start_reg = 1'b0;
#0 grp_matrixadd_Pipeline_loop_7_fu_107_ap_start_reg = 1'b0;
end

matrixadd_matrixadd_Pipeline_loop_0 grp_matrixadd_Pipeline_loop_0_fu_72(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_matrixadd_Pipeline_loop_0_fu_72_ap_start),
    .ap_done(grp_matrixadd_Pipeline_loop_0_fu_72_ap_done),
    .ap_idle(grp_matrixadd_Pipeline_loop_0_fu_72_ap_idle),
    .ap_ready(grp_matrixadd_Pipeline_loop_0_fu_72_ap_ready),
    .array_0_address0(grp_matrixadd_Pipeline_loop_0_fu_72_array_0_address0),
    .array_0_ce0(grp_matrixadd_Pipeline_loop_0_fu_72_array_0_ce0),
    .array_0_q0(array_0_q0),
    .s_0_out(grp_matrixadd_Pipeline_loop_0_fu_72_s_0_out),
    .s_0_out_ap_vld(grp_matrixadd_Pipeline_loop_0_fu_72_s_0_out_ap_vld),
    .grp_fu_114_p_din0(grp_matrixadd_Pipeline_loop_0_fu_72_grp_fu_114_p_din0),
    .grp_fu_114_p_din1(grp_matrixadd_Pipeline_loop_0_fu_72_grp_fu_114_p_din1),
    .grp_fu_114_p_opcode(grp_matrixadd_Pipeline_loop_0_fu_72_grp_fu_114_p_opcode),
    .grp_fu_114_p_dout0(grp_fu_114_p2),
    .grp_fu_114_p_ce(grp_matrixadd_Pipeline_loop_0_fu_72_grp_fu_114_p_ce)
);

matrixadd_matrixadd_Pipeline_loop_1 grp_matrixadd_Pipeline_loop_1_fu_79(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_matrixadd_Pipeline_loop_1_fu_79_ap_start),
    .ap_done(grp_matrixadd_Pipeline_loop_1_fu_79_ap_done),
    .ap_idle(grp_matrixadd_Pipeline_loop_1_fu_79_ap_idle),
    .ap_ready(grp_matrixadd_Pipeline_loop_1_fu_79_ap_ready),
    .array_1_address0(grp_matrixadd_Pipeline_loop_1_fu_79_array_1_address0),
    .array_1_ce0(grp_matrixadd_Pipeline_loop_1_fu_79_array_1_ce0),
    .array_1_q0(array_1_q0),
    .s_1_out(grp_matrixadd_Pipeline_loop_1_fu_79_s_1_out),
    .s_1_out_ap_vld(grp_matrixadd_Pipeline_loop_1_fu_79_s_1_out_ap_vld)
);

matrixadd_matrixadd_Pipeline_loop_2 grp_matrixadd_Pipeline_loop_2_fu_86(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_matrixadd_Pipeline_loop_2_fu_86_ap_start),
    .ap_done(grp_matrixadd_Pipeline_loop_2_fu_86_ap_done),
    .ap_idle(grp_matrixadd_Pipeline_loop_2_fu_86_ap_idle),
    .ap_ready(grp_matrixadd_Pipeline_loop_2_fu_86_ap_ready),
    .array_2_address0(grp_matrixadd_Pipeline_loop_2_fu_86_array_2_address0),
    .array_2_ce0(grp_matrixadd_Pipeline_loop_2_fu_86_array_2_ce0),
    .array_2_q0(array_2_q0),
    .s_2_out(grp_matrixadd_Pipeline_loop_2_fu_86_s_2_out),
    .s_2_out_ap_vld(grp_matrixadd_Pipeline_loop_2_fu_86_s_2_out_ap_vld)
);

matrixadd_matrixadd_Pipeline_loop_3 grp_matrixadd_Pipeline_loop_3_fu_93(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_matrixadd_Pipeline_loop_3_fu_93_ap_start),
    .ap_done(grp_matrixadd_Pipeline_loop_3_fu_93_ap_done),
    .ap_idle(grp_matrixadd_Pipeline_loop_3_fu_93_ap_idle),
    .ap_ready(grp_matrixadd_Pipeline_loop_3_fu_93_ap_ready),
    .array_4_address0(grp_matrixadd_Pipeline_loop_3_fu_93_array_4_address0),
    .array_4_ce0(grp_matrixadd_Pipeline_loop_3_fu_93_array_4_ce0),
    .array_4_q0(array_4_q0),
    .s_4_out(grp_matrixadd_Pipeline_loop_3_fu_93_s_4_out),
    .s_4_out_ap_vld(grp_matrixadd_Pipeline_loop_3_fu_93_s_4_out_ap_vld)
);

matrixadd_matrixadd_Pipeline_loop_5 grp_matrixadd_Pipeline_loop_5_fu_100(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_matrixadd_Pipeline_loop_5_fu_100_ap_start),
    .ap_done(grp_matrixadd_Pipeline_loop_5_fu_100_ap_done),
    .ap_idle(grp_matrixadd_Pipeline_loop_5_fu_100_ap_idle),
    .ap_ready(grp_matrixadd_Pipeline_loop_5_fu_100_ap_ready),
    .array_6_address0(grp_matrixadd_Pipeline_loop_5_fu_100_array_6_address0),
    .array_6_ce0(grp_matrixadd_Pipeline_loop_5_fu_100_array_6_ce0),
    .array_6_q0(array_6_q0),
    .s_6_out(grp_matrixadd_Pipeline_loop_5_fu_100_s_6_out),
    .s_6_out_ap_vld(grp_matrixadd_Pipeline_loop_5_fu_100_s_6_out_ap_vld)
);

matrixadd_matrixadd_Pipeline_loop_7 grp_matrixadd_Pipeline_loop_7_fu_107(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_matrixadd_Pipeline_loop_7_fu_107_ap_start),
    .ap_done(grp_matrixadd_Pipeline_loop_7_fu_107_ap_done),
    .ap_idle(grp_matrixadd_Pipeline_loop_7_fu_107_ap_idle),
    .ap_ready(grp_matrixadd_Pipeline_loop_7_fu_107_ap_ready),
    .array_7_address0(grp_matrixadd_Pipeline_loop_7_fu_107_array_7_address0),
    .array_7_ce0(grp_matrixadd_Pipeline_loop_7_fu_107_array_7_ce0),
    .array_7_q0(array_7_q0),
    .s_7_out(grp_matrixadd_Pipeline_loop_7_fu_107_s_7_out),
    .s_7_out_ap_vld(grp_matrixadd_Pipeline_loop_7_fu_107_s_7_out_ap_vld)
);

matrixadd_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_114_p0),
    .din1(grp_fu_114_p1),
    .ce(grp_fu_114_ce),
    .dout(grp_fu_114_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_matrixadd_Pipeline_loop_0_fu_72_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_matrixadd_Pipeline_loop_0_fu_72_ap_start_reg <= 1'b1;
        end else if ((grp_matrixadd_Pipeline_loop_0_fu_72_ap_ready == 1'b1)) begin
            grp_matrixadd_Pipeline_loop_0_fu_72_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_matrixadd_Pipeline_loop_1_fu_79_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_matrixadd_Pipeline_loop_1_fu_79_ap_start_reg <= 1'b1;
        end else if ((grp_matrixadd_Pipeline_loop_1_fu_79_ap_ready == 1'b1)) begin
            grp_matrixadd_Pipeline_loop_1_fu_79_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_matrixadd_Pipeline_loop_2_fu_86_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_matrixadd_Pipeline_loop_2_fu_86_ap_start_reg <= 1'b1;
        end else if ((grp_matrixadd_Pipeline_loop_2_fu_86_ap_ready == 1'b1)) begin
            grp_matrixadd_Pipeline_loop_2_fu_86_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_matrixadd_Pipeline_loop_3_fu_93_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_matrixadd_Pipeline_loop_3_fu_93_ap_start_reg <= 1'b1;
        end else if ((grp_matrixadd_Pipeline_loop_3_fu_93_ap_ready == 1'b1)) begin
            grp_matrixadd_Pipeline_loop_3_fu_93_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_matrixadd_Pipeline_loop_5_fu_100_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_matrixadd_Pipeline_loop_5_fu_100_ap_start_reg <= 1'b1;
        end else if ((grp_matrixadd_Pipeline_loop_5_fu_100_ap_ready == 1'b1)) begin
            grp_matrixadd_Pipeline_loop_5_fu_100_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_matrixadd_Pipeline_loop_7_fu_107_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_matrixadd_Pipeline_loop_7_fu_107_ap_start_reg <= 1'b1;
        end else if ((grp_matrixadd_Pipeline_loop_7_fu_107_ap_ready == 1'b1)) begin
            grp_matrixadd_Pipeline_loop_7_fu_107_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_119 <= grp_fu_114_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state2_on_subcall_done)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_114_ce = grp_matrixadd_Pipeline_loop_0_fu_72_grp_fu_114_p_ce;
    end else begin
        grp_fu_114_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_114_p0 = grp_matrixadd_Pipeline_loop_0_fu_72_grp_fu_114_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_fu_114_p0 = reg_119;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_114_p0 = grp_matrixadd_Pipeline_loop_0_fu_72_s_0_out;
    end else begin
        grp_fu_114_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_114_p1 = grp_matrixadd_Pipeline_loop_0_fu_72_grp_fu_114_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_fu_114_p1 = grp_matrixadd_Pipeline_loop_7_fu_107_s_7_out;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_114_p1 = grp_matrixadd_Pipeline_loop_5_fu_100_s_6_out;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_114_p1 = grp_matrixadd_Pipeline_loop_3_fu_93_s_4_out;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_114_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_114_p1 = grp_matrixadd_Pipeline_loop_2_fu_86_s_2_out;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_114_p1 = grp_matrixadd_Pipeline_loop_1_fu_79_s_1_out;
    end else begin
        grp_fu_114_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state2_on_subcall_done = ((grp_matrixadd_Pipeline_loop_7_fu_107_ap_done == 1'b0) | (grp_matrixadd_Pipeline_loop_5_fu_100_ap_done == 1'b0) | (grp_matrixadd_Pipeline_loop_3_fu_93_ap_done == 1'b0) | (grp_matrixadd_Pipeline_loop_2_fu_86_ap_done == 1'b0) | (grp_matrixadd_Pipeline_loop_1_fu_79_ap_done == 1'b0) | (grp_matrixadd_Pipeline_loop_0_fu_72_ap_done == 1'b0));
end

assign ap_return = grp_fu_114_p2;

assign array_0_address0 = grp_matrixadd_Pipeline_loop_0_fu_72_array_0_address0;

assign array_0_ce0 = grp_matrixadd_Pipeline_loop_0_fu_72_array_0_ce0;

assign array_1_address0 = grp_matrixadd_Pipeline_loop_1_fu_79_array_1_address0;

assign array_1_ce0 = grp_matrixadd_Pipeline_loop_1_fu_79_array_1_ce0;

assign array_2_address0 = grp_matrixadd_Pipeline_loop_2_fu_86_array_2_address0;

assign array_2_ce0 = grp_matrixadd_Pipeline_loop_2_fu_86_array_2_ce0;

assign array_3_address0 = 13'd0;

assign array_3_address1 = 13'd0;

assign array_3_ce0 = 1'b0;

assign array_3_ce1 = 1'b0;

assign array_3_d0 = 32'd0;

assign array_3_d1 = 32'd0;

assign array_3_we0 = 1'b0;

assign array_3_we1 = 1'b0;

assign array_4_address0 = grp_matrixadd_Pipeline_loop_3_fu_93_array_4_address0;

assign array_4_ce0 = grp_matrixadd_Pipeline_loop_3_fu_93_array_4_ce0;

assign array_5_address0 = 13'd0;

assign array_5_address1 = 13'd0;

assign array_5_ce0 = 1'b0;

assign array_5_ce1 = 1'b0;

assign array_5_d0 = 32'd0;

assign array_5_d1 = 32'd0;

assign array_5_we0 = 1'b0;

assign array_5_we1 = 1'b0;

assign array_6_address0 = grp_matrixadd_Pipeline_loop_5_fu_100_array_6_address0;

assign array_6_ce0 = grp_matrixadd_Pipeline_loop_5_fu_100_array_6_ce0;

assign array_7_address0 = grp_matrixadd_Pipeline_loop_7_fu_107_array_7_address0;

assign array_7_ce0 = grp_matrixadd_Pipeline_loop_7_fu_107_array_7_ce0;

assign grp_matrixadd_Pipeline_loop_0_fu_72_ap_start = grp_matrixadd_Pipeline_loop_0_fu_72_ap_start_reg;

assign grp_matrixadd_Pipeline_loop_1_fu_79_ap_start = grp_matrixadd_Pipeline_loop_1_fu_79_ap_start_reg;

assign grp_matrixadd_Pipeline_loop_2_fu_86_ap_start = grp_matrixadd_Pipeline_loop_2_fu_86_ap_start_reg;

assign grp_matrixadd_Pipeline_loop_3_fu_93_ap_start = grp_matrixadd_Pipeline_loop_3_fu_93_ap_start_reg;

assign grp_matrixadd_Pipeline_loop_5_fu_100_ap_start = grp_matrixadd_Pipeline_loop_5_fu_100_ap_start_reg;

assign grp_matrixadd_Pipeline_loop_7_fu_107_ap_start = grp_matrixadd_Pipeline_loop_7_fu_107_ap_start_reg;

endmodule //matrixadd
