// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module main_main_Pipeline_VITIS_LOOP_31_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_address0,
        A_ce0,
        A_we0,
        A_d0,
        gold_address0,
        gold_ce0,
        gold_we0,
        gold_d0,
        addr_out_address0,
        addr_out_ce0,
        addr_out_we0,
        addr_out_d0,
        addr_in_address0,
        addr_in_ce0,
        addr_in_we0,
        addr_in_d0,
        grp_fu_102_p_din0,
        grp_fu_102_p_din1,
        grp_fu_102_p_opcode,
        grp_fu_102_p_dout0,
        grp_fu_102_p_ce,
        grp_fu_106_p_din0,
        grp_fu_106_p_din1,
        grp_fu_106_p_dout0,
        grp_fu_106_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] A_address0;
output   A_ce0;
output   A_we0;
output  [63:0] A_d0;
output  [9:0] gold_address0;
output   gold_ce0;
output   gold_we0;
output  [63:0] gold_d0;
output  [9:0] addr_out_address0;
output   addr_out_ce0;
output   addr_out_we0;
output  [9:0] addr_out_d0;
output  [9:0] addr_in_address0;
output   addr_in_ce0;
output   addr_in_we0;
output  [9:0] addr_in_d0;
output  [63:0] grp_fu_102_p_din0;
output  [63:0] grp_fu_102_p_din1;
output  [1:0] grp_fu_102_p_opcode;
input  [63:0] grp_fu_102_p_dout0;
output   grp_fu_102_p_ce;
output  [63:0] grp_fu_106_p_din0;
output  [63:0] grp_fu_106_p_din1;
input  [63:0] grp_fu_106_p_dout0;
output   grp_fu_106_p_ce;

reg ap_idle;
reg A_ce0;
reg A_we0;
reg gold_ce0;
reg gold_we0;
reg addr_out_ce0;
reg addr_out_we0;
reg addr_in_ce0;
reg addr_in_we0;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_subdone;
wire   [0:0] icmp_ln31_fu_162_p2;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [9:0] i_2_reg_327;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln31_reg_335;
reg   [15:0] lfsr_0_load_reg_339;
wire   [9:0] add_ln31_1_fu_174_p2;
reg   [9:0] add_ln31_1_reg_344;
wire   [0:0] icmp_ln31_1_fu_180_p2;
reg   [0:0] icmp_ln31_1_reg_349;
wire   [0:0] icmp_ln32_fu_190_p2;
reg   [0:0] icmp_ln32_reg_354;
reg   [0:0] icmp_ln32_reg_354_pp0_iter1_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter2_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter3_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter4_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter5_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter6_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter7_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter8_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter9_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter10_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter11_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter12_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter13_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter14_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter15_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter16_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter17_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter18_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter19_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter20_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter21_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter22_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter23_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter24_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter25_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter26_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter27_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter28_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter29_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter30_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter31_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter32_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter33_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter34_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter35_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter36_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter37_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter38_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter39_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter40_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter41_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter42_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter43_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter44_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter45_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter46_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter47_reg;
reg   [0:0] icmp_ln32_reg_354_pp0_iter48_reg;
reg   [14:0] lshr_ln23_3_reg_360;
wire   [0:0] xor_ln23_2_fu_246_p2;
reg   [0:0] xor_ln23_2_reg_365;
wire   [63:0] zext_ln31_fu_263_p1;
reg   [63:0] zext_ln31_reg_370;
wire    ap_block_pp0_stage0_11001;
reg   [63:0] zext_ln31_reg_370_pp0_iter2_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter3_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter4_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter5_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter6_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter7_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter8_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter9_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter10_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter11_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter12_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter13_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter14_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter15_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter16_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter17_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter18_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter19_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter20_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter21_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter22_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter23_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter24_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter25_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter26_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter27_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter28_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter29_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter30_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter31_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter32_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter33_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter34_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter35_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter36_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter37_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter38_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter39_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter40_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter41_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter42_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter43_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter44_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter45_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter46_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter47_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter48_reg;
reg   [63:0] zext_ln31_reg_370_pp0_iter49_reg;
wire   [63:0] grp_fu_141_p1;
reg   [63:0] conv_reg_381;
wire   [63:0] grp_fu_136_p2;
reg   [63:0] div_reg_386;
reg   [63:0] mul_reg_391;
reg   [63:0] sub_reg_396;
wire   [63:0] select_ln32_1_fu_300_p3;
reg   [63:0] select_ln32_1_reg_401;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
reg   [9:0] phi_urem_fu_62;
wire   [9:0] select_ln31_fu_257_p3;
wire    ap_loop_init;
reg   [9:0] i_fu_66;
wire   [9:0] add_ln31_fu_252_p2;
reg   [15:0] lfsr_0_fu_70;
wire   [15:0] select_ln32_fu_279_p3;
wire   [31:0] grp_fu_141_p0;
wire   [6:0] trunc_ln32_fu_186_p1;
wire   [0:0] tmp_fu_200_p3;
wire   [0:0] trunc_ln23_fu_196_p1;
wire   [0:0] tmp_1_fu_208_p3;
wire   [0:0] tmp_2_fu_216_p3;
wire   [0:0] xor_ln23_1_fu_240_p2;
wire   [0:0] xor_ln23_fu_234_p2;
wire   [15:0] or_ln_fu_268_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg    ap_loop_exit_ready_pp0_iter46_reg;
reg    ap_loop_exit_ready_pp0_iter47_reg;
reg    ap_loop_exit_ready_pp0_iter48_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to49;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage0_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 phi_urem_fu_62 = 10'd0;
#0 i_fu_66 = 10'd0;
#0 lfsr_0_fu_70 = 16'd0;
#0 ap_done_reg = 1'b0;
end

main_ddiv_64ns_64ns_64_59_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 59 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_59_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_reg_381),
    .din1(64'd4746794007244308480),
    .ce(1'b1),
    .dout(grp_fu_136_p2)
);

main_uitodp_32ns_64_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
uitodp_32ns_64_7_no_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_141_p0),
    .ce(1'b1),
    .dout(grp_fu_141_p1)
);

main_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter48_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_66 <= 10'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln31_reg_335 == 1'd0))) begin
            i_fu_66 <= add_ln31_fu_252_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            lfsr_0_fu_70 <= 16'd44257;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln31_reg_335 == 1'd0))) begin
            lfsr_0_fu_70 <= select_ln32_fu_279_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            phi_urem_fu_62 <= 10'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln31_reg_335 == 1'd0))) begin
            phi_urem_fu_62 <= select_ln31_fu_257_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln31_1_reg_344 <= add_ln31_1_fu_174_p2;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
        ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
        ap_loop_exit_ready_pp0_iter47_reg <= ap_loop_exit_ready_pp0_iter46_reg;
        ap_loop_exit_ready_pp0_iter48_reg <= ap_loop_exit_ready_pp0_iter47_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        div_reg_386 <= grp_fu_136_p2;
        i_2_reg_327 <= i_fu_66;
        icmp_ln31_1_reg_349 <= icmp_ln31_1_fu_180_p2;
        icmp_ln31_reg_335 <= icmp_ln31_fu_162_p2;
        icmp_ln32_reg_354 <= icmp_ln32_fu_190_p2;
        icmp_ln32_reg_354_pp0_iter10_reg <= icmp_ln32_reg_354_pp0_iter9_reg;
        icmp_ln32_reg_354_pp0_iter11_reg <= icmp_ln32_reg_354_pp0_iter10_reg;
        icmp_ln32_reg_354_pp0_iter12_reg <= icmp_ln32_reg_354_pp0_iter11_reg;
        icmp_ln32_reg_354_pp0_iter13_reg <= icmp_ln32_reg_354_pp0_iter12_reg;
        icmp_ln32_reg_354_pp0_iter14_reg <= icmp_ln32_reg_354_pp0_iter13_reg;
        icmp_ln32_reg_354_pp0_iter15_reg <= icmp_ln32_reg_354_pp0_iter14_reg;
        icmp_ln32_reg_354_pp0_iter16_reg <= icmp_ln32_reg_354_pp0_iter15_reg;
        icmp_ln32_reg_354_pp0_iter17_reg <= icmp_ln32_reg_354_pp0_iter16_reg;
        icmp_ln32_reg_354_pp0_iter18_reg <= icmp_ln32_reg_354_pp0_iter17_reg;
        icmp_ln32_reg_354_pp0_iter19_reg <= icmp_ln32_reg_354_pp0_iter18_reg;
        icmp_ln32_reg_354_pp0_iter1_reg <= icmp_ln32_reg_354;
        icmp_ln32_reg_354_pp0_iter20_reg <= icmp_ln32_reg_354_pp0_iter19_reg;
        icmp_ln32_reg_354_pp0_iter21_reg <= icmp_ln32_reg_354_pp0_iter20_reg;
        icmp_ln32_reg_354_pp0_iter22_reg <= icmp_ln32_reg_354_pp0_iter21_reg;
        icmp_ln32_reg_354_pp0_iter23_reg <= icmp_ln32_reg_354_pp0_iter22_reg;
        icmp_ln32_reg_354_pp0_iter24_reg <= icmp_ln32_reg_354_pp0_iter23_reg;
        icmp_ln32_reg_354_pp0_iter25_reg <= icmp_ln32_reg_354_pp0_iter24_reg;
        icmp_ln32_reg_354_pp0_iter26_reg <= icmp_ln32_reg_354_pp0_iter25_reg;
        icmp_ln32_reg_354_pp0_iter27_reg <= icmp_ln32_reg_354_pp0_iter26_reg;
        icmp_ln32_reg_354_pp0_iter28_reg <= icmp_ln32_reg_354_pp0_iter27_reg;
        icmp_ln32_reg_354_pp0_iter29_reg <= icmp_ln32_reg_354_pp0_iter28_reg;
        icmp_ln32_reg_354_pp0_iter2_reg <= icmp_ln32_reg_354_pp0_iter1_reg;
        icmp_ln32_reg_354_pp0_iter30_reg <= icmp_ln32_reg_354_pp0_iter29_reg;
        icmp_ln32_reg_354_pp0_iter31_reg <= icmp_ln32_reg_354_pp0_iter30_reg;
        icmp_ln32_reg_354_pp0_iter32_reg <= icmp_ln32_reg_354_pp0_iter31_reg;
        icmp_ln32_reg_354_pp0_iter33_reg <= icmp_ln32_reg_354_pp0_iter32_reg;
        icmp_ln32_reg_354_pp0_iter34_reg <= icmp_ln32_reg_354_pp0_iter33_reg;
        icmp_ln32_reg_354_pp0_iter35_reg <= icmp_ln32_reg_354_pp0_iter34_reg;
        icmp_ln32_reg_354_pp0_iter36_reg <= icmp_ln32_reg_354_pp0_iter35_reg;
        icmp_ln32_reg_354_pp0_iter37_reg <= icmp_ln32_reg_354_pp0_iter36_reg;
        icmp_ln32_reg_354_pp0_iter38_reg <= icmp_ln32_reg_354_pp0_iter37_reg;
        icmp_ln32_reg_354_pp0_iter39_reg <= icmp_ln32_reg_354_pp0_iter38_reg;
        icmp_ln32_reg_354_pp0_iter3_reg <= icmp_ln32_reg_354_pp0_iter2_reg;
        icmp_ln32_reg_354_pp0_iter40_reg <= icmp_ln32_reg_354_pp0_iter39_reg;
        icmp_ln32_reg_354_pp0_iter41_reg <= icmp_ln32_reg_354_pp0_iter40_reg;
        icmp_ln32_reg_354_pp0_iter42_reg <= icmp_ln32_reg_354_pp0_iter41_reg;
        icmp_ln32_reg_354_pp0_iter43_reg <= icmp_ln32_reg_354_pp0_iter42_reg;
        icmp_ln32_reg_354_pp0_iter44_reg <= icmp_ln32_reg_354_pp0_iter43_reg;
        icmp_ln32_reg_354_pp0_iter45_reg <= icmp_ln32_reg_354_pp0_iter44_reg;
        icmp_ln32_reg_354_pp0_iter46_reg <= icmp_ln32_reg_354_pp0_iter45_reg;
        icmp_ln32_reg_354_pp0_iter47_reg <= icmp_ln32_reg_354_pp0_iter46_reg;
        icmp_ln32_reg_354_pp0_iter48_reg <= icmp_ln32_reg_354_pp0_iter47_reg;
        icmp_ln32_reg_354_pp0_iter4_reg <= icmp_ln32_reg_354_pp0_iter3_reg;
        icmp_ln32_reg_354_pp0_iter5_reg <= icmp_ln32_reg_354_pp0_iter4_reg;
        icmp_ln32_reg_354_pp0_iter6_reg <= icmp_ln32_reg_354_pp0_iter5_reg;
        icmp_ln32_reg_354_pp0_iter7_reg <= icmp_ln32_reg_354_pp0_iter6_reg;
        icmp_ln32_reg_354_pp0_iter8_reg <= icmp_ln32_reg_354_pp0_iter7_reg;
        icmp_ln32_reg_354_pp0_iter9_reg <= icmp_ln32_reg_354_pp0_iter8_reg;
        lfsr_0_load_reg_339 <= lfsr_0_fu_70;
        lshr_ln23_3_reg_360 <= {{lfsr_0_fu_70[15:1]}};
        mul_reg_391 <= grp_fu_106_p_dout0;
        sub_reg_396 <= grp_fu_102_p_dout0;
        xor_ln23_2_reg_365 <= xor_ln23_2_fu_246_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_reg_381 <= grp_fu_141_p1;
        select_ln32_1_reg_401 <= select_ln32_1_fu_300_p3;
        zext_ln31_reg_370[9 : 0] <= zext_ln31_fu_263_p1[9 : 0];
        zext_ln31_reg_370_pp0_iter10_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter9_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter11_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter10_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter12_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter11_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter13_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter12_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter14_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter13_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter15_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter14_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter16_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter15_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter17_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter16_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter18_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter17_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter19_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter18_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter20_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter19_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter21_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter20_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter22_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter21_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter23_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter22_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter24_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter23_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter25_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter24_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter26_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter25_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter27_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter26_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter28_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter27_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter29_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter28_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter2_reg[9 : 0] <= zext_ln31_reg_370[9 : 0];
        zext_ln31_reg_370_pp0_iter30_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter29_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter31_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter30_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter32_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter31_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter33_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter32_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter34_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter33_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter35_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter34_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter36_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter35_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter37_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter36_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter38_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter37_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter39_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter38_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter3_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter2_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter40_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter39_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter41_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter40_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter42_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter41_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter43_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter42_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter44_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter43_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter45_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter44_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter46_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter45_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter47_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter46_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter48_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter47_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter49_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter48_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter4_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter3_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter5_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter4_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter6_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter5_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter7_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter6_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter8_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter7_reg[9 : 0];
        zext_ln31_reg_370_pp0_iter9_reg[9 : 0] <= zext_ln31_reg_370_pp0_iter8_reg[9 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter49 == 1'b1))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter49 == 1'b1))) begin
        A_we0 = 1'b1;
    end else begin
        A_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        addr_in_ce0 = 1'b1;
    end else begin
        addr_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln31_reg_335 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        addr_in_we0 = 1'b1;
    end else begin
        addr_in_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        addr_out_ce0 = 1'b1;
    end else begin
        addr_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln31_reg_335 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        addr_out_we0 = 1'b1;
    end else begin
        addr_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln31_fu_162_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln31_reg_335 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter48_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) 
    & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) 
    & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0_1to49 = 1'b1;
    end else begin
        ap_idle_pp0_1to49 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter49 == 1'b1))) begin
        gold_ce0 = 1'b1;
    end else begin
        gold_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter49 == 1'b1))) begin
        gold_we0 = 1'b1;
    end else begin
        gold_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to49 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_address0 = zext_ln31_reg_370_pp0_iter49_reg;

assign A_d0 = select_ln32_1_reg_401;

assign add_ln31_1_fu_174_p2 = (phi_urem_fu_62 + 10'd1);

assign add_ln31_fu_252_p2 = (i_2_reg_327 + 10'd1);

assign addr_in_address0 = zext_ln31_fu_263_p1;

assign addr_in_d0 = i_2_reg_327;

assign addr_out_address0 = zext_ln31_fu_263_p1;

assign addr_out_d0 = i_2_reg_327;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign gold_address0 = zext_ln31_reg_370_pp0_iter49_reg;

assign gold_d0 = select_ln32_1_reg_401;

assign grp_fu_102_p_ce = 1'b1;

assign grp_fu_102_p_din0 = mul_reg_391;

assign grp_fu_102_p_din1 = 64'd13830554455654793216;

assign grp_fu_102_p_opcode = 2'd0;

assign grp_fu_106_p_ce = 1'b1;

assign grp_fu_106_p_din0 = div_reg_386;

assign grp_fu_106_p_din1 = 64'd4611686018427387904;

assign grp_fu_141_p0 = or_ln_fu_268_p3;

assign icmp_ln31_1_fu_180_p2 = ((add_ln31_1_fu_174_p2 < 10'd100) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_162_p2 = ((i_fu_66 == 10'd1000) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_190_p2 = ((trunc_ln32_fu_186_p1 == 7'd0) ? 1'b1 : 1'b0);

assign or_ln_fu_268_p3 = {{xor_ln23_2_reg_365}, {lshr_ln23_3_reg_360}};

assign select_ln31_fu_257_p3 = ((icmp_ln31_1_reg_349[0:0] == 1'b1) ? add_ln31_1_reg_344 : 10'd0);

assign select_ln32_1_fu_300_p3 = ((icmp_ln32_reg_354_pp0_iter48_reg[0:0] == 1'b1) ? sub_reg_396 : 64'd4608083138725491507);

assign select_ln32_fu_279_p3 = ((icmp_ln32_reg_354[0:0] == 1'b1) ? or_ln_fu_268_p3 : lfsr_0_load_reg_339);

assign tmp_1_fu_208_p3 = lfsr_0_fu_70[32'd2];

assign tmp_2_fu_216_p3 = lfsr_0_fu_70[32'd5];

assign tmp_fu_200_p3 = lfsr_0_fu_70[32'd3];

assign trunc_ln23_fu_196_p1 = lfsr_0_fu_70[0:0];

assign trunc_ln32_fu_186_p1 = phi_urem_fu_62[6:0];

assign xor_ln23_1_fu_240_p2 = (tmp_2_fu_216_p3 ^ tmp_1_fu_208_p3);

assign xor_ln23_2_fu_246_p2 = (xor_ln23_fu_234_p2 ^ xor_ln23_1_fu_240_p2);

assign xor_ln23_fu_234_p2 = (trunc_ln23_fu_196_p1 ^ tmp_fu_200_p3);

assign zext_ln31_fu_263_p1 = i_2_reg_327;

always @ (posedge ap_clk) begin
    zext_ln31_reg_370[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter2_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter3_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter4_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter5_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter6_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter7_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter8_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter9_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter10_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter11_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter12_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter13_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter14_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter15_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter16_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter17_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter18_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter19_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter20_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter21_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter22_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter23_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter24_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter25_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter26_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter27_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter28_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter29_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter30_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter31_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter32_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter33_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter34_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter35_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter36_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter37_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter38_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter39_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter40_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter41_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter42_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter43_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter44_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter45_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter46_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter47_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter48_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln31_reg_370_pp0_iter49_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //main_main_Pipeline_VITIS_LOOP_31_1
