#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("board_address0", 6, hls_out, 0, "ap_memory", "mem_address", 1),
	Port_Property("board_ce0", 1, hls_out, 0, "ap_memory", "mem_ce", 1),
	Port_Property("board_q0", 32, hls_in, 0, "ap_memory", "mem_dout", 1),
	Port_Property("color", 32, hls_in, 1, "ap_none", "in_data", 1),
	Port_Property("profile", 32, hls_in, 2, "ap_none", "in_data", 1),
	Port_Property("rawMoveCount_address0", 6, hls_out, 3, "ap_memory", "mem_address", 1),
	Port_Property("rawMoveCount_ce0", 1, hls_out, 3, "ap_memory", "mem_ce", 1),
	Port_Property("rawMoveCount_we0", 1, hls_out, 3, "ap_memory", "mem_we", 1),
	Port_Property("rawMoveCount_d0", 32, hls_out, 3, "ap_memory", "mem_din", 1),
	Port_Property("rawMoveCount_q0", 32, hls_in, 3, "ap_memory", "mem_dout", 1),
	Port_Property("rawMoveCount_address1", 6, hls_out, 3, "ap_memory", "MemPortADDR2", 1),
	Port_Property("rawMoveCount_ce1", 1, hls_out, 3, "ap_memory", "MemPortCE2", 1),
	Port_Property("rawMoveCount_we1", 1, hls_out, 3, "ap_memory", "MemPortWE2", 1),
	Port_Property("rawMoveCount_d1", 32, hls_out, 3, "ap_memory", "MemPortDIN2", 1),
	Port_Property("rawMoveCount_q1", 32, hls_in, 3, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("pm_2_address0", 1, hls_out, 4, "ap_memory", "mem_address", 1),
	Port_Property("pm_2_ce0", 1, hls_out, 4, "ap_memory", "mem_ce", 1),
	Port_Property("pm_2_q0", 32, hls_in, 4, "ap_memory", "in_data", 1),
	Port_Property("res", 32, hls_out, 5, "ap_vld", "out_data", 1),
	Port_Property("res_ap_vld", 1, hls_out, 5, "ap_vld", "out_vld", 1),
};
const char* HLS_Design_Meta::dut_name = "evalPos";
