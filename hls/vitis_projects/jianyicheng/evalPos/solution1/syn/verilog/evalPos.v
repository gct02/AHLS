// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="evalPos_evalPos,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu35p-fsvh2104-1-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.647000,HLS_SYN_LAT=423,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1193,HLS_SYN_LUT=1364,HLS_VERSION=2023_2}" *)

module evalPos (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        board_address0,
        board_ce0,
        board_q0,
        color,
        profile,
        rawMoveCount_address0,
        rawMoveCount_ce0,
        rawMoveCount_we0,
        rawMoveCount_d0,
        rawMoveCount_q0,
        rawMoveCount_address1,
        rawMoveCount_ce1,
        rawMoveCount_we1,
        rawMoveCount_d1,
        rawMoveCount_q1,
        pm_2_address0,
        pm_2_ce0,
        pm_2_q0,
        res,
        res_ap_vld
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] board_address0;
output   board_ce0;
input  [31:0] board_q0;
input  [31:0] color;
input  [31:0] profile;
output  [5:0] rawMoveCount_address0;
output   rawMoveCount_ce0;
output   rawMoveCount_we0;
output  [31:0] rawMoveCount_d0;
input  [31:0] rawMoveCount_q0;
output  [5:0] rawMoveCount_address1;
output   rawMoveCount_ce1;
output   rawMoveCount_we1;
output  [31:0] rawMoveCount_d1;
input  [31:0] rawMoveCount_q1;
output  [0:0] pm_2_address0;
output   pm_2_ce0;
input  [31:0] pm_2_q0;
output  [31:0] res;
output   res_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg pm_2_ce0;
reg res_ap_vld;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
wire   [31:0] grp_fu_85_p1;
reg   [31:0] conv16_i_reg_123;
wire    ap_CS_fsm_state5;
wire   [30:0] trunc_ln16_fu_94_p1;
reg   [30:0] trunc_ln16_reg_128;
wire    ap_CS_fsm_state6;
wire    grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_ap_start;
wire    grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_ap_done;
wire    grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_ap_idle;
wire    grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_ap_ready;
wire   [5:0] grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_board_address0;
wire    grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_board_ce0;
wire   [31:0] grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_centralityValue_out;
wire    grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_centralityValue_out_ap_vld;
wire   [31:0] grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_grp_fu_85_p_din0;
wire    grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_grp_fu_85_p_ce;
reg    grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_ap_start_reg;
wire    ap_CS_fsm_state7;
wire   [63:0] idxprom7_fu_89_p1;
wire    ap_CS_fsm_state8;
reg   [31:0] grp_fu_85_p0;
reg    grp_fu_85_ce;
reg   [7:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_ap_start_reg = 1'b0;
end

evalPos_evalPos_Pipeline_VITIS_LOOP_12_1 grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_ap_start),
    .ap_done(grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_ap_done),
    .ap_idle(grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_ap_idle),
    .ap_ready(grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_ap_ready),
    .board_address0(grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_board_address0),
    .board_ce0(grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_board_ce0),
    .board_q0(board_q0),
    .empty(trunc_ln16_reg_128),
    .conv16_i(conv16_i_reg_123),
    .centralityValue_out(grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_centralityValue_out),
    .centralityValue_out_ap_vld(grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_centralityValue_out_ap_vld),
    .grp_fu_85_p_din0(grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_grp_fu_85_p_din0),
    .grp_fu_85_p_dout0(grp_fu_85_p1),
    .grp_fu_85_p_ce(grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_grp_fu_85_p_ce)
);

evalPos_sitofp_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32ns_32_4_no_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_85_p0),
    .ce(grp_fu_85_ce),
    .dout(grp_fu_85_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_ap_start_reg <= 1'b1;
        end else if ((grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_ap_ready == 1'b1)) begin
            grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        conv16_i_reg_123 <= grp_fu_85_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        trunc_ln16_reg_128 <= trunc_ln16_fu_94_p1;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_ap_done == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_85_ce = grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_grp_fu_85_p_ce;
    end else begin
        grp_fu_85_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_85_p0 = grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_grp_fu_85_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_85_p0 = pm_2_q0;
    end else begin
        grp_fu_85_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        pm_2_ce0 = 1'b1;
    end else begin
        pm_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        res_ap_vld = 1'b1;
    end else begin
        res_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign board_address0 = grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_board_address0;

assign board_ce0 = grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_board_ce0;

assign grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_ap_start = grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_ap_start_reg;

assign idxprom7_fu_89_p1 = profile;

assign pm_2_address0 = idxprom7_fu_89_p1;

assign rawMoveCount_address0 = 6'd0;

assign rawMoveCount_address1 = 6'd0;

assign rawMoveCount_ce0 = 1'b0;

assign rawMoveCount_ce1 = 1'b0;

assign rawMoveCount_d0 = 32'd0;

assign rawMoveCount_d1 = 32'd0;

assign rawMoveCount_we0 = 1'b0;

assign rawMoveCount_we1 = 1'b0;

assign res = grp_evalPos_Pipeline_VITIS_LOOP_12_1_fu_76_centralityValue_out;

assign trunc_ln16_fu_94_p1 = color[30:0];

endmodule //evalPos
