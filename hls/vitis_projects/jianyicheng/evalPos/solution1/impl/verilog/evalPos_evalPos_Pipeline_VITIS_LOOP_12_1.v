// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module evalPos_evalPos_Pipeline_VITIS_LOOP_12_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        board_address0,
        board_ce0,
        board_q0,
        empty,
        conv16_i,
        centralityValue_out,
        centralityValue_out_ap_vld,
        grp_fu_85_p_din0,
        grp_fu_85_p_dout0,
        grp_fu_85_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 6'd1;
parameter    ap_ST_fsm_pp0_stage1 = 6'd2;
parameter    ap_ST_fsm_pp0_stage2 = 6'd4;
parameter    ap_ST_fsm_pp0_stage3 = 6'd8;
parameter    ap_ST_fsm_pp0_stage4 = 6'd16;
parameter    ap_ST_fsm_pp0_stage5 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] board_address0;
output   board_ce0;
input  [31:0] board_q0;
input  [30:0] empty;
input  [31:0] conv16_i;
output  [31:0] centralityValue_out;
output   centralityValue_out_ap_vld;
output  [31:0] grp_fu_85_p_din0;
input  [31:0] grp_fu_85_p_dout0;
output   grp_fu_85_p_ce;

reg ap_idle;
reg board_ce0;
reg centralityValue_out_ap_vld;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_subdone;
reg   [0:0] icmp_ln12_reg_526;
reg    ap_condition_exit_pp0_iter0_stage5;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [31:0] grp_fu_122_p2;
reg   [31:0] reg_139;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_11001;
wire    ap_block_pp0_stage0_11001;
wire    ap_block_pp0_stage5_11001;
wire   [0:0] icmp_ln12_fu_157_p2;
reg   [0:0] icmp_ln12_reg_526_pp0_iter1_reg;
reg   [0:0] icmp_ln12_reg_526_pp0_iter2_reg;
reg   [0:0] icmp_ln12_reg_526_pp0_iter3_reg;
reg   [0:0] icmp_ln12_reg_526_pp0_iter4_reg;
wire   [5:0] trunc_ln21_fu_174_p1;
reg   [3:0] tmp_9_reg_540;
wire   [31:0] sub_ln16_fu_230_p2;
reg   [31:0] sub_ln16_reg_545;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
wire   [0:0] icmp_ln20_fu_254_p2;
reg   [0:0] icmp_ln20_reg_550;
reg   [0:0] icmp_ln20_reg_550_pp0_iter1_reg;
reg   [0:0] icmp_ln20_reg_550_pp0_iter2_reg;
reg   [0:0] icmp_ln20_reg_550_pp0_iter3_reg;
reg   [0:0] icmp_ln20_reg_550_pp0_iter4_reg;
reg   [0:0] icmp_ln20_reg_550_pp0_iter5_reg;
wire   [31:0] zext_ln7_fu_260_p1;
wire   [31:0] benefitMagnitude_fu_264_p2;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] conv2_i_reg_565;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_11001;
reg   [31:0] conv15_i_reg_570;
reg   [31:0] conv15_i_reg_570_pp0_iter1_reg;
reg   [31:0] conv15_i_reg_570_pp0_iter2_reg;
wire   [5:0] grp_fu_178_p2;
reg   [5:0] urem_ln5_reg_575;
wire   [31:0] zext_ln5_fu_270_p1;
wire   [31:0] b_2_fu_326_p3;
reg   [31:0] b_2_reg_585;
reg   [31:0] b_2_reg_585_pp0_iter2_reg;
reg   [31:0] conv_i_reg_592;
wire   [31:0] a_1_fu_386_p3;
reg   [31:0] a_1_reg_597;
wire   [31:0] c_fu_476_p3;
reg   [31:0] c_reg_604;
wire   [31:0] grp_fu_127_p2;
reg   [31:0] mul_i_reg_609;
reg   [31:0] temp_2_reg_614;
reg   [31:0] centralityValue_load_1_reg_619;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln12_fu_169_p1;
wire    ap_block_pp0_stage0;
reg   [31:0] centralityValue_fu_82;
wire   [31:0] centralityValue_2_fu_486_p3;
wire    ap_loop_init;
wire    ap_block_pp0_stage1;
reg   [6:0] i_fu_86;
wire   [6:0] add_ln12_fu_163_p2;
reg   [6:0] ap_sig_allocacmp_i_1;
wire    ap_block_pp0_stage0_01001;
reg   [31:0] grp_fu_122_p0;
reg   [31:0] grp_fu_122_p1;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage2;
reg   [31:0] grp_fu_127_p0;
reg   [31:0] grp_fu_127_p1;
wire    ap_block_pp0_stage3;
reg   [31:0] grp_fu_131_p0;
wire    ap_block_pp0_stage4;
reg   [31:0] grp_fu_134_p0;
reg   [31:0] grp_fu_134_p1;
wire   [3:0] grp_fu_178_p1;
wire   [5:0] mul_ln7_fu_188_p0;
wire   [7:0] mul_ln7_fu_188_p1;
wire   [12:0] mul_ln7_fu_188_p2;
wire   [0:0] trunc_ln16_fu_209_p1;
wire   [30:0] zext_ln16_fu_213_p1;
wire   [30:0] xor_ln16_fu_217_p2;
wire   [31:0] shl_ln_fu_222_p3;
wire   [4:0] tmp_7_fu_236_p4;
wire   [5:0] temp_fu_246_p3;
wire   [31:0] bitcast_ln8_fu_274_p1;
wire   [7:0] tmp_2_fu_278_p4;
wire   [22:0] trunc_ln8_fu_288_p1;
wire   [0:0] icmp_ln8_1_fu_298_p2;
wire   [0:0] icmp_ln8_fu_292_p2;
wire   [0:0] or_ln8_fu_304_p2;
wire   [0:0] grp_fu_134_p2;
wire   [31:0] xor_ln8_fu_316_p2;
wire   [0:0] and_ln8_fu_310_p2;
wire   [31:0] bitcast_ln8_1_fu_322_p1;
wire   [31:0] bitcast_ln6_fu_334_p1;
wire   [7:0] tmp_fu_338_p4;
wire   [22:0] trunc_ln6_fu_348_p1;
wire   [0:0] icmp_ln6_1_fu_358_p2;
wire   [0:0] icmp_ln6_fu_352_p2;
wire   [0:0] or_ln6_fu_364_p2;
wire   [31:0] xor_ln6_fu_376_p2;
wire   [0:0] and_ln6_fu_370_p2;
wire   [31:0] bitcast_ln6_1_fu_382_p1;
wire   [31:0] bitcast_ln9_fu_394_p1;
wire   [31:0] bitcast_ln9_1_fu_411_p1;
wire   [7:0] tmp_4_fu_397_p4;
wire   [22:0] trunc_ln9_fu_407_p1;
wire   [0:0] icmp_ln9_1_fu_434_p2;
wire   [0:0] icmp_ln9_fu_428_p2;
wire   [7:0] tmp_5_fu_414_p4;
wire   [22:0] trunc_ln9_1_fu_424_p1;
wire   [0:0] icmp_ln9_3_fu_452_p2;
wire   [0:0] icmp_ln9_2_fu_446_p2;
wire   [0:0] or_ln9_fu_440_p2;
wire   [0:0] or_ln9_1_fu_458_p2;
wire   [0:0] and_ln9_fu_464_p2;
wire   [0:0] and_ln9_1_fu_470_p2;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage3_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter5_stage0;
reg    ap_idle_pp0_0to4;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0_1to6;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [12:0] mul_ln7_fu_188_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 centralityValue_fu_82 = 32'd0;
#0 i_fu_86 = 7'd0;
#0 ap_done_reg = 1'b0;
end

evalPos_fsub_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_122_p0),
    .din1(grp_fu_122_p1),
    .ce(1'b1),
    .dout(grp_fu_122_p2)
);

evalPos_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_127_p0),
    .din1(grp_fu_127_p1),
    .ce(1'b1),
    .dout(grp_fu_127_p2)
);

evalPos_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_134_p0),
    .din1(grp_fu_134_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_134_p2)
);

evalPos_urem_6ns_4ns_6_10_1 #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 6 ))
urem_6ns_4ns_6_10_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln21_fu_174_p1),
    .din1(grp_fu_178_p1),
    .ce(1'b1),
    .dout(grp_fu_178_p2)
);

evalPos_mul_6ns_8ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 13 ))
mul_6ns_8ns_13_1_1_U6(
    .din0(mul_ln7_fu_188_p0),
    .din1(mul_ln7_fu_188_p1),
    .dout(mul_ln7_fu_188_p2)
);

evalPos_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage5),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage5)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to4 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter5_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to4 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter5_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to4 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter5_stage0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to4 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter5_stage0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to4 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter5_stage0))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            centralityValue_fu_82 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter6 == 1'b1)) begin
            centralityValue_fu_82 <= centralityValue_2_fu_486_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln12_fu_157_p2 == 1'd0))) begin
            i_fu_86 <= add_ln12_fu_163_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_86 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        a_1_reg_597 <= a_1_fu_386_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        b_2_reg_585 <= b_2_fu_326_p3;
        b_2_reg_585_pp0_iter2_reg <= b_2_reg_585;
        conv15_i_reg_570_pp0_iter1_reg <= conv15_i_reg_570;
        conv15_i_reg_570_pp0_iter2_reg <= conv15_i_reg_570_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        c_reg_604 <= c_fu_476_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        centralityValue_load_1_reg_619 <= centralityValue_fu_82;
        icmp_ln20_reg_550 <= icmp_ln20_fu_254_p2;
        icmp_ln20_reg_550_pp0_iter1_reg <= icmp_ln20_reg_550;
        icmp_ln20_reg_550_pp0_iter2_reg <= icmp_ln20_reg_550_pp0_iter1_reg;
        icmp_ln20_reg_550_pp0_iter3_reg <= icmp_ln20_reg_550_pp0_iter2_reg;
        icmp_ln20_reg_550_pp0_iter4_reg <= icmp_ln20_reg_550_pp0_iter3_reg;
        icmp_ln20_reg_550_pp0_iter5_reg <= icmp_ln20_reg_550_pp0_iter4_reg;
        sub_ln16_reg_545[31 : 1] <= sub_ln16_fu_230_p2[31 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        conv15_i_reg_570 <= grp_fu_85_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        conv2_i_reg_565 <= grp_fu_85_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv_i_reg_592 <= grp_fu_85_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln12_reg_526 <= icmp_ln12_fu_157_p2;
        icmp_ln12_reg_526_pp0_iter1_reg <= icmp_ln12_reg_526;
        icmp_ln12_reg_526_pp0_iter2_reg <= icmp_ln12_reg_526_pp0_iter1_reg;
        icmp_ln12_reg_526_pp0_iter3_reg <= icmp_ln12_reg_526_pp0_iter2_reg;
        icmp_ln12_reg_526_pp0_iter4_reg <= icmp_ln12_reg_526_pp0_iter3_reg;
        tmp_9_reg_540 <= {{mul_ln7_fu_188_p2[12:9]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_i_reg_609 <= grp_fu_127_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_139 <= grp_fu_122_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_2_reg_614 <= grp_fu_127_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        urem_ln5_reg_575 <= grp_fu_178_p2;
    end
end

always @ (*) begin
    if (((icmp_ln12_reg_526 == 1'd1) & (1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_condition_exit_pp0_iter0_stage5 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln12_reg_526_pp0_iter4_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter5_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter5_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to4 = 1'b1;
    end else begin
        ap_idle_pp0_0to4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to6 = 1'b1;
    end else begin
        ap_idle_pp0_1to6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 7'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_86;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        board_ce0 = 1'b1;
    end else begin
        board_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln12_reg_526_pp0_iter4_reg == 1'd1))) begin
        centralityValue_out_ap_vld = 1'b1;
    end else begin
        centralityValue_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_122_p0 = centralityValue_fu_82;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        grp_fu_122_p0 = 32'd1075838976;
    end else begin
        grp_fu_122_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_122_p1 = temp_2_reg_614;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_122_p1 = conv_i_reg_592;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_122_p1 = conv2_i_reg_565;
    end else begin
        grp_fu_122_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_127_p0 = mul_i_reg_609;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_127_p0 = conv15_i_reg_570_pp0_iter2_reg;
    end else begin
        grp_fu_127_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_127_p1 = conv16_i;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_127_p1 = c_reg_604;
    end else begin
        grp_fu_127_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_131_p0 = zext_ln5_fu_270_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_131_p0 = benefitMagnitude_fu_264_p2;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_131_p0 = zext_ln7_fu_260_p1;
    end else begin
        grp_fu_131_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_134_p0 = a_1_reg_597;
    end else if ((((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_134_p0 = reg_139;
    end else begin
        grp_fu_134_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_134_p1 = b_2_reg_585_pp0_iter2_reg;
    end else if ((((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_134_p1 = 32'd0;
    end else begin
        grp_fu_134_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to4 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter5_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to6 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_1_fu_386_p3 = ((and_ln6_fu_370_p2[0:0] == 1'b1) ? reg_139 : bitcast_ln6_1_fu_382_p1);

assign add_ln12_fu_163_p2 = (ap_sig_allocacmp_i_1 + 7'd1);

assign and_ln6_fu_370_p2 = (or_ln6_fu_364_p2 & grp_fu_134_p2);

assign and_ln8_fu_310_p2 = (or_ln8_fu_304_p2 & grp_fu_134_p2);

assign and_ln9_1_fu_470_p2 = (grp_fu_134_p2 & and_ln9_fu_464_p2);

assign and_ln9_fu_464_p2 = (or_ln9_fu_440_p2 & or_ln9_1_fu_458_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage5;

assign b_2_fu_326_p3 = ((and_ln8_fu_310_p2[0:0] == 1'b1) ? reg_139 : bitcast_ln8_1_fu_322_p1);

assign benefitMagnitude_fu_264_p2 = (sub_ln16_reg_545 | 32'd1);

assign bitcast_ln6_1_fu_382_p1 = xor_ln6_fu_376_p2;

assign bitcast_ln6_fu_334_p1 = reg_139;

assign bitcast_ln8_1_fu_322_p1 = xor_ln8_fu_316_p2;

assign bitcast_ln8_fu_274_p1 = reg_139;

assign bitcast_ln9_1_fu_411_p1 = b_2_reg_585_pp0_iter2_reg;

assign bitcast_ln9_fu_394_p1 = a_1_reg_597;

assign board_address0 = zext_ln12_fu_169_p1;

assign c_fu_476_p3 = ((and_ln9_1_fu_470_p2[0:0] == 1'b1) ? a_1_reg_597 : b_2_reg_585_pp0_iter2_reg);

assign centralityValue_2_fu_486_p3 = ((icmp_ln20_reg_550_pp0_iter5_reg[0:0] == 1'b1) ? reg_139 : centralityValue_load_1_reg_619);

assign centralityValue_out = centralityValue_fu_82;

assign grp_fu_178_p1 = 6'd6;

assign grp_fu_85_p_ce = 1'b1;

assign grp_fu_85_p_din0 = grp_fu_131_p0;

assign icmp_ln12_fu_157_p2 = ((ap_sig_allocacmp_i_1 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_254_p2 = ((temp_fu_246_p3 == 6'd18) ? 1'b1 : 1'b0);

assign icmp_ln6_1_fu_358_p2 = ((trunc_ln6_fu_348_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln6_fu_352_p2 = ((tmp_fu_338_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln8_1_fu_298_p2 = ((trunc_ln8_fu_288_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_292_p2 = ((tmp_2_fu_278_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln9_1_fu_434_p2 = ((trunc_ln9_fu_407_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln9_2_fu_446_p2 = ((tmp_5_fu_414_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln9_3_fu_452_p2 = ((trunc_ln9_1_fu_424_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_428_p2 = ((tmp_4_fu_397_p4 != 8'd255) ? 1'b1 : 1'b0);

assign mul_ln7_fu_188_p0 = mul_ln7_fu_188_p00;

assign mul_ln7_fu_188_p00 = trunc_ln21_fu_174_p1;

assign mul_ln7_fu_188_p1 = 13'd86;

assign or_ln6_fu_364_p2 = (icmp_ln6_fu_352_p2 | icmp_ln6_1_fu_358_p2);

assign or_ln8_fu_304_p2 = (icmp_ln8_fu_292_p2 | icmp_ln8_1_fu_298_p2);

assign or_ln9_1_fu_458_p2 = (icmp_ln9_3_fu_452_p2 | icmp_ln9_2_fu_446_p2);

assign or_ln9_fu_440_p2 = (icmp_ln9_fu_428_p2 | icmp_ln9_1_fu_434_p2);

assign shl_ln_fu_222_p3 = {{xor_ln16_fu_217_p2}, {1'd0}};

assign sub_ln16_fu_230_p2 = (32'd0 - shl_ln_fu_222_p3);

assign temp_fu_246_p3 = {{tmp_7_fu_236_p4}, {1'd0}};

assign tmp_2_fu_278_p4 = {{bitcast_ln8_fu_274_p1[30:23]}};

assign tmp_4_fu_397_p4 = {{bitcast_ln9_fu_394_p1[30:23]}};

assign tmp_5_fu_414_p4 = {{bitcast_ln9_1_fu_411_p1[30:23]}};

assign tmp_7_fu_236_p4 = {{board_q0[5:1]}};

assign tmp_fu_338_p4 = {{bitcast_ln6_fu_334_p1[30:23]}};

assign trunc_ln16_fu_209_p1 = board_q0[0:0];

assign trunc_ln21_fu_174_p1 = ap_sig_allocacmp_i_1[5:0];

assign trunc_ln6_fu_348_p1 = bitcast_ln6_fu_334_p1[22:0];

assign trunc_ln8_fu_288_p1 = bitcast_ln8_fu_274_p1[22:0];

assign trunc_ln9_1_fu_424_p1 = bitcast_ln9_1_fu_411_p1[22:0];

assign trunc_ln9_fu_407_p1 = bitcast_ln9_fu_394_p1[22:0];

assign xor_ln16_fu_217_p2 = (zext_ln16_fu_213_p1 ^ empty);

assign xor_ln6_fu_376_p2 = (bitcast_ln6_fu_334_p1 ^ 32'd2147483648);

assign xor_ln8_fu_316_p2 = (bitcast_ln8_fu_274_p1 ^ 32'd2147483648);

assign zext_ln12_fu_169_p1 = ap_sig_allocacmp_i_1;

assign zext_ln16_fu_213_p1 = trunc_ln16_fu_209_p1;

assign zext_ln5_fu_270_p1 = urem_ln5_reg_575;

assign zext_ln7_fu_260_p1 = tmp_9_reg_540;

always @ (posedge ap_clk) begin
    sub_ln16_reg_545[0] <= 1'b0;
end

endmodule //evalPos_evalPos_Pipeline_VITIS_LOOP_12_1
