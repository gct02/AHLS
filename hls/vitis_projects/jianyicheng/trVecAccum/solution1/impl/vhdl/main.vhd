-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity main is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of main is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "main_main,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.091000,HLS_SYN_LAT=785935,HLS_SYN_TPT=none,HLS_SYN_MEM=384,HLS_SYN_DSP=0,HLS_SYN_FF=1376,HLS_SYN_LUT=1713,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv17_100 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_const_lv17_10000 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_lv16_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal trunc_ln33_fu_173_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln33_reg_362 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal trunc_ln33_1_fu_177_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln33_1_reg_367 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln38_fu_198_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln39_fu_202_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln39_reg_386 : STD_LOGIC_VECTOR (16 downto 0);
    signal gold_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_reg_405 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_fu_314_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln38_reg_410 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal trunc_ln12_fu_241_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln12_reg_415 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal trunc_ln12_1_fu_245_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln12_1_reg_420 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln17_fu_266_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln18_fu_270_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln18_reg_439 : STD_LOGIC_VECTOR (16 downto 0);
    signal result_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_4_reg_444 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_fu_322_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln17_reg_449 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal array_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal array_ce0 : STD_LOGIC;
    signal array_we0 : STD_LOGIC;
    signal array_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal result_ce0 : STD_LOGIC;
    signal result_we0 : STD_LOGIC;
    signal result_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal gold_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal gold_ce0 : STD_LOGIC;
    signal gold_we0 : STD_LOGIC;
    signal gold_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_ap_start : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_ap_done : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_ap_idle : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_ap_ready : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_array_r_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_array_r_ce0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_array_r_we0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_array_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_result_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_result_ce0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_result_we0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_result_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_gold_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_gold_ce0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_gold_we0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_gold_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_main_Pipeline_loop_1_fu_132_ap_start : STD_LOGIC;
    signal grp_main_Pipeline_loop_1_fu_132_ap_done : STD_LOGIC;
    signal grp_main_Pipeline_loop_1_fu_132_ap_idle : STD_LOGIC;
    signal grp_main_Pipeline_loop_1_fu_132_ap_ready : STD_LOGIC;
    signal grp_main_Pipeline_loop_1_fu_132_array_r_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_main_Pipeline_loop_1_fu_132_array_r_ce0 : STD_LOGIC;
    signal grp_main_Pipeline_loop_1_fu_132_s_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_main_Pipeline_loop_1_fu_132_s_2_out_ap_vld : STD_LOGIC;
    signal grp_main_Pipeline_loop_1_fu_132_grp_fu_454_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_main_Pipeline_loop_1_fu_132_grp_fu_454_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_main_Pipeline_loop_1_fu_132_grp_fu_454_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_main_Pipeline_loop_1_fu_132_grp_fu_454_p_ce : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_ap_start : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_ap_done : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_ap_idle : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_ap_ready : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_result_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_result_ce0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_gold_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_gold_ce0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_check_out : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_check_out_ap_vld : STD_LOGIC;
    signal grp_main_Pipeline_loop_11_fu_148_ap_start : STD_LOGIC;
    signal grp_main_Pipeline_loop_11_fu_148_ap_done : STD_LOGIC;
    signal grp_main_Pipeline_loop_11_fu_148_ap_idle : STD_LOGIC;
    signal grp_main_Pipeline_loop_11_fu_148_ap_ready : STD_LOGIC;
    signal grp_main_Pipeline_loop_11_fu_148_array_r_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_main_Pipeline_loop_11_fu_148_array_r_ce0 : STD_LOGIC;
    signal grp_main_Pipeline_loop_11_fu_148_s_4_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_main_Pipeline_loop_11_fu_148_s_4_out_ap_vld : STD_LOGIC;
    signal grp_main_Pipeline_loop_11_fu_148_grp_fu_454_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_main_Pipeline_loop_11_fu_148_grp_fu_454_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_main_Pipeline_loop_11_fu_148_grp_fu_454_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_main_Pipeline_loop_11_fu_148_grp_fu_454_p_ce : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_main_Pipeline_loop_1_fu_132_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln12_fu_249_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_main_Pipeline_loop_11_fu_148_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal zext_ln33_fu_193_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln33_fu_181_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln38_1_fu_231_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal zext_ln12_fu_261_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln17_1_fu_289_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ii_fu_44 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    signal i_1_fu_48 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal add_ln33_fu_187_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ii_1_fu_76 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    signal i_2_fu_80 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal add_ln12_fu_255_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln49_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln49_fu_302_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_314_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_314_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_314_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_322_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_322_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_322_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_314_ce : STD_LOGIC;
    signal grp_fu_322_ce : STD_LOGIC;
    signal grp_fu_454_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_454_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_454_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_454_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component main_main_Pipeline_VITIS_LOOP_24_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        array_r_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        array_r_ce0 : OUT STD_LOGIC;
        array_r_we0 : OUT STD_LOGIC;
        array_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        result_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        result_ce0 : OUT STD_LOGIC;
        result_we0 : OUT STD_LOGIC;
        result_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        gold_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gold_ce0 : OUT STD_LOGIC;
        gold_we0 : OUT STD_LOGIC;
        gold_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component main_main_Pipeline_loop_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s : IN STD_LOGIC_VECTOR (31 downto 0);
        i_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ii : IN STD_LOGIC_VECTOR (15 downto 0);
        array_r_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        array_r_ce0 : OUT STD_LOGIC;
        array_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        s_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        s_2_out_ap_vld : OUT STD_LOGIC;
        grp_fu_454_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_454_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_454_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_454_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_454_p_ce : OUT STD_LOGIC );
    end component;


    component main_main_Pipeline_VITIS_LOOP_46_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        result_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        result_ce0 : OUT STD_LOGIC;
        result_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        gold_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gold_ce0 : OUT STD_LOGIC;
        gold_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        check_out : OUT STD_LOGIC_VECTOR (16 downto 0);
        check_out_ap_vld : OUT STD_LOGIC );
    end component;


    component main_main_Pipeline_loop_11 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_2 : IN STD_LOGIC_VECTOR (7 downto 0);
        ii_1 : IN STD_LOGIC_VECTOR (15 downto 0);
        array_r_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        array_r_ce0 : OUT STD_LOGIC;
        array_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        s_4_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        s_4_out_ap_vld : OUT STD_LOGIC;
        grp_fu_454_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_454_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_454_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_454_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_454_p_ce : OUT STD_LOGIC );
    end component;


    component main_mac_muladd_9ns_9ns_3ns_16_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component main_fadd_32ns_32ns_32_10_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component main_array_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    array_U : component main_array_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 65536,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => array_address0,
        ce0 => array_ce0,
        we0 => array_we0,
        d0 => grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_array_r_d0,
        q0 => array_q0);

    result_U : component main_array_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 65536,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => result_address0,
        ce0 => result_ce0,
        we0 => result_we0,
        d0 => result_d0,
        q0 => result_q0);

    gold_U : component main_array_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 65536,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => gold_address0,
        ce0 => gold_ce0,
        we0 => gold_we0,
        d0 => gold_d0,
        q0 => gold_q0);

    grp_main_Pipeline_VITIS_LOOP_24_1_fu_122 : component main_main_Pipeline_VITIS_LOOP_24_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_ap_start,
        ap_done => grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_ap_done,
        ap_idle => grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_ap_idle,
        ap_ready => grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_ap_ready,
        array_r_address0 => grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_array_r_address0,
        array_r_ce0 => grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_array_r_ce0,
        array_r_we0 => grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_array_r_we0,
        array_r_d0 => grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_array_r_d0,
        result_address0 => grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_result_address0,
        result_ce0 => grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_result_ce0,
        result_we0 => grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_result_we0,
        result_d0 => grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_result_d0,
        gold_address0 => grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_gold_address0,
        gold_ce0 => grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_gold_ce0,
        gold_we0 => grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_gold_we0,
        gold_d0 => grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_gold_d0);

    grp_main_Pipeline_loop_1_fu_132 : component main_main_Pipeline_loop_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_main_Pipeline_loop_1_fu_132_ap_start,
        ap_done => grp_main_Pipeline_loop_1_fu_132_ap_done,
        ap_idle => grp_main_Pipeline_loop_1_fu_132_ap_idle,
        ap_ready => grp_main_Pipeline_loop_1_fu_132_ap_ready,
        s => s_reg_405,
        i_1 => trunc_ln33_1_reg_367,
        ii => trunc_ln33_reg_362,
        array_r_address0 => grp_main_Pipeline_loop_1_fu_132_array_r_address0,
        array_r_ce0 => grp_main_Pipeline_loop_1_fu_132_array_r_ce0,
        array_r_q0 => array_q0,
        s_2_out => grp_main_Pipeline_loop_1_fu_132_s_2_out,
        s_2_out_ap_vld => grp_main_Pipeline_loop_1_fu_132_s_2_out_ap_vld,
        grp_fu_454_p_din0 => grp_main_Pipeline_loop_1_fu_132_grp_fu_454_p_din0,
        grp_fu_454_p_din1 => grp_main_Pipeline_loop_1_fu_132_grp_fu_454_p_din1,
        grp_fu_454_p_opcode => grp_main_Pipeline_loop_1_fu_132_grp_fu_454_p_opcode,
        grp_fu_454_p_dout0 => grp_fu_454_p2,
        grp_fu_454_p_ce => grp_main_Pipeline_loop_1_fu_132_grp_fu_454_p_ce);

    grp_main_Pipeline_VITIS_LOOP_46_2_fu_141 : component main_main_Pipeline_VITIS_LOOP_46_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_ap_start,
        ap_done => grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_ap_done,
        ap_idle => grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_ap_idle,
        ap_ready => grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_ap_ready,
        result_address0 => grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_result_address0,
        result_ce0 => grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_result_ce0,
        result_q0 => result_q0,
        gold_address0 => grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_gold_address0,
        gold_ce0 => grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_gold_ce0,
        gold_q0 => gold_q0,
        check_out => grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_check_out,
        check_out_ap_vld => grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_check_out_ap_vld);

    grp_main_Pipeline_loop_11_fu_148 : component main_main_Pipeline_loop_11
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_main_Pipeline_loop_11_fu_148_ap_start,
        ap_done => grp_main_Pipeline_loop_11_fu_148_ap_done,
        ap_idle => grp_main_Pipeline_loop_11_fu_148_ap_idle,
        ap_ready => grp_main_Pipeline_loop_11_fu_148_ap_ready,
        s_1 => s_4_reg_444,
        i_2 => trunc_ln12_1_reg_420,
        ii_1 => trunc_ln12_reg_415,
        array_r_address0 => grp_main_Pipeline_loop_11_fu_148_array_r_address0,
        array_r_ce0 => grp_main_Pipeline_loop_11_fu_148_array_r_ce0,
        array_r_q0 => array_q0,
        s_4_out => grp_main_Pipeline_loop_11_fu_148_s_4_out,
        s_4_out_ap_vld => grp_main_Pipeline_loop_11_fu_148_s_4_out_ap_vld,
        grp_fu_454_p_din0 => grp_main_Pipeline_loop_11_fu_148_grp_fu_454_p_din0,
        grp_fu_454_p_din1 => grp_main_Pipeline_loop_11_fu_148_grp_fu_454_p_din1,
        grp_fu_454_p_opcode => grp_main_Pipeline_loop_11_fu_148_grp_fu_454_p_opcode,
        grp_fu_454_p_dout0 => grp_fu_454_p2,
        grp_fu_454_p_ce => grp_main_Pipeline_loop_11_fu_148_grp_fu_454_p_ce);

    mac_muladd_9ns_9ns_3ns_16_4_1_U21 : component main_mac_muladd_9ns_9ns_3ns_16_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        din2_WIDTH => 3,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_314_p0,
        din1 => grp_fu_314_p1,
        din2 => grp_fu_314_p2,
        ce => grp_fu_314_ce,
        dout => grp_fu_314_p3);

    mac_muladd_9ns_9ns_3ns_16_4_1_U22 : component main_mac_muladd_9ns_9ns_3ns_16_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        din2_WIDTH => 3,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_322_p0,
        din1 => grp_fu_322_p1,
        din2 => grp_fu_322_p2,
        ce => grp_fu_322_ce,
        dout => grp_fu_322_p3);

    fadd_32ns_32ns_32_10_full_dsp_1_U23 : component main_fadd_32ns_32ns_32_10_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 10,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_454_p0,
        din1 => grp_fu_454_p1,
        ce => grp_fu_454_ce,
        dout => grp_fu_454_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_ap_ready = ap_const_logic_1)) then 
                    grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln12_fu_249_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_ap_ready = ap_const_logic_1)) then 
                    grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_main_Pipeline_loop_11_fu_148_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_main_Pipeline_loop_11_fu_148_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    grp_main_Pipeline_loop_11_fu_148_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_main_Pipeline_loop_11_fu_148_ap_ready = ap_const_logic_1)) then 
                    grp_main_Pipeline_loop_11_fu_148_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_main_Pipeline_loop_1_fu_132_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_main_Pipeline_loop_1_fu_132_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_main_Pipeline_loop_1_fu_132_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_main_Pipeline_loop_1_fu_132_ap_ready = ap_const_logic_1)) then 
                    grp_main_Pipeline_loop_1_fu_132_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_1_fu_48_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_1_fu_48 <= ap_const_lv9_0;
            elsif (((icmp_ln33_fu_181_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_1_fu_48 <= add_ln33_fu_187_p2;
            end if; 
        end if;
    end process;

    i_2_fu_80_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln33_fu_181_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_2_fu_80 <= ap_const_lv9_0;
            elsif (((icmp_ln12_fu_249_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                i_2_fu_80 <= add_ln12_fu_255_p2;
            end if; 
        end if;
    end process;

    ii_1_fu_76_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln33_fu_181_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                ii_1_fu_76 <= ap_const_lv17_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                ii_1_fu_76 <= add_ln18_reg_439;
            end if; 
        end if;
    end process;

    ii_fu_44_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                ii_fu_44 <= ap_const_lv17_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                ii_fu_44 <= add_ln39_reg_386;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                add_ln17_reg_449 <= grp_fu_322_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                add_ln18_reg_439 <= add_ln18_fu_270_p2;
                trunc_ln12_1_reg_420 <= trunc_ln12_1_fu_245_p1;
                trunc_ln12_reg_415 <= trunc_ln12_fu_241_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                add_ln38_reg_410 <= grp_fu_314_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln39_reg_386 <= add_ln39_fu_202_p2;
                trunc_ln33_1_reg_367 <= trunc_ln33_1_fu_177_p1;
                trunc_ln33_reg_362 <= trunc_ln33_fu_173_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                s_4_reg_444 <= result_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                s_reg_405 <= gold_q0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state11, grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_ap_done, grp_main_Pipeline_loop_1_fu_132_ap_done, grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_ap_done, grp_main_Pipeline_loop_11_fu_148_ap_done, ap_CS_fsm_state2, icmp_ln12_fu_249_p2, ap_CS_fsm_state13, icmp_ln33_fu_181_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln33_fu_181_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_main_Pipeline_loop_1_fu_132_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state8 => 
                if (((icmp_ln12_fu_249_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (grp_main_Pipeline_loop_11_fu_148_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln12_fu_255_p2 <= std_logic_vector(unsigned(i_2_fu_80) + unsigned(ap_const_lv9_1));
    add_ln18_fu_270_p2 <= std_logic_vector(unsigned(ii_1_fu_76) + unsigned(ap_const_lv17_100));
    add_ln33_fu_187_p2 <= std_logic_vector(unsigned(i_1_fu_48) + unsigned(ap_const_lv9_1));
    add_ln39_fu_202_p2 <= std_logic_vector(unsigned(ii_fu_44) + unsigned(ap_const_lv17_100));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(grp_main_Pipeline_loop_11_fu_148_ap_done)
    begin
        if ((grp_main_Pipeline_loop_11_fu_148_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_ap_done)
    begin
        if ((grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_ap_done)
    begin
        if ((grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_main_Pipeline_loop_1_fu_132_ap_done)
    begin
        if ((grp_main_Pipeline_loop_1_fu_132_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln49_fu_302_p3),32));

    array_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state11, grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_array_r_address0, grp_main_Pipeline_loop_1_fu_132_array_r_address0, grp_main_Pipeline_loop_11_fu_148_array_r_address0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            array_address0 <= grp_main_Pipeline_loop_11_fu_148_array_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            array_address0 <= grp_main_Pipeline_loop_1_fu_132_array_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            array_address0 <= grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_array_r_address0;
        else 
            array_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    array_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state11, grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_array_r_ce0, grp_main_Pipeline_loop_1_fu_132_array_r_ce0, grp_main_Pipeline_loop_11_fu_148_array_r_ce0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            array_ce0 <= grp_main_Pipeline_loop_11_fu_148_array_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            array_ce0 <= grp_main_Pipeline_loop_1_fu_132_array_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            array_ce0 <= grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_array_r_ce0;
        else 
            array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    array_we0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_array_r_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            array_we0 <= grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_array_r_we0;
        else 
            array_we0 <= ap_const_logic_0;
        end if; 
    end process;


    gold_address0_assign_proc : process(ap_CS_fsm_state3, grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_gold_address0, grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_gold_address0, ap_CS_fsm_state2, ap_CS_fsm_state13, zext_ln33_fu_193_p1, zext_ln38_1_fu_231_p1, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            gold_address0 <= zext_ln38_1_fu_231_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            gold_address0 <= zext_ln33_fu_193_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            gold_address0 <= grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_gold_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            gold_address0 <= grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_gold_address0;
        else 
            gold_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gold_ce0_assign_proc : process(ap_CS_fsm_state3, grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_gold_ce0, grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_gold_ce0, ap_CS_fsm_state2, ap_CS_fsm_state13, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            gold_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            gold_ce0 <= grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_gold_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            gold_ce0 <= grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_gold_ce0;
        else 
            gold_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    gold_d0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_gold_d0, grp_main_Pipeline_loop_1_fu_132_s_2_out, ap_CS_fsm_state2, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            gold_d0 <= grp_main_Pipeline_loop_1_fu_132_s_2_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            gold_d0 <= grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_gold_d0;
        else 
            gold_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gold_we0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_gold_we0, ap_CS_fsm_state2, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            gold_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            gold_we0 <= grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_gold_we0;
        else 
            gold_we0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_314_ce_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state6, grp_main_Pipeline_loop_1_fu_132_ap_done, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_main_Pipeline_loop_1_fu_132_ap_done = ap_const_logic_1)))) then 
            grp_fu_314_ce <= ap_const_logic_1;
        else 
            grp_fu_314_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_314_p0 <= zext_ln38_fu_198_p1(9 - 1 downto 0);
    grp_fu_314_p1 <= zext_ln38_fu_198_p1(9 - 1 downto 0);
    grp_fu_314_p2 <= ap_const_lv16_7(3 - 1 downto 0);

    grp_fu_322_ce_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state11, grp_main_Pipeline_loop_11_fu_148_ap_done, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (grp_main_Pipeline_loop_11_fu_148_ap_done = ap_const_logic_1)))) then 
            grp_fu_322_ce <= ap_const_logic_1;
        else 
            grp_fu_322_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_322_p0 <= zext_ln17_fu_266_p1(9 - 1 downto 0);
    grp_fu_322_p1 <= zext_ln17_fu_266_p1(9 - 1 downto 0);
    grp_fu_322_p2 <= ap_const_lv16_7(3 - 1 downto 0);

    grp_fu_454_ce_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state11, grp_main_Pipeline_loop_1_fu_132_grp_fu_454_p_ce, grp_main_Pipeline_loop_11_fu_148_grp_fu_454_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_454_ce <= grp_main_Pipeline_loop_11_fu_148_grp_fu_454_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_454_ce <= grp_main_Pipeline_loop_1_fu_132_grp_fu_454_p_ce;
        else 
            grp_fu_454_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_454_p0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state11, grp_main_Pipeline_loop_1_fu_132_grp_fu_454_p_din0, grp_main_Pipeline_loop_11_fu_148_grp_fu_454_p_din0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_454_p0 <= grp_main_Pipeline_loop_11_fu_148_grp_fu_454_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_454_p0 <= grp_main_Pipeline_loop_1_fu_132_grp_fu_454_p_din0;
        else 
            grp_fu_454_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_454_p1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state11, grp_main_Pipeline_loop_1_fu_132_grp_fu_454_p_din1, grp_main_Pipeline_loop_11_fu_148_grp_fu_454_p_din1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_454_p1 <= grp_main_Pipeline_loop_11_fu_148_grp_fu_454_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_454_p1 <= grp_main_Pipeline_loop_1_fu_132_grp_fu_454_p_din1;
        else 
            grp_fu_454_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_ap_start <= grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_ap_start_reg;
    grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_ap_start <= grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_ap_start_reg;
    grp_main_Pipeline_loop_11_fu_148_ap_start <= grp_main_Pipeline_loop_11_fu_148_ap_start_reg;
    grp_main_Pipeline_loop_1_fu_132_ap_start <= grp_main_Pipeline_loop_1_fu_132_ap_start_reg;
    icmp_ln12_fu_249_p2 <= "1" when (i_2_fu_80 = ap_const_lv9_100) else "0";
    icmp_ln33_fu_181_p2 <= "1" when (i_1_fu_48 = ap_const_lv9_100) else "0";
    icmp_ln49_fu_296_p2 <= "1" when (grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_check_out = ap_const_lv17_10000) else "0";

    result_address0_assign_proc : process(ap_CS_fsm_state8, grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_result_address0, grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_result_address0, ap_CS_fsm_state2, icmp_ln12_fu_249_p2, ap_CS_fsm_state13, zext_ln12_fu_261_p1, zext_ln17_1_fu_289_p1, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            result_address0 <= zext_ln17_1_fu_289_p1(16 - 1 downto 0);
        elsif (((icmp_ln12_fu_249_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            result_address0 <= zext_ln12_fu_261_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            result_address0 <= grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_result_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            result_address0 <= grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_result_address0;
        else 
            result_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    result_ce0_assign_proc : process(ap_CS_fsm_state8, grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_result_ce0, grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_result_ce0, ap_CS_fsm_state2, icmp_ln12_fu_249_p2, ap_CS_fsm_state13, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((icmp_ln12_fu_249_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            result_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            result_ce0 <= grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_result_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            result_ce0 <= grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_result_ce0;
        else 
            result_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    result_d0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_result_d0, grp_main_Pipeline_loop_11_fu_148_s_4_out, ap_CS_fsm_state2, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            result_d0 <= grp_main_Pipeline_loop_11_fu_148_s_4_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            result_d0 <= grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_result_d0;
        else 
            result_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    result_we0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_result_we0, ap_CS_fsm_state2, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            result_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            result_we0 <= grp_main_Pipeline_VITIS_LOOP_24_1_fu_122_result_we0;
        else 
            result_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln49_fu_302_p3 <= 
        ap_const_lv17_0 when (icmp_ln49_fu_296_p2(0) = '1') else 
        grp_main_Pipeline_VITIS_LOOP_46_2_fu_141_check_out;
    trunc_ln12_1_fu_245_p1 <= i_2_fu_80(8 - 1 downto 0);
    trunc_ln12_fu_241_p1 <= ii_1_fu_76(16 - 1 downto 0);
    trunc_ln33_1_fu_177_p1 <= i_1_fu_48(8 - 1 downto 0);
    trunc_ln33_fu_173_p1 <= ii_fu_44(16 - 1 downto 0);
    zext_ln12_fu_261_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_2_fu_80),64));
    zext_ln17_1_fu_289_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln17_reg_449),64));
    zext_ln17_fu_266_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_2_fu_80),16));
    zext_ln33_fu_193_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_fu_48),64));
    zext_ln38_1_fu_231_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln38_reg_410),64));
    zext_ln38_fu_198_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_fu_48),16));
end behav;
