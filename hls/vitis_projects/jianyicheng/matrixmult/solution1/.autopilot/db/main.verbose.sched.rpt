

================================================================
== Vitis HLS Report for 'main'
================================================================
* Date:           Mon Aug 12 18:56:10 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        matrixmult
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  5.00 ns|  6.312 ns|     1.35 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +----------+----------+-----------+-----------+----------+----------+---------+
    |   Latency (cycles)  |   Latency (absolute)  |       Interval      | Pipeline|
    |    min   |    max   |    min    |    max    |    min   |    max   |   Type  |
    +----------+----------+-----------+-----------+----------+----------+---------+
    |  11667238|  11667238|  73.644 ms|  73.644 ms|  11667239|  11667239|       no|
    +----------+----------+-----------+-----------+----------+----------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%A_0 = alloca i64 1" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:583]   --->   Operation 5 'alloca' 'A_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%A_1 = alloca i64 1" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:583]   --->   Operation 6 'alloca' 'A_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%A_2 = alloca i64 1" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:583]   --->   Operation 7 'alloca' 'A_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%A_3 = alloca i64 1" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:583]   --->   Operation 8 'alloca' 'A_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%A_4 = alloca i64 1" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:583]   --->   Operation 9 'alloca' 'A_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%A_5 = alloca i64 1" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:583]   --->   Operation 10 'alloca' 'A_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%A_6 = alloca i64 1" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:584]   --->   Operation 11 'alloca' 'A_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%A_7 = alloca i64 1" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:584]   --->   Operation 12 'alloca' 'A_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%B_0 = alloca i64 1" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:585]   --->   Operation 13 'alloca' 'B_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%B_1 = alloca i64 1" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:585]   --->   Operation 14 'alloca' 'B_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%B_2 = alloca i64 1" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:585]   --->   Operation 15 'alloca' 'B_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%B_3 = alloca i64 1" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:585]   --->   Operation 16 'alloca' 'B_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%B_4 = alloca i64 1" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:585]   --->   Operation 17 'alloca' 'B_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%B_5 = alloca i64 1" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:585]   --->   Operation 18 'alloca' 'B_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%B_6 = alloca i64 1" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:586]   --->   Operation 19 'alloca' 'B_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%B_7 = alloca i64 1" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:586]   --->   Operation 20 'alloca' 'B_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%C_0 = alloca i64 1" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:587]   --->   Operation 21 'alloca' 'C_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%C_1 = alloca i64 1" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:587]   --->   Operation 22 'alloca' 'C_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%C_2 = alloca i64 1" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:587]   --->   Operation 23 'alloca' 'C_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%C_3 = alloca i64 1" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:587]   --->   Operation 24 'alloca' 'C_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%C_4 = alloca i64 1" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:587]   --->   Operation 25 'alloca' 'C_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%C_5 = alloca i64 1" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:587]   --->   Operation 26 'alloca' 'C_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%C_6 = alloca i64 1" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:587]   --->   Operation 27 'alloca' 'C_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%C_7 = alloca i64 1" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:587]   --->   Operation 28 'alloca' 'C_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [2/2] (0.00ns)   --->   "%call_ln0 = call void @main_Pipeline_VITIS_LOOP_590_1, i32 %A_0, i32 %A_1, i32 %A_2, i32 %A_3, i32 %A_4, i32 %A_5, i32 %A_6, i32 %A_7, i32 %B_0, i32 %B_1, i32 %B_2, i32 %B_3, i32 %B_4, i32 %B_5, i32 %B_6, i32 %B_7, i16 %lfsr"   --->   Operation 29 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 30 [2/2] (0.00ns)   --->   "%call_ln0 = call void @main_Pipeline_VITIS_LOOP_610_2, i32 %C_0, i32 %C_1, i32 %C_2, i32 %C_3, i32 %C_4, i32 %C_5, i32 %C_6, i32 %C_7"   --->   Operation 30 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 0.00>
ST_2 : Operation 31 [1/2] (0.00ns)   --->   "%call_ln0 = call void @main_Pipeline_VITIS_LOOP_590_1, i32 %A_0, i32 %A_1, i32 %A_2, i32 %A_3, i32 %A_4, i32 %A_5, i32 %A_6, i32 %A_7, i32 %B_0, i32 %B_1, i32 %B_2, i32 %B_3, i32 %B_4, i32 %B_5, i32 %B_6, i32 %B_7, i16 %lfsr"   --->   Operation 31 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 32 [1/2] (0.00ns)   --->   "%call_ln0 = call void @main_Pipeline_VITIS_LOOP_610_2, i32 %C_0, i32 %C_1, i32 %C_2, i32 %C_3, i32 %C_4, i32 %C_5, i32 %C_6, i32 %C_7"   --->   Operation 32 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 33 [2/2] (0.00ns)   --->   "%call_ln621 = call void @matrixmult, i32 %A_0, i32 %A_1, i32 %A_2, i32 %A_3, i32 %A_4, i32 %A_5, i32 %A_6, i32 %A_7, i32 %B_0, i32 %B_1, i32 %B_2, i32 %B_3, i32 %B_4, i32 %B_5, i32 %B_6, i32 %B_7, i32 %C_0, i32 %C_1, i32 %C_2, i32 %C_3, i32 %C_4, i32 %C_5, i32 %C_6, i32 %C_7" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:621]   --->   Operation 33 'call' 'call_ln621' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 34 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 0"   --->   Operation 34 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 35 [1/1] (0.00ns)   --->   "%spectopmodule_ln582 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_17" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:582]   --->   Operation 35 'spectopmodule' 'spectopmodule_ln582' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 36 [1/2] (0.00ns)   --->   "%call_ln621 = call void @matrixmult, i32 %A_0, i32 %A_1, i32 %A_2, i32 %A_3, i32 %A_4, i32 %A_5, i32 %A_6, i32 %A_7, i32 %B_0, i32 %B_1, i32 %B_2, i32 %B_3, i32 %B_4, i32 %B_5, i32 %B_6, i32 %B_7, i32 %C_0, i32 %C_1, i32 %C_2, i32 %C_3, i32 %C_4, i32 %C_5, i32 %C_6, i32 %C_7" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:621]   --->   Operation 36 'call' 'call_ln621' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 37 [1/1] (0.00ns)   --->   "%ret_ln624 = ret i32 0" [benchmarks/jianyicheng/matrixmult/src/matrixmult.cpp:624]   --->   Operation 37 'ret' 'ret_ln624' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5.000ns, clock uncertainty: 1.350ns.

 <State 1>: 0.000ns
The critical path consists of the following:

 <State 2>: 0.000ns
The critical path consists of the following:

 <State 3>: 0.000ns
The critical path consists of the following:

 <State 4>: 0.000ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
