// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module matrixmult_matrixmult_Pipeline_VITIS_LOOP_493_56 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        zext_ln437_1,
        A_7_address0,
        A_7_ce0,
        A_7_q0,
        B_6_address0,
        B_6_ce0,
        B_6_q0,
        s_7_18_out,
        s_7_18_out_ap_vld,
        grp_fu_3756_p_din0,
        grp_fu_3756_p_din1,
        grp_fu_3756_p_opcode,
        grp_fu_3756_p_dout0,
        grp_fu_3756_p_ce,
        grp_fu_3760_p_din0,
        grp_fu_3760_p_din1,
        grp_fu_3760_p_dout0,
        grp_fu_3760_p_ce,
        grp_fu_3764_p_din0,
        grp_fu_3764_p_din1,
        grp_fu_3764_p_opcode,
        grp_fu_3764_p_dout0,
        grp_fu_3764_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 6'd1;
parameter    ap_ST_fsm_pp0_stage1 = 6'd2;
parameter    ap_ST_fsm_pp0_stage2 = 6'd4;
parameter    ap_ST_fsm_pp0_stage3 = 6'd8;
parameter    ap_ST_fsm_pp0_stage4 = 6'd16;
parameter    ap_ST_fsm_pp0_stage5 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [4:0] zext_ln437_1;
output  [12:0] A_7_address0;
output   A_7_ce0;
input  [31:0] A_7_q0;
output  [12:0] B_6_address0;
output   B_6_ce0;
input  [31:0] B_6_q0;
output  [31:0] s_7_18_out;
output   s_7_18_out_ap_vld;
output  [31:0] grp_fu_3756_p_din0;
output  [31:0] grp_fu_3756_p_din1;
output  [1:0] grp_fu_3756_p_opcode;
input  [31:0] grp_fu_3756_p_dout0;
output   grp_fu_3756_p_ce;
output  [31:0] grp_fu_3760_p_din0;
output  [31:0] grp_fu_3760_p_din1;
input  [31:0] grp_fu_3760_p_dout0;
output   grp_fu_3760_p_ce;
output  [31:0] grp_fu_3764_p_din0;
output  [31:0] grp_fu_3764_p_din1;
output  [4:0] grp_fu_3764_p_opcode;
input  [0:0] grp_fu_3764_p_dout0;
output   grp_fu_3764_p_ce;

reg ap_idle;
reg A_7_ce0;
reg B_6_ce0;
reg s_7_18_out_ap_vld;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_subdone;
reg   [0:0] icmp_ln493_reg_285;
reg    ap_condition_exit_pp0_iter0_stage5;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln493_fu_133_p2;
wire   [31:0] temp_a_fu_166_p1;
reg   [31:0] temp_a_reg_299;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] B_6_load_reg_305;
wire   [0:0] icmp_ln496_fu_185_p2;
reg   [0:0] icmp_ln496_reg_310;
wire   [0:0] icmp_ln496_1_fu_191_p2;
reg   [0:0] icmp_ln496_1_reg_315;
wire   [0:0] icmp_ln496_2_fu_211_p2;
reg   [0:0] icmp_ln496_2_reg_320;
wire   [0:0] icmp_ln496_3_fu_217_p2;
reg   [0:0] icmp_ln496_3_reg_325;
wire   [31:0] temp_b_fu_223_p1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] tmp_40_reg_336;
reg   [0:0] tmp_42_reg_341;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_11001;
wire   [0:0] or_ln496_2_fu_246_p2;
reg   [0:0] or_ln496_2_reg_346;
wire    ap_block_pp0_stage5_11001;
reg   [31:0] mul_reg_351;
reg   [31:0] s_7_load_3_reg_356;
reg   [31:0] s_7_5_reg_362;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln494_fu_155_p1;
wire    ap_block_pp0_stage0;
reg   [31:0] s_7_fu_56;
wire   [31:0] s_7_6_fu_256_p3;
wire    ap_block_pp0_stage5;
wire    ap_loop_init;
reg   [13:0] j_fu_60;
wire   [13:0] add_ln493_fu_139_p2;
reg   [13:0] ap_sig_allocacmp_j_15;
wire    ap_block_pp0_stage5_01001;
wire    ap_block_pp0_stage2;
reg   [31:0] grp_fu_111_p0;
wire    ap_block_pp0_stage1;
wire   [12:0] trunc_ln493_fu_145_p1;
wire   [12:0] zext_ln437_1_cast_fu_116_p1;
wire   [12:0] add_ln494_fu_149_p2;
wire   [7:0] tmp_s_fu_171_p4;
wire   [22:0] trunc_ln496_fu_181_p1;
wire   [7:0] tmp_41_fu_197_p4;
wire   [22:0] trunc_ln496_1_fu_207_p1;
wire   [0:0] or_ln496_fu_228_p2;
wire   [0:0] or_ln496_1_fu_237_p2;
wire   [0:0] and_ln496_fu_232_p2;
wire   [0:0] and_ln496_1_fu_241_p2;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage2_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [5:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage0_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 s_7_fu_56 = 32'd0;
#0 j_fu_60 = 14'd0;
#0 ap_done_reg = 1'b0;
end

matrixmult_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage5),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage5)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln493_fu_133_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_60 <= add_ln493_fu_139_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_60 <= 14'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        s_7_fu_56 <= 32'd1036831949;
    end else if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        s_7_fu_56 <= s_7_6_fu_256_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        B_6_load_reg_305 <= B_6_q0;
        icmp_ln496_1_reg_315 <= icmp_ln496_1_fu_191_p2;
        icmp_ln496_2_reg_320 <= icmp_ln496_2_fu_211_p2;
        icmp_ln496_3_reg_325 <= icmp_ln496_3_fu_217_p2;
        icmp_ln496_reg_310 <= icmp_ln496_fu_185_p2;
        temp_a_reg_299 <= temp_a_fu_166_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln493_reg_285 <= icmp_ln493_fu_133_p2;
        s_7_load_3_reg_356 <= s_7_fu_56;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul_reg_351 <= grp_fu_3760_p_dout0;
        or_ln496_2_reg_346 <= or_ln496_2_fu_246_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        s_7_5_reg_362 <= grp_fu_3756_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_40_reg_336 <= grp_fu_3764_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_42_reg_341 <= grp_fu_3764_p_dout0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_7_ce0 = 1'b1;
    end else begin
        A_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_6_ce0 = 1'b1;
    end else begin
        B_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln493_reg_285 == 1'd1) & (1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_condition_exit_pp0_iter0_stage5 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_j_15 = 14'd0;
    end else begin
        ap_sig_allocacmp_j_15 = j_fu_60;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_111_p0 = temp_b_fu_223_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_111_p0 = temp_a_fu_166_p1;
        end else begin
            grp_fu_111_p0 = 'bx;
        end
    end else begin
        grp_fu_111_p0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln493_reg_285 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        s_7_18_out_ap_vld = 1'b1;
    end else begin
        s_7_18_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_7_address0 = zext_ln494_fu_155_p1;

assign B_6_address0 = zext_ln494_fu_155_p1;

assign add_ln493_fu_139_p2 = (ap_sig_allocacmp_j_15 + 14'd1);

assign add_ln494_fu_149_p2 = (trunc_ln493_fu_145_p1 + zext_ln437_1_cast_fu_116_p1);

assign and_ln496_1_fu_241_p2 = (tmp_42_reg_341 & or_ln496_1_fu_237_p2);

assign and_ln496_fu_232_p2 = (tmp_40_reg_336 & or_ln496_fu_228_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage5;

assign grp_fu_3756_p_ce = 1'b1;

assign grp_fu_3756_p_din0 = s_7_fu_56;

assign grp_fu_3756_p_din1 = mul_reg_351;

assign grp_fu_3756_p_opcode = 2'd0;

assign grp_fu_3760_p_ce = 1'b1;

assign grp_fu_3760_p_din0 = temp_a_reg_299;

assign grp_fu_3760_p_din1 = temp_b_fu_223_p1;

assign grp_fu_3764_p_ce = 1'b1;

assign grp_fu_3764_p_din0 = grp_fu_111_p0;

assign grp_fu_3764_p_din1 = 32'd0;

assign grp_fu_3764_p_opcode = 5'd1;

assign icmp_ln493_fu_133_p2 = ((ap_sig_allocacmp_j_15 == 14'd8192) ? 1'b1 : 1'b0);

assign icmp_ln496_1_fu_191_p2 = ((trunc_ln496_fu_181_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln496_2_fu_211_p2 = ((tmp_41_fu_197_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln496_3_fu_217_p2 = ((trunc_ln496_1_fu_207_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln496_fu_185_p2 = ((tmp_s_fu_171_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln496_1_fu_237_p2 = (icmp_ln496_3_reg_325 | icmp_ln496_2_reg_320);

assign or_ln496_2_fu_246_p2 = (and_ln496_fu_232_p2 | and_ln496_1_fu_241_p2);

assign or_ln496_fu_228_p2 = (icmp_ln496_reg_310 | icmp_ln496_1_reg_315);

assign s_7_18_out = s_7_fu_56;

assign s_7_6_fu_256_p3 = ((or_ln496_2_reg_346[0:0] == 1'b1) ? s_7_load_3_reg_356 : s_7_5_reg_362);

assign temp_a_fu_166_p1 = A_7_q0;

assign temp_b_fu_223_p1 = B_6_load_reg_305;

assign tmp_41_fu_197_p4 = {{B_6_q0[30:23]}};

assign tmp_s_fu_171_p4 = {{A_7_q0[30:23]}};

assign trunc_ln493_fu_145_p1 = ap_sig_allocacmp_j_15[12:0];

assign trunc_ln496_1_fu_207_p1 = B_6_q0[22:0];

assign trunc_ln496_fu_181_p1 = A_7_q0[22:0];

assign zext_ln437_1_cast_fu_116_p1 = zext_ln437_1;

assign zext_ln494_fu_155_p1 = add_ln494_fu_149_p2;

endmodule //matrixmult_matrixmult_Pipeline_VITIS_LOOP_493_56
