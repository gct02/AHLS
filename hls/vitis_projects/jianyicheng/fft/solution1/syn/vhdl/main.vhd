-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity main is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of main is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "main_main,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.312000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=34,HLS_SYN_DSP=0,HLS_SYN_FF=6496,HLS_SYN_LUT=9898,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000100000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (18 downto 0) := "0000000010000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (18 downto 0) := "0000000100000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (18 downto 0) := "0000001000000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (18 downto 0) := "0000010000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (18 downto 0) := "0000100000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (18 downto 0) := "0001000000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (18 downto 0) := "0010000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (18 downto 0) := "0100000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_p_rand_fu_304_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_337 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal grp_fu_334_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_341 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_1_reg_476 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln373_fu_369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln373_reg_482 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln374_fu_375_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln375_fu_380_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln376_fu_385_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln377_fu_390_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln378_fu_395_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln379_fu_400_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln380_fu_405_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln373_fu_415_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln373_reg_521 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln381_fu_419_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln382_fu_429_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln383_fu_434_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln384_fu_439_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln385_fu_444_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln386_fu_449_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln387_fu_454_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln388_fu_459_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln389_fu_464_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state11 : STD_LOGIC;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal X_R_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal X_R_0_ce0 : STD_LOGIC;
    signal X_R_0_we0 : STD_LOGIC;
    signal X_R_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_R_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_R_0_ce1 : STD_LOGIC;
    signal X_R_0_we1 : STD_LOGIC;
    signal X_R_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_R_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal X_R_1_ce0 : STD_LOGIC;
    signal X_R_1_we0 : STD_LOGIC;
    signal X_R_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_R_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_R_1_ce1 : STD_LOGIC;
    signal X_R_1_we1 : STD_LOGIC;
    signal X_R_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_R_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal X_R_2_ce0 : STD_LOGIC;
    signal X_R_2_we0 : STD_LOGIC;
    signal X_R_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_R_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_R_2_ce1 : STD_LOGIC;
    signal X_R_2_we1 : STD_LOGIC;
    signal X_R_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_R_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal X_R_3_ce0 : STD_LOGIC;
    signal X_R_3_we0 : STD_LOGIC;
    signal X_R_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_R_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_R_3_ce1 : STD_LOGIC;
    signal X_R_3_we1 : STD_LOGIC;
    signal X_R_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_R_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal X_R_4_ce0 : STD_LOGIC;
    signal X_R_4_we0 : STD_LOGIC;
    signal X_R_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_R_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_R_4_ce1 : STD_LOGIC;
    signal X_R_4_we1 : STD_LOGIC;
    signal X_R_4_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_R_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal X_R_5_ce0 : STD_LOGIC;
    signal X_R_5_we0 : STD_LOGIC;
    signal X_R_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_R_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_R_5_ce1 : STD_LOGIC;
    signal X_R_5_we1 : STD_LOGIC;
    signal X_R_5_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_R_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal X_R_6_ce0 : STD_LOGIC;
    signal X_R_6_we0 : STD_LOGIC;
    signal X_R_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_R_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_R_6_ce1 : STD_LOGIC;
    signal X_R_6_we1 : STD_LOGIC;
    signal X_R_6_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_R_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal X_R_7_ce0 : STD_LOGIC;
    signal X_R_7_we0 : STD_LOGIC;
    signal X_R_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_R_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_R_7_ce1 : STD_LOGIC;
    signal X_R_7_we1 : STD_LOGIC;
    signal X_R_7_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_I_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal X_I_0_ce0 : STD_LOGIC;
    signal X_I_0_we0 : STD_LOGIC;
    signal X_I_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_I_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_I_0_ce1 : STD_LOGIC;
    signal X_I_0_we1 : STD_LOGIC;
    signal X_I_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_I_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal X_I_1_ce0 : STD_LOGIC;
    signal X_I_1_we0 : STD_LOGIC;
    signal X_I_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_I_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_I_1_ce1 : STD_LOGIC;
    signal X_I_1_we1 : STD_LOGIC;
    signal X_I_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_I_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal X_I_2_ce0 : STD_LOGIC;
    signal X_I_2_we0 : STD_LOGIC;
    signal X_I_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_I_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_I_2_ce1 : STD_LOGIC;
    signal X_I_2_we1 : STD_LOGIC;
    signal X_I_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_I_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal X_I_3_ce0 : STD_LOGIC;
    signal X_I_3_we0 : STD_LOGIC;
    signal X_I_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_I_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_I_3_ce1 : STD_LOGIC;
    signal X_I_3_we1 : STD_LOGIC;
    signal X_I_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_I_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal X_I_4_ce0 : STD_LOGIC;
    signal X_I_4_we0 : STD_LOGIC;
    signal X_I_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_I_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_I_4_ce1 : STD_LOGIC;
    signal X_I_4_we1 : STD_LOGIC;
    signal X_I_4_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_I_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal X_I_5_ce0 : STD_LOGIC;
    signal X_I_5_we0 : STD_LOGIC;
    signal X_I_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_I_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_I_5_ce1 : STD_LOGIC;
    signal X_I_5_we1 : STD_LOGIC;
    signal X_I_5_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_I_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal X_I_6_ce0 : STD_LOGIC;
    signal X_I_6_we0 : STD_LOGIC;
    signal X_I_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_I_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_I_6_ce1 : STD_LOGIC;
    signal X_I_6_we1 : STD_LOGIC;
    signal X_I_6_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_I_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal X_I_7_ce0 : STD_LOGIC;
    signal X_I_7_we0 : STD_LOGIC;
    signal X_I_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_I_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal X_I_7_ce1 : STD_LOGIC;
    signal X_I_7_we1 : STD_LOGIC;
    signal X_I_7_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_rand_fu_304_ap_start : STD_LOGIC;
    signal grp_p_rand_fu_304_ap_done : STD_LOGIC;
    signal grp_p_rand_fu_304_ap_idle : STD_LOGIC;
    signal grp_p_rand_fu_304_ap_ready : STD_LOGIC;
    signal grp_fft_fu_310_ap_start : STD_LOGIC;
    signal grp_fft_fu_310_ap_done : STD_LOGIC;
    signal grp_fft_fu_310_ap_idle : STD_LOGIC;
    signal grp_fft_fu_310_ap_ready : STD_LOGIC;
    signal grp_fft_fu_310_X_R_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_R_0_ce0 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_0_we0 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_R_0_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_R_0_ce1 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_0_we1 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_R_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_R_1_ce0 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_1_we0 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_R_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_R_1_ce1 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_1_we1 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_R_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_R_2_ce0 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_2_we0 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_R_2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_R_2_ce1 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_2_we1 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_R_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_R_3_ce0 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_3_we0 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_R_3_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_R_3_ce1 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_3_we1 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_R_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_R_4_ce0 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_4_we0 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_R_4_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_R_4_ce1 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_4_we1 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_4_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_R_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_R_5_ce0 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_5_we0 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_R_5_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_R_5_ce1 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_5_we1 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_5_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_R_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_R_6_ce0 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_6_we0 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_R_6_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_R_6_ce1 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_6_we1 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_6_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_R_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_R_7_ce0 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_7_we0 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_R_7_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_R_7_ce1 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_7_we1 : STD_LOGIC;
    signal grp_fft_fu_310_X_R_7_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_I_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_I_0_ce0 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_0_we0 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_I_0_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_I_0_ce1 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_0_we1 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_I_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_I_1_ce0 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_1_we0 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_I_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_I_1_ce1 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_1_we1 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_I_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_I_2_ce0 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_2_we0 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_I_2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_I_2_ce1 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_2_we1 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_I_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_I_3_ce0 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_3_we0 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_I_3_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_I_3_ce1 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_3_we1 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_I_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_I_4_ce0 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_4_we0 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_I_4_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_I_4_ce1 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_4_we1 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_4_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_I_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_I_5_ce0 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_5_we0 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_I_5_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_I_5_ce1 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_5_we1 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_5_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_I_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_I_6_ce0 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_6_we0 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_I_6_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_I_6_ce1 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_6_we1 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_6_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_I_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_I_7_ce0 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_7_we0 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_fu_310_X_I_7_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_310_X_I_7_ce1 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_7_we1 : STD_LOGIC;
    signal grp_fft_fu_310_X_I_7_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_rand_fu_304_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_fft_fu_310_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal i_fu_44 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    signal add_ln373_fu_410_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_334_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component main_p_rand IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component main_fft IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_R_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_0_ce0 : OUT STD_LOGIC;
        X_R_0_we0 : OUT STD_LOGIC;
        X_R_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_R_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_R_0_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_0_ce1 : OUT STD_LOGIC;
        X_R_0_we1 : OUT STD_LOGIC;
        X_R_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_R_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_R_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_1_ce0 : OUT STD_LOGIC;
        X_R_1_we0 : OUT STD_LOGIC;
        X_R_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_R_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_R_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_1_ce1 : OUT STD_LOGIC;
        X_R_1_we1 : OUT STD_LOGIC;
        X_R_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_R_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_R_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_2_ce0 : OUT STD_LOGIC;
        X_R_2_we0 : OUT STD_LOGIC;
        X_R_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_R_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_R_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_2_ce1 : OUT STD_LOGIC;
        X_R_2_we1 : OUT STD_LOGIC;
        X_R_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_R_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_R_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_3_ce0 : OUT STD_LOGIC;
        X_R_3_we0 : OUT STD_LOGIC;
        X_R_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_R_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_R_3_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_3_ce1 : OUT STD_LOGIC;
        X_R_3_we1 : OUT STD_LOGIC;
        X_R_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_R_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_R_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_4_ce0 : OUT STD_LOGIC;
        X_R_4_we0 : OUT STD_LOGIC;
        X_R_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_R_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_R_4_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_4_ce1 : OUT STD_LOGIC;
        X_R_4_we1 : OUT STD_LOGIC;
        X_R_4_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_R_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_R_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_5_ce0 : OUT STD_LOGIC;
        X_R_5_we0 : OUT STD_LOGIC;
        X_R_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_R_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_R_5_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_5_ce1 : OUT STD_LOGIC;
        X_R_5_we1 : OUT STD_LOGIC;
        X_R_5_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_R_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_R_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_6_ce0 : OUT STD_LOGIC;
        X_R_6_we0 : OUT STD_LOGIC;
        X_R_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_R_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_R_6_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_6_ce1 : OUT STD_LOGIC;
        X_R_6_we1 : OUT STD_LOGIC;
        X_R_6_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_R_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_R_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_7_ce0 : OUT STD_LOGIC;
        X_R_7_we0 : OUT STD_LOGIC;
        X_R_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_R_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_R_7_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_R_7_ce1 : OUT STD_LOGIC;
        X_R_7_we1 : OUT STD_LOGIC;
        X_R_7_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_R_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_I_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_0_ce0 : OUT STD_LOGIC;
        X_I_0_we0 : OUT STD_LOGIC;
        X_I_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_I_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_I_0_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_0_ce1 : OUT STD_LOGIC;
        X_I_0_we1 : OUT STD_LOGIC;
        X_I_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_I_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_I_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_1_ce0 : OUT STD_LOGIC;
        X_I_1_we0 : OUT STD_LOGIC;
        X_I_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_I_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_I_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_1_ce1 : OUT STD_LOGIC;
        X_I_1_we1 : OUT STD_LOGIC;
        X_I_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_I_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_I_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_2_ce0 : OUT STD_LOGIC;
        X_I_2_we0 : OUT STD_LOGIC;
        X_I_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_I_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_I_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_2_ce1 : OUT STD_LOGIC;
        X_I_2_we1 : OUT STD_LOGIC;
        X_I_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_I_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_I_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_3_ce0 : OUT STD_LOGIC;
        X_I_3_we0 : OUT STD_LOGIC;
        X_I_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_I_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_I_3_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_3_ce1 : OUT STD_LOGIC;
        X_I_3_we1 : OUT STD_LOGIC;
        X_I_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_I_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_I_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_4_ce0 : OUT STD_LOGIC;
        X_I_4_we0 : OUT STD_LOGIC;
        X_I_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_I_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_I_4_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_4_ce1 : OUT STD_LOGIC;
        X_I_4_we1 : OUT STD_LOGIC;
        X_I_4_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_I_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_I_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_5_ce0 : OUT STD_LOGIC;
        X_I_5_we0 : OUT STD_LOGIC;
        X_I_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_I_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_I_5_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_5_ce1 : OUT STD_LOGIC;
        X_I_5_we1 : OUT STD_LOGIC;
        X_I_5_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_I_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_I_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_6_ce0 : OUT STD_LOGIC;
        X_I_6_we0 : OUT STD_LOGIC;
        X_I_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_I_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_I_6_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_6_ce1 : OUT STD_LOGIC;
        X_I_6_we1 : OUT STD_LOGIC;
        X_I_6_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_I_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_I_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_7_ce0 : OUT STD_LOGIC;
        X_I_7_we0 : OUT STD_LOGIC;
        X_I_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_I_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        X_I_7_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        X_I_7_ce1 : OUT STD_LOGIC;
        X_I_7_we1 : OUT STD_LOGIC;
        X_I_7_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        X_I_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component main_uitofp_32ns_32_7_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component main_X_R_0_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    X_R_0_U : component main_X_R_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => X_R_0_address0,
        ce0 => X_R_0_ce0,
        we0 => X_R_0_we0,
        d0 => X_R_0_d0,
        q0 => X_R_0_q0,
        address1 => grp_fft_fu_310_X_R_0_address1,
        ce1 => X_R_0_ce1,
        we1 => X_R_0_we1,
        d1 => grp_fft_fu_310_X_R_0_d1,
        q1 => X_R_0_q1);

    X_R_1_U : component main_X_R_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => X_R_1_address0,
        ce0 => X_R_1_ce0,
        we0 => X_R_1_we0,
        d0 => X_R_1_d0,
        q0 => X_R_1_q0,
        address1 => grp_fft_fu_310_X_R_1_address1,
        ce1 => X_R_1_ce1,
        we1 => X_R_1_we1,
        d1 => grp_fft_fu_310_X_R_1_d1,
        q1 => X_R_1_q1);

    X_R_2_U : component main_X_R_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => X_R_2_address0,
        ce0 => X_R_2_ce0,
        we0 => X_R_2_we0,
        d0 => X_R_2_d0,
        q0 => X_R_2_q0,
        address1 => grp_fft_fu_310_X_R_2_address1,
        ce1 => X_R_2_ce1,
        we1 => X_R_2_we1,
        d1 => grp_fft_fu_310_X_R_2_d1,
        q1 => X_R_2_q1);

    X_R_3_U : component main_X_R_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => X_R_3_address0,
        ce0 => X_R_3_ce0,
        we0 => X_R_3_we0,
        d0 => X_R_3_d0,
        q0 => X_R_3_q0,
        address1 => grp_fft_fu_310_X_R_3_address1,
        ce1 => X_R_3_ce1,
        we1 => X_R_3_we1,
        d1 => grp_fft_fu_310_X_R_3_d1,
        q1 => X_R_3_q1);

    X_R_4_U : component main_X_R_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => X_R_4_address0,
        ce0 => X_R_4_ce0,
        we0 => X_R_4_we0,
        d0 => X_R_4_d0,
        q0 => X_R_4_q0,
        address1 => grp_fft_fu_310_X_R_4_address1,
        ce1 => X_R_4_ce1,
        we1 => X_R_4_we1,
        d1 => grp_fft_fu_310_X_R_4_d1,
        q1 => X_R_4_q1);

    X_R_5_U : component main_X_R_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => X_R_5_address0,
        ce0 => X_R_5_ce0,
        we0 => X_R_5_we0,
        d0 => X_R_5_d0,
        q0 => X_R_5_q0,
        address1 => grp_fft_fu_310_X_R_5_address1,
        ce1 => X_R_5_ce1,
        we1 => X_R_5_we1,
        d1 => grp_fft_fu_310_X_R_5_d1,
        q1 => X_R_5_q1);

    X_R_6_U : component main_X_R_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => X_R_6_address0,
        ce0 => X_R_6_ce0,
        we0 => X_R_6_we0,
        d0 => X_R_6_d0,
        q0 => X_R_6_q0,
        address1 => grp_fft_fu_310_X_R_6_address1,
        ce1 => X_R_6_ce1,
        we1 => X_R_6_we1,
        d1 => grp_fft_fu_310_X_R_6_d1,
        q1 => X_R_6_q1);

    X_R_7_U : component main_X_R_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => X_R_7_address0,
        ce0 => X_R_7_ce0,
        we0 => X_R_7_we0,
        d0 => X_R_7_d0,
        q0 => X_R_7_q0,
        address1 => grp_fft_fu_310_X_R_7_address1,
        ce1 => X_R_7_ce1,
        we1 => X_R_7_we1,
        d1 => grp_fft_fu_310_X_R_7_d1,
        q1 => X_R_7_q1);

    X_I_0_U : component main_X_R_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => X_I_0_address0,
        ce0 => X_I_0_ce0,
        we0 => X_I_0_we0,
        d0 => X_I_0_d0,
        q0 => X_I_0_q0,
        address1 => grp_fft_fu_310_X_I_0_address1,
        ce1 => X_I_0_ce1,
        we1 => X_I_0_we1,
        d1 => grp_fft_fu_310_X_I_0_d1,
        q1 => X_I_0_q1);

    X_I_1_U : component main_X_R_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => X_I_1_address0,
        ce0 => X_I_1_ce0,
        we0 => X_I_1_we0,
        d0 => X_I_1_d0,
        q0 => X_I_1_q0,
        address1 => grp_fft_fu_310_X_I_1_address1,
        ce1 => X_I_1_ce1,
        we1 => X_I_1_we1,
        d1 => grp_fft_fu_310_X_I_1_d1,
        q1 => X_I_1_q1);

    X_I_2_U : component main_X_R_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => X_I_2_address0,
        ce0 => X_I_2_ce0,
        we0 => X_I_2_we0,
        d0 => X_I_2_d0,
        q0 => X_I_2_q0,
        address1 => grp_fft_fu_310_X_I_2_address1,
        ce1 => X_I_2_ce1,
        we1 => X_I_2_we1,
        d1 => grp_fft_fu_310_X_I_2_d1,
        q1 => X_I_2_q1);

    X_I_3_U : component main_X_R_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => X_I_3_address0,
        ce0 => X_I_3_ce0,
        we0 => X_I_3_we0,
        d0 => X_I_3_d0,
        q0 => X_I_3_q0,
        address1 => grp_fft_fu_310_X_I_3_address1,
        ce1 => X_I_3_ce1,
        we1 => X_I_3_we1,
        d1 => grp_fft_fu_310_X_I_3_d1,
        q1 => X_I_3_q1);

    X_I_4_U : component main_X_R_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => X_I_4_address0,
        ce0 => X_I_4_ce0,
        we0 => X_I_4_we0,
        d0 => X_I_4_d0,
        q0 => X_I_4_q0,
        address1 => grp_fft_fu_310_X_I_4_address1,
        ce1 => X_I_4_ce1,
        we1 => X_I_4_we1,
        d1 => grp_fft_fu_310_X_I_4_d1,
        q1 => X_I_4_q1);

    X_I_5_U : component main_X_R_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => X_I_5_address0,
        ce0 => X_I_5_ce0,
        we0 => X_I_5_we0,
        d0 => X_I_5_d0,
        q0 => X_I_5_q0,
        address1 => grp_fft_fu_310_X_I_5_address1,
        ce1 => X_I_5_ce1,
        we1 => X_I_5_we1,
        d1 => grp_fft_fu_310_X_I_5_d1,
        q1 => X_I_5_q1);

    X_I_6_U : component main_X_R_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => X_I_6_address0,
        ce0 => X_I_6_ce0,
        we0 => X_I_6_we0,
        d0 => X_I_6_d0,
        q0 => X_I_6_q0,
        address1 => grp_fft_fu_310_X_I_6_address1,
        ce1 => X_I_6_ce1,
        we1 => X_I_6_we1,
        d1 => grp_fft_fu_310_X_I_6_d1,
        q1 => X_I_6_q1);

    X_I_7_U : component main_X_R_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => X_I_7_address0,
        ce0 => X_I_7_ce0,
        we0 => X_I_7_we0,
        d0 => X_I_7_d0,
        q0 => X_I_7_q0,
        address1 => grp_fft_fu_310_X_I_7_address1,
        ce1 => X_I_7_ce1,
        we1 => X_I_7_we1,
        d1 => grp_fft_fu_310_X_I_7_d1,
        q1 => X_I_7_q1);

    grp_p_rand_fu_304 : component main_p_rand
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_p_rand_fu_304_ap_start,
        ap_done => grp_p_rand_fu_304_ap_done,
        ap_idle => grp_p_rand_fu_304_ap_idle,
        ap_ready => grp_p_rand_fu_304_ap_ready,
        ap_return => grp_p_rand_fu_304_ap_return,
        ap_ce => ap_const_logic_1);

    grp_fft_fu_310 : component main_fft
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fft_fu_310_ap_start,
        ap_done => grp_fft_fu_310_ap_done,
        ap_idle => grp_fft_fu_310_ap_idle,
        ap_ready => grp_fft_fu_310_ap_ready,
        X_R_0_address0 => grp_fft_fu_310_X_R_0_address0,
        X_R_0_ce0 => grp_fft_fu_310_X_R_0_ce0,
        X_R_0_we0 => grp_fft_fu_310_X_R_0_we0,
        X_R_0_d0 => grp_fft_fu_310_X_R_0_d0,
        X_R_0_q0 => X_R_0_q0,
        X_R_0_address1 => grp_fft_fu_310_X_R_0_address1,
        X_R_0_ce1 => grp_fft_fu_310_X_R_0_ce1,
        X_R_0_we1 => grp_fft_fu_310_X_R_0_we1,
        X_R_0_d1 => grp_fft_fu_310_X_R_0_d1,
        X_R_0_q1 => X_R_0_q1,
        X_R_1_address0 => grp_fft_fu_310_X_R_1_address0,
        X_R_1_ce0 => grp_fft_fu_310_X_R_1_ce0,
        X_R_1_we0 => grp_fft_fu_310_X_R_1_we0,
        X_R_1_d0 => grp_fft_fu_310_X_R_1_d0,
        X_R_1_q0 => X_R_1_q0,
        X_R_1_address1 => grp_fft_fu_310_X_R_1_address1,
        X_R_1_ce1 => grp_fft_fu_310_X_R_1_ce1,
        X_R_1_we1 => grp_fft_fu_310_X_R_1_we1,
        X_R_1_d1 => grp_fft_fu_310_X_R_1_d1,
        X_R_1_q1 => X_R_1_q1,
        X_R_2_address0 => grp_fft_fu_310_X_R_2_address0,
        X_R_2_ce0 => grp_fft_fu_310_X_R_2_ce0,
        X_R_2_we0 => grp_fft_fu_310_X_R_2_we0,
        X_R_2_d0 => grp_fft_fu_310_X_R_2_d0,
        X_R_2_q0 => X_R_2_q0,
        X_R_2_address1 => grp_fft_fu_310_X_R_2_address1,
        X_R_2_ce1 => grp_fft_fu_310_X_R_2_ce1,
        X_R_2_we1 => grp_fft_fu_310_X_R_2_we1,
        X_R_2_d1 => grp_fft_fu_310_X_R_2_d1,
        X_R_2_q1 => X_R_2_q1,
        X_R_3_address0 => grp_fft_fu_310_X_R_3_address0,
        X_R_3_ce0 => grp_fft_fu_310_X_R_3_ce0,
        X_R_3_we0 => grp_fft_fu_310_X_R_3_we0,
        X_R_3_d0 => grp_fft_fu_310_X_R_3_d0,
        X_R_3_q0 => X_R_3_q0,
        X_R_3_address1 => grp_fft_fu_310_X_R_3_address1,
        X_R_3_ce1 => grp_fft_fu_310_X_R_3_ce1,
        X_R_3_we1 => grp_fft_fu_310_X_R_3_we1,
        X_R_3_d1 => grp_fft_fu_310_X_R_3_d1,
        X_R_3_q1 => X_R_3_q1,
        X_R_4_address0 => grp_fft_fu_310_X_R_4_address0,
        X_R_4_ce0 => grp_fft_fu_310_X_R_4_ce0,
        X_R_4_we0 => grp_fft_fu_310_X_R_4_we0,
        X_R_4_d0 => grp_fft_fu_310_X_R_4_d0,
        X_R_4_q0 => X_R_4_q0,
        X_R_4_address1 => grp_fft_fu_310_X_R_4_address1,
        X_R_4_ce1 => grp_fft_fu_310_X_R_4_ce1,
        X_R_4_we1 => grp_fft_fu_310_X_R_4_we1,
        X_R_4_d1 => grp_fft_fu_310_X_R_4_d1,
        X_R_4_q1 => X_R_4_q1,
        X_R_5_address0 => grp_fft_fu_310_X_R_5_address0,
        X_R_5_ce0 => grp_fft_fu_310_X_R_5_ce0,
        X_R_5_we0 => grp_fft_fu_310_X_R_5_we0,
        X_R_5_d0 => grp_fft_fu_310_X_R_5_d0,
        X_R_5_q0 => X_R_5_q0,
        X_R_5_address1 => grp_fft_fu_310_X_R_5_address1,
        X_R_5_ce1 => grp_fft_fu_310_X_R_5_ce1,
        X_R_5_we1 => grp_fft_fu_310_X_R_5_we1,
        X_R_5_d1 => grp_fft_fu_310_X_R_5_d1,
        X_R_5_q1 => X_R_5_q1,
        X_R_6_address0 => grp_fft_fu_310_X_R_6_address0,
        X_R_6_ce0 => grp_fft_fu_310_X_R_6_ce0,
        X_R_6_we0 => grp_fft_fu_310_X_R_6_we0,
        X_R_6_d0 => grp_fft_fu_310_X_R_6_d0,
        X_R_6_q0 => X_R_6_q0,
        X_R_6_address1 => grp_fft_fu_310_X_R_6_address1,
        X_R_6_ce1 => grp_fft_fu_310_X_R_6_ce1,
        X_R_6_we1 => grp_fft_fu_310_X_R_6_we1,
        X_R_6_d1 => grp_fft_fu_310_X_R_6_d1,
        X_R_6_q1 => X_R_6_q1,
        X_R_7_address0 => grp_fft_fu_310_X_R_7_address0,
        X_R_7_ce0 => grp_fft_fu_310_X_R_7_ce0,
        X_R_7_we0 => grp_fft_fu_310_X_R_7_we0,
        X_R_7_d0 => grp_fft_fu_310_X_R_7_d0,
        X_R_7_q0 => X_R_7_q0,
        X_R_7_address1 => grp_fft_fu_310_X_R_7_address1,
        X_R_7_ce1 => grp_fft_fu_310_X_R_7_ce1,
        X_R_7_we1 => grp_fft_fu_310_X_R_7_we1,
        X_R_7_d1 => grp_fft_fu_310_X_R_7_d1,
        X_R_7_q1 => X_R_7_q1,
        X_I_0_address0 => grp_fft_fu_310_X_I_0_address0,
        X_I_0_ce0 => grp_fft_fu_310_X_I_0_ce0,
        X_I_0_we0 => grp_fft_fu_310_X_I_0_we0,
        X_I_0_d0 => grp_fft_fu_310_X_I_0_d0,
        X_I_0_q0 => X_I_0_q0,
        X_I_0_address1 => grp_fft_fu_310_X_I_0_address1,
        X_I_0_ce1 => grp_fft_fu_310_X_I_0_ce1,
        X_I_0_we1 => grp_fft_fu_310_X_I_0_we1,
        X_I_0_d1 => grp_fft_fu_310_X_I_0_d1,
        X_I_0_q1 => X_I_0_q1,
        X_I_1_address0 => grp_fft_fu_310_X_I_1_address0,
        X_I_1_ce0 => grp_fft_fu_310_X_I_1_ce0,
        X_I_1_we0 => grp_fft_fu_310_X_I_1_we0,
        X_I_1_d0 => grp_fft_fu_310_X_I_1_d0,
        X_I_1_q0 => X_I_1_q0,
        X_I_1_address1 => grp_fft_fu_310_X_I_1_address1,
        X_I_1_ce1 => grp_fft_fu_310_X_I_1_ce1,
        X_I_1_we1 => grp_fft_fu_310_X_I_1_we1,
        X_I_1_d1 => grp_fft_fu_310_X_I_1_d1,
        X_I_1_q1 => X_I_1_q1,
        X_I_2_address0 => grp_fft_fu_310_X_I_2_address0,
        X_I_2_ce0 => grp_fft_fu_310_X_I_2_ce0,
        X_I_2_we0 => grp_fft_fu_310_X_I_2_we0,
        X_I_2_d0 => grp_fft_fu_310_X_I_2_d0,
        X_I_2_q0 => X_I_2_q0,
        X_I_2_address1 => grp_fft_fu_310_X_I_2_address1,
        X_I_2_ce1 => grp_fft_fu_310_X_I_2_ce1,
        X_I_2_we1 => grp_fft_fu_310_X_I_2_we1,
        X_I_2_d1 => grp_fft_fu_310_X_I_2_d1,
        X_I_2_q1 => X_I_2_q1,
        X_I_3_address0 => grp_fft_fu_310_X_I_3_address0,
        X_I_3_ce0 => grp_fft_fu_310_X_I_3_ce0,
        X_I_3_we0 => grp_fft_fu_310_X_I_3_we0,
        X_I_3_d0 => grp_fft_fu_310_X_I_3_d0,
        X_I_3_q0 => X_I_3_q0,
        X_I_3_address1 => grp_fft_fu_310_X_I_3_address1,
        X_I_3_ce1 => grp_fft_fu_310_X_I_3_ce1,
        X_I_3_we1 => grp_fft_fu_310_X_I_3_we1,
        X_I_3_d1 => grp_fft_fu_310_X_I_3_d1,
        X_I_3_q1 => X_I_3_q1,
        X_I_4_address0 => grp_fft_fu_310_X_I_4_address0,
        X_I_4_ce0 => grp_fft_fu_310_X_I_4_ce0,
        X_I_4_we0 => grp_fft_fu_310_X_I_4_we0,
        X_I_4_d0 => grp_fft_fu_310_X_I_4_d0,
        X_I_4_q0 => X_I_4_q0,
        X_I_4_address1 => grp_fft_fu_310_X_I_4_address1,
        X_I_4_ce1 => grp_fft_fu_310_X_I_4_ce1,
        X_I_4_we1 => grp_fft_fu_310_X_I_4_we1,
        X_I_4_d1 => grp_fft_fu_310_X_I_4_d1,
        X_I_4_q1 => X_I_4_q1,
        X_I_5_address0 => grp_fft_fu_310_X_I_5_address0,
        X_I_5_ce0 => grp_fft_fu_310_X_I_5_ce0,
        X_I_5_we0 => grp_fft_fu_310_X_I_5_we0,
        X_I_5_d0 => grp_fft_fu_310_X_I_5_d0,
        X_I_5_q0 => X_I_5_q0,
        X_I_5_address1 => grp_fft_fu_310_X_I_5_address1,
        X_I_5_ce1 => grp_fft_fu_310_X_I_5_ce1,
        X_I_5_we1 => grp_fft_fu_310_X_I_5_we1,
        X_I_5_d1 => grp_fft_fu_310_X_I_5_d1,
        X_I_5_q1 => X_I_5_q1,
        X_I_6_address0 => grp_fft_fu_310_X_I_6_address0,
        X_I_6_ce0 => grp_fft_fu_310_X_I_6_ce0,
        X_I_6_we0 => grp_fft_fu_310_X_I_6_we0,
        X_I_6_d0 => grp_fft_fu_310_X_I_6_d0,
        X_I_6_q0 => X_I_6_q0,
        X_I_6_address1 => grp_fft_fu_310_X_I_6_address1,
        X_I_6_ce1 => grp_fft_fu_310_X_I_6_ce1,
        X_I_6_we1 => grp_fft_fu_310_X_I_6_we1,
        X_I_6_d1 => grp_fft_fu_310_X_I_6_d1,
        X_I_6_q1 => X_I_6_q1,
        X_I_7_address0 => grp_fft_fu_310_X_I_7_address0,
        X_I_7_ce0 => grp_fft_fu_310_X_I_7_ce0,
        X_I_7_we0 => grp_fft_fu_310_X_I_7_we0,
        X_I_7_d0 => grp_fft_fu_310_X_I_7_d0,
        X_I_7_q0 => X_I_7_q0,
        X_I_7_address1 => grp_fft_fu_310_X_I_7_address1,
        X_I_7_ce1 => grp_fft_fu_310_X_I_7_ce1,
        X_I_7_we1 => grp_fft_fu_310_X_I_7_we1,
        X_I_7_d1 => grp_fft_fu_310_X_I_7_d1,
        X_I_7_q1 => X_I_7_q1);

    uitofp_32ns_32_7_no_dsp_1_U135 : component main_uitofp_32ns_32_7_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_334_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_334_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage9_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage15_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fft_fu_310_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fft_fu_310_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                    grp_fft_fu_310_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fft_fu_310_ap_ready = ap_const_logic_1)) then 
                    grp_fft_fu_310_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_p_rand_fu_304_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_p_rand_fu_304_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln373_reg_482 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln373_reg_482 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln373_reg_482 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln373_reg_482 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln373_reg_482 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 
    = ap_const_logic_1) and (icmp_ln373_fu_369_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln373_reg_482 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln373_reg_482 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln373_reg_482 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln373_reg_482 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln373_reg_482 = ap_const_lv1_0) 
    and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln373_reg_482 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln373_reg_482 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln373_reg_482 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln373_reg_482 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln373_reg_482 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
                    grp_p_rand_fu_304_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_p_rand_fu_304_ap_ready = ap_const_logic_1)) then 
                    grp_p_rand_fu_304_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_44_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_fu_44 <= ap_const_lv11_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln373_reg_482 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                i_fu_44 <= add_ln373_fu_410_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_1_reg_476 <= i_fu_44;
                icmp_ln373_reg_482 <= icmp_ln373_fu_369_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 
    = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then
                reg_337 <= grp_p_rand_fu_304_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 
    = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then
                reg_341 <= grp_fu_334_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then
                    zext_ln373_reg_521(10 downto 0) <= zext_ln373_fu_415_p1(10 downto 0);
            end if;
        end if;
    end process;
    zext_ln373_reg_521(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, icmp_ln373_reg_482, ap_block_pp0_stage9_subdone, ap_block_pp0_stage15_subdone, grp_fft_fu_310_ap_done, ap_CS_fsm_state28, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage9_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln373_reg_482 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage9_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage9_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln373_reg_482 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                if (((grp_fft_fu_310_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    X_I_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, zext_ln373_reg_521, grp_fft_fu_310_X_I_0_address0, ap_block_pp0_stage1, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_I_0_address0 <= zext_ln373_reg_521(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_0_address0 <= grp_fft_fu_310_X_I_0_address0;
        else 
            X_I_0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    X_I_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1, grp_fft_fu_310_X_I_0_ce0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_I_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_0_ce0 <= grp_fft_fu_310_X_I_0_ce0;
        else 
            X_I_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_0_ce1_assign_proc : process(grp_fft_fu_310_X_I_0_ce1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_0_ce1 <= grp_fft_fu_310_X_I_0_ce1;
        else 
            X_I_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_0_d0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, reg_341, grp_fft_fu_310_X_I_0_d0, ap_block_pp0_stage1, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_I_0_d0 <= reg_341;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_0_d0 <= grp_fft_fu_310_X_I_0_d0;
        else 
            X_I_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_I_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1, grp_fft_fu_310_X_I_0_we0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_I_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_0_we0 <= grp_fft_fu_310_X_I_0_we0;
        else 
            X_I_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_0_we1_assign_proc : process(grp_fft_fu_310_X_I_0_we1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_0_we1 <= grp_fft_fu_310_X_I_0_we1;
        else 
            X_I_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter1, zext_ln373_reg_521, grp_fft_fu_310_X_I_1_address0, ap_block_pp0_stage2, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            X_I_1_address0 <= zext_ln373_reg_521(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_1_address0 <= grp_fft_fu_310_X_I_1_address0;
        else 
            X_I_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    X_I_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_enable_reg_pp0_iter1, grp_fft_fu_310_X_I_1_ce0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            X_I_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_1_ce0 <= grp_fft_fu_310_X_I_1_ce0;
        else 
            X_I_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_1_ce1_assign_proc : process(grp_fft_fu_310_X_I_1_ce1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_1_ce1 <= grp_fft_fu_310_X_I_1_ce1;
        else 
            X_I_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_1_d0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter1, reg_341, grp_fft_fu_310_X_I_1_d0, ap_block_pp0_stage2, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            X_I_1_d0 <= reg_341;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_1_d0 <= grp_fft_fu_310_X_I_1_d0;
        else 
            X_I_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_I_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_enable_reg_pp0_iter1, grp_fft_fu_310_X_I_1_we0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            X_I_1_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_1_we0 <= grp_fft_fu_310_X_I_1_we0;
        else 
            X_I_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_1_we1_assign_proc : process(grp_fft_fu_310_X_I_1_we1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_1_we1 <= grp_fft_fu_310_X_I_1_we1;
        else 
            X_I_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, zext_ln373_reg_521, grp_fft_fu_310_X_I_2_address0, ap_block_pp0_stage3, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            X_I_2_address0 <= zext_ln373_reg_521(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_2_address0 <= grp_fft_fu_310_X_I_2_address0;
        else 
            X_I_2_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    X_I_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1, grp_fft_fu_310_X_I_2_ce0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            X_I_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_2_ce0 <= grp_fft_fu_310_X_I_2_ce0;
        else 
            X_I_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_2_ce1_assign_proc : process(grp_fft_fu_310_X_I_2_ce1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_2_ce1 <= grp_fft_fu_310_X_I_2_ce1;
        else 
            X_I_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_2_d0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, reg_341, grp_fft_fu_310_X_I_2_d0, ap_block_pp0_stage3, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            X_I_2_d0 <= reg_341;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_2_d0 <= grp_fft_fu_310_X_I_2_d0;
        else 
            X_I_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_I_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter1, grp_fft_fu_310_X_I_2_we0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            X_I_2_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_2_we0 <= grp_fft_fu_310_X_I_2_we0;
        else 
            X_I_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_2_we1_assign_proc : process(grp_fft_fu_310_X_I_2_we1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_2_we1 <= grp_fft_fu_310_X_I_2_we1;
        else 
            X_I_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, zext_ln373_reg_521, grp_fft_fu_310_X_I_3_address0, ap_block_pp0_stage4, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            X_I_3_address0 <= zext_ln373_reg_521(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_3_address0 <= grp_fft_fu_310_X_I_3_address0;
        else 
            X_I_3_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    X_I_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter1, grp_fft_fu_310_X_I_3_ce0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            X_I_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_3_ce0 <= grp_fft_fu_310_X_I_3_ce0;
        else 
            X_I_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_3_ce1_assign_proc : process(grp_fft_fu_310_X_I_3_ce1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_3_ce1 <= grp_fft_fu_310_X_I_3_ce1;
        else 
            X_I_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_3_d0_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, reg_341, grp_fft_fu_310_X_I_3_d0, ap_block_pp0_stage4, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            X_I_3_d0 <= reg_341;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_3_d0 <= grp_fft_fu_310_X_I_3_d0;
        else 
            X_I_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_I_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter1, grp_fft_fu_310_X_I_3_we0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            X_I_3_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_3_we0 <= grp_fft_fu_310_X_I_3_we0;
        else 
            X_I_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_3_we1_assign_proc : process(grp_fft_fu_310_X_I_3_we1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_3_we1 <= grp_fft_fu_310_X_I_3_we1;
        else 
            X_I_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_4_address0_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter1, zext_ln373_reg_521, grp_fft_fu_310_X_I_4_address0, ap_block_pp0_stage5, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            X_I_4_address0 <= zext_ln373_reg_521(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_4_address0 <= grp_fft_fu_310_X_I_4_address0;
        else 
            X_I_4_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    X_I_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_enable_reg_pp0_iter1, grp_fft_fu_310_X_I_4_ce0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            X_I_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_4_ce0 <= grp_fft_fu_310_X_I_4_ce0;
        else 
            X_I_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_4_ce1_assign_proc : process(grp_fft_fu_310_X_I_4_ce1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_4_ce1 <= grp_fft_fu_310_X_I_4_ce1;
        else 
            X_I_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_4_d0_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter1, reg_341, grp_fft_fu_310_X_I_4_d0, ap_block_pp0_stage5, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            X_I_4_d0 <= reg_341;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_4_d0 <= grp_fft_fu_310_X_I_4_d0;
        else 
            X_I_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_I_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_enable_reg_pp0_iter1, grp_fft_fu_310_X_I_4_we0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            X_I_4_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_4_we0 <= grp_fft_fu_310_X_I_4_we0;
        else 
            X_I_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_4_we1_assign_proc : process(grp_fft_fu_310_X_I_4_we1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_4_we1 <= grp_fft_fu_310_X_I_4_we1;
        else 
            X_I_4_we1 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_5_address0_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter1, zext_ln373_reg_521, grp_fft_fu_310_X_I_5_address0, ap_block_pp0_stage6, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            X_I_5_address0 <= zext_ln373_reg_521(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_5_address0 <= grp_fft_fu_310_X_I_5_address0;
        else 
            X_I_5_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    X_I_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_enable_reg_pp0_iter1, grp_fft_fu_310_X_I_5_ce0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            X_I_5_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_5_ce0 <= grp_fft_fu_310_X_I_5_ce0;
        else 
            X_I_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_5_ce1_assign_proc : process(grp_fft_fu_310_X_I_5_ce1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_5_ce1 <= grp_fft_fu_310_X_I_5_ce1;
        else 
            X_I_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_5_d0_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter1, reg_341, grp_fft_fu_310_X_I_5_d0, ap_block_pp0_stage6, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            X_I_5_d0 <= reg_341;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_5_d0 <= grp_fft_fu_310_X_I_5_d0;
        else 
            X_I_5_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_I_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_enable_reg_pp0_iter1, grp_fft_fu_310_X_I_5_we0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            X_I_5_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_5_we0 <= grp_fft_fu_310_X_I_5_we0;
        else 
            X_I_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_5_we1_assign_proc : process(grp_fft_fu_310_X_I_5_we1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_5_we1 <= grp_fft_fu_310_X_I_5_we1;
        else 
            X_I_5_we1 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_6_address0_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, zext_ln373_reg_521, grp_fft_fu_310_X_I_6_address0, ap_block_pp0_stage7, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            X_I_6_address0 <= zext_ln373_reg_521(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_6_address0 <= grp_fft_fu_310_X_I_6_address0;
        else 
            X_I_6_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    X_I_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1, grp_fft_fu_310_X_I_6_ce0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            X_I_6_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_6_ce0 <= grp_fft_fu_310_X_I_6_ce0;
        else 
            X_I_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_6_ce1_assign_proc : process(grp_fft_fu_310_X_I_6_ce1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_6_ce1 <= grp_fft_fu_310_X_I_6_ce1;
        else 
            X_I_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_6_d0_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, reg_341, grp_fft_fu_310_X_I_6_d0, ap_block_pp0_stage7, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            X_I_6_d0 <= reg_341;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_6_d0 <= grp_fft_fu_310_X_I_6_d0;
        else 
            X_I_6_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_I_6_we0_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1, grp_fft_fu_310_X_I_6_we0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            X_I_6_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_6_we0 <= grp_fft_fu_310_X_I_6_we0;
        else 
            X_I_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_6_we1_assign_proc : process(grp_fft_fu_310_X_I_6_we1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_6_we1 <= grp_fft_fu_310_X_I_6_we1;
        else 
            X_I_6_we1 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_7_address0_assign_proc : process(ap_CS_fsm_pp0_stage8, ap_enable_reg_pp0_iter1, zext_ln373_reg_521, grp_fft_fu_310_X_I_7_address0, ap_block_pp0_stage8, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            X_I_7_address0 <= zext_ln373_reg_521(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_7_address0 <= grp_fft_fu_310_X_I_7_address0;
        else 
            X_I_7_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    X_I_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_enable_reg_pp0_iter1, grp_fft_fu_310_X_I_7_ce0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            X_I_7_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_7_ce0 <= grp_fft_fu_310_X_I_7_ce0;
        else 
            X_I_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_7_ce1_assign_proc : process(grp_fft_fu_310_X_I_7_ce1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_7_ce1 <= grp_fft_fu_310_X_I_7_ce1;
        else 
            X_I_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_7_d0_assign_proc : process(ap_CS_fsm_pp0_stage8, ap_enable_reg_pp0_iter1, reg_341, grp_fft_fu_310_X_I_7_d0, ap_block_pp0_stage8, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            X_I_7_d0 <= reg_341;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_7_d0 <= grp_fft_fu_310_X_I_7_d0;
        else 
            X_I_7_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_I_7_we0_assign_proc : process(ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_enable_reg_pp0_iter1, grp_fft_fu_310_X_I_7_we0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            X_I_7_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_7_we0 <= grp_fft_fu_310_X_I_7_we0;
        else 
            X_I_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    X_I_7_we1_assign_proc : process(grp_fft_fu_310_X_I_7_we1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_I_7_we1 <= grp_fft_fu_310_X_I_7_we1;
        else 
            X_I_7_we1 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_0_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, zext_ln373_fu_415_p1, grp_fft_fu_310_X_R_0_address0, ap_block_pp0_stage9, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            X_R_0_address0 <= zext_ln373_fu_415_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_0_address0 <= grp_fft_fu_310_X_R_0_address0;
        else 
            X_R_0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    X_R_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, grp_fft_fu_310_X_R_0_ce0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            X_R_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_0_ce0 <= grp_fft_fu_310_X_R_0_ce0;
        else 
            X_R_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_0_ce1_assign_proc : process(grp_fft_fu_310_X_R_0_ce1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_0_ce1 <= grp_fft_fu_310_X_R_0_ce1;
        else 
            X_R_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_0_d0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, reg_341, grp_fft_fu_310_X_R_0_d0, ap_block_pp0_stage9, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            X_R_0_d0 <= reg_341;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_0_d0 <= grp_fft_fu_310_X_R_0_d0;
        else 
            X_R_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_R_0_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, icmp_ln373_reg_482, grp_fft_fu_310_X_R_0_we0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln373_reg_482 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            X_R_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_0_we0 <= grp_fft_fu_310_X_R_0_we0;
        else 
            X_R_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_0_we1_assign_proc : process(grp_fft_fu_310_X_R_0_we1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_0_we1 <= grp_fft_fu_310_X_R_0_we1;
        else 
            X_R_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_1_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage10, zext_ln373_reg_521, grp_fft_fu_310_X_R_1_address0, ap_block_pp0_stage10, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            X_R_1_address0 <= zext_ln373_reg_521(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_1_address0 <= grp_fft_fu_310_X_R_1_address0;
        else 
            X_R_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    X_R_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, grp_fft_fu_310_X_R_1_ce0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            X_R_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_1_ce0 <= grp_fft_fu_310_X_R_1_ce0;
        else 
            X_R_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_1_ce1_assign_proc : process(grp_fft_fu_310_X_R_1_ce1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_1_ce1 <= grp_fft_fu_310_X_R_1_ce1;
        else 
            X_R_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_1_d0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage10, reg_341, grp_fft_fu_310_X_R_1_d0, ap_block_pp0_stage10, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            X_R_1_d0 <= reg_341;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_1_d0 <= grp_fft_fu_310_X_R_1_d0;
        else 
            X_R_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_R_1_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, icmp_ln373_reg_482, grp_fft_fu_310_X_R_1_we0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln373_reg_482 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            X_R_1_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_1_we0 <= grp_fft_fu_310_X_R_1_we0;
        else 
            X_R_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_1_we1_assign_proc : process(grp_fft_fu_310_X_R_1_we1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_1_we1 <= grp_fft_fu_310_X_R_1_we1;
        else 
            X_R_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_2_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage11, zext_ln373_reg_521, grp_fft_fu_310_X_R_2_address0, ap_block_pp0_stage11, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            X_R_2_address0 <= zext_ln373_reg_521(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_2_address0 <= grp_fft_fu_310_X_R_2_address0;
        else 
            X_R_2_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    X_R_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, grp_fft_fu_310_X_R_2_ce0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            X_R_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_2_ce0 <= grp_fft_fu_310_X_R_2_ce0;
        else 
            X_R_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_2_ce1_assign_proc : process(grp_fft_fu_310_X_R_2_ce1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_2_ce1 <= grp_fft_fu_310_X_R_2_ce1;
        else 
            X_R_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_2_d0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage11, reg_341, grp_fft_fu_310_X_R_2_d0, ap_block_pp0_stage11, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            X_R_2_d0 <= reg_341;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_2_d0 <= grp_fft_fu_310_X_R_2_d0;
        else 
            X_R_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_R_2_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, icmp_ln373_reg_482, grp_fft_fu_310_X_R_2_we0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln373_reg_482 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            X_R_2_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_2_we0 <= grp_fft_fu_310_X_R_2_we0;
        else 
            X_R_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_2_we1_assign_proc : process(grp_fft_fu_310_X_R_2_we1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_2_we1 <= grp_fft_fu_310_X_R_2_we1;
        else 
            X_R_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_3_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage12, zext_ln373_reg_521, grp_fft_fu_310_X_R_3_address0, ap_block_pp0_stage12, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            X_R_3_address0 <= zext_ln373_reg_521(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_3_address0 <= grp_fft_fu_310_X_R_3_address0;
        else 
            X_R_3_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    X_R_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, grp_fft_fu_310_X_R_3_ce0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            X_R_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_3_ce0 <= grp_fft_fu_310_X_R_3_ce0;
        else 
            X_R_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_3_ce1_assign_proc : process(grp_fft_fu_310_X_R_3_ce1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_3_ce1 <= grp_fft_fu_310_X_R_3_ce1;
        else 
            X_R_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_3_d0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage12, reg_341, grp_fft_fu_310_X_R_3_d0, ap_block_pp0_stage12, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            X_R_3_d0 <= reg_341;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_3_d0 <= grp_fft_fu_310_X_R_3_d0;
        else 
            X_R_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_R_3_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, icmp_ln373_reg_482, grp_fft_fu_310_X_R_3_we0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln373_reg_482 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            X_R_3_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_3_we0 <= grp_fft_fu_310_X_R_3_we0;
        else 
            X_R_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_3_we1_assign_proc : process(grp_fft_fu_310_X_R_3_we1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_3_we1 <= grp_fft_fu_310_X_R_3_we1;
        else 
            X_R_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_4_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage13, zext_ln373_reg_521, grp_fft_fu_310_X_R_4_address0, ap_block_pp0_stage13, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
            X_R_4_address0 <= zext_ln373_reg_521(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_4_address0 <= grp_fft_fu_310_X_R_4_address0;
        else 
            X_R_4_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    X_R_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, grp_fft_fu_310_X_R_4_ce0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
            X_R_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_4_ce0 <= grp_fft_fu_310_X_R_4_ce0;
        else 
            X_R_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_4_ce1_assign_proc : process(grp_fft_fu_310_X_R_4_ce1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_4_ce1 <= grp_fft_fu_310_X_R_4_ce1;
        else 
            X_R_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_4_d0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage13, reg_341, grp_fft_fu_310_X_R_4_d0, ap_block_pp0_stage13, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
            X_R_4_d0 <= reg_341;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_4_d0 <= grp_fft_fu_310_X_R_4_d0;
        else 
            X_R_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_R_4_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, icmp_ln373_reg_482, grp_fft_fu_310_X_R_4_we0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln373_reg_482 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
            X_R_4_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_4_we0 <= grp_fft_fu_310_X_R_4_we0;
        else 
            X_R_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_4_we1_assign_proc : process(grp_fft_fu_310_X_R_4_we1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_4_we1 <= grp_fft_fu_310_X_R_4_we1;
        else 
            X_R_4_we1 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_5_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage14, zext_ln373_reg_521, grp_fft_fu_310_X_R_5_address0, ap_block_pp0_stage14, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
            X_R_5_address0 <= zext_ln373_reg_521(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_5_address0 <= grp_fft_fu_310_X_R_5_address0;
        else 
            X_R_5_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    X_R_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, grp_fft_fu_310_X_R_5_ce0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
            X_R_5_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_5_ce0 <= grp_fft_fu_310_X_R_5_ce0;
        else 
            X_R_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_5_ce1_assign_proc : process(grp_fft_fu_310_X_R_5_ce1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_5_ce1 <= grp_fft_fu_310_X_R_5_ce1;
        else 
            X_R_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_5_d0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage14, reg_341, grp_fft_fu_310_X_R_5_d0, ap_block_pp0_stage14, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
            X_R_5_d0 <= reg_341;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_5_d0 <= grp_fft_fu_310_X_R_5_d0;
        else 
            X_R_5_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_R_5_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, icmp_ln373_reg_482, grp_fft_fu_310_X_R_5_we0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln373_reg_482 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
            X_R_5_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_5_we0 <= grp_fft_fu_310_X_R_5_we0;
        else 
            X_R_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_5_we1_assign_proc : process(grp_fft_fu_310_X_R_5_we1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_5_we1 <= grp_fft_fu_310_X_R_5_we1;
        else 
            X_R_5_we1 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_6_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage15, zext_ln373_reg_521, grp_fft_fu_310_X_R_6_address0, ap_block_pp0_stage15, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            X_R_6_address0 <= zext_ln373_reg_521(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_6_address0 <= grp_fft_fu_310_X_R_6_address0;
        else 
            X_R_6_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    X_R_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, grp_fft_fu_310_X_R_6_ce0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            X_R_6_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_6_ce0 <= grp_fft_fu_310_X_R_6_ce0;
        else 
            X_R_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_6_ce1_assign_proc : process(grp_fft_fu_310_X_R_6_ce1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_6_ce1 <= grp_fft_fu_310_X_R_6_ce1;
        else 
            X_R_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_6_d0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage15, reg_341, grp_fft_fu_310_X_R_6_d0, ap_block_pp0_stage15, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            X_R_6_d0 <= reg_341;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_6_d0 <= grp_fft_fu_310_X_R_6_d0;
        else 
            X_R_6_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_R_6_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, icmp_ln373_reg_482, grp_fft_fu_310_X_R_6_we0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln373_reg_482 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            X_R_6_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_6_we0 <= grp_fft_fu_310_X_R_6_we0;
        else 
            X_R_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_6_we1_assign_proc : process(grp_fft_fu_310_X_R_6_we1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_6_we1 <= grp_fft_fu_310_X_R_6_we1;
        else 
            X_R_6_we1 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_7_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, zext_ln373_reg_521, grp_fft_fu_310_X_R_7_address0, ap_block_pp0_stage0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            X_R_7_address0 <= zext_ln373_reg_521(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_7_address0 <= grp_fft_fu_310_X_R_7_address0;
        else 
            X_R_7_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    X_R_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, grp_fft_fu_310_X_R_7_ce0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            X_R_7_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_7_ce0 <= grp_fft_fu_310_X_R_7_ce0;
        else 
            X_R_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_7_ce1_assign_proc : process(grp_fft_fu_310_X_R_7_ce1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_7_ce1 <= grp_fft_fu_310_X_R_7_ce1;
        else 
            X_R_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_7_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, reg_341, grp_fft_fu_310_X_R_7_d0, ap_block_pp0_stage0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            X_R_7_d0 <= reg_341;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_7_d0 <= grp_fft_fu_310_X_R_7_d0;
        else 
            X_R_7_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    X_R_7_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, grp_fft_fu_310_X_R_7_we0, ap_CS_fsm_state28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            X_R_7_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_7_we0 <= grp_fft_fu_310_X_R_7_we0;
        else 
            X_R_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    X_R_7_we1_assign_proc : process(grp_fft_fu_310_X_R_7_we1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            X_R_7_we1 <= grp_fft_fu_310_X_R_7_we1;
        else 
            X_R_7_we1 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln373_fu_410_p2 <= std_logic_vector(unsigned(i_1_reg_476) + unsigned(ap_const_lv11_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(9);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state27 <= ap_CS_fsm(17);
    ap_CS_fsm_state28 <= ap_CS_fsm(18);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state27_blk <= ap_const_logic_0;

    ap_ST_fsm_state28_blk_assign_proc : process(grp_fft_fu_310_ap_done)
    begin
        if ((grp_fft_fu_310_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state28_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state28_blk <= ap_const_logic_0;
        end if; 
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state11_assign_proc : process(icmp_ln373_reg_482)
    begin
        if ((icmp_ln373_reg_482 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state11 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(grp_fft_fu_310_ap_done, ap_CS_fsm_state28)
    begin
        if (((grp_fft_fu_310_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_fft_fu_310_ap_done, ap_CS_fsm_state28)
    begin
        if (((grp_fft_fu_310_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_const_lv32_0;
    grp_fft_fu_310_ap_start <= grp_fft_fu_310_ap_start_reg;

    grp_fu_334_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, zext_ln374_fu_375_p1, zext_ln375_fu_380_p1, zext_ln376_fu_385_p1, zext_ln377_fu_390_p1, zext_ln378_fu_395_p1, zext_ln379_fu_400_p1, zext_ln380_fu_405_p1, zext_ln381_fu_419_p1, zext_ln382_fu_429_p1, zext_ln383_fu_434_p1, zext_ln384_fu_439_p1, zext_ln385_fu_444_p1, zext_ln386_fu_449_p1, zext_ln387_fu_454_p1, zext_ln388_fu_459_p1, zext_ln389_fu_464_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11, ap_block_pp0_stage12, ap_block_pp0_stage13, ap_block_pp0_stage14, ap_block_pp0_stage15, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_334_p0 <= zext_ln389_fu_464_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_334_p0 <= zext_ln388_fu_459_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            grp_fu_334_p0 <= zext_ln387_fu_454_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
            grp_fu_334_p0 <= zext_ln386_fu_449_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
            grp_fu_334_p0 <= zext_ln385_fu_444_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            grp_fu_334_p0 <= zext_ln384_fu_439_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            grp_fu_334_p0 <= zext_ln383_fu_434_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_334_p0 <= zext_ln382_fu_429_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_334_p0 <= zext_ln381_fu_419_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_334_p0 <= zext_ln380_fu_405_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_334_p0 <= zext_ln379_fu_400_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_334_p0 <= zext_ln378_fu_395_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_334_p0 <= zext_ln377_fu_390_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_334_p0 <= zext_ln376_fu_385_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_334_p0 <= zext_ln375_fu_380_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_334_p0 <= zext_ln374_fu_375_p1;
        else 
            grp_fu_334_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_p_rand_fu_304_ap_start <= grp_p_rand_fu_304_ap_start_reg;
    icmp_ln373_fu_369_p2 <= "1" when (i_fu_44 = ap_const_lv11_400) else "0";
    zext_ln373_fu_415_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_reg_476),64));
    zext_ln374_fu_375_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_337),32));
    zext_ln375_fu_380_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_337),32));
    zext_ln376_fu_385_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_337),32));
    zext_ln377_fu_390_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_337),32));
    zext_ln378_fu_395_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_337),32));
    zext_ln379_fu_400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_337),32));
    zext_ln380_fu_405_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_337),32));
    zext_ln381_fu_419_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_337),32));
    zext_ln382_fu_429_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_337),32));
    zext_ln383_fu_434_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_337),32));
    zext_ln384_fu_439_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_337),32));
    zext_ln385_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_337),32));
    zext_ln386_fu_449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_337),32));
    zext_ln387_fu_454_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_337),32));
    zext_ln388_fu_459_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_337),32));
    zext_ln389_fu_464_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_337),32));
end behav;
