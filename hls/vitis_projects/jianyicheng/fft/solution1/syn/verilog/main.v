// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="main_main,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.312000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=34,HLS_SYN_DSP=0,HLS_SYN_FF=6496,HLS_SYN_LUT=9898,HLS_VERSION=2023_2}" *)

module main (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_return
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_pp0_stage0 = 19'd2;
parameter    ap_ST_fsm_pp0_stage1 = 19'd4;
parameter    ap_ST_fsm_pp0_stage2 = 19'd8;
parameter    ap_ST_fsm_pp0_stage3 = 19'd16;
parameter    ap_ST_fsm_pp0_stage4 = 19'd32;
parameter    ap_ST_fsm_pp0_stage5 = 19'd64;
parameter    ap_ST_fsm_pp0_stage6 = 19'd128;
parameter    ap_ST_fsm_pp0_stage7 = 19'd256;
parameter    ap_ST_fsm_pp0_stage8 = 19'd512;
parameter    ap_ST_fsm_pp0_stage9 = 19'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 19'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 19'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 19'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 19'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 19'd32768;
parameter    ap_ST_fsm_pp0_stage15 = 19'd65536;
parameter    ap_ST_fsm_state27 = 19'd131072;
parameter    ap_ST_fsm_state28 = 19'd262144;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [15:0] grp_p_rand_fu_304_ap_return;
reg   [15:0] reg_337;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9_11001;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10_11001;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11_11001;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12_11001;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13_11001;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14_11001;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15_11001;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] grp_fu_334_p1;
reg   [31:0] reg_341;
reg   [10:0] i_1_reg_476;
wire   [0:0] icmp_ln373_fu_369_p2;
reg   [0:0] icmp_ln373_reg_482;
wire   [31:0] zext_ln374_fu_375_p1;
wire   [31:0] zext_ln375_fu_380_p1;
wire   [31:0] zext_ln376_fu_385_p1;
wire   [31:0] zext_ln377_fu_390_p1;
wire   [31:0] zext_ln378_fu_395_p1;
wire   [31:0] zext_ln379_fu_400_p1;
wire   [31:0] zext_ln380_fu_405_p1;
wire   [63:0] zext_ln373_fu_415_p1;
reg   [63:0] zext_ln373_reg_521;
wire   [31:0] zext_ln381_fu_419_p1;
wire   [31:0] zext_ln382_fu_429_p1;
wire   [31:0] zext_ln383_fu_434_p1;
wire   [31:0] zext_ln384_fu_439_p1;
wire   [31:0] zext_ln385_fu_444_p1;
wire   [31:0] zext_ln386_fu_449_p1;
wire   [31:0] zext_ln387_fu_454_p1;
wire   [31:0] zext_ln388_fu_459_p1;
wire   [31:0] zext_ln389_fu_464_p1;
wire    ap_block_pp0_stage9_subdone;
reg    ap_condition_pp0_exit_iter0_state11;
wire    ap_block_pp0_stage15_subdone;
reg   [9:0] X_R_0_address0;
reg    X_R_0_ce0;
reg    X_R_0_we0;
reg   [31:0] X_R_0_d0;
wire   [31:0] X_R_0_q0;
reg    X_R_0_ce1;
reg    X_R_0_we1;
wire   [31:0] X_R_0_q1;
reg   [9:0] X_R_1_address0;
reg    X_R_1_ce0;
reg    X_R_1_we0;
reg   [31:0] X_R_1_d0;
wire   [31:0] X_R_1_q0;
reg    X_R_1_ce1;
reg    X_R_1_we1;
wire   [31:0] X_R_1_q1;
reg   [9:0] X_R_2_address0;
reg    X_R_2_ce0;
reg    X_R_2_we0;
reg   [31:0] X_R_2_d0;
wire   [31:0] X_R_2_q0;
reg    X_R_2_ce1;
reg    X_R_2_we1;
wire   [31:0] X_R_2_q1;
reg   [9:0] X_R_3_address0;
reg    X_R_3_ce0;
reg    X_R_3_we0;
reg   [31:0] X_R_3_d0;
wire   [31:0] X_R_3_q0;
reg    X_R_3_ce1;
reg    X_R_3_we1;
wire   [31:0] X_R_3_q1;
reg   [9:0] X_R_4_address0;
reg    X_R_4_ce0;
reg    X_R_4_we0;
reg   [31:0] X_R_4_d0;
wire   [31:0] X_R_4_q0;
reg    X_R_4_ce1;
reg    X_R_4_we1;
wire   [31:0] X_R_4_q1;
reg   [9:0] X_R_5_address0;
reg    X_R_5_ce0;
reg    X_R_5_we0;
reg   [31:0] X_R_5_d0;
wire   [31:0] X_R_5_q0;
reg    X_R_5_ce1;
reg    X_R_5_we1;
wire   [31:0] X_R_5_q1;
reg   [9:0] X_R_6_address0;
reg    X_R_6_ce0;
reg    X_R_6_we0;
reg   [31:0] X_R_6_d0;
wire   [31:0] X_R_6_q0;
reg    X_R_6_ce1;
reg    X_R_6_we1;
wire   [31:0] X_R_6_q1;
reg   [9:0] X_R_7_address0;
reg    X_R_7_ce0;
reg    X_R_7_we0;
reg   [31:0] X_R_7_d0;
wire   [31:0] X_R_7_q0;
reg    X_R_7_ce1;
reg    X_R_7_we1;
wire   [31:0] X_R_7_q1;
reg   [9:0] X_I_0_address0;
reg    X_I_0_ce0;
reg    X_I_0_we0;
reg   [31:0] X_I_0_d0;
wire   [31:0] X_I_0_q0;
reg    X_I_0_ce1;
reg    X_I_0_we1;
wire   [31:0] X_I_0_q1;
reg   [9:0] X_I_1_address0;
reg    X_I_1_ce0;
reg    X_I_1_we0;
reg   [31:0] X_I_1_d0;
wire   [31:0] X_I_1_q0;
reg    X_I_1_ce1;
reg    X_I_1_we1;
wire   [31:0] X_I_1_q1;
reg   [9:0] X_I_2_address0;
reg    X_I_2_ce0;
reg    X_I_2_we0;
reg   [31:0] X_I_2_d0;
wire   [31:0] X_I_2_q0;
reg    X_I_2_ce1;
reg    X_I_2_we1;
wire   [31:0] X_I_2_q1;
reg   [9:0] X_I_3_address0;
reg    X_I_3_ce0;
reg    X_I_3_we0;
reg   [31:0] X_I_3_d0;
wire   [31:0] X_I_3_q0;
reg    X_I_3_ce1;
reg    X_I_3_we1;
wire   [31:0] X_I_3_q1;
reg   [9:0] X_I_4_address0;
reg    X_I_4_ce0;
reg    X_I_4_we0;
reg   [31:0] X_I_4_d0;
wire   [31:0] X_I_4_q0;
reg    X_I_4_ce1;
reg    X_I_4_we1;
wire   [31:0] X_I_4_q1;
reg   [9:0] X_I_5_address0;
reg    X_I_5_ce0;
reg    X_I_5_we0;
reg   [31:0] X_I_5_d0;
wire   [31:0] X_I_5_q0;
reg    X_I_5_ce1;
reg    X_I_5_we1;
wire   [31:0] X_I_5_q1;
reg   [9:0] X_I_6_address0;
reg    X_I_6_ce0;
reg    X_I_6_we0;
reg   [31:0] X_I_6_d0;
wire   [31:0] X_I_6_q0;
reg    X_I_6_ce1;
reg    X_I_6_we1;
wire   [31:0] X_I_6_q1;
reg   [9:0] X_I_7_address0;
reg    X_I_7_ce0;
reg    X_I_7_we0;
reg   [31:0] X_I_7_d0;
wire   [31:0] X_I_7_q0;
reg    X_I_7_ce1;
reg    X_I_7_we1;
wire   [31:0] X_I_7_q1;
wire    grp_p_rand_fu_304_ap_start;
wire    grp_p_rand_fu_304_ap_done;
wire    grp_p_rand_fu_304_ap_idle;
wire    grp_p_rand_fu_304_ap_ready;
wire    grp_fft_fu_310_ap_start;
wire    grp_fft_fu_310_ap_done;
wire    grp_fft_fu_310_ap_idle;
wire    grp_fft_fu_310_ap_ready;
wire   [9:0] grp_fft_fu_310_X_R_0_address0;
wire    grp_fft_fu_310_X_R_0_ce0;
wire    grp_fft_fu_310_X_R_0_we0;
wire   [31:0] grp_fft_fu_310_X_R_0_d0;
wire   [9:0] grp_fft_fu_310_X_R_0_address1;
wire    grp_fft_fu_310_X_R_0_ce1;
wire    grp_fft_fu_310_X_R_0_we1;
wire   [31:0] grp_fft_fu_310_X_R_0_d1;
wire   [9:0] grp_fft_fu_310_X_R_1_address0;
wire    grp_fft_fu_310_X_R_1_ce0;
wire    grp_fft_fu_310_X_R_1_we0;
wire   [31:0] grp_fft_fu_310_X_R_1_d0;
wire   [9:0] grp_fft_fu_310_X_R_1_address1;
wire    grp_fft_fu_310_X_R_1_ce1;
wire    grp_fft_fu_310_X_R_1_we1;
wire   [31:0] grp_fft_fu_310_X_R_1_d1;
wire   [9:0] grp_fft_fu_310_X_R_2_address0;
wire    grp_fft_fu_310_X_R_2_ce0;
wire    grp_fft_fu_310_X_R_2_we0;
wire   [31:0] grp_fft_fu_310_X_R_2_d0;
wire   [9:0] grp_fft_fu_310_X_R_2_address1;
wire    grp_fft_fu_310_X_R_2_ce1;
wire    grp_fft_fu_310_X_R_2_we1;
wire   [31:0] grp_fft_fu_310_X_R_2_d1;
wire   [9:0] grp_fft_fu_310_X_R_3_address0;
wire    grp_fft_fu_310_X_R_3_ce0;
wire    grp_fft_fu_310_X_R_3_we0;
wire   [31:0] grp_fft_fu_310_X_R_3_d0;
wire   [9:0] grp_fft_fu_310_X_R_3_address1;
wire    grp_fft_fu_310_X_R_3_ce1;
wire    grp_fft_fu_310_X_R_3_we1;
wire   [31:0] grp_fft_fu_310_X_R_3_d1;
wire   [9:0] grp_fft_fu_310_X_R_4_address0;
wire    grp_fft_fu_310_X_R_4_ce0;
wire    grp_fft_fu_310_X_R_4_we0;
wire   [31:0] grp_fft_fu_310_X_R_4_d0;
wire   [9:0] grp_fft_fu_310_X_R_4_address1;
wire    grp_fft_fu_310_X_R_4_ce1;
wire    grp_fft_fu_310_X_R_4_we1;
wire   [31:0] grp_fft_fu_310_X_R_4_d1;
wire   [9:0] grp_fft_fu_310_X_R_5_address0;
wire    grp_fft_fu_310_X_R_5_ce0;
wire    grp_fft_fu_310_X_R_5_we0;
wire   [31:0] grp_fft_fu_310_X_R_5_d0;
wire   [9:0] grp_fft_fu_310_X_R_5_address1;
wire    grp_fft_fu_310_X_R_5_ce1;
wire    grp_fft_fu_310_X_R_5_we1;
wire   [31:0] grp_fft_fu_310_X_R_5_d1;
wire   [9:0] grp_fft_fu_310_X_R_6_address0;
wire    grp_fft_fu_310_X_R_6_ce0;
wire    grp_fft_fu_310_X_R_6_we0;
wire   [31:0] grp_fft_fu_310_X_R_6_d0;
wire   [9:0] grp_fft_fu_310_X_R_6_address1;
wire    grp_fft_fu_310_X_R_6_ce1;
wire    grp_fft_fu_310_X_R_6_we1;
wire   [31:0] grp_fft_fu_310_X_R_6_d1;
wire   [9:0] grp_fft_fu_310_X_R_7_address0;
wire    grp_fft_fu_310_X_R_7_ce0;
wire    grp_fft_fu_310_X_R_7_we0;
wire   [31:0] grp_fft_fu_310_X_R_7_d0;
wire   [9:0] grp_fft_fu_310_X_R_7_address1;
wire    grp_fft_fu_310_X_R_7_ce1;
wire    grp_fft_fu_310_X_R_7_we1;
wire   [31:0] grp_fft_fu_310_X_R_7_d1;
wire   [9:0] grp_fft_fu_310_X_I_0_address0;
wire    grp_fft_fu_310_X_I_0_ce0;
wire    grp_fft_fu_310_X_I_0_we0;
wire   [31:0] grp_fft_fu_310_X_I_0_d0;
wire   [9:0] grp_fft_fu_310_X_I_0_address1;
wire    grp_fft_fu_310_X_I_0_ce1;
wire    grp_fft_fu_310_X_I_0_we1;
wire   [31:0] grp_fft_fu_310_X_I_0_d1;
wire   [9:0] grp_fft_fu_310_X_I_1_address0;
wire    grp_fft_fu_310_X_I_1_ce0;
wire    grp_fft_fu_310_X_I_1_we0;
wire   [31:0] grp_fft_fu_310_X_I_1_d0;
wire   [9:0] grp_fft_fu_310_X_I_1_address1;
wire    grp_fft_fu_310_X_I_1_ce1;
wire    grp_fft_fu_310_X_I_1_we1;
wire   [31:0] grp_fft_fu_310_X_I_1_d1;
wire   [9:0] grp_fft_fu_310_X_I_2_address0;
wire    grp_fft_fu_310_X_I_2_ce0;
wire    grp_fft_fu_310_X_I_2_we0;
wire   [31:0] grp_fft_fu_310_X_I_2_d0;
wire   [9:0] grp_fft_fu_310_X_I_2_address1;
wire    grp_fft_fu_310_X_I_2_ce1;
wire    grp_fft_fu_310_X_I_2_we1;
wire   [31:0] grp_fft_fu_310_X_I_2_d1;
wire   [9:0] grp_fft_fu_310_X_I_3_address0;
wire    grp_fft_fu_310_X_I_3_ce0;
wire    grp_fft_fu_310_X_I_3_we0;
wire   [31:0] grp_fft_fu_310_X_I_3_d0;
wire   [9:0] grp_fft_fu_310_X_I_3_address1;
wire    grp_fft_fu_310_X_I_3_ce1;
wire    grp_fft_fu_310_X_I_3_we1;
wire   [31:0] grp_fft_fu_310_X_I_3_d1;
wire   [9:0] grp_fft_fu_310_X_I_4_address0;
wire    grp_fft_fu_310_X_I_4_ce0;
wire    grp_fft_fu_310_X_I_4_we0;
wire   [31:0] grp_fft_fu_310_X_I_4_d0;
wire   [9:0] grp_fft_fu_310_X_I_4_address1;
wire    grp_fft_fu_310_X_I_4_ce1;
wire    grp_fft_fu_310_X_I_4_we1;
wire   [31:0] grp_fft_fu_310_X_I_4_d1;
wire   [9:0] grp_fft_fu_310_X_I_5_address0;
wire    grp_fft_fu_310_X_I_5_ce0;
wire    grp_fft_fu_310_X_I_5_we0;
wire   [31:0] grp_fft_fu_310_X_I_5_d0;
wire   [9:0] grp_fft_fu_310_X_I_5_address1;
wire    grp_fft_fu_310_X_I_5_ce1;
wire    grp_fft_fu_310_X_I_5_we1;
wire   [31:0] grp_fft_fu_310_X_I_5_d1;
wire   [9:0] grp_fft_fu_310_X_I_6_address0;
wire    grp_fft_fu_310_X_I_6_ce0;
wire    grp_fft_fu_310_X_I_6_we0;
wire   [31:0] grp_fft_fu_310_X_I_6_d0;
wire   [9:0] grp_fft_fu_310_X_I_6_address1;
wire    grp_fft_fu_310_X_I_6_ce1;
wire    grp_fft_fu_310_X_I_6_we1;
wire   [31:0] grp_fft_fu_310_X_I_6_d1;
wire   [9:0] grp_fft_fu_310_X_I_7_address0;
wire    grp_fft_fu_310_X_I_7_ce0;
wire    grp_fft_fu_310_X_I_7_we0;
wire   [31:0] grp_fft_fu_310_X_I_7_d0;
wire   [9:0] grp_fft_fu_310_X_I_7_address1;
wire    grp_fft_fu_310_X_I_7_ce1;
wire    grp_fft_fu_310_X_I_7_we1;
wire   [31:0] grp_fft_fu_310_X_I_7_d1;
reg    grp_p_rand_fu_304_ap_start_reg;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage11;
wire    ap_block_pp0_stage12;
wire    ap_block_pp0_stage13;
wire    ap_block_pp0_stage14;
wire    ap_block_pp0_stage15;
wire    ap_block_pp0_stage0;
reg    grp_fft_fu_310_ap_start_reg;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
reg   [10:0] i_fu_44;
wire   [10:0] add_ln373_fu_410_p2;
reg   [31:0] grp_fu_334_p0;
reg   [18:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state27_blk;
reg    ap_ST_fsm_state28_blk;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 19'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_p_rand_fu_304_ap_start_reg = 1'b0;
#0 grp_fft_fu_310_ap_start_reg = 1'b0;
#0 i_fu_44 = 11'd0;
end

main_X_R_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
X_R_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(X_R_0_address0),
    .ce0(X_R_0_ce0),
    .we0(X_R_0_we0),
    .d0(X_R_0_d0),
    .q0(X_R_0_q0),
    .address1(grp_fft_fu_310_X_R_0_address1),
    .ce1(X_R_0_ce1),
    .we1(X_R_0_we1),
    .d1(grp_fft_fu_310_X_R_0_d1),
    .q1(X_R_0_q1)
);

main_X_R_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
X_R_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(X_R_1_address0),
    .ce0(X_R_1_ce0),
    .we0(X_R_1_we0),
    .d0(X_R_1_d0),
    .q0(X_R_1_q0),
    .address1(grp_fft_fu_310_X_R_1_address1),
    .ce1(X_R_1_ce1),
    .we1(X_R_1_we1),
    .d1(grp_fft_fu_310_X_R_1_d1),
    .q1(X_R_1_q1)
);

main_X_R_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
X_R_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(X_R_2_address0),
    .ce0(X_R_2_ce0),
    .we0(X_R_2_we0),
    .d0(X_R_2_d0),
    .q0(X_R_2_q0),
    .address1(grp_fft_fu_310_X_R_2_address1),
    .ce1(X_R_2_ce1),
    .we1(X_R_2_we1),
    .d1(grp_fft_fu_310_X_R_2_d1),
    .q1(X_R_2_q1)
);

main_X_R_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
X_R_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(X_R_3_address0),
    .ce0(X_R_3_ce0),
    .we0(X_R_3_we0),
    .d0(X_R_3_d0),
    .q0(X_R_3_q0),
    .address1(grp_fft_fu_310_X_R_3_address1),
    .ce1(X_R_3_ce1),
    .we1(X_R_3_we1),
    .d1(grp_fft_fu_310_X_R_3_d1),
    .q1(X_R_3_q1)
);

main_X_R_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
X_R_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(X_R_4_address0),
    .ce0(X_R_4_ce0),
    .we0(X_R_4_we0),
    .d0(X_R_4_d0),
    .q0(X_R_4_q0),
    .address1(grp_fft_fu_310_X_R_4_address1),
    .ce1(X_R_4_ce1),
    .we1(X_R_4_we1),
    .d1(grp_fft_fu_310_X_R_4_d1),
    .q1(X_R_4_q1)
);

main_X_R_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
X_R_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(X_R_5_address0),
    .ce0(X_R_5_ce0),
    .we0(X_R_5_we0),
    .d0(X_R_5_d0),
    .q0(X_R_5_q0),
    .address1(grp_fft_fu_310_X_R_5_address1),
    .ce1(X_R_5_ce1),
    .we1(X_R_5_we1),
    .d1(grp_fft_fu_310_X_R_5_d1),
    .q1(X_R_5_q1)
);

main_X_R_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
X_R_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(X_R_6_address0),
    .ce0(X_R_6_ce0),
    .we0(X_R_6_we0),
    .d0(X_R_6_d0),
    .q0(X_R_6_q0),
    .address1(grp_fft_fu_310_X_R_6_address1),
    .ce1(X_R_6_ce1),
    .we1(X_R_6_we1),
    .d1(grp_fft_fu_310_X_R_6_d1),
    .q1(X_R_6_q1)
);

main_X_R_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
X_R_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(X_R_7_address0),
    .ce0(X_R_7_ce0),
    .we0(X_R_7_we0),
    .d0(X_R_7_d0),
    .q0(X_R_7_q0),
    .address1(grp_fft_fu_310_X_R_7_address1),
    .ce1(X_R_7_ce1),
    .we1(X_R_7_we1),
    .d1(grp_fft_fu_310_X_R_7_d1),
    .q1(X_R_7_q1)
);

main_X_R_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
X_I_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(X_I_0_address0),
    .ce0(X_I_0_ce0),
    .we0(X_I_0_we0),
    .d0(X_I_0_d0),
    .q0(X_I_0_q0),
    .address1(grp_fft_fu_310_X_I_0_address1),
    .ce1(X_I_0_ce1),
    .we1(X_I_0_we1),
    .d1(grp_fft_fu_310_X_I_0_d1),
    .q1(X_I_0_q1)
);

main_X_R_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
X_I_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(X_I_1_address0),
    .ce0(X_I_1_ce0),
    .we0(X_I_1_we0),
    .d0(X_I_1_d0),
    .q0(X_I_1_q0),
    .address1(grp_fft_fu_310_X_I_1_address1),
    .ce1(X_I_1_ce1),
    .we1(X_I_1_we1),
    .d1(grp_fft_fu_310_X_I_1_d1),
    .q1(X_I_1_q1)
);

main_X_R_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
X_I_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(X_I_2_address0),
    .ce0(X_I_2_ce0),
    .we0(X_I_2_we0),
    .d0(X_I_2_d0),
    .q0(X_I_2_q0),
    .address1(grp_fft_fu_310_X_I_2_address1),
    .ce1(X_I_2_ce1),
    .we1(X_I_2_we1),
    .d1(grp_fft_fu_310_X_I_2_d1),
    .q1(X_I_2_q1)
);

main_X_R_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
X_I_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(X_I_3_address0),
    .ce0(X_I_3_ce0),
    .we0(X_I_3_we0),
    .d0(X_I_3_d0),
    .q0(X_I_3_q0),
    .address1(grp_fft_fu_310_X_I_3_address1),
    .ce1(X_I_3_ce1),
    .we1(X_I_3_we1),
    .d1(grp_fft_fu_310_X_I_3_d1),
    .q1(X_I_3_q1)
);

main_X_R_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
X_I_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(X_I_4_address0),
    .ce0(X_I_4_ce0),
    .we0(X_I_4_we0),
    .d0(X_I_4_d0),
    .q0(X_I_4_q0),
    .address1(grp_fft_fu_310_X_I_4_address1),
    .ce1(X_I_4_ce1),
    .we1(X_I_4_we1),
    .d1(grp_fft_fu_310_X_I_4_d1),
    .q1(X_I_4_q1)
);

main_X_R_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
X_I_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(X_I_5_address0),
    .ce0(X_I_5_ce0),
    .we0(X_I_5_we0),
    .d0(X_I_5_d0),
    .q0(X_I_5_q0),
    .address1(grp_fft_fu_310_X_I_5_address1),
    .ce1(X_I_5_ce1),
    .we1(X_I_5_we1),
    .d1(grp_fft_fu_310_X_I_5_d1),
    .q1(X_I_5_q1)
);

main_X_R_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
X_I_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(X_I_6_address0),
    .ce0(X_I_6_ce0),
    .we0(X_I_6_we0),
    .d0(X_I_6_d0),
    .q0(X_I_6_q0),
    .address1(grp_fft_fu_310_X_I_6_address1),
    .ce1(X_I_6_ce1),
    .we1(X_I_6_we1),
    .d1(grp_fft_fu_310_X_I_6_d1),
    .q1(X_I_6_q1)
);

main_X_R_0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
X_I_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(X_I_7_address0),
    .ce0(X_I_7_ce0),
    .we0(X_I_7_we0),
    .d0(X_I_7_d0),
    .q0(X_I_7_q0),
    .address1(grp_fft_fu_310_X_I_7_address1),
    .ce1(X_I_7_ce1),
    .we1(X_I_7_we1),
    .d1(grp_fft_fu_310_X_I_7_d1),
    .q1(X_I_7_q1)
);

main_p_rand grp_p_rand_fu_304(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_p_rand_fu_304_ap_start),
    .ap_done(grp_p_rand_fu_304_ap_done),
    .ap_idle(grp_p_rand_fu_304_ap_idle),
    .ap_ready(grp_p_rand_fu_304_ap_ready),
    .ap_return(grp_p_rand_fu_304_ap_return),
    .ap_ce(1'b1)
);

main_fft grp_fft_fu_310(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_fft_fu_310_ap_start),
    .ap_done(grp_fft_fu_310_ap_done),
    .ap_idle(grp_fft_fu_310_ap_idle),
    .ap_ready(grp_fft_fu_310_ap_ready),
    .X_R_0_address0(grp_fft_fu_310_X_R_0_address0),
    .X_R_0_ce0(grp_fft_fu_310_X_R_0_ce0),
    .X_R_0_we0(grp_fft_fu_310_X_R_0_we0),
    .X_R_0_d0(grp_fft_fu_310_X_R_0_d0),
    .X_R_0_q0(X_R_0_q0),
    .X_R_0_address1(grp_fft_fu_310_X_R_0_address1),
    .X_R_0_ce1(grp_fft_fu_310_X_R_0_ce1),
    .X_R_0_we1(grp_fft_fu_310_X_R_0_we1),
    .X_R_0_d1(grp_fft_fu_310_X_R_0_d1),
    .X_R_0_q1(X_R_0_q1),
    .X_R_1_address0(grp_fft_fu_310_X_R_1_address0),
    .X_R_1_ce0(grp_fft_fu_310_X_R_1_ce0),
    .X_R_1_we0(grp_fft_fu_310_X_R_1_we0),
    .X_R_1_d0(grp_fft_fu_310_X_R_1_d0),
    .X_R_1_q0(X_R_1_q0),
    .X_R_1_address1(grp_fft_fu_310_X_R_1_address1),
    .X_R_1_ce1(grp_fft_fu_310_X_R_1_ce1),
    .X_R_1_we1(grp_fft_fu_310_X_R_1_we1),
    .X_R_1_d1(grp_fft_fu_310_X_R_1_d1),
    .X_R_1_q1(X_R_1_q1),
    .X_R_2_address0(grp_fft_fu_310_X_R_2_address0),
    .X_R_2_ce0(grp_fft_fu_310_X_R_2_ce0),
    .X_R_2_we0(grp_fft_fu_310_X_R_2_we0),
    .X_R_2_d0(grp_fft_fu_310_X_R_2_d0),
    .X_R_2_q0(X_R_2_q0),
    .X_R_2_address1(grp_fft_fu_310_X_R_2_address1),
    .X_R_2_ce1(grp_fft_fu_310_X_R_2_ce1),
    .X_R_2_we1(grp_fft_fu_310_X_R_2_we1),
    .X_R_2_d1(grp_fft_fu_310_X_R_2_d1),
    .X_R_2_q1(X_R_2_q1),
    .X_R_3_address0(grp_fft_fu_310_X_R_3_address0),
    .X_R_3_ce0(grp_fft_fu_310_X_R_3_ce0),
    .X_R_3_we0(grp_fft_fu_310_X_R_3_we0),
    .X_R_3_d0(grp_fft_fu_310_X_R_3_d0),
    .X_R_3_q0(X_R_3_q0),
    .X_R_3_address1(grp_fft_fu_310_X_R_3_address1),
    .X_R_3_ce1(grp_fft_fu_310_X_R_3_ce1),
    .X_R_3_we1(grp_fft_fu_310_X_R_3_we1),
    .X_R_3_d1(grp_fft_fu_310_X_R_3_d1),
    .X_R_3_q1(X_R_3_q1),
    .X_R_4_address0(grp_fft_fu_310_X_R_4_address0),
    .X_R_4_ce0(grp_fft_fu_310_X_R_4_ce0),
    .X_R_4_we0(grp_fft_fu_310_X_R_4_we0),
    .X_R_4_d0(grp_fft_fu_310_X_R_4_d0),
    .X_R_4_q0(X_R_4_q0),
    .X_R_4_address1(grp_fft_fu_310_X_R_4_address1),
    .X_R_4_ce1(grp_fft_fu_310_X_R_4_ce1),
    .X_R_4_we1(grp_fft_fu_310_X_R_4_we1),
    .X_R_4_d1(grp_fft_fu_310_X_R_4_d1),
    .X_R_4_q1(X_R_4_q1),
    .X_R_5_address0(grp_fft_fu_310_X_R_5_address0),
    .X_R_5_ce0(grp_fft_fu_310_X_R_5_ce0),
    .X_R_5_we0(grp_fft_fu_310_X_R_5_we0),
    .X_R_5_d0(grp_fft_fu_310_X_R_5_d0),
    .X_R_5_q0(X_R_5_q0),
    .X_R_5_address1(grp_fft_fu_310_X_R_5_address1),
    .X_R_5_ce1(grp_fft_fu_310_X_R_5_ce1),
    .X_R_5_we1(grp_fft_fu_310_X_R_5_we1),
    .X_R_5_d1(grp_fft_fu_310_X_R_5_d1),
    .X_R_5_q1(X_R_5_q1),
    .X_R_6_address0(grp_fft_fu_310_X_R_6_address0),
    .X_R_6_ce0(grp_fft_fu_310_X_R_6_ce0),
    .X_R_6_we0(grp_fft_fu_310_X_R_6_we0),
    .X_R_6_d0(grp_fft_fu_310_X_R_6_d0),
    .X_R_6_q0(X_R_6_q0),
    .X_R_6_address1(grp_fft_fu_310_X_R_6_address1),
    .X_R_6_ce1(grp_fft_fu_310_X_R_6_ce1),
    .X_R_6_we1(grp_fft_fu_310_X_R_6_we1),
    .X_R_6_d1(grp_fft_fu_310_X_R_6_d1),
    .X_R_6_q1(X_R_6_q1),
    .X_R_7_address0(grp_fft_fu_310_X_R_7_address0),
    .X_R_7_ce0(grp_fft_fu_310_X_R_7_ce0),
    .X_R_7_we0(grp_fft_fu_310_X_R_7_we0),
    .X_R_7_d0(grp_fft_fu_310_X_R_7_d0),
    .X_R_7_q0(X_R_7_q0),
    .X_R_7_address1(grp_fft_fu_310_X_R_7_address1),
    .X_R_7_ce1(grp_fft_fu_310_X_R_7_ce1),
    .X_R_7_we1(grp_fft_fu_310_X_R_7_we1),
    .X_R_7_d1(grp_fft_fu_310_X_R_7_d1),
    .X_R_7_q1(X_R_7_q1),
    .X_I_0_address0(grp_fft_fu_310_X_I_0_address0),
    .X_I_0_ce0(grp_fft_fu_310_X_I_0_ce0),
    .X_I_0_we0(grp_fft_fu_310_X_I_0_we0),
    .X_I_0_d0(grp_fft_fu_310_X_I_0_d0),
    .X_I_0_q0(X_I_0_q0),
    .X_I_0_address1(grp_fft_fu_310_X_I_0_address1),
    .X_I_0_ce1(grp_fft_fu_310_X_I_0_ce1),
    .X_I_0_we1(grp_fft_fu_310_X_I_0_we1),
    .X_I_0_d1(grp_fft_fu_310_X_I_0_d1),
    .X_I_0_q1(X_I_0_q1),
    .X_I_1_address0(grp_fft_fu_310_X_I_1_address0),
    .X_I_1_ce0(grp_fft_fu_310_X_I_1_ce0),
    .X_I_1_we0(grp_fft_fu_310_X_I_1_we0),
    .X_I_1_d0(grp_fft_fu_310_X_I_1_d0),
    .X_I_1_q0(X_I_1_q0),
    .X_I_1_address1(grp_fft_fu_310_X_I_1_address1),
    .X_I_1_ce1(grp_fft_fu_310_X_I_1_ce1),
    .X_I_1_we1(grp_fft_fu_310_X_I_1_we1),
    .X_I_1_d1(grp_fft_fu_310_X_I_1_d1),
    .X_I_1_q1(X_I_1_q1),
    .X_I_2_address0(grp_fft_fu_310_X_I_2_address0),
    .X_I_2_ce0(grp_fft_fu_310_X_I_2_ce0),
    .X_I_2_we0(grp_fft_fu_310_X_I_2_we0),
    .X_I_2_d0(grp_fft_fu_310_X_I_2_d0),
    .X_I_2_q0(X_I_2_q0),
    .X_I_2_address1(grp_fft_fu_310_X_I_2_address1),
    .X_I_2_ce1(grp_fft_fu_310_X_I_2_ce1),
    .X_I_2_we1(grp_fft_fu_310_X_I_2_we1),
    .X_I_2_d1(grp_fft_fu_310_X_I_2_d1),
    .X_I_2_q1(X_I_2_q1),
    .X_I_3_address0(grp_fft_fu_310_X_I_3_address0),
    .X_I_3_ce0(grp_fft_fu_310_X_I_3_ce0),
    .X_I_3_we0(grp_fft_fu_310_X_I_3_we0),
    .X_I_3_d0(grp_fft_fu_310_X_I_3_d0),
    .X_I_3_q0(X_I_3_q0),
    .X_I_3_address1(grp_fft_fu_310_X_I_3_address1),
    .X_I_3_ce1(grp_fft_fu_310_X_I_3_ce1),
    .X_I_3_we1(grp_fft_fu_310_X_I_3_we1),
    .X_I_3_d1(grp_fft_fu_310_X_I_3_d1),
    .X_I_3_q1(X_I_3_q1),
    .X_I_4_address0(grp_fft_fu_310_X_I_4_address0),
    .X_I_4_ce0(grp_fft_fu_310_X_I_4_ce0),
    .X_I_4_we0(grp_fft_fu_310_X_I_4_we0),
    .X_I_4_d0(grp_fft_fu_310_X_I_4_d0),
    .X_I_4_q0(X_I_4_q0),
    .X_I_4_address1(grp_fft_fu_310_X_I_4_address1),
    .X_I_4_ce1(grp_fft_fu_310_X_I_4_ce1),
    .X_I_4_we1(grp_fft_fu_310_X_I_4_we1),
    .X_I_4_d1(grp_fft_fu_310_X_I_4_d1),
    .X_I_4_q1(X_I_4_q1),
    .X_I_5_address0(grp_fft_fu_310_X_I_5_address0),
    .X_I_5_ce0(grp_fft_fu_310_X_I_5_ce0),
    .X_I_5_we0(grp_fft_fu_310_X_I_5_we0),
    .X_I_5_d0(grp_fft_fu_310_X_I_5_d0),
    .X_I_5_q0(X_I_5_q0),
    .X_I_5_address1(grp_fft_fu_310_X_I_5_address1),
    .X_I_5_ce1(grp_fft_fu_310_X_I_5_ce1),
    .X_I_5_we1(grp_fft_fu_310_X_I_5_we1),
    .X_I_5_d1(grp_fft_fu_310_X_I_5_d1),
    .X_I_5_q1(X_I_5_q1),
    .X_I_6_address0(grp_fft_fu_310_X_I_6_address0),
    .X_I_6_ce0(grp_fft_fu_310_X_I_6_ce0),
    .X_I_6_we0(grp_fft_fu_310_X_I_6_we0),
    .X_I_6_d0(grp_fft_fu_310_X_I_6_d0),
    .X_I_6_q0(X_I_6_q0),
    .X_I_6_address1(grp_fft_fu_310_X_I_6_address1),
    .X_I_6_ce1(grp_fft_fu_310_X_I_6_ce1),
    .X_I_6_we1(grp_fft_fu_310_X_I_6_we1),
    .X_I_6_d1(grp_fft_fu_310_X_I_6_d1),
    .X_I_6_q1(X_I_6_q1),
    .X_I_7_address0(grp_fft_fu_310_X_I_7_address0),
    .X_I_7_ce0(grp_fft_fu_310_X_I_7_ce0),
    .X_I_7_we0(grp_fft_fu_310_X_I_7_we0),
    .X_I_7_d0(grp_fft_fu_310_X_I_7_d0),
    .X_I_7_q0(X_I_7_q0),
    .X_I_7_address1(grp_fft_fu_310_X_I_7_address1),
    .X_I_7_ce1(grp_fft_fu_310_X_I_7_ce1),
    .X_I_7_we1(grp_fft_fu_310_X_I_7_we1),
    .X_I_7_d1(grp_fft_fu_310_X_I_7_d1),
    .X_I_7_q1(X_I_7_q1)
);

main_uitofp_32ns_32_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
uitofp_32ns_32_7_no_dsp_1_U135(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_334_p0),
    .ce(1'b1),
    .dout(grp_fu_334_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage9_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state11) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage9_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_fft_fu_310_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state27)) begin
            grp_fft_fu_310_ap_start_reg <= 1'b1;
        end else if ((grp_fft_fu_310_ap_ready == 1'b1)) begin
            grp_fft_fu_310_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_p_rand_fu_304_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_reg_482 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_reg_482 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_reg_482 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_reg_482 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_reg_482 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_fu_369_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_reg_482 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & 
    (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_reg_482 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_reg_482 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_reg_482 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_reg_482 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_reg_482 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_reg_482 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_reg_482 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & 
    (icmp_ln373_reg_482 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_reg_482 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
            grp_p_rand_fu_304_ap_start_reg <= 1'b1;
        end else if ((grp_p_rand_fu_304_ap_ready == 1'b1)) begin
            grp_p_rand_fu_304_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_44 <= 11'd0;
    end else if (((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_reg_482 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        i_fu_44 <= add_ln373_fu_410_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_1_reg_476 <= i_fu_44;
        icmp_ln373_reg_482 <= icmp_ln373_fu_369_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) 
    & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_337 <= grp_p_rand_fu_304_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) 
    & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_341 <= grp_fu_334_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        zext_ln373_reg_521[10 : 0] <= zext_ln373_fu_415_p1[10 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        X_I_0_address0 = zext_ln373_reg_521;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_0_address0 = grp_fft_fu_310_X_I_0_address0;
    end else begin
        X_I_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        X_I_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_0_ce0 = grp_fft_fu_310_X_I_0_ce0;
    end else begin
        X_I_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_0_ce1 = grp_fft_fu_310_X_I_0_ce1;
    end else begin
        X_I_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        X_I_0_d0 = reg_341;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_0_d0 = grp_fft_fu_310_X_I_0_d0;
    end else begin
        X_I_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        X_I_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_0_we0 = grp_fft_fu_310_X_I_0_we0;
    end else begin
        X_I_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_0_we1 = grp_fft_fu_310_X_I_0_we1;
    end else begin
        X_I_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        X_I_1_address0 = zext_ln373_reg_521;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_1_address0 = grp_fft_fu_310_X_I_1_address0;
    end else begin
        X_I_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        X_I_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_1_ce0 = grp_fft_fu_310_X_I_1_ce0;
    end else begin
        X_I_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_1_ce1 = grp_fft_fu_310_X_I_1_ce1;
    end else begin
        X_I_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        X_I_1_d0 = reg_341;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_1_d0 = grp_fft_fu_310_X_I_1_d0;
    end else begin
        X_I_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        X_I_1_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_1_we0 = grp_fft_fu_310_X_I_1_we0;
    end else begin
        X_I_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_1_we1 = grp_fft_fu_310_X_I_1_we1;
    end else begin
        X_I_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        X_I_2_address0 = zext_ln373_reg_521;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_2_address0 = grp_fft_fu_310_X_I_2_address0;
    end else begin
        X_I_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        X_I_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_2_ce0 = grp_fft_fu_310_X_I_2_ce0;
    end else begin
        X_I_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_2_ce1 = grp_fft_fu_310_X_I_2_ce1;
    end else begin
        X_I_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        X_I_2_d0 = reg_341;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_2_d0 = grp_fft_fu_310_X_I_2_d0;
    end else begin
        X_I_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        X_I_2_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_2_we0 = grp_fft_fu_310_X_I_2_we0;
    end else begin
        X_I_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_2_we1 = grp_fft_fu_310_X_I_2_we1;
    end else begin
        X_I_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        X_I_3_address0 = zext_ln373_reg_521;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_3_address0 = grp_fft_fu_310_X_I_3_address0;
    end else begin
        X_I_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        X_I_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_3_ce0 = grp_fft_fu_310_X_I_3_ce0;
    end else begin
        X_I_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_3_ce1 = grp_fft_fu_310_X_I_3_ce1;
    end else begin
        X_I_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        X_I_3_d0 = reg_341;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_3_d0 = grp_fft_fu_310_X_I_3_d0;
    end else begin
        X_I_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        X_I_3_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_3_we0 = grp_fft_fu_310_X_I_3_we0;
    end else begin
        X_I_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_3_we1 = grp_fft_fu_310_X_I_3_we1;
    end else begin
        X_I_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        X_I_4_address0 = zext_ln373_reg_521;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_4_address0 = grp_fft_fu_310_X_I_4_address0;
    end else begin
        X_I_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        X_I_4_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_4_ce0 = grp_fft_fu_310_X_I_4_ce0;
    end else begin
        X_I_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_4_ce1 = grp_fft_fu_310_X_I_4_ce1;
    end else begin
        X_I_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        X_I_4_d0 = reg_341;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_4_d0 = grp_fft_fu_310_X_I_4_d0;
    end else begin
        X_I_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        X_I_4_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_4_we0 = grp_fft_fu_310_X_I_4_we0;
    end else begin
        X_I_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_4_we1 = grp_fft_fu_310_X_I_4_we1;
    end else begin
        X_I_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        X_I_5_address0 = zext_ln373_reg_521;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_5_address0 = grp_fft_fu_310_X_I_5_address0;
    end else begin
        X_I_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        X_I_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_5_ce0 = grp_fft_fu_310_X_I_5_ce0;
    end else begin
        X_I_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_5_ce1 = grp_fft_fu_310_X_I_5_ce1;
    end else begin
        X_I_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        X_I_5_d0 = reg_341;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_5_d0 = grp_fft_fu_310_X_I_5_d0;
    end else begin
        X_I_5_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        X_I_5_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_5_we0 = grp_fft_fu_310_X_I_5_we0;
    end else begin
        X_I_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_5_we1 = grp_fft_fu_310_X_I_5_we1;
    end else begin
        X_I_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        X_I_6_address0 = zext_ln373_reg_521;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_6_address0 = grp_fft_fu_310_X_I_6_address0;
    end else begin
        X_I_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        X_I_6_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_6_ce0 = grp_fft_fu_310_X_I_6_ce0;
    end else begin
        X_I_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_6_ce1 = grp_fft_fu_310_X_I_6_ce1;
    end else begin
        X_I_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        X_I_6_d0 = reg_341;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_6_d0 = grp_fft_fu_310_X_I_6_d0;
    end else begin
        X_I_6_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        X_I_6_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_6_we0 = grp_fft_fu_310_X_I_6_we0;
    end else begin
        X_I_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_6_we1 = grp_fft_fu_310_X_I_6_we1;
    end else begin
        X_I_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        X_I_7_address0 = zext_ln373_reg_521;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_7_address0 = grp_fft_fu_310_X_I_7_address0;
    end else begin
        X_I_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        X_I_7_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_7_ce0 = grp_fft_fu_310_X_I_7_ce0;
    end else begin
        X_I_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_7_ce1 = grp_fft_fu_310_X_I_7_ce1;
    end else begin
        X_I_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        X_I_7_d0 = reg_341;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_7_d0 = grp_fft_fu_310_X_I_7_d0;
    end else begin
        X_I_7_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        X_I_7_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_7_we0 = grp_fft_fu_310_X_I_7_we0;
    end else begin
        X_I_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_I_7_we1 = grp_fft_fu_310_X_I_7_we1;
    end else begin
        X_I_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        X_R_0_address0 = zext_ln373_fu_415_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_0_address0 = grp_fft_fu_310_X_R_0_address0;
    end else begin
        X_R_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        X_R_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_0_ce0 = grp_fft_fu_310_X_R_0_ce0;
    end else begin
        X_R_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_0_ce1 = grp_fft_fu_310_X_R_0_ce1;
    end else begin
        X_R_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        X_R_0_d0 = reg_341;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_0_d0 = grp_fft_fu_310_X_R_0_d0;
    end else begin
        X_R_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_reg_482 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        X_R_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_0_we0 = grp_fft_fu_310_X_R_0_we0;
    end else begin
        X_R_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_0_we1 = grp_fft_fu_310_X_R_0_we1;
    end else begin
        X_R_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        X_R_1_address0 = zext_ln373_reg_521;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_1_address0 = grp_fft_fu_310_X_R_1_address0;
    end else begin
        X_R_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        X_R_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_1_ce0 = grp_fft_fu_310_X_R_1_ce0;
    end else begin
        X_R_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_1_ce1 = grp_fft_fu_310_X_R_1_ce1;
    end else begin
        X_R_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        X_R_1_d0 = reg_341;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_1_d0 = grp_fft_fu_310_X_R_1_d0;
    end else begin
        X_R_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_reg_482 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        X_R_1_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_1_we0 = grp_fft_fu_310_X_R_1_we0;
    end else begin
        X_R_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_1_we1 = grp_fft_fu_310_X_R_1_we1;
    end else begin
        X_R_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        X_R_2_address0 = zext_ln373_reg_521;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_2_address0 = grp_fft_fu_310_X_R_2_address0;
    end else begin
        X_R_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        X_R_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_2_ce0 = grp_fft_fu_310_X_R_2_ce0;
    end else begin
        X_R_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_2_ce1 = grp_fft_fu_310_X_R_2_ce1;
    end else begin
        X_R_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        X_R_2_d0 = reg_341;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_2_d0 = grp_fft_fu_310_X_R_2_d0;
    end else begin
        X_R_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_reg_482 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        X_R_2_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_2_we0 = grp_fft_fu_310_X_R_2_we0;
    end else begin
        X_R_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_2_we1 = grp_fft_fu_310_X_R_2_we1;
    end else begin
        X_R_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        X_R_3_address0 = zext_ln373_reg_521;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_3_address0 = grp_fft_fu_310_X_R_3_address0;
    end else begin
        X_R_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        X_R_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_3_ce0 = grp_fft_fu_310_X_R_3_ce0;
    end else begin
        X_R_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_3_ce1 = grp_fft_fu_310_X_R_3_ce1;
    end else begin
        X_R_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        X_R_3_d0 = reg_341;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_3_d0 = grp_fft_fu_310_X_R_3_d0;
    end else begin
        X_R_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_reg_482 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        X_R_3_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_3_we0 = grp_fft_fu_310_X_R_3_we0;
    end else begin
        X_R_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_3_we1 = grp_fft_fu_310_X_R_3_we1;
    end else begin
        X_R_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        X_R_4_address0 = zext_ln373_reg_521;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_4_address0 = grp_fft_fu_310_X_R_4_address0;
    end else begin
        X_R_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        X_R_4_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_4_ce0 = grp_fft_fu_310_X_R_4_ce0;
    end else begin
        X_R_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_4_ce1 = grp_fft_fu_310_X_R_4_ce1;
    end else begin
        X_R_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        X_R_4_d0 = reg_341;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_4_d0 = grp_fft_fu_310_X_R_4_d0;
    end else begin
        X_R_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_reg_482 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        X_R_4_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_4_we0 = grp_fft_fu_310_X_R_4_we0;
    end else begin
        X_R_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_4_we1 = grp_fft_fu_310_X_R_4_we1;
    end else begin
        X_R_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        X_R_5_address0 = zext_ln373_reg_521;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_5_address0 = grp_fft_fu_310_X_R_5_address0;
    end else begin
        X_R_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        X_R_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_5_ce0 = grp_fft_fu_310_X_R_5_ce0;
    end else begin
        X_R_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_5_ce1 = grp_fft_fu_310_X_R_5_ce1;
    end else begin
        X_R_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        X_R_5_d0 = reg_341;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_5_d0 = grp_fft_fu_310_X_R_5_d0;
    end else begin
        X_R_5_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_reg_482 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        X_R_5_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_5_we0 = grp_fft_fu_310_X_R_5_we0;
    end else begin
        X_R_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_5_we1 = grp_fft_fu_310_X_R_5_we1;
    end else begin
        X_R_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        X_R_6_address0 = zext_ln373_reg_521;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_6_address0 = grp_fft_fu_310_X_R_6_address0;
    end else begin
        X_R_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        X_R_6_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_6_ce0 = grp_fft_fu_310_X_R_6_ce0;
    end else begin
        X_R_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_6_ce1 = grp_fft_fu_310_X_R_6_ce1;
    end else begin
        X_R_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        X_R_6_d0 = reg_341;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_6_d0 = grp_fft_fu_310_X_R_6_d0;
    end else begin
        X_R_6_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_reg_482 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        X_R_6_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_6_we0 = grp_fft_fu_310_X_R_6_we0;
    end else begin
        X_R_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_6_we1 = grp_fft_fu_310_X_R_6_we1;
    end else begin
        X_R_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_R_7_address0 = zext_ln373_reg_521;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_7_address0 = grp_fft_fu_310_X_R_7_address0;
    end else begin
        X_R_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_R_7_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_7_ce0 = grp_fft_fu_310_X_R_7_ce0;
    end else begin
        X_R_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_7_ce1 = grp_fft_fu_310_X_R_7_ce1;
    end else begin
        X_R_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_R_7_d0 = reg_341;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_7_d0 = grp_fft_fu_310_X_R_7_d0;
    end else begin
        X_R_7_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_R_7_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_7_we0 = grp_fft_fu_310_X_R_7_we0;
    end else begin
        X_R_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        X_R_7_we1 = grp_fft_fu_310_X_R_7_we1;
    end else begin
        X_R_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state27_blk = 1'b0;

always @ (*) begin
    if ((grp_fft_fu_310_ap_done == 1'b0)) begin
        ap_ST_fsm_state28_blk = 1'b1;
    end else begin
        ap_ST_fsm_state28_blk = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln373_reg_482 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_fft_fu_310_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_fft_fu_310_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_334_p0 = zext_ln389_fu_464_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_334_p0 = zext_ln388_fu_459_p1;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_334_p0 = zext_ln387_fu_454_p1;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_334_p0 = zext_ln386_fu_449_p1;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_334_p0 = zext_ln385_fu_444_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_334_p0 = zext_ln384_fu_439_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_334_p0 = zext_ln383_fu_434_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_334_p0 = zext_ln382_fu_429_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_334_p0 = zext_ln381_fu_419_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_334_p0 = zext_ln380_fu_405_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_334_p0 = zext_ln379_fu_400_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_334_p0 = zext_ln378_fu_395_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_334_p0 = zext_ln377_fu_390_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_334_p0 = zext_ln376_fu_385_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_334_p0 = zext_ln375_fu_380_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_334_p0 = zext_ln374_fu_375_p1;
    end else begin
        grp_fu_334_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((~((1'b0 == ap_block_pp0_stage9_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_reg_482 == 1'd1)) & (1'b0 == ap_block_pp0_stage9_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else if (((1'b0 == ap_block_pp0_stage9_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_reg_482 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            if (((grp_fft_fu_310_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln373_fu_410_p2 = (i_1_reg_476 + 11'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd18];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return = 32'd0;

assign grp_fft_fu_310_ap_start = grp_fft_fu_310_ap_start_reg;

assign grp_p_rand_fu_304_ap_start = grp_p_rand_fu_304_ap_start_reg;

assign icmp_ln373_fu_369_p2 = ((i_fu_44 == 11'd1024) ? 1'b1 : 1'b0);

assign zext_ln373_fu_415_p1 = i_1_reg_476;

assign zext_ln374_fu_375_p1 = reg_337;

assign zext_ln375_fu_380_p1 = reg_337;

assign zext_ln376_fu_385_p1 = reg_337;

assign zext_ln377_fu_390_p1 = reg_337;

assign zext_ln378_fu_395_p1 = reg_337;

assign zext_ln379_fu_400_p1 = reg_337;

assign zext_ln380_fu_405_p1 = reg_337;

assign zext_ln381_fu_419_p1 = reg_337;

assign zext_ln382_fu_429_p1 = reg_337;

assign zext_ln383_fu_434_p1 = reg_337;

assign zext_ln384_fu_439_p1 = reg_337;

assign zext_ln385_fu_444_p1 = reg_337;

assign zext_ln386_fu_449_p1 = reg_337;

assign zext_ln387_fu_454_p1 = reg_337;

assign zext_ln388_fu_459_p1 = reg_337;

assign zext_ln389_fu_464_p1 = reg_337;

always @ (posedge ap_clk) begin
    zext_ln373_reg_521[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end

endmodule //main
