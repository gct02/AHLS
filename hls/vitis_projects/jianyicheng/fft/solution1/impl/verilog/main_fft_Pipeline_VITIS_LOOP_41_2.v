// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module main_fft_Pipeline_VITIS_LOOP_41_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        numBF,
        zext_ln41,
        select_ln38_1,
        X_R_0_address0,
        X_R_0_ce0,
        X_R_0_we0,
        X_R_0_d0,
        X_R_0_q0,
        X_R_0_address1,
        X_R_0_ce1,
        X_R_0_we1,
        X_R_0_d1,
        X_R_0_q1,
        X_I_0_address0,
        X_I_0_ce0,
        X_I_0_we0,
        X_I_0_d0,
        X_I_0_q0,
        X_I_0_address1,
        X_I_0_ce1,
        X_I_0_we1,
        X_I_0_d1,
        X_I_0_q1,
        cos_coefficients_table_address0,
        cos_coefficients_table_ce0,
        cos_coefficients_table_q0,
        sin_coefficients_table_address0,
        sin_coefficients_table_ce0,
        sin_coefficients_table_q0,
        grp_fu_1648_p_din0,
        grp_fu_1648_p_din1,
        grp_fu_1648_p_opcode,
        grp_fu_1648_p_dout0,
        grp_fu_1648_p_ce,
        grp_fu_1652_p_din0,
        grp_fu_1652_p_din1,
        grp_fu_1652_p_opcode,
        grp_fu_1652_p_dout0,
        grp_fu_1652_p_ce,
        grp_fu_1656_p_din0,
        grp_fu_1656_p_din1,
        grp_fu_1656_p_dout0,
        grp_fu_1656_p_ce,
        grp_fu_1660_p_din0,
        grp_fu_1660_p_din1,
        grp_fu_1660_p_dout0,
        grp_fu_1660_p_ce,
        grp_fu_1664_p_din0,
        grp_fu_1664_p_din1,
        grp_fu_1664_p_dout0,
        grp_fu_1664_p_ce,
        grp_fu_1668_p_din0,
        grp_fu_1668_p_din1,
        grp_fu_1668_p_dout0,
        grp_fu_1668_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 44'd1;
parameter    ap_ST_fsm_pp0_stage1 = 44'd2;
parameter    ap_ST_fsm_pp0_stage2 = 44'd4;
parameter    ap_ST_fsm_pp0_stage3 = 44'd8;
parameter    ap_ST_fsm_pp0_stage4 = 44'd16;
parameter    ap_ST_fsm_pp0_stage5 = 44'd32;
parameter    ap_ST_fsm_pp0_stage6 = 44'd64;
parameter    ap_ST_fsm_pp0_stage7 = 44'd128;
parameter    ap_ST_fsm_pp0_stage8 = 44'd256;
parameter    ap_ST_fsm_pp0_stage9 = 44'd512;
parameter    ap_ST_fsm_pp0_stage10 = 44'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 44'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 44'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 44'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 44'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 44'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 44'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 44'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 44'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 44'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 44'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 44'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 44'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 44'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 44'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 44'd33554432;
parameter    ap_ST_fsm_pp0_stage26 = 44'd67108864;
parameter    ap_ST_fsm_pp0_stage27 = 44'd134217728;
parameter    ap_ST_fsm_pp0_stage28 = 44'd268435456;
parameter    ap_ST_fsm_pp0_stage29 = 44'd536870912;
parameter    ap_ST_fsm_pp0_stage30 = 44'd1073741824;
parameter    ap_ST_fsm_pp0_stage31 = 44'd2147483648;
parameter    ap_ST_fsm_pp0_stage32 = 44'd4294967296;
parameter    ap_ST_fsm_pp0_stage33 = 44'd8589934592;
parameter    ap_ST_fsm_pp0_stage34 = 44'd17179869184;
parameter    ap_ST_fsm_pp0_stage35 = 44'd34359738368;
parameter    ap_ST_fsm_pp0_stage36 = 44'd68719476736;
parameter    ap_ST_fsm_pp0_stage37 = 44'd137438953472;
parameter    ap_ST_fsm_pp0_stage38 = 44'd274877906944;
parameter    ap_ST_fsm_pp0_stage39 = 44'd549755813888;
parameter    ap_ST_fsm_pp0_stage40 = 44'd1099511627776;
parameter    ap_ST_fsm_pp0_stage41 = 44'd2199023255552;
parameter    ap_ST_fsm_pp0_stage42 = 44'd4398046511104;
parameter    ap_ST_fsm_pp0_stage43 = 44'd8796093022208;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] numBF;
input  [3:0] zext_ln41;
input  [0:0] select_ln38_1;
output  [9:0] X_R_0_address0;
output   X_R_0_ce0;
output   X_R_0_we0;
output  [31:0] X_R_0_d0;
input  [31:0] X_R_0_q0;
output  [9:0] X_R_0_address1;
output   X_R_0_ce1;
output   X_R_0_we1;
output  [31:0] X_R_0_d1;
input  [31:0] X_R_0_q1;
output  [9:0] X_I_0_address0;
output   X_I_0_ce0;
output   X_I_0_we0;
output  [31:0] X_I_0_d0;
input  [31:0] X_I_0_q0;
output  [9:0] X_I_0_address1;
output   X_I_0_ce1;
output   X_I_0_we1;
output  [31:0] X_I_0_d1;
input  [31:0] X_I_0_q1;
output  [8:0] cos_coefficients_table_address0;
output   cos_coefficients_table_ce0;
input  [31:0] cos_coefficients_table_q0;
output  [8:0] sin_coefficients_table_address0;
output   sin_coefficients_table_ce0;
input  [31:0] sin_coefficients_table_q0;
output  [31:0] grp_fu_1648_p_din0;
output  [31:0] grp_fu_1648_p_din1;
output  [1:0] grp_fu_1648_p_opcode;
input  [31:0] grp_fu_1648_p_dout0;
output   grp_fu_1648_p_ce;
output  [31:0] grp_fu_1652_p_din0;
output  [31:0] grp_fu_1652_p_din1;
output  [1:0] grp_fu_1652_p_opcode;
input  [31:0] grp_fu_1652_p_dout0;
output   grp_fu_1652_p_ce;
output  [31:0] grp_fu_1656_p_din0;
output  [31:0] grp_fu_1656_p_din1;
input  [31:0] grp_fu_1656_p_dout0;
output   grp_fu_1656_p_ce;
output  [31:0] grp_fu_1660_p_din0;
output  [31:0] grp_fu_1660_p_din1;
input  [31:0] grp_fu_1660_p_dout0;
output   grp_fu_1660_p_ce;
output  [31:0] grp_fu_1664_p_din0;
output  [31:0] grp_fu_1664_p_din1;
input  [31:0] grp_fu_1664_p_dout0;
output   grp_fu_1664_p_ce;
output  [31:0] grp_fu_1668_p_din0;
output  [31:0] grp_fu_1668_p_din1;
input  [31:0] grp_fu_1668_p_dout0;
output   grp_fu_1668_p_ce;

reg ap_idle;
reg[9:0] X_R_0_address0;
reg X_R_0_ce0;
reg X_R_0_we0;
reg[9:0] X_R_0_address1;
reg X_R_0_ce1;
reg X_R_0_we1;
reg[9:0] X_I_0_address0;
reg X_I_0_ce0;
reg X_I_0_we0;
reg[9:0] X_I_0_address1;
reg X_I_0_ce1;
reg X_I_0_we1;
reg cos_coefficients_table_ce0;
reg sin_coefficients_table_ce0;

(* fsm_encoding = "none" *) reg   [43:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln41_reg_300;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage43;
wire    ap_block_pp0_stage43_subdone;
reg   [31:0] reg_172;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage33;
wire    ap_block_pp0_stage33_11001;
reg   [31:0] reg_180;
reg   [31:0] reg_188;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20_11001;
wire    ap_block_pp0_stage43_11001;
reg   [31:0] reg_194;
wire    ap_block_pp0_stage0_11001;
reg   [7:0] j_3_reg_294;
wire   [0:0] icmp_ln41_fu_212_p2;
wire   [8:0] shl_ln42_fu_226_p2;
reg   [8:0] shl_ln42_reg_304;
wire   [7:0] add_ln46_fu_232_p2;
reg   [7:0] add_ln46_reg_309;
wire    ap_block_pp0_stage1_11001;
reg   [9:0] X_R_0_addr_reg_324;
reg   [9:0] X_I_0_addr_reg_329;
reg   [9:0] X_R_0_addr_1_reg_334;
reg   [9:0] X_I_0_addr_1_reg_339;
reg   [31:0] c_reg_344;
reg   [31:0] s_reg_350;
reg   [31:0] X_R_0_load_1_reg_356;
reg   [31:0] X_I_0_load_1_reg_361;
reg   [31:0] mul_reg_366;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10_11001;
reg   [31:0] mul1_reg_371;
reg   [31:0] mul2_reg_376;
reg   [31:0] mul3_reg_381;
reg   [31:0] sub_reg_386;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_pp0_stage30_11001;
reg   [31:0] sub1_reg_391;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln42_fu_243_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln46_fu_256_p1;
wire   [63:0] zext_ln49_fu_270_p1;
reg   [7:0] j_fu_50;
wire   [7:0] add_ln41_fu_238_p2;
wire    ap_loop_init;
reg   [7:0] ap_sig_allocacmp_j_3;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp0_stage31;
wire    ap_block_pp0_stage31_11001;
wire    ap_block_pp0_stage31;
wire    ap_CS_fsm_pp0_stage32;
wire    ap_block_pp0_stage32_11001;
wire    ap_block_pp0_stage32;
reg   [31:0] grp_fu_148_p0;
reg   [31:0] grp_fu_148_p1;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21;
wire    ap_CS_fsm_pp0_stage34;
wire    ap_block_pp0_stage34;
reg   [31:0] grp_fu_152_p0;
reg   [31:0] grp_fu_152_p1;
wire    ap_block_pp0_stage3;
wire   [6:0] trunc_ln42_fu_218_p1;
wire   [8:0] zext_ln42_1_fu_222_p1;
wire   [8:0] zext_ln41_cast_fu_200_p1;
wire   [9:0] add_ln_fu_248_p4;
wire   [9:0] add_ln1_fu_262_p4;
reg   [1:0] grp_fu_148_opcode;
wire    ap_block_pp0_stage34_00001;
wire    ap_block_pp0_stage11_00001;
wire    ap_block_pp0_stage21_00001;
reg   [1:0] grp_fu_152_opcode;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [43:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_pp0_stage23_subdone;
wire    ap_block_pp0_stage24_subdone;
wire    ap_block_pp0_stage25_subdone;
wire    ap_block_pp0_stage26_subdone;
wire    ap_block_pp0_stage27_subdone;
wire    ap_block_pp0_stage28_subdone;
wire    ap_block_pp0_stage29_subdone;
wire    ap_block_pp0_stage30_subdone;
wire    ap_block_pp0_stage31_subdone;
wire    ap_block_pp0_stage32_subdone;
wire    ap_block_pp0_stage33_subdone;
wire    ap_block_pp0_stage34_subdone;
wire    ap_block_pp0_stage35_subdone;
wire    ap_block_pp0_stage36_subdone;
wire    ap_block_pp0_stage37_subdone;
wire    ap_block_pp0_stage38_subdone;
wire    ap_block_pp0_stage39_subdone;
wire    ap_block_pp0_stage40_subdone;
wire    ap_block_pp0_stage41_subdone;
wire    ap_block_pp0_stage42_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 44'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 j_fu_50 = 8'd0;
#0 ap_done_reg = 1'b0;
end

main_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage43_subdone) & (1'b1 == ap_CS_fsm_pp0_stage43))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_50 <= 8'd0;
    end else if (((icmp_ln41_reg_300 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        j_fu_50 <= add_ln41_fu_238_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage33_11001) & (1'b1 == ap_CS_fsm_pp0_stage33))) begin
            reg_172 <= X_R_0_q0;
        end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            reg_172 <= X_R_0_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage33_11001) & (1'b1 == ap_CS_fsm_pp0_stage33))) begin
            reg_180 <= X_I_0_q0;
        end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            reg_180 <= X_I_0_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        X_I_0_addr_1_reg_339[7 : 0] <= zext_ln49_fu_270_p1[7 : 0];
X_I_0_addr_1_reg_339[9] <= zext_ln49_fu_270_p1[9];
        X_I_0_addr_reg_329[7 : 0] <= zext_ln46_fu_256_p1[7 : 0];
X_I_0_addr_reg_329[9] <= zext_ln46_fu_256_p1[9];
        X_R_0_addr_1_reg_334[7 : 0] <= zext_ln49_fu_270_p1[7 : 0];
X_R_0_addr_1_reg_334[9] <= zext_ln49_fu_270_p1[9];
        X_R_0_addr_reg_324[7 : 0] <= zext_ln46_fu_256_p1[7 : 0];
X_R_0_addr_reg_324[9] <= zext_ln46_fu_256_p1[9];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        X_I_0_load_1_reg_361 <= X_I_0_q0;
        X_R_0_load_1_reg_356 <= X_R_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln46_reg_309 <= add_ln46_fu_232_p2;
        icmp_ln41_reg_300 <= icmp_ln41_fu_212_p2;
        j_3_reg_294 <= ap_sig_allocacmp_j_3;
        shl_ln42_reg_304 <= shl_ln42_fu_226_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        c_reg_344 <= cos_coefficients_table_q0;
        s_reg_350 <= sin_coefficients_table_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        mul1_reg_371 <= grp_fu_1660_p_dout0;
        mul2_reg_376 <= grp_fu_1664_p_dout0;
        mul3_reg_381 <= grp_fu_1668_p_dout0;
        mul_reg_366 <= grp_fu_1656_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage43_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage43)) | ((1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)))) begin
        reg_188 <= grp_fu_1648_p_dout0;
        reg_194 <= grp_fu_1652_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage30_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30))) begin
        sub1_reg_391 <= grp_fu_1652_p_dout0;
        sub_reg_386 <= grp_fu_1648_p_dout0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage32) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage32)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        X_I_0_address0 = X_I_0_addr_1_reg_339;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        X_I_0_address0 = zext_ln49_fu_270_p1;
    end else begin
        X_I_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage31) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
            X_I_0_address1 = X_I_0_addr_reg_329;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            X_I_0_address1 = zext_ln46_fu_256_p1;
        end else begin
            X_I_0_address1 = 'bx;
        end
    end else begin
        X_I_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage32_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage32)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        X_I_0_ce0 = 1'b1;
    end else begin
        X_I_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage31_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        X_I_0_ce1 = 1'b1;
    end else begin
        X_I_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_I_0_we0 = 1'b1;
    end else begin
        X_I_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln41_reg_300 == 1'd0) & (1'b0 == ap_block_pp0_stage31_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
        X_I_0_we1 = 1'b1;
    end else begin
        X_I_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage32) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage32)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        X_R_0_address0 = X_R_0_addr_1_reg_334;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        X_R_0_address0 = zext_ln49_fu_270_p1;
    end else begin
        X_R_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage31) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
            X_R_0_address1 = X_R_0_addr_reg_324;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            X_R_0_address1 = zext_ln46_fu_256_p1;
        end else begin
            X_R_0_address1 = 'bx;
        end
    end else begin
        X_R_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage32_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage32)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        X_R_0_ce0 = 1'b1;
    end else begin
        X_R_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage31_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        X_R_0_ce1 = 1'b1;
    end else begin
        X_R_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_R_0_we0 = 1'b1;
    end else begin
        X_R_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln41_reg_300 == 1'd0) & (1'b0 == ap_block_pp0_stage31_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
        X_R_0_we1 = 1'b1;
    end else begin
        X_R_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln41_reg_300 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage43_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage43))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_3 = 8'd0;
    end else begin
        ap_sig_allocacmp_j_3 = j_fu_50;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        cos_coefficients_table_ce0 = 1'b1;
    end else begin
        cos_coefficients_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln41_reg_300 == 1'd0) & (1'b0 == ap_block_pp0_stage21_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)) | ((icmp_ln41_reg_300 == 1'd0) & (1'b0 == ap_block_pp0_stage11_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)))) begin
        grp_fu_148_opcode = 2'd1;
    end else if (((icmp_ln41_reg_300 == 1'd0) & (1'b0 == ap_block_pp0_stage34_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage34))) begin
        grp_fu_148_opcode = 2'd0;
    end else begin
        grp_fu_148_opcode = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage34) & (1'b1 == ap_CS_fsm_pp0_stage34))) begin
            grp_fu_148_p0 = reg_172;
        end else if (((1'b0 == ap_block_pp0_stage21) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
            grp_fu_148_p0 = X_R_0_load_1_reg_356;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            grp_fu_148_p0 = mul_reg_366;
        end else begin
            grp_fu_148_p0 = 'bx;
        end
    end else begin
        grp_fu_148_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage34) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage34)) | ((1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)))) begin
        grp_fu_148_p1 = reg_188;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_148_p1 = mul1_reg_371;
    end else begin
        grp_fu_148_p1 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln41_reg_300 == 1'd0) & (1'b0 == ap_block_pp0_stage21_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        grp_fu_152_opcode = 2'd1;
    end else if ((((icmp_ln41_reg_300 == 1'd0) & (1'b0 == ap_block_pp0_stage11_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln41_reg_300 == 1'd0) & (1'b0 == ap_block_pp0_stage34_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage34)))) begin
        grp_fu_152_opcode = 2'd0;
    end else begin
        grp_fu_152_opcode = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage34) & (1'b1 == ap_CS_fsm_pp0_stage34))) begin
            grp_fu_152_p0 = reg_180;
        end else if (((1'b0 == ap_block_pp0_stage21) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
            grp_fu_152_p0 = X_I_0_load_1_reg_361;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            grp_fu_152_p0 = mul2_reg_376;
        end else begin
            grp_fu_152_p0 = 'bx;
        end
    end else begin
        grp_fu_152_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage34) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage34)) | ((1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21)))) begin
        grp_fu_152_p1 = reg_194;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_152_p1 = mul3_reg_381;
    end else begin
        grp_fu_152_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sin_coefficients_table_ce0 = 1'b1;
    end else begin
        sin_coefficients_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_pp0_stage32 : begin
            if ((1'b0 == ap_block_pp0_stage32_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end
        end
        ap_ST_fsm_pp0_stage33 : begin
            if ((1'b0 == ap_block_pp0_stage33_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end
        end
        ap_ST_fsm_pp0_stage34 : begin
            if ((1'b0 == ap_block_pp0_stage34_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end
        end
        ap_ST_fsm_pp0_stage35 : begin
            if ((1'b0 == ap_block_pp0_stage35_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end
        end
        ap_ST_fsm_pp0_stage36 : begin
            if ((1'b0 == ap_block_pp0_stage36_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end
        end
        ap_ST_fsm_pp0_stage37 : begin
            if ((1'b0 == ap_block_pp0_stage37_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end
        end
        ap_ST_fsm_pp0_stage38 : begin
            if ((1'b0 == ap_block_pp0_stage38_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end
        end
        ap_ST_fsm_pp0_stage39 : begin
            if ((1'b0 == ap_block_pp0_stage39_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end
        end
        ap_ST_fsm_pp0_stage40 : begin
            if ((1'b0 == ap_block_pp0_stage40_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end
        end
        ap_ST_fsm_pp0_stage41 : begin
            if ((1'b0 == ap_block_pp0_stage41_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end
        end
        ap_ST_fsm_pp0_stage42 : begin
            if ((1'b0 == ap_block_pp0_stage42_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end
        end
        ap_ST_fsm_pp0_stage43 : begin
            if ((1'b0 == ap_block_pp0_stage43_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign X_I_0_d0 = reg_194;

assign X_I_0_d1 = sub1_reg_391;

assign X_R_0_d0 = reg_188;

assign X_R_0_d1 = sub_reg_386;

assign add_ln1_fu_262_p4 = {{{select_ln38_1}, {1'd0}}, {j_3_reg_294}};

assign add_ln41_fu_238_p2 = (j_3_reg_294 + 8'd1);

assign add_ln46_fu_232_p2 = (ap_sig_allocacmp_j_3 + numBF);

assign add_ln_fu_248_p4 = {{{select_ln38_1}, {1'd0}}, {add_ln46_reg_309}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp0_stage32 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp0_stage33 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_pp0_stage34 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp0_stage43 = ap_CS_fsm[32'd43];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage40_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage41_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage43_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage43_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign cos_coefficients_table_address0 = zext_ln42_fu_243_p1;

assign grp_fu_1648_p_ce = 1'b1;

assign grp_fu_1648_p_din0 = grp_fu_148_p0;

assign grp_fu_1648_p_din1 = grp_fu_148_p1;

assign grp_fu_1648_p_opcode = grp_fu_148_opcode;

assign grp_fu_1652_p_ce = 1'b1;

assign grp_fu_1652_p_din0 = grp_fu_152_p0;

assign grp_fu_1652_p_din1 = grp_fu_152_p1;

assign grp_fu_1652_p_opcode = grp_fu_152_opcode;

assign grp_fu_1656_p_ce = 1'b1;

assign grp_fu_1656_p_din0 = reg_172;

assign grp_fu_1656_p_din1 = c_reg_344;

assign grp_fu_1660_p_ce = 1'b1;

assign grp_fu_1660_p_din0 = reg_180;

assign grp_fu_1660_p_din1 = s_reg_350;

assign grp_fu_1664_p_ce = 1'b1;

assign grp_fu_1664_p_din0 = reg_180;

assign grp_fu_1664_p_din1 = c_reg_344;

assign grp_fu_1668_p_ce = 1'b1;

assign grp_fu_1668_p_din0 = reg_172;

assign grp_fu_1668_p_din1 = s_reg_350;

assign icmp_ln41_fu_212_p2 = ((ap_sig_allocacmp_j_3 == numBF) ? 1'b1 : 1'b0);

assign shl_ln42_fu_226_p2 = zext_ln42_1_fu_222_p1 << zext_ln41_cast_fu_200_p1;

assign sin_coefficients_table_address0 = zext_ln42_fu_243_p1;

assign trunc_ln42_fu_218_p1 = ap_sig_allocacmp_j_3[6:0];

assign zext_ln41_cast_fu_200_p1 = zext_ln41;

assign zext_ln42_1_fu_222_p1 = trunc_ln42_fu_218_p1;

assign zext_ln42_fu_243_p1 = shl_ln42_reg_304;

assign zext_ln46_fu_256_p1 = add_ln_fu_248_p4;

assign zext_ln49_fu_270_p1 = add_ln1_fu_262_p4;

always @ (posedge ap_clk) begin
    X_R_0_addr_reg_324[8] <= 1'b0;
    X_I_0_addr_reg_329[8] <= 1'b0;
    X_R_0_addr_1_reg_334[8] <= 1'b0;
    X_I_0_addr_1_reg_339[8] <= 1'b0;
end

endmodule //main_fft_Pipeline_VITIS_LOOP_41_2
