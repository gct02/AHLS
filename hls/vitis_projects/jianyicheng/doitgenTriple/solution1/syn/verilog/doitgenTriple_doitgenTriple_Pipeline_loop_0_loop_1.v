// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module doitgenTriple_doitgenTriple_Pipeline_loop_0_loop_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_address0,
        A_ce0,
        A_q0,
        w_address0,
        w_ce0,
        w_q0,
        sum_address0,
        sum_ce0,
        sum_we0,
        sum_d0,
        grp_fu_80_p_din0,
        grp_fu_80_p_din1,
        grp_fu_80_p_opcode,
        grp_fu_80_p_dout0,
        grp_fu_80_p_ce,
        grp_fu_84_p_din0,
        grp_fu_84_p_din1,
        grp_fu_84_p_dout0,
        grp_fu_84_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 6'd1;
parameter    ap_ST_fsm_pp0_stage1 = 6'd2;
parameter    ap_ST_fsm_pp0_stage2 = 6'd4;
parameter    ap_ST_fsm_pp0_stage3 = 6'd8;
parameter    ap_ST_fsm_pp0_stage4 = 6'd16;
parameter    ap_ST_fsm_pp0_stage5 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] A_address0;
output   A_ce0;
input  [31:0] A_q0;
output  [15:0] w_address0;
output   w_ce0;
input  [31:0] w_q0;
output  [7:0] sum_address0;
output   sum_ce0;
output   sum_we0;
output  [31:0] sum_d0;
output  [31:0] grp_fu_80_p_din0;
output  [31:0] grp_fu_80_p_din1;
output  [1:0] grp_fu_80_p_opcode;
input  [31:0] grp_fu_80_p_dout0;
output   grp_fu_80_p_ce;
output  [31:0] grp_fu_84_p_din0;
output  [31:0] grp_fu_84_p_din1;
input  [31:0] grp_fu_84_p_dout0;
output   grp_fu_84_p_ce;

reg ap_idle;
reg A_ce0;
reg w_ce0;
reg sum_ce0;
reg sum_we0;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_subdone;
reg   [0:0] icmp_ln19_reg_397;
reg    ap_condition_exit_pp0_iter0_stage5;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln19_fu_160_p2;
reg   [0:0] icmp_ln19_reg_397_pp0_iter1_reg;
reg   [0:0] icmp_ln19_reg_397_pp0_iter2_reg;
wire   [16:0] add_ln19_fu_166_p2;
reg   [16:0] add_ln19_reg_401;
wire   [0:0] icmp_ln22_fu_175_p2;
reg   [0:0] icmp_ln22_reg_406;
reg   [0:0] icmp_ln22_reg_406_pp0_iter1_reg;
reg   [0:0] icmp_ln22_reg_406_pp0_iter2_reg;
reg   [0:0] icmp_ln22_reg_406_pp0_iter3_reg;
wire   [8:0] select_ln19_fu_181_p3;
reg   [8:0] select_ln19_reg_413;
reg   [31:0] A_load_reg_424;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
wire   [0:0] icmp_ln25_fu_239_p2;
reg   [0:0] icmp_ln25_reg_434;
reg   [0:0] icmp_ln25_reg_434_pp0_iter1_reg;
reg   [0:0] icmp_ln25_reg_434_pp0_iter2_reg;
reg   [0:0] icmp_ln25_reg_434_pp0_iter3_reg;
wire   [0:0] icmp_ln25_1_fu_245_p2;
reg   [0:0] icmp_ln25_1_reg_439;
reg   [0:0] icmp_ln25_1_reg_439_pp0_iter1_reg;
reg   [0:0] icmp_ln25_1_reg_439_pp0_iter2_reg;
reg   [0:0] icmp_ln25_1_reg_439_pp0_iter3_reg;
reg   [31:0] w_load_reg_444;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
wire   [31:0] a_fu_271_p1;
reg   [31:0] a_reg_449;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_11001;
reg   [31:0] a_reg_449_pp0_iter1_reg;
wire   [31:0] wt_fu_275_p1;
reg   [31:0] wt_reg_456;
wire   [0:0] icmp_ln22_1_fu_284_p2;
reg   [0:0] icmp_ln22_1_reg_462;
wire    ap_block_pp0_stage5_11001;
reg   [0:0] icmp_ln22_1_reg_462_pp0_iter1_reg;
reg   [0:0] icmp_ln22_1_reg_462_pp0_iter2_reg;
reg   [31:0] b_reg_466;
reg   [31:0] c_reg_471;
wire   [0:0] grp_fu_127_p2;
reg   [0:0] tmp_1_reg_476;
reg   [0:0] tmp_1_reg_476_pp0_iter3_reg;
wire   [31:0] select_ln19_1_fu_298_p3;
reg   [31:0] select_ln19_1_reg_481;
reg   [31:0] d_reg_487;
reg   [31:0] s_1_reg_492;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage3_subdone;
wire   [63:0] zext_ln22_fu_189_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln24_fu_220_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln19_fu_321_p1;
wire    ap_block_pp0_stage3;
reg   [31:0] s_fu_56;
wire   [31:0] s_2_fu_335_p3;
reg   [31:0] ap_sig_allocacmp_s_load;
wire    ap_loop_init;
reg   [8:0] j_fu_60;
wire   [8:0] add_ln22_fu_279_p2;
reg   [8:0] ap_sig_allocacmp_j_load;
reg   [16:0] add_ln321_fu_64;
wire   [16:0] add_ln32_fu_251_p2;
reg   [16:0] p_fu_68;
wire   [16:0] select_ln19_3_fu_200_p3;
reg   [8:0] i_fu_72;
wire   [8:0] select_ln19_2_fu_314_p3;
reg   [16:0] indvar_flatten_fu_76;
reg   [16:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [31:0] grp_fu_119_p0;
reg   [31:0] grp_fu_119_p1;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg   [31:0] grp_fu_123_p0;
reg   [31:0] grp_fu_123_p1;
wire   [15:0] zext_ln22_1_fu_211_p1;
wire   [15:0] trunc_ln19_fu_207_p1;
wire   [15:0] add_ln24_fu_214_p2;
wire   [7:0] tmp_fu_225_p4;
wire   [22:0] trunc_ln25_fu_235_p1;
wire    ap_block_pp0_stage5;
wire   [8:0] add_ln19_1_fu_308_p2;
wire   [0:0] or_ln25_fu_326_p2;
wire   [0:0] and_ln25_fu_330_p2;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter2_stage3;
reg    ap_idle_pp0_0to1;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [5:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to3;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage4_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 s_fu_56 = 32'd0;
#0 j_fu_60 = 9'd0;
#0 add_ln321_fu_64 = 17'd0;
#0 p_fu_68 = 17'd0;
#0 i_fu_72 = 9'd0;
#0 indvar_flatten_fu_76 = 17'd0;
#0 ap_done_reg = 1'b0;
end

doitgenTriple_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_reg_449_pp0_iter1_reg),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_127_p2)
);

doitgenTriple_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage5),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage5)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage3))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage3))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_72 <= 9'd0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        i_fu_72 <= select_ln19_2_fu_314_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_fu_76 <= 17'd0;
    end else if (((icmp_ln19_reg_397 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        indvar_flatten_fu_76 <= add_ln19_reg_401;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_60 <= 9'd0;
    end else if (((icmp_ln19_reg_397 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        j_fu_60 <= add_ln22_fu_279_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_fu_68 <= 17'd0;
    end else if (((icmp_ln19_reg_397 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_fu_68 <= select_ln19_3_fu_200_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_fu_56 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        s_fu_56 <= s_2_fu_335_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        A_load_reg_424 <= A_q0;
        icmp_ln25_1_reg_439 <= icmp_ln25_1_fu_245_p2;
        icmp_ln25_1_reg_439_pp0_iter1_reg <= icmp_ln25_1_reg_439;
        icmp_ln25_1_reg_439_pp0_iter2_reg <= icmp_ln25_1_reg_439_pp0_iter1_reg;
        icmp_ln25_1_reg_439_pp0_iter3_reg <= icmp_ln25_1_reg_439_pp0_iter2_reg;
        icmp_ln25_reg_434 <= icmp_ln25_fu_239_p2;
        icmp_ln25_reg_434_pp0_iter1_reg <= icmp_ln25_reg_434;
        icmp_ln25_reg_434_pp0_iter2_reg <= icmp_ln25_reg_434_pp0_iter1_reg;
        icmp_ln25_reg_434_pp0_iter3_reg <= icmp_ln25_reg_434_pp0_iter2_reg;
        tmp_1_reg_476 <= grp_fu_127_p2;
        tmp_1_reg_476_pp0_iter3_reg <= tmp_1_reg_476;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        a_reg_449 <= a_fu_271_p1;
        a_reg_449_pp0_iter1_reg <= a_reg_449;
        select_ln19_1_reg_481 <= select_ln19_1_fu_298_p3;
        wt_reg_456 <= wt_fu_275_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln19_reg_401 <= add_ln19_fu_166_p2;
        icmp_ln19_reg_397 <= icmp_ln19_fu_160_p2;
        icmp_ln19_reg_397_pp0_iter1_reg <= icmp_ln19_reg_397;
        icmp_ln19_reg_397_pp0_iter2_reg <= icmp_ln19_reg_397_pp0_iter1_reg;
        icmp_ln22_reg_406 <= icmp_ln22_fu_175_p2;
        icmp_ln22_reg_406_pp0_iter1_reg <= icmp_ln22_reg_406;
        icmp_ln22_reg_406_pp0_iter2_reg <= icmp_ln22_reg_406_pp0_iter1_reg;
        icmp_ln22_reg_406_pp0_iter3_reg <= icmp_ln22_reg_406_pp0_iter2_reg;
        select_ln19_reg_413 <= select_ln19_fu_181_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln19_reg_397 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln321_fu_64 <= add_ln32_fu_251_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_reg_466 <= grp_fu_84_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        c_reg_471 <= grp_fu_80_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        d_reg_487 <= grp_fu_84_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        icmp_ln22_1_reg_462 <= icmp_ln22_1_fu_284_p2;
        icmp_ln22_1_reg_462_pp0_iter1_reg <= icmp_ln22_1_reg_462;
        icmp_ln22_1_reg_462_pp0_iter2_reg <= icmp_ln22_1_reg_462_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        s_1_reg_492 <= grp_fu_80_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        w_load_reg_444 <= w_q0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln19_reg_397 == 1'd1) & (1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_condition_exit_pp0_iter0_stage5 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage5 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln19_reg_397_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter2_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 17'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_76;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 9'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_60;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_sig_allocacmp_s_load = s_2_fu_335_p3;
    end else begin
        ap_sig_allocacmp_s_load = s_fu_56;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_119_p0 = select_ln19_1_reg_481;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_119_p0 = b_reg_466;
    end else begin
        grp_fu_119_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_119_p1 = d_reg_487;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_119_p1 = wt_reg_456;
    end else begin
        grp_fu_119_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_123_p0 = c_reg_471;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_123_p0 = a_fu_271_p1;
    end else begin
        grp_fu_123_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_123_p1 = a_reg_449_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_123_p1 = wt_fu_275_p1;
    end else begin
        grp_fu_123_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        sum_ce0 = 1'b1;
    end else begin
        sum_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln22_1_reg_462_pp0_iter2_reg == 1'd1))) begin
        sum_we0 = 1'b1;
    end else begin
        sum_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        w_ce0 = 1'b1;
    end else begin
        w_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage3))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_address0 = zext_ln22_fu_189_p1;

assign a_fu_271_p1 = A_load_reg_424;

assign add_ln19_1_fu_308_p2 = (i_fu_72 + 9'd1);

assign add_ln19_fu_166_p2 = (ap_sig_allocacmp_indvar_flatten_load + 17'd1);

assign add_ln22_fu_279_p2 = (select_ln19_reg_413 + 9'd1);

assign add_ln24_fu_214_p2 = (zext_ln22_1_fu_211_p1 + trunc_ln19_fu_207_p1);

assign add_ln32_fu_251_p2 = (select_ln19_3_fu_200_p3 + 17'd256);

assign and_ln25_fu_330_p2 = (tmp_1_reg_476_pp0_iter3_reg & or_ln25_fu_326_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage5;

assign grp_fu_80_p_ce = 1'b1;

assign grp_fu_80_p_din0 = grp_fu_119_p0;

assign grp_fu_80_p_din1 = grp_fu_119_p1;

assign grp_fu_80_p_opcode = 2'd0;

assign grp_fu_84_p_ce = 1'b1;

assign grp_fu_84_p_din0 = grp_fu_123_p0;

assign grp_fu_84_p_din1 = grp_fu_123_p1;

assign icmp_ln19_fu_160_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 17'd65536) ? 1'b1 : 1'b0);

assign icmp_ln22_1_fu_284_p2 = ((add_ln22_fu_279_p2 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln22_fu_175_p2 = ((ap_sig_allocacmp_j_load == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln25_1_fu_245_p2 = ((trunc_ln25_fu_235_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_239_p2 = ((tmp_fu_225_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln25_fu_326_p2 = (icmp_ln25_reg_434_pp0_iter3_reg | icmp_ln25_1_reg_439_pp0_iter3_reg);

assign s_2_fu_335_p3 = ((and_ln25_fu_330_p2[0:0] == 1'b1) ? s_1_reg_492 : select_ln19_1_reg_481);

assign select_ln19_1_fu_298_p3 = ((icmp_ln22_reg_406_pp0_iter2_reg[0:0] == 1'b1) ? 32'd0 : ap_sig_allocacmp_s_load);

assign select_ln19_2_fu_314_p3 = ((icmp_ln22_reg_406_pp0_iter3_reg[0:0] == 1'b1) ? add_ln19_1_fu_308_p2 : i_fu_72);

assign select_ln19_3_fu_200_p3 = ((icmp_ln22_reg_406[0:0] == 1'b1) ? add_ln321_fu_64 : p_fu_68);

assign select_ln19_fu_181_p3 = ((icmp_ln22_fu_175_p2[0:0] == 1'b1) ? 9'd0 : ap_sig_allocacmp_j_load);

assign sum_address0 = zext_ln19_fu_321_p1;

assign sum_d0 = s_2_fu_335_p3;

assign tmp_fu_225_p4 = {{A_q0[30:23]}};

assign trunc_ln19_fu_207_p1 = select_ln19_3_fu_200_p3[15:0];

assign trunc_ln25_fu_235_p1 = A_q0[22:0];

assign w_address0 = zext_ln24_fu_220_p1;

assign wt_fu_275_p1 = w_load_reg_444;

assign zext_ln19_fu_321_p1 = select_ln19_2_fu_314_p3;

assign zext_ln22_1_fu_211_p1 = select_ln19_reg_413;

assign zext_ln22_fu_189_p1 = select_ln19_fu_181_p3;

assign zext_ln24_fu_220_p1 = add_ln24_fu_214_p2;

endmodule //doitgenTriple_doitgenTriple_Pipeline_loop_0_loop_1
