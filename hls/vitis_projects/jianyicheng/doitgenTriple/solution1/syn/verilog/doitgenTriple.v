// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="doitgenTriple_doitgenTriple,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu35p-fsvh2104-1-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.579000,HLS_SYN_LAT=394530,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1622,HLS_SYN_LUT=1509,HLS_VERSION=2023_2}" *)

module doitgenTriple (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_address0,
        A_ce0,
        A_we0,
        A_d0,
        A_q0,
        w_address0,
        w_ce0,
        w_q0,
        sum_address0,
        sum_ce0,
        sum_we0,
        sum_d0,
        sum_q0
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] A_address0;
output   A_ce0;
output   A_we0;
output  [31:0] A_d0;
input  [31:0] A_q0;
output  [15:0] w_address0;
output   w_ce0;
input  [31:0] w_q0;
output  [7:0] sum_address0;
output   sum_ce0;
output   sum_we0;
output  [31:0] sum_d0;
input  [31:0] sum_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] A_address0;
reg A_ce0;
reg A_we0;
reg[7:0] sum_address0;
reg sum_ce0;
reg sum_we0;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state3;
reg   [31:0] A_load_reg_70;
wire    ap_CS_fsm_state4;
wire   [31:0] empty_fu_61_p1;
reg   [31:0] empty_reg_75;
wire    ap_CS_fsm_state5;
wire    grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_ap_start;
wire    grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_ap_done;
wire    grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_ap_idle;
wire    grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_ap_ready;
wire   [7:0] grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_A_address0;
wire    grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_A_ce0;
wire   [15:0] grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_w_address0;
wire    grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_w_ce0;
wire   [7:0] grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_sum_address0;
wire    grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_sum_ce0;
wire    grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_sum_we0;
wire   [31:0] grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_sum_d0;
wire   [31:0] grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_grp_fu_80_p_din0;
wire   [31:0] grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_grp_fu_80_p_din1;
wire   [1:0] grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_grp_fu_80_p_opcode;
wire    grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_grp_fu_80_p_ce;
wire   [31:0] grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_grp_fu_84_p_din0;
wire   [31:0] grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_grp_fu_84_p_din1;
wire    grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_grp_fu_84_p_ce;
wire    grp_doitgenTriple_Pipeline_loop_2_fu_52_ap_start;
wire    grp_doitgenTriple_Pipeline_loop_2_fu_52_ap_done;
wire    grp_doitgenTriple_Pipeline_loop_2_fu_52_ap_idle;
wire    grp_doitgenTriple_Pipeline_loop_2_fu_52_ap_ready;
wire   [7:0] grp_doitgenTriple_Pipeline_loop_2_fu_52_sum_address0;
wire    grp_doitgenTriple_Pipeline_loop_2_fu_52_sum_ce0;
wire   [7:0] grp_doitgenTriple_Pipeline_loop_2_fu_52_A_address0;
wire    grp_doitgenTriple_Pipeline_loop_2_fu_52_A_ce0;
wire    grp_doitgenTriple_Pipeline_loop_2_fu_52_A_we0;
wire   [31:0] grp_doitgenTriple_Pipeline_loop_2_fu_52_A_d0;
wire   [31:0] grp_doitgenTriple_Pipeline_loop_2_fu_52_grp_fu_80_p_din0;
wire   [31:0] grp_doitgenTriple_Pipeline_loop_2_fu_52_grp_fu_80_p_din1;
wire   [1:0] grp_doitgenTriple_Pipeline_loop_2_fu_52_grp_fu_80_p_opcode;
wire    grp_doitgenTriple_Pipeline_loop_2_fu_52_grp_fu_80_p_ce;
wire   [31:0] grp_doitgenTriple_Pipeline_loop_2_fu_52_grp_fu_84_p_din0;
wire   [31:0] grp_doitgenTriple_Pipeline_loop_2_fu_52_grp_fu_84_p_din1;
wire    grp_doitgenTriple_Pipeline_loop_2_fu_52_grp_fu_84_p_ce;
reg    grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_doitgenTriple_Pipeline_loop_2_fu_52_ap_start_reg;
wire    ap_CS_fsm_state6;
wire   [31:0] grp_fu_80_p2;
reg   [31:0] grp_fu_80_p0;
reg   [31:0] grp_fu_80_p1;
reg    grp_fu_80_ce;
wire   [31:0] grp_fu_84_p2;
reg   [31:0] grp_fu_84_p0;
reg   [31:0] grp_fu_84_p1;
reg    grp_fu_84_ce;
reg   [5:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_ap_start_reg = 1'b0;
#0 grp_doitgenTriple_Pipeline_loop_2_fu_52_ap_start_reg = 1'b0;
end

doitgenTriple_doitgenTriple_Pipeline_loop_0_loop_1 grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_ap_start),
    .ap_done(grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_ap_done),
    .ap_idle(grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_ap_idle),
    .ap_ready(grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_ap_ready),
    .A_address0(grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_A_address0),
    .A_ce0(grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_A_ce0),
    .A_q0(A_q0),
    .w_address0(grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_w_address0),
    .w_ce0(grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_w_ce0),
    .w_q0(w_q0),
    .sum_address0(grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_sum_address0),
    .sum_ce0(grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_sum_ce0),
    .sum_we0(grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_sum_we0),
    .sum_d0(grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_sum_d0),
    .grp_fu_80_p_din0(grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_grp_fu_80_p_din0),
    .grp_fu_80_p_din1(grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_grp_fu_80_p_din1),
    .grp_fu_80_p_opcode(grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_grp_fu_80_p_opcode),
    .grp_fu_80_p_dout0(grp_fu_80_p2),
    .grp_fu_80_p_ce(grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_grp_fu_80_p_ce),
    .grp_fu_84_p_din0(grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_grp_fu_84_p_din0),
    .grp_fu_84_p_din1(grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_grp_fu_84_p_din1),
    .grp_fu_84_p_dout0(grp_fu_84_p2),
    .grp_fu_84_p_ce(grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_grp_fu_84_p_ce)
);

doitgenTriple_doitgenTriple_Pipeline_loop_2 grp_doitgenTriple_Pipeline_loop_2_fu_52(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_doitgenTriple_Pipeline_loop_2_fu_52_ap_start),
    .ap_done(grp_doitgenTriple_Pipeline_loop_2_fu_52_ap_done),
    .ap_idle(grp_doitgenTriple_Pipeline_loop_2_fu_52_ap_idle),
    .ap_ready(grp_doitgenTriple_Pipeline_loop_2_fu_52_ap_ready),
    .empty(empty_reg_75),
    .sum_address0(grp_doitgenTriple_Pipeline_loop_2_fu_52_sum_address0),
    .sum_ce0(grp_doitgenTriple_Pipeline_loop_2_fu_52_sum_ce0),
    .sum_q0(sum_q0),
    .A_address0(grp_doitgenTriple_Pipeline_loop_2_fu_52_A_address0),
    .A_ce0(grp_doitgenTriple_Pipeline_loop_2_fu_52_A_ce0),
    .A_we0(grp_doitgenTriple_Pipeline_loop_2_fu_52_A_we0),
    .A_d0(grp_doitgenTriple_Pipeline_loop_2_fu_52_A_d0),
    .grp_fu_80_p_din0(grp_doitgenTriple_Pipeline_loop_2_fu_52_grp_fu_80_p_din0),
    .grp_fu_80_p_din1(grp_doitgenTriple_Pipeline_loop_2_fu_52_grp_fu_80_p_din1),
    .grp_fu_80_p_opcode(grp_doitgenTriple_Pipeline_loop_2_fu_52_grp_fu_80_p_opcode),
    .grp_fu_80_p_dout0(grp_fu_80_p2),
    .grp_fu_80_p_ce(grp_doitgenTriple_Pipeline_loop_2_fu_52_grp_fu_80_p_ce),
    .grp_fu_84_p_din0(grp_doitgenTriple_Pipeline_loop_2_fu_52_grp_fu_84_p_din0),
    .grp_fu_84_p_din1(grp_doitgenTriple_Pipeline_loop_2_fu_52_grp_fu_84_p_din1),
    .grp_fu_84_p_dout0(grp_fu_84_p2),
    .grp_fu_84_p_ce(grp_doitgenTriple_Pipeline_loop_2_fu_52_grp_fu_84_p_ce)
);

doitgenTriple_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_80_p0),
    .din1(grp_fu_80_p1),
    .ce(grp_fu_80_ce),
    .dout(grp_fu_80_p2)
);

doitgenTriple_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_84_p0),
    .din1(grp_fu_84_p1),
    .ce(grp_fu_84_ce),
    .dout(grp_fu_84_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_ap_start_reg <= 1'b1;
        end else if ((grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_ap_ready == 1'b1)) begin
            grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_doitgenTriple_Pipeline_loop_2_fu_52_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_doitgenTriple_Pipeline_loop_2_fu_52_ap_start_reg <= 1'b1;
        end else if ((grp_doitgenTriple_Pipeline_loop_2_fu_52_ap_ready == 1'b1)) begin
            grp_doitgenTriple_Pipeline_loop_2_fu_52_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        A_load_reg_70 <= A_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        empty_reg_75 <= empty_fu_61_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        A_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        A_address0 = grp_doitgenTriple_Pipeline_loop_2_fu_52_A_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        A_address0 = grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_A_address0;
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        A_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        A_ce0 = grp_doitgenTriple_Pipeline_loop_2_fu_52_A_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        A_ce0 = grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_A_ce0;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        A_we0 = grp_doitgenTriple_Pipeline_loop_2_fu_52_A_we0;
    end else begin
        A_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_doitgenTriple_Pipeline_loop_2_fu_52_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if (((grp_doitgenTriple_Pipeline_loop_2_fu_52_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_doitgenTriple_Pipeline_loop_2_fu_52_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_80_ce = grp_doitgenTriple_Pipeline_loop_2_fu_52_grp_fu_80_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_80_ce = grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_grp_fu_80_p_ce;
    end else begin
        grp_fu_80_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_80_p0 = grp_doitgenTriple_Pipeline_loop_2_fu_52_grp_fu_80_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_80_p0 = grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_grp_fu_80_p_din0;
    end else begin
        grp_fu_80_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_80_p1 = grp_doitgenTriple_Pipeline_loop_2_fu_52_grp_fu_80_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_80_p1 = grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_grp_fu_80_p_din1;
    end else begin
        grp_fu_80_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_84_ce = grp_doitgenTriple_Pipeline_loop_2_fu_52_grp_fu_84_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_84_ce = grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_grp_fu_84_p_ce;
    end else begin
        grp_fu_84_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_84_p0 = grp_doitgenTriple_Pipeline_loop_2_fu_52_grp_fu_84_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_84_p0 = grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_grp_fu_84_p_din0;
    end else begin
        grp_fu_84_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_84_p1 = grp_doitgenTriple_Pipeline_loop_2_fu_52_grp_fu_84_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_84_p1 = grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_grp_fu_84_p_din1;
    end else begin
        grp_fu_84_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sum_address0 = grp_doitgenTriple_Pipeline_loop_2_fu_52_sum_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        sum_address0 = grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_sum_address0;
    end else begin
        sum_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sum_ce0 = grp_doitgenTriple_Pipeline_loop_2_fu_52_sum_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        sum_ce0 = grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_sum_ce0;
    end else begin
        sum_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sum_we0 = grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_sum_we0;
    end else begin
        sum_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_doitgenTriple_Pipeline_loop_2_fu_52_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_d0 = grp_doitgenTriple_Pipeline_loop_2_fu_52_A_d0;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign empty_fu_61_p1 = A_load_reg_70;

assign grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_ap_start = grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_ap_start_reg;

assign grp_doitgenTriple_Pipeline_loop_2_fu_52_ap_start = grp_doitgenTriple_Pipeline_loop_2_fu_52_ap_start_reg;

assign sum_d0 = grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_sum_d0;

assign w_address0 = grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_w_address0;

assign w_ce0 = grp_doitgenTriple_Pipeline_loop_0_loop_1_fu_42_w_ce0;

endmodule //doitgenTriple
