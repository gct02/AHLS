// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="main_main,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.815000,HLS_SYN_LAT=78529,HLS_SYN_TPT=none,HLS_SYN_MEM=6,HLS_SYN_DSP=0,HLS_SYN_FF=7421,HLS_SYN_LUT=6282,HLS_VERSION=2023_2}" *)

module main (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_return
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [10:0] M_address0;
reg    M_ce0;
reg    M_we0;
wire   [10:0] M_q0;
reg    M_ce1;
wire   [10:0] M_q1;
reg   [10:0] buffer_address0;
reg    buffer_ce0;
reg    buffer_we0;
reg   [31:0] buffer_d0;
wire   [31:0] buffer_q0;
reg    buffer_ce1;
reg    buffer_we1;
wire   [31:0] buffer_q1;
wire    grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_ap_start;
wire    grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_ap_done;
wire    grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_ap_idle;
wire    grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_ap_ready;
wire   [10:0] grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_M_address0;
wire    grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_M_ce0;
wire    grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_M_we0;
wire   [10:0] grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_M_d0;
wire   [10:0] grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_buffer_r_address0;
wire    grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_buffer_r_ce0;
wire    grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_buffer_r_we0;
wire   [31:0] grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_buffer_r_d0;
wire    grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_ap_start;
wire    grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_ap_done;
wire    grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_ap_idle;
wire    grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_ap_ready;
wire   [10:0] grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_M_address0;
wire    grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_M_ce0;
wire   [10:0] grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_M_address1;
wire    grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_M_ce1;
wire   [10:0] grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_buffer_r_address0;
wire    grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_buffer_r_ce0;
wire    grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_buffer_r_we0;
wire   [31:0] grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_buffer_r_d0;
wire   [10:0] grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_buffer_r_address1;
wire    grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_buffer_r_ce1;
wire    grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_buffer_r_we1;
wire   [31:0] grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_buffer_r_d1;
reg    grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_ap_start_reg = 1'b0;
#0 grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_ap_start_reg = 1'b0;
end

main_M_RAM_AUTO_1R1W #(
    .DataWidth( 11 ),
    .AddressRange( 2000 ),
    .AddressWidth( 11 ))
M_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(M_address0),
    .ce0(M_ce0),
    .we0(M_we0),
    .d0(grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_M_d0),
    .q0(M_q0),
    .address1(grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_M_address1),
    .ce1(M_ce1),
    .q1(M_q1)
);

main_buffer_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 2000 ),
    .AddressWidth( 11 ))
buffer_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buffer_address0),
    .ce0(buffer_ce0),
    .we0(buffer_we0),
    .d0(buffer_d0),
    .q0(buffer_q0),
    .address1(grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_buffer_r_address1),
    .ce1(buffer_ce1),
    .we1(buffer_we1),
    .d1(grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_buffer_r_d1),
    .q1(buffer_q1)
);

main_main_Pipeline_VITIS_LOOP_18_1 grp_main_Pipeline_VITIS_LOOP_18_1_fu_22(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_ap_start),
    .ap_done(grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_ap_done),
    .ap_idle(grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_ap_idle),
    .ap_ready(grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_ap_ready),
    .M_address0(grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_M_address0),
    .M_ce0(grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_M_ce0),
    .M_we0(grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_M_we0),
    .M_d0(grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_M_d0),
    .buffer_r_address0(grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_buffer_r_address0),
    .buffer_r_ce0(grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_buffer_r_ce0),
    .buffer_r_we0(grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_buffer_r_we0),
    .buffer_r_d0(grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_buffer_r_d0)
);

main_main_Pipeline_VITIS_LOOP_7_1 grp_main_Pipeline_VITIS_LOOP_7_1_fu_30(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_ap_start),
    .ap_done(grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_ap_done),
    .ap_idle(grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_ap_idle),
    .ap_ready(grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_ap_ready),
    .M_address0(grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_M_address0),
    .M_ce0(grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_M_ce0),
    .M_q0(M_q0),
    .M_address1(grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_M_address1),
    .M_ce1(grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_M_ce1),
    .M_q1(M_q1),
    .buffer_r_address0(grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_buffer_r_address0),
    .buffer_r_ce0(grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_buffer_r_ce0),
    .buffer_r_we0(grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_buffer_r_we0),
    .buffer_r_d0(grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_buffer_r_d0),
    .buffer_r_q0(buffer_q0),
    .buffer_r_address1(grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_buffer_r_address1),
    .buffer_r_ce1(grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_buffer_r_ce1),
    .buffer_r_we1(grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_buffer_r_we1),
    .buffer_r_d1(grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_buffer_r_d1),
    .buffer_r_q1(buffer_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_ap_start_reg <= 1'b1;
        end else if ((grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_ap_ready == 1'b1)) begin
            grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_ap_start_reg <= 1'b1;
        end else if ((grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_ap_ready == 1'b1)) begin
            grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        M_address0 = grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_M_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        M_address0 = grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_M_address0;
    end else begin
        M_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        M_ce0 = grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_M_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        M_ce0 = grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_M_ce0;
    end else begin
        M_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        M_ce1 = grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_M_ce1;
    end else begin
        M_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        M_we0 = grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_M_we0;
    end else begin
        M_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if (((grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        buffer_address0 = grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_buffer_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        buffer_address0 = grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_buffer_r_address0;
    end else begin
        buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        buffer_ce0 = grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_buffer_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        buffer_ce0 = grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_buffer_r_ce0;
    end else begin
        buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        buffer_ce1 = grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_buffer_r_ce1;
    end else begin
        buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        buffer_d0 = grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_buffer_r_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        buffer_d0 = grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_buffer_r_d0;
    end else begin
        buffer_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        buffer_we0 = grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_buffer_r_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        buffer_we0 = grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_buffer_r_we0;
    end else begin
        buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        buffer_we1 = grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_buffer_r_we1;
    end else begin
        buffer_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_return = 32'd0;

assign grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_ap_start = grp_main_Pipeline_VITIS_LOOP_18_1_fu_22_ap_start_reg;

assign grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_ap_start = grp_main_Pipeline_VITIS_LOOP_7_1_fu_30_ap_start_reg;

endmodule //main
