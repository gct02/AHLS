// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="syr2k_syr2k,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu35p-fsvh2104-1-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.905571,HLS_SYN_LAT=22049,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=5407,HLS_SYN_LUT=4444,HLS_VERSION=2023_2}" *)

module syr2k (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_address0,
        A_ce0,
        A_q0,
        A_address1,
        A_ce1,
        A_q1,
        B_address0,
        B_ce0,
        B_q0,
        B_address1,
        B_ce1,
        B_q1,
        C_address0,
        C_ce0,
        C_we0,
        C_d0,
        C_q0
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] A_address0;
output   A_ce0;
input  [31:0] A_q0;
output  [9:0] A_address1;
output   A_ce1;
input  [31:0] A_q1;
output  [9:0] B_address0;
output   B_ce0;
input  [31:0] B_q0;
output  [9:0] B_address1;
output   B_ce1;
input  [31:0] B_q1;
output  [9:0] C_address0;
output   C_ce0;
output   C_we0;
output  [31:0] C_d0;
input  [31:0] C_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] A_address0;
reg A_ce0;
reg A_ce1;
reg[9:0] B_address0;
reg B_ce0;
reg B_ce1;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [5:0] indvars_iv17_load_reg_168;
wire    ap_CS_fsm_state2;
wire   [9:0] trunc_ln11_fu_120_p1;
reg   [9:0] trunc_ln11_reg_176;
reg   [31:0] B_load_reg_191;
wire    ap_CS_fsm_state3;
reg   [31:0] A_load_reg_196;
wire   [31:0] bitcast_ln18_fu_146_p1;
reg   [31:0] bitcast_ln18_reg_201;
wire    ap_CS_fsm_state4;
wire   [31:0] bitcast_ln18_1_fu_150_p1;
reg   [31:0] bitcast_ln18_1_reg_206;
wire    grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_start;
wire    grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_done;
wire    grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_idle;
wire    grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_ready;
wire   [9:0] grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_C_address0;
wire    grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_C_ce0;
wire    grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_C_we0;
wire   [31:0] grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_C_d0;
wire   [9:0] grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_address0;
wire    grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_ce0;
wire   [9:0] grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_address1;
wire    grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_ce1;
wire   [9:0] grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_address0;
wire    grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_ce0;
wire   [9:0] grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_address1;
wire    grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_ce1;
reg    grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_start_reg;
wire    ap_CS_fsm_state5;
wire   [63:0] zext_ln11_fu_114_p1;
wire   [0:0] icmp_ln11_fu_105_p2;
reg   [5:0] indvars_iv17_fu_44;
wire   [5:0] add_ln11_fu_130_p2;
reg   [10:0] ii_fu_48;
wire   [10:0] add_ln22_fu_124_p2;
reg   [4:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_start_reg = 1'b0;
#0 indvars_iv17_fu_44 = 6'd0;
#0 ii_fu_48 = 11'd0;
end

syr2k_syr2k_Pipeline_VITIS_LOOP_13_2 grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_start),
    .ap_done(grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_done),
    .ap_idle(grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_idle),
    .ap_ready(grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_ready),
    .indvars_iv17(indvars_iv17_load_reg_168),
    .empty(trunc_ln11_reg_176),
    .C_address0(grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_C_address0),
    .C_ce0(grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_C_ce0),
    .C_we0(grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_C_we0),
    .C_d0(grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_C_d0),
    .C_q0(C_q0),
    .A_address0(grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_address0),
    .A_ce0(grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_ce0),
    .A_q0(A_q0),
    .A_address1(grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_address1),
    .A_ce1(grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_ce1),
    .A_q1(A_q1),
    .bitcast_ln18(bitcast_ln18_reg_201),
    .B_address0(grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_address0),
    .B_ce0(grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_ce0),
    .B_q0(B_q0),
    .B_address1(grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_address1),
    .B_ce1(grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_ce1),
    .B_q1(B_q1),
    .bitcast_ln18_1(bitcast_ln18_1_reg_206)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_start_reg <= 1'b1;
        end else if ((grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_ready == 1'b1)) begin
            grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        ii_fu_48 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln11_fu_105_p2 == 1'd0))) begin
        ii_fu_48 <= add_ln22_fu_124_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvars_iv17_fu_44 <= 6'd1;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln11_fu_105_p2 == 1'd0))) begin
        indvars_iv17_fu_44 <= add_ln11_fu_130_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        A_load_reg_196 <= A_q0;
        B_load_reg_191 <= B_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bitcast_ln18_1_reg_206 <= bitcast_ln18_1_fu_150_p1;
        bitcast_ln18_reg_201 <= bitcast_ln18_fu_146_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        indvars_iv17_load_reg_168 <= indvars_iv17_fu_44;
        trunc_ln11_reg_176 <= trunc_ln11_fu_120_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        A_address0 = zext_ln11_fu_114_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        A_address0 = grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_address0;
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        A_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        A_ce0 = grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_ce0;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        A_ce1 = grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_ce1;
    end else begin
        A_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        B_address0 = zext_ln11_fu_114_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        B_address0 = grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_address0;
    end else begin
        B_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        B_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        B_ce0 = grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_ce0;
    end else begin
        B_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        B_ce1 = grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_ce1;
    end else begin
        B_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln11_fu_105_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln11_fu_105_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln11_fu_105_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_address1 = grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_address1;

assign B_address1 = grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_address1;

assign C_address0 = grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_C_address0;

assign C_ce0 = grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_C_ce0;

assign C_d0 = grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_C_d0;

assign C_we0 = grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_C_we0;

assign add_ln11_fu_130_p2 = (indvars_iv17_fu_44 + 6'd1);

assign add_ln22_fu_124_p2 = (ii_fu_48 + 11'd32);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign bitcast_ln18_1_fu_150_p1 = A_load_reg_196;

assign bitcast_ln18_fu_146_p1 = B_load_reg_191;

assign grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_start = grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_start_reg;

assign icmp_ln11_fu_105_p2 = ((indvars_iv17_fu_44 == 6'd33) ? 1'b1 : 1'b0);

assign trunc_ln11_fu_120_p1 = ii_fu_48[9:0];

assign zext_ln11_fu_114_p1 = ii_fu_48;

endmodule //syr2k
