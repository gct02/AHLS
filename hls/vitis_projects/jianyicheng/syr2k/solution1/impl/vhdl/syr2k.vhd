-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity syr2k is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    A_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    A_ce0 : OUT STD_LOGIC;
    A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    A_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    A_ce1 : OUT STD_LOGIC;
    A_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    B_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    B_ce0 : OUT STD_LOGIC;
    B_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    B_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    B_ce1 : OUT STD_LOGIC;
    B_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    C_ce0 : OUT STD_LOGIC;
    C_we0 : OUT STD_LOGIC;
    C_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of syr2k is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "syr2k_syr2k,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu35p-fsvh2104-1-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.905571,HLS_SYN_LAT=22049,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=5407,HLS_SYN_LUT=4444,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv11_20 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvars_iv17_load_reg_168 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal trunc_ln11_fu_120_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln11_reg_176 : STD_LOGIC_VECTOR (9 downto 0);
    signal B_load_reg_191 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal A_load_reg_196 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln18_fu_146_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln18_reg_201 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal bitcast_ln18_1_fu_150_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln18_1_reg_206 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_start : STD_LOGIC;
    signal grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_done : STD_LOGIC;
    signal grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_idle : STD_LOGIC;
    signal grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_ready : STD_LOGIC;
    signal grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_C_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_C_ce0 : STD_LOGIC;
    signal grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_C_we0 : STD_LOGIC;
    signal grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_C_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_ce0 : STD_LOGIC;
    signal grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_ce1 : STD_LOGIC;
    signal grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_ce0 : STD_LOGIC;
    signal grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_ce1 : STD_LOGIC;
    signal grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal zext_ln11_fu_114_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln11_fu_105_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvars_iv17_fu_44 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal add_ln11_fu_130_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ii_fu_48 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    signal add_ln22_fu_124_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component syr2k_syr2k_Pipeline_VITIS_LOOP_13_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        indvars_iv17 : IN STD_LOGIC_VECTOR (5 downto 0);
        empty : IN STD_LOGIC_VECTOR (9 downto 0);
        C_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        C_ce0 : OUT STD_LOGIC;
        C_we0 : OUT STD_LOGIC;
        C_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        A_ce1 : OUT STD_LOGIC;
        A_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        bitcast_ln18 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        B_ce0 : OUT STD_LOGIC;
        B_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        B_ce1 : OUT STD_LOGIC;
        B_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        bitcast_ln18_1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78 : component syr2k_syr2k_Pipeline_VITIS_LOOP_13_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_start,
        ap_done => grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_done,
        ap_idle => grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_idle,
        ap_ready => grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_ready,
        indvars_iv17 => indvars_iv17_load_reg_168,
        empty => trunc_ln11_reg_176,
        C_address0 => grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_C_address0,
        C_ce0 => grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_C_ce0,
        C_we0 => grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_C_we0,
        C_d0 => grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_C_d0,
        C_q0 => C_q0,
        A_address0 => grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_address0,
        A_ce0 => grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_ce0,
        A_q0 => A_q0,
        A_address1 => grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_address1,
        A_ce1 => grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_ce1,
        A_q1 => A_q1,
        bitcast_ln18 => bitcast_ln18_reg_201,
        B_address0 => grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_address0,
        B_ce0 => grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_ce0,
        B_q0 => B_q0,
        B_address1 => grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_address1,
        B_ce1 => grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_ce1,
        B_q1 => B_q1,
        bitcast_ln18_1 => bitcast_ln18_1_reg_206);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_ready = ap_const_logic_1)) then 
                    grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ii_fu_48_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                ii_fu_48 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln11_fu_105_p2 = ap_const_lv1_0))) then 
                ii_fu_48 <= add_ln22_fu_124_p2;
            end if; 
        end if;
    end process;

    indvars_iv17_fu_44_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvars_iv17_fu_44 <= ap_const_lv6_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln11_fu_105_p2 = ap_const_lv1_0))) then 
                indvars_iv17_fu_44 <= add_ln11_fu_130_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                A_load_reg_196 <= A_q0;
                B_load_reg_191 <= B_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                bitcast_ln18_1_reg_206 <= bitcast_ln18_1_fu_150_p1;
                bitcast_ln18_reg_201 <= bitcast_ln18_fu_146_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                indvars_iv17_load_reg_168 <= indvars_iv17_fu_44;
                trunc_ln11_reg_176 <= trunc_ln11_fu_120_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_done, ap_CS_fsm_state5, icmp_ln11_fu_105_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln11_fu_105_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;

    A_address0_assign_proc : process(ap_CS_fsm_state2, grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_address0, ap_CS_fsm_state5, zext_ln11_fu_114_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            A_address0 <= zext_ln11_fu_114_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            A_address0 <= grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_address0;
        else 
            A_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    A_address1 <= grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_address1;

    A_ce0_assign_proc : process(ap_CS_fsm_state2, grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_ce0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            A_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            A_ce0 <= grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_ce0;
        else 
            A_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_ce1_assign_proc : process(grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_ce1, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            A_ce1 <= grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_A_ce1;
        else 
            A_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    B_address0_assign_proc : process(ap_CS_fsm_state2, grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_address0, ap_CS_fsm_state5, zext_ln11_fu_114_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            B_address0 <= zext_ln11_fu_114_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            B_address0 <= grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_address0;
        else 
            B_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    B_address1 <= grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_address1;

    B_ce0_assign_proc : process(ap_CS_fsm_state2, grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_ce0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            B_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            B_ce0 <= grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_ce0;
        else 
            B_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_ce1_assign_proc : process(grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_ce1, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            B_ce1 <= grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_B_ce1;
        else 
            B_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    C_address0 <= grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_C_address0;
    C_ce0 <= grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_C_ce0;
    C_d0 <= grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_C_d0;
    C_we0 <= grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_C_we0;
    add_ln11_fu_130_p2 <= std_logic_vector(unsigned(indvars_iv17_fu_44) + unsigned(ap_const_lv6_1));
    add_ln22_fu_124_p2 <= std_logic_vector(unsigned(ii_fu_48) + unsigned(ap_const_lv11_20));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_done)
    begin
        if ((grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state2, icmp_ln11_fu_105_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln11_fu_105_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln11_fu_105_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln11_fu_105_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln18_1_fu_150_p1 <= A_load_reg_196;
    bitcast_ln18_fu_146_p1 <= B_load_reg_191;
    grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_start <= grp_syr2k_Pipeline_VITIS_LOOP_13_2_fu_78_ap_start_reg;
    icmp_ln11_fu_105_p2 <= "1" when (indvars_iv17_fu_44 = ap_const_lv6_21) else "0";
    trunc_ln11_fu_120_p1 <= ii_fu_48(10 - 1 downto 0);
    zext_ln11_fu_114_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ii_fu_48),64));
end behav;
