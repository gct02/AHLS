// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module main_main_Pipeline_VITIS_LOOP_177_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        array_0_address0,
        array_0_ce0,
        array_0_we0,
        array_0_d0,
        array_1_address0,
        array_1_ce0,
        array_1_we0,
        array_1_d0,
        array_2_address0,
        array_2_ce0,
        array_2_we0,
        array_2_d0,
        array_3_address0,
        array_3_ce0,
        array_3_we0,
        array_3_d0,
        array_4_address0,
        array_4_ce0,
        array_4_we0,
        array_4_d0,
        array_5_address0,
        array_5_ce0,
        array_5_we0,
        array_5_d0,
        array_6_address0,
        array_6_ce0,
        array_6_we0,
        array_6_d0,
        array_7_address0,
        array_7_ce0,
        array_7_we0,
        array_7_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] array_0_address0;
output   array_0_ce0;
output   array_0_we0;
output  [6:0] array_0_d0;
output  [11:0] array_1_address0;
output   array_1_ce0;
output   array_1_we0;
output  [6:0] array_1_d0;
output  [11:0] array_2_address0;
output   array_2_ce0;
output   array_2_we0;
output  [6:0] array_2_d0;
output  [11:0] array_3_address0;
output   array_3_ce0;
output   array_3_we0;
output  [6:0] array_3_d0;
output  [11:0] array_4_address0;
output   array_4_ce0;
output   array_4_we0;
output  [6:0] array_4_d0;
output  [11:0] array_5_address0;
output   array_5_ce0;
output   array_5_we0;
output  [6:0] array_5_d0;
output  [11:0] array_6_address0;
output   array_6_ce0;
output   array_6_we0;
output  [6:0] array_6_d0;
output  [11:0] array_7_address0;
output   array_7_ce0;
output   array_7_we0;
output  [6:0] array_7_d0;

reg ap_idle;
reg array_0_ce0;
reg array_0_we0;
reg array_1_ce0;
reg array_1_we0;
reg array_2_ce0;
reg array_2_we0;
reg array_3_ce0;
reg array_3_we0;
reg array_4_ce0;
reg array_4_we0;
reg array_5_ce0;
reg array_5_we0;
reg array_6_ce0;
reg array_6_we0;
reg array_7_ce0;
reg array_7_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln177_fu_229_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [12:0] i_2_reg_737;
wire    ap_block_pp0_stage0_11001;
reg   [12:0] i_2_reg_737_pp0_iter1_reg;
reg   [12:0] i_2_reg_737_pp0_iter2_reg;
reg   [12:0] i_2_reg_737_pp0_iter3_reg;
reg   [12:0] i_2_reg_737_pp0_iter4_reg;
reg   [12:0] i_2_reg_737_pp0_iter5_reg;
reg   [12:0] i_2_reg_737_pp0_iter6_reg;
reg   [12:0] i_2_reg_737_pp0_iter7_reg;
reg   [12:0] i_2_reg_737_pp0_iter8_reg;
reg   [12:0] i_2_reg_737_pp0_iter9_reg;
reg   [12:0] i_2_reg_737_pp0_iter10_reg;
reg   [12:0] i_2_reg_737_pp0_iter11_reg;
reg   [12:0] i_2_reg_737_pp0_iter12_reg;
reg   [12:0] i_2_reg_737_pp0_iter13_reg;
reg   [12:0] i_2_reg_737_pp0_iter14_reg;
reg   [12:0] i_2_reg_737_pp0_iter15_reg;
reg   [12:0] i_2_reg_737_pp0_iter16_reg;
reg   [12:0] i_2_reg_737_pp0_iter17_reg;
reg   [12:0] i_2_reg_737_pp0_iter18_reg;
reg   [12:0] i_2_reg_737_pp0_iter19_reg;
reg   [12:0] i_2_reg_737_pp0_iter20_reg;
reg   [14:0] lshr_ln19_3_reg_746;
wire   [0:0] xor_ln19_2_fu_294_p2;
reg   [0:0] xor_ln19_2_reg_751;
reg   [13:0] tmp_reg_762;
wire   [0:0] xor_ln19_5_fu_346_p2;
reg   [0:0] xor_ln19_5_reg_767;
reg   [12:0] tmp_1_reg_777;
wire   [0:0] xor_ln19_8_fu_382_p2;
reg   [0:0] xor_ln19_8_reg_782;
reg   [11:0] tmp_2_reg_791;
wire   [0:0] xor_ln19_10_fu_412_p2;
reg   [0:0] xor_ln19_10_reg_796;
reg   [10:0] tmp_3_reg_804;
wire   [0:0] xor_ln19_12_fu_442_p2;
reg   [0:0] xor_ln19_12_reg_809;
reg   [9:0] tmp_4_reg_816;
wire   [0:0] xor_ln19_14_fu_472_p2;
reg   [0:0] xor_ln19_14_reg_821;
reg   [8:0] tmp_5_reg_827;
wire   [0:0] xor_ln19_16_fu_502_p2;
reg   [0:0] xor_ln19_16_reg_832;
wire   [15:0] or_ln19_7_fu_538_p10;
reg   [15:0] or_ln19_7_reg_837;
wire   [6:0] grp_fu_576_p2;
reg   [6:0] urem_ln178_reg_877;
wire   [6:0] grp_fu_589_p2;
reg   [6:0] urem_ln179_reg_882;
wire   [6:0] grp_fu_603_p2;
reg   [6:0] urem_ln180_reg_887;
wire   [6:0] grp_fu_618_p2;
reg   [6:0] urem_ln181_reg_892;
wire   [6:0] grp_fu_634_p2;
reg   [6:0] urem_ln182_reg_897;
wire   [6:0] grp_fu_651_p2;
reg   [6:0] urem_ln183_reg_902;
wire   [6:0] grp_fu_669_p2;
reg   [6:0] urem_ln184_reg_907;
wire   [6:0] grp_fu_675_p2;
reg   [6:0] urem_ln185_reg_912;
wire   [63:0] zext_ln177_fu_680_p1;
wire    ap_block_pp0_stage0;
reg   [12:0] i_fu_104;
wire   [12:0] add_ln177_fu_235_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_i_2;
reg   [15:0] lfsr_0_fu_108;
reg   [15:0] ap_sig_allocacmp_lfsr_0_load;
wire   [0:0] tmp_8_fu_256_p3;
wire   [0:0] tmp_9_fu_264_p3;
wire   [0:0] xor_ln19_1_fu_282_p2;
wire   [0:0] tmp_7_fu_248_p3;
wire   [0:0] xor_ln19_fu_288_p2;
wire   [0:0] trunc_ln19_fu_244_p1;
wire   [0:0] tmp_10_fu_300_p3;
wire   [0:0] tmp_11_fu_308_p3;
wire   [0:0] tmp_12_fu_316_p3;
wire   [0:0] xor_ln19_4_fu_340_p2;
wire   [0:0] xor_ln19_3_fu_334_p2;
wire   [0:0] tmp_13_fu_352_p3;
wire   [0:0] xor_ln19_7_fu_376_p2;
wire   [0:0] xor_ln19_6_fu_370_p2;
wire   [0:0] tmp_14_fu_388_p3;
wire   [0:0] xor_ln19_9_fu_406_p2;
wire   [0:0] tmp_15_fu_418_p3;
wire   [0:0] xor_ln19_11_fu_436_p2;
wire   [0:0] tmp_16_fu_448_p3;
wire   [0:0] xor_ln19_13_fu_466_p2;
wire   [0:0] tmp_17_fu_478_p3;
wire   [0:0] xor_ln19_15_fu_496_p2;
wire   [0:0] tmp_18_fu_508_p3;
wire   [0:0] xor_ln19_17_fu_526_p2;
wire   [0:0] xor_ln19_18_fu_532_p2;
wire   [7:0] tmp_6_fu_516_p4;
wire   [15:0] grp_fu_576_p0;
wire   [7:0] grp_fu_576_p1;
wire   [15:0] grp_fu_589_p0;
wire   [7:0] grp_fu_589_p1;
wire   [15:0] grp_fu_603_p0;
wire   [7:0] grp_fu_603_p1;
wire   [15:0] grp_fu_618_p0;
wire   [7:0] grp_fu_618_p1;
wire   [15:0] grp_fu_634_p0;
wire   [7:0] grp_fu_634_p1;
wire   [15:0] grp_fu_651_p0;
wire   [7:0] grp_fu_651_p1;
wire   [15:0] grp_fu_669_p0;
wire   [7:0] grp_fu_669_p1;
wire   [7:0] grp_fu_675_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 i_fu_104 = 13'd0;
#0 lfsr_0_fu_108 = 16'd0;
#0 ap_done_reg = 1'b0;
end

main_urem_16ns_8ns_7_20_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 7 ))
urem_16ns_8ns_7_20_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_576_p0),
    .din1(grp_fu_576_p1),
    .ce(1'b1),
    .dout(grp_fu_576_p2)
);

main_urem_16ns_8ns_7_20_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 7 ))
urem_16ns_8ns_7_20_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_589_p0),
    .din1(grp_fu_589_p1),
    .ce(1'b1),
    .dout(grp_fu_589_p2)
);

main_urem_16ns_8ns_7_20_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 7 ))
urem_16ns_8ns_7_20_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_603_p0),
    .din1(grp_fu_603_p1),
    .ce(1'b1),
    .dout(grp_fu_603_p2)
);

main_urem_16ns_8ns_7_20_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 7 ))
urem_16ns_8ns_7_20_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_618_p0),
    .din1(grp_fu_618_p1),
    .ce(1'b1),
    .dout(grp_fu_618_p2)
);

main_urem_16ns_8ns_7_20_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 7 ))
urem_16ns_8ns_7_20_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_634_p0),
    .din1(grp_fu_634_p1),
    .ce(1'b1),
    .dout(grp_fu_634_p2)
);

main_urem_16ns_8ns_7_20_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 7 ))
urem_16ns_8ns_7_20_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_651_p0),
    .din1(grp_fu_651_p1),
    .ce(1'b1),
    .dout(grp_fu_651_p2)
);

main_urem_16ns_8ns_7_20_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 7 ))
urem_16ns_8ns_7_20_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_669_p0),
    .din1(grp_fu_669_p1),
    .ce(1'b1),
    .dout(grp_fu_669_p2)
);

main_urem_16ns_8ns_7_20_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 7 ))
urem_16ns_8ns_7_20_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(or_ln19_7_reg_837),
    .din1(grp_fu_675_p1),
    .ce(1'b1),
    .dout(grp_fu_675_p2)
);

main_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter20_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln177_fu_229_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_104 <= add_ln177_fu_235_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_104 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln177_fu_229_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            lfsr_0_fu_108 <= or_ln19_7_fu_538_p10;
        end else if ((ap_loop_init == 1'b1)) begin
            lfsr_0_fu_108 <= 16'd44257;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        i_2_reg_737_pp0_iter10_reg <= i_2_reg_737_pp0_iter9_reg;
        i_2_reg_737_pp0_iter11_reg <= i_2_reg_737_pp0_iter10_reg;
        i_2_reg_737_pp0_iter12_reg <= i_2_reg_737_pp0_iter11_reg;
        i_2_reg_737_pp0_iter13_reg <= i_2_reg_737_pp0_iter12_reg;
        i_2_reg_737_pp0_iter14_reg <= i_2_reg_737_pp0_iter13_reg;
        i_2_reg_737_pp0_iter15_reg <= i_2_reg_737_pp0_iter14_reg;
        i_2_reg_737_pp0_iter16_reg <= i_2_reg_737_pp0_iter15_reg;
        i_2_reg_737_pp0_iter17_reg <= i_2_reg_737_pp0_iter16_reg;
        i_2_reg_737_pp0_iter18_reg <= i_2_reg_737_pp0_iter17_reg;
        i_2_reg_737_pp0_iter19_reg <= i_2_reg_737_pp0_iter18_reg;
        i_2_reg_737_pp0_iter20_reg <= i_2_reg_737_pp0_iter19_reg;
        i_2_reg_737_pp0_iter2_reg <= i_2_reg_737_pp0_iter1_reg;
        i_2_reg_737_pp0_iter3_reg <= i_2_reg_737_pp0_iter2_reg;
        i_2_reg_737_pp0_iter4_reg <= i_2_reg_737_pp0_iter3_reg;
        i_2_reg_737_pp0_iter5_reg <= i_2_reg_737_pp0_iter4_reg;
        i_2_reg_737_pp0_iter6_reg <= i_2_reg_737_pp0_iter5_reg;
        i_2_reg_737_pp0_iter7_reg <= i_2_reg_737_pp0_iter6_reg;
        i_2_reg_737_pp0_iter8_reg <= i_2_reg_737_pp0_iter7_reg;
        i_2_reg_737_pp0_iter9_reg <= i_2_reg_737_pp0_iter8_reg;
        urem_ln178_reg_877 <= grp_fu_576_p2;
        urem_ln179_reg_882 <= grp_fu_589_p2;
        urem_ln180_reg_887 <= grp_fu_603_p2;
        urem_ln181_reg_892 <= grp_fu_618_p2;
        urem_ln182_reg_897 <= grp_fu_634_p2;
        urem_ln183_reg_902 <= grp_fu_651_p2;
        urem_ln184_reg_907 <= grp_fu_669_p2;
        urem_ln185_reg_912 <= grp_fu_675_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        i_2_reg_737 <= ap_sig_allocacmp_i_2;
        i_2_reg_737_pp0_iter1_reg <= i_2_reg_737;
        lshr_ln19_3_reg_746 <= {{ap_sig_allocacmp_lfsr_0_load[15:1]}};
        or_ln19_7_reg_837 <= or_ln19_7_fu_538_p10;
        tmp_1_reg_777 <= {{ap_sig_allocacmp_lfsr_0_load[15:3]}};
        tmp_2_reg_791 <= {{ap_sig_allocacmp_lfsr_0_load[15:4]}};
        tmp_3_reg_804 <= {{ap_sig_allocacmp_lfsr_0_load[15:5]}};
        tmp_4_reg_816 <= {{ap_sig_allocacmp_lfsr_0_load[15:6]}};
        tmp_5_reg_827 <= {{ap_sig_allocacmp_lfsr_0_load[15:7]}};
        tmp_reg_762 <= {{ap_sig_allocacmp_lfsr_0_load[15:2]}};
        xor_ln19_10_reg_796 <= xor_ln19_10_fu_412_p2;
        xor_ln19_12_reg_809 <= xor_ln19_12_fu_442_p2;
        xor_ln19_14_reg_821 <= xor_ln19_14_fu_472_p2;
        xor_ln19_16_reg_832 <= xor_ln19_16_fu_502_p2;
        xor_ln19_2_reg_751 <= xor_ln19_2_fu_294_p2;
        xor_ln19_5_reg_767 <= xor_ln19_5_fu_346_p2;
        xor_ln19_8_reg_782 <= xor_ln19_8_fu_382_p2;
    end
end

always @ (*) begin
    if (((icmp_ln177_fu_229_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter20_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_2 = 13'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_104;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_lfsr_0_load = 16'd44257;
    end else begin
        ap_sig_allocacmp_lfsr_0_load = lfsr_0_fu_108;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter21 == 1'b1))) begin
        array_0_ce0 = 1'b1;
    end else begin
        array_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter21 == 1'b1))) begin
        array_0_we0 = 1'b1;
    end else begin
        array_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter21 == 1'b1))) begin
        array_1_ce0 = 1'b1;
    end else begin
        array_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter21 == 1'b1))) begin
        array_1_we0 = 1'b1;
    end else begin
        array_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter21 == 1'b1))) begin
        array_2_ce0 = 1'b1;
    end else begin
        array_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter21 == 1'b1))) begin
        array_2_we0 = 1'b1;
    end else begin
        array_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter21 == 1'b1))) begin
        array_3_ce0 = 1'b1;
    end else begin
        array_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter21 == 1'b1))) begin
        array_3_we0 = 1'b1;
    end else begin
        array_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter21 == 1'b1))) begin
        array_4_ce0 = 1'b1;
    end else begin
        array_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter21 == 1'b1))) begin
        array_4_we0 = 1'b1;
    end else begin
        array_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter21 == 1'b1))) begin
        array_5_ce0 = 1'b1;
    end else begin
        array_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter21 == 1'b1))) begin
        array_5_we0 = 1'b1;
    end else begin
        array_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter21 == 1'b1))) begin
        array_6_ce0 = 1'b1;
    end else begin
        array_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter21 == 1'b1))) begin
        array_6_we0 = 1'b1;
    end else begin
        array_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter21 == 1'b1))) begin
        array_7_ce0 = 1'b1;
    end else begin
        array_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter21 == 1'b1))) begin
        array_7_we0 = 1'b1;
    end else begin
        array_7_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln177_fu_235_p2 = (ap_sig_allocacmp_i_2 + 13'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign array_0_address0 = zext_ln177_fu_680_p1;

assign array_0_d0 = urem_ln178_reg_877[6:0];

assign array_1_address0 = zext_ln177_fu_680_p1;

assign array_1_d0 = urem_ln179_reg_882[6:0];

assign array_2_address0 = zext_ln177_fu_680_p1;

assign array_2_d0 = urem_ln180_reg_887[6:0];

assign array_3_address0 = zext_ln177_fu_680_p1;

assign array_3_d0 = urem_ln181_reg_892[6:0];

assign array_4_address0 = zext_ln177_fu_680_p1;

assign array_4_d0 = urem_ln182_reg_897[6:0];

assign array_5_address0 = zext_ln177_fu_680_p1;

assign array_5_d0 = urem_ln183_reg_902[6:0];

assign array_6_address0 = zext_ln177_fu_680_p1;

assign array_6_d0 = urem_ln184_reg_907[6:0];

assign array_7_address0 = zext_ln177_fu_680_p1;

assign array_7_d0 = urem_ln185_reg_912[6:0];

assign grp_fu_576_p0 = {{xor_ln19_2_reg_751}, {lshr_ln19_3_reg_746}};

assign grp_fu_576_p1 = 16'd120;

assign grp_fu_589_p0 = {{{xor_ln19_5_reg_767}, {xor_ln19_2_reg_751}}, {tmp_reg_762}};

assign grp_fu_589_p1 = 16'd120;

assign grp_fu_603_p0 = {{{{xor_ln19_8_reg_782}, {xor_ln19_5_reg_767}}, {xor_ln19_2_reg_751}}, {tmp_1_reg_777}};

assign grp_fu_603_p1 = 16'd120;

assign grp_fu_618_p0 = {{{{{xor_ln19_10_reg_796}, {xor_ln19_8_reg_782}}, {xor_ln19_5_reg_767}}, {xor_ln19_2_reg_751}}, {tmp_2_reg_791}};

assign grp_fu_618_p1 = 16'd120;

assign grp_fu_634_p0 = {{{{{{xor_ln19_12_reg_809}, {xor_ln19_10_reg_796}}, {xor_ln19_8_reg_782}}, {xor_ln19_5_reg_767}}, {xor_ln19_2_reg_751}}, {tmp_3_reg_804}};

assign grp_fu_634_p1 = 16'd120;

assign grp_fu_651_p0 = {{{{{{{xor_ln19_14_reg_821}, {xor_ln19_12_reg_809}}, {xor_ln19_10_reg_796}}, {xor_ln19_8_reg_782}}, {xor_ln19_5_reg_767}}, {xor_ln19_2_reg_751}}, {tmp_4_reg_816}};

assign grp_fu_651_p1 = 16'd120;

assign grp_fu_669_p0 = {{{{{{{{xor_ln19_16_reg_832}, {xor_ln19_14_reg_821}}, {xor_ln19_12_reg_809}}, {xor_ln19_10_reg_796}}, {xor_ln19_8_reg_782}}, {xor_ln19_5_reg_767}}, {xor_ln19_2_reg_751}}, {tmp_5_reg_827}};

assign grp_fu_669_p1 = 16'd120;

assign grp_fu_675_p1 = 16'd120;

assign icmp_ln177_fu_229_p2 = ((ap_sig_allocacmp_i_2 == 13'd4096) ? 1'b1 : 1'b0);

assign or_ln19_7_fu_538_p10 = {{{{{{{{{xor_ln19_18_fu_532_p2}, {xor_ln19_16_fu_502_p2}}, {xor_ln19_14_fu_472_p2}}, {xor_ln19_12_fu_442_p2}}, {xor_ln19_10_fu_412_p2}}, {xor_ln19_8_fu_382_p2}}, {xor_ln19_5_fu_346_p2}}, {xor_ln19_2_fu_294_p2}}, {tmp_6_fu_516_p4}};

assign tmp_10_fu_300_p3 = ap_sig_allocacmp_lfsr_0_load[32'd1];

assign tmp_11_fu_308_p3 = ap_sig_allocacmp_lfsr_0_load[32'd4];

assign tmp_12_fu_316_p3 = ap_sig_allocacmp_lfsr_0_load[32'd6];

assign tmp_13_fu_352_p3 = ap_sig_allocacmp_lfsr_0_load[32'd7];

assign tmp_14_fu_388_p3 = ap_sig_allocacmp_lfsr_0_load[32'd8];

assign tmp_15_fu_418_p3 = ap_sig_allocacmp_lfsr_0_load[32'd9];

assign tmp_16_fu_448_p3 = ap_sig_allocacmp_lfsr_0_load[32'd10];

assign tmp_17_fu_478_p3 = ap_sig_allocacmp_lfsr_0_load[32'd11];

assign tmp_18_fu_508_p3 = ap_sig_allocacmp_lfsr_0_load[32'd12];

assign tmp_6_fu_516_p4 = {{ap_sig_allocacmp_lfsr_0_load[15:8]}};

assign tmp_7_fu_248_p3 = ap_sig_allocacmp_lfsr_0_load[32'd2];

assign tmp_8_fu_256_p3 = ap_sig_allocacmp_lfsr_0_load[32'd3];

assign tmp_9_fu_264_p3 = ap_sig_allocacmp_lfsr_0_load[32'd5];

assign trunc_ln19_fu_244_p1 = ap_sig_allocacmp_lfsr_0_load[0:0];

assign xor_ln19_10_fu_412_p2 = (xor_ln19_9_fu_406_p2 ^ xor_ln19_1_fu_282_p2);

assign xor_ln19_11_fu_436_p2 = (tmp_15_fu_418_p3 ^ tmp_13_fu_352_p3);

assign xor_ln19_12_fu_442_p2 = (xor_ln19_4_fu_340_p2 ^ xor_ln19_11_fu_436_p2);

assign xor_ln19_13_fu_466_p2 = (tmp_16_fu_448_p3 ^ tmp_14_fu_388_p3);

assign xor_ln19_14_fu_472_p2 = (xor_ln19_7_fu_376_p2 ^ xor_ln19_13_fu_466_p2);

assign xor_ln19_15_fu_496_p2 = (tmp_17_fu_478_p3 ^ tmp_15_fu_418_p3);

assign xor_ln19_16_fu_502_p2 = (xor_ln19_9_fu_406_p2 ^ xor_ln19_15_fu_496_p2);

assign xor_ln19_17_fu_526_p2 = (tmp_18_fu_508_p3 ^ tmp_16_fu_448_p3);

assign xor_ln19_18_fu_532_p2 = (xor_ln19_17_fu_526_p2 ^ xor_ln19_11_fu_436_p2);

assign xor_ln19_1_fu_282_p2 = (tmp_9_fu_264_p3 ^ tmp_8_fu_256_p3);

assign xor_ln19_2_fu_294_p2 = (xor_ln19_fu_288_p2 ^ trunc_ln19_fu_244_p1);

assign xor_ln19_3_fu_334_p2 = (tmp_8_fu_256_p3 ^ tmp_10_fu_300_p3);

assign xor_ln19_4_fu_340_p2 = (tmp_12_fu_316_p3 ^ tmp_11_fu_308_p3);

assign xor_ln19_5_fu_346_p2 = (xor_ln19_4_fu_340_p2 ^ xor_ln19_3_fu_334_p2);

assign xor_ln19_6_fu_370_p2 = (tmp_7_fu_248_p3 ^ tmp_11_fu_308_p3);

assign xor_ln19_7_fu_376_p2 = (tmp_9_fu_264_p3 ^ tmp_13_fu_352_p3);

assign xor_ln19_8_fu_382_p2 = (xor_ln19_7_fu_376_p2 ^ xor_ln19_6_fu_370_p2);

assign xor_ln19_9_fu_406_p2 = (tmp_14_fu_388_p3 ^ tmp_12_fu_316_p3);

assign xor_ln19_fu_288_p2 = (xor_ln19_1_fu_282_p2 ^ tmp_7_fu_248_p3);

assign zext_ln177_fu_680_p1 = i_2_reg_737_pp0_iter20_reg;

endmodule //main_main_Pipeline_VITIS_LOOP_177_1
