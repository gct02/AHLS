// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module main_histogram_Pipeline_loop_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        results_5_address0,
        results_5_ce0,
        results_5_we0,
        results_5_d0,
        results_5_q0,
        array_5_address0,
        array_5_ce0,
        array_5_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] results_5_address0;
output   results_5_ce0;
output   results_5_we0;
output  [31:0] results_5_d0;
input  [31:0] results_5_q0;
output  [11:0] array_5_address0;
output   array_5_ce0;
input  [6:0] array_5_q0;

reg ap_idle;
reg[2:0] results_5_address0;
reg results_5_ce0;
reg results_5_we0;
reg array_5_ce0;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln117_reg_237;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_subdone;
reg   [31:0] reg_121;
wire    ap_block_pp0_stage3_11001;
reg   [0:0] and_ln119_reg_283;
reg   [0:0] and_ln121_reg_287;
reg   [0:0] and_ln123_reg_291;
reg   [0:0] and_ln125_reg_295;
wire   [31:0] grp_fu_125_p2;
reg   [31:0] reg_131;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln117_fu_144_p2;
reg   [6:0] num_reg_246;
wire    ap_block_pp0_stage1_11001;
wire   [2:0] results_5_addr_reg_258;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
wire   [2:0] results_5_addr_1_reg_263;
wire   [2:0] results_5_addr_2_reg_268;
wire   [2:0] results_5_addr_3_reg_273;
wire   [2:0] results_5_addr_4_reg_278;
wire   [0:0] and_ln119_fu_176_p2;
wire   [0:0] and_ln121_fu_192_p2;
wire   [0:0] and_ln123_fu_208_p2;
wire   [0:0] and_ln125_fu_224_p2;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln117_fu_156_p1;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage2;
reg   [12:0] i_fu_54;
wire   [12:0] add_ln117_fu_150_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_i_6;
wire    ap_block_pp0_stage1;
wire   [0:0] icmp_ln119_fu_166_p2;
wire   [0:0] icmp_ln119_1_fu_171_p2;
wire   [0:0] icmp_ln121_fu_182_p2;
wire   [0:0] icmp_ln121_1_fu_187_p2;
wire   [0:0] icmp_ln123_fu_198_p2;
wire   [0:0] icmp_ln123_1_fu_203_p2;
wire   [0:0] icmp_ln125_fu_214_p2;
wire   [0:0] icmp_ln125_1_fu_219_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [3:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 i_fu_54 = 13'd0;
#0 ap_done_reg = 1'b0;
end

main_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln117_fu_144_p2 == 1'd0))) begin
            i_fu_54 <= add_ln117_fu_150_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_54 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        and_ln119_reg_283 <= and_ln119_fu_176_p2;
        and_ln121_reg_287 <= and_ln121_fu_192_p2;
        and_ln123_reg_291 <= and_ln123_fu_208_p2;
        and_ln125_reg_295 <= and_ln125_fu_224_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln117_reg_237 <= icmp_ln117_fu_144_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        num_reg_246 <= array_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln125_reg_295) & (1'd0 == and_ln123_reg_291) & (1'd0 == and_ln121_reg_287) & (1'd0 == and_ln119_reg_283) & (icmp_ln117_reg_237 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'd0 == and_ln123_reg_291) & (1'd0 == and_ln121_reg_287) & (1'd0 == and_ln119_reg_283) & (1'd1 == and_ln125_reg_295) & (icmp_ln117_reg_237 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'd0 == and_ln121_reg_287) & (1'd0 == and_ln119_reg_283) & (1'd1 == and_ln123_reg_291) & (icmp_ln117_reg_237 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'd0 == and_ln119_reg_283) & (1'd1 == and_ln121_reg_287) & (icmp_ln117_reg_237 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'd1 == and_ln119_reg_283) & (icmp_ln117_reg_237 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) 
    & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_121 <= results_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln125_reg_295) & (1'd0 == and_ln123_reg_291) & (1'd0 == and_ln121_reg_287) & (1'd0 == and_ln119_reg_283) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd0 == and_ln123_reg_291) & (1'd0 == and_ln121_reg_287) & (1'd0 == and_ln119_reg_283) & (1'd1 == and_ln125_reg_295) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd0 == and_ln121_reg_287) & (1'd0 == and_ln119_reg_283) & (1'd1 == and_ln123_reg_291) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd0 == and_ln119_reg_283) & (1'd1 == and_ln121_reg_287) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd1 == and_ln119_reg_283) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_131 <= grp_fu_125_p2;
    end
end

always @ (*) begin
    if (((icmp_ln117_reg_237 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_6 = 13'd0;
    end else begin
        ap_sig_allocacmp_i_6 = i_fu_54;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        array_5_ce0 = 1'b1;
    end else begin
        array_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln119_reg_283) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        results_5_address0 = results_5_addr_reg_258;
    end else if (((1'd0 == and_ln119_reg_283) & (1'd1 == and_ln121_reg_287) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        results_5_address0 = results_5_addr_1_reg_263;
    end else if (((1'd0 == and_ln121_reg_287) & (1'd0 == and_ln119_reg_283) & (1'd1 == and_ln123_reg_291) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        results_5_address0 = results_5_addr_2_reg_268;
    end else if (((1'd0 == and_ln123_reg_291) & (1'd0 == and_ln121_reg_287) & (1'd0 == and_ln119_reg_283) & (1'd1 == and_ln125_reg_295) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        results_5_address0 = results_5_addr_3_reg_273;
    end else if (((1'd0 == and_ln125_reg_295) & (1'd0 == and_ln123_reg_291) & (1'd0 == and_ln121_reg_287) & (1'd0 == and_ln119_reg_283) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        results_5_address0 = results_5_addr_4_reg_278;
    end else if (((1'd1 == and_ln119_fu_176_p2) & (icmp_ln117_reg_237 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        results_5_address0 = 64'd0;
    end else if (((1'd0 == and_ln119_fu_176_p2) & (1'd1 == and_ln121_fu_192_p2) & (icmp_ln117_reg_237 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        results_5_address0 = 64'd1;
    end else if (((1'd0 == and_ln121_fu_192_p2) & (1'd0 == and_ln119_fu_176_p2) & (1'd1 == and_ln123_fu_208_p2) & (icmp_ln117_reg_237 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        results_5_address0 = 64'd2;
    end else if (((1'd0 == and_ln123_fu_208_p2) & (1'd0 == and_ln121_fu_192_p2) & (1'd0 == and_ln119_fu_176_p2) & (1'd1 == and_ln125_fu_224_p2) & (icmp_ln117_reg_237 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        results_5_address0 = 64'd3;
    end else if (((1'd0 == and_ln125_fu_224_p2) & (1'd0 == and_ln123_fu_208_p2) & (1'd0 == and_ln121_fu_192_p2) & (1'd0 == and_ln119_fu_176_p2) & (icmp_ln117_reg_237 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        results_5_address0 = 64'd4;
    end else begin
        results_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln125_reg_295) & (1'd0 == and_ln123_reg_291) & (1'd0 == and_ln121_reg_287) & (1'd0 == and_ln119_reg_283) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'd0 == and_ln123_reg_291) & (1'd0 == and_ln121_reg_287) & (1'd0 == and_ln119_reg_283) & (1'd1 == and_ln125_reg_295) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'd0 == and_ln121_reg_287) & (1'd0 == and_ln119_reg_283) & (1'd1 == and_ln123_reg_291) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'd0 == and_ln119_reg_283) & (1'd1 == and_ln121_reg_287) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'd1 == and_ln119_fu_176_p2) & (icmp_ln117_reg_237 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'd0 == and_ln125_fu_224_p2) 
    & (1'd0 == and_ln123_fu_208_p2) & (1'd0 == and_ln121_fu_192_p2) & (1'd0 == and_ln119_fu_176_p2) & (icmp_ln117_reg_237 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'd0 == and_ln123_fu_208_p2) & (1'd0 == and_ln121_fu_192_p2) & (1'd0 == and_ln119_fu_176_p2) & (1'd1 == and_ln125_fu_224_p2) & (icmp_ln117_reg_237 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'd0 == and_ln121_fu_192_p2) & (1'd0 == and_ln119_fu_176_p2) & (1'd1 == and_ln123_fu_208_p2) & (icmp_ln117_reg_237 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'd0 == and_ln119_fu_176_p2) & (1'd1 == and_ln121_fu_192_p2) & (icmp_ln117_reg_237 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'd1 == and_ln119_reg_283) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        results_5_ce0 = 1'b1;
    end else begin
        results_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln125_reg_295) & (1'd0 == and_ln123_reg_291) & (1'd0 == and_ln121_reg_287) & (1'd0 == and_ln119_reg_283) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'd0 == and_ln123_reg_291) & (1'd0 == and_ln121_reg_287) & (1'd0 == and_ln119_reg_283) & (1'd1 == and_ln125_reg_295) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'd0 == and_ln121_reg_287) & (1'd0 == and_ln119_reg_283) & (1'd1 == and_ln123_reg_291) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'd0 == and_ln119_reg_283) & (1'd1 == and_ln121_reg_287) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'd1 == and_ln119_reg_283) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        results_5_we0 = 1'b1;
    end else begin
        results_5_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln117_fu_150_p2 = (ap_sig_allocacmp_i_6 + 13'd1);

assign and_ln119_fu_176_p2 = (icmp_ln119_fu_166_p2 & icmp_ln119_1_fu_171_p2);

assign and_ln121_fu_192_p2 = (icmp_ln121_fu_182_p2 & icmp_ln121_1_fu_187_p2);

assign and_ln123_fu_208_p2 = (icmp_ln123_fu_198_p2 & icmp_ln123_1_fu_203_p2);

assign and_ln125_fu_224_p2 = (icmp_ln125_fu_214_p2 & icmp_ln125_1_fu_219_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign array_5_address0 = zext_ln117_fu_156_p1;

assign grp_fu_125_p2 = (reg_121 + 32'd1);

assign icmp_ln117_fu_144_p2 = ((ap_sig_allocacmp_i_6 == 13'd4096) ? 1'b1 : 1'b0);

assign icmp_ln119_1_fu_171_p2 = ((num_reg_246 < 7'd21) ? 1'b1 : 1'b0);

assign icmp_ln119_fu_166_p2 = ((num_reg_246 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln121_1_fu_187_p2 = ((num_reg_246 < 7'd41) ? 1'b1 : 1'b0);

assign icmp_ln121_fu_182_p2 = ((num_reg_246 > 7'd20) ? 1'b1 : 1'b0);

assign icmp_ln123_1_fu_203_p2 = ((num_reg_246 < 7'd61) ? 1'b1 : 1'b0);

assign icmp_ln123_fu_198_p2 = ((num_reg_246 > 7'd40) ? 1'b1 : 1'b0);

assign icmp_ln125_1_fu_219_p2 = ((num_reg_246 < 7'd81) ? 1'b1 : 1'b0);

assign icmp_ln125_fu_214_p2 = ((num_reg_246 > 7'd60) ? 1'b1 : 1'b0);

assign results_5_addr_1_reg_263 = 64'd1;

assign results_5_addr_2_reg_268 = 64'd2;

assign results_5_addr_3_reg_273 = 64'd3;

assign results_5_addr_4_reg_278 = 64'd4;

assign results_5_addr_reg_258 = 64'd0;

assign results_5_d0 = reg_131;

assign zext_ln117_fu_156_p1 = ap_sig_allocacmp_i_6;

endmodule //main_histogram_Pipeline_loop_5
