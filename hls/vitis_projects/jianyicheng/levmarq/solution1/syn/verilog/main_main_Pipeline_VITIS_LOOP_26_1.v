// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module main_main_Pipeline_VITIS_LOOP_26_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dysq_address0,
        dysq_ce0,
        dysq_we0,
        dysq_d0,
        y_address0,
        y_ce0,
        y_we0,
        y_d0,
        conv11_i1730_out,
        conv11_i1730_out_ap_vld,
        grp_fu_86_p_din0,
        grp_fu_86_p_dout0,
        grp_fu_86_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] dysq_address0;
output   dysq_ce0;
output   dysq_we0;
output  [31:0] dysq_d0;
output  [9:0] y_address0;
output   y_ce0;
output   y_we0;
output  [31:0] y_d0;
output  [15:0] conv11_i1730_out;
output   conv11_i1730_out_ap_vld;
output  [31:0] grp_fu_86_p_din0;
input  [31:0] grp_fu_86_p_dout0;
output   grp_fu_86_p_ce;

reg ap_idle;
reg dysq_ce0;
reg dysq_we0;
reg y_ce0;
reg y_we0;
reg conv11_i1730_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln26_fu_118_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [10:0] i_2_reg_300;
reg   [10:0] i_2_reg_300_pp0_iter1_reg;
reg   [10:0] i_2_reg_300_pp0_iter2_reg;
reg   [10:0] i_2_reg_300_pp0_iter3_reg;
reg   [10:0] i_2_reg_300_pp0_iter4_reg;
reg   [10:0] i_2_reg_300_pp0_iter5_reg;
reg   [10:0] i_2_reg_300_pp0_iter6_reg;
reg   [10:0] i_2_reg_300_pp0_iter7_reg;
reg   [0:0] icmp_ln26_reg_305;
reg   [0:0] icmp_ln26_reg_305_pp0_iter1_reg;
reg   [0:0] icmp_ln26_reg_305_pp0_iter2_reg;
reg   [0:0] icmp_ln26_reg_305_pp0_iter3_reg;
reg   [0:0] icmp_ln26_reg_305_pp0_iter4_reg;
reg   [0:0] icmp_ln26_reg_305_pp0_iter5_reg;
reg   [0:0] icmp_ln26_reg_305_pp0_iter6_reg;
reg   [14:0] lshr_ln11_3_reg_309;
wire   [0:0] xor_ln11_2_fu_183_p2;
reg   [0:0] xor_ln11_2_reg_314;
wire   [15:0] or_ln11_1_fu_241_p4;
reg   [15:0] or_ln11_1_reg_319;
wire   [31:0] zext_ln28_fu_272_p1;
wire   [31:0] grp_fu_99_p1;
reg   [31:0] conv_reg_334;
reg   [31:0] conv2_reg_339;
wire   [63:0] zext_ln26_fu_276_p1;
wire    ap_block_pp0_stage0;
reg   [10:0] i_fu_58;
wire   [10:0] add_ln26_fu_124_p2;
wire    ap_loop_init;
reg   [10:0] ap_sig_allocacmp_i_2;
reg   [15:0] conv11_i1730_fu_62;
reg   [15:0] ap_sig_allocacmp_conv11_i1730_load;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_99_p0;
wire   [0:0] tmp_4_fu_145_p3;
wire   [0:0] tmp_5_fu_153_p3;
wire   [0:0] xor_ln11_1_fu_171_p2;
wire   [0:0] tmp_3_fu_137_p3;
wire   [0:0] xor_ln11_fu_177_p2;
wire   [0:0] trunc_ln11_fu_133_p1;
wire   [0:0] tmp_7_fu_197_p3;
wire   [0:0] tmp_6_fu_189_p3;
wire   [0:0] tmp_8_fu_205_p3;
wire   [0:0] xor_ln11_4_fu_229_p2;
wire   [0:0] xor_ln11_3_fu_223_p2;
wire   [0:0] xor_ln11_5_fu_235_p2;
wire   [13:0] tmp_fu_213_p4;
wire   [15:0] or_ln_fu_261_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 i_fu_58 = 11'd0;
#0 conv11_i1730_fu_62 = 16'd0;
#0 ap_done_reg = 1'b0;
end

main_uitofp_32ns_32_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
uitofp_32ns_32_7_no_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_99_p0),
    .ce(1'b1),
    .dout(grp_fu_99_p1)
);

main_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln26_fu_118_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            conv11_i1730_fu_62 <= or_ln11_1_fu_241_p4;
        end else if ((ap_loop_init == 1'b1)) begin
            conv11_i1730_fu_62 <= 16'd44257;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln26_fu_118_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_58 <= add_ln26_fu_124_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_58 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        i_2_reg_300 <= ap_sig_allocacmp_i_2;
        i_2_reg_300_pp0_iter1_reg <= i_2_reg_300;
        icmp_ln26_reg_305 <= icmp_ln26_fu_118_p2;
        icmp_ln26_reg_305_pp0_iter1_reg <= icmp_ln26_reg_305;
        lshr_ln11_3_reg_309 <= {{ap_sig_allocacmp_conv11_i1730_load[15:1]}};
        or_ln11_1_reg_319 <= or_ln11_1_fu_241_p4;
        xor_ln11_2_reg_314 <= xor_ln11_2_fu_183_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        conv2_reg_339 <= grp_fu_86_p_dout0;
        conv_reg_334 <= grp_fu_99_p1;
        i_2_reg_300_pp0_iter2_reg <= i_2_reg_300_pp0_iter1_reg;
        i_2_reg_300_pp0_iter3_reg <= i_2_reg_300_pp0_iter2_reg;
        i_2_reg_300_pp0_iter4_reg <= i_2_reg_300_pp0_iter3_reg;
        i_2_reg_300_pp0_iter5_reg <= i_2_reg_300_pp0_iter4_reg;
        i_2_reg_300_pp0_iter6_reg <= i_2_reg_300_pp0_iter5_reg;
        i_2_reg_300_pp0_iter7_reg <= i_2_reg_300_pp0_iter6_reg;
        icmp_ln26_reg_305_pp0_iter2_reg <= icmp_ln26_reg_305_pp0_iter1_reg;
        icmp_ln26_reg_305_pp0_iter3_reg <= icmp_ln26_reg_305_pp0_iter2_reg;
        icmp_ln26_reg_305_pp0_iter4_reg <= icmp_ln26_reg_305_pp0_iter3_reg;
        icmp_ln26_reg_305_pp0_iter5_reg <= icmp_ln26_reg_305_pp0_iter4_reg;
        icmp_ln26_reg_305_pp0_iter6_reg <= icmp_ln26_reg_305_pp0_iter5_reg;
    end
end

always @ (*) begin
    if (((icmp_ln26_fu_118_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_conv11_i1730_load = 16'd44257;
    end else begin
        ap_sig_allocacmp_conv11_i1730_load = conv11_i1730_fu_62;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_2 = 11'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_58;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln26_reg_305_pp0_iter6_reg == 1'd1))) begin
        conv11_i1730_out_ap_vld = 1'b1;
    end else begin
        conv11_i1730_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        dysq_ce0 = 1'b1;
    end else begin
        dysq_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        dysq_we0 = 1'b1;
    end else begin
        dysq_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        y_ce0 = 1'b1;
    end else begin
        y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        y_we0 = 1'b1;
    end else begin
        y_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln26_fu_124_p2 = (ap_sig_allocacmp_i_2 + 11'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign conv11_i1730_out = conv11_i1730_fu_62;

assign dysq_address0 = zext_ln26_fu_276_p1;

assign dysq_d0 = conv_reg_334;

assign grp_fu_86_p_ce = 1'b1;

assign grp_fu_86_p_din0 = zext_ln28_fu_272_p1;

assign grp_fu_99_p0 = or_ln_fu_261_p3;

assign icmp_ln26_fu_118_p2 = ((ap_sig_allocacmp_i_2 == 11'd1024) ? 1'b1 : 1'b0);

assign or_ln11_1_fu_241_p4 = {{{xor_ln11_5_fu_235_p2}, {xor_ln11_2_fu_183_p2}}, {tmp_fu_213_p4}};

assign or_ln_fu_261_p3 = {{xor_ln11_2_reg_314}, {lshr_ln11_3_reg_309}};

assign tmp_3_fu_137_p3 = ap_sig_allocacmp_conv11_i1730_load[32'd3];

assign tmp_4_fu_145_p3 = ap_sig_allocacmp_conv11_i1730_load[32'd2];

assign tmp_5_fu_153_p3 = ap_sig_allocacmp_conv11_i1730_load[32'd5];

assign tmp_6_fu_189_p3 = ap_sig_allocacmp_conv11_i1730_load[32'd1];

assign tmp_7_fu_197_p3 = ap_sig_allocacmp_conv11_i1730_load[32'd6];

assign tmp_8_fu_205_p3 = ap_sig_allocacmp_conv11_i1730_load[32'd4];

assign tmp_fu_213_p4 = {{ap_sig_allocacmp_conv11_i1730_load[15:2]}};

assign trunc_ln11_fu_133_p1 = ap_sig_allocacmp_conv11_i1730_load[0:0];

assign xor_ln11_1_fu_171_p2 = (tmp_5_fu_153_p3 ^ tmp_4_fu_145_p3);

assign xor_ln11_2_fu_183_p2 = (xor_ln11_fu_177_p2 ^ trunc_ln11_fu_133_p1);

assign xor_ln11_3_fu_223_p2 = (tmp_7_fu_197_p3 ^ tmp_6_fu_189_p3);

assign xor_ln11_4_fu_229_p2 = (tmp_8_fu_205_p3 ^ tmp_3_fu_137_p3);

assign xor_ln11_5_fu_235_p2 = (xor_ln11_4_fu_229_p2 ^ xor_ln11_3_fu_223_p2);

assign xor_ln11_fu_177_p2 = (xor_ln11_1_fu_171_p2 ^ tmp_3_fu_137_p3);

assign y_address0 = zext_ln26_fu_276_p1;

assign y_d0 = conv2_reg_339;

assign zext_ln26_fu_276_p1 = i_2_reg_300_pp0_iter7_reg;

assign zext_ln28_fu_272_p1 = or_ln11_1_reg_319;

endmodule //main_main_Pipeline_VITIS_LOOP_26_1
