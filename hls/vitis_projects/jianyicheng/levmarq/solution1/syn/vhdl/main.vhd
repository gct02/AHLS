-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity main is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of main is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "main_main,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.312000,HLS_SYN_LAT=17448081,HLS_SYN_TPT=none,HLS_SYN_MEM=38,HLS_SYN_DSP=0,HLS_SYN_FF=3351,HLS_SYN_LUT=4508,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal dysq_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dysq_ce0 : STD_LOGIC;
    signal dysq_we0 : STD_LOGIC;
    signal dysq_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal g_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal g_ce0 : STD_LOGIC;
    signal g_we0 : STD_LOGIC;
    signal g_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal g_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal d_ce0 : STD_LOGIC;
    signal d_we0 : STD_LOGIC;
    signal d_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_ce0 : STD_LOGIC;
    signal y_we0 : STD_LOGIC;
    signal y_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal h_ce0 : STD_LOGIC;
    signal h_we0 : STD_LOGIC;
    signal h_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_ce1 : STD_LOGIC;
    signal h_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_ap_start : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_ap_done : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_ap_idle : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_ap_ready : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_dysq_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_dysq_ce0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_dysq_we0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_dysq_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_y_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_y_ce0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_y_we0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_y_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_conv11_i1730_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_conv11_i1730_out_ap_vld : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_grp_fu_86_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_grp_fu_86_p_ce : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_ap_start : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_ap_done : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_ap_idle : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_ap_ready : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_h_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_h_ce0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_h_we0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_h_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_ap_start : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_ap_done : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_ap_idle : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_ap_ready : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_g_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_g_ce0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_g_we0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_g_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_d_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_d_ce0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_d_we0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_d_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_grp_fu_86_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_grp_fu_86_p_ce : STD_LOGIC;
    signal grp_levmarq_fu_64_ap_start : STD_LOGIC;
    signal grp_levmarq_fu_64_ap_done : STD_LOGIC;
    signal grp_levmarq_fu_64_ap_idle : STD_LOGIC;
    signal grp_levmarq_fu_64_ap_ready : STD_LOGIC;
    signal grp_levmarq_fu_64_dysq_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_levmarq_fu_64_dysq_ce0 : STD_LOGIC;
    signal grp_levmarq_fu_64_g_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_levmarq_fu_64_g_ce0 : STD_LOGIC;
    signal grp_levmarq_fu_64_g_we0 : STD_LOGIC;
    signal grp_levmarq_fu_64_g_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_levmarq_fu_64_d_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_levmarq_fu_64_d_ce0 : STD_LOGIC;
    signal grp_levmarq_fu_64_d_we0 : STD_LOGIC;
    signal grp_levmarq_fu_64_d_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_levmarq_fu_64_y_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_levmarq_fu_64_y_ce0 : STD_LOGIC;
    signal grp_levmarq_fu_64_h_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_levmarq_fu_64_h_ce0 : STD_LOGIC;
    signal grp_levmarq_fu_64_h_we0 : STD_LOGIC;
    signal grp_levmarq_fu_64_h_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_levmarq_fu_64_h_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_levmarq_fu_64_h_ce1 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_ap_start_reg : STD_LOGIC := '0';
    signal grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_levmarq_fu_64_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_fu_86_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_86_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_86_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component main_main_Pipeline_VITIS_LOOP_26_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dysq_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        dysq_ce0 : OUT STD_LOGIC;
        dysq_we0 : OUT STD_LOGIC;
        dysq_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        y_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        y_ce0 : OUT STD_LOGIC;
        y_we0 : OUT STD_LOGIC;
        y_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv11_i1730_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv11_i1730_out_ap_vld : OUT STD_LOGIC;
        grp_fu_86_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_86_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_86_p_ce : OUT STD_LOGIC );
    end component;


    component main_main_Pipeline_VITIS_LOOP_36_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        h_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        h_ce0 : OUT STD_LOGIC;
        h_we0 : OUT STD_LOGIC;
        h_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component main_main_Pipeline_VITIS_LOOP_31_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv11_i1730_reload : IN STD_LOGIC_VECTOR (15 downto 0);
        g_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        g_ce0 : OUT STD_LOGIC;
        g_we0 : OUT STD_LOGIC;
        g_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        d_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        d_ce0 : OUT STD_LOGIC;
        d_we0 : OUT STD_LOGIC;
        d_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_86_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_86_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_86_p_ce : OUT STD_LOGIC );
    end component;


    component main_levmarq IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dysq_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        dysq_ce0 : OUT STD_LOGIC;
        dysq_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        g_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        g_ce0 : OUT STD_LOGIC;
        g_we0 : OUT STD_LOGIC;
        g_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        g_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        d_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        d_ce0 : OUT STD_LOGIC;
        d_we0 : OUT STD_LOGIC;
        d_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        d_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        y_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        y_ce0 : OUT STD_LOGIC;
        y_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        h_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        h_ce0 : OUT STD_LOGIC;
        h_we0 : OUT STD_LOGIC;
        h_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        h_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        h_ce1 : OUT STD_LOGIC;
        h_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component main_uitofp_32ns_32_7_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component main_dysq_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component main_g_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component main_h_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    dysq_U : component main_dysq_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dysq_address0,
        ce0 => dysq_ce0,
        we0 => dysq_we0,
        d0 => grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_dysq_d0,
        q0 => dysq_q0);

    g_U : component main_g_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => g_address0,
        ce0 => g_ce0,
        we0 => g_we0,
        d0 => g_d0,
        q0 => g_q0);

    d_U : component main_g_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => d_address0,
        ce0 => d_ce0,
        we0 => d_we0,
        d0 => d_d0,
        q0 => d_q0);

    y_U : component main_dysq_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => y_address0,
        ce0 => y_ce0,
        we0 => y_we0,
        d0 => grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_y_d0,
        q0 => y_q0);

    h_U : component main_h_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => h_address0,
        ce0 => h_ce0,
        we0 => h_we0,
        d0 => h_d0,
        address1 => grp_levmarq_fu_64_h_address1,
        ce1 => h_ce1,
        q1 => h_q1);

    grp_main_Pipeline_VITIS_LOOP_26_1_fu_42 : component main_main_Pipeline_VITIS_LOOP_26_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_ap_start,
        ap_done => grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_ap_done,
        ap_idle => grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_ap_idle,
        ap_ready => grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_ap_ready,
        dysq_address0 => grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_dysq_address0,
        dysq_ce0 => grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_dysq_ce0,
        dysq_we0 => grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_dysq_we0,
        dysq_d0 => grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_dysq_d0,
        y_address0 => grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_y_address0,
        y_ce0 => grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_y_ce0,
        y_we0 => grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_y_we0,
        y_d0 => grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_y_d0,
        conv11_i1730_out => grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_conv11_i1730_out,
        conv11_i1730_out_ap_vld => grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_conv11_i1730_out_ap_vld,
        grp_fu_86_p_din0 => grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_grp_fu_86_p_din0,
        grp_fu_86_p_dout0 => grp_fu_86_p1,
        grp_fu_86_p_ce => grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_grp_fu_86_p_ce);

    grp_main_Pipeline_VITIS_LOOP_36_3_fu_51 : component main_main_Pipeline_VITIS_LOOP_36_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_ap_start,
        ap_done => grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_ap_done,
        ap_idle => grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_ap_idle,
        ap_ready => grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_ap_ready,
        h_address0 => grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_h_address0,
        h_ce0 => grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_h_ce0,
        h_we0 => grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_h_we0,
        h_d0 => grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_h_d0);

    grp_main_Pipeline_VITIS_LOOP_31_2_fu_57 : component main_main_Pipeline_VITIS_LOOP_31_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_ap_start,
        ap_done => grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_ap_done,
        ap_idle => grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_ap_idle,
        ap_ready => grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_ap_ready,
        conv11_i1730_reload => grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_conv11_i1730_out,
        g_address0 => grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_g_address0,
        g_ce0 => grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_g_ce0,
        g_we0 => grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_g_we0,
        g_d0 => grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_g_d0,
        d_address0 => grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_d_address0,
        d_ce0 => grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_d_ce0,
        d_we0 => grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_d_we0,
        d_d0 => grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_d_d0,
        grp_fu_86_p_din0 => grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_grp_fu_86_p_din0,
        grp_fu_86_p_dout0 => grp_fu_86_p1,
        grp_fu_86_p_ce => grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_grp_fu_86_p_ce);

    grp_levmarq_fu_64 : component main_levmarq
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_levmarq_fu_64_ap_start,
        ap_done => grp_levmarq_fu_64_ap_done,
        ap_idle => grp_levmarq_fu_64_ap_idle,
        ap_ready => grp_levmarq_fu_64_ap_ready,
        dysq_address0 => grp_levmarq_fu_64_dysq_address0,
        dysq_ce0 => grp_levmarq_fu_64_dysq_ce0,
        dysq_q0 => dysq_q0,
        g_address0 => grp_levmarq_fu_64_g_address0,
        g_ce0 => grp_levmarq_fu_64_g_ce0,
        g_we0 => grp_levmarq_fu_64_g_we0,
        g_d0 => grp_levmarq_fu_64_g_d0,
        g_q0 => g_q0,
        d_address0 => grp_levmarq_fu_64_d_address0,
        d_ce0 => grp_levmarq_fu_64_d_ce0,
        d_we0 => grp_levmarq_fu_64_d_we0,
        d_d0 => grp_levmarq_fu_64_d_d0,
        d_q0 => d_q0,
        y_address0 => grp_levmarq_fu_64_y_address0,
        y_ce0 => grp_levmarq_fu_64_y_ce0,
        y_q0 => y_q0,
        h_address0 => grp_levmarq_fu_64_h_address0,
        h_ce0 => grp_levmarq_fu_64_h_ce0,
        h_we0 => grp_levmarq_fu_64_h_we0,
        h_d0 => grp_levmarq_fu_64_h_d0,
        h_address1 => grp_levmarq_fu_64_h_address1,
        h_ce1 => grp_levmarq_fu_64_h_ce1,
        h_q1 => h_q1);

    uitofp_32ns_32_7_no_dsp_1_U38 : component main_uitofp_32ns_32_7_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_86_p0,
        ce => grp_fu_86_ce,
        dout => grp_fu_86_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_levmarq_fu_64_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_levmarq_fu_64_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_levmarq_fu_64_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_levmarq_fu_64_ap_ready = ap_const_logic_1)) then 
                    grp_levmarq_fu_64_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_ap_ready = ap_const_logic_1)) then 
                    grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_ap_ready = ap_const_logic_1)) then 
                    grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_ap_ready = ap_const_logic_1)) then 
                    grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_ap_done, grp_levmarq_fu_64_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_block_state2_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_levmarq_fu_64_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_ap_done)
    begin
        if ((grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_levmarq_fu_64_ap_done)
    begin
        if ((grp_levmarq_fu_64_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_ap_done, grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_ap_done = ap_const_logic_0) or (grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(grp_levmarq_fu_64_ap_done, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_levmarq_fu_64_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_levmarq_fu_64_ap_done, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_levmarq_fu_64_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_const_lv32_0;

    d_address0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_d_address0, grp_levmarq_fu_64_d_address0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_address0 <= grp_levmarq_fu_64_d_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_address0 <= grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_d_address0;
        else 
            d_address0 <= "XXXXXXX";
        end if; 
    end process;


    d_ce0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_d_ce0, grp_levmarq_fu_64_d_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_ce0 <= grp_levmarq_fu_64_d_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_ce0 <= grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_d_ce0;
        else 
            d_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    d_d0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_d_d0, grp_levmarq_fu_64_d_d0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_d0 <= grp_levmarq_fu_64_d_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_d0 <= grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_d_d0;
        else 
            d_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    d_we0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_d_we0, grp_levmarq_fu_64_d_we0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            d_we0 <= grp_levmarq_fu_64_d_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            d_we0 <= grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_d_we0;
        else 
            d_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dysq_address0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_dysq_address0, grp_levmarq_fu_64_dysq_address0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dysq_address0 <= grp_levmarq_fu_64_dysq_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dysq_address0 <= grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_dysq_address0;
        else 
            dysq_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    dysq_ce0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_dysq_ce0, grp_levmarq_fu_64_dysq_ce0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dysq_ce0 <= grp_levmarq_fu_64_dysq_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dysq_ce0 <= grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_dysq_ce0;
        else 
            dysq_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dysq_we0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_dysq_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dysq_we0 <= grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_dysq_we0;
        else 
            dysq_we0 <= ap_const_logic_0;
        end if; 
    end process;


    g_address0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_g_address0, grp_levmarq_fu_64_g_address0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            g_address0 <= grp_levmarq_fu_64_g_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            g_address0 <= grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_g_address0;
        else 
            g_address0 <= "XXXXXXX";
        end if; 
    end process;


    g_ce0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_g_ce0, grp_levmarq_fu_64_g_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            g_ce0 <= grp_levmarq_fu_64_g_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            g_ce0 <= grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_g_ce0;
        else 
            g_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    g_d0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_g_d0, grp_levmarq_fu_64_g_d0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            g_d0 <= grp_levmarq_fu_64_g_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            g_d0 <= grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_g_d0;
        else 
            g_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    g_we0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_g_we0, grp_levmarq_fu_64_g_we0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            g_we0 <= grp_levmarq_fu_64_g_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            g_we0 <= grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_g_we0;
        else 
            g_we0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_86_ce_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_grp_fu_86_p_ce, grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_grp_fu_86_p_ce, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_86_ce <= grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_grp_fu_86_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_86_ce <= grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_grp_fu_86_p_ce;
        else 
            grp_fu_86_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_86_p0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_grp_fu_86_p_din0, grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_grp_fu_86_p_din0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_86_p0 <= grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_grp_fu_86_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_86_p0 <= grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_grp_fu_86_p_din0;
        else 
            grp_fu_86_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_levmarq_fu_64_ap_start <= grp_levmarq_fu_64_ap_start_reg;
    grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_ap_start <= grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_ap_start_reg;
    grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_ap_start <= grp_main_Pipeline_VITIS_LOOP_31_2_fu_57_ap_start_reg;
    grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_ap_start <= grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_ap_start_reg;

    h_address0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_h_address0, grp_levmarq_fu_64_h_address0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            h_address0 <= grp_levmarq_fu_64_h_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            h_address0 <= grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_h_address0;
        else 
            h_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    h_ce0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_h_ce0, grp_levmarq_fu_64_h_ce0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            h_ce0 <= grp_levmarq_fu_64_h_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            h_ce0 <= grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_h_ce0;
        else 
            h_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    h_ce1_assign_proc : process(grp_levmarq_fu_64_h_ce1, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            h_ce1 <= grp_levmarq_fu_64_h_ce1;
        else 
            h_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    h_d0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_h_d0, grp_levmarq_fu_64_h_d0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            h_d0 <= grp_levmarq_fu_64_h_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            h_d0 <= grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_h_d0;
        else 
            h_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    h_we0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_h_we0, grp_levmarq_fu_64_h_we0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            h_we0 <= grp_levmarq_fu_64_h_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            h_we0 <= grp_main_Pipeline_VITIS_LOOP_36_3_fu_51_h_we0;
        else 
            h_we0 <= ap_const_logic_0;
        end if; 
    end process;


    y_address0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_y_address0, grp_levmarq_fu_64_y_address0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            y_address0 <= grp_levmarq_fu_64_y_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            y_address0 <= grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_y_address0;
        else 
            y_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    y_ce0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_y_ce0, grp_levmarq_fu_64_y_ce0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            y_ce0 <= grp_levmarq_fu_64_y_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            y_ce0 <= grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_y_ce0;
        else 
            y_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    y_we0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_y_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            y_we0 <= grp_main_Pipeline_VITIS_LOOP_26_1_fu_42_y_we0;
        else 
            y_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
