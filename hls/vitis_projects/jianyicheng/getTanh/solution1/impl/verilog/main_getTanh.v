// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module main_getTanh (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_address0,
        A_ce0,
        A_we0,
        A_d0,
        A_q0,
        addr_in_address0,
        addr_in_ce0,
        addr_in_q0,
        addr_out_address0,
        addr_out_ce0,
        addr_out_q0,
        sinh_address0,
        sinh_ce0,
        sinh_q0,
        cosh_address0,
        cosh_ce0,
        cosh_q0,
        grp_fu_114_p_din0,
        grp_fu_114_p_din1,
        grp_fu_114_p_dout0,
        grp_fu_114_p_ce,
        grp_fu_118_p_din0,
        grp_fu_118_p_din1,
        grp_fu_118_p_dout0,
        grp_fu_118_p_ce,
        grp_fu_122_p_din0,
        grp_fu_122_p_din1,
        grp_fu_122_p_dout0,
        grp_fu_122_p_ce,
        grp_fu_126_p_din0,
        grp_fu_126_p_din1,
        grp_fu_126_p_dout0,
        grp_fu_126_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 67'd1;
parameter    ap_ST_fsm_pp0_stage1 = 67'd2;
parameter    ap_ST_fsm_pp0_stage2 = 67'd4;
parameter    ap_ST_fsm_pp0_stage3 = 67'd8;
parameter    ap_ST_fsm_pp0_stage4 = 67'd16;
parameter    ap_ST_fsm_pp0_stage5 = 67'd32;
parameter    ap_ST_fsm_pp0_stage6 = 67'd64;
parameter    ap_ST_fsm_pp0_stage7 = 67'd128;
parameter    ap_ST_fsm_pp0_stage8 = 67'd256;
parameter    ap_ST_fsm_pp0_stage9 = 67'd512;
parameter    ap_ST_fsm_pp0_stage10 = 67'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 67'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 67'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 67'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 67'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 67'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 67'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 67'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 67'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 67'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 67'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 67'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 67'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 67'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 67'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 67'd33554432;
parameter    ap_ST_fsm_pp0_stage26 = 67'd67108864;
parameter    ap_ST_fsm_pp0_stage27 = 67'd134217728;
parameter    ap_ST_fsm_pp0_stage28 = 67'd268435456;
parameter    ap_ST_fsm_pp0_stage29 = 67'd536870912;
parameter    ap_ST_fsm_pp0_stage30 = 67'd1073741824;
parameter    ap_ST_fsm_pp0_stage31 = 67'd2147483648;
parameter    ap_ST_fsm_pp0_stage32 = 67'd4294967296;
parameter    ap_ST_fsm_pp0_stage33 = 67'd8589934592;
parameter    ap_ST_fsm_pp0_stage34 = 67'd17179869184;
parameter    ap_ST_fsm_pp0_stage35 = 67'd34359738368;
parameter    ap_ST_fsm_pp0_stage36 = 67'd68719476736;
parameter    ap_ST_fsm_pp0_stage37 = 67'd137438953472;
parameter    ap_ST_fsm_pp0_stage38 = 67'd274877906944;
parameter    ap_ST_fsm_pp0_stage39 = 67'd549755813888;
parameter    ap_ST_fsm_pp0_stage40 = 67'd1099511627776;
parameter    ap_ST_fsm_pp0_stage41 = 67'd2199023255552;
parameter    ap_ST_fsm_pp0_stage42 = 67'd4398046511104;
parameter    ap_ST_fsm_pp0_stage43 = 67'd8796093022208;
parameter    ap_ST_fsm_pp0_stage44 = 67'd17592186044416;
parameter    ap_ST_fsm_pp0_stage45 = 67'd35184372088832;
parameter    ap_ST_fsm_pp0_stage46 = 67'd70368744177664;
parameter    ap_ST_fsm_pp0_stage47 = 67'd140737488355328;
parameter    ap_ST_fsm_pp0_stage48 = 67'd281474976710656;
parameter    ap_ST_fsm_pp0_stage49 = 67'd562949953421312;
parameter    ap_ST_fsm_pp0_stage50 = 67'd1125899906842624;
parameter    ap_ST_fsm_pp0_stage51 = 67'd2251799813685248;
parameter    ap_ST_fsm_pp0_stage52 = 67'd4503599627370496;
parameter    ap_ST_fsm_pp0_stage53 = 67'd9007199254740992;
parameter    ap_ST_fsm_pp0_stage54 = 67'd18014398509481984;
parameter    ap_ST_fsm_pp0_stage55 = 67'd36028797018963968;
parameter    ap_ST_fsm_pp0_stage56 = 67'd72057594037927936;
parameter    ap_ST_fsm_pp0_stage57 = 67'd144115188075855872;
parameter    ap_ST_fsm_pp0_stage58 = 67'd288230376151711744;
parameter    ap_ST_fsm_pp0_stage59 = 67'd576460752303423488;
parameter    ap_ST_fsm_pp0_stage60 = 67'd1152921504606846976;
parameter    ap_ST_fsm_pp0_stage61 = 67'd2305843009213693952;
parameter    ap_ST_fsm_pp0_stage62 = 67'd4611686018427387904;
parameter    ap_ST_fsm_pp0_stage63 = 67'd9223372036854775808;
parameter    ap_ST_fsm_pp0_stage64 = 67'd18446744073709551616;
parameter    ap_ST_fsm_pp0_stage65 = 67'd36893488147419103232;
parameter    ap_ST_fsm_pp0_stage66 = 67'd73786976294838206464;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] A_address0;
output   A_ce0;
output   A_we0;
output  [31:0] A_d0;
input  [31:0] A_q0;
output  [9:0] addr_in_address0;
output   addr_in_ce0;
input  [9:0] addr_in_q0;
output  [9:0] addr_out_address0;
output   addr_out_ce0;
input  [9:0] addr_out_q0;
output  [2:0] sinh_address0;
output   sinh_ce0;
input  [16:0] sinh_q0;
output  [2:0] cosh_address0;
output   cosh_ce0;
input  [16:0] cosh_q0;
output  [16:0] grp_fu_114_p_din0;
output  [26:0] grp_fu_114_p_din1;
input  [31:0] grp_fu_114_p_dout0;
output   grp_fu_114_p_ce;
output  [16:0] grp_fu_118_p_din0;
output  [26:0] grp_fu_118_p_din1;
input  [31:0] grp_fu_118_p_dout0;
output   grp_fu_118_p_ce;
output  [16:0] grp_fu_122_p_din0;
output  [27:0] grp_fu_122_p_din1;
input  [31:0] grp_fu_122_p_dout0;
output   grp_fu_122_p_ce;
output  [16:0] grp_fu_126_p_din0;
output  [27:0] grp_fu_126_p_din1;
input  [31:0] grp_fu_126_p_dout0;
output   grp_fu_126_p_ce;

reg ap_idle;
reg[9:0] A_address0;
reg A_ce0;
reg A_we0;
reg addr_in_ce0;
reg addr_out_ce0;
reg sinh_ce0;
reg cosh_ce0;

(* fsm_encoding = "none" *) reg   [66:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_subdone;
reg   [0:0] icmp_ln27_reg_1699;
reg    ap_condition_exit_pp0_iter0_stage5;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage66;
wire    ap_block_pp0_stage66_subdone;
reg   [31:0] result_2_reg_259;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln27_fu_306_p2;
reg   [0:0] icmp_ln27_reg_1699_pp0_iter1_reg;
wire   [9:0] add_ln27_fu_312_p2;
reg   [9:0] add_ln27_reg_1703;
wire   [63:0] zext_ln27_fu_318_p1;
reg   [63:0] zext_ln27_reg_1708;
reg   [9:0] addr_in_load_reg_1718;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
wire   [63:0] zext_ln28_fu_323_p1;
reg   [63:0] zext_ln28_reg_1723;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] A_load_reg_1733;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_11001;
wire   [0:0] addr_cmp_fu_330_p2;
reg   [0:0] addr_cmp_reg_1738;
wire   [31:0] beta_fu_338_p3;
reg   [31:0] beta_reg_1743;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_11001;
wire   [0:0] icmp_ln31_fu_344_p2;
reg   [0:0] icmp_ln31_reg_1748;
wire   [0:0] icmp_ln22_fu_360_p2;
reg   [0:0] icmp_ln22_reg_1752;
wire   [0:0] index_trigo_fu_376_p2;
reg   [0:0] index_trigo_reg_1757;
wire   [31:0] sub_ln33_fu_404_p2;
reg   [31:0] sub_ln33_reg_1762;
wire    ap_block_pp0_stage5_11001;
reg   [0:0] tmp_40_reg_1767;
wire   [31:0] add_ln58_1_fu_430_p2;
reg   [31:0] add_ln58_1_reg_1786;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6_11001;
reg   [0:0] tmp_41_reg_1791;
reg   [16:0] sinh_load_reg_1798;
reg   [16:0] cosh_load_reg_1803;
wire   [31:0] add_ln58_fu_443_p2;
reg   [31:0] add_ln58_reg_1808;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7_11001;
wire   [31:0] add_ln58_3_fu_455_p2;
reg   [31:0] add_ln58_3_reg_1813;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8_11001;
reg   [0:0] tmp_42_reg_1818;
wire   [31:0] add_ln58_2_fu_468_p2;
reg   [31:0] add_ln58_2_reg_1825;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9_11001;
wire   [31:0] add_ln58_5_fu_480_p2;
reg   [31:0] add_ln58_5_reg_1830;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10_11001;
reg   [0:0] tmp_43_reg_1836;
wire   [31:0] add_ln43_fu_493_p2;
reg   [31:0] add_ln43_reg_1843;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11_11001;
wire   [31:0] add_ln43_1_fu_505_p2;
reg   [31:0] add_ln43_1_reg_1848;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12_11001;
reg   [0:0] tmp_44_reg_1853;
wire   [31:0] add_ln46_fu_518_p2;
reg   [31:0] add_ln46_reg_1860;
wire   [31:0] select_ln43_3_fu_528_p3;
reg   [31:0] select_ln43_3_reg_1865;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13_11001;
reg   [0:0] tmp_46_reg_1870;
wire   [31:0] add_ln58_4_fu_542_p2;
reg   [31:0] add_ln58_4_reg_1877;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14_11001;
wire   [31:0] add_ln58_7_fu_554_p2;
reg   [31:0] add_ln58_7_reg_1882;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15_11001;
reg   [0:0] tmp_49_reg_1887;
wire   [31:0] add_ln58_6_fu_567_p2;
reg   [31:0] add_ln58_6_reg_1894;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16_11001;
wire   [13:0] y_46_fu_670_p3;
reg   [13:0] y_46_reg_1899;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17_11001;
wire   [12:0] x_new_95_fu_677_p3;
reg   [12:0] x_new_95_reg_1905;
reg   [9:0] trunc_ln7_reg_1911;
reg   [8:0] trunc_ln8_cast_reg_1916;
wire   [31:0] add_ln58_9_fu_711_p2;
reg   [31:0] add_ln58_9_reg_1921;
reg   [0:0] tmp_52_reg_1927;
wire   [12:0] x_new_96_fu_750_p3;
reg   [12:0] x_new_96_reg_1934;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18_11001;
wire   [13:0] y_49_fu_757_p3;
reg   [13:0] y_49_reg_1939;
reg   [9:0] tmp_45_reg_1945;
reg   [8:0] trunc_ln45_1_cast_reg_1950;
wire   [31:0] select_ln43_6_fu_784_p3;
reg   [31:0] select_ln43_6_reg_1955;
wire   [31:0] add_ln43_2_fu_791_p2;
reg   [31:0] add_ln43_2_reg_1961;
wire  signed [25:0] x_new_97_fu_827_p3;
reg  signed [25:0] x_new_97_reg_1966;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19_11001;
wire  signed [13:0] y_52_fu_834_p3;
reg  signed [13:0] y_52_reg_1971;
reg   [8:0] tmp_47_reg_1976;
reg   [20:0] tmp_48_reg_1981;
wire   [31:0] add_ln43_3_fu_861_p2;
reg   [31:0] add_ln43_3_reg_1986;
reg   [0:0] tmp_55_reg_1991;
wire   [31:0] add_ln46_1_fu_873_p2;
reg   [31:0] add_ln46_1_reg_1998;
wire   [26:0] y_55_fu_913_p3;
reg   [26:0] y_55_reg_2003;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20_11001;
wire   [26:0] x_new_98_fu_920_p3;
reg   [26:0] x_new_98_reg_2009;
reg   [20:0] tmp_50_reg_2015;
reg   [20:0] tmp_51_reg_2020;
wire   [31:0] select_ln43_9_fu_952_p3;
reg   [31:0] select_ln43_9_reg_2025;
reg   [0:0] tmp_58_reg_2030;
wire   [26:0] y_58_fu_992_p3;
reg   [26:0] y_58_reg_2037;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21_11001;
wire   [26:0] x_new_99_fu_999_p3;
reg   [26:0] x_new_99_reg_2043;
reg   [19:0] tmp_53_reg_2049;
reg   [19:0] tmp_54_reg_2054;
wire   [31:0] add_ln58_8_fu_1026_p2;
reg   [31:0] add_ln58_8_reg_2059;
wire   [26:0] x_new_100_fu_1057_p3;
reg   [26:0] x_new_100_reg_2064;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22_11001;
wire  signed [26:0] y_61_fu_1064_p3;
reg  signed [26:0] y_61_reg_2070;
reg   [19:0] tmp_56_reg_2075;
reg   [19:0] tmp_57_reg_2080;
wire   [31:0] add_ln58_11_fu_1098_p2;
reg   [31:0] add_ln58_11_reg_2085;
reg   [0:0] tmp_61_reg_2090;
wire   [26:0] x_new_101_fu_1142_p3;
reg   [26:0] x_new_101_reg_2097;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23_11001;
wire   [27:0] y_64_fu_1149_p3;
reg   [27:0] y_64_reg_2103;
reg   [19:0] tmp_59_reg_2109;
reg   [18:0] tmp_60_reg_2114;
wire   [31:0] add_ln58_10_fu_1176_p2;
reg   [31:0] add_ln58_10_reg_2119;
wire   [27:0] y_67_fu_1207_p3;
reg   [27:0] y_67_reg_2124;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_pp0_stage24_11001;
wire   [26:0] x_new_102_fu_1214_p3;
reg   [26:0] x_new_102_reg_2130;
reg   [18:0] tmp_62_reg_2136;
reg   [17:0] tmp_63_reg_2141;
wire   [31:0] add_ln58_13_fu_1248_p2;
reg   [31:0] add_ln58_13_reg_2146;
reg   [0:0] tmp_64_reg_2152;
wire   [27:0] y_70_fu_1287_p3;
reg   [27:0] y_70_reg_2159;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_pp0_stage25_11001;
wire   [26:0] x_new_103_fu_1294_p3;
reg   [26:0] x_new_103_reg_2165;
reg   [17:0] tmp_65_reg_2171;
reg   [16:0] tmp_66_reg_2176;
wire   [31:0] select_ln43_12_fu_1321_p3;
reg   [31:0] select_ln43_12_reg_2181;
wire   [31:0] add_ln43_4_fu_1328_p2;
reg   [31:0] add_ln43_4_reg_2187;
wire   [26:0] x_new_104_fu_1359_p3;
reg   [26:0] x_new_104_reg_2192;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_pp0_stage26_11001;
wire   [27:0] y_73_fu_1366_p3;
reg   [27:0] y_73_reg_2198;
wire   [31:0] add_ln43_5_fu_1373_p2;
reg   [31:0] add_ln43_5_reg_2204;
reg   [0:0] tmp_67_reg_2209;
reg   [17:0] tmp_68_reg_2216;
reg   [16:0] tmp_69_reg_2221;
wire   [31:0] add_ln46_2_fu_1405_p2;
reg   [31:0] add_ln46_2_reg_2226;
wire   [26:0] x_new_105_fu_1440_p3;
reg   [26:0] x_new_105_reg_2231;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_pp0_stage27_11001;
wire   [27:0] y_76_fu_1447_p3;
reg   [27:0] y_76_reg_2237;
wire   [31:0] select_ln43_15_fu_1454_p3;
reg   [31:0] select_ln43_15_reg_2243;
reg   [0:0] tmp_70_reg_2248;
reg   [16:0] tmp_71_reg_2255;
reg   [15:0] tmp_72_reg_2260;
wire   [27:0] y_79_fu_1514_p3;
reg   [27:0] y_79_reg_2265;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_pp0_stage28_11001;
wire   [26:0] x_new_106_fu_1521_p3;
reg   [26:0] x_new_106_reg_2271;
wire   [31:0] add_ln58_12_fu_1528_p2;
reg   [31:0] add_ln58_12_reg_2277;
reg   [15:0] tmp_74_reg_2282;
reg   [14:0] tmp_75_reg_2287;
wire   [27:0] y_82_fu_1599_p3;
reg   [27:0] y_82_reg_2292;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_pp0_stage29_11001;
wire   [26:0] x_26_fu_1607_p3;
reg   [26:0] x_26_reg_2297;
wire  signed [31:0] sext_ln58_fu_1615_p1;
wire    ap_block_pp0_stage30_11001;
wire  signed [31:0] sext_ln14_fu_1620_p1;
wire   [31:0] zext_ln76_1_fu_1625_p1;
wire   [31:0] zext_ln76_2_fu_1630_p1;
reg   [31:0] mul_ln76_reg_2326;
wire    ap_CS_fsm_pp0_stage33;
wire    ap_block_pp0_stage33_11001;
reg   [31:0] mul_ln76_1_reg_2331;
reg   [31:0] mul_ln77_reg_2336;
reg   [31:0] mul_ln77_1_reg_2341;
wire   [31:0] result_cosh_fu_1635_p2;
reg   [31:0] result_cosh_reg_2346;
wire    ap_CS_fsm_pp0_stage34;
wire    ap_block_pp0_stage34_11001;
reg  signed [19:0] result_sinh_reg_2351;
wire    ap_CS_fsm_pp0_stage35;
wire    ap_block_pp0_stage35_11001;
reg   [9:0] addr_out_load_reg_2366;
wire   [63:0] zext_ln41_fu_1665_p1;
reg   [63:0] zext_ln41_reg_2371;
wire   [31:0] grp_fu_1656_p2;
reg   [31:0] result_reg_2376;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [31:0] ap_phi_mux_result_2_phi_fu_264_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_result_2_reg_259;
wire    ap_block_pp0_stage66_11001;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln76_fu_417_p1;
wire    ap_block_pp0_stage5;
reg   [63:0] reuse_addr_reg_fu_174;
wire    ap_loop_init;
wire    ap_block_pp0_stage3;
reg   [31:0] reuse_reg_fu_178;
reg   [31:0] ap_sig_allocacmp_reuse_reg_load;
wire    ap_block_pp0_stage4;
reg   [9:0] i_fu_182;
reg   [9:0] ap_sig_allocacmp_i_4;
wire    ap_block_pp0_stage30;
wire   [18:0] tmp_fu_350_p4;
wire   [19:0] tmp_39_fu_366_p4;
wire   [2:0] zext_ln18_fu_382_p1;
wire   [2:0] index_trigo_2_fu_385_p3;
wire   [14:0] shl_ln_fu_392_p3;
wire   [31:0] zext_ln33_fu_400_p1;
wire    ap_block_pp0_stage6;
wire   [31:0] select_ln58_fu_423_p3;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage8;
wire   [31:0] select_ln58_3_fu_448_p3;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
wire   [31:0] select_ln58_6_fu_473_p3;
wire    ap_block_pp0_stage11;
wire    ap_block_pp0_stage12;
wire   [31:0] select_ln43_fu_498_p3;
wire    ap_block_pp0_stage13;
wire   [31:0] add_ln52_fu_523_p2;
wire    ap_block_pp0_stage14;
wire    ap_block_pp0_stage15;
wire   [31:0] select_ln58_9_fu_547_p3;
wire    ap_block_pp0_stage16;
wire    ap_block_pp0_stage17;
wire   [12:0] y_fu_579_p3;
wire   [12:0] y_42_fu_593_p3;
wire  signed [12:0] y_43_fu_600_p3;
wire   [12:0] x_new_fu_572_p3;
wire   [12:0] x_new_54_fu_586_p3;
wire   [9:0] trunc_ln6_fu_618_p4;
wire   [12:0] x_new_94_fu_611_p3;
wire   [9:0] lshr_ln_fu_632_p4;
wire  signed [12:0] sext_ln60_fu_628_p1;
wire  signed [13:0] sext_ln15_fu_607_p1;
wire   [13:0] zext_ln59_fu_642_p1;
wire   [13:0] y_44_fu_652_p2;
wire   [13:0] y_45_fu_664_p2;
wire   [12:0] x_new_56_fu_646_p2;
wire   [12:0] x_new_57_fu_658_p2;
wire   [31:0] select_ln58_12_fu_704_p3;
wire    ap_block_pp0_stage18;
wire  signed [12:0] sext_ln45_fu_724_p1;
wire   [13:0] zext_ln44_fu_727_p1;
wire   [12:0] x_new_59_fu_730_p2;
wire   [12:0] x_new_60_fu_740_p2;
wire   [13:0] y_47_fu_735_p2;
wire   [13:0] y_48_fu_745_p2;
wire    ap_block_pp0_stage19;
wire   [25:0] zext_ln16_fu_796_p1;
wire  signed [25:0] sext_ln45_1_fu_799_p1;
wire   [13:0] zext_ln44_1_fu_802_p1;
wire   [25:0] x_new_62_fu_805_p2;
wire   [25:0] x_new_63_fu_816_p2;
wire   [13:0] y_50_fu_811_p2;
wire   [13:0] y_51_fu_822_p2;
wire    ap_block_pp0_stage20;
wire  signed [26:0] sext_ln16_fu_877_p1;
wire  signed [26:0] sext_ln60_1_fu_883_p1;
wire  signed [26:0] sext_ln15_1_fu_880_p1;
wire  signed [26:0] sext_ln59_fu_886_p1;
wire   [26:0] y_53_fu_895_p2;
wire   [26:0] y_54_fu_907_p2;
wire   [26:0] x_new_65_fu_889_p2;
wire   [26:0] x_new_66_fu_901_p2;
wire   [31:0] add_ln52_1_fu_947_p2;
wire    ap_block_pp0_stage21;
wire  signed [26:0] sext_ln60_2_fu_966_p1;
wire  signed [26:0] sext_ln59_1_fu_969_p1;
wire   [26:0] y_56_fu_977_p2;
wire   [26:0] y_57_fu_987_p2;
wire   [26:0] x_new_68_fu_972_p2;
wire   [26:0] x_new_69_fu_982_p2;
wire    ap_block_pp0_stage22;
wire  signed [26:0] sext_ln45_2_fu_1031_p1;
wire  signed [26:0] sext_ln44_fu_1034_p1;
wire   [26:0] x_new_71_fu_1037_p2;
wire   [26:0] x_new_72_fu_1047_p2;
wire   [26:0] y_59_fu_1042_p2;
wire   [26:0] y_60_fu_1052_p2;
wire   [31:0] select_ln58_15_fu_1091_p3;
wire    ap_block_pp0_stage23;
wire  signed [26:0] sext_ln45_3_fu_1114_p1;
wire  signed [27:0] sext_ln15_2_fu_1111_p1;
wire  signed [27:0] sext_ln44_1_fu_1117_p1;
wire   [26:0] x_new_74_fu_1120_p2;
wire   [26:0] x_new_75_fu_1131_p2;
wire   [27:0] y_62_fu_1125_p2;
wire   [27:0] y_63_fu_1136_p2;
wire    ap_block_pp0_stage24;
wire  signed [26:0] sext_ln60_3_fu_1181_p1;
wire  signed [27:0] sext_ln59_2_fu_1184_p1;
wire   [27:0] y_65_fu_1192_p2;
wire   [27:0] y_66_fu_1202_p2;
wire   [26:0] x_new_77_fu_1187_p2;
wire   [26:0] x_new_78_fu_1197_p2;
wire   [31:0] select_ln58_18_fu_1241_p3;
wire    ap_block_pp0_stage25;
wire  signed [26:0] sext_ln60_4_fu_1261_p1;
wire  signed [27:0] sext_ln59_3_fu_1264_p1;
wire   [27:0] y_68_fu_1272_p2;
wire   [27:0] y_69_fu_1282_p2;
wire   [26:0] x_new_80_fu_1267_p2;
wire   [26:0] x_new_81_fu_1277_p2;
wire    ap_block_pp0_stage26;
wire  signed [26:0] sext_ln45_4_fu_1333_p1;
wire  signed [27:0] sext_ln44_2_fu_1336_p1;
wire   [26:0] x_new_83_fu_1339_p2;
wire   [26:0] x_new_84_fu_1349_p2;
wire   [27:0] y_71_fu_1344_p2;
wire   [27:0] y_72_fu_1354_p2;
wire    ap_block_pp0_stage27;
wire  signed [26:0] sext_ln45_5_fu_1409_p1;
wire  signed [27:0] sext_ln44_3_fu_1412_p1;
wire   [26:0] x_new_86_fu_1415_p2;
wire   [26:0] x_new_87_fu_1425_p2;
wire   [27:0] y_74_fu_1420_p2;
wire   [27:0] y_75_fu_1430_p2;
wire   [31:0] add_ln52_2_fu_1435_p2;
wire    ap_block_pp0_stage28;
wire  signed [26:0] sext_ln60_5_fu_1488_p1;
wire  signed [27:0] sext_ln59_4_fu_1491_p1;
wire   [27:0] y_77_fu_1499_p2;
wire   [27:0] y_78_fu_1509_p2;
wire   [26:0] x_new_89_fu_1494_p2;
wire   [26:0] x_new_90_fu_1504_p2;
wire    ap_block_pp0_stage29;
wire   [31:0] select_ln58_21_fu_1553_p3;
wire   [31:0] add_ln58_14_fu_1560_p2;
wire  signed [26:0] sext_ln60_6_fu_1573_p1;
wire  signed [27:0] sext_ln59_5_fu_1576_p1;
wire   [0:0] tmp_73_fu_1565_p3;
wire   [27:0] y_80_fu_1584_p2;
wire   [27:0] y_81_fu_1594_p2;
wire   [26:0] x_new_92_fu_1579_p2;
wire   [26:0] x_new_93_fu_1589_p2;
wire    ap_block_pp0_stage34;
wire   [31:0] add_ln77_fu_1639_p2;
wire    ap_block_pp0_stage35;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [66:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_pp0_stage23_subdone;
wire    ap_block_pp0_stage24_subdone;
wire    ap_block_pp0_stage25_subdone;
wire    ap_block_pp0_stage26_subdone;
wire    ap_block_pp0_stage27_subdone;
wire    ap_block_pp0_stage28_subdone;
wire    ap_block_pp0_stage29_subdone;
wire    ap_block_pp0_stage30_subdone;
wire    ap_block_pp0_stage31_subdone;
wire    ap_block_pp0_stage32_subdone;
wire    ap_block_pp0_stage33_subdone;
wire    ap_block_pp0_stage34_subdone;
wire    ap_block_pp0_stage35_subdone;
wire    ap_block_pp0_stage36_subdone;
wire    ap_block_pp0_stage37_subdone;
wire    ap_block_pp0_stage38_subdone;
wire    ap_block_pp0_stage39_subdone;
wire    ap_block_pp0_stage40_subdone;
wire    ap_block_pp0_stage41_subdone;
wire    ap_block_pp0_stage42_subdone;
wire    ap_block_pp0_stage43_subdone;
wire    ap_block_pp0_stage44_subdone;
wire    ap_block_pp0_stage45_subdone;
wire    ap_block_pp0_stage46_subdone;
wire    ap_block_pp0_stage47_subdone;
wire    ap_block_pp0_stage48_subdone;
wire    ap_block_pp0_stage49_subdone;
wire    ap_block_pp0_stage50_subdone;
wire    ap_block_pp0_stage51_subdone;
wire    ap_block_pp0_stage52_subdone;
wire    ap_block_pp0_stage53_subdone;
wire    ap_block_pp0_stage54_subdone;
wire    ap_block_pp0_stage55_subdone;
wire    ap_block_pp0_stage56_subdone;
wire    ap_block_pp0_stage57_subdone;
wire    ap_block_pp0_stage58_subdone;
wire    ap_block_pp0_stage59_subdone;
wire    ap_block_pp0_stage60_subdone;
wire    ap_block_pp0_stage61_subdone;
wire    ap_block_pp0_stage62_subdone;
wire    ap_block_pp0_stage63_subdone;
wire    ap_block_pp0_stage64_subdone;
wire    ap_block_pp0_stage65_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_717;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 67'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 reuse_addr_reg_fu_174 = 64'd0;
#0 reuse_reg_fu_178 = 32'd0;
#0 i_fu_182 = 10'd0;
#0 ap_done_reg = 1'b0;
end

main_sdiv_32ns_20s_32_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 32 ))
sdiv_32ns_20s_32_36_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(result_cosh_reg_2346),
    .din1(result_sinh_reg_2351),
    .ce(1'b1),
    .dout(grp_fu_1656_p2)
);

main_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage5),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage5)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage66) & (1'b0 == ap_block_pp0_stage66_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_fu_182 <= 10'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage66) & (icmp_ln27_reg_1699 == 1'd0) & (1'b0 == ap_block_pp0_stage66_11001))) begin
        i_fu_182 <= add_ln27_reg_1703;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_717)) begin
        if (((icmp_ln31_reg_1748 == 1'd0) & (icmp_ln27_reg_1699_pp0_iter1_reg == 1'd0))) begin
            result_2_reg_259 <= result_reg_2376;
        end else if ((1'b1 == 1'b1)) begin
            result_2_reg_259 <= ap_phi_reg_pp0_iter1_result_2_reg_259;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        reuse_addr_reg_fu_174 <= 64'd18446744073709551615;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        reuse_addr_reg_fu_174 <= zext_ln41_fu_1665_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        reuse_reg_fu_178 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        reuse_reg_fu_178 <= ap_phi_mux_result_2_phi_fu_264_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        A_load_reg_1733 <= A_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln27_reg_1703 <= add_ln27_fu_312_p2;
        icmp_ln27_reg_1699 <= icmp_ln27_fu_306_p2;
        icmp_ln27_reg_1699_pp0_iter1_reg <= icmp_ln27_reg_1699;
        zext_ln27_reg_1708[9 : 0] <= zext_ln27_fu_318_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        add_ln43_1_reg_1848 <= add_ln43_1_fu_505_p2;
        add_ln46_reg_1860 <= add_ln46_fu_518_p2;
        tmp_44_reg_1853 <= add_ln43_1_fu_505_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001))) begin
        add_ln43_2_reg_1961 <= add_ln43_2_fu_791_p2;
        select_ln43_6_reg_1955[2] <= select_ln43_6_fu_784_p3[2];
select_ln43_6_reg_1955[6 : 5] <= select_ln43_6_fu_784_p3[6 : 5];
        tmp_45_reg_1945 <= {{y_49_fu_757_p3[13:4]}};
        trunc_ln45_1_cast_reg_1950 <= {{x_new_96_fu_750_p3[12:4]}};
        x_new_96_reg_1934 <= x_new_96_fu_750_p3;
        y_49_reg_1939 <= y_49_fu_757_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001))) begin
        add_ln43_3_reg_1986 <= add_ln43_3_fu_861_p2;
        add_ln46_1_reg_1998 <= add_ln46_1_fu_873_p2;
        tmp_47_reg_1976 <= {{y_52_fu_834_p3[13:5]}};
        tmp_48_reg_1981 <= {{x_new_97_fu_827_p3[25:5]}};
        tmp_55_reg_1991 <= add_ln43_3_fu_861_p2[32'd31];
        x_new_97_reg_1966 <= x_new_97_fu_827_p3;
        y_52_reg_1971 <= y_52_fu_834_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001))) begin
        add_ln43_4_reg_2187 <= add_ln43_4_fu_1328_p2;
        select_ln43_12_reg_2181[3] <= select_ln43_12_fu_1321_p3[3];
        tmp_65_reg_2171 <= {{y_70_fu_1287_p3[27:10]}};
        tmp_66_reg_2176 <= {{x_new_103_fu_1294_p3[26:10]}};
        x_new_103_reg_2165 <= x_new_103_fu_1294_p3;
        y_70_reg_2159 <= y_70_fu_1287_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001))) begin
        add_ln43_5_reg_2204 <= add_ln43_5_fu_1373_p2;
        add_ln46_2_reg_2226 <= add_ln46_2_fu_1405_p2;
        tmp_67_reg_2209 <= add_ln43_5_fu_1373_p2[32'd31];
        tmp_68_reg_2216 <= {{y_73_fu_1366_p3[27:10]}};
        tmp_69_reg_2221 <= {{x_new_104_fu_1359_p3[26:10]}};
        x_new_104_reg_2192 <= x_new_104_fu_1359_p3;
        y_73_reg_2198 <= y_73_fu_1366_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        add_ln43_reg_1843 <= add_ln43_fu_493_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        add_ln58_10_reg_2119 <= add_ln58_10_fu_1176_p2;
        tmp_59_reg_2109 <= {{y_64_fu_1149_p3[27:8]}};
        tmp_60_reg_2114 <= {{x_new_101_fu_1142_p3[26:8]}};
        x_new_101_reg_2097 <= x_new_101_fu_1142_p3;
        y_64_reg_2103 <= y_64_fu_1149_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001))) begin
        add_ln58_11_reg_2085 <= add_ln58_11_fu_1098_p2;
        tmp_56_reg_2075 <= {{y_61_fu_1064_p3[26:7]}};
        tmp_57_reg_2080 <= {{x_new_100_fu_1057_p3[26:7]}};
        tmp_61_reg_2090 <= add_ln58_11_fu_1098_p2[32'd31];
        x_new_100_reg_2064 <= x_new_100_fu_1057_p3;
        y_61_reg_2070 <= y_61_fu_1064_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001))) begin
        add_ln58_12_reg_2277 <= add_ln58_12_fu_1528_p2;
        tmp_74_reg_2282 <= {{y_79_fu_1514_p3[27:12]}};
        tmp_75_reg_2287 <= {{x_new_106_fu_1521_p3[26:12]}};
        x_new_106_reg_2271 <= x_new_106_fu_1521_p3;
        y_79_reg_2265 <= y_79_fu_1514_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001))) begin
        add_ln58_13_reg_2146 <= add_ln58_13_fu_1248_p2;
        tmp_62_reg_2136 <= {{y_67_fu_1207_p3[27:9]}};
        tmp_63_reg_2141 <= {{x_new_102_fu_1214_p3[26:9]}};
        tmp_64_reg_2152 <= add_ln58_13_fu_1248_p2[32'd31];
        x_new_102_reg_2130 <= x_new_102_fu_1214_p3;
        y_67_reg_2124 <= y_67_fu_1207_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        add_ln58_1_reg_1786 <= add_ln58_1_fu_430_p2;
        cosh_load_reg_1803 <= cosh_q0;
        sinh_load_reg_1798 <= sinh_q0;
        tmp_41_reg_1791 <= add_ln58_1_fu_430_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        add_ln58_2_reg_1825 <= add_ln58_2_fu_468_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        add_ln58_3_reg_1813 <= add_ln58_3_fu_455_p2;
        tmp_42_reg_1818 <= add_ln58_3_fu_455_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001))) begin
        add_ln58_4_reg_1877 <= add_ln58_4_fu_542_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        add_ln58_5_reg_1830 <= add_ln58_5_fu_480_p2;
        tmp_43_reg_1836 <= add_ln58_5_fu_480_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001))) begin
        add_ln58_6_reg_1894 <= add_ln58_6_fu_567_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001))) begin
        add_ln58_7_reg_1882 <= add_ln58_7_fu_554_p2;
        tmp_49_reg_1887 <= add_ln58_7_fu_554_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001))) begin
        add_ln58_8_reg_2059 <= add_ln58_8_fu_1026_p2;
        tmp_53_reg_2049 <= {{y_58_fu_992_p3[26:7]}};
        tmp_54_reg_2054 <= {{x_new_99_fu_999_p3[26:7]}};
        x_new_99_reg_2043 <= x_new_99_fu_999_p3;
        y_58_reg_2037 <= y_58_fu_992_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001))) begin
        add_ln58_9_reg_1921 <= add_ln58_9_fu_711_p2;
        tmp_52_reg_1927 <= add_ln58_9_fu_711_p2[32'd31];
        trunc_ln7_reg_1911 <= {{y_46_fu_670_p3[13:4]}};
        trunc_ln8_cast_reg_1916 <= {{x_new_95_fu_677_p3[12:4]}};
        x_new_95_reg_1905 <= x_new_95_fu_677_p3;
        y_46_reg_1899 <= y_46_fu_670_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        add_ln58_reg_1808 <= add_ln58_fu_443_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        addr_cmp_reg_1738 <= addr_cmp_fu_330_p2;
        result_reg_2376 <= grp_fu_1656_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        addr_in_load_reg_1718 <= addr_in_q0;
        addr_out_load_reg_2366 <= addr_out_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        beta_reg_1743 <= beta_fu_338_p3;
        icmp_ln22_reg_1752 <= icmp_ln22_fu_360_p2;
        icmp_ln31_reg_1748 <= icmp_ln31_fu_344_p2;
        index_trigo_reg_1757 <= index_trigo_fu_376_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage33) & (1'b0 == ap_block_pp0_stage33_11001))) begin
        mul_ln76_1_reg_2331 <= grp_fu_114_p_dout0;
        mul_ln76_reg_2326 <= grp_fu_122_p_dout0;
        mul_ln77_1_reg_2341 <= grp_fu_118_p_dout0;
        mul_ln77_reg_2336 <= grp_fu_126_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage34) & (1'b0 == ap_block_pp0_stage34_11001))) begin
        result_cosh_reg_2346 <= result_cosh_fu_1635_p2;
        result_sinh_reg_2351 <= {{add_ln77_fu_1639_p2[31:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001))) begin
        select_ln43_15_reg_2243 <= select_ln43_15_fu_1454_p3;
        tmp_70_reg_2248 <= select_ln43_15_fu_1454_p3[32'd31];
        tmp_71_reg_2255 <= {{y_76_fu_1447_p3[27:11]}};
        tmp_72_reg_2260 <= {{x_new_105_fu_1440_p3[26:11]}};
        x_new_105_reg_2231 <= x_new_105_fu_1440_p3;
        y_76_reg_2237 <= y_76_fu_1447_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001))) begin
        select_ln43_3_reg_1865 <= select_ln43_3_fu_528_p3;
        tmp_46_reg_1870 <= select_ln43_3_fu_528_p3[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001))) begin
        select_ln43_9_reg_2025 <= select_ln43_9_fu_952_p3;
        tmp_50_reg_2015 <= {{y_55_fu_913_p3[26:6]}};
        tmp_51_reg_2020 <= {{x_new_98_fu_920_p3[26:6]}};
        tmp_58_reg_2030 <= select_ln43_9_fu_952_p3[32'd31];
        x_new_98_reg_2009 <= x_new_98_fu_920_p3;
        y_55_reg_2003 <= y_55_fu_913_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        sub_ln33_reg_1762 <= sub_ln33_fu_404_p2;
        tmp_40_reg_1767 <= sub_ln33_fu_404_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001))) begin
        x_26_reg_2297 <= x_26_fu_1607_p3;
        y_82_reg_2292 <= y_82_fu_1599_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        zext_ln28_reg_1723[9 : 0] <= zext_ln28_fu_323_p1[9 : 0];
        zext_ln41_reg_2371[9 : 0] <= zext_ln41_fu_1665_p1[9 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        A_address0 = zext_ln41_reg_2371;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        A_address0 = zext_ln28_fu_323_p1;
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        A_we0 = 1'b1;
    end else begin
        A_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        addr_in_ce0 = 1'b1;
    end else begin
        addr_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        addr_out_ce0 = 1'b1;
    end else begin
        addr_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln27_reg_1699 == 1'd1) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
        ap_condition_exit_pp0_iter0_stage5 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_1748 == 1'd0) & (icmp_ln27_reg_1699_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_result_2_phi_fu_264_p4 = result_reg_2376;
    end else begin
        ap_phi_mux_result_2_phi_fu_264_p4 = 32'd4096;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage66) & (1'b0 == ap_block_pp0_stage66_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_4 = 10'd0;
    end else begin
        ap_sig_allocacmp_i_4 = i_fu_182;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        ap_sig_allocacmp_reuse_reg_load = ap_phi_mux_result_2_phi_fu_264_p4;
    end else begin
        ap_sig_allocacmp_reuse_reg_load = reuse_reg_fu_178;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        cosh_ce0 = 1'b1;
    end else begin
        cosh_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        sinh_ce0 = 1'b1;
    end else begin
        sinh_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage5)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_pp0_stage32 : begin
            if ((1'b0 == ap_block_pp0_stage32_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end
        end
        ap_ST_fsm_pp0_stage33 : begin
            if ((1'b0 == ap_block_pp0_stage33_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end
        end
        ap_ST_fsm_pp0_stage34 : begin
            if ((1'b0 == ap_block_pp0_stage34_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end
        end
        ap_ST_fsm_pp0_stage35 : begin
            if ((1'b0 == ap_block_pp0_stage35_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end
        end
        ap_ST_fsm_pp0_stage36 : begin
            if ((1'b0 == ap_block_pp0_stage36_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end
        end
        ap_ST_fsm_pp0_stage37 : begin
            if ((1'b0 == ap_block_pp0_stage37_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end
        end
        ap_ST_fsm_pp0_stage38 : begin
            if ((1'b0 == ap_block_pp0_stage38_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end
        end
        ap_ST_fsm_pp0_stage39 : begin
            if ((1'b0 == ap_block_pp0_stage39_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end
        end
        ap_ST_fsm_pp0_stage40 : begin
            if ((1'b0 == ap_block_pp0_stage40_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end
        end
        ap_ST_fsm_pp0_stage41 : begin
            if ((1'b0 == ap_block_pp0_stage41_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end
        end
        ap_ST_fsm_pp0_stage42 : begin
            if ((1'b0 == ap_block_pp0_stage42_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end
        end
        ap_ST_fsm_pp0_stage43 : begin
            if ((1'b0 == ap_block_pp0_stage43_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end
        end
        ap_ST_fsm_pp0_stage44 : begin
            if ((1'b0 == ap_block_pp0_stage44_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end
        end
        ap_ST_fsm_pp0_stage45 : begin
            if ((1'b0 == ap_block_pp0_stage45_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end
        end
        ap_ST_fsm_pp0_stage46 : begin
            if ((1'b0 == ap_block_pp0_stage46_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end
        end
        ap_ST_fsm_pp0_stage47 : begin
            if ((1'b0 == ap_block_pp0_stage47_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end
        end
        ap_ST_fsm_pp0_stage48 : begin
            if ((1'b0 == ap_block_pp0_stage48_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end
        end
        ap_ST_fsm_pp0_stage49 : begin
            if ((1'b0 == ap_block_pp0_stage49_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage49;
            end
        end
        ap_ST_fsm_pp0_stage50 : begin
            if ((1'b0 == ap_block_pp0_stage50_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage50;
            end
        end
        ap_ST_fsm_pp0_stage51 : begin
            if ((1'b0 == ap_block_pp0_stage51_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage51;
            end
        end
        ap_ST_fsm_pp0_stage52 : begin
            if ((1'b0 == ap_block_pp0_stage52_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage52;
            end
        end
        ap_ST_fsm_pp0_stage53 : begin
            if ((1'b0 == ap_block_pp0_stage53_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage53;
            end
        end
        ap_ST_fsm_pp0_stage54 : begin
            if ((1'b0 == ap_block_pp0_stage54_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage54;
            end
        end
        ap_ST_fsm_pp0_stage55 : begin
            if ((1'b0 == ap_block_pp0_stage55_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage55;
            end
        end
        ap_ST_fsm_pp0_stage56 : begin
            if ((1'b0 == ap_block_pp0_stage56_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage56;
            end
        end
        ap_ST_fsm_pp0_stage57 : begin
            if ((1'b0 == ap_block_pp0_stage57_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage57;
            end
        end
        ap_ST_fsm_pp0_stage58 : begin
            if ((1'b0 == ap_block_pp0_stage58_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage58;
            end
        end
        ap_ST_fsm_pp0_stage59 : begin
            if ((1'b0 == ap_block_pp0_stage59_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage59;
            end
        end
        ap_ST_fsm_pp0_stage60 : begin
            if ((1'b0 == ap_block_pp0_stage60_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage60;
            end
        end
        ap_ST_fsm_pp0_stage61 : begin
            if ((1'b0 == ap_block_pp0_stage61_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage61;
            end
        end
        ap_ST_fsm_pp0_stage62 : begin
            if ((1'b0 == ap_block_pp0_stage62_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage62;
            end
        end
        ap_ST_fsm_pp0_stage63 : begin
            if ((1'b0 == ap_block_pp0_stage63_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage63;
            end
        end
        ap_ST_fsm_pp0_stage64 : begin
            if ((1'b0 == ap_block_pp0_stage64_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage64;
            end
        end
        ap_ST_fsm_pp0_stage65 : begin
            if ((1'b0 == ap_block_pp0_stage65_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage65;
            end
        end
        ap_ST_fsm_pp0_stage66 : begin
            if ((1'b0 == ap_block_pp0_stage66_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage66;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_d0 = result_2_reg_259;

assign add_ln27_fu_312_p2 = (ap_sig_allocacmp_i_4 + 10'd1);

assign add_ln43_1_fu_505_p2 = (add_ln43_reg_1843 + select_ln43_fu_498_p3);

assign add_ln43_2_fu_791_p2 = ($signed(add_ln58_9_reg_1921) + $signed(32'd4294967246));

assign add_ln43_3_fu_861_p2 = (add_ln43_2_reg_1961 + select_ln43_6_reg_1955);

assign add_ln43_4_fu_1328_p2 = ($signed(add_ln58_13_reg_2146) + $signed(32'd4294967292));

assign add_ln43_5_fu_1373_p2 = (add_ln43_4_reg_2187 + select_ln43_12_reg_2181);

assign add_ln43_fu_493_p2 = ($signed(add_ln58_5_reg_1830) + $signed(32'd4294967040));

assign add_ln46_1_fu_873_p2 = (add_ln58_9_reg_1921 + select_ln43_6_reg_1955);

assign add_ln46_2_fu_1405_p2 = (add_ln58_13_reg_2146 + select_ln43_12_reg_2181);

assign add_ln46_fu_518_p2 = (add_ln58_5_reg_1830 + select_ln43_fu_498_p3);

assign add_ln52_1_fu_947_p2 = ($signed(add_ln43_3_reg_1986) + $signed(32'd4294967246));

assign add_ln52_2_fu_1435_p2 = ($signed(add_ln43_5_reg_2204) + $signed(32'd4294967292));

assign add_ln52_fu_523_p2 = ($signed(add_ln43_1_reg_1848) + $signed(32'd4294967040));

assign add_ln58_10_fu_1176_p2 = ($signed(add_ln58_11_reg_2085) + $signed(32'd4294967288));

assign add_ln58_11_fu_1098_p2 = (add_ln58_8_reg_2059 + select_ln58_15_fu_1091_p3);

assign add_ln58_12_fu_1528_p2 = ($signed(select_ln43_15_reg_2243) + $signed(32'd4294967294));

assign add_ln58_13_fu_1248_p2 = (add_ln58_10_reg_2119 + select_ln58_18_fu_1241_p3);

assign add_ln58_14_fu_1560_p2 = (add_ln58_12_reg_2277 + select_ln58_21_fu_1553_p3);

assign add_ln58_1_fu_430_p2 = (select_ln58_fu_423_p3 + sub_ln33_reg_1762);

assign add_ln58_2_fu_468_p2 = ($signed(add_ln58_3_reg_1813) + $signed(32'd4294966782));

assign add_ln58_3_fu_455_p2 = (add_ln58_reg_1808 + select_ln58_3_fu_448_p3);

assign add_ln58_4_fu_542_p2 = ($signed(select_ln43_3_reg_1865) + $signed(32'd4294967168));

assign add_ln58_5_fu_480_p2 = (add_ln58_2_reg_1825 + select_ln58_6_fu_473_p3);

assign add_ln58_6_fu_567_p2 = ($signed(add_ln58_7_reg_1882) + $signed(32'd4294967196));

assign add_ln58_7_fu_554_p2 = (add_ln58_4_reg_1877 + select_ln58_9_fu_547_p3);

assign add_ln58_8_fu_1026_p2 = ($signed(select_ln43_9_reg_2025) + $signed(32'd4294967280));

assign add_ln58_9_fu_711_p2 = (add_ln58_6_reg_1894 + select_ln58_12_fu_704_p3);

assign add_ln58_fu_443_p2 = ($signed(add_ln58_1_reg_1786) + $signed(32'd4294966250));

assign add_ln77_fu_1639_p2 = (mul_ln77_1_reg_2341 + mul_ln77_reg_2336);

assign addr_cmp_fu_330_p2 = ((reuse_addr_reg_fu_174 == zext_ln28_reg_1723) ? 1'b1 : 1'b0);

assign addr_in_address0 = zext_ln27_fu_318_p1;

assign addr_out_address0 = zext_ln27_reg_1708;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage33 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_pp0_stage34 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp0_stage35 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage66 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage40_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage41_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage43_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage44_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage45_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage46_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage47_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage48_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage49_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage50_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage51_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage52_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage53_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage54_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage55_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage56_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage57_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage58_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage59_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage60_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage61_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage62_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage63_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage64_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage65_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage66_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage66_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_717 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage5;

assign ap_phi_reg_pp0_iter1_result_2_reg_259 = 32'd4096;

assign beta_fu_338_p3 = ((addr_cmp_reg_1738[0:0] == 1'b1) ? ap_sig_allocacmp_reuse_reg_load : A_load_reg_1733);

assign cosh_address0 = zext_ln76_fu_417_p1;

assign grp_fu_114_p_ce = 1'b1;

assign grp_fu_114_p_din0 = zext_ln76_1_fu_1625_p1;

assign grp_fu_114_p_din1 = sext_ln14_fu_1620_p1;

assign grp_fu_118_p_ce = 1'b1;

assign grp_fu_118_p_din0 = zext_ln76_2_fu_1630_p1;

assign grp_fu_118_p_din1 = sext_ln14_fu_1620_p1;

assign grp_fu_122_p_ce = 1'b1;

assign grp_fu_122_p_din0 = zext_ln76_2_fu_1630_p1;

assign grp_fu_122_p_din1 = sext_ln58_fu_1615_p1;

assign grp_fu_126_p_ce = 1'b1;

assign grp_fu_126_p_din0 = zext_ln76_1_fu_1625_p1;

assign grp_fu_126_p_din1 = sext_ln58_fu_1615_p1;

assign icmp_ln22_fu_360_p2 = (($signed(tmp_fu_350_p4) > $signed(19'd0)) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_306_p2 = ((ap_sig_allocacmp_i_4 == 10'd1000) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_344_p2 = (($signed(beta_fu_338_p3) > $signed(32'd20479)) ? 1'b1 : 1'b0);

assign index_trigo_2_fu_385_p3 = ((icmp_ln22_reg_1752[0:0] == 1'b1) ? 3'd4 : zext_ln18_fu_382_p1);

assign index_trigo_fu_376_p2 = (($signed(tmp_39_fu_366_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign lshr_ln_fu_632_p4 = {{x_new_94_fu_611_p3[12:3]}};

assign result_cosh_fu_1635_p2 = (mul_ln76_reg_2326 + mul_ln76_1_reg_2331);

assign select_ln43_12_fu_1321_p3 = ((tmp_64_reg_2152[0:0] == 1'b1) ? 32'd8 : 32'd0);

assign select_ln43_15_fu_1454_p3 = ((tmp_67_reg_2209[0:0] == 1'b1) ? add_ln46_2_reg_2226 : add_ln52_2_fu_1435_p2);

assign select_ln43_3_fu_528_p3 = ((tmp_44_reg_1853[0:0] == 1'b1) ? add_ln46_reg_1860 : add_ln52_fu_523_p2);

assign select_ln43_6_fu_784_p3 = ((tmp_52_reg_1927[0:0] == 1'b1) ? 32'd100 : 32'd0);

assign select_ln43_9_fu_952_p3 = ((tmp_55_reg_1991[0:0] == 1'b1) ? add_ln46_1_reg_1998 : add_ln52_1_fu_947_p2);

assign select_ln43_fu_498_p3 = ((tmp_43_reg_1836[0:0] == 1'b1) ? 32'd512 : 32'd0);

assign select_ln58_12_fu_704_p3 = ((tmp_49_reg_1887[0:0] == 1'b1) ? 32'd200 : 32'd0);

assign select_ln58_15_fu_1091_p3 = ((tmp_58_reg_2030[0:0] == 1'b1) ? 32'd32 : 32'd0);

assign select_ln58_18_fu_1241_p3 = ((tmp_61_reg_2090[0:0] == 1'b1) ? 32'd16 : 32'd0);

assign select_ln58_21_fu_1553_p3 = ((tmp_70_reg_2248[0:0] == 1'b1) ? 32'd4 : 32'd0);

assign select_ln58_3_fu_448_p3 = ((tmp_41_reg_1791[0:0] == 1'b1) ? 32'd2092 : 32'd0);

assign select_ln58_6_fu_473_p3 = ((tmp_42_reg_1818[0:0] == 1'b1) ? 32'd1028 : 32'd0);

assign select_ln58_9_fu_547_p3 = ((tmp_46_reg_1870[0:0] == 1'b1) ? 32'd256 : 32'd0);

assign select_ln58_fu_423_p3 = ((tmp_40_reg_1767[0:0] == 1'b1) ? 32'd2249 : 32'd4294965047);

assign sext_ln14_fu_1620_p1 = $signed(x_26_reg_2297);

assign sext_ln15_1_fu_880_p1 = y_52_reg_1971;

assign sext_ln15_2_fu_1111_p1 = y_61_reg_2070;

assign sext_ln15_fu_607_p1 = y_43_fu_600_p3;

assign sext_ln16_fu_877_p1 = x_new_97_reg_1966;

assign sext_ln44_1_fu_1117_p1 = $signed(tmp_57_reg_2080);

assign sext_ln44_2_fu_1336_p1 = $signed(tmp_66_reg_2176);

assign sext_ln44_3_fu_1412_p1 = $signed(tmp_69_reg_2221);

assign sext_ln44_fu_1034_p1 = $signed(tmp_54_reg_2054);

assign sext_ln45_1_fu_799_p1 = $signed(tmp_45_reg_1945);

assign sext_ln45_2_fu_1031_p1 = $signed(tmp_53_reg_2049);

assign sext_ln45_3_fu_1114_p1 = $signed(tmp_56_reg_2075);

assign sext_ln45_4_fu_1333_p1 = $signed(tmp_65_reg_2171);

assign sext_ln45_5_fu_1409_p1 = $signed(tmp_68_reg_2216);

assign sext_ln45_fu_724_p1 = $signed(trunc_ln7_reg_1911);

assign sext_ln58_fu_1615_p1 = $signed(y_82_reg_2292);

assign sext_ln59_1_fu_969_p1 = $signed(tmp_51_reg_2020);

assign sext_ln59_2_fu_1184_p1 = $signed(tmp_60_reg_2114);

assign sext_ln59_3_fu_1264_p1 = $signed(tmp_63_reg_2141);

assign sext_ln59_4_fu_1491_p1 = $signed(tmp_72_reg_2260);

assign sext_ln59_5_fu_1576_p1 = $signed(tmp_75_reg_2287);

assign sext_ln59_fu_886_p1 = $signed(tmp_48_reg_1981);

assign sext_ln60_1_fu_883_p1 = $signed(tmp_47_reg_1976);

assign sext_ln60_2_fu_966_p1 = $signed(tmp_50_reg_2015);

assign sext_ln60_3_fu_1181_p1 = $signed(tmp_59_reg_2109);

assign sext_ln60_4_fu_1261_p1 = $signed(tmp_62_reg_2136);

assign sext_ln60_5_fu_1488_p1 = $signed(tmp_71_reg_2255);

assign sext_ln60_6_fu_1573_p1 = $signed(tmp_74_reg_2282);

assign sext_ln60_fu_628_p1 = $signed(trunc_ln6_fu_618_p4);

assign shl_ln_fu_392_p3 = {{index_trigo_2_fu_385_p3}, {12'd0}};

assign sinh_address0 = zext_ln76_fu_417_p1;

assign sub_ln33_fu_404_p2 = (beta_reg_1743 - zext_ln33_fu_400_p1);

assign tmp_39_fu_366_p4 = {{beta_fu_338_p3[31:12]}};

assign tmp_73_fu_1565_p3 = add_ln58_14_fu_1560_p2[32'd31];

assign tmp_fu_350_p4 = {{beta_fu_338_p3[31:13]}};

assign trunc_ln6_fu_618_p4 = {{y_43_fu_600_p3[12:3]}};

assign x_26_fu_1607_p3 = ((tmp_73_fu_1565_p3[0:0] == 1'b1) ? x_new_92_fu_1579_p2 : x_new_93_fu_1589_p2);

assign x_new_100_fu_1057_p3 = ((tmp_52_reg_1927[0:0] == 1'b1) ? x_new_71_fu_1037_p2 : x_new_72_fu_1047_p2);

assign x_new_101_fu_1142_p3 = ((tmp_55_reg_1991[0:0] == 1'b1) ? x_new_74_fu_1120_p2 : x_new_75_fu_1131_p2);

assign x_new_102_fu_1214_p3 = ((tmp_58_reg_2030[0:0] == 1'b1) ? x_new_77_fu_1187_p2 : x_new_78_fu_1197_p2);

assign x_new_103_fu_1294_p3 = ((tmp_61_reg_2090[0:0] == 1'b1) ? x_new_80_fu_1267_p2 : x_new_81_fu_1277_p2);

assign x_new_104_fu_1359_p3 = ((tmp_64_reg_2152[0:0] == 1'b1) ? x_new_83_fu_1339_p2 : x_new_84_fu_1349_p2);

assign x_new_105_fu_1440_p3 = ((tmp_67_reg_2209[0:0] == 1'b1) ? x_new_86_fu_1415_p2 : x_new_87_fu_1425_p2);

assign x_new_106_fu_1521_p3 = ((tmp_70_reg_2248[0:0] == 1'b1) ? x_new_89_fu_1494_p2 : x_new_90_fu_1504_p2);

assign x_new_54_fu_586_p3 = ((tmp_40_reg_1767[0:0] == 1'b1) ? 13'd4327 : 13'd5563);

assign x_new_56_fu_646_p2 = ($signed(x_new_94_fu_611_p3) - $signed(sext_ln60_fu_628_p1));

assign x_new_57_fu_658_p2 = ($signed(x_new_94_fu_611_p3) + $signed(sext_ln60_fu_628_p1));

assign x_new_59_fu_730_p2 = ($signed(x_new_95_reg_1905) - $signed(sext_ln45_fu_724_p1));

assign x_new_60_fu_740_p2 = ($signed(x_new_95_reg_1905) + $signed(sext_ln45_fu_724_p1));

assign x_new_62_fu_805_p2 = ($signed(zext_ln16_fu_796_p1) - $signed(sext_ln45_1_fu_799_p1));

assign x_new_63_fu_816_p2 = ($signed(zext_ln16_fu_796_p1) + $signed(sext_ln45_1_fu_799_p1));

assign x_new_65_fu_889_p2 = ($signed(sext_ln16_fu_877_p1) - $signed(sext_ln60_1_fu_883_p1));

assign x_new_66_fu_901_p2 = ($signed(sext_ln16_fu_877_p1) + $signed(sext_ln60_1_fu_883_p1));

assign x_new_68_fu_972_p2 = ($signed(x_new_98_reg_2009) - $signed(sext_ln60_2_fu_966_p1));

assign x_new_69_fu_982_p2 = ($signed(x_new_98_reg_2009) + $signed(sext_ln60_2_fu_966_p1));

assign x_new_71_fu_1037_p2 = ($signed(x_new_99_reg_2043) - $signed(sext_ln45_2_fu_1031_p1));

assign x_new_72_fu_1047_p2 = ($signed(x_new_99_reg_2043) + $signed(sext_ln45_2_fu_1031_p1));

assign x_new_74_fu_1120_p2 = ($signed(x_new_100_reg_2064) - $signed(sext_ln45_3_fu_1114_p1));

assign x_new_75_fu_1131_p2 = ($signed(x_new_100_reg_2064) + $signed(sext_ln45_3_fu_1114_p1));

assign x_new_77_fu_1187_p2 = ($signed(x_new_101_reg_2097) - $signed(sext_ln60_3_fu_1181_p1));

assign x_new_78_fu_1197_p2 = ($signed(x_new_101_reg_2097) + $signed(sext_ln60_3_fu_1181_p1));

assign x_new_80_fu_1267_p2 = ($signed(x_new_102_reg_2130) - $signed(sext_ln60_4_fu_1261_p1));

assign x_new_81_fu_1277_p2 = ($signed(x_new_102_reg_2130) + $signed(sext_ln60_4_fu_1261_p1));

assign x_new_83_fu_1339_p2 = ($signed(x_new_103_reg_2165) - $signed(sext_ln45_4_fu_1333_p1));

assign x_new_84_fu_1349_p2 = ($signed(x_new_103_reg_2165) + $signed(sext_ln45_4_fu_1333_p1));

assign x_new_86_fu_1415_p2 = ($signed(x_new_104_reg_2192) - $signed(sext_ln45_5_fu_1409_p1));

assign x_new_87_fu_1425_p2 = ($signed(x_new_104_reg_2192) + $signed(sext_ln45_5_fu_1409_p1));

assign x_new_89_fu_1494_p2 = ($signed(x_new_105_reg_2231) - $signed(sext_ln60_5_fu_1488_p1));

assign x_new_90_fu_1504_p2 = ($signed(x_new_105_reg_2231) + $signed(sext_ln60_5_fu_1488_p1));

assign x_new_92_fu_1579_p2 = ($signed(x_new_106_reg_2271) - $signed(sext_ln60_6_fu_1573_p1));

assign x_new_93_fu_1589_p2 = ($signed(x_new_106_reg_2271) + $signed(sext_ln60_6_fu_1573_p1));

assign x_new_94_fu_611_p3 = ((tmp_41_reg_1791[0:0] == 1'b1) ? x_new_fu_572_p3 : x_new_54_fu_586_p3);

assign x_new_95_fu_677_p3 = ((tmp_42_reg_1818[0:0] == 1'b1) ? x_new_56_fu_646_p2 : x_new_57_fu_658_p2);

assign x_new_96_fu_750_p3 = ((tmp_43_reg_1836[0:0] == 1'b1) ? x_new_59_fu_730_p2 : x_new_60_fu_740_p2);

assign x_new_97_fu_827_p3 = ((tmp_44_reg_1853[0:0] == 1'b1) ? x_new_62_fu_805_p2 : x_new_63_fu_816_p2);

assign x_new_98_fu_920_p3 = ((tmp_46_reg_1870[0:0] == 1'b1) ? x_new_65_fu_889_p2 : x_new_66_fu_901_p2);

assign x_new_99_fu_999_p3 = ((tmp_49_reg_1887[0:0] == 1'b1) ? x_new_68_fu_972_p2 : x_new_69_fu_982_p2);

assign x_new_fu_572_p3 = ((tmp_40_reg_1767[0:0] == 1'b1) ? 13'd5563 : 13'd4327);

assign y_42_fu_593_p3 = ((tmp_40_reg_1767[0:0] == 1'b1) ? 13'd6956 : 13'd3708);

assign y_43_fu_600_p3 = ((tmp_41_reg_1791[0:0] == 1'b1) ? y_fu_579_p3 : y_42_fu_593_p3);

assign y_44_fu_652_p2 = ($signed(sext_ln15_fu_607_p1) - $signed(zext_ln59_fu_642_p1));

assign y_45_fu_664_p2 = ($signed(sext_ln15_fu_607_p1) + $signed(zext_ln59_fu_642_p1));

assign y_46_fu_670_p3 = ((tmp_42_reg_1818[0:0] == 1'b1) ? y_44_fu_652_p2 : y_45_fu_664_p2);

assign y_47_fu_735_p2 = (y_46_reg_1899 - zext_ln44_fu_727_p1);

assign y_48_fu_745_p2 = (y_46_reg_1899 + zext_ln44_fu_727_p1);

assign y_49_fu_757_p3 = ((tmp_43_reg_1836[0:0] == 1'b1) ? y_47_fu_735_p2 : y_48_fu_745_p2);

assign y_50_fu_811_p2 = (y_49_reg_1939 - zext_ln44_1_fu_802_p1);

assign y_51_fu_822_p2 = (y_49_reg_1939 + zext_ln44_1_fu_802_p1);

assign y_52_fu_834_p3 = ((tmp_44_reg_1853[0:0] == 1'b1) ? y_50_fu_811_p2 : y_51_fu_822_p2);

assign y_53_fu_895_p2 = ($signed(sext_ln15_1_fu_880_p1) - $signed(sext_ln59_fu_886_p1));

assign y_54_fu_907_p2 = ($signed(sext_ln15_1_fu_880_p1) + $signed(sext_ln59_fu_886_p1));

assign y_55_fu_913_p3 = ((tmp_46_reg_1870[0:0] == 1'b1) ? y_53_fu_895_p2 : y_54_fu_907_p2);

assign y_56_fu_977_p2 = ($signed(y_55_reg_2003) - $signed(sext_ln59_1_fu_969_p1));

assign y_57_fu_987_p2 = ($signed(y_55_reg_2003) + $signed(sext_ln59_1_fu_969_p1));

assign y_58_fu_992_p3 = ((tmp_49_reg_1887[0:0] == 1'b1) ? y_56_fu_977_p2 : y_57_fu_987_p2);

assign y_59_fu_1042_p2 = ($signed(y_58_reg_2037) - $signed(sext_ln44_fu_1034_p1));

assign y_60_fu_1052_p2 = ($signed(y_58_reg_2037) + $signed(sext_ln44_fu_1034_p1));

assign y_61_fu_1064_p3 = ((tmp_52_reg_1927[0:0] == 1'b1) ? y_59_fu_1042_p2 : y_60_fu_1052_p2);

assign y_62_fu_1125_p2 = ($signed(sext_ln15_2_fu_1111_p1) - $signed(sext_ln44_1_fu_1117_p1));

assign y_63_fu_1136_p2 = ($signed(sext_ln15_2_fu_1111_p1) + $signed(sext_ln44_1_fu_1117_p1));

assign y_64_fu_1149_p3 = ((tmp_55_reg_1991[0:0] == 1'b1) ? y_62_fu_1125_p2 : y_63_fu_1136_p2);

assign y_65_fu_1192_p2 = ($signed(y_64_reg_2103) - $signed(sext_ln59_2_fu_1184_p1));

assign y_66_fu_1202_p2 = ($signed(y_64_reg_2103) + $signed(sext_ln59_2_fu_1184_p1));

assign y_67_fu_1207_p3 = ((tmp_58_reg_2030[0:0] == 1'b1) ? y_65_fu_1192_p2 : y_66_fu_1202_p2);

assign y_68_fu_1272_p2 = ($signed(y_67_reg_2124) - $signed(sext_ln59_3_fu_1264_p1));

assign y_69_fu_1282_p2 = ($signed(y_67_reg_2124) + $signed(sext_ln59_3_fu_1264_p1));

assign y_70_fu_1287_p3 = ((tmp_61_reg_2090[0:0] == 1'b1) ? y_68_fu_1272_p2 : y_69_fu_1282_p2);

assign y_71_fu_1344_p2 = ($signed(y_70_reg_2159) - $signed(sext_ln44_2_fu_1336_p1));

assign y_72_fu_1354_p2 = ($signed(y_70_reg_2159) + $signed(sext_ln44_2_fu_1336_p1));

assign y_73_fu_1366_p3 = ((tmp_64_reg_2152[0:0] == 1'b1) ? y_71_fu_1344_p2 : y_72_fu_1354_p2);

assign y_74_fu_1420_p2 = ($signed(y_73_reg_2198) - $signed(sext_ln44_3_fu_1412_p1));

assign y_75_fu_1430_p2 = ($signed(y_73_reg_2198) + $signed(sext_ln44_3_fu_1412_p1));

assign y_76_fu_1447_p3 = ((tmp_67_reg_2209[0:0] == 1'b1) ? y_74_fu_1420_p2 : y_75_fu_1430_p2);

assign y_77_fu_1499_p2 = ($signed(y_76_reg_2237) - $signed(sext_ln59_4_fu_1491_p1));

assign y_78_fu_1509_p2 = ($signed(y_76_reg_2237) + $signed(sext_ln59_4_fu_1491_p1));

assign y_79_fu_1514_p3 = ((tmp_70_reg_2248[0:0] == 1'b1) ? y_77_fu_1499_p2 : y_78_fu_1509_p2);

assign y_80_fu_1584_p2 = ($signed(y_79_reg_2265) - $signed(sext_ln59_5_fu_1576_p1));

assign y_81_fu_1594_p2 = ($signed(y_79_reg_2265) + $signed(sext_ln59_5_fu_1576_p1));

assign y_82_fu_1599_p3 = ((tmp_73_fu_1565_p3[0:0] == 1'b1) ? y_80_fu_1584_p2 : y_81_fu_1594_p2);

assign y_fu_579_p3 = ((tmp_40_reg_1767[0:0] == 1'b1) ? 13'd4484 : 13'd1236);

assign zext_ln16_fu_796_p1 = x_new_96_reg_1934;

assign zext_ln18_fu_382_p1 = index_trigo_reg_1757;

assign zext_ln27_fu_318_p1 = ap_sig_allocacmp_i_4;

assign zext_ln28_fu_323_p1 = addr_in_load_reg_1718;

assign zext_ln33_fu_400_p1 = shl_ln_fu_392_p3;

assign zext_ln41_fu_1665_p1 = addr_out_load_reg_2366;

assign zext_ln44_1_fu_802_p1 = trunc_ln45_1_cast_reg_1950;

assign zext_ln44_fu_727_p1 = trunc_ln8_cast_reg_1916;

assign zext_ln59_fu_642_p1 = lshr_ln_fu_632_p4;

assign zext_ln76_1_fu_1625_p1 = sinh_load_reg_1798;

assign zext_ln76_2_fu_1630_p1 = cosh_load_reg_1803;

assign zext_ln76_fu_417_p1 = index_trigo_2_fu_385_p3;

always @ (posedge ap_clk) begin
    zext_ln27_reg_1708[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln28_reg_1723[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    select_ln43_6_reg_1955[1:0] <= 2'b00;
    select_ln43_6_reg_1955[4:3] <= 2'b00;
    select_ln43_6_reg_1955[31:7] <= 25'b0000000000000000000000000;
    select_ln43_12_reg_2181[2:0] <= 3'b000;
    select_ln43_12_reg_2181[31:4] <= 28'b0000000000000000000000000000;
    zext_ln41_reg_2371[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //main_getTanh
