// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module getTanh_getTanh_Pipeline_VITIS_LOOP_27_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        addr_out_address0,
        addr_out_ce0,
        addr_out_q0,
        A_address0,
        A_ce0,
        A_we0,
        A_d0,
        A_q0,
        addr_in_address0,
        addr_in_ce0,
        addr_in_q0,
        atanh_load,
        atanh_load_1,
        atanh_load_2,
        atanh_load_3,
        atanh_load_4,
        atanh_load_5,
        atanh_load_6,
        atanh_load_7,
        atanh_load_8,
        atanh_load_9,
        atanh_load_10,
        sinh_address0,
        sinh_ce0,
        sinh_q0,
        cosh_address0,
        cosh_ce0,
        cosh_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 46'd1;
parameter    ap_ST_fsm_pp0_stage1 = 46'd2;
parameter    ap_ST_fsm_pp0_stage2 = 46'd4;
parameter    ap_ST_fsm_pp0_stage3 = 46'd8;
parameter    ap_ST_fsm_pp0_stage4 = 46'd16;
parameter    ap_ST_fsm_pp0_stage5 = 46'd32;
parameter    ap_ST_fsm_pp0_stage6 = 46'd64;
parameter    ap_ST_fsm_pp0_stage7 = 46'd128;
parameter    ap_ST_fsm_pp0_stage8 = 46'd256;
parameter    ap_ST_fsm_pp0_stage9 = 46'd512;
parameter    ap_ST_fsm_pp0_stage10 = 46'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 46'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 46'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 46'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 46'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 46'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 46'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 46'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 46'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 46'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 46'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 46'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 46'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 46'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 46'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 46'd33554432;
parameter    ap_ST_fsm_pp0_stage26 = 46'd67108864;
parameter    ap_ST_fsm_pp0_stage27 = 46'd134217728;
parameter    ap_ST_fsm_pp0_stage28 = 46'd268435456;
parameter    ap_ST_fsm_pp0_stage29 = 46'd536870912;
parameter    ap_ST_fsm_pp0_stage30 = 46'd1073741824;
parameter    ap_ST_fsm_pp0_stage31 = 46'd2147483648;
parameter    ap_ST_fsm_pp0_stage32 = 46'd4294967296;
parameter    ap_ST_fsm_pp0_stage33 = 46'd8589934592;
parameter    ap_ST_fsm_pp0_stage34 = 46'd17179869184;
parameter    ap_ST_fsm_pp0_stage35 = 46'd34359738368;
parameter    ap_ST_fsm_pp0_stage36 = 46'd68719476736;
parameter    ap_ST_fsm_pp0_stage37 = 46'd137438953472;
parameter    ap_ST_fsm_pp0_stage38 = 46'd274877906944;
parameter    ap_ST_fsm_pp0_stage39 = 46'd549755813888;
parameter    ap_ST_fsm_pp0_stage40 = 46'd1099511627776;
parameter    ap_ST_fsm_pp0_stage41 = 46'd2199023255552;
parameter    ap_ST_fsm_pp0_stage42 = 46'd4398046511104;
parameter    ap_ST_fsm_pp0_stage43 = 46'd8796093022208;
parameter    ap_ST_fsm_pp0_stage44 = 46'd17592186044416;
parameter    ap_ST_fsm_pp0_stage45 = 46'd35184372088832;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] addr_out_address0;
output   addr_out_ce0;
input  [31:0] addr_out_q0;
output  [9:0] A_address0;
output   A_ce0;
output   A_we0;
output  [31:0] A_d0;
input  [31:0] A_q0;
output  [9:0] addr_in_address0;
output   addr_in_ce0;
input  [31:0] addr_in_q0;
input  [31:0] atanh_load;
input  [31:0] atanh_load_1;
input  [31:0] atanh_load_2;
input  [31:0] atanh_load_3;
input  [31:0] atanh_load_4;
input  [31:0] atanh_load_5;
input  [31:0] atanh_load_6;
input  [31:0] atanh_load_7;
input  [31:0] atanh_load_8;
input  [31:0] atanh_load_9;
input  [31:0] atanh_load_10;
output  [2:0] sinh_address0;
output   sinh_ce0;
input  [31:0] sinh_q0;
output  [2:0] cosh_address0;
output   cosh_ce0;
input  [31:0] cosh_q0;

reg ap_idle;
reg addr_out_ce0;
reg[9:0] A_address0;
reg A_ce0;
reg A_we0;
reg addr_in_ce0;
reg sinh_ce0;
reg cosh_ce0;

(* fsm_encoding = "none" *) reg   [45:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_subdone;
reg   [0:0] icmp_ln27_reg_1896;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage45;
wire    ap_block_pp0_stage45_subdone;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln27_fu_359_p2;
reg   [0:0] icmp_ln27_reg_1896_pp0_iter1_reg;
wire   [63:0] zext_ln27_fu_371_p1;
reg   [63:0] zext_ln27_reg_1900;
wire   [63:0] zext_ln28_fu_381_p1;
reg   [63:0] zext_ln28_reg_1910;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] A_load_reg_1920;
wire    ap_block_pp0_stage2_11001;
wire   [0:0] addr_cmp_fu_389_p2;
reg   [0:0] addr_cmp_reg_1925;
wire   [0:0] icmp_ln31_fu_403_p2;
reg   [0:0] icmp_ln31_reg_1930;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_11001;
wire   [31:0] sub_ln34_fu_465_p2;
reg   [31:0] sub_ln34_reg_1934;
reg   [0:0] tmp_2_reg_1940;
wire   [31:0] select_ln59_3_fu_566_p3;
reg   [31:0] select_ln59_3_reg_1959;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_11001;
wire   [0:0] tmp_4_fu_574_p3;
reg   [0:0] tmp_4_reg_1965;
wire   [13:0] y_5_fu_634_p3;
reg   [13:0] y_5_reg_1970;
wire   [12:0] x_new_42_fu_642_p3;
reg   [12:0] x_new_42_reg_1976;
reg   [9:0] trunc_ln2_reg_1982;
reg   [8:0] trunc_ln3_cast_reg_1987;
reg  signed [31:0] sinh_load_reg_1992;
reg  signed [31:0] cosh_load_reg_1998;
wire   [31:0] select_ln44_fu_749_p3;
reg   [31:0] select_ln44_reg_2004;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_11001;
wire   [0:0] tmp_6_fu_757_p3;
reg   [0:0] tmp_6_reg_2010;
wire  signed [25:0] x_new_44_fu_817_p3;
reg  signed [25:0] x_new_44_reg_2015;
wire  signed [13:0] y_11_fu_825_p3;
reg  signed [13:0] y_11_reg_2020;
reg   [8:0] tmp_9_reg_2025;
reg   [20:0] tmp_10_reg_2030;
wire   [31:0] select_ln59_9_fu_938_p3;
reg   [31:0] select_ln59_9_reg_2035;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6_11001;
wire   [0:0] tmp_11_fu_946_p3;
reg   [0:0] tmp_11_reg_2041;
wire   [26:0] y_17_fu_1006_p3;
reg   [26:0] y_17_reg_2046;
wire   [26:0] x_new_46_fu_1014_p3;
reg   [26:0] x_new_46_reg_2052;
reg   [19:0] tmp_15_reg_2058;
reg   [19:0] tmp_16_reg_2063;
wire   [31:0] select_ln44_6_fu_1121_p3;
reg   [31:0] select_ln44_6_reg_2068;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7_11001;
wire   [0:0] tmp_17_fu_1129_p3;
reg   [0:0] tmp_17_reg_2074;
wire   [26:0] x_new_48_fu_1189_p3;
reg   [26:0] x_new_48_reg_2079;
wire   [27:0] y_23_fu_1197_p3;
reg   [27:0] y_23_reg_2085;
reg   [19:0] tmp_21_reg_2091;
reg   [18:0] tmp_22_reg_2096;
wire   [31:0] select_ln59_15_fu_1300_p3;
reg   [31:0] select_ln59_15_reg_2101;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8_11001;
wire   [0:0] tmp_23_fu_1308_p3;
reg   [0:0] tmp_23_reg_2107;
wire   [27:0] y_29_fu_1368_p3;
reg   [27:0] y_29_reg_2112;
wire   [26:0] x_new_50_fu_1376_p3;
reg   [26:0] x_new_50_reg_2118;
reg   [17:0] tmp_27_reg_2124;
reg   [16:0] tmp_28_reg_2129;
wire   [31:0] select_ln44_12_fu_1479_p3;
reg   [31:0] select_ln44_12_reg_2134;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9_11001;
wire   [0:0] tmp_29_fu_1487_p3;
reg   [0:0] tmp_29_reg_2140;
wire   [26:0] x_new_52_fu_1547_p3;
reg   [26:0] x_new_52_reg_2145;
wire   [27:0] y_35_fu_1555_p3;
reg   [27:0] y_35_reg_2151;
reg   [16:0] tmp_33_reg_2157;
reg   [15:0] tmp_34_reg_2162;
wire   [27:0] y_41_fu_1734_p3;
reg   [27:0] y_41_reg_2167;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10_11001;
wire   [26:0] x_13_fu_1742_p3;
reg   [26:0] x_13_reg_2172;
wire  signed [31:0] sext_ln59_fu_1750_p1;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11_11001;
wire  signed [31:0] sext_ln15_fu_1755_p1;
wire   [31:0] grp_fu_333_p2;
reg   [31:0] mul_ln77_reg_2189;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12_11001;
wire   [31:0] grp_fu_325_p2;
reg   [31:0] mul_ln77_1_reg_2194;
wire   [31:0] grp_fu_337_p2;
reg   [31:0] mul_ln78_reg_2199;
wire   [31:0] grp_fu_329_p2;
reg   [31:0] mul_ln78_1_reg_2204;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13_11001;
wire   [63:0] zext_ln41_fu_1789_p1;
reg   [63:0] zext_ln41_reg_2224;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [31:0] ap_phi_mux_result_1_phi_fu_317_p4;
wire   [31:0] grp_fu_1782_p2;
wire    ap_block_pp0_stage45_11001;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln77_fu_479_p1;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage2;
reg   [63:0] reuse_addr_reg_fu_162;
wire    ap_loop_init;
reg   [31:0] reuse_reg_fu_166;
reg   [9:0] i_fu_170;
wire   [9:0] add_ln27_fu_365_p2;
reg   [9:0] ap_sig_allocacmp_i_1;
wire  signed [26:0] grp_fu_325_p1;
wire    ap_block_pp0_stage11;
wire  signed [26:0] grp_fu_329_p1;
wire  signed [27:0] grp_fu_333_p1;
wire  signed [27:0] grp_fu_337_p1;
wire   [31:0] beta_fu_397_p3;
wire   [18:0] tmp_fu_409_p4;
wire   [19:0] tmp_1_fu_425_p4;
wire   [0:0] index_trigo_fu_435_p2;
wire   [0:0] icmp_ln23_fu_419_p2;
wire   [2:0] zext_ln19_fu_441_p1;
wire   [2:0] index_trigo_1_fu_445_p3;
wire   [14:0] shl_ln_fu_453_p3;
wire   [31:0] zext_ln34_fu_461_p1;
wire    ap_block_pp0_stage4;
wire   [31:0] add_ln62_fu_485_p2;
wire   [31:0] sub_ln68_fu_489_p2;
wire   [31:0] select_ln59_fu_493_p3;
wire   [0:0] tmp_3_fu_500_p3;
wire   [12:0] y_fu_515_p3;
wire   [12:0] y_1_fu_534_p3;
wire  signed [12:0] y_2_fu_546_p3;
wire   [12:0] x_new_fu_508_p3;
wire   [12:0] x_new_1_fu_527_p3;
wire   [31:0] add_ln62_1_fu_522_p2;
wire   [31:0] sub_ln68_1_fu_541_p2;
wire   [9:0] trunc_ln1_fu_582_p4;
wire   [12:0] x_new_41_fu_558_p3;
wire   [9:0] lshr_ln_fu_596_p4;
wire  signed [12:0] sext_ln61_fu_592_p1;
wire  signed [13:0] sext_ln16_fu_554_p1;
wire   [13:0] zext_ln60_fu_606_p1;
wire   [13:0] y_3_fu_616_p2;
wire   [13:0] y_4_fu_628_p2;
wire   [12:0] x_new_3_fu_610_p2;
wire   [12:0] x_new_4_fu_622_p2;
wire    ap_block_pp0_stage5;
wire   [31:0] add_ln62_2_fu_670_p2;
wire   [31:0] sub_ln68_2_fu_674_p2;
wire   [31:0] select_ln59_6_fu_678_p3;
wire  signed [12:0] sext_ln46_fu_693_p1;
wire   [13:0] zext_ln45_fu_696_p1;
wire   [0:0] tmp_5_fu_685_p3;
wire   [12:0] x_new_6_fu_699_p2;
wire   [12:0] x_new_7_fu_714_p2;
wire   [12:0] x_new_43_fu_729_p3;
wire   [13:0] y_6_fu_704_p2;
wire   [13:0] y_7_fu_719_p2;
wire   [31:0] add_ln47_fu_709_p2;
wire   [31:0] sub_ln53_fu_724_p2;
wire   [13:0] y_8_fu_741_p3;
wire   [9:0] tmp_7_fu_765_p4;
wire   [8:0] trunc_ln46_1_cast_fu_779_p4;
wire   [25:0] zext_ln17_fu_737_p1;
wire  signed [25:0] sext_ln46_1_fu_775_p1;
wire   [13:0] zext_ln45_1_fu_789_p1;
wire   [25:0] x_new_9_fu_793_p2;
wire   [25:0] x_new_10_fu_805_p2;
wire   [13:0] y_9_fu_799_p2;
wire   [13:0] y_10_fu_811_p2;
wire    ap_block_pp0_stage6;
wire   [31:0] add_ln47_1_fu_853_p2;
wire   [31:0] sub_ln53_1_fu_857_p2;
wire   [31:0] select_ln44_3_fu_867_p3;
wire  signed [26:0] sext_ln17_fu_861_p1;
wire  signed [26:0] sext_ln61_1_fu_882_p1;
wire  signed [26:0] sext_ln16_1_fu_864_p1;
wire  signed [26:0] sext_ln60_fu_885_p1;
wire   [0:0] tmp_8_fu_874_p3;
wire   [26:0] y_12_fu_894_p2;
wire   [26:0] y_13_fu_911_p2;
wire   [26:0] x_new_12_fu_888_p2;
wire   [26:0] x_new_13_fu_905_p2;
wire   [31:0] add_ln62_3_fu_900_p2;
wire   [31:0] sub_ln68_3_fu_917_p2;
wire   [26:0] y_14_fu_922_p3;
wire   [20:0] tmp_12_fu_954_p4;
wire   [26:0] x_new_45_fu_930_p3;
wire   [20:0] tmp_13_fu_968_p4;
wire  signed [26:0] sext_ln61_2_fu_964_p1;
wire  signed [26:0] sext_ln60_1_fu_978_p1;
wire   [26:0] y_15_fu_988_p2;
wire   [26:0] y_16_fu_1000_p2;
wire   [26:0] x_new_15_fu_982_p2;
wire   [26:0] x_new_16_fu_994_p2;
wire    ap_block_pp0_stage7;
wire   [31:0] add_ln62_4_fu_1042_p2;
wire   [31:0] sub_ln68_4_fu_1046_p2;
wire   [31:0] select_ln59_12_fu_1050_p3;
wire  signed [26:0] sext_ln46_2_fu_1065_p1;
wire  signed [26:0] sext_ln45_fu_1068_p1;
wire   [0:0] tmp_14_fu_1057_p3;
wire   [26:0] x_new_18_fu_1071_p2;
wire   [26:0] x_new_19_fu_1086_p2;
wire   [26:0] y_18_fu_1076_p2;
wire   [26:0] y_19_fu_1091_p2;
wire  signed [26:0] y_20_fu_1109_p3;
wire   [31:0] add_ln47_2_fu_1081_p2;
wire   [31:0] sub_ln53_2_fu_1096_p2;
wire   [19:0] tmp_18_fu_1137_p4;
wire   [26:0] x_new_47_fu_1101_p3;
wire   [19:0] tmp_19_fu_1151_p4;
wire  signed [26:0] sext_ln46_3_fu_1147_p1;
wire  signed [27:0] sext_ln16_2_fu_1117_p1;
wire  signed [27:0] sext_ln45_1_fu_1161_p1;
wire   [26:0] x_new_21_fu_1165_p2;
wire   [26:0] x_new_22_fu_1177_p2;
wire   [27:0] y_21_fu_1171_p2;
wire   [27:0] y_22_fu_1183_p2;
wire    ap_block_pp0_stage8;
wire   [31:0] add_ln47_3_fu_1225_p2;
wire   [31:0] sub_ln53_3_fu_1229_p2;
wire   [31:0] select_ln44_9_fu_1233_p3;
wire  signed [26:0] sext_ln61_3_fu_1248_p1;
wire  signed [27:0] sext_ln60_2_fu_1251_p1;
wire   [0:0] tmp_20_fu_1240_p3;
wire   [27:0] y_24_fu_1259_p2;
wire   [27:0] y_25_fu_1274_p2;
wire   [26:0] x_new_24_fu_1254_p2;
wire   [26:0] x_new_25_fu_1269_p2;
wire   [31:0] add_ln62_5_fu_1264_p2;
wire   [31:0] sub_ln68_5_fu_1279_p2;
wire   [27:0] y_26_fu_1284_p3;
wire   [18:0] tmp_24_fu_1316_p4;
wire   [26:0] x_new_49_fu_1292_p3;
wire   [17:0] tmp_25_fu_1330_p4;
wire  signed [26:0] sext_ln61_4_fu_1326_p1;
wire  signed [27:0] sext_ln60_3_fu_1340_p1;
wire   [27:0] y_27_fu_1350_p2;
wire   [27:0] y_28_fu_1362_p2;
wire   [26:0] x_new_27_fu_1344_p2;
wire   [26:0] x_new_28_fu_1356_p2;
wire    ap_block_pp0_stage9;
wire   [31:0] add_ln62_6_fu_1404_p2;
wire   [31:0] sub_ln68_6_fu_1408_p2;
wire   [31:0] select_ln59_18_fu_1412_p3;
wire  signed [26:0] sext_ln46_4_fu_1427_p1;
wire  signed [27:0] sext_ln45_2_fu_1430_p1;
wire   [0:0] tmp_26_fu_1419_p3;
wire   [26:0] x_new_30_fu_1433_p2;
wire   [26:0] x_new_31_fu_1448_p2;
wire   [27:0] y_30_fu_1438_p2;
wire   [27:0] y_31_fu_1453_p2;
wire   [31:0] add_ln47_4_fu_1443_p2;
wire   [31:0] sub_ln53_4_fu_1458_p2;
wire   [27:0] y_32_fu_1471_p3;
wire   [17:0] tmp_30_fu_1495_p4;
wire   [26:0] x_new_51_fu_1463_p3;
wire   [16:0] tmp_31_fu_1509_p4;
wire  signed [26:0] sext_ln46_5_fu_1505_p1;
wire  signed [27:0] sext_ln45_3_fu_1519_p1;
wire   [26:0] x_new_33_fu_1523_p2;
wire   [26:0] x_new_34_fu_1535_p2;
wire   [27:0] y_33_fu_1529_p2;
wire   [27:0] y_34_fu_1541_p2;
wire    ap_block_pp0_stage10;
wire   [31:0] add_ln47_5_fu_1583_p2;
wire   [31:0] sub_ln53_5_fu_1587_p2;
wire   [31:0] select_ln44_15_fu_1591_p3;
wire  signed [26:0] sext_ln61_5_fu_1606_p1;
wire  signed [27:0] sext_ln60_4_fu_1609_p1;
wire   [0:0] tmp_32_fu_1598_p3;
wire   [27:0] y_36_fu_1617_p2;
wire   [27:0] y_37_fu_1632_p2;
wire   [26:0] x_new_36_fu_1612_p2;
wire   [26:0] x_new_37_fu_1627_p2;
wire   [31:0] add_ln62_7_fu_1622_p2;
wire   [31:0] sub_ln68_7_fu_1637_p2;
wire   [0:0] tmp_35_fu_1658_p3;
wire   [0:0] tmp_36_fu_1666_p3;
wire   [27:0] y_38_fu_1642_p3;
wire   [15:0] tmp_37_fu_1682_p4;
wire   [26:0] x_new_53_fu_1650_p3;
wire   [14:0] tmp_38_fu_1696_p4;
wire  signed [26:0] sext_ln61_6_fu_1692_p1;
wire  signed [27:0] sext_ln60_5_fu_1706_p1;
wire   [0:0] select_ln59_21_fu_1674_p3;
wire   [27:0] y_39_fu_1716_p2;
wire   [27:0] y_40_fu_1728_p2;
wire   [26:0] x_new_39_fu_1710_p2;
wire   [26:0] x_new_40_fu_1722_p2;
wire    ap_block_pp0_stage13;
wire   [31:0] add_ln78_fu_1764_p2;
wire  signed [19:0] result_sinh_fu_1768_p4;
wire   [31:0] grp_fu_1782_p0;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [45:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_pp0_stage23_subdone;
wire    ap_block_pp0_stage24_subdone;
wire    ap_block_pp0_stage25_subdone;
wire    ap_block_pp0_stage26_subdone;
wire    ap_block_pp0_stage27_subdone;
wire    ap_block_pp0_stage28_subdone;
wire    ap_block_pp0_stage29_subdone;
wire    ap_block_pp0_stage30_subdone;
wire    ap_block_pp0_stage31_subdone;
wire    ap_block_pp0_stage32_subdone;
wire    ap_block_pp0_stage33_subdone;
wire    ap_block_pp0_stage34_subdone;
wire    ap_block_pp0_stage35_subdone;
wire    ap_block_pp0_stage36_subdone;
wire    ap_block_pp0_stage37_subdone;
wire    ap_block_pp0_stage38_subdone;
wire    ap_block_pp0_stage39_subdone;
wire    ap_block_pp0_stage40_subdone;
wire    ap_block_pp0_stage41_subdone;
wire    ap_block_pp0_stage42_subdone;
wire    ap_block_pp0_stage43_subdone;
wire    ap_block_pp0_stage44_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 46'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 reuse_addr_reg_fu_162 = 64'd0;
#0 reuse_reg_fu_166 = 32'd0;
#0 i_fu_170 = 10'd0;
#0 ap_done_reg = 1'b0;
end

getTanh_mul_32s_27s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 27 ),
    .dout_WIDTH( 32 ))
mul_32s_27s_32_2_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sinh_load_reg_1992),
    .din1(grp_fu_325_p1),
    .ce(1'b1),
    .dout(grp_fu_325_p2)
);

getTanh_mul_32s_27s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 27 ),
    .dout_WIDTH( 32 ))
mul_32s_27s_32_2_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(cosh_load_reg_1998),
    .din1(grp_fu_329_p1),
    .ce(1'b1),
    .dout(grp_fu_329_p2)
);

getTanh_mul_32s_28s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 28 ),
    .dout_WIDTH( 32 ))
mul_32s_28s_32_2_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(cosh_load_reg_1998),
    .din1(grp_fu_333_p1),
    .ce(1'b1),
    .dout(grp_fu_333_p2)
);

getTanh_mul_32s_28s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 28 ),
    .dout_WIDTH( 32 ))
mul_32s_28s_32_2_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sinh_load_reg_1992),
    .din1(grp_fu_337_p1),
    .ce(1'b1),
    .dout(grp_fu_337_p2)
);

getTanh_sdiv_32ns_20s_32_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 32 ))
sdiv_32ns_20s_32_36_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1782_p0),
    .din1(result_sinh_fu_1768_p4),
    .ce(1'b1),
    .dout(grp_fu_1782_p2)
);

getTanh_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage45_subdone) & (1'b1 == ap_CS_fsm_pp0_stage45))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln27_fu_359_p2 == 1'd0))) begin
            i_fu_170 <= add_ln27_fu_365_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_170 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reuse_addr_reg_fu_162 <= 64'd18446744073709551615;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        reuse_addr_reg_fu_162 <= zext_ln41_fu_1789_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reuse_reg_fu_166 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        reuse_reg_fu_166 <= ap_phi_mux_result_1_phi_fu_317_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        A_load_reg_1920 <= A_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        addr_cmp_reg_1925 <= addr_cmp_fu_389_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        cosh_load_reg_1998 <= cosh_q0;
        select_ln59_3_reg_1959 <= select_ln59_3_fu_566_p3;
        sinh_load_reg_1992 <= sinh_q0;
        tmp_4_reg_1965 <= select_ln59_3_fu_566_p3[32'd31];
        trunc_ln2_reg_1982 <= {{y_5_fu_634_p3[13:4]}};
        trunc_ln3_cast_reg_1987 <= {{x_new_42_fu_642_p3[12:4]}};
        x_new_42_reg_1976 <= x_new_42_fu_642_p3;
        y_5_reg_1970 <= y_5_fu_634_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln27_reg_1896 <= icmp_ln27_fu_359_p2;
        icmp_ln27_reg_1896_pp0_iter1_reg <= icmp_ln27_reg_1896;
        zext_ln27_reg_1900[9 : 0] <= zext_ln27_fu_371_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        icmp_ln31_reg_1930 <= icmp_ln31_fu_403_p2;
        sub_ln34_reg_1934 <= sub_ln34_fu_465_p2;
        tmp_2_reg_1940 <= sub_ln34_fu_465_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        mul_ln77_1_reg_2194 <= grp_fu_325_p2;
        mul_ln77_reg_2189 <= grp_fu_333_p2;
        mul_ln78_1_reg_2204 <= grp_fu_329_p2;
        mul_ln78_reg_2199 <= grp_fu_337_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        select_ln44_12_reg_2134 <= select_ln44_12_fu_1479_p3;
        tmp_29_reg_2140 <= select_ln44_12_fu_1479_p3[32'd31];
        tmp_33_reg_2157 <= {{y_35_fu_1555_p3[27:11]}};
        tmp_34_reg_2162 <= {{x_new_52_fu_1547_p3[26:11]}};
        x_new_52_reg_2145 <= x_new_52_fu_1547_p3;
        y_35_reg_2151 <= y_35_fu_1555_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        select_ln44_6_reg_2068 <= select_ln44_6_fu_1121_p3;
        tmp_17_reg_2074 <= select_ln44_6_fu_1121_p3[32'd31];
        tmp_21_reg_2091 <= {{y_23_fu_1197_p3[27:8]}};
        tmp_22_reg_2096 <= {{x_new_48_fu_1189_p3[26:8]}};
        x_new_48_reg_2079 <= x_new_48_fu_1189_p3;
        y_23_reg_2085 <= y_23_fu_1197_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        select_ln44_reg_2004 <= select_ln44_fu_749_p3;
        tmp_10_reg_2030 <= {{x_new_44_fu_817_p3[25:5]}};
        tmp_6_reg_2010 <= select_ln44_fu_749_p3[32'd31];
        tmp_9_reg_2025 <= {{y_11_fu_825_p3[13:5]}};
        x_new_44_reg_2015 <= x_new_44_fu_817_p3;
        y_11_reg_2020 <= y_11_fu_825_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        select_ln59_15_reg_2101 <= select_ln59_15_fu_1300_p3;
        tmp_23_reg_2107 <= select_ln59_15_fu_1300_p3[32'd31];
        tmp_27_reg_2124 <= {{y_29_fu_1368_p3[27:10]}};
        tmp_28_reg_2129 <= {{x_new_50_fu_1376_p3[26:10]}};
        x_new_50_reg_2118 <= x_new_50_fu_1376_p3;
        y_29_reg_2112 <= y_29_fu_1368_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        select_ln59_9_reg_2035 <= select_ln59_9_fu_938_p3;
        tmp_11_reg_2041 <= select_ln59_9_fu_938_p3[32'd31];
        tmp_15_reg_2058 <= {{y_17_fu_1006_p3[26:7]}};
        tmp_16_reg_2063 <= {{x_new_46_fu_1014_p3[26:7]}};
        x_new_46_reg_2052 <= x_new_46_fu_1014_p3;
        y_17_reg_2046 <= y_17_fu_1006_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        x_13_reg_2172 <= x_13_fu_1742_p3;
        y_41_reg_2167 <= y_41_fu_1734_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        zext_ln28_reg_1910[31 : 0] <= zext_ln28_fu_381_p1[31 : 0];
        zext_ln41_reg_2224[31 : 0] <= zext_ln41_fu_1789_p1[31 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        A_address0 = zext_ln41_reg_2224;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        A_address0 = zext_ln28_fu_381_p1;
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        A_we0 = 1'b1;
    end else begin
        A_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        addr_in_ce0 = 1'b1;
    end else begin
        addr_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        addr_out_ce0 = 1'b1;
    end else begin
        addr_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_reg_1896 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_1930 == 1'd0) & (icmp_ln27_reg_1896_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_result_1_phi_fu_317_p4 = grp_fu_1782_p2;
    end else begin
        ap_phi_mux_result_1_phi_fu_317_p4 = 32'd4096;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage45_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage45))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 10'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_170;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        cosh_ce0 = 1'b1;
    end else begin
        cosh_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        sinh_ce0 = 1'b1;
    end else begin
        sinh_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_pp0_stage32 : begin
            if ((1'b0 == ap_block_pp0_stage32_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end
        end
        ap_ST_fsm_pp0_stage33 : begin
            if ((1'b0 == ap_block_pp0_stage33_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end
        end
        ap_ST_fsm_pp0_stage34 : begin
            if ((1'b0 == ap_block_pp0_stage34_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end
        end
        ap_ST_fsm_pp0_stage35 : begin
            if ((1'b0 == ap_block_pp0_stage35_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end
        end
        ap_ST_fsm_pp0_stage36 : begin
            if ((1'b0 == ap_block_pp0_stage36_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end
        end
        ap_ST_fsm_pp0_stage37 : begin
            if ((1'b0 == ap_block_pp0_stage37_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end
        end
        ap_ST_fsm_pp0_stage38 : begin
            if ((1'b0 == ap_block_pp0_stage38_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end
        end
        ap_ST_fsm_pp0_stage39 : begin
            if ((1'b0 == ap_block_pp0_stage39_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end
        end
        ap_ST_fsm_pp0_stage40 : begin
            if ((1'b0 == ap_block_pp0_stage40_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end
        end
        ap_ST_fsm_pp0_stage41 : begin
            if ((1'b0 == ap_block_pp0_stage41_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end
        end
        ap_ST_fsm_pp0_stage42 : begin
            if ((1'b0 == ap_block_pp0_stage42_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end
        end
        ap_ST_fsm_pp0_stage43 : begin
            if ((1'b0 == ap_block_pp0_stage43_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end
        end
        ap_ST_fsm_pp0_stage44 : begin
            if ((1'b0 == ap_block_pp0_stage44_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end
        end
        ap_ST_fsm_pp0_stage45 : begin
            if ((1'b0 == ap_block_pp0_stage45_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_d0 = ap_phi_mux_result_1_phi_fu_317_p4;

assign add_ln27_fu_365_p2 = (ap_sig_allocacmp_i_1 + 10'd1);

assign add_ln47_1_fu_853_p2 = (atanh_load_3 + select_ln44_reg_2004);

assign add_ln47_2_fu_1081_p2 = (atanh_load_6 + select_ln59_12_fu_1050_p3);

assign add_ln47_3_fu_1225_p2 = (atanh_load_6 + select_ln44_6_reg_2068);

assign add_ln47_4_fu_1443_p2 = (atanh_load_9 + select_ln59_18_fu_1412_p3);

assign add_ln47_5_fu_1583_p2 = (atanh_load_9 + select_ln44_12_reg_2134);

assign add_ln47_fu_709_p2 = (atanh_load_3 + select_ln59_6_fu_678_p3);

assign add_ln62_1_fu_522_p2 = (atanh_load_1 + select_ln59_fu_493_p3);

assign add_ln62_2_fu_670_p2 = (atanh_load_2 + select_ln59_3_reg_1959);

assign add_ln62_3_fu_900_p2 = (atanh_load_4 + select_ln44_3_fu_867_p3);

assign add_ln62_4_fu_1042_p2 = (atanh_load_5 + select_ln59_9_reg_2035);

assign add_ln62_5_fu_1264_p2 = (atanh_load_7 + select_ln44_9_fu_1233_p3);

assign add_ln62_6_fu_1404_p2 = (atanh_load_8 + select_ln59_15_reg_2101);

assign add_ln62_7_fu_1622_p2 = (atanh_load_10 + select_ln44_15_fu_1591_p3);

assign add_ln62_fu_485_p2 = (atanh_load + sub_ln34_reg_1934);

assign add_ln78_fu_1764_p2 = (mul_ln78_1_reg_2204 + mul_ln78_reg_2199);

assign addr_cmp_fu_389_p2 = ((reuse_addr_reg_fu_162 == zext_ln28_reg_1910) ? 1'b1 : 1'b0);

assign addr_in_address0 = zext_ln27_fu_371_p1;

assign addr_out_address0 = zext_ln27_reg_1900;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage45 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage40_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage41_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage43_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage44_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage45_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage45_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign beta_fu_397_p3 = ((addr_cmp_reg_1925[0:0] == 1'b1) ? reuse_reg_fu_166 : A_load_reg_1920);

assign cosh_address0 = zext_ln77_fu_479_p1;

assign grp_fu_1782_p0 = (mul_ln77_reg_2189 + mul_ln77_1_reg_2194);

assign grp_fu_325_p1 = sext_ln15_fu_1755_p1;

assign grp_fu_329_p1 = sext_ln15_fu_1755_p1;

assign grp_fu_333_p1 = sext_ln59_fu_1750_p1;

assign grp_fu_337_p1 = sext_ln59_fu_1750_p1;

assign icmp_ln23_fu_419_p2 = (($signed(tmp_fu_409_p4) > $signed(19'd0)) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_359_p2 = ((ap_sig_allocacmp_i_1 == 10'd1000) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_403_p2 = (($signed(beta_fu_397_p3) > $signed(32'd20479)) ? 1'b1 : 1'b0);

assign index_trigo_1_fu_445_p3 = ((icmp_ln23_fu_419_p2[0:0] == 1'b1) ? 3'd4 : zext_ln19_fu_441_p1);

assign index_trigo_fu_435_p2 = (($signed(tmp_1_fu_425_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign lshr_ln_fu_596_p4 = {{x_new_41_fu_558_p3[12:3]}};

assign result_sinh_fu_1768_p4 = {{add_ln78_fu_1764_p2[31:12]}};

assign select_ln44_12_fu_1479_p3 = ((tmp_26_fu_1419_p3[0:0] == 1'b1) ? add_ln47_4_fu_1443_p2 : sub_ln53_4_fu_1458_p2);

assign select_ln44_15_fu_1591_p3 = ((tmp_29_reg_2140[0:0] == 1'b1) ? add_ln47_5_fu_1583_p2 : sub_ln53_5_fu_1587_p2);

assign select_ln44_3_fu_867_p3 = ((tmp_6_reg_2010[0:0] == 1'b1) ? add_ln47_1_fu_853_p2 : sub_ln53_1_fu_857_p2);

assign select_ln44_6_fu_1121_p3 = ((tmp_14_fu_1057_p3[0:0] == 1'b1) ? add_ln47_2_fu_1081_p2 : sub_ln53_2_fu_1096_p2);

assign select_ln44_9_fu_1233_p3 = ((tmp_17_reg_2074[0:0] == 1'b1) ? add_ln47_3_fu_1225_p2 : sub_ln53_3_fu_1229_p2);

assign select_ln44_fu_749_p3 = ((tmp_5_fu_685_p3[0:0] == 1'b1) ? add_ln47_fu_709_p2 : sub_ln53_fu_724_p2);

assign select_ln59_12_fu_1050_p3 = ((tmp_11_reg_2041[0:0] == 1'b1) ? add_ln62_4_fu_1042_p2 : sub_ln68_4_fu_1046_p2);

assign select_ln59_15_fu_1300_p3 = ((tmp_20_fu_1240_p3[0:0] == 1'b1) ? add_ln62_5_fu_1264_p2 : sub_ln68_5_fu_1279_p2);

assign select_ln59_18_fu_1412_p3 = ((tmp_23_reg_2107[0:0] == 1'b1) ? add_ln62_6_fu_1404_p2 : sub_ln68_6_fu_1408_p2);

assign select_ln59_21_fu_1674_p3 = ((tmp_32_fu_1598_p3[0:0] == 1'b1) ? tmp_35_fu_1658_p3 : tmp_36_fu_1666_p3);

assign select_ln59_3_fu_566_p3 = ((tmp_3_fu_500_p3[0:0] == 1'b1) ? add_ln62_1_fu_522_p2 : sub_ln68_1_fu_541_p2);

assign select_ln59_6_fu_678_p3 = ((tmp_4_reg_1965[0:0] == 1'b1) ? add_ln62_2_fu_670_p2 : sub_ln68_2_fu_674_p2);

assign select_ln59_9_fu_938_p3 = ((tmp_8_fu_874_p3[0:0] == 1'b1) ? add_ln62_3_fu_900_p2 : sub_ln68_3_fu_917_p2);

assign select_ln59_fu_493_p3 = ((tmp_2_reg_1940[0:0] == 1'b1) ? add_ln62_fu_485_p2 : sub_ln68_fu_489_p2);

assign sext_ln15_fu_1755_p1 = $signed(x_13_reg_2172);

assign sext_ln16_1_fu_864_p1 = y_11_reg_2020;

assign sext_ln16_2_fu_1117_p1 = y_20_fu_1109_p3;

assign sext_ln16_fu_554_p1 = y_2_fu_546_p3;

assign sext_ln17_fu_861_p1 = x_new_44_reg_2015;

assign sext_ln45_1_fu_1161_p1 = $signed(tmp_19_fu_1151_p4);

assign sext_ln45_2_fu_1430_p1 = $signed(tmp_28_reg_2129);

assign sext_ln45_3_fu_1519_p1 = $signed(tmp_31_fu_1509_p4);

assign sext_ln45_fu_1068_p1 = $signed(tmp_16_reg_2063);

assign sext_ln46_1_fu_775_p1 = $signed(tmp_7_fu_765_p4);

assign sext_ln46_2_fu_1065_p1 = $signed(tmp_15_reg_2058);

assign sext_ln46_3_fu_1147_p1 = $signed(tmp_18_fu_1137_p4);

assign sext_ln46_4_fu_1427_p1 = $signed(tmp_27_reg_2124);

assign sext_ln46_5_fu_1505_p1 = $signed(tmp_30_fu_1495_p4);

assign sext_ln46_fu_693_p1 = $signed(trunc_ln2_reg_1982);

assign sext_ln59_fu_1750_p1 = $signed(y_41_reg_2167);

assign sext_ln60_1_fu_978_p1 = $signed(tmp_13_fu_968_p4);

assign sext_ln60_2_fu_1251_p1 = $signed(tmp_22_reg_2096);

assign sext_ln60_3_fu_1340_p1 = $signed(tmp_25_fu_1330_p4);

assign sext_ln60_4_fu_1609_p1 = $signed(tmp_34_reg_2162);

assign sext_ln60_5_fu_1706_p1 = $signed(tmp_38_fu_1696_p4);

assign sext_ln60_fu_885_p1 = $signed(tmp_10_reg_2030);

assign sext_ln61_1_fu_882_p1 = $signed(tmp_9_reg_2025);

assign sext_ln61_2_fu_964_p1 = $signed(tmp_12_fu_954_p4);

assign sext_ln61_3_fu_1248_p1 = $signed(tmp_21_reg_2091);

assign sext_ln61_4_fu_1326_p1 = $signed(tmp_24_fu_1316_p4);

assign sext_ln61_5_fu_1606_p1 = $signed(tmp_33_reg_2157);

assign sext_ln61_6_fu_1692_p1 = $signed(tmp_37_fu_1682_p4);

assign sext_ln61_fu_592_p1 = $signed(trunc_ln1_fu_582_p4);

assign shl_ln_fu_453_p3 = {{index_trigo_1_fu_445_p3}, {12'd0}};

assign sinh_address0 = zext_ln77_fu_479_p1;

assign sub_ln34_fu_465_p2 = (beta_fu_397_p3 - zext_ln34_fu_461_p1);

assign sub_ln53_1_fu_857_p2 = (select_ln44_reg_2004 - atanh_load_3);

assign sub_ln53_2_fu_1096_p2 = (select_ln59_12_fu_1050_p3 - atanh_load_6);

assign sub_ln53_3_fu_1229_p2 = (select_ln44_6_reg_2068 - atanh_load_6);

assign sub_ln53_4_fu_1458_p2 = (select_ln59_18_fu_1412_p3 - atanh_load_9);

assign sub_ln53_5_fu_1587_p2 = (select_ln44_12_reg_2134 - atanh_load_9);

assign sub_ln53_fu_724_p2 = (select_ln59_6_fu_678_p3 - atanh_load_3);

assign sub_ln68_1_fu_541_p2 = (select_ln59_fu_493_p3 - atanh_load_1);

assign sub_ln68_2_fu_674_p2 = (select_ln59_3_reg_1959 - atanh_load_2);

assign sub_ln68_3_fu_917_p2 = (select_ln44_3_fu_867_p3 - atanh_load_4);

assign sub_ln68_4_fu_1046_p2 = (select_ln59_9_reg_2035 - atanh_load_5);

assign sub_ln68_5_fu_1279_p2 = (select_ln44_9_fu_1233_p3 - atanh_load_7);

assign sub_ln68_6_fu_1408_p2 = (select_ln59_15_reg_2101 - atanh_load_8);

assign sub_ln68_7_fu_1637_p2 = (select_ln44_15_fu_1591_p3 - atanh_load_10);

assign sub_ln68_fu_489_p2 = (sub_ln34_reg_1934 - atanh_load);

assign tmp_11_fu_946_p3 = select_ln59_9_fu_938_p3[32'd31];

assign tmp_12_fu_954_p4 = {{y_14_fu_922_p3[26:6]}};

assign tmp_13_fu_968_p4 = {{x_new_45_fu_930_p3[26:6]}};

assign tmp_14_fu_1057_p3 = select_ln59_12_fu_1050_p3[32'd31];

assign tmp_17_fu_1129_p3 = select_ln44_6_fu_1121_p3[32'd31];

assign tmp_18_fu_1137_p4 = {{y_20_fu_1109_p3[26:7]}};

assign tmp_19_fu_1151_p4 = {{x_new_47_fu_1101_p3[26:7]}};

assign tmp_1_fu_425_p4 = {{beta_fu_397_p3[31:12]}};

assign tmp_20_fu_1240_p3 = select_ln44_9_fu_1233_p3[32'd31];

assign tmp_23_fu_1308_p3 = select_ln59_15_fu_1300_p3[32'd31];

assign tmp_24_fu_1316_p4 = {{y_26_fu_1284_p3[27:9]}};

assign tmp_25_fu_1330_p4 = {{x_new_49_fu_1292_p3[26:9]}};

assign tmp_26_fu_1419_p3 = select_ln59_18_fu_1412_p3[32'd31];

assign tmp_29_fu_1487_p3 = select_ln44_12_fu_1479_p3[32'd31];

assign tmp_30_fu_1495_p4 = {{y_32_fu_1471_p3[27:10]}};

assign tmp_31_fu_1509_p4 = {{x_new_51_fu_1463_p3[26:10]}};

assign tmp_32_fu_1598_p3 = select_ln44_15_fu_1591_p3[32'd31];

assign tmp_35_fu_1658_p3 = add_ln62_7_fu_1622_p2[32'd31];

assign tmp_36_fu_1666_p3 = sub_ln68_7_fu_1637_p2[32'd31];

assign tmp_37_fu_1682_p4 = {{y_38_fu_1642_p3[27:12]}};

assign tmp_38_fu_1696_p4 = {{x_new_53_fu_1650_p3[26:12]}};

assign tmp_3_fu_500_p3 = select_ln59_fu_493_p3[32'd31];

assign tmp_4_fu_574_p3 = select_ln59_3_fu_566_p3[32'd31];

assign tmp_5_fu_685_p3 = select_ln59_6_fu_678_p3[32'd31];

assign tmp_6_fu_757_p3 = select_ln44_fu_749_p3[32'd31];

assign tmp_7_fu_765_p4 = {{y_8_fu_741_p3[13:4]}};

assign tmp_8_fu_874_p3 = select_ln44_3_fu_867_p3[32'd31];

assign tmp_fu_409_p4 = {{beta_fu_397_p3[31:13]}};

assign trunc_ln1_fu_582_p4 = {{y_2_fu_546_p3[12:3]}};

assign trunc_ln46_1_cast_fu_779_p4 = {{x_new_43_fu_729_p3[12:4]}};

assign x_13_fu_1742_p3 = ((select_ln59_21_fu_1674_p3[0:0] == 1'b1) ? x_new_39_fu_1710_p2 : x_new_40_fu_1722_p2);

assign x_new_10_fu_805_p2 = ($signed(zext_ln17_fu_737_p1) + $signed(sext_ln46_1_fu_775_p1));

assign x_new_12_fu_888_p2 = ($signed(sext_ln17_fu_861_p1) - $signed(sext_ln61_1_fu_882_p1));

assign x_new_13_fu_905_p2 = ($signed(sext_ln17_fu_861_p1) + $signed(sext_ln61_1_fu_882_p1));

assign x_new_15_fu_982_p2 = ($signed(x_new_45_fu_930_p3) - $signed(sext_ln61_2_fu_964_p1));

assign x_new_16_fu_994_p2 = ($signed(x_new_45_fu_930_p3) + $signed(sext_ln61_2_fu_964_p1));

assign x_new_18_fu_1071_p2 = ($signed(x_new_46_reg_2052) - $signed(sext_ln46_2_fu_1065_p1));

assign x_new_19_fu_1086_p2 = ($signed(x_new_46_reg_2052) + $signed(sext_ln46_2_fu_1065_p1));

assign x_new_1_fu_527_p3 = ((tmp_2_reg_1940[0:0] == 1'b1) ? 13'd4327 : 13'd5563);

assign x_new_21_fu_1165_p2 = ($signed(x_new_47_fu_1101_p3) - $signed(sext_ln46_3_fu_1147_p1));

assign x_new_22_fu_1177_p2 = ($signed(x_new_47_fu_1101_p3) + $signed(sext_ln46_3_fu_1147_p1));

assign x_new_24_fu_1254_p2 = ($signed(x_new_48_reg_2079) - $signed(sext_ln61_3_fu_1248_p1));

assign x_new_25_fu_1269_p2 = ($signed(x_new_48_reg_2079) + $signed(sext_ln61_3_fu_1248_p1));

assign x_new_27_fu_1344_p2 = ($signed(x_new_49_fu_1292_p3) - $signed(sext_ln61_4_fu_1326_p1));

assign x_new_28_fu_1356_p2 = ($signed(x_new_49_fu_1292_p3) + $signed(sext_ln61_4_fu_1326_p1));

assign x_new_30_fu_1433_p2 = ($signed(x_new_50_reg_2118) - $signed(sext_ln46_4_fu_1427_p1));

assign x_new_31_fu_1448_p2 = ($signed(x_new_50_reg_2118) + $signed(sext_ln46_4_fu_1427_p1));

assign x_new_33_fu_1523_p2 = ($signed(x_new_51_fu_1463_p3) - $signed(sext_ln46_5_fu_1505_p1));

assign x_new_34_fu_1535_p2 = ($signed(x_new_51_fu_1463_p3) + $signed(sext_ln46_5_fu_1505_p1));

assign x_new_36_fu_1612_p2 = ($signed(x_new_52_reg_2145) - $signed(sext_ln61_5_fu_1606_p1));

assign x_new_37_fu_1627_p2 = ($signed(x_new_52_reg_2145) + $signed(sext_ln61_5_fu_1606_p1));

assign x_new_39_fu_1710_p2 = ($signed(x_new_53_fu_1650_p3) - $signed(sext_ln61_6_fu_1692_p1));

assign x_new_3_fu_610_p2 = ($signed(x_new_41_fu_558_p3) - $signed(sext_ln61_fu_592_p1));

assign x_new_40_fu_1722_p2 = ($signed(x_new_53_fu_1650_p3) + $signed(sext_ln61_6_fu_1692_p1));

assign x_new_41_fu_558_p3 = ((tmp_3_fu_500_p3[0:0] == 1'b1) ? x_new_fu_508_p3 : x_new_1_fu_527_p3);

assign x_new_42_fu_642_p3 = ((tmp_4_fu_574_p3[0:0] == 1'b1) ? x_new_3_fu_610_p2 : x_new_4_fu_622_p2);

assign x_new_43_fu_729_p3 = ((tmp_5_fu_685_p3[0:0] == 1'b1) ? x_new_6_fu_699_p2 : x_new_7_fu_714_p2);

assign x_new_44_fu_817_p3 = ((tmp_6_fu_757_p3[0:0] == 1'b1) ? x_new_9_fu_793_p2 : x_new_10_fu_805_p2);

assign x_new_45_fu_930_p3 = ((tmp_8_fu_874_p3[0:0] == 1'b1) ? x_new_12_fu_888_p2 : x_new_13_fu_905_p2);

assign x_new_46_fu_1014_p3 = ((tmp_11_fu_946_p3[0:0] == 1'b1) ? x_new_15_fu_982_p2 : x_new_16_fu_994_p2);

assign x_new_47_fu_1101_p3 = ((tmp_14_fu_1057_p3[0:0] == 1'b1) ? x_new_18_fu_1071_p2 : x_new_19_fu_1086_p2);

assign x_new_48_fu_1189_p3 = ((tmp_17_fu_1129_p3[0:0] == 1'b1) ? x_new_21_fu_1165_p2 : x_new_22_fu_1177_p2);

assign x_new_49_fu_1292_p3 = ((tmp_20_fu_1240_p3[0:0] == 1'b1) ? x_new_24_fu_1254_p2 : x_new_25_fu_1269_p2);

assign x_new_4_fu_622_p2 = ($signed(x_new_41_fu_558_p3) + $signed(sext_ln61_fu_592_p1));

assign x_new_50_fu_1376_p3 = ((tmp_23_fu_1308_p3[0:0] == 1'b1) ? x_new_27_fu_1344_p2 : x_new_28_fu_1356_p2);

assign x_new_51_fu_1463_p3 = ((tmp_26_fu_1419_p3[0:0] == 1'b1) ? x_new_30_fu_1433_p2 : x_new_31_fu_1448_p2);

assign x_new_52_fu_1547_p3 = ((tmp_29_fu_1487_p3[0:0] == 1'b1) ? x_new_33_fu_1523_p2 : x_new_34_fu_1535_p2);

assign x_new_53_fu_1650_p3 = ((tmp_32_fu_1598_p3[0:0] == 1'b1) ? x_new_36_fu_1612_p2 : x_new_37_fu_1627_p2);

assign x_new_6_fu_699_p2 = ($signed(x_new_42_reg_1976) - $signed(sext_ln46_fu_693_p1));

assign x_new_7_fu_714_p2 = ($signed(x_new_42_reg_1976) + $signed(sext_ln46_fu_693_p1));

assign x_new_9_fu_793_p2 = ($signed(zext_ln17_fu_737_p1) - $signed(sext_ln46_1_fu_775_p1));

assign x_new_fu_508_p3 = ((tmp_2_reg_1940[0:0] == 1'b1) ? 13'd5563 : 13'd4327);

assign y_10_fu_811_p2 = (y_8_fu_741_p3 + zext_ln45_1_fu_789_p1);

assign y_11_fu_825_p3 = ((tmp_6_fu_757_p3[0:0] == 1'b1) ? y_9_fu_799_p2 : y_10_fu_811_p2);

assign y_12_fu_894_p2 = ($signed(sext_ln16_1_fu_864_p1) - $signed(sext_ln60_fu_885_p1));

assign y_13_fu_911_p2 = ($signed(sext_ln16_1_fu_864_p1) + $signed(sext_ln60_fu_885_p1));

assign y_14_fu_922_p3 = ((tmp_8_fu_874_p3[0:0] == 1'b1) ? y_12_fu_894_p2 : y_13_fu_911_p2);

assign y_15_fu_988_p2 = ($signed(y_14_fu_922_p3) - $signed(sext_ln60_1_fu_978_p1));

assign y_16_fu_1000_p2 = ($signed(y_14_fu_922_p3) + $signed(sext_ln60_1_fu_978_p1));

assign y_17_fu_1006_p3 = ((tmp_11_fu_946_p3[0:0] == 1'b1) ? y_15_fu_988_p2 : y_16_fu_1000_p2);

assign y_18_fu_1076_p2 = ($signed(y_17_reg_2046) - $signed(sext_ln45_fu_1068_p1));

assign y_19_fu_1091_p2 = ($signed(y_17_reg_2046) + $signed(sext_ln45_fu_1068_p1));

assign y_1_fu_534_p3 = ((tmp_2_reg_1940[0:0] == 1'b1) ? 13'd6956 : 13'd3708);

assign y_20_fu_1109_p3 = ((tmp_14_fu_1057_p3[0:0] == 1'b1) ? y_18_fu_1076_p2 : y_19_fu_1091_p2);

assign y_21_fu_1171_p2 = ($signed(sext_ln16_2_fu_1117_p1) - $signed(sext_ln45_1_fu_1161_p1));

assign y_22_fu_1183_p2 = ($signed(sext_ln16_2_fu_1117_p1) + $signed(sext_ln45_1_fu_1161_p1));

assign y_23_fu_1197_p3 = ((tmp_17_fu_1129_p3[0:0] == 1'b1) ? y_21_fu_1171_p2 : y_22_fu_1183_p2);

assign y_24_fu_1259_p2 = ($signed(y_23_reg_2085) - $signed(sext_ln60_2_fu_1251_p1));

assign y_25_fu_1274_p2 = ($signed(y_23_reg_2085) + $signed(sext_ln60_2_fu_1251_p1));

assign y_26_fu_1284_p3 = ((tmp_20_fu_1240_p3[0:0] == 1'b1) ? y_24_fu_1259_p2 : y_25_fu_1274_p2);

assign y_27_fu_1350_p2 = ($signed(y_26_fu_1284_p3) - $signed(sext_ln60_3_fu_1340_p1));

assign y_28_fu_1362_p2 = ($signed(y_26_fu_1284_p3) + $signed(sext_ln60_3_fu_1340_p1));

assign y_29_fu_1368_p3 = ((tmp_23_fu_1308_p3[0:0] == 1'b1) ? y_27_fu_1350_p2 : y_28_fu_1362_p2);

assign y_2_fu_546_p3 = ((tmp_3_fu_500_p3[0:0] == 1'b1) ? y_fu_515_p3 : y_1_fu_534_p3);

assign y_30_fu_1438_p2 = ($signed(y_29_reg_2112) - $signed(sext_ln45_2_fu_1430_p1));

assign y_31_fu_1453_p2 = ($signed(y_29_reg_2112) + $signed(sext_ln45_2_fu_1430_p1));

assign y_32_fu_1471_p3 = ((tmp_26_fu_1419_p3[0:0] == 1'b1) ? y_30_fu_1438_p2 : y_31_fu_1453_p2);

assign y_33_fu_1529_p2 = ($signed(y_32_fu_1471_p3) - $signed(sext_ln45_3_fu_1519_p1));

assign y_34_fu_1541_p2 = ($signed(y_32_fu_1471_p3) + $signed(sext_ln45_3_fu_1519_p1));

assign y_35_fu_1555_p3 = ((tmp_29_fu_1487_p3[0:0] == 1'b1) ? y_33_fu_1529_p2 : y_34_fu_1541_p2);

assign y_36_fu_1617_p2 = ($signed(y_35_reg_2151) - $signed(sext_ln60_4_fu_1609_p1));

assign y_37_fu_1632_p2 = ($signed(y_35_reg_2151) + $signed(sext_ln60_4_fu_1609_p1));

assign y_38_fu_1642_p3 = ((tmp_32_fu_1598_p3[0:0] == 1'b1) ? y_36_fu_1617_p2 : y_37_fu_1632_p2);

assign y_39_fu_1716_p2 = ($signed(y_38_fu_1642_p3) - $signed(sext_ln60_5_fu_1706_p1));

assign y_3_fu_616_p2 = ($signed(sext_ln16_fu_554_p1) - $signed(zext_ln60_fu_606_p1));

assign y_40_fu_1728_p2 = ($signed(y_38_fu_1642_p3) + $signed(sext_ln60_5_fu_1706_p1));

assign y_41_fu_1734_p3 = ((select_ln59_21_fu_1674_p3[0:0] == 1'b1) ? y_39_fu_1716_p2 : y_40_fu_1728_p2);

assign y_4_fu_628_p2 = ($signed(sext_ln16_fu_554_p1) + $signed(zext_ln60_fu_606_p1));

assign y_5_fu_634_p3 = ((tmp_4_fu_574_p3[0:0] == 1'b1) ? y_3_fu_616_p2 : y_4_fu_628_p2);

assign y_6_fu_704_p2 = (y_5_reg_1970 - zext_ln45_fu_696_p1);

assign y_7_fu_719_p2 = (y_5_reg_1970 + zext_ln45_fu_696_p1);

assign y_8_fu_741_p3 = ((tmp_5_fu_685_p3[0:0] == 1'b1) ? y_6_fu_704_p2 : y_7_fu_719_p2);

assign y_9_fu_799_p2 = (y_8_fu_741_p3 - zext_ln45_1_fu_789_p1);

assign y_fu_515_p3 = ((tmp_2_reg_1940[0:0] == 1'b1) ? 13'd4484 : 13'd1236);

assign zext_ln17_fu_737_p1 = x_new_43_fu_729_p3;

assign zext_ln19_fu_441_p1 = index_trigo_fu_435_p2;

assign zext_ln27_fu_371_p1 = ap_sig_allocacmp_i_1;

assign zext_ln28_fu_381_p1 = addr_in_q0;

assign zext_ln34_fu_461_p1 = shl_ln_fu_453_p3;

assign zext_ln41_fu_1789_p1 = addr_out_q0;

assign zext_ln45_1_fu_789_p1 = trunc_ln46_1_cast_fu_779_p4;

assign zext_ln45_fu_696_p1 = trunc_ln3_cast_reg_1987;

assign zext_ln60_fu_606_p1 = lshr_ln_fu_596_p4;

assign zext_ln77_fu_479_p1 = index_trigo_1_fu_445_p3;

always @ (posedge ap_clk) begin
    zext_ln27_reg_1900[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln28_reg_1910[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln41_reg_2224[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //getTanh_getTanh_Pipeline_VITIS_LOOP_27_1
