// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module main_inlined (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_address0,
        A_ce0,
        A_we0,
        A_d0,
        A_q0,
        addr_in_address0,
        addr_in_ce0,
        addr_in_q0,
        addr_out_address0,
        addr_out_ce0,
        addr_out_q0,
        sinh_address0,
        sinh_ce0,
        sinh_q0,
        cosh_address0,
        cosh_ce0,
        cosh_q0,
        grp_fu_114_p_din0,
        grp_fu_114_p_din1,
        grp_fu_114_p_dout0,
        grp_fu_114_p_ce,
        grp_fu_118_p_din0,
        grp_fu_118_p_din1,
        grp_fu_118_p_dout0,
        grp_fu_118_p_ce,
        grp_fu_122_p_din0,
        grp_fu_122_p_din1,
        grp_fu_122_p_dout0,
        grp_fu_122_p_ce,
        grp_fu_126_p_din0,
        grp_fu_126_p_din1,
        grp_fu_126_p_dout0,
        grp_fu_126_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 68'd1;
parameter    ap_ST_fsm_pp0_stage1 = 68'd2;
parameter    ap_ST_fsm_pp0_stage2 = 68'd4;
parameter    ap_ST_fsm_pp0_stage3 = 68'd8;
parameter    ap_ST_fsm_pp0_stage4 = 68'd16;
parameter    ap_ST_fsm_pp0_stage5 = 68'd32;
parameter    ap_ST_fsm_pp0_stage6 = 68'd64;
parameter    ap_ST_fsm_pp0_stage7 = 68'd128;
parameter    ap_ST_fsm_pp0_stage8 = 68'd256;
parameter    ap_ST_fsm_pp0_stage9 = 68'd512;
parameter    ap_ST_fsm_pp0_stage10 = 68'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 68'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 68'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 68'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 68'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 68'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 68'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 68'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 68'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 68'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 68'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 68'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 68'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 68'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 68'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 68'd33554432;
parameter    ap_ST_fsm_pp0_stage26 = 68'd67108864;
parameter    ap_ST_fsm_pp0_stage27 = 68'd134217728;
parameter    ap_ST_fsm_pp0_stage28 = 68'd268435456;
parameter    ap_ST_fsm_pp0_stage29 = 68'd536870912;
parameter    ap_ST_fsm_pp0_stage30 = 68'd1073741824;
parameter    ap_ST_fsm_pp0_stage31 = 68'd2147483648;
parameter    ap_ST_fsm_pp0_stage32 = 68'd4294967296;
parameter    ap_ST_fsm_pp0_stage33 = 68'd8589934592;
parameter    ap_ST_fsm_pp0_stage34 = 68'd17179869184;
parameter    ap_ST_fsm_pp0_stage35 = 68'd34359738368;
parameter    ap_ST_fsm_pp0_stage36 = 68'd68719476736;
parameter    ap_ST_fsm_pp0_stage37 = 68'd137438953472;
parameter    ap_ST_fsm_pp0_stage38 = 68'd274877906944;
parameter    ap_ST_fsm_pp0_stage39 = 68'd549755813888;
parameter    ap_ST_fsm_pp0_stage40 = 68'd1099511627776;
parameter    ap_ST_fsm_pp0_stage41 = 68'd2199023255552;
parameter    ap_ST_fsm_pp0_stage42 = 68'd4398046511104;
parameter    ap_ST_fsm_pp0_stage43 = 68'd8796093022208;
parameter    ap_ST_fsm_pp0_stage44 = 68'd17592186044416;
parameter    ap_ST_fsm_pp0_stage45 = 68'd35184372088832;
parameter    ap_ST_fsm_pp0_stage46 = 68'd70368744177664;
parameter    ap_ST_fsm_pp0_stage47 = 68'd140737488355328;
parameter    ap_ST_fsm_pp0_stage48 = 68'd281474976710656;
parameter    ap_ST_fsm_pp0_stage49 = 68'd562949953421312;
parameter    ap_ST_fsm_pp0_stage50 = 68'd1125899906842624;
parameter    ap_ST_fsm_pp0_stage51 = 68'd2251799813685248;
parameter    ap_ST_fsm_pp0_stage52 = 68'd4503599627370496;
parameter    ap_ST_fsm_pp0_stage53 = 68'd9007199254740992;
parameter    ap_ST_fsm_pp0_stage54 = 68'd18014398509481984;
parameter    ap_ST_fsm_pp0_stage55 = 68'd36028797018963968;
parameter    ap_ST_fsm_pp0_stage56 = 68'd72057594037927936;
parameter    ap_ST_fsm_pp0_stage57 = 68'd144115188075855872;
parameter    ap_ST_fsm_pp0_stage58 = 68'd288230376151711744;
parameter    ap_ST_fsm_pp0_stage59 = 68'd576460752303423488;
parameter    ap_ST_fsm_pp0_stage60 = 68'd1152921504606846976;
parameter    ap_ST_fsm_pp0_stage61 = 68'd2305843009213693952;
parameter    ap_ST_fsm_pp0_stage62 = 68'd4611686018427387904;
parameter    ap_ST_fsm_pp0_stage63 = 68'd9223372036854775808;
parameter    ap_ST_fsm_pp0_stage64 = 68'd18446744073709551616;
parameter    ap_ST_fsm_pp0_stage65 = 68'd36893488147419103232;
parameter    ap_ST_fsm_pp0_stage66 = 68'd73786976294838206464;
parameter    ap_ST_fsm_pp0_stage67 = 68'd147573952589676412928;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] A_address0;
output   A_ce0;
output   A_we0;
output  [31:0] A_d0;
input  [31:0] A_q0;
output  [9:0] addr_in_address0;
output   addr_in_ce0;
input  [9:0] addr_in_q0;
output  [9:0] addr_out_address0;
output   addr_out_ce0;
input  [9:0] addr_out_q0;
output  [2:0] sinh_address0;
output   sinh_ce0;
input  [16:0] sinh_q0;
output  [2:0] cosh_address0;
output   cosh_ce0;
input  [16:0] cosh_q0;
output  [16:0] grp_fu_114_p_din0;
output  [26:0] grp_fu_114_p_din1;
input  [31:0] grp_fu_114_p_dout0;
output   grp_fu_114_p_ce;
output  [16:0] grp_fu_118_p_din0;
output  [26:0] grp_fu_118_p_din1;
input  [31:0] grp_fu_118_p_dout0;
output   grp_fu_118_p_ce;
output  [16:0] grp_fu_122_p_din0;
output  [27:0] grp_fu_122_p_din1;
input  [31:0] grp_fu_122_p_dout0;
output   grp_fu_122_p_ce;
output  [16:0] grp_fu_126_p_din0;
output  [27:0] grp_fu_126_p_din1;
input  [31:0] grp_fu_126_p_dout0;
output   grp_fu_126_p_ce;

reg ap_idle;
reg[9:0] A_address0;
reg A_ce0;
reg A_we0;
reg addr_in_ce0;
reg addr_out_ce0;
reg sinh_ce0;
reg cosh_ce0;

(* fsm_encoding = "none" *) reg   [67:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_subdone;
reg   [0:0] icmp_ln33_reg_1773;
reg    ap_condition_exit_pp0_iter0_stage5;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage67;
wire    ap_block_pp0_stage67_subdone;
reg   [31:0] result_1_reg_273;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln33_fu_320_p2;
reg   [0:0] icmp_ln33_reg_1773_pp0_iter1_reg;
wire   [9:0] add_ln33_fu_326_p2;
reg   [9:0] add_ln33_reg_1777;
wire   [63:0] zext_ln33_fu_332_p1;
reg   [63:0] zext_ln33_reg_1782;
reg   [9:0] addr_in_load_reg_1792;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
wire   [63:0] zext_ln34_fu_337_p1;
reg   [63:0] zext_ln34_reg_1797;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] A_load_reg_1807;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_11001;
wire   [0:0] addr_cmp_fu_344_p2;
reg   [0:0] addr_cmp_reg_1812;
wire   [31:0] beta_fu_352_p3;
reg   [31:0] beta_reg_1817;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_11001;
wire   [0:0] icmp_ln37_fu_358_p2;
reg   [0:0] icmp_ln37_reg_1826;
wire   [0:0] icmp_ln40_fu_373_p2;
reg   [0:0] icmp_ln40_reg_1830;
wire    ap_block_pp0_stage5_11001;
wire   [0:0] icmp_ln42_fu_379_p2;
reg   [0:0] icmp_ln42_reg_1836;
wire   [0:0] index_trigo_fu_408_p2;
reg   [0:0] index_trigo_reg_1841;
wire   [0:0] and_ln44_fu_420_p2;
reg   [0:0] and_ln44_reg_1846;
wire   [31:0] beta_1_fu_478_p2;
reg   [31:0] beta_1_reg_1852;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6_11001;
reg   [0:0] tmp_3_reg_1857;
wire   [31:0] beta_2_fu_504_p2;
reg   [31:0] beta_2_reg_1876;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7_11001;
reg   [0:0] tmp_4_reg_1881;
reg   [16:0] sinh_load_reg_1888;
reg   [16:0] cosh_load_reg_1893;
wire   [31:0] add_ln76_fu_517_p2;
reg   [31:0] add_ln76_reg_1898;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8_11001;
wire   [31:0] beta_3_fu_529_p2;
reg   [31:0] beta_3_reg_1903;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9_11001;
reg   [0:0] tmp_5_reg_1908;
wire   [31:0] add_ln76_2_fu_542_p2;
reg   [31:0] add_ln76_2_reg_1915;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10_11001;
wire   [31:0] beta_4_fu_554_p2;
reg   [31:0] beta_4_reg_1920;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11_11001;
reg   [0:0] tmp_6_reg_1926;
wire   [31:0] add_ln61_fu_567_p2;
reg   [31:0] add_ln61_reg_1933;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12_11001;
wire   [31:0] beta_5_fu_579_p2;
reg   [31:0] beta_5_reg_1938;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13_11001;
reg   [0:0] tmp_7_reg_1943;
wire   [31:0] beta_6_fu_592_p2;
reg   [31:0] beta_6_reg_1950;
wire   [31:0] beta_8_fu_602_p3;
reg   [31:0] beta_8_reg_1955;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14_11001;
reg   [0:0] tmp_9_reg_1960;
wire   [31:0] add_ln76_4_fu_616_p2;
reg   [31:0] add_ln76_4_reg_1967;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15_11001;
wire   [31:0] beta_9_fu_628_p2;
reg   [31:0] beta_9_reg_1972;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16_11001;
reg   [0:0] tmp_12_reg_1977;
wire   [31:0] add_ln76_6_fu_641_p2;
reg   [31:0] add_ln76_6_reg_1984;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17_11001;
wire   [12:0] x_new_42_fu_744_p3;
reg   [12:0] x_new_42_reg_1989;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18_11001;
wire   [13:0] y_5_fu_751_p3;
reg   [13:0] y_5_reg_1995;
reg   [9:0] trunc_ln2_reg_2001;
reg   [8:0] trunc_ln3_cast_reg_2006;
wire   [31:0] beta_10_fu_785_p2;
reg   [31:0] beta_10_reg_2011;
reg   [0:0] tmp_15_reg_2017;
wire   [13:0] y_8_fu_824_p3;
reg   [13:0] y_8_reg_2024;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19_11001;
wire   [12:0] x_new_43_fu_831_p3;
reg   [12:0] x_new_43_reg_2030;
reg   [9:0] tmp_8_reg_2035;
reg   [8:0] trunc_ln69_1_cast_reg_2040;
wire   [31:0] select_ln61_6_fu_858_p3;
reg   [31:0] select_ln61_6_reg_2045;
wire   [31:0] add_ln61_2_fu_865_p2;
reg   [31:0] add_ln61_2_reg_2051;
wire  signed [13:0] y_11_fu_901_p3;
reg  signed [13:0] y_11_reg_2056;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20_11001;
wire  signed [25:0] x_new_44_fu_908_p3;
reg  signed [25:0] x_new_44_reg_2061;
reg   [8:0] tmp_10_reg_2066;
reg   [20:0] tmp_11_reg_2071;
wire   [31:0] beta_11_fu_935_p2;
reg   [31:0] beta_11_reg_2076;
reg   [0:0] tmp_18_reg_2081;
wire   [31:0] beta_12_fu_947_p2;
reg   [31:0] beta_12_reg_2088;
wire   [26:0] x_new_45_fu_987_p3;
reg   [26:0] x_new_45_reg_2093;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21_11001;
wire   [26:0] y_14_fu_994_p3;
reg   [26:0] y_14_reg_2099;
reg   [20:0] tmp_13_reg_2105;
reg   [20:0] tmp_14_reg_2110;
wire   [31:0] beta_14_fu_1026_p3;
reg   [31:0] beta_14_reg_2115;
reg   [0:0] tmp_21_reg_2120;
wire   [26:0] x_new_46_fu_1066_p3;
reg   [26:0] x_new_46_reg_2127;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22_11001;
wire   [26:0] y_17_fu_1073_p3;
reg   [26:0] y_17_reg_2133;
reg   [19:0] tmp_16_reg_2139;
reg   [19:0] tmp_17_reg_2144;
wire   [31:0] add_ln76_8_fu_1100_p2;
reg   [31:0] add_ln76_8_reg_2149;
wire  signed [26:0] y_20_fu_1131_p3;
reg  signed [26:0] y_20_reg_2154;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23_11001;
wire   [26:0] x_new_47_fu_1138_p3;
reg   [26:0] x_new_47_reg_2159;
reg   [19:0] tmp_19_reg_2165;
reg   [19:0] tmp_20_reg_2170;
wire   [31:0] beta_15_fu_1172_p2;
reg   [31:0] beta_15_reg_2175;
reg   [0:0] tmp_24_reg_2180;
wire   [27:0] y_23_fu_1216_p3;
reg   [27:0] y_23_reg_2187;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_pp0_stage24_11001;
wire   [26:0] x_new_48_fu_1223_p3;
reg   [26:0] x_new_48_reg_2193;
reg   [19:0] tmp_22_reg_2199;
reg   [18:0] tmp_23_reg_2204;
wire   [31:0] add_ln76_10_fu_1250_p2;
reg   [31:0] add_ln76_10_reg_2209;
wire   [26:0] x_new_49_fu_1281_p3;
reg   [26:0] x_new_49_reg_2214;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_pp0_stage25_11001;
wire   [27:0] y_26_fu_1288_p3;
reg   [27:0] y_26_reg_2220;
reg   [18:0] tmp_25_reg_2226;
reg   [17:0] tmp_26_reg_2231;
wire   [31:0] beta_16_fu_1322_p2;
reg   [31:0] beta_16_reg_2236;
reg   [0:0] tmp_27_reg_2242;
wire   [26:0] x_new_50_fu_1361_p3;
reg   [26:0] x_new_50_reg_2249;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_pp0_stage26_11001;
wire   [27:0] y_29_fu_1368_p3;
reg   [27:0] y_29_reg_2255;
reg   [17:0] tmp_28_reg_2261;
reg   [16:0] tmp_29_reg_2266;
wire   [31:0] select_ln61_12_fu_1395_p3;
reg   [31:0] select_ln61_12_reg_2271;
wire   [31:0] add_ln61_4_fu_1402_p2;
reg   [31:0] add_ln61_4_reg_2277;
wire   [31:0] beta_17_fu_1433_p2;
reg   [31:0] beta_17_reg_2282;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_pp0_stage27_11001;
wire   [27:0] y_32_fu_1437_p3;
reg   [27:0] y_32_reg_2287;
wire   [26:0] x_new_51_fu_1444_p3;
reg   [26:0] x_new_51_reg_2293;
reg   [0:0] tmp_30_reg_2299;
reg   [17:0] tmp_31_reg_2306;
reg   [16:0] tmp_32_reg_2311;
wire   [31:0] beta_18_fu_1479_p2;
reg   [31:0] beta_18_reg_2316;
wire   [31:0] beta_20_fu_1514_p3;
reg   [31:0] beta_20_reg_2321;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_pp0_stage28_11001;
wire   [27:0] y_35_fu_1520_p3;
reg   [27:0] y_35_reg_2326;
wire   [26:0] x_new_52_fu_1527_p3;
reg   [26:0] x_new_52_reg_2332;
reg   [0:0] tmp_33_reg_2338;
reg   [16:0] tmp_34_reg_2345;
reg   [15:0] tmp_35_reg_2350;
wire   [31:0] add_ln76_12_fu_1588_p2;
reg   [31:0] add_ln76_12_reg_2355;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_pp0_stage29_11001;
wire   [26:0] x_new_53_fu_1593_p3;
reg   [26:0] x_new_53_reg_2360;
wire   [27:0] y_38_fu_1600_p3;
reg   [27:0] y_38_reg_2366;
reg   [15:0] tmp_37_reg_2372;
reg   [14:0] tmp_38_reg_2377;
wire   [26:0] x_13_fu_1673_p3;
reg   [26:0] x_13_reg_2382;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_pp0_stage30_11001;
wire   [27:0] y_41_fu_1681_p3;
reg   [27:0] y_41_reg_2387;
wire  signed [31:0] sext_ln76_fu_1689_p1;
wire    ap_block_pp0_stage31_11001;
wire  signed [31:0] sext_ln27_3_fu_1694_p1;
wire   [31:0] zext_ln94_1_fu_1699_p1;
wire   [31:0] zext_ln94_2_fu_1704_p1;
reg   [31:0] mul_ln94_reg_2416;
wire    ap_CS_fsm_pp0_stage34;
wire    ap_block_pp0_stage34_11001;
reg   [31:0] mul_ln94_1_reg_2421;
reg   [31:0] mul_ln95_reg_2426;
reg   [31:0] mul_ln95_1_reg_2431;
wire   [31:0] result_cosh_fu_1709_p2;
reg   [31:0] result_cosh_reg_2436;
wire    ap_CS_fsm_pp0_stage35;
wire    ap_block_pp0_stage35_11001;
reg  signed [19:0] result_sinh_reg_2441;
wire    ap_CS_fsm_pp0_stage36;
wire    ap_block_pp0_stage36_11001;
reg   [9:0] addr_out_load_reg_2456;
wire   [63:0] zext_ln99_fu_1739_p1;
reg   [63:0] zext_ln99_reg_2461;
wire   [31:0] grp_fu_1730_p2;
reg   [31:0] result_reg_2466;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [31:0] ap_phi_mux_result_1_phi_fu_278_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_result_1_reg_273;
wire    ap_block_pp0_stage67_11001;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln94_fu_491_p1;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage5;
reg   [63:0] reuse_addr_reg_fu_188;
wire    ap_loop_init;
wire    ap_block_pp0_stage3;
reg   [31:0] reuse_reg_fu_192;
reg   [31:0] ap_sig_allocacmp_reuse_reg_load;
wire    ap_block_pp0_stage4;
reg   [9:0] i_fu_196;
reg   [9:0] ap_sig_allocacmp_i_3;
wire    ap_block_pp0_stage31;
wire   [17:0] tmp_fu_364_p4;
wire   [18:0] tmp_1_fu_384_p4;
wire   [19:0] tmp_2_fu_399_p4;
wire   [0:0] icmp_ln44_fu_393_p2;
wire   [0:0] xor_ln42_fu_414_p2;
wire   [2:0] zext_ln30_fu_426_p1;
wire   [0:0] xor_ln40_fu_436_p2;
wire   [0:0] and_ln42_fu_441_p2;
wire   [0:0] or_ln44_fu_453_p2;
wire   [2:0] select_ln44_fu_446_p3;
wire   [2:0] select_ln40_fu_429_p3;
wire   [2:0] index_trigo_1_fu_458_p3;
wire   [14:0] shl_ln_fu_466_p3;
wire   [31:0] zext_ln51_fu_474_p1;
wire    ap_block_pp0_stage7;
wire   [31:0] select_ln76_fu_497_p3;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage9;
wire   [31:0] select_ln76_1_fu_522_p3;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage11;
wire   [31:0] select_ln76_4_fu_547_p3;
wire    ap_block_pp0_stage12;
wire    ap_block_pp0_stage13;
wire   [31:0] select_ln61_fu_572_p3;
wire    ap_block_pp0_stage14;
wire   [31:0] beta_7_fu_597_p2;
wire    ap_block_pp0_stage15;
wire    ap_block_pp0_stage16;
wire   [31:0] select_ln76_7_fu_621_p3;
wire    ap_block_pp0_stage17;
wire    ap_block_pp0_stage18;
wire   [12:0] x_new_fu_646_p3;
wire   [12:0] x_new_1_fu_660_p3;
wire   [12:0] y_fu_653_p3;
wire   [12:0] y_1_fu_667_p3;
wire  signed [12:0] y_2_fu_681_p3;
wire   [9:0] trunc_ln1_fu_692_p4;
wire   [12:0] x_new_41_fu_674_p3;
wire   [9:0] lshr_ln_fu_706_p4;
wire  signed [12:0] sext_ln84_fu_702_p1;
wire  signed [13:0] sext_ln27_fu_688_p1;
wire   [13:0] zext_ln77_fu_716_p1;
wire   [12:0] x_new_3_fu_720_p2;
wire   [12:0] x_new_4_fu_732_p2;
wire   [13:0] y_3_fu_726_p2;
wire   [13:0] y_4_fu_738_p2;
wire   [31:0] select_ln76_10_fu_778_p3;
wire    ap_block_pp0_stage19;
wire  signed [12:0] sext_ln69_fu_798_p1;
wire   [13:0] zext_ln62_fu_801_p1;
wire   [13:0] y_6_fu_809_p2;
wire   [13:0] y_7_fu_819_p2;
wire   [12:0] x_new_6_fu_804_p2;
wire   [12:0] x_new_7_fu_814_p2;
wire    ap_block_pp0_stage20;
wire   [25:0] zext_ln28_fu_870_p1;
wire  signed [25:0] sext_ln69_1_fu_873_p1;
wire   [13:0] zext_ln62_1_fu_876_p1;
wire   [13:0] y_9_fu_885_p2;
wire   [13:0] y_10_fu_896_p2;
wire   [25:0] x_new_9_fu_879_p2;
wire   [25:0] x_new_10_fu_890_p2;
wire    ap_block_pp0_stage21;
wire  signed [26:0] sext_ln28_fu_954_p1;
wire  signed [26:0] sext_ln84_1_fu_957_p1;
wire  signed [26:0] sext_ln27_1_fu_951_p1;
wire  signed [26:0] sext_ln77_fu_960_p1;
wire   [26:0] x_new_12_fu_963_p2;
wire   [26:0] x_new_13_fu_975_p2;
wire   [26:0] y_12_fu_969_p2;
wire   [26:0] y_13_fu_981_p2;
wire   [31:0] beta_13_fu_1021_p2;
wire    ap_block_pp0_stage22;
wire  signed [26:0] sext_ln84_2_fu_1040_p1;
wire  signed [26:0] sext_ln77_1_fu_1043_p1;
wire   [26:0] x_new_15_fu_1046_p2;
wire   [26:0] x_new_16_fu_1056_p2;
wire   [26:0] y_15_fu_1051_p2;
wire   [26:0] y_16_fu_1061_p2;
wire    ap_block_pp0_stage23;
wire  signed [26:0] sext_ln69_2_fu_1105_p1;
wire  signed [26:0] sext_ln62_fu_1108_p1;
wire   [26:0] y_18_fu_1116_p2;
wire   [26:0] y_19_fu_1126_p2;
wire   [26:0] x_new_18_fu_1111_p2;
wire   [26:0] x_new_19_fu_1121_p2;
wire   [31:0] select_ln76_13_fu_1165_p3;
wire    ap_block_pp0_stage24;
wire  signed [26:0] sext_ln69_3_fu_1188_p1;
wire  signed [27:0] sext_ln27_2_fu_1185_p1;
wire  signed [27:0] sext_ln62_1_fu_1191_p1;
wire   [27:0] y_21_fu_1199_p2;
wire   [27:0] y_22_fu_1210_p2;
wire   [26:0] x_new_21_fu_1194_p2;
wire   [26:0] x_new_22_fu_1205_p2;
wire    ap_block_pp0_stage25;
wire  signed [26:0] sext_ln84_3_fu_1255_p1;
wire  signed [27:0] sext_ln77_2_fu_1258_p1;
wire   [26:0] x_new_24_fu_1261_p2;
wire   [26:0] x_new_25_fu_1271_p2;
wire   [27:0] y_24_fu_1266_p2;
wire   [27:0] y_25_fu_1276_p2;
wire   [31:0] select_ln76_16_fu_1315_p3;
wire    ap_block_pp0_stage26;
wire  signed [26:0] sext_ln84_4_fu_1335_p1;
wire  signed [27:0] sext_ln77_3_fu_1338_p1;
wire   [26:0] x_new_27_fu_1341_p2;
wire   [26:0] x_new_28_fu_1351_p2;
wire   [27:0] y_27_fu_1346_p2;
wire   [27:0] y_28_fu_1356_p2;
wire    ap_block_pp0_stage27;
wire  signed [26:0] sext_ln69_4_fu_1407_p1;
wire  signed [27:0] sext_ln62_2_fu_1410_p1;
wire   [27:0] y_30_fu_1418_p2;
wire   [27:0] y_31_fu_1428_p2;
wire   [26:0] x_new_30_fu_1413_p2;
wire   [26:0] x_new_31_fu_1423_p2;
wire    ap_block_pp0_stage28;
wire  signed [26:0] sext_ln69_5_fu_1483_p1;
wire  signed [27:0] sext_ln62_3_fu_1486_p1;
wire   [31:0] beta_19_fu_1509_p2;
wire   [27:0] y_33_fu_1494_p2;
wire   [27:0] y_34_fu_1504_p2;
wire   [26:0] x_new_33_fu_1489_p2;
wire   [26:0] x_new_34_fu_1499_p2;
wire    ap_block_pp0_stage29;
wire  signed [26:0] sext_ln84_5_fu_1562_p1;
wire  signed [27:0] sext_ln77_4_fu_1565_p1;
wire   [26:0] x_new_36_fu_1568_p2;
wire   [26:0] x_new_37_fu_1578_p2;
wire   [27:0] y_36_fu_1573_p2;
wire   [27:0] y_37_fu_1583_p2;
wire    ap_block_pp0_stage30;
wire   [31:0] select_ln76_19_fu_1627_p3;
wire   [31:0] beta_21_fu_1634_p2;
wire  signed [26:0] sext_ln84_6_fu_1647_p1;
wire  signed [27:0] sext_ln77_5_fu_1650_p1;
wire   [0:0] tmp_36_fu_1639_p3;
wire   [26:0] x_new_39_fu_1653_p2;
wire   [26:0] x_new_40_fu_1663_p2;
wire   [27:0] y_39_fu_1658_p2;
wire   [27:0] y_40_fu_1668_p2;
wire    ap_block_pp0_stage35;
wire   [31:0] add_ln95_fu_1713_p2;
wire    ap_block_pp0_stage36;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [67:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_pp0_stage23_subdone;
wire    ap_block_pp0_stage24_subdone;
wire    ap_block_pp0_stage25_subdone;
wire    ap_block_pp0_stage26_subdone;
wire    ap_block_pp0_stage27_subdone;
wire    ap_block_pp0_stage28_subdone;
wire    ap_block_pp0_stage29_subdone;
wire    ap_block_pp0_stage30_subdone;
wire    ap_block_pp0_stage31_subdone;
wire    ap_block_pp0_stage32_subdone;
wire    ap_block_pp0_stage33_subdone;
wire    ap_block_pp0_stage34_subdone;
wire    ap_block_pp0_stage35_subdone;
wire    ap_block_pp0_stage36_subdone;
wire    ap_block_pp0_stage37_subdone;
wire    ap_block_pp0_stage38_subdone;
wire    ap_block_pp0_stage39_subdone;
wire    ap_block_pp0_stage40_subdone;
wire    ap_block_pp0_stage41_subdone;
wire    ap_block_pp0_stage42_subdone;
wire    ap_block_pp0_stage43_subdone;
wire    ap_block_pp0_stage44_subdone;
wire    ap_block_pp0_stage45_subdone;
wire    ap_block_pp0_stage46_subdone;
wire    ap_block_pp0_stage47_subdone;
wire    ap_block_pp0_stage48_subdone;
wire    ap_block_pp0_stage49_subdone;
wire    ap_block_pp0_stage50_subdone;
wire    ap_block_pp0_stage51_subdone;
wire    ap_block_pp0_stage52_subdone;
wire    ap_block_pp0_stage53_subdone;
wire    ap_block_pp0_stage54_subdone;
wire    ap_block_pp0_stage55_subdone;
wire    ap_block_pp0_stage56_subdone;
wire    ap_block_pp0_stage57_subdone;
wire    ap_block_pp0_stage58_subdone;
wire    ap_block_pp0_stage59_subdone;
wire    ap_block_pp0_stage60_subdone;
wire    ap_block_pp0_stage61_subdone;
wire    ap_block_pp0_stage62_subdone;
wire    ap_block_pp0_stage63_subdone;
wire    ap_block_pp0_stage64_subdone;
wire    ap_block_pp0_stage65_subdone;
wire    ap_block_pp0_stage66_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_731;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 68'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 reuse_addr_reg_fu_188 = 64'd0;
#0 reuse_reg_fu_192 = 32'd0;
#0 i_fu_196 = 10'd0;
#0 ap_done_reg = 1'b0;
end

main_sdiv_32ns_20s_32_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 32 ))
sdiv_32ns_20s_32_36_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(result_cosh_reg_2436),
    .din1(result_sinh_reg_2441),
    .ce(1'b1),
    .dout(grp_fu_1730_p2)
);

main_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage5),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage5)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage67) & (1'b0 == ap_block_pp0_stage67_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_fu_196 <= 10'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage67) & (icmp_ln33_reg_1773 == 1'd0) & (1'b0 == ap_block_pp0_stage67_11001))) begin
        i_fu_196 <= add_ln33_reg_1777;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_731)) begin
        if (((icmp_ln37_reg_1826 == 1'd0) & (icmp_ln33_reg_1773_pp0_iter1_reg == 1'd0))) begin
            result_1_reg_273 <= result_reg_2466;
        end else if ((1'b1 == 1'b1)) begin
            result_1_reg_273 <= ap_phi_reg_pp0_iter1_result_1_reg_273;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        reuse_addr_reg_fu_188 <= 64'd18446744073709551615;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        reuse_addr_reg_fu_188 <= zext_ln99_fu_1739_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        reuse_reg_fu_192 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        reuse_reg_fu_192 <= ap_phi_mux_result_1_phi_fu_278_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        A_load_reg_1807 <= A_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln33_reg_1777 <= add_ln33_fu_326_p2;
        icmp_ln33_reg_1773 <= icmp_ln33_fu_320_p2;
        icmp_ln33_reg_1773_pp0_iter1_reg <= icmp_ln33_reg_1773;
        zext_ln33_reg_1782[9 : 0] <= zext_ln33_fu_332_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001))) begin
        add_ln61_2_reg_2051 <= add_ln61_2_fu_865_p2;
        select_ln61_6_reg_2045[2] <= select_ln61_6_fu_858_p3[2];
select_ln61_6_reg_2045[6 : 5] <= select_ln61_6_fu_858_p3[6 : 5];
        tmp_8_reg_2035 <= {{y_8_fu_824_p3[13:4]}};
        trunc_ln69_1_cast_reg_2040 <= {{x_new_43_fu_831_p3[12:4]}};
        x_new_43_reg_2030 <= x_new_43_fu_831_p3;
        y_8_reg_2024 <= y_8_fu_824_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001))) begin
        add_ln61_4_reg_2277 <= add_ln61_4_fu_1402_p2;
        select_ln61_12_reg_2271[3] <= select_ln61_12_fu_1395_p3[3];
        tmp_28_reg_2261 <= {{y_29_fu_1368_p3[27:10]}};
        tmp_29_reg_2266 <= {{x_new_50_fu_1361_p3[26:10]}};
        x_new_50_reg_2249 <= x_new_50_fu_1361_p3;
        y_29_reg_2255 <= y_29_fu_1368_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        add_ln61_reg_1933 <= add_ln61_fu_567_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001))) begin
        add_ln76_10_reg_2209 <= add_ln76_10_fu_1250_p2;
        tmp_22_reg_2199 <= {{y_23_fu_1216_p3[27:8]}};
        tmp_23_reg_2204 <= {{x_new_48_fu_1223_p3[26:8]}};
        x_new_48_reg_2193 <= x_new_48_fu_1223_p3;
        y_23_reg_2187 <= y_23_fu_1216_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001))) begin
        add_ln76_12_reg_2355 <= add_ln76_12_fu_1588_p2;
        tmp_37_reg_2372 <= {{y_38_fu_1600_p3[27:12]}};
        tmp_38_reg_2377 <= {{x_new_53_fu_1593_p3[26:12]}};
        x_new_53_reg_2360 <= x_new_53_fu_1593_p3;
        y_38_reg_2366 <= y_38_fu_1600_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        add_ln76_2_reg_1915 <= add_ln76_2_fu_542_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001))) begin
        add_ln76_4_reg_1967 <= add_ln76_4_fu_616_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001))) begin
        add_ln76_6_reg_1984 <= add_ln76_6_fu_641_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001))) begin
        add_ln76_8_reg_2149 <= add_ln76_8_fu_1100_p2;
        tmp_16_reg_2139 <= {{y_17_fu_1073_p3[26:7]}};
        tmp_17_reg_2144 <= {{x_new_46_fu_1066_p3[26:7]}};
        x_new_46_reg_2127 <= x_new_46_fu_1066_p3;
        y_17_reg_2133 <= y_17_fu_1073_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        add_ln76_reg_1898 <= add_ln76_fu_517_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        addr_cmp_reg_1812 <= addr_cmp_fu_344_p2;
        result_reg_2466 <= grp_fu_1730_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        addr_in_load_reg_1792 <= addr_in_q0;
        addr_out_load_reg_2456 <= addr_out_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        and_ln44_reg_1846 <= and_ln44_fu_420_p2;
        icmp_ln40_reg_1830 <= icmp_ln40_fu_373_p2;
        icmp_ln42_reg_1836 <= icmp_ln42_fu_379_p2;
        index_trigo_reg_1841 <= index_trigo_fu_408_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001))) begin
        beta_10_reg_2011 <= beta_10_fu_785_p2;
        tmp_15_reg_2017 <= beta_10_fu_785_p2[32'd31];
        trunc_ln2_reg_2001 <= {{y_5_fu_751_p3[13:4]}};
        trunc_ln3_cast_reg_2006 <= {{x_new_42_fu_744_p3[12:4]}};
        x_new_42_reg_1989 <= x_new_42_fu_744_p3;
        y_5_reg_1995 <= y_5_fu_751_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001))) begin
        beta_11_reg_2076 <= beta_11_fu_935_p2;
        beta_12_reg_2088 <= beta_12_fu_947_p2;
        tmp_10_reg_2066 <= {{y_11_fu_901_p3[13:5]}};
        tmp_11_reg_2071 <= {{x_new_44_fu_908_p3[25:5]}};
        tmp_18_reg_2081 <= beta_11_fu_935_p2[32'd31];
        x_new_44_reg_2061 <= x_new_44_fu_908_p3;
        y_11_reg_2056 <= y_11_fu_901_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001))) begin
        beta_14_reg_2115 <= beta_14_fu_1026_p3;
        tmp_13_reg_2105 <= {{y_14_fu_994_p3[26:6]}};
        tmp_14_reg_2110 <= {{x_new_45_fu_987_p3[26:6]}};
        tmp_21_reg_2120 <= beta_14_fu_1026_p3[32'd31];
        x_new_45_reg_2093 <= x_new_45_fu_987_p3;
        y_14_reg_2099 <= y_14_fu_994_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        beta_15_reg_2175 <= beta_15_fu_1172_p2;
        tmp_19_reg_2165 <= {{y_20_fu_1131_p3[26:7]}};
        tmp_20_reg_2170 <= {{x_new_47_fu_1138_p3[26:7]}};
        tmp_24_reg_2180 <= beta_15_fu_1172_p2[32'd31];
        x_new_47_reg_2159 <= x_new_47_fu_1138_p3;
        y_20_reg_2154 <= y_20_fu_1131_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001))) begin
        beta_16_reg_2236 <= beta_16_fu_1322_p2;
        tmp_25_reg_2226 <= {{y_26_fu_1288_p3[27:9]}};
        tmp_26_reg_2231 <= {{x_new_49_fu_1281_p3[26:9]}};
        tmp_27_reg_2242 <= beta_16_fu_1322_p2[32'd31];
        x_new_49_reg_2214 <= x_new_49_fu_1281_p3;
        y_26_reg_2220 <= y_26_fu_1288_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001))) begin
        beta_17_reg_2282 <= beta_17_fu_1433_p2;
        beta_18_reg_2316 <= beta_18_fu_1479_p2;
        tmp_30_reg_2299 <= beta_17_fu_1433_p2[32'd31];
        tmp_31_reg_2306 <= {{y_32_fu_1437_p3[27:10]}};
        tmp_32_reg_2311 <= {{x_new_51_fu_1444_p3[26:10]}};
        x_new_51_reg_2293 <= x_new_51_fu_1444_p3;
        y_32_reg_2287 <= y_32_fu_1437_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        beta_1_reg_1852 <= beta_1_fu_478_p2;
        tmp_3_reg_1857 <= beta_1_fu_478_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001))) begin
        beta_20_reg_2321 <= beta_20_fu_1514_p3;
        tmp_33_reg_2338 <= beta_20_fu_1514_p3[32'd31];
        tmp_34_reg_2345 <= {{y_35_fu_1520_p3[27:11]}};
        tmp_35_reg_2350 <= {{x_new_52_fu_1527_p3[26:11]}};
        x_new_52_reg_2332 <= x_new_52_fu_1527_p3;
        y_35_reg_2326 <= y_35_fu_1520_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        beta_2_reg_1876 <= beta_2_fu_504_p2;
        cosh_load_reg_1893 <= cosh_q0;
        sinh_load_reg_1888 <= sinh_q0;
        tmp_4_reg_1881 <= beta_2_fu_504_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        beta_3_reg_1903 <= beta_3_fu_529_p2;
        tmp_5_reg_1908 <= beta_3_fu_529_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        beta_4_reg_1920 <= beta_4_fu_554_p2;
        tmp_6_reg_1926 <= beta_4_fu_554_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001))) begin
        beta_5_reg_1938 <= beta_5_fu_579_p2;
        beta_6_reg_1950 <= beta_6_fu_592_p2;
        tmp_7_reg_1943 <= beta_5_fu_579_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001))) begin
        beta_8_reg_1955 <= beta_8_fu_602_p3;
        tmp_9_reg_1960 <= beta_8_fu_602_p3[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001))) begin
        beta_9_reg_1972 <= beta_9_fu_628_p2;
        tmp_12_reg_1977 <= beta_9_fu_628_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        beta_reg_1817 <= beta_fu_352_p3;
        icmp_ln37_reg_1826 <= icmp_ln37_fu_358_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage34) & (1'b0 == ap_block_pp0_stage34_11001))) begin
        mul_ln94_1_reg_2421 <= grp_fu_114_p_dout0;
        mul_ln94_reg_2416 <= grp_fu_122_p_dout0;
        mul_ln95_1_reg_2431 <= grp_fu_118_p_dout0;
        mul_ln95_reg_2426 <= grp_fu_126_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage35) & (1'b0 == ap_block_pp0_stage35_11001))) begin
        result_cosh_reg_2436 <= result_cosh_fu_1709_p2;
        result_sinh_reg_2441 <= {{add_ln95_fu_1713_p2[31:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001))) begin
        x_13_reg_2382 <= x_13_fu_1673_p3;
        y_41_reg_2387 <= y_41_fu_1681_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        zext_ln34_reg_1797[9 : 0] <= zext_ln34_fu_337_p1[9 : 0];
        zext_ln99_reg_2461[9 : 0] <= zext_ln99_fu_1739_p1[9 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        A_address0 = zext_ln99_reg_2461;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        A_address0 = zext_ln34_fu_337_p1;
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        A_we0 = 1'b1;
    end else begin
        A_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        addr_in_ce0 = 1'b1;
    end else begin
        addr_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        addr_out_ce0 = 1'b1;
    end else begin
        addr_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln33_reg_1773 == 1'd1) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
        ap_condition_exit_pp0_iter0_stage5 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_1826 == 1'd0) & (icmp_ln33_reg_1773_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_result_1_phi_fu_278_p4 = result_reg_2466;
    end else begin
        ap_phi_mux_result_1_phi_fu_278_p4 = 32'd4096;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage67) & (1'b0 == ap_block_pp0_stage67_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_3 = 10'd0;
    end else begin
        ap_sig_allocacmp_i_3 = i_fu_196;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        ap_sig_allocacmp_reuse_reg_load = ap_phi_mux_result_1_phi_fu_278_p4;
    end else begin
        ap_sig_allocacmp_reuse_reg_load = reuse_reg_fu_192;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        cosh_ce0 = 1'b1;
    end else begin
        cosh_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        sinh_ce0 = 1'b1;
    end else begin
        sinh_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage5)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_pp0_stage32 : begin
            if ((1'b0 == ap_block_pp0_stage32_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end
        end
        ap_ST_fsm_pp0_stage33 : begin
            if ((1'b0 == ap_block_pp0_stage33_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end
        end
        ap_ST_fsm_pp0_stage34 : begin
            if ((1'b0 == ap_block_pp0_stage34_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end
        end
        ap_ST_fsm_pp0_stage35 : begin
            if ((1'b0 == ap_block_pp0_stage35_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end
        end
        ap_ST_fsm_pp0_stage36 : begin
            if ((1'b0 == ap_block_pp0_stage36_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end
        end
        ap_ST_fsm_pp0_stage37 : begin
            if ((1'b0 == ap_block_pp0_stage37_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end
        end
        ap_ST_fsm_pp0_stage38 : begin
            if ((1'b0 == ap_block_pp0_stage38_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end
        end
        ap_ST_fsm_pp0_stage39 : begin
            if ((1'b0 == ap_block_pp0_stage39_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end
        end
        ap_ST_fsm_pp0_stage40 : begin
            if ((1'b0 == ap_block_pp0_stage40_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end
        end
        ap_ST_fsm_pp0_stage41 : begin
            if ((1'b0 == ap_block_pp0_stage41_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end
        end
        ap_ST_fsm_pp0_stage42 : begin
            if ((1'b0 == ap_block_pp0_stage42_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end
        end
        ap_ST_fsm_pp0_stage43 : begin
            if ((1'b0 == ap_block_pp0_stage43_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end
        end
        ap_ST_fsm_pp0_stage44 : begin
            if ((1'b0 == ap_block_pp0_stage44_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end
        end
        ap_ST_fsm_pp0_stage45 : begin
            if ((1'b0 == ap_block_pp0_stage45_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end
        end
        ap_ST_fsm_pp0_stage46 : begin
            if ((1'b0 == ap_block_pp0_stage46_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end
        end
        ap_ST_fsm_pp0_stage47 : begin
            if ((1'b0 == ap_block_pp0_stage47_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end
        end
        ap_ST_fsm_pp0_stage48 : begin
            if ((1'b0 == ap_block_pp0_stage48_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end
        end
        ap_ST_fsm_pp0_stage49 : begin
            if ((1'b0 == ap_block_pp0_stage49_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage49;
            end
        end
        ap_ST_fsm_pp0_stage50 : begin
            if ((1'b0 == ap_block_pp0_stage50_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage50;
            end
        end
        ap_ST_fsm_pp0_stage51 : begin
            if ((1'b0 == ap_block_pp0_stage51_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage51;
            end
        end
        ap_ST_fsm_pp0_stage52 : begin
            if ((1'b0 == ap_block_pp0_stage52_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage52;
            end
        end
        ap_ST_fsm_pp0_stage53 : begin
            if ((1'b0 == ap_block_pp0_stage53_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage53;
            end
        end
        ap_ST_fsm_pp0_stage54 : begin
            if ((1'b0 == ap_block_pp0_stage54_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage54;
            end
        end
        ap_ST_fsm_pp0_stage55 : begin
            if ((1'b0 == ap_block_pp0_stage55_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage55;
            end
        end
        ap_ST_fsm_pp0_stage56 : begin
            if ((1'b0 == ap_block_pp0_stage56_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage56;
            end
        end
        ap_ST_fsm_pp0_stage57 : begin
            if ((1'b0 == ap_block_pp0_stage57_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage57;
            end
        end
        ap_ST_fsm_pp0_stage58 : begin
            if ((1'b0 == ap_block_pp0_stage58_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage58;
            end
        end
        ap_ST_fsm_pp0_stage59 : begin
            if ((1'b0 == ap_block_pp0_stage59_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage59;
            end
        end
        ap_ST_fsm_pp0_stage60 : begin
            if ((1'b0 == ap_block_pp0_stage60_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage60;
            end
        end
        ap_ST_fsm_pp0_stage61 : begin
            if ((1'b0 == ap_block_pp0_stage61_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage61;
            end
        end
        ap_ST_fsm_pp0_stage62 : begin
            if ((1'b0 == ap_block_pp0_stage62_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage62;
            end
        end
        ap_ST_fsm_pp0_stage63 : begin
            if ((1'b0 == ap_block_pp0_stage63_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage63;
            end
        end
        ap_ST_fsm_pp0_stage64 : begin
            if ((1'b0 == ap_block_pp0_stage64_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage64;
            end
        end
        ap_ST_fsm_pp0_stage65 : begin
            if ((1'b0 == ap_block_pp0_stage65_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage65;
            end
        end
        ap_ST_fsm_pp0_stage66 : begin
            if ((1'b0 == ap_block_pp0_stage66_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage66;
            end
        end
        ap_ST_fsm_pp0_stage67 : begin
            if ((1'b0 == ap_block_pp0_stage67_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage67;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_d0 = result_1_reg_273;

assign add_ln33_fu_326_p2 = (ap_sig_allocacmp_i_3 + 10'd1);

assign add_ln61_2_fu_865_p2 = ($signed(beta_10_reg_2011) + $signed(32'd4294967246));

assign add_ln61_4_fu_1402_p2 = ($signed(beta_16_reg_2236) + $signed(32'd4294967292));

assign add_ln61_fu_567_p2 = ($signed(beta_4_reg_1920) + $signed(32'd4294967040));

assign add_ln76_10_fu_1250_p2 = ($signed(beta_15_reg_2175) + $signed(32'd4294967288));

assign add_ln76_12_fu_1588_p2 = ($signed(beta_20_reg_2321) + $signed(32'd4294967294));

assign add_ln76_2_fu_542_p2 = ($signed(beta_3_reg_1903) + $signed(32'd4294966782));

assign add_ln76_4_fu_616_p2 = ($signed(beta_8_reg_1955) + $signed(32'd4294967168));

assign add_ln76_6_fu_641_p2 = ($signed(beta_9_reg_1972) + $signed(32'd4294967196));

assign add_ln76_8_fu_1100_p2 = ($signed(beta_14_reg_2115) + $signed(32'd4294967280));

assign add_ln76_fu_517_p2 = ($signed(beta_2_reg_1876) + $signed(32'd4294966250));

assign add_ln95_fu_1713_p2 = (mul_ln95_1_reg_2431 + mul_ln95_reg_2426);

assign addr_cmp_fu_344_p2 = ((reuse_addr_reg_fu_188 == zext_ln34_reg_1797) ? 1'b1 : 1'b0);

assign addr_in_address0 = zext_ln33_fu_332_p1;

assign addr_out_address0 = zext_ln33_reg_1782;

assign and_ln42_fu_441_p2 = (xor_ln40_fu_436_p2 & icmp_ln42_reg_1836);

assign and_ln44_fu_420_p2 = (xor_ln42_fu_414_p2 & icmp_ln44_fu_393_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage34 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp0_stage35 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp0_stage36 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage67 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage40_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage41_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage43_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage44_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage45_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage46_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage47_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage48_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage49_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage50_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage51_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage52_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage53_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage54_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage55_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage56_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage57_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage58_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage59_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage60_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage61_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage62_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage63_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage64_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage65_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage66_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage67_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage67_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_731 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage5;

assign ap_phi_reg_pp0_iter1_result_1_reg_273 = 32'd4096;

assign beta_10_fu_785_p2 = (add_ln76_6_reg_1984 + select_ln76_10_fu_778_p3);

assign beta_11_fu_935_p2 = (add_ln61_2_reg_2051 + select_ln61_6_reg_2045);

assign beta_12_fu_947_p2 = (beta_10_reg_2011 + select_ln61_6_reg_2045);

assign beta_13_fu_1021_p2 = ($signed(beta_11_reg_2076) + $signed(32'd4294967246));

assign beta_14_fu_1026_p3 = ((tmp_18_reg_2081[0:0] == 1'b1) ? beta_12_reg_2088 : beta_13_fu_1021_p2);

assign beta_15_fu_1172_p2 = (add_ln76_8_reg_2149 + select_ln76_13_fu_1165_p3);

assign beta_16_fu_1322_p2 = (add_ln76_10_reg_2209 + select_ln76_16_fu_1315_p3);

assign beta_17_fu_1433_p2 = (add_ln61_4_reg_2277 + select_ln61_12_reg_2271);

assign beta_18_fu_1479_p2 = (beta_16_reg_2236 + select_ln61_12_reg_2271);

assign beta_19_fu_1509_p2 = ($signed(beta_17_reg_2282) + $signed(32'd4294967292));

assign beta_1_fu_478_p2 = (beta_reg_1817 - zext_ln51_fu_474_p1);

assign beta_20_fu_1514_p3 = ((tmp_30_reg_2299[0:0] == 1'b1) ? beta_18_reg_2316 : beta_19_fu_1509_p2);

assign beta_21_fu_1634_p2 = (add_ln76_12_reg_2355 + select_ln76_19_fu_1627_p3);

assign beta_2_fu_504_p2 = (select_ln76_fu_497_p3 + beta_1_reg_1852);

assign beta_3_fu_529_p2 = (add_ln76_reg_1898 + select_ln76_1_fu_522_p3);

assign beta_4_fu_554_p2 = (add_ln76_2_reg_1915 + select_ln76_4_fu_547_p3);

assign beta_5_fu_579_p2 = (add_ln61_reg_1933 + select_ln61_fu_572_p3);

assign beta_6_fu_592_p2 = (beta_4_reg_1920 + select_ln61_fu_572_p3);

assign beta_7_fu_597_p2 = ($signed(beta_5_reg_1938) + $signed(32'd4294967040));

assign beta_8_fu_602_p3 = ((tmp_7_reg_1943[0:0] == 1'b1) ? beta_6_reg_1950 : beta_7_fu_597_p2);

assign beta_9_fu_628_p2 = (add_ln76_4_reg_1967 + select_ln76_7_fu_621_p3);

assign beta_fu_352_p3 = ((addr_cmp_reg_1812[0:0] == 1'b1) ? ap_sig_allocacmp_reuse_reg_load : A_load_reg_1807);

assign cosh_address0 = zext_ln94_fu_491_p1;

assign grp_fu_114_p_ce = 1'b1;

assign grp_fu_114_p_din0 = zext_ln94_1_fu_1699_p1;

assign grp_fu_114_p_din1 = sext_ln76_fu_1689_p1;

assign grp_fu_118_p_ce = 1'b1;

assign grp_fu_118_p_din0 = zext_ln94_2_fu_1704_p1;

assign grp_fu_118_p_din1 = sext_ln76_fu_1689_p1;

assign grp_fu_122_p_ce = 1'b1;

assign grp_fu_122_p_din0 = zext_ln94_2_fu_1704_p1;

assign grp_fu_122_p_din1 = sext_ln27_3_fu_1694_p1;

assign grp_fu_126_p_ce = 1'b1;

assign grp_fu_126_p_din0 = zext_ln94_1_fu_1699_p1;

assign grp_fu_126_p_din1 = sext_ln27_3_fu_1694_p1;

assign icmp_ln33_fu_320_p2 = ((ap_sig_allocacmp_i_3 == 10'd1000) ? 1'b1 : 1'b0);

assign icmp_ln37_fu_358_p2 = (($signed(beta_fu_352_p3) > $signed(32'd20479)) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_373_p2 = (($signed(tmp_fu_364_p4) > $signed(18'd0)) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_379_p2 = (($signed(beta_reg_1817) > $signed(32'd12287)) ? 1'b1 : 1'b0);

assign icmp_ln44_fu_393_p2 = (($signed(tmp_1_fu_384_p4) > $signed(19'd0)) ? 1'b1 : 1'b0);

assign index_trigo_1_fu_458_p3 = ((or_ln44_fu_453_p2[0:0] == 1'b1) ? select_ln44_fu_446_p3 : select_ln40_fu_429_p3);

assign index_trigo_fu_408_p2 = (($signed(tmp_2_fu_399_p4) > $signed(20'd0)) ? 1'b1 : 1'b0);

assign lshr_ln_fu_706_p4 = {{x_new_41_fu_674_p3[12:3]}};

assign or_ln44_fu_453_p2 = (and_ln44_reg_1846 | and_ln42_fu_441_p2);

assign result_cosh_fu_1709_p2 = (mul_ln94_reg_2416 + mul_ln94_1_reg_2421);

assign select_ln40_fu_429_p3 = ((icmp_ln40_reg_1830[0:0] == 1'b1) ? 3'd4 : zext_ln30_fu_426_p1);

assign select_ln44_fu_446_p3 = ((and_ln44_reg_1846[0:0] == 1'b1) ? 3'd2 : 3'd3);

assign select_ln61_12_fu_1395_p3 = ((tmp_27_reg_2242[0:0] == 1'b1) ? 32'd8 : 32'd0);

assign select_ln61_6_fu_858_p3 = ((tmp_15_reg_2017[0:0] == 1'b1) ? 32'd100 : 32'd0);

assign select_ln61_fu_572_p3 = ((tmp_6_reg_1926[0:0] == 1'b1) ? 32'd512 : 32'd0);

assign select_ln76_10_fu_778_p3 = ((tmp_12_reg_1977[0:0] == 1'b1) ? 32'd200 : 32'd0);

assign select_ln76_13_fu_1165_p3 = ((tmp_21_reg_2120[0:0] == 1'b1) ? 32'd32 : 32'd0);

assign select_ln76_16_fu_1315_p3 = ((tmp_24_reg_2180[0:0] == 1'b1) ? 32'd16 : 32'd0);

assign select_ln76_19_fu_1627_p3 = ((tmp_33_reg_2338[0:0] == 1'b1) ? 32'd4 : 32'd0);

assign select_ln76_1_fu_522_p3 = ((tmp_4_reg_1881[0:0] == 1'b1) ? 32'd2092 : 32'd0);

assign select_ln76_4_fu_547_p3 = ((tmp_5_reg_1908[0:0] == 1'b1) ? 32'd1028 : 32'd0);

assign select_ln76_7_fu_621_p3 = ((tmp_9_reg_1960[0:0] == 1'b1) ? 32'd256 : 32'd0);

assign select_ln76_fu_497_p3 = ((tmp_3_reg_1857[0:0] == 1'b1) ? 32'd2249 : 32'd4294965047);

assign sext_ln27_1_fu_951_p1 = y_11_reg_2056;

assign sext_ln27_2_fu_1185_p1 = y_20_reg_2154;

assign sext_ln27_3_fu_1694_p1 = $signed(y_41_reg_2387);

assign sext_ln27_fu_688_p1 = y_2_fu_681_p3;

assign sext_ln28_fu_954_p1 = x_new_44_reg_2061;

assign sext_ln62_1_fu_1191_p1 = $signed(tmp_20_reg_2170);

assign sext_ln62_2_fu_1410_p1 = $signed(tmp_29_reg_2266);

assign sext_ln62_3_fu_1486_p1 = $signed(tmp_32_reg_2311);

assign sext_ln62_fu_1108_p1 = $signed(tmp_17_reg_2144);

assign sext_ln69_1_fu_873_p1 = $signed(tmp_8_reg_2035);

assign sext_ln69_2_fu_1105_p1 = $signed(tmp_16_reg_2139);

assign sext_ln69_3_fu_1188_p1 = $signed(tmp_19_reg_2165);

assign sext_ln69_4_fu_1407_p1 = $signed(tmp_28_reg_2261);

assign sext_ln69_5_fu_1483_p1 = $signed(tmp_31_reg_2306);

assign sext_ln69_fu_798_p1 = $signed(trunc_ln2_reg_2001);

assign sext_ln76_fu_1689_p1 = $signed(x_13_reg_2382);

assign sext_ln77_1_fu_1043_p1 = $signed(tmp_14_reg_2110);

assign sext_ln77_2_fu_1258_p1 = $signed(tmp_23_reg_2204);

assign sext_ln77_3_fu_1338_p1 = $signed(tmp_26_reg_2231);

assign sext_ln77_4_fu_1565_p1 = $signed(tmp_35_reg_2350);

assign sext_ln77_5_fu_1650_p1 = $signed(tmp_38_reg_2377);

assign sext_ln77_fu_960_p1 = $signed(tmp_11_reg_2071);

assign sext_ln84_1_fu_957_p1 = $signed(tmp_10_reg_2066);

assign sext_ln84_2_fu_1040_p1 = $signed(tmp_13_reg_2105);

assign sext_ln84_3_fu_1255_p1 = $signed(tmp_22_reg_2199);

assign sext_ln84_4_fu_1335_p1 = $signed(tmp_25_reg_2226);

assign sext_ln84_5_fu_1562_p1 = $signed(tmp_34_reg_2345);

assign sext_ln84_6_fu_1647_p1 = $signed(tmp_37_reg_2372);

assign sext_ln84_fu_702_p1 = $signed(trunc_ln1_fu_692_p4);

assign shl_ln_fu_466_p3 = {{index_trigo_1_fu_458_p3}, {12'd0}};

assign sinh_address0 = zext_ln94_fu_491_p1;

assign tmp_1_fu_384_p4 = {{beta_reg_1817[31:13]}};

assign tmp_2_fu_399_p4 = {{beta_reg_1817[31:12]}};

assign tmp_36_fu_1639_p3 = beta_21_fu_1634_p2[32'd31];

assign tmp_fu_364_p4 = {{beta_reg_1817[31:14]}};

assign trunc_ln1_fu_692_p4 = {{y_2_fu_681_p3[12:3]}};

assign x_13_fu_1673_p3 = ((tmp_36_fu_1639_p3[0:0] == 1'b1) ? x_new_39_fu_1653_p2 : x_new_40_fu_1663_p2);

assign x_new_10_fu_890_p2 = ($signed(zext_ln28_fu_870_p1) + $signed(sext_ln69_1_fu_873_p1));

assign x_new_12_fu_963_p2 = ($signed(sext_ln28_fu_954_p1) - $signed(sext_ln84_1_fu_957_p1));

assign x_new_13_fu_975_p2 = ($signed(sext_ln28_fu_954_p1) + $signed(sext_ln84_1_fu_957_p1));

assign x_new_15_fu_1046_p2 = ($signed(x_new_45_reg_2093) - $signed(sext_ln84_2_fu_1040_p1));

assign x_new_16_fu_1056_p2 = ($signed(x_new_45_reg_2093) + $signed(sext_ln84_2_fu_1040_p1));

assign x_new_18_fu_1111_p2 = ($signed(x_new_46_reg_2127) - $signed(sext_ln69_2_fu_1105_p1));

assign x_new_19_fu_1121_p2 = ($signed(x_new_46_reg_2127) + $signed(sext_ln69_2_fu_1105_p1));

assign x_new_1_fu_660_p3 = ((tmp_3_reg_1857[0:0] == 1'b1) ? 13'd4327 : 13'd5563);

assign x_new_21_fu_1194_p2 = ($signed(x_new_47_reg_2159) - $signed(sext_ln69_3_fu_1188_p1));

assign x_new_22_fu_1205_p2 = ($signed(x_new_47_reg_2159) + $signed(sext_ln69_3_fu_1188_p1));

assign x_new_24_fu_1261_p2 = ($signed(x_new_48_reg_2193) - $signed(sext_ln84_3_fu_1255_p1));

assign x_new_25_fu_1271_p2 = ($signed(x_new_48_reg_2193) + $signed(sext_ln84_3_fu_1255_p1));

assign x_new_27_fu_1341_p2 = ($signed(x_new_49_reg_2214) - $signed(sext_ln84_4_fu_1335_p1));

assign x_new_28_fu_1351_p2 = ($signed(x_new_49_reg_2214) + $signed(sext_ln84_4_fu_1335_p1));

assign x_new_30_fu_1413_p2 = ($signed(x_new_50_reg_2249) - $signed(sext_ln69_4_fu_1407_p1));

assign x_new_31_fu_1423_p2 = ($signed(x_new_50_reg_2249) + $signed(sext_ln69_4_fu_1407_p1));

assign x_new_33_fu_1489_p2 = ($signed(x_new_51_reg_2293) - $signed(sext_ln69_5_fu_1483_p1));

assign x_new_34_fu_1499_p2 = ($signed(x_new_51_reg_2293) + $signed(sext_ln69_5_fu_1483_p1));

assign x_new_36_fu_1568_p2 = ($signed(x_new_52_reg_2332) - $signed(sext_ln84_5_fu_1562_p1));

assign x_new_37_fu_1578_p2 = ($signed(x_new_52_reg_2332) + $signed(sext_ln84_5_fu_1562_p1));

assign x_new_39_fu_1653_p2 = ($signed(x_new_53_reg_2360) - $signed(sext_ln84_6_fu_1647_p1));

assign x_new_3_fu_720_p2 = ($signed(x_new_41_fu_674_p3) - $signed(sext_ln84_fu_702_p1));

assign x_new_40_fu_1663_p2 = ($signed(x_new_53_reg_2360) + $signed(sext_ln84_6_fu_1647_p1));

assign x_new_41_fu_674_p3 = ((tmp_4_reg_1881[0:0] == 1'b1) ? x_new_fu_646_p3 : x_new_1_fu_660_p3);

assign x_new_42_fu_744_p3 = ((tmp_5_reg_1908[0:0] == 1'b1) ? x_new_3_fu_720_p2 : x_new_4_fu_732_p2);

assign x_new_43_fu_831_p3 = ((tmp_6_reg_1926[0:0] == 1'b1) ? x_new_6_fu_804_p2 : x_new_7_fu_814_p2);

assign x_new_44_fu_908_p3 = ((tmp_7_reg_1943[0:0] == 1'b1) ? x_new_9_fu_879_p2 : x_new_10_fu_890_p2);

assign x_new_45_fu_987_p3 = ((tmp_9_reg_1960[0:0] == 1'b1) ? x_new_12_fu_963_p2 : x_new_13_fu_975_p2);

assign x_new_46_fu_1066_p3 = ((tmp_12_reg_1977[0:0] == 1'b1) ? x_new_15_fu_1046_p2 : x_new_16_fu_1056_p2);

assign x_new_47_fu_1138_p3 = ((tmp_15_reg_2017[0:0] == 1'b1) ? x_new_18_fu_1111_p2 : x_new_19_fu_1121_p2);

assign x_new_48_fu_1223_p3 = ((tmp_18_reg_2081[0:0] == 1'b1) ? x_new_21_fu_1194_p2 : x_new_22_fu_1205_p2);

assign x_new_49_fu_1281_p3 = ((tmp_21_reg_2120[0:0] == 1'b1) ? x_new_24_fu_1261_p2 : x_new_25_fu_1271_p2);

assign x_new_4_fu_732_p2 = ($signed(x_new_41_fu_674_p3) + $signed(sext_ln84_fu_702_p1));

assign x_new_50_fu_1361_p3 = ((tmp_24_reg_2180[0:0] == 1'b1) ? x_new_27_fu_1341_p2 : x_new_28_fu_1351_p2);

assign x_new_51_fu_1444_p3 = ((tmp_27_reg_2242[0:0] == 1'b1) ? x_new_30_fu_1413_p2 : x_new_31_fu_1423_p2);

assign x_new_52_fu_1527_p3 = ((tmp_30_reg_2299[0:0] == 1'b1) ? x_new_33_fu_1489_p2 : x_new_34_fu_1499_p2);

assign x_new_53_fu_1593_p3 = ((tmp_33_reg_2338[0:0] == 1'b1) ? x_new_36_fu_1568_p2 : x_new_37_fu_1578_p2);

assign x_new_6_fu_804_p2 = ($signed(x_new_42_reg_1989) - $signed(sext_ln69_fu_798_p1));

assign x_new_7_fu_814_p2 = ($signed(x_new_42_reg_1989) + $signed(sext_ln69_fu_798_p1));

assign x_new_9_fu_879_p2 = ($signed(zext_ln28_fu_870_p1) - $signed(sext_ln69_1_fu_873_p1));

assign x_new_fu_646_p3 = ((tmp_3_reg_1857[0:0] == 1'b1) ? 13'd5563 : 13'd4327);

assign xor_ln40_fu_436_p2 = (icmp_ln40_reg_1830 ^ 1'd1);

assign xor_ln42_fu_414_p2 = (icmp_ln42_fu_379_p2 ^ 1'd1);

assign y_10_fu_896_p2 = (y_8_reg_2024 + zext_ln62_1_fu_876_p1);

assign y_11_fu_901_p3 = ((tmp_7_reg_1943[0:0] == 1'b1) ? y_9_fu_885_p2 : y_10_fu_896_p2);

assign y_12_fu_969_p2 = ($signed(sext_ln27_1_fu_951_p1) - $signed(sext_ln77_fu_960_p1));

assign y_13_fu_981_p2 = ($signed(sext_ln27_1_fu_951_p1) + $signed(sext_ln77_fu_960_p1));

assign y_14_fu_994_p3 = ((tmp_9_reg_1960[0:0] == 1'b1) ? y_12_fu_969_p2 : y_13_fu_981_p2);

assign y_15_fu_1051_p2 = ($signed(y_14_reg_2099) - $signed(sext_ln77_1_fu_1043_p1));

assign y_16_fu_1061_p2 = ($signed(y_14_reg_2099) + $signed(sext_ln77_1_fu_1043_p1));

assign y_17_fu_1073_p3 = ((tmp_12_reg_1977[0:0] == 1'b1) ? y_15_fu_1051_p2 : y_16_fu_1061_p2);

assign y_18_fu_1116_p2 = ($signed(y_17_reg_2133) - $signed(sext_ln62_fu_1108_p1));

assign y_19_fu_1126_p2 = ($signed(y_17_reg_2133) + $signed(sext_ln62_fu_1108_p1));

assign y_1_fu_667_p3 = ((tmp_3_reg_1857[0:0] == 1'b1) ? 13'd6956 : 13'd3708);

assign y_20_fu_1131_p3 = ((tmp_15_reg_2017[0:0] == 1'b1) ? y_18_fu_1116_p2 : y_19_fu_1126_p2);

assign y_21_fu_1199_p2 = ($signed(sext_ln27_2_fu_1185_p1) - $signed(sext_ln62_1_fu_1191_p1));

assign y_22_fu_1210_p2 = ($signed(sext_ln27_2_fu_1185_p1) + $signed(sext_ln62_1_fu_1191_p1));

assign y_23_fu_1216_p3 = ((tmp_18_reg_2081[0:0] == 1'b1) ? y_21_fu_1199_p2 : y_22_fu_1210_p2);

assign y_24_fu_1266_p2 = ($signed(y_23_reg_2187) - $signed(sext_ln77_2_fu_1258_p1));

assign y_25_fu_1276_p2 = ($signed(y_23_reg_2187) + $signed(sext_ln77_2_fu_1258_p1));

assign y_26_fu_1288_p3 = ((tmp_21_reg_2120[0:0] == 1'b1) ? y_24_fu_1266_p2 : y_25_fu_1276_p2);

assign y_27_fu_1346_p2 = ($signed(y_26_reg_2220) - $signed(sext_ln77_3_fu_1338_p1));

assign y_28_fu_1356_p2 = ($signed(y_26_reg_2220) + $signed(sext_ln77_3_fu_1338_p1));

assign y_29_fu_1368_p3 = ((tmp_24_reg_2180[0:0] == 1'b1) ? y_27_fu_1346_p2 : y_28_fu_1356_p2);

assign y_2_fu_681_p3 = ((tmp_4_reg_1881[0:0] == 1'b1) ? y_fu_653_p3 : y_1_fu_667_p3);

assign y_30_fu_1418_p2 = ($signed(y_29_reg_2255) - $signed(sext_ln62_2_fu_1410_p1));

assign y_31_fu_1428_p2 = ($signed(y_29_reg_2255) + $signed(sext_ln62_2_fu_1410_p1));

assign y_32_fu_1437_p3 = ((tmp_27_reg_2242[0:0] == 1'b1) ? y_30_fu_1418_p2 : y_31_fu_1428_p2);

assign y_33_fu_1494_p2 = ($signed(y_32_reg_2287) - $signed(sext_ln62_3_fu_1486_p1));

assign y_34_fu_1504_p2 = ($signed(y_32_reg_2287) + $signed(sext_ln62_3_fu_1486_p1));

assign y_35_fu_1520_p3 = ((tmp_30_reg_2299[0:0] == 1'b1) ? y_33_fu_1494_p2 : y_34_fu_1504_p2);

assign y_36_fu_1573_p2 = ($signed(y_35_reg_2326) - $signed(sext_ln77_4_fu_1565_p1));

assign y_37_fu_1583_p2 = ($signed(y_35_reg_2326) + $signed(sext_ln77_4_fu_1565_p1));

assign y_38_fu_1600_p3 = ((tmp_33_reg_2338[0:0] == 1'b1) ? y_36_fu_1573_p2 : y_37_fu_1583_p2);

assign y_39_fu_1658_p2 = ($signed(y_38_reg_2366) - $signed(sext_ln77_5_fu_1650_p1));

assign y_3_fu_726_p2 = ($signed(sext_ln27_fu_688_p1) - $signed(zext_ln77_fu_716_p1));

assign y_40_fu_1668_p2 = ($signed(y_38_reg_2366) + $signed(sext_ln77_5_fu_1650_p1));

assign y_41_fu_1681_p3 = ((tmp_36_fu_1639_p3[0:0] == 1'b1) ? y_39_fu_1658_p2 : y_40_fu_1668_p2);

assign y_4_fu_738_p2 = ($signed(sext_ln27_fu_688_p1) + $signed(zext_ln77_fu_716_p1));

assign y_5_fu_751_p3 = ((tmp_5_reg_1908[0:0] == 1'b1) ? y_3_fu_726_p2 : y_4_fu_738_p2);

assign y_6_fu_809_p2 = (y_5_reg_1995 - zext_ln62_fu_801_p1);

assign y_7_fu_819_p2 = (y_5_reg_1995 + zext_ln62_fu_801_p1);

assign y_8_fu_824_p3 = ((tmp_6_reg_1926[0:0] == 1'b1) ? y_6_fu_809_p2 : y_7_fu_819_p2);

assign y_9_fu_885_p2 = (y_8_reg_2024 - zext_ln62_1_fu_876_p1);

assign y_fu_653_p3 = ((tmp_3_reg_1857[0:0] == 1'b1) ? 13'd4484 : 13'd1236);

assign zext_ln28_fu_870_p1 = x_new_43_reg_2030;

assign zext_ln30_fu_426_p1 = index_trigo_reg_1841;

assign zext_ln33_fu_332_p1 = ap_sig_allocacmp_i_3;

assign zext_ln34_fu_337_p1 = addr_in_load_reg_1792;

assign zext_ln51_fu_474_p1 = shl_ln_fu_466_p3;

assign zext_ln62_1_fu_876_p1 = trunc_ln69_1_cast_reg_2040;

assign zext_ln62_fu_801_p1 = trunc_ln3_cast_reg_2006;

assign zext_ln77_fu_716_p1 = lshr_ln_fu_706_p4;

assign zext_ln94_1_fu_1699_p1 = sinh_load_reg_1888;

assign zext_ln94_2_fu_1704_p1 = cosh_load_reg_1893;

assign zext_ln94_fu_491_p1 = index_trigo_1_fu_458_p3;

assign zext_ln99_fu_1739_p1 = addr_out_load_reg_2456;

always @ (posedge ap_clk) begin
    zext_ln33_reg_1782[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln34_reg_1797[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    select_ln61_6_reg_2045[1:0] <= 2'b00;
    select_ln61_6_reg_2045[4:3] <= 2'b00;
    select_ln61_6_reg_2045[31:7] <= 25'b0000000000000000000000000;
    select_ln61_12_reg_2271[2:0] <= 3'b000;
    select_ln61_12_reg_2271[31:4] <= 28'b0000000000000000000000000000;
    zext_ln99_reg_2461[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //main_inlined
