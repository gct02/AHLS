-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity main is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of main is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "main_main,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.907000,HLS_SYN_LAT=137028,HLS_SYN_TPT=none,HLS_SYN_MEM=6,HLS_SYN_DSP=0,HLS_SYN_FF=10027,HLS_SYN_LUT=13058,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv10_3E8 : STD_LOGIC_VECTOR (9 downto 0) := "1111101000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal sinh_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sinh_ce0 : STD_LOGIC;
    signal sinh_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal cosh_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal cosh_ce0 : STD_LOGIC;
    signal cosh_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal A_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal A_ce0 : STD_LOGIC;
    signal A_we0 : STD_LOGIC;
    signal A_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal addr_out_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal addr_out_ce0 : STD_LOGIC;
    signal addr_out_we0 : STD_LOGIC;
    signal addr_out_q0 : STD_LOGIC_VECTOR (9 downto 0);
    signal addr_in_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal addr_in_ce0 : STD_LOGIC;
    signal addr_in_we0 : STD_LOGIC;
    signal addr_in_q0 : STD_LOGIC_VECTOR (9 downto 0);
    signal gold_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal gold_ce0 : STD_LOGIC;
    signal gold_we0 : STD_LOGIC;
    signal gold_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal gold_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_ap_start : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_ap_done : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_ap_idle : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_ap_ready : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_A_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_A_ce0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_A_we0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_A_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_gold_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_gold_ce0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_gold_we0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_gold_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_out_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_out_ce0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_out_we0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_out_d0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_in_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_in_ce0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_in_we0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_in_d0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_getTanh_fu_58_ap_start : STD_LOGIC;
    signal grp_getTanh_fu_58_ap_done : STD_LOGIC;
    signal grp_getTanh_fu_58_ap_idle : STD_LOGIC;
    signal grp_getTanh_fu_58_ap_ready : STD_LOGIC;
    signal grp_getTanh_fu_58_A_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_getTanh_fu_58_A_ce0 : STD_LOGIC;
    signal grp_getTanh_fu_58_A_we0 : STD_LOGIC;
    signal grp_getTanh_fu_58_A_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getTanh_fu_58_addr_in_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_getTanh_fu_58_addr_in_ce0 : STD_LOGIC;
    signal grp_getTanh_fu_58_addr_out_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_getTanh_fu_58_addr_out_ce0 : STD_LOGIC;
    signal grp_getTanh_fu_58_sinh_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_getTanh_fu_58_sinh_ce0 : STD_LOGIC;
    signal grp_getTanh_fu_58_cosh_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_getTanh_fu_58_cosh_ce0 : STD_LOGIC;
    signal grp_getTanh_fu_58_grp_fu_114_p_din0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_getTanh_fu_58_grp_fu_114_p_din1 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_getTanh_fu_58_grp_fu_114_p_ce : STD_LOGIC;
    signal grp_getTanh_fu_58_grp_fu_118_p_din0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_getTanh_fu_58_grp_fu_118_p_din1 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_getTanh_fu_58_grp_fu_118_p_ce : STD_LOGIC;
    signal grp_getTanh_fu_58_grp_fu_122_p_din0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_getTanh_fu_58_grp_fu_122_p_din1 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_getTanh_fu_58_grp_fu_122_p_ce : STD_LOGIC;
    signal grp_getTanh_fu_58_grp_fu_126_p_din0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_getTanh_fu_58_grp_fu_126_p_din1 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_getTanh_fu_58_grp_fu_126_p_ce : STD_LOGIC;
    signal grp_inlined_fu_69_ap_start : STD_LOGIC;
    signal grp_inlined_fu_69_ap_done : STD_LOGIC;
    signal grp_inlined_fu_69_ap_idle : STD_LOGIC;
    signal grp_inlined_fu_69_ap_ready : STD_LOGIC;
    signal grp_inlined_fu_69_A_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_inlined_fu_69_A_ce0 : STD_LOGIC;
    signal grp_inlined_fu_69_A_we0 : STD_LOGIC;
    signal grp_inlined_fu_69_A_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inlined_fu_69_addr_in_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_inlined_fu_69_addr_in_ce0 : STD_LOGIC;
    signal grp_inlined_fu_69_addr_out_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_inlined_fu_69_addr_out_ce0 : STD_LOGIC;
    signal grp_inlined_fu_69_sinh_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_inlined_fu_69_sinh_ce0 : STD_LOGIC;
    signal grp_inlined_fu_69_cosh_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_inlined_fu_69_cosh_ce0 : STD_LOGIC;
    signal grp_inlined_fu_69_grp_fu_114_p_din0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_inlined_fu_69_grp_fu_114_p_din1 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_inlined_fu_69_grp_fu_114_p_ce : STD_LOGIC;
    signal grp_inlined_fu_69_grp_fu_118_p_din0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_inlined_fu_69_grp_fu_118_p_din1 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_inlined_fu_69_grp_fu_118_p_ce : STD_LOGIC;
    signal grp_inlined_fu_69_grp_fu_122_p_din0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_inlined_fu_69_grp_fu_122_p_din1 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_inlined_fu_69_grp_fu_122_p_ce : STD_LOGIC;
    signal grp_inlined_fu_69_grp_fu_126_p_din0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_inlined_fu_69_grp_fu_126_p_din1 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_inlined_fu_69_grp_fu_126_p_ce : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_ap_start : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_ap_done : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_ap_idle : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_ap_ready : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_gold_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_gold_ce0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_A_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_A_ce0 : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_results_out : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_results_out_ap_vld : STD_LOGIC;
    signal grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_getTanh_fu_58_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_inlined_fu_69_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal icmp_ln47_fu_90_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln47_fu_96_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_114_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_114_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_114_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_114_ce : STD_LOGIC;
    signal grp_fu_118_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_118_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_118_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_118_ce : STD_LOGIC;
    signal grp_fu_122_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_122_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_122_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_122_ce : STD_LOGIC;
    signal grp_fu_126_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_126_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_126_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_126_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component main_main_Pipeline_VITIS_LOOP_32_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_we0 : OUT STD_LOGIC;
        A_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        gold_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        gold_ce0 : OUT STD_LOGIC;
        gold_we0 : OUT STD_LOGIC;
        gold_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        addr_out_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        addr_out_ce0 : OUT STD_LOGIC;
        addr_out_we0 : OUT STD_LOGIC;
        addr_out_d0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        addr_in_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        addr_in_ce0 : OUT STD_LOGIC;
        addr_in_we0 : OUT STD_LOGIC;
        addr_in_d0 : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component main_getTanh IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_we0 : OUT STD_LOGIC;
        A_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        addr_in_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        addr_in_ce0 : OUT STD_LOGIC;
        addr_in_q0 : IN STD_LOGIC_VECTOR (9 downto 0);
        addr_out_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        addr_out_ce0 : OUT STD_LOGIC;
        addr_out_q0 : IN STD_LOGIC_VECTOR (9 downto 0);
        sinh_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        sinh_ce0 : OUT STD_LOGIC;
        sinh_q0 : IN STD_LOGIC_VECTOR (16 downto 0);
        cosh_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        cosh_ce0 : OUT STD_LOGIC;
        cosh_q0 : IN STD_LOGIC_VECTOR (16 downto 0);
        grp_fu_114_p_din0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        grp_fu_114_p_din1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        grp_fu_114_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_114_p_ce : OUT STD_LOGIC;
        grp_fu_118_p_din0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        grp_fu_118_p_din1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        grp_fu_118_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_118_p_ce : OUT STD_LOGIC;
        grp_fu_122_p_din0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        grp_fu_122_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
        grp_fu_122_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_122_p_ce : OUT STD_LOGIC;
        grp_fu_126_p_din0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        grp_fu_126_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
        grp_fu_126_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_126_p_ce : OUT STD_LOGIC );
    end component;


    component main_inlined IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_we0 : OUT STD_LOGIC;
        A_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        addr_in_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        addr_in_ce0 : OUT STD_LOGIC;
        addr_in_q0 : IN STD_LOGIC_VECTOR (9 downto 0);
        addr_out_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        addr_out_ce0 : OUT STD_LOGIC;
        addr_out_q0 : IN STD_LOGIC_VECTOR (9 downto 0);
        sinh_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        sinh_ce0 : OUT STD_LOGIC;
        sinh_q0 : IN STD_LOGIC_VECTOR (16 downto 0);
        cosh_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        cosh_ce0 : OUT STD_LOGIC;
        cosh_q0 : IN STD_LOGIC_VECTOR (16 downto 0);
        grp_fu_114_p_din0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        grp_fu_114_p_din1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        grp_fu_114_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_114_p_ce : OUT STD_LOGIC;
        grp_fu_118_p_din0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        grp_fu_118_p_din1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        grp_fu_118_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_118_p_ce : OUT STD_LOGIC;
        grp_fu_122_p_din0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        grp_fu_122_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
        grp_fu_122_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_122_p_ce : OUT STD_LOGIC;
        grp_fu_126_p_din0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        grp_fu_126_p_din1 : OUT STD_LOGIC_VECTOR (27 downto 0);
        grp_fu_126_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_126_p_ce : OUT STD_LOGIC );
    end component;


    component main_main_Pipeline_VITIS_LOOP_44_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        gold_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        gold_ce0 : OUT STD_LOGIC;
        gold_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        results_out : OUT STD_LOGIC_VECTOR (9 downto 0);
        results_out_ap_vld : OUT STD_LOGIC );
    end component;


    component main_mul_17ns_27s_32_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (26 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component main_mul_17ns_28s_32_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (27 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component main_sinh_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component main_cosh_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component main_A_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component main_addr_out_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (9 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;



begin
    sinh_U : component main_sinh_ROM_AUTO_1R
    generic map (
        DataWidth => 17,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sinh_address0,
        ce0 => sinh_ce0,
        q0 => sinh_q0);

    cosh_U : component main_cosh_ROM_AUTO_1R
    generic map (
        DataWidth => 17,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cosh_address0,
        ce0 => cosh_ce0,
        q0 => cosh_q0);

    A_U : component main_A_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1000,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => A_address0,
        ce0 => A_ce0,
        we0 => A_we0,
        d0 => A_d0,
        q0 => A_q0);

    addr_out_U : component main_addr_out_RAM_AUTO_1R1W
    generic map (
        DataWidth => 10,
        AddressRange => 1000,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => addr_out_address0,
        ce0 => addr_out_ce0,
        we0 => addr_out_we0,
        d0 => grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_out_d0,
        q0 => addr_out_q0);

    addr_in_U : component main_addr_out_RAM_AUTO_1R1W
    generic map (
        DataWidth => 10,
        AddressRange => 1000,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => addr_in_address0,
        ce0 => addr_in_ce0,
        we0 => addr_in_we0,
        d0 => grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_in_d0,
        q0 => addr_in_q0);

    gold_U : component main_A_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1000,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => gold_address0,
        ce0 => gold_ce0,
        we0 => gold_we0,
        d0 => gold_d0,
        q0 => gold_q0);

    grp_main_Pipeline_VITIS_LOOP_32_1_fu_46 : component main_main_Pipeline_VITIS_LOOP_32_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_ap_start,
        ap_done => grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_ap_done,
        ap_idle => grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_ap_idle,
        ap_ready => grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_ap_ready,
        A_address0 => grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_A_address0,
        A_ce0 => grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_A_ce0,
        A_we0 => grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_A_we0,
        A_d0 => grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_A_d0,
        gold_address0 => grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_gold_address0,
        gold_ce0 => grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_gold_ce0,
        gold_we0 => grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_gold_we0,
        gold_d0 => grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_gold_d0,
        addr_out_address0 => grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_out_address0,
        addr_out_ce0 => grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_out_ce0,
        addr_out_we0 => grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_out_we0,
        addr_out_d0 => grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_out_d0,
        addr_in_address0 => grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_in_address0,
        addr_in_ce0 => grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_in_ce0,
        addr_in_we0 => grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_in_we0,
        addr_in_d0 => grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_in_d0);

    grp_getTanh_fu_58 : component main_getTanh
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_getTanh_fu_58_ap_start,
        ap_done => grp_getTanh_fu_58_ap_done,
        ap_idle => grp_getTanh_fu_58_ap_idle,
        ap_ready => grp_getTanh_fu_58_ap_ready,
        A_address0 => grp_getTanh_fu_58_A_address0,
        A_ce0 => grp_getTanh_fu_58_A_ce0,
        A_we0 => grp_getTanh_fu_58_A_we0,
        A_d0 => grp_getTanh_fu_58_A_d0,
        A_q0 => A_q0,
        addr_in_address0 => grp_getTanh_fu_58_addr_in_address0,
        addr_in_ce0 => grp_getTanh_fu_58_addr_in_ce0,
        addr_in_q0 => addr_in_q0,
        addr_out_address0 => grp_getTanh_fu_58_addr_out_address0,
        addr_out_ce0 => grp_getTanh_fu_58_addr_out_ce0,
        addr_out_q0 => addr_out_q0,
        sinh_address0 => grp_getTanh_fu_58_sinh_address0,
        sinh_ce0 => grp_getTanh_fu_58_sinh_ce0,
        sinh_q0 => sinh_q0,
        cosh_address0 => grp_getTanh_fu_58_cosh_address0,
        cosh_ce0 => grp_getTanh_fu_58_cosh_ce0,
        cosh_q0 => cosh_q0,
        grp_fu_114_p_din0 => grp_getTanh_fu_58_grp_fu_114_p_din0,
        grp_fu_114_p_din1 => grp_getTanh_fu_58_grp_fu_114_p_din1,
        grp_fu_114_p_dout0 => grp_fu_114_p2,
        grp_fu_114_p_ce => grp_getTanh_fu_58_grp_fu_114_p_ce,
        grp_fu_118_p_din0 => grp_getTanh_fu_58_grp_fu_118_p_din0,
        grp_fu_118_p_din1 => grp_getTanh_fu_58_grp_fu_118_p_din1,
        grp_fu_118_p_dout0 => grp_fu_118_p2,
        grp_fu_118_p_ce => grp_getTanh_fu_58_grp_fu_118_p_ce,
        grp_fu_122_p_din0 => grp_getTanh_fu_58_grp_fu_122_p_din0,
        grp_fu_122_p_din1 => grp_getTanh_fu_58_grp_fu_122_p_din1,
        grp_fu_122_p_dout0 => grp_fu_122_p2,
        grp_fu_122_p_ce => grp_getTanh_fu_58_grp_fu_122_p_ce,
        grp_fu_126_p_din0 => grp_getTanh_fu_58_grp_fu_126_p_din0,
        grp_fu_126_p_din1 => grp_getTanh_fu_58_grp_fu_126_p_din1,
        grp_fu_126_p_dout0 => grp_fu_126_p2,
        grp_fu_126_p_ce => grp_getTanh_fu_58_grp_fu_126_p_ce);

    grp_inlined_fu_69 : component main_inlined
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_inlined_fu_69_ap_start,
        ap_done => grp_inlined_fu_69_ap_done,
        ap_idle => grp_inlined_fu_69_ap_idle,
        ap_ready => grp_inlined_fu_69_ap_ready,
        A_address0 => grp_inlined_fu_69_A_address0,
        A_ce0 => grp_inlined_fu_69_A_ce0,
        A_we0 => grp_inlined_fu_69_A_we0,
        A_d0 => grp_inlined_fu_69_A_d0,
        A_q0 => gold_q0,
        addr_in_address0 => grp_inlined_fu_69_addr_in_address0,
        addr_in_ce0 => grp_inlined_fu_69_addr_in_ce0,
        addr_in_q0 => addr_in_q0,
        addr_out_address0 => grp_inlined_fu_69_addr_out_address0,
        addr_out_ce0 => grp_inlined_fu_69_addr_out_ce0,
        addr_out_q0 => addr_out_q0,
        sinh_address0 => grp_inlined_fu_69_sinh_address0,
        sinh_ce0 => grp_inlined_fu_69_sinh_ce0,
        sinh_q0 => sinh_q0,
        cosh_address0 => grp_inlined_fu_69_cosh_address0,
        cosh_ce0 => grp_inlined_fu_69_cosh_ce0,
        cosh_q0 => cosh_q0,
        grp_fu_114_p_din0 => grp_inlined_fu_69_grp_fu_114_p_din0,
        grp_fu_114_p_din1 => grp_inlined_fu_69_grp_fu_114_p_din1,
        grp_fu_114_p_dout0 => grp_fu_114_p2,
        grp_fu_114_p_ce => grp_inlined_fu_69_grp_fu_114_p_ce,
        grp_fu_118_p_din0 => grp_inlined_fu_69_grp_fu_118_p_din0,
        grp_fu_118_p_din1 => grp_inlined_fu_69_grp_fu_118_p_din1,
        grp_fu_118_p_dout0 => grp_fu_118_p2,
        grp_fu_118_p_ce => grp_inlined_fu_69_grp_fu_118_p_ce,
        grp_fu_122_p_din0 => grp_inlined_fu_69_grp_fu_122_p_din0,
        grp_fu_122_p_din1 => grp_inlined_fu_69_grp_fu_122_p_din1,
        grp_fu_122_p_dout0 => grp_fu_122_p2,
        grp_fu_122_p_ce => grp_inlined_fu_69_grp_fu_122_p_ce,
        grp_fu_126_p_din0 => grp_inlined_fu_69_grp_fu_126_p_din0,
        grp_fu_126_p_din1 => grp_inlined_fu_69_grp_fu_126_p_din1,
        grp_fu_126_p_dout0 => grp_fu_126_p2,
        grp_fu_126_p_ce => grp_inlined_fu_69_grp_fu_126_p_ce);

    grp_main_Pipeline_VITIS_LOOP_44_2_fu_80 : component main_main_Pipeline_VITIS_LOOP_44_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_ap_start,
        ap_done => grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_ap_done,
        ap_idle => grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_ap_idle,
        ap_ready => grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_ap_ready,
        gold_address0 => grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_gold_address0,
        gold_ce0 => grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_gold_ce0,
        gold_q0 => gold_q0,
        A_address0 => grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_A_address0,
        A_ce0 => grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_A_ce0,
        A_q0 => A_q0,
        results_out => grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_results_out,
        results_out_ap_vld => grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_results_out_ap_vld);

    mul_17ns_27s_32_4_1_U29 : component main_mul_17ns_27s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 17,
        din1_WIDTH => 27,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_114_p0,
        din1 => grp_fu_114_p1,
        ce => grp_fu_114_ce,
        dout => grp_fu_114_p2);

    mul_17ns_27s_32_4_1_U30 : component main_mul_17ns_27s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 17,
        din1_WIDTH => 27,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_118_p0,
        din1 => grp_fu_118_p1,
        ce => grp_fu_118_ce,
        dout => grp_fu_118_p2);

    mul_17ns_28s_32_4_1_U31 : component main_mul_17ns_28s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 17,
        din1_WIDTH => 28,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_122_p0,
        din1 => grp_fu_122_p1,
        ce => grp_fu_122_ce,
        dout => grp_fu_122_p2);

    mul_17ns_28s_32_4_1_U32 : component main_mul_17ns_28s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 17,
        din1_WIDTH => 28,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_126_p0,
        din1 => grp_fu_126_p1,
        ce => grp_fu_126_ce,
        dout => grp_fu_126_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_getTanh_fu_58_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_getTanh_fu_58_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_getTanh_fu_58_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_getTanh_fu_58_ap_ready = ap_const_logic_1)) then 
                    grp_getTanh_fu_58_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_inlined_fu_69_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_inlined_fu_69_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_inlined_fu_69_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_inlined_fu_69_ap_ready = ap_const_logic_1)) then 
                    grp_inlined_fu_69_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_ap_ready = ap_const_logic_1)) then 
                    grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_ap_ready = ap_const_logic_1)) then 
                    grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_ap_done, grp_getTanh_fu_58_ap_done, grp_inlined_fu_69_ap_done, grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_getTanh_fu_58_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_inlined_fu_69_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;

    A_address0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_A_address0, grp_getTanh_fu_58_A_address0, grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_A_address0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_address0 <= grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_A_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            A_address0 <= grp_getTanh_fu_58_A_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            A_address0 <= grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_A_address0;
        else 
            A_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    A_ce0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_A_ce0, grp_getTanh_fu_58_A_ce0, grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_A_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_ce0 <= grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_A_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            A_ce0 <= grp_getTanh_fu_58_A_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            A_ce0 <= grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_A_ce0;
        else 
            A_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_d0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_A_d0, grp_getTanh_fu_58_A_d0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            A_d0 <= grp_getTanh_fu_58_A_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            A_d0 <= grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_A_d0;
        else 
            A_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    A_we0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_A_we0, grp_getTanh_fu_58_A_we0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            A_we0 <= grp_getTanh_fu_58_A_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            A_we0 <= grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_A_we0;
        else 
            A_we0 <= ap_const_logic_0;
        end if; 
    end process;


    addr_in_address0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_in_address0, grp_getTanh_fu_58_addr_in_address0, grp_inlined_fu_69_addr_in_address0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            addr_in_address0 <= grp_inlined_fu_69_addr_in_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            addr_in_address0 <= grp_getTanh_fu_58_addr_in_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            addr_in_address0 <= grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_in_address0;
        else 
            addr_in_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    addr_in_ce0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_in_ce0, grp_getTanh_fu_58_addr_in_ce0, grp_inlined_fu_69_addr_in_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            addr_in_ce0 <= grp_inlined_fu_69_addr_in_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            addr_in_ce0 <= grp_getTanh_fu_58_addr_in_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            addr_in_ce0 <= grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_in_ce0;
        else 
            addr_in_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    addr_in_we0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_in_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            addr_in_we0 <= grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_in_we0;
        else 
            addr_in_we0 <= ap_const_logic_0;
        end if; 
    end process;


    addr_out_address0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_out_address0, grp_getTanh_fu_58_addr_out_address0, grp_inlined_fu_69_addr_out_address0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            addr_out_address0 <= grp_inlined_fu_69_addr_out_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            addr_out_address0 <= grp_getTanh_fu_58_addr_out_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            addr_out_address0 <= grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_out_address0;
        else 
            addr_out_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    addr_out_ce0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_out_ce0, grp_getTanh_fu_58_addr_out_ce0, grp_inlined_fu_69_addr_out_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            addr_out_ce0 <= grp_inlined_fu_69_addr_out_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            addr_out_ce0 <= grp_getTanh_fu_58_addr_out_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            addr_out_ce0 <= grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_out_ce0;
        else 
            addr_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    addr_out_we0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_out_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            addr_out_we0 <= grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_addr_out_we0;
        else 
            addr_out_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_ap_done)
    begin
        if ((grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_getTanh_fu_58_ap_done)
    begin
        if ((grp_getTanh_fu_58_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_inlined_fu_69_ap_done)
    begin
        if ((grp_inlined_fu_69_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_ap_done)
    begin
        if ((grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln47_fu_96_p3),32));

    cosh_address0_assign_proc : process(grp_getTanh_fu_58_cosh_address0, grp_inlined_fu_69_cosh_address0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            cosh_address0 <= grp_inlined_fu_69_cosh_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            cosh_address0 <= grp_getTanh_fu_58_cosh_address0;
        else 
            cosh_address0 <= "XXX";
        end if; 
    end process;


    cosh_ce0_assign_proc : process(grp_getTanh_fu_58_cosh_ce0, grp_inlined_fu_69_cosh_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            cosh_ce0 <= grp_inlined_fu_69_cosh_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            cosh_ce0 <= grp_getTanh_fu_58_cosh_ce0;
        else 
            cosh_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    gold_address0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_gold_address0, grp_inlined_fu_69_A_address0, grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_gold_address0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            gold_address0 <= grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_gold_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            gold_address0 <= grp_inlined_fu_69_A_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            gold_address0 <= grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_gold_address0;
        else 
            gold_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    gold_ce0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_gold_ce0, grp_inlined_fu_69_A_ce0, grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_gold_ce0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            gold_ce0 <= grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_gold_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            gold_ce0 <= grp_inlined_fu_69_A_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            gold_ce0 <= grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_gold_ce0;
        else 
            gold_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    gold_d0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_gold_d0, grp_inlined_fu_69_A_d0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            gold_d0 <= grp_inlined_fu_69_A_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            gold_d0 <= grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_gold_d0;
        else 
            gold_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gold_we0_assign_proc : process(grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_gold_we0, grp_inlined_fu_69_A_we0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            gold_we0 <= grp_inlined_fu_69_A_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            gold_we0 <= grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_gold_we0;
        else 
            gold_we0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_114_ce_assign_proc : process(grp_getTanh_fu_58_grp_fu_114_p_ce, grp_inlined_fu_69_grp_fu_114_p_ce, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_114_ce <= grp_inlined_fu_69_grp_fu_114_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_114_ce <= grp_getTanh_fu_58_grp_fu_114_p_ce;
        else 
            grp_fu_114_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_114_p0_assign_proc : process(grp_getTanh_fu_58_grp_fu_114_p_din0, grp_inlined_fu_69_grp_fu_114_p_din0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_114_p0 <= grp_inlined_fu_69_grp_fu_114_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_114_p0 <= grp_getTanh_fu_58_grp_fu_114_p_din0;
        else 
            grp_fu_114_p0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_114_p1_assign_proc : process(grp_getTanh_fu_58_grp_fu_114_p_din1, grp_inlined_fu_69_grp_fu_114_p_din1, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_114_p1 <= grp_inlined_fu_69_grp_fu_114_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_114_p1 <= grp_getTanh_fu_58_grp_fu_114_p_din1;
        else 
            grp_fu_114_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_118_ce_assign_proc : process(grp_getTanh_fu_58_grp_fu_118_p_ce, grp_inlined_fu_69_grp_fu_118_p_ce, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_118_ce <= grp_inlined_fu_69_grp_fu_118_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_118_ce <= grp_getTanh_fu_58_grp_fu_118_p_ce;
        else 
            grp_fu_118_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_118_p0_assign_proc : process(grp_getTanh_fu_58_grp_fu_118_p_din0, grp_inlined_fu_69_grp_fu_118_p_din0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_118_p0 <= grp_inlined_fu_69_grp_fu_118_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_118_p0 <= grp_getTanh_fu_58_grp_fu_118_p_din0;
        else 
            grp_fu_118_p0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_118_p1_assign_proc : process(grp_getTanh_fu_58_grp_fu_118_p_din1, grp_inlined_fu_69_grp_fu_118_p_din1, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_118_p1 <= grp_inlined_fu_69_grp_fu_118_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_118_p1 <= grp_getTanh_fu_58_grp_fu_118_p_din1;
        else 
            grp_fu_118_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_122_ce_assign_proc : process(grp_getTanh_fu_58_grp_fu_122_p_ce, grp_inlined_fu_69_grp_fu_122_p_ce, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_122_ce <= grp_inlined_fu_69_grp_fu_122_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_122_ce <= grp_getTanh_fu_58_grp_fu_122_p_ce;
        else 
            grp_fu_122_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_122_p0_assign_proc : process(grp_getTanh_fu_58_grp_fu_122_p_din0, grp_inlined_fu_69_grp_fu_122_p_din0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_122_p0 <= grp_inlined_fu_69_grp_fu_122_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_122_p0 <= grp_getTanh_fu_58_grp_fu_122_p_din0;
        else 
            grp_fu_122_p0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_122_p1_assign_proc : process(grp_getTanh_fu_58_grp_fu_122_p_din1, grp_inlined_fu_69_grp_fu_122_p_din1, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_122_p1 <= grp_inlined_fu_69_grp_fu_122_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_122_p1 <= grp_getTanh_fu_58_grp_fu_122_p_din1;
        else 
            grp_fu_122_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_126_ce_assign_proc : process(grp_getTanh_fu_58_grp_fu_126_p_ce, grp_inlined_fu_69_grp_fu_126_p_ce, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_126_ce <= grp_inlined_fu_69_grp_fu_126_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_126_ce <= grp_getTanh_fu_58_grp_fu_126_p_ce;
        else 
            grp_fu_126_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_126_p0_assign_proc : process(grp_getTanh_fu_58_grp_fu_126_p_din0, grp_inlined_fu_69_grp_fu_126_p_din0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_126_p0 <= grp_inlined_fu_69_grp_fu_126_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_126_p0 <= grp_getTanh_fu_58_grp_fu_126_p_din0;
        else 
            grp_fu_126_p0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_126_p1_assign_proc : process(grp_getTanh_fu_58_grp_fu_126_p_din1, grp_inlined_fu_69_grp_fu_126_p_din1, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_126_p1 <= grp_inlined_fu_69_grp_fu_126_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_126_p1 <= grp_getTanh_fu_58_grp_fu_126_p_din1;
        else 
            grp_fu_126_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_getTanh_fu_58_ap_start <= grp_getTanh_fu_58_ap_start_reg;
    grp_inlined_fu_69_ap_start <= grp_inlined_fu_69_ap_start_reg;
    grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_ap_start <= grp_main_Pipeline_VITIS_LOOP_32_1_fu_46_ap_start_reg;
    grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_ap_start <= grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_ap_start_reg;
    icmp_ln47_fu_90_p2 <= "1" when (grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_results_out = ap_const_lv10_3E8) else "0";
    select_ln47_fu_96_p3 <= 
        ap_const_lv10_0 when (icmp_ln47_fu_90_p2(0) = '1') else 
        grp_main_Pipeline_VITIS_LOOP_44_2_fu_80_results_out;

    sinh_address0_assign_proc : process(grp_getTanh_fu_58_sinh_address0, grp_inlined_fu_69_sinh_address0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sinh_address0 <= grp_inlined_fu_69_sinh_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            sinh_address0 <= grp_getTanh_fu_58_sinh_address0;
        else 
            sinh_address0 <= "XXX";
        end if; 
    end process;


    sinh_ce0_assign_proc : process(grp_getTanh_fu_58_sinh_ce0, grp_inlined_fu_69_sinh_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sinh_ce0 <= grp_inlined_fu_69_sinh_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            sinh_ce0 <= grp_getTanh_fu_58_sinh_ce0;
        else 
            sinh_ce0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
