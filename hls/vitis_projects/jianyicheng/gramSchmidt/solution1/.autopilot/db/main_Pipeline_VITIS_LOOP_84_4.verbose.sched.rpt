

================================================================
== Vitis HLS Report for 'main_Pipeline_VITIS_LOOP_84_4'
================================================================
* Date:           Mon Aug 12 18:54:35 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        gramSchmidt
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  5.00 ns|  3.356 ns|     1.35 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      333|      333|  1.665 us|  1.665 us|  333|  333|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_84_4  |      331|      331|        22|         10|          1|    32|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 10, depth = 22


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 22
* Pipeline : 1
  Pipeline-0 : II = 10, D = 22, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.37>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%nrm = alloca i32 1" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:83]   --->   Operation 25 'alloca' 'nrm' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%i_1 = alloca i32 1" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:84]   --->   Operation 26 'alloca' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln90_4_read = read i5 @_ssdm_op_Read.ap_auto.i5, i5 %zext_ln90_4"   --->   Operation 27 'read' 'zext_ln90_4_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (1.58ns)   --->   "%store_ln84 = store i11 0, i11 %i_1" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:84]   --->   Operation 28 'store' 'store_ln84' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 29 [1/1] (1.58ns)   --->   "%store_ln83 = store i32 0, i32 %nrm" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:83]   --->   Operation 29 'store' 'store_ln83' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc63"   --->   Operation 30 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%i = load i11 %i_1" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:84]   --->   Operation 31 'load' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i11.i32, i11 %i, i32 10" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:84]   --->   Operation 32 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln84 = br i1 %tmp, void %for.inc63.split, void %VITIS_LOOP_88_5.exitStub" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:84]   --->   Operation 33 'br' 'br_ln84' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%trunc_ln85 = trunc i11 %i" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 34 'trunc' 'trunc_ln85' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.78ns)   --->   "%or_ln85 = or i5 %trunc_ln85, i5 %zext_ln90_4_read" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 35 'or' 'or_ln85' <Predicate = (!tmp)> <Delay = 0.78> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 3.25>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%tmp_2 = partselect i5 @_ssdm_op_PartSelect.i5.i11.i32.i32, i11 %i, i32 5, i32 9" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 36 'partselect' 'tmp_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%add_ln = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i5.i5, i5 %tmp_2, i5 %or_ln85" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 37 'bitconcatenate' 'add_ln' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln85 = zext i10 %add_ln" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 38 'zext' 'zext_ln85' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%a_addr_1 = getelementptr i32 %a, i64 0, i64 %zext_ln85" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 39 'getelementptr' 'a_addr_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 40 [2/2] (3.25ns)   --->   "%a_load = load i10 %a_addr_1" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 40 'load' 'a_load' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1024> <RAM>

State 3 <SV = 2> <Delay = 3.25>
ST_3 : Operation 41 [1/2] (3.25ns)   --->   "%a_load = load i10 %a_addr_1" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 41 'load' 'a_load' <Predicate = (!tmp)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1024> <RAM>

State 4 <SV = 3> <Delay = 2.56>
ST_4 : Operation 42 [8/8] (2.56ns)   --->   "%mul = fmul i32 %a_load, i32 %a_load" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 42 'fmul' 'mul' <Predicate = (!tmp)> <Delay = 2.56> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 7> <II = 1> <Delay = 2.56> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 2.56>
ST_5 : Operation 43 [7/8] (2.56ns)   --->   "%mul = fmul i32 %a_load, i32 %a_load" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 43 'fmul' 'mul' <Predicate = (!tmp)> <Delay = 2.56> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 7> <II = 1> <Delay = 2.56> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 2.56>
ST_6 : Operation 44 [6/8] (2.56ns)   --->   "%mul = fmul i32 %a_load, i32 %a_load" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 44 'fmul' 'mul' <Predicate = (!tmp)> <Delay = 2.56> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 7> <II = 1> <Delay = 2.56> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 2.56>
ST_7 : Operation 45 [5/8] (2.56ns)   --->   "%mul = fmul i32 %a_load, i32 %a_load" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 45 'fmul' 'mul' <Predicate = (!tmp)> <Delay = 2.56> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 7> <II = 1> <Delay = 2.56> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 2.56>
ST_8 : Operation 46 [4/8] (2.56ns)   --->   "%mul = fmul i32 %a_load, i32 %a_load" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 46 'fmul' 'mul' <Predicate = (!tmp)> <Delay = 2.56> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 7> <II = 1> <Delay = 2.56> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 2.56>
ST_9 : Operation 47 [3/8] (2.56ns)   --->   "%mul = fmul i32 %a_load, i32 %a_load" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 47 'fmul' 'mul' <Predicate = (!tmp)> <Delay = 2.56> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 7> <II = 1> <Delay = 2.56> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 3.22>
ST_10 : Operation 48 [2/8] (2.56ns)   --->   "%mul = fmul i32 %a_load, i32 %a_load" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 48 'fmul' 'mul' <Predicate = (!tmp)> <Delay = 2.56> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 7> <II = 1> <Delay = 2.56> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 49 [1/1] (1.63ns)   --->   "%add_ln84 = add i11 %i, i11 32" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:84]   --->   Operation 49 'add' 'add_ln84' <Predicate = (!tmp)> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 50 [1/1] (1.58ns)   --->   "%store_ln84 = store i11 %add_ln84, i11 %i_1" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:84]   --->   Operation 50 'store' 'store_ln84' <Predicate = (!tmp)> <Delay = 1.58>

State 11 <SV = 10> <Delay = 2.56>
ST_11 : Operation 51 [1/8] (2.56ns)   --->   "%mul = fmul i32 %a_load, i32 %a_load" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 51 'fmul' 'mul' <Predicate = true> <Delay = 2.56> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 7> <II = 1> <Delay = 2.56> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 3.35>
ST_12 : Operation 52 [1/1] (0.00ns)   --->   "%nrm_load = load i32 %nrm" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 52 'load' 'nrm_load' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 53 [10/10] (3.35ns)   --->   "%nrm_1 = fadd i32 %nrm_load, i32 %mul" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 53 'fadd' 'nrm_1' <Predicate = true> <Delay = 3.35> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 9> <II = 1> <Delay = 3.35> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 68 [1/1] (0.00ns)   --->   "%nrm_load_1 = load i32 %nrm"   --->   Operation 68 'load' 'nrm_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_12 : Operation 69 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %nrm_out, i32 %nrm_load_1"   --->   Operation 69 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_12 : Operation 70 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 70 'ret' 'ret_ln0' <Predicate = (tmp)> <Delay = 0.00>

State 13 <SV = 12> <Delay = 3.35>
ST_13 : Operation 54 [9/10] (3.35ns)   --->   "%nrm_1 = fadd i32 %nrm_load, i32 %mul" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 54 'fadd' 'nrm_1' <Predicate = true> <Delay = 3.35> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 9> <II = 1> <Delay = 3.35> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 3.35>
ST_14 : Operation 55 [8/10] (3.35ns)   --->   "%nrm_1 = fadd i32 %nrm_load, i32 %mul" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 55 'fadd' 'nrm_1' <Predicate = true> <Delay = 3.35> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 9> <II = 1> <Delay = 3.35> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 3.35>
ST_15 : Operation 56 [7/10] (3.35ns)   --->   "%nrm_1 = fadd i32 %nrm_load, i32 %mul" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 56 'fadd' 'nrm_1' <Predicate = true> <Delay = 3.35> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 9> <II = 1> <Delay = 3.35> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 3.35>
ST_16 : Operation 57 [6/10] (3.35ns)   --->   "%nrm_1 = fadd i32 %nrm_load, i32 %mul" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 57 'fadd' 'nrm_1' <Predicate = true> <Delay = 3.35> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 9> <II = 1> <Delay = 3.35> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 3.35>
ST_17 : Operation 58 [5/10] (3.35ns)   --->   "%nrm_1 = fadd i32 %nrm_load, i32 %mul" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 58 'fadd' 'nrm_1' <Predicate = true> <Delay = 3.35> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 9> <II = 1> <Delay = 3.35> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 3.35>
ST_18 : Operation 59 [4/10] (3.35ns)   --->   "%nrm_1 = fadd i32 %nrm_load, i32 %mul" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 59 'fadd' 'nrm_1' <Predicate = true> <Delay = 3.35> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 9> <II = 1> <Delay = 3.35> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 3.35>
ST_19 : Operation 60 [3/10] (3.35ns)   --->   "%nrm_1 = fadd i32 %nrm_load, i32 %mul" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 60 'fadd' 'nrm_1' <Predicate = true> <Delay = 3.35> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 9> <II = 1> <Delay = 3.35> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 3.35>
ST_20 : Operation 61 [2/10] (3.35ns)   --->   "%nrm_1 = fadd i32 %nrm_load, i32 %mul" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 61 'fadd' 'nrm_1' <Predicate = true> <Delay = 3.35> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 9> <II = 1> <Delay = 3.35> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 20> <Delay = 3.35>
ST_21 : Operation 62 [1/10] (3.35ns)   --->   "%nrm_1 = fadd i32 %nrm_load, i32 %mul" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85]   --->   Operation 62 'fadd' 'nrm_1' <Predicate = true> <Delay = 3.35> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 9> <II = 1> <Delay = 3.35> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 1.58>
ST_22 : Operation 63 [1/1] (0.00ns)   --->   "%specpipeline_ln84 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:84]   --->   Operation 63 'specpipeline' 'specpipeline_ln84' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 64 [1/1] (0.00ns)   --->   "%speclooptripcount_ln84 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 32, i64 32, i64 32" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:84]   --->   Operation 64 'speclooptripcount' 'speclooptripcount_ln84' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 65 [1/1] (0.00ns)   --->   "%specloopname_ln84 = specloopname void @_ssdm_op_SpecLoopName, void @empty_5" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:84]   --->   Operation 65 'specloopname' 'specloopname_ln84' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 66 [1/1] (1.58ns)   --->   "%store_ln83 = store i32 %nrm_1, i32 %nrm" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:83]   --->   Operation 66 'store' 'store_ln83' <Predicate = true> <Delay = 1.58>
ST_22 : Operation 67 [1/1] (0.00ns)   --->   "%br_ln84 = br void %for.inc63" [benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:84]   --->   Operation 67 'br' 'br_ln84' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5.000ns, clock uncertainty: 1.350ns.

 <State 1>: 2.370ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln84', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:84) of constant 0 on local variable 'i', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:84 [7]  (1.588 ns)
	'load' operation 11 bit ('i', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:84) on local variable 'i', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:84 [11]  (0.000 ns)
	'or' operation 5 bit ('or_ln85', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85) [20]  (0.782 ns)

 <State 2>: 3.254ns
The critical path consists of the following:
	'getelementptr' operation 10 bit ('a_addr_1', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85) [24]  (0.000 ns)
	'load' operation 32 bit ('a_load', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85) on array 'a' [25]  (3.254 ns)

 <State 3>: 3.254ns
The critical path consists of the following:
	'load' operation 32 bit ('a_load', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85) on array 'a' [25]  (3.254 ns)

 <State 4>: 2.566ns
The critical path consists of the following:
	'fmul' operation 32 bit ('mul', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85) [26]  (2.566 ns)

 <State 5>: 2.566ns
The critical path consists of the following:
	'fmul' operation 32 bit ('mul', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85) [26]  (2.566 ns)

 <State 6>: 2.566ns
The critical path consists of the following:
	'fmul' operation 32 bit ('mul', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85) [26]  (2.566 ns)

 <State 7>: 2.566ns
The critical path consists of the following:
	'fmul' operation 32 bit ('mul', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85) [26]  (2.566 ns)

 <State 8>: 2.566ns
The critical path consists of the following:
	'fmul' operation 32 bit ('mul', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85) [26]  (2.566 ns)

 <State 9>: 2.566ns
The critical path consists of the following:
	'fmul' operation 32 bit ('mul', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85) [26]  (2.566 ns)

 <State 10>: 3.227ns
The critical path consists of the following:
	'add' operation 11 bit ('add_ln84', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:84) [28]  (1.639 ns)
	'store' operation 0 bit ('store_ln84', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:84) of variable 'add_ln84', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:84 on local variable 'i', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:84 [29]  (1.588 ns)

 <State 11>: 2.566ns
The critical path consists of the following:
	'fmul' operation 32 bit ('mul', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85) [26]  (2.566 ns)

 <State 12>: 3.356ns
The critical path consists of the following:
	'load' operation 32 bit ('nrm_load', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85) on local variable 'nrm', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:83 [15]  (0.000 ns)
	'fadd' operation 32 bit ('nrm', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85) [27]  (3.356 ns)

 <State 13>: 3.356ns
The critical path consists of the following:
	'fadd' operation 32 bit ('nrm', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85) [27]  (3.356 ns)

 <State 14>: 3.356ns
The critical path consists of the following:
	'fadd' operation 32 bit ('nrm', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85) [27]  (3.356 ns)

 <State 15>: 3.356ns
The critical path consists of the following:
	'fadd' operation 32 bit ('nrm', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85) [27]  (3.356 ns)

 <State 16>: 3.356ns
The critical path consists of the following:
	'fadd' operation 32 bit ('nrm', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85) [27]  (3.356 ns)

 <State 17>: 3.356ns
The critical path consists of the following:
	'fadd' operation 32 bit ('nrm', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85) [27]  (3.356 ns)

 <State 18>: 3.356ns
The critical path consists of the following:
	'fadd' operation 32 bit ('nrm', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85) [27]  (3.356 ns)

 <State 19>: 3.356ns
The critical path consists of the following:
	'fadd' operation 32 bit ('nrm', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85) [27]  (3.356 ns)

 <State 20>: 3.356ns
The critical path consists of the following:
	'fadd' operation 32 bit ('nrm', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85) [27]  (3.356 ns)

 <State 21>: 3.356ns
The critical path consists of the following:
	'fadd' operation 32 bit ('nrm', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85) [27]  (3.356 ns)

 <State 22>: 1.588ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln83', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:83) of variable 'nrm', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:85 on local variable 'nrm', benchmarks/jianyicheng/gramSchmidt/src/gramSchmidt.cpp:83 [30]  (1.588 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
