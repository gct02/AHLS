-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gramSchmidt is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    a_ce0 : OUT STD_LOGIC;
    a_we0 : OUT STD_LOGIC;
    a_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    a_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    a_ce1 : OUT STD_LOGIC;
    a_we1 : OUT STD_LOGIC;
    a_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    r_ce0 : OUT STD_LOGIC;
    r_we0 : OUT STD_LOGIC;
    r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    q_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    q_ce0 : OUT STD_LOGIC;
    q_we0 : OUT STD_LOGIC;
    q_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    q_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    q_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    q_ce1 : OUT STD_LOGIC;
    q_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of gramSchmidt is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "gramSchmidt_gramSchmidt,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu35p-fsvh2104-1-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.905571,HLS_SYN_LAT=97025,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=17765,HLS_SYN_LUT=13081,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (35 downto 0) := "000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (35 downto 0) := "000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (35 downto 0) := "000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (35 downto 0) := "000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (35 downto 0) := "000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (35 downto 0) := "000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (35 downto 0) := "000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (35 downto 0) := "000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (35 downto 0) := "000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (35 downto 0) := "001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (35 downto 0) := "010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (35 downto 0) := "100000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_C1000000 : STD_LOGIC_VECTOR (31 downto 0) := "11000001000000000000000000000000";
    constant ap_const_lv32_41800000 : STD_LOGIC_VECTOR (31 downto 0) := "01000001100000000000000000000000";
    constant ap_const_lv32_40000000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_3AF9096C : STD_LOGIC_VECTOR (31 downto 0) := "00111010111110010000100101101100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv11_20 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_fu_137_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_149 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal grp_fu_144_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_155 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal k_1_reg_292 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal trunc_ln42_fu_179_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln42_reg_298 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln42_1_fu_208_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln42_1_reg_314 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal q_load_reg_324 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal indvars_iv24_load_reg_329 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal bitcast_ln45_fu_250_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln45_reg_334 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_ap_start : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_ap_done : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_ap_idle : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_ap_ready : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_a_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_a_ce0 : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_nrm_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_nrm_out_ap_vld : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_137_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_137_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_137_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_137_p_ce : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_144_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_144_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_144_p_ce : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_ap_start : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_ap_done : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_ap_idle : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_ap_ready : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_a_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_a_ce0 : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_q_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_q_ce0 : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_q_we0 : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_q_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_ap_start : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_ap_done : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_ap_idle : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_ap_ready : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_ce0 : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_we0 : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_ce1 : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_we1 : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_q_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_q_ce0 : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_q_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_q_ce1 : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_r_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_r_ce0 : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_r_we0 : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_144_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_144_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_144_p_ce : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_137_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_137_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_137_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_137_p_ce : STD_LOGIC;
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln42_fu_184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal zext_ln39_fu_221_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln42_fu_242_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal indvars_iv24_fu_60 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal add_ln34_fu_254_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal kk_fu_64 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    signal add_ln49_fu_231_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_fu_68 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal add_ln42_fu_190_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal bitcast_ln39_fu_226_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_137_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_137_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal grp_fu_144_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_144_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal zext_ln42_1_fu_212_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln39_fu_215_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_137_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_137_ce : STD_LOGIC;
    signal grp_fu_144_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (35 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component gramSchmidt_gramSchmidt_Pipeline_VITIS_LOOP_36_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln42_4 : IN STD_LOGIC_VECTOR (4 downto 0);
        a_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        nrm_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        nrm_out_ap_vld : OUT STD_LOGIC;
        grp_fu_137_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_137_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_137_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_137_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_137_p_ce : OUT STD_LOGIC;
        grp_fu_144_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_144_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_144_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_144_p_ce : OUT STD_LOGIC );
    end component;


    component gramSchmidt_gramSchmidt_Pipeline_VITIS_LOOP_40_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln42_4 : IN STD_LOGIC_VECTOR (4 downto 0);
        a_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        nrm_2 : IN STD_LOGIC_VECTOR (31 downto 0);
        q_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        q_ce0 : OUT STD_LOGIC;
        q_we0 : OUT STD_LOGIC;
        q_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component gramSchmidt_gramSchmidt_Pipeline_VITIS_LOOP_42_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln42_1 : IN STD_LOGIC_VECTOR (5 downto 0);
        empty : IN STD_LOGIC_VECTOR (9 downto 0);
        a_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_we0 : OUT STD_LOGIC;
        a_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        a_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        a_ce1 : OUT STD_LOGIC;
        a_we1 : OUT STD_LOGIC;
        a_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        a_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        bitcast_ln45 : IN STD_LOGIC_VECTOR (31 downto 0);
        k : IN STD_LOGIC_VECTOR (4 downto 0);
        q_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        q_ce0 : OUT STD_LOGIC;
        q_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        q_ce1 : OUT STD_LOGIC;
        q_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        zext_ln42_3 : IN STD_LOGIC_VECTOR (4 downto 0);
        zext_ln42_2 : IN STD_LOGIC_VECTOR (4 downto 0);
        zext_ln42_4 : IN STD_LOGIC_VECTOR (4 downto 0);
        r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        r_ce0 : OUT STD_LOGIC;
        r_we0 : OUT STD_LOGIC;
        r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_144_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_144_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_144_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_144_p_ce : OUT STD_LOGIC;
        grp_fu_137_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_137_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_137_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_137_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_137_p_ce : OUT STD_LOGIC );
    end component;


    component gramSchmidt_faddfsub_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component gramSchmidt_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102 : component gramSchmidt_gramSchmidt_Pipeline_VITIS_LOOP_36_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_ap_start,
        ap_done => grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_ap_done,
        ap_idle => grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_ap_idle,
        ap_ready => grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_ap_ready,
        zext_ln42_4 => trunc_ln42_reg_298,
        a_address0 => grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_a_address0,
        a_ce0 => grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_a_ce0,
        a_q0 => a_q0,
        nrm_out => grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_nrm_out,
        nrm_out_ap_vld => grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_nrm_out_ap_vld,
        grp_fu_137_p_din0 => grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_137_p_din0,
        grp_fu_137_p_din1 => grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_137_p_din1,
        grp_fu_137_p_opcode => grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_137_p_opcode,
        grp_fu_137_p_dout0 => grp_fu_137_p2,
        grp_fu_137_p_ce => grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_137_p_ce,
        grp_fu_144_p_din0 => grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_144_p_din0,
        grp_fu_144_p_din1 => grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_144_p_din1,
        grp_fu_144_p_dout0 => grp_fu_144_p2,
        grp_fu_144_p_ce => grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_144_p_ce);

    grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110 : component gramSchmidt_gramSchmidt_Pipeline_VITIS_LOOP_40_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_ap_start,
        ap_done => grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_ap_done,
        ap_idle => grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_ap_idle,
        ap_ready => grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_ap_ready,
        zext_ln42_4 => trunc_ln42_reg_298,
        a_address0 => grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_a_address0,
        a_ce0 => grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_a_ce0,
        a_q0 => a_q0,
        nrm_2 => reg_149,
        q_address0 => grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_q_address0,
        q_ce0 => grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_q_ce0,
        q_we0 => grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_q_we0,
        q_d0 => grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_q_d0);

    grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120 : component gramSchmidt_gramSchmidt_Pipeline_VITIS_LOOP_42_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_ap_start,
        ap_done => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_ap_done,
        ap_idle => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_ap_idle,
        ap_ready => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_ap_ready,
        zext_ln42_1 => indvars_iv24_load_reg_329,
        empty => trunc_ln42_1_reg_314,
        a_address0 => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_address0,
        a_ce0 => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_ce0,
        a_we0 => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_we0,
        a_d0 => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_d0,
        a_q0 => a_q0,
        a_address1 => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_address1,
        a_ce1 => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_ce1,
        a_we1 => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_we1,
        a_d1 => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_d1,
        a_q1 => a_q1,
        bitcast_ln45 => bitcast_ln45_reg_334,
        k => trunc_ln42_reg_298,
        q_address0 => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_q_address0,
        q_ce0 => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_q_ce0,
        q_q0 => q_q0,
        q_address1 => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_q_address1,
        q_ce1 => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_q_ce1,
        q_q1 => q_q1,
        zext_ln42_3 => trunc_ln42_reg_298,
        zext_ln42_2 => trunc_ln42_reg_298,
        zext_ln42_4 => trunc_ln42_reg_298,
        r_address0 => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_r_address0,
        r_ce0 => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_r_ce0,
        r_we0 => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_r_we0,
        r_d0 => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_r_d0,
        grp_fu_144_p_din0 => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_144_p_din0,
        grp_fu_144_p_din1 => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_144_p_din1,
        grp_fu_144_p_dout0 => grp_fu_144_p2,
        grp_fu_144_p_ce => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_144_p_ce,
        grp_fu_137_p_din0 => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_137_p_din0,
        grp_fu_137_p_din1 => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_137_p_din1,
        grp_fu_137_p_opcode => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_137_p_opcode,
        grp_fu_137_p_dout0 => grp_fu_137_p2,
        grp_fu_137_p_ce => grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_137_p_ce);

    faddfsub_32ns_32ns_32_5_full_dsp_1_U87 : component gramSchmidt_faddfsub_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_137_p0,
        din1 => grp_fu_137_p1,
        opcode => grp_fu_137_opcode,
        ce => grp_fu_137_ce,
        dout => grp_fu_137_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U88 : component gramSchmidt_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_144_p0,
        din1 => grp_fu_144_p1,
        ce => grp_fu_144_ce,
        dout => grp_fu_144_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln42_fu_184_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_ap_ready = ap_const_logic_1)) then 
                    grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                    grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_ap_ready = ap_const_logic_1)) then 
                    grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
                    grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_ap_ready = ap_const_logic_1)) then 
                    grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvars_iv24_fu_60_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvars_iv24_fu_60 <= ap_const_lv6_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
                indvars_iv24_fu_60 <= add_ln34_fu_254_p2;
            end if; 
        end if;
    end process;

    k_fu_68_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                k_fu_68 <= ap_const_lv6_0;
            elsif (((icmp_ln42_fu_184_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                k_fu_68 <= add_ln42_fu_190_p2;
            end if; 
        end if;
    end process;

    kk_fu_64_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                kk_fu_64 <= ap_const_lv11_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                kk_fu_64 <= add_ln49_fu_231_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                bitcast_ln45_reg_334 <= bitcast_ln45_fu_250_p1;
                indvars_iv24_load_reg_329 <= indvars_iv24_fu_60;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                k_1_reg_292 <= k_fu_68;
                trunc_ln42_reg_298 <= trunc_ln42_fu_179_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                q_load_reg_324 <= q_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state30))) then
                reg_149 <= grp_fu_137_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state12))) then
                reg_155 <= grp_fu_144_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then
                trunc_ln42_1_reg_314 <= trunc_ln42_1_fu_208_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_ap_done, grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_ap_done, grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_ap_done, icmp_ln42_fu_184_p2, ap_CS_fsm_state3, ap_CS_fsm_state32, ap_CS_fsm_state36)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln42_fu_184_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state32) and (grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                if (((grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    a_address0_assign_proc : process(grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_a_address0, grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_a_address0, grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_address0, ap_CS_fsm_state3, ap_CS_fsm_state32, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            a_address0 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            a_address0 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_a_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            a_address0 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_a_address0;
        else 
            a_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    a_address1 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_address1;

    a_ce0_assign_proc : process(grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_a_ce0, grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_a_ce0, grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_ce0, ap_CS_fsm_state3, ap_CS_fsm_state32, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            a_ce0 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            a_ce0 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_a_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            a_ce0 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_a_ce0;
        else 
            a_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_ce1_assign_proc : process(grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_ce1, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            a_ce1 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_ce1;
        else 
            a_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    a_d0 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_d0;
    a_d1 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_d1;

    a_we0_assign_proc : process(grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_we0, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            a_we0 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_we0;
        else 
            a_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_we1_assign_proc : process(grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_we1, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            a_we1 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_a_we1;
        else 
            a_we1 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln34_fu_254_p2 <= std_logic_vector(unsigned(indvars_iv24_fu_60) + unsigned(ap_const_lv6_1));
    add_ln39_fu_215_p2 <= std_logic_vector(unsigned(trunc_ln42_1_fu_208_p1) + unsigned(zext_ln42_1_fu_212_p1));
    add_ln42_fu_190_p2 <= std_logic_vector(unsigned(k_fu_68) + unsigned(ap_const_lv6_1));
    add_ln49_fu_231_p2 <= std_logic_vector(unsigned(kk_fu_64) + unsigned(ap_const_lv11_20));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;

    ap_ST_fsm_state32_blk_assign_proc : process(grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_ap_done)
    begin
        if ((grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state32_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state32_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;

    ap_ST_fsm_state36_blk_assign_proc : process(grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_ap_done)
    begin
        if ((grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state36_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state36_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_ap_done)
    begin
        if ((grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state2, icmp_ln42_fu_184_p2)
    begin
        if (((icmp_ln42_fu_184_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln42_fu_184_p2)
    begin
        if (((icmp_ln42_fu_184_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln39_fu_226_p1 <= reg_149;
    bitcast_ln45_fu_250_p1 <= q_load_reg_324;

    grp_fu_137_ce_assign_proc : process(grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_137_p_ce, grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_137_p_ce, ap_CS_fsm_state3, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_137_ce <= grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_137_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_137_ce <= grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_137_p_ce;
        else 
            grp_fu_137_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_137_opcode_assign_proc : process(grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_137_p_opcode, grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_137_p_opcode, ap_CS_fsm_state3, ap_CS_fsm_state36, ap_CS_fsm_state4, ap_CS_fsm_state13, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_137_opcode <= grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_137_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_137_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_137_p_opcode),2));
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fu_137_opcode <= ap_const_lv2_0;
        else 
            grp_fu_137_opcode <= "XX";
        end if; 
    end process;


    grp_fu_137_p0_assign_proc : process(reg_155, grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_nrm_out, grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_137_p_din0, grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_137_p_din0, ap_CS_fsm_state3, ap_CS_fsm_state36, ap_CS_fsm_state4, ap_CS_fsm_state13, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_137_p0 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_137_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_137_p0 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_137_p_din0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_fu_137_p0 <= reg_155;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_137_p0 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_nrm_out;
        else 
            grp_fu_137_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_137_p1_assign_proc : process(grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_137_p_din1, grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_137_p_din1, ap_CS_fsm_state3, ap_CS_fsm_state36, ap_CS_fsm_state4, ap_CS_fsm_state13, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_137_p1 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_137_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_137_p1 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_137_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_137_p1 <= ap_const_lv32_40000000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_137_p1 <= ap_const_lv32_41800000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_137_p1 <= ap_const_lv32_C1000000;
        else 
            grp_fu_137_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_144_ce_assign_proc : process(grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_144_p_ce, grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_144_p_ce, ap_CS_fsm_state3, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_144_ce <= grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_144_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_144_ce <= grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_144_p_ce;
        else 
            grp_fu_144_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_144_p0_assign_proc : process(reg_149, reg_155, grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_144_p_din0, grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_144_p_din0, ap_CS_fsm_state3, ap_CS_fsm_state36, ap_CS_fsm_state9, ap_CS_fsm_state18, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_144_p0 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_144_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_144_p0 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_144_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            grp_fu_144_p0 <= reg_155;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_fu_144_p0 <= reg_149;
        else 
            grp_fu_144_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_144_p1_assign_proc : process(grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_nrm_out, grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_144_p_din1, grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_144_p_din1, ap_CS_fsm_state3, ap_CS_fsm_state36, ap_CS_fsm_state9, ap_CS_fsm_state18, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_144_p1 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_grp_fu_144_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_144_p1 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_grp_fu_144_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_144_p1 <= ap_const_lv32_3AF9096C;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_fu_144_p1 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_nrm_out;
        else 
            grp_fu_144_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_ap_start <= grp_gramSchmidt_Pipeline_VITIS_LOOP_36_2_fu_102_ap_start_reg;
    grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_ap_start <= grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_ap_start_reg;
    grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_ap_start <= grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_ap_start_reg;
    icmp_ln42_fu_184_p2 <= "1" when (k_fu_68 = ap_const_lv6_20) else "0";

    q_address0_assign_proc : process(ap_CS_fsm_state33, grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_q_address0, grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_q_address0, ap_CS_fsm_state32, ap_CS_fsm_state36, zext_ln42_fu_242_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            q_address0 <= zext_ln42_fu_242_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            q_address0 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_q_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            q_address0 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_q_address0;
        else 
            q_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    q_address1 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_q_address1;

    q_ce0_assign_proc : process(ap_CS_fsm_state33, grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_q_ce0, grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_q_ce0, ap_CS_fsm_state32, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            q_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            q_ce0 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_q_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            q_ce0 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_q_ce0;
        else 
            q_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    q_ce1_assign_proc : process(grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_q_ce1, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            q_ce1 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_q_ce1;
        else 
            q_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    q_d0 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_q_d0;

    q_we0_assign_proc : process(grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_q_we0, ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            q_we0 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_40_3_fu_110_q_we0;
        else 
            q_we0 <= ap_const_logic_0;
        end if; 
    end process;


    r_address0_assign_proc : process(ap_CS_fsm_state31, grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_r_address0, ap_CS_fsm_state36, zext_ln39_fu_221_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            r_address0 <= zext_ln39_fu_221_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            r_address0 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_r_address0;
        else 
            r_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    r_ce0_assign_proc : process(ap_CS_fsm_state31, grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_r_ce0, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            r_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            r_ce0 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_r_ce0;
        else 
            r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    r_d0_assign_proc : process(ap_CS_fsm_state31, grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_r_d0, ap_CS_fsm_state36, bitcast_ln39_fu_226_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            r_d0 <= bitcast_ln39_fu_226_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            r_d0 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_r_d0;
        else 
            r_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    r_we0_assign_proc : process(ap_CS_fsm_state31, grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_r_we0, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            r_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            r_we0 <= grp_gramSchmidt_Pipeline_VITIS_LOOP_42_4_fu_120_r_we0;
        else 
            r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln42_1_fu_208_p1 <= kk_fu_64(10 - 1 downto 0);
    trunc_ln42_fu_179_p1 <= k_fu_68(5 - 1 downto 0);
    zext_ln39_fu_221_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln39_fu_215_p2),64));
    zext_ln42_1_fu_212_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_1_reg_292),10));
    zext_ln42_fu_242_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_1_reg_292),64));
end behav;
