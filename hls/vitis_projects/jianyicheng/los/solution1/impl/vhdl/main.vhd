-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity main is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of main is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "main_main,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.118000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=16,HLS_SYN_DSP=0,HLS_SYN_FF=4478,HLS_SYN_LUT=7724,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv16_ACE1 : STD_LOGIC_VECTOR (15 downto 0) := "1010110011100001";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_1_reg_573 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln417_fu_269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal obstacles_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal obstacles_0_ce0 : STD_LOGIC;
    signal obstacles_0_we0 : STD_LOGIC;
    signal obstacles_0_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal obstacles_0_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal obstacles_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal obstacles_1_ce0 : STD_LOGIC;
    signal obstacles_1_we0 : STD_LOGIC;
    signal obstacles_1_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal obstacles_1_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal obstacles_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal obstacles_2_ce0 : STD_LOGIC;
    signal obstacles_2_we0 : STD_LOGIC;
    signal obstacles_2_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal obstacles_2_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal obstacles_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal obstacles_3_ce0 : STD_LOGIC;
    signal obstacles_3_we0 : STD_LOGIC;
    signal obstacles_3_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal obstacles_3_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal obstacles_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal obstacles_4_ce0 : STD_LOGIC;
    signal obstacles_4_we0 : STD_LOGIC;
    signal obstacles_4_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal obstacles_4_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal obstacles_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal obstacles_5_ce0 : STD_LOGIC;
    signal obstacles_5_we0 : STD_LOGIC;
    signal obstacles_5_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal obstacles_5_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal obstacles_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal obstacles_6_ce0 : STD_LOGIC;
    signal obstacles_6_we0 : STD_LOGIC;
    signal obstacles_6_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal obstacles_6_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal obstacles_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal obstacles_7_ce0 : STD_LOGIC;
    signal obstacles_7_we0 : STD_LOGIC;
    signal obstacles_7_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal obstacles_7_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_los_fu_236_ap_start : STD_LOGIC;
    signal grp_los_fu_236_ap_done : STD_LOGIC;
    signal grp_los_fu_236_ap_idle : STD_LOGIC;
    signal grp_los_fu_236_ap_ready : STD_LOGIC;
    signal grp_los_fu_236_obstacles_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_los_fu_236_obstacles_0_ce0 : STD_LOGIC;
    signal grp_los_fu_236_obstacles_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_los_fu_236_obstacles_1_ce0 : STD_LOGIC;
    signal grp_los_fu_236_obstacles_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_los_fu_236_obstacles_2_ce0 : STD_LOGIC;
    signal grp_los_fu_236_obstacles_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_los_fu_236_obstacles_3_ce0 : STD_LOGIC;
    signal grp_los_fu_236_obstacles_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_los_fu_236_obstacles_4_ce0 : STD_LOGIC;
    signal grp_los_fu_236_obstacles_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_los_fu_236_obstacles_5_ce0 : STD_LOGIC;
    signal grp_los_fu_236_obstacles_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_los_fu_236_obstacles_6_ce0 : STD_LOGIC;
    signal grp_los_fu_236_obstacles_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_los_fu_236_obstacles_7_ce0 : STD_LOGIC;
    signal grp_los_fu_236_results_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_los_fu_236_results_0_ce0 : STD_LOGIC;
    signal grp_los_fu_236_results_0_we0 : STD_LOGIC;
    signal grp_los_fu_236_results_0_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_los_fu_236_results_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_los_fu_236_results_1_ce0 : STD_LOGIC;
    signal grp_los_fu_236_results_1_we0 : STD_LOGIC;
    signal grp_los_fu_236_results_1_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_los_fu_236_results_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_los_fu_236_results_2_ce0 : STD_LOGIC;
    signal grp_los_fu_236_results_2_we0 : STD_LOGIC;
    signal grp_los_fu_236_results_2_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_los_fu_236_results_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_los_fu_236_results_3_ce0 : STD_LOGIC;
    signal grp_los_fu_236_results_3_we0 : STD_LOGIC;
    signal grp_los_fu_236_results_3_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_los_fu_236_results_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_los_fu_236_results_4_ce0 : STD_LOGIC;
    signal grp_los_fu_236_results_4_we0 : STD_LOGIC;
    signal grp_los_fu_236_results_4_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_los_fu_236_results_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_los_fu_236_results_5_ce0 : STD_LOGIC;
    signal grp_los_fu_236_results_5_we0 : STD_LOGIC;
    signal grp_los_fu_236_results_5_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_los_fu_236_results_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_los_fu_236_results_6_ce0 : STD_LOGIC;
    signal grp_los_fu_236_results_6_we0 : STD_LOGIC;
    signal grp_los_fu_236_results_6_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_los_fu_236_results_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_los_fu_236_results_7_ce0 : STD_LOGIC;
    signal grp_los_fu_236_results_7_we0 : STD_LOGIC;
    signal grp_los_fu_236_results_7_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_los_fu_236_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal zext_ln417_fu_289_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal i_fu_68 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    signal add_ln417_fu_275_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal lfsr_0_fu_72 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal or_ln19_7_fu_532_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_fu_349_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_304_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_313_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_358_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_322_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_367_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_394_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_421_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln19_1_fu_331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln19_fu_337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln19_fu_300_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln19_4_fu_382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln19_3_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln19_7_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln19_6_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln19_9_fu_430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_442_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln19_11_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_462_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln19_13_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_482_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln19_15_fu_490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_502_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln19_17_fu_520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln19_18_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln19_16_fu_496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln19_14_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln19_12_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln19_10_fu_436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln19_8_fu_415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln19_5_fu_388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln19_2_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_510_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component main_los IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        obstacles_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        obstacles_0_ce0 : OUT STD_LOGIC;
        obstacles_0_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        obstacles_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        obstacles_1_ce0 : OUT STD_LOGIC;
        obstacles_1_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        obstacles_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        obstacles_2_ce0 : OUT STD_LOGIC;
        obstacles_2_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        obstacles_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        obstacles_3_ce0 : OUT STD_LOGIC;
        obstacles_3_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        obstacles_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        obstacles_4_ce0 : OUT STD_LOGIC;
        obstacles_4_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        obstacles_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        obstacles_5_ce0 : OUT STD_LOGIC;
        obstacles_5_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        obstacles_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        obstacles_6_ce0 : OUT STD_LOGIC;
        obstacles_6_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        obstacles_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        obstacles_7_ce0 : OUT STD_LOGIC;
        obstacles_7_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        results_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        results_0_ce0 : OUT STD_LOGIC;
        results_0_we0 : OUT STD_LOGIC;
        results_0_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        results_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        results_1_ce0 : OUT STD_LOGIC;
        results_1_we0 : OUT STD_LOGIC;
        results_1_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        results_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        results_2_ce0 : OUT STD_LOGIC;
        results_2_we0 : OUT STD_LOGIC;
        results_2_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        results_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        results_3_ce0 : OUT STD_LOGIC;
        results_3_we0 : OUT STD_LOGIC;
        results_3_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        results_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        results_4_ce0 : OUT STD_LOGIC;
        results_4_we0 : OUT STD_LOGIC;
        results_4_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        results_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        results_5_ce0 : OUT STD_LOGIC;
        results_5_we0 : OUT STD_LOGIC;
        results_5_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        results_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        results_6_ce0 : OUT STD_LOGIC;
        results_6_we0 : OUT STD_LOGIC;
        results_6_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        results_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        results_7_ce0 : OUT STD_LOGIC;
        results_7_we0 : OUT STD_LOGIC;
        results_7_d0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component main_obstacles_0_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component main_results_0_RAM_AUTO_0R0W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    obstacles_0_U : component main_obstacles_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 1,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => obstacles_0_address0,
        ce0 => obstacles_0_ce0,
        we0 => obstacles_0_we0,
        d0 => obstacles_0_d0,
        q0 => obstacles_0_q0);

    obstacles_1_U : component main_obstacles_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 1,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => obstacles_1_address0,
        ce0 => obstacles_1_ce0,
        we0 => obstacles_1_we0,
        d0 => obstacles_1_d0,
        q0 => obstacles_1_q0);

    obstacles_2_U : component main_obstacles_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 1,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => obstacles_2_address0,
        ce0 => obstacles_2_ce0,
        we0 => obstacles_2_we0,
        d0 => obstacles_2_d0,
        q0 => obstacles_2_q0);

    obstacles_3_U : component main_obstacles_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 1,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => obstacles_3_address0,
        ce0 => obstacles_3_ce0,
        we0 => obstacles_3_we0,
        d0 => obstacles_3_d0,
        q0 => obstacles_3_q0);

    obstacles_4_U : component main_obstacles_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 1,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => obstacles_4_address0,
        ce0 => obstacles_4_ce0,
        we0 => obstacles_4_we0,
        d0 => obstacles_4_d0,
        q0 => obstacles_4_q0);

    obstacles_5_U : component main_obstacles_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 1,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => obstacles_5_address0,
        ce0 => obstacles_5_ce0,
        we0 => obstacles_5_we0,
        d0 => obstacles_5_d0,
        q0 => obstacles_5_q0);

    obstacles_6_U : component main_obstacles_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 1,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => obstacles_6_address0,
        ce0 => obstacles_6_ce0,
        we0 => obstacles_6_we0,
        d0 => obstacles_6_d0,
        q0 => obstacles_6_q0);

    obstacles_7_U : component main_obstacles_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 1,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => obstacles_7_address0,
        ce0 => obstacles_7_ce0,
        we0 => obstacles_7_we0,
        d0 => obstacles_7_d0,
        q0 => obstacles_7_q0);

    results_0_U : component main_results_0_RAM_AUTO_0R0W
    generic map (
        DataWidth => 1,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_los_fu_236_results_0_address0,
        ce0 => grp_los_fu_236_results_0_ce0,
        we0 => grp_los_fu_236_results_0_we0,
        d0 => grp_los_fu_236_results_0_d0);

    results_1_U : component main_results_0_RAM_AUTO_0R0W
    generic map (
        DataWidth => 1,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_los_fu_236_results_1_address0,
        ce0 => grp_los_fu_236_results_1_ce0,
        we0 => grp_los_fu_236_results_1_we0,
        d0 => grp_los_fu_236_results_1_d0);

    results_2_U : component main_results_0_RAM_AUTO_0R0W
    generic map (
        DataWidth => 1,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_los_fu_236_results_2_address0,
        ce0 => grp_los_fu_236_results_2_ce0,
        we0 => grp_los_fu_236_results_2_we0,
        d0 => grp_los_fu_236_results_2_d0);

    results_3_U : component main_results_0_RAM_AUTO_0R0W
    generic map (
        DataWidth => 1,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_los_fu_236_results_3_address0,
        ce0 => grp_los_fu_236_results_3_ce0,
        we0 => grp_los_fu_236_results_3_we0,
        d0 => grp_los_fu_236_results_3_d0);

    results_4_U : component main_results_0_RAM_AUTO_0R0W
    generic map (
        DataWidth => 1,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_los_fu_236_results_4_address0,
        ce0 => grp_los_fu_236_results_4_ce0,
        we0 => grp_los_fu_236_results_4_we0,
        d0 => grp_los_fu_236_results_4_d0);

    results_5_U : component main_results_0_RAM_AUTO_0R0W
    generic map (
        DataWidth => 1,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_los_fu_236_results_5_address0,
        ce0 => grp_los_fu_236_results_5_ce0,
        we0 => grp_los_fu_236_results_5_we0,
        d0 => grp_los_fu_236_results_5_d0);

    results_6_U : component main_results_0_RAM_AUTO_0R0W
    generic map (
        DataWidth => 1,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_los_fu_236_results_6_address0,
        ce0 => grp_los_fu_236_results_6_ce0,
        we0 => grp_los_fu_236_results_6_we0,
        d0 => grp_los_fu_236_results_6_d0);

    results_7_U : component main_results_0_RAM_AUTO_0R0W
    generic map (
        DataWidth => 1,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_los_fu_236_results_7_address0,
        ce0 => grp_los_fu_236_results_7_ce0,
        we0 => grp_los_fu_236_results_7_we0,
        d0 => grp_los_fu_236_results_7_d0);

    grp_los_fu_236 : component main_los
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_los_fu_236_ap_start,
        ap_done => grp_los_fu_236_ap_done,
        ap_idle => grp_los_fu_236_ap_idle,
        ap_ready => grp_los_fu_236_ap_ready,
        obstacles_0_address0 => grp_los_fu_236_obstacles_0_address0,
        obstacles_0_ce0 => grp_los_fu_236_obstacles_0_ce0,
        obstacles_0_q0 => obstacles_0_q0,
        obstacles_1_address0 => grp_los_fu_236_obstacles_1_address0,
        obstacles_1_ce0 => grp_los_fu_236_obstacles_1_ce0,
        obstacles_1_q0 => obstacles_1_q0,
        obstacles_2_address0 => grp_los_fu_236_obstacles_2_address0,
        obstacles_2_ce0 => grp_los_fu_236_obstacles_2_ce0,
        obstacles_2_q0 => obstacles_2_q0,
        obstacles_3_address0 => grp_los_fu_236_obstacles_3_address0,
        obstacles_3_ce0 => grp_los_fu_236_obstacles_3_ce0,
        obstacles_3_q0 => obstacles_3_q0,
        obstacles_4_address0 => grp_los_fu_236_obstacles_4_address0,
        obstacles_4_ce0 => grp_los_fu_236_obstacles_4_ce0,
        obstacles_4_q0 => obstacles_4_q0,
        obstacles_5_address0 => grp_los_fu_236_obstacles_5_address0,
        obstacles_5_ce0 => grp_los_fu_236_obstacles_5_ce0,
        obstacles_5_q0 => obstacles_5_q0,
        obstacles_6_address0 => grp_los_fu_236_obstacles_6_address0,
        obstacles_6_ce0 => grp_los_fu_236_obstacles_6_ce0,
        obstacles_6_q0 => obstacles_6_q0,
        obstacles_7_address0 => grp_los_fu_236_obstacles_7_address0,
        obstacles_7_ce0 => grp_los_fu_236_obstacles_7_ce0,
        obstacles_7_q0 => obstacles_7_q0,
        results_0_address0 => grp_los_fu_236_results_0_address0,
        results_0_ce0 => grp_los_fu_236_results_0_ce0,
        results_0_we0 => grp_los_fu_236_results_0_we0,
        results_0_d0 => grp_los_fu_236_results_0_d0,
        results_1_address0 => grp_los_fu_236_results_1_address0,
        results_1_ce0 => grp_los_fu_236_results_1_ce0,
        results_1_we0 => grp_los_fu_236_results_1_we0,
        results_1_d0 => grp_los_fu_236_results_1_d0,
        results_2_address0 => grp_los_fu_236_results_2_address0,
        results_2_ce0 => grp_los_fu_236_results_2_ce0,
        results_2_we0 => grp_los_fu_236_results_2_we0,
        results_2_d0 => grp_los_fu_236_results_2_d0,
        results_3_address0 => grp_los_fu_236_results_3_address0,
        results_3_ce0 => grp_los_fu_236_results_3_ce0,
        results_3_we0 => grp_los_fu_236_results_3_we0,
        results_3_d0 => grp_los_fu_236_results_3_d0,
        results_4_address0 => grp_los_fu_236_results_4_address0,
        results_4_ce0 => grp_los_fu_236_results_4_ce0,
        results_4_we0 => grp_los_fu_236_results_4_we0,
        results_4_d0 => grp_los_fu_236_results_4_d0,
        results_5_address0 => grp_los_fu_236_results_5_address0,
        results_5_ce0 => grp_los_fu_236_results_5_ce0,
        results_5_we0 => grp_los_fu_236_results_5_we0,
        results_5_d0 => grp_los_fu_236_results_5_d0,
        results_6_address0 => grp_los_fu_236_results_6_address0,
        results_6_ce0 => grp_los_fu_236_results_6_ce0,
        results_6_we0 => grp_los_fu_236_results_6_we0,
        results_6_d0 => grp_los_fu_236_results_6_d0,
        results_7_address0 => grp_los_fu_236_results_7_address0,
        results_7_ce0 => grp_los_fu_236_results_7_ce0,
        results_7_we0 => grp_los_fu_236_results_7_we0,
        results_7_d0 => grp_los_fu_236_results_7_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_los_fu_236_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_los_fu_236_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_los_fu_236_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_los_fu_236_ap_ready = ap_const_logic_1)) then 
                    grp_los_fu_236_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_68_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_fu_68 <= ap_const_lv11_0;
            elsif (((icmp_ln417_fu_269_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_fu_68 <= add_ln417_fu_275_p2;
            end if; 
        end if;
    end process;

    lfsr_0_fu_72_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                lfsr_0_fu_72 <= ap_const_lv16_ACE1;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                lfsr_0_fu_72 <= or_ln19_7_fu_532_p10;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_1_reg_573 <= i_fu_68;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln417_fu_269_p2, ap_enable_reg_pp0_iter1, grp_los_fu_236_ap_done, ap_CS_fsm_state5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln417_fu_269_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((icmp_ln417_fu_269_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_los_fu_236_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln417_fu_275_p2 <= std_logic_vector(unsigned(i_fu_68) + unsigned(ap_const_lv11_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_los_fu_236_ap_done)
    begin
        if ((grp_los_fu_236_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln417_fu_269_p2)
    begin
        if ((icmp_ln417_fu_269_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(grp_los_fu_236_ap_done, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_los_fu_236_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_los_fu_236_ap_done, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_los_fu_236_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_const_lv32_0;
    grp_los_fu_236_ap_start <= grp_los_fu_236_ap_start_reg;
    icmp_ln417_fu_269_p2 <= "1" when (i_fu_68 = ap_const_lv11_400) else "0";

    obstacles_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, grp_los_fu_236_obstacles_0_address0, ap_CS_fsm_state5, zext_ln417_fu_289_p1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            obstacles_0_address0 <= zext_ln417_fu_289_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            obstacles_0_address0 <= grp_los_fu_236_obstacles_0_address0;
        else 
            obstacles_0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    obstacles_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1, grp_los_fu_236_obstacles_0_ce0, ap_CS_fsm_state5)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            obstacles_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            obstacles_0_ce0 <= grp_los_fu_236_obstacles_0_ce0;
        else 
            obstacles_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    obstacles_0_d0 <= lfsr_0_fu_72(1 downto 1);

    obstacles_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            obstacles_0_we0 <= ap_const_logic_1;
        else 
            obstacles_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    obstacles_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, grp_los_fu_236_obstacles_1_address0, ap_CS_fsm_state5, zext_ln417_fu_289_p1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            obstacles_1_address0 <= zext_ln417_fu_289_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            obstacles_1_address0 <= grp_los_fu_236_obstacles_1_address0;
        else 
            obstacles_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    obstacles_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1, grp_los_fu_236_obstacles_1_ce0, ap_CS_fsm_state5)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            obstacles_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            obstacles_1_ce0 <= grp_los_fu_236_obstacles_1_ce0;
        else 
            obstacles_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    obstacles_1_d0 <= lfsr_0_fu_72(2 downto 2);

    obstacles_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            obstacles_1_we0 <= ap_const_logic_1;
        else 
            obstacles_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    obstacles_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, grp_los_fu_236_obstacles_2_address0, ap_CS_fsm_state5, zext_ln417_fu_289_p1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            obstacles_2_address0 <= zext_ln417_fu_289_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            obstacles_2_address0 <= grp_los_fu_236_obstacles_2_address0;
        else 
            obstacles_2_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    obstacles_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1, grp_los_fu_236_obstacles_2_ce0, ap_CS_fsm_state5)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            obstacles_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            obstacles_2_ce0 <= grp_los_fu_236_obstacles_2_ce0;
        else 
            obstacles_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    obstacles_2_d0 <= lfsr_0_fu_72(3 downto 3);

    obstacles_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            obstacles_2_we0 <= ap_const_logic_1;
        else 
            obstacles_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    obstacles_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, grp_los_fu_236_obstacles_3_address0, ap_CS_fsm_state5, zext_ln417_fu_289_p1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            obstacles_3_address0 <= zext_ln417_fu_289_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            obstacles_3_address0 <= grp_los_fu_236_obstacles_3_address0;
        else 
            obstacles_3_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    obstacles_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1, grp_los_fu_236_obstacles_3_ce0, ap_CS_fsm_state5)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            obstacles_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            obstacles_3_ce0 <= grp_los_fu_236_obstacles_3_ce0;
        else 
            obstacles_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    obstacles_3_d0 <= lfsr_0_fu_72(4 downto 4);

    obstacles_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            obstacles_3_we0 <= ap_const_logic_1;
        else 
            obstacles_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    obstacles_4_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, grp_los_fu_236_obstacles_4_address0, ap_CS_fsm_state5, zext_ln417_fu_289_p1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            obstacles_4_address0 <= zext_ln417_fu_289_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            obstacles_4_address0 <= grp_los_fu_236_obstacles_4_address0;
        else 
            obstacles_4_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    obstacles_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1, grp_los_fu_236_obstacles_4_ce0, ap_CS_fsm_state5)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            obstacles_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            obstacles_4_ce0 <= grp_los_fu_236_obstacles_4_ce0;
        else 
            obstacles_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    obstacles_4_d0 <= lfsr_0_fu_72(5 downto 5);

    obstacles_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            obstacles_4_we0 <= ap_const_logic_1;
        else 
            obstacles_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    obstacles_5_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, grp_los_fu_236_obstacles_5_address0, ap_CS_fsm_state5, zext_ln417_fu_289_p1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            obstacles_5_address0 <= zext_ln417_fu_289_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            obstacles_5_address0 <= grp_los_fu_236_obstacles_5_address0;
        else 
            obstacles_5_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    obstacles_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1, grp_los_fu_236_obstacles_5_ce0, ap_CS_fsm_state5)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            obstacles_5_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            obstacles_5_ce0 <= grp_los_fu_236_obstacles_5_ce0;
        else 
            obstacles_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    obstacles_5_d0 <= lfsr_0_fu_72(6 downto 6);

    obstacles_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            obstacles_5_we0 <= ap_const_logic_1;
        else 
            obstacles_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    obstacles_6_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, grp_los_fu_236_obstacles_6_address0, ap_CS_fsm_state5, zext_ln417_fu_289_p1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            obstacles_6_address0 <= zext_ln417_fu_289_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            obstacles_6_address0 <= grp_los_fu_236_obstacles_6_address0;
        else 
            obstacles_6_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    obstacles_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1, grp_los_fu_236_obstacles_6_ce0, ap_CS_fsm_state5)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            obstacles_6_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            obstacles_6_ce0 <= grp_los_fu_236_obstacles_6_ce0;
        else 
            obstacles_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    obstacles_6_d0 <= lfsr_0_fu_72(7 downto 7);

    obstacles_6_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            obstacles_6_we0 <= ap_const_logic_1;
        else 
            obstacles_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    obstacles_7_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, grp_los_fu_236_obstacles_7_address0, ap_CS_fsm_state5, zext_ln417_fu_289_p1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            obstacles_7_address0 <= zext_ln417_fu_289_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            obstacles_7_address0 <= grp_los_fu_236_obstacles_7_address0;
        else 
            obstacles_7_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    obstacles_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1, grp_los_fu_236_obstacles_7_ce0, ap_CS_fsm_state5)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            obstacles_7_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            obstacles_7_ce0 <= grp_los_fu_236_obstacles_7_ce0;
        else 
            obstacles_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    obstacles_7_d0 <= lfsr_0_fu_72(8 downto 8);

    obstacles_7_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            obstacles_7_we0 <= ap_const_logic_1;
        else 
            obstacles_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln19_7_fu_532_p10 <= ((((((((xor_ln19_18_fu_526_p2 & xor_ln19_16_fu_496_p2) & xor_ln19_14_fu_476_p2) & xor_ln19_12_fu_456_p2) & xor_ln19_10_fu_436_p2) & xor_ln19_8_fu_415_p2) & xor_ln19_5_fu_388_p2) & xor_ln19_2_fu_343_p2) & tmp_fu_510_p4);
    tmp_10_fu_462_p3 <= lfsr_0_fu_72(10 downto 10);
    tmp_11_fu_482_p3 <= lfsr_0_fu_72(11 downto 11);
    tmp_12_fu_502_p3 <= lfsr_0_fu_72(12 downto 12);
    tmp_1_fu_304_p3 <= lfsr_0_fu_72(2 downto 2);
    tmp_2_fu_313_p3 <= lfsr_0_fu_72(3 downto 3);
    tmp_3_fu_322_p3 <= lfsr_0_fu_72(5 downto 5);
    tmp_4_fu_349_p3 <= lfsr_0_fu_72(1 downto 1);
    tmp_5_fu_358_p3 <= lfsr_0_fu_72(4 downto 4);
    tmp_6_fu_367_p3 <= lfsr_0_fu_72(6 downto 6);
    tmp_7_fu_394_p3 <= lfsr_0_fu_72(7 downto 7);
    tmp_8_fu_421_p3 <= lfsr_0_fu_72(8 downto 8);
    tmp_9_fu_442_p3 <= lfsr_0_fu_72(9 downto 9);
    tmp_fu_510_p4 <= lfsr_0_fu_72(15 downto 8);
    trunc_ln19_fu_300_p1 <= lfsr_0_fu_72(1 - 1 downto 0);
    xor_ln19_10_fu_436_p2 <= (xor_ln19_9_fu_430_p2 xor xor_ln19_1_fu_331_p2);
    xor_ln19_11_fu_450_p2 <= (tmp_9_fu_442_p3 xor tmp_7_fu_394_p3);
    xor_ln19_12_fu_456_p2 <= (xor_ln19_4_fu_382_p2 xor xor_ln19_11_fu_450_p2);
    xor_ln19_13_fu_470_p2 <= (tmp_8_fu_421_p3 xor tmp_10_fu_462_p3);
    xor_ln19_14_fu_476_p2 <= (xor_ln19_7_fu_409_p2 xor xor_ln19_13_fu_470_p2);
    xor_ln19_15_fu_490_p2 <= (tmp_9_fu_442_p3 xor tmp_11_fu_482_p3);
    xor_ln19_16_fu_496_p2 <= (xor_ln19_9_fu_430_p2 xor xor_ln19_15_fu_490_p2);
    xor_ln19_17_fu_520_p2 <= (tmp_12_fu_502_p3 xor tmp_10_fu_462_p3);
    xor_ln19_18_fu_526_p2 <= (xor_ln19_17_fu_520_p2 xor xor_ln19_11_fu_450_p2);
    xor_ln19_1_fu_331_p2 <= (tmp_3_fu_322_p3 xor tmp_2_fu_313_p3);
    xor_ln19_2_fu_343_p2 <= (xor_ln19_fu_337_p2 xor trunc_ln19_fu_300_p1);
    xor_ln19_3_fu_376_p2 <= (tmp_4_fu_349_p3 xor tmp_2_fu_313_p3);
    xor_ln19_4_fu_382_p2 <= (tmp_6_fu_367_p3 xor tmp_5_fu_358_p3);
    xor_ln19_5_fu_388_p2 <= (xor_ln19_4_fu_382_p2 xor xor_ln19_3_fu_376_p2);
    xor_ln19_6_fu_403_p2 <= (tmp_5_fu_358_p3 xor tmp_1_fu_304_p3);
    xor_ln19_7_fu_409_p2 <= (tmp_7_fu_394_p3 xor tmp_3_fu_322_p3);
    xor_ln19_8_fu_415_p2 <= (xor_ln19_7_fu_409_p2 xor xor_ln19_6_fu_403_p2);
    xor_ln19_9_fu_430_p2 <= (tmp_8_fu_421_p3 xor tmp_6_fu_367_p3);
    xor_ln19_fu_337_p2 <= (xor_ln19_1_fu_331_p2 xor tmp_1_fu_304_p3);
    zext_ln417_fu_289_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_reg_573),64));
end behav;
