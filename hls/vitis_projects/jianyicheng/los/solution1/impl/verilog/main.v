// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="main_main,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.118000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=16,HLS_SYN_DSP=0,HLS_SYN_FF=4478,HLS_SYN_LUT=7724,HLS_VERSION=2023_2}" *)

module main (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_return
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_state4 = 4'd4;
parameter    ap_ST_fsm_state5 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [10:0] i_1_reg_573;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0_11001;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln417_fu_269_p2;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg   [9:0] obstacles_0_address0;
reg    obstacles_0_ce0;
reg    obstacles_0_we0;
wire   [0:0] obstacles_0_d0;
wire   [0:0] obstacles_0_q0;
reg   [9:0] obstacles_1_address0;
reg    obstacles_1_ce0;
reg    obstacles_1_we0;
wire   [0:0] obstacles_1_d0;
wire   [0:0] obstacles_1_q0;
reg   [9:0] obstacles_2_address0;
reg    obstacles_2_ce0;
reg    obstacles_2_we0;
wire   [0:0] obstacles_2_d0;
wire   [0:0] obstacles_2_q0;
reg   [9:0] obstacles_3_address0;
reg    obstacles_3_ce0;
reg    obstacles_3_we0;
wire   [0:0] obstacles_3_d0;
wire   [0:0] obstacles_3_q0;
reg   [9:0] obstacles_4_address0;
reg    obstacles_4_ce0;
reg    obstacles_4_we0;
wire   [0:0] obstacles_4_d0;
wire   [0:0] obstacles_4_q0;
reg   [9:0] obstacles_5_address0;
reg    obstacles_5_ce0;
reg    obstacles_5_we0;
wire   [0:0] obstacles_5_d0;
wire   [0:0] obstacles_5_q0;
reg   [9:0] obstacles_6_address0;
reg    obstacles_6_ce0;
reg    obstacles_6_we0;
wire   [0:0] obstacles_6_d0;
wire   [0:0] obstacles_6_q0;
reg   [9:0] obstacles_7_address0;
reg    obstacles_7_ce0;
reg    obstacles_7_we0;
wire   [0:0] obstacles_7_d0;
wire   [0:0] obstacles_7_q0;
wire    grp_los_fu_236_ap_start;
wire    grp_los_fu_236_ap_done;
wire    grp_los_fu_236_ap_idle;
wire    grp_los_fu_236_ap_ready;
wire   [9:0] grp_los_fu_236_obstacles_0_address0;
wire    grp_los_fu_236_obstacles_0_ce0;
wire   [9:0] grp_los_fu_236_obstacles_1_address0;
wire    grp_los_fu_236_obstacles_1_ce0;
wire   [9:0] grp_los_fu_236_obstacles_2_address0;
wire    grp_los_fu_236_obstacles_2_ce0;
wire   [9:0] grp_los_fu_236_obstacles_3_address0;
wire    grp_los_fu_236_obstacles_3_ce0;
wire   [9:0] grp_los_fu_236_obstacles_4_address0;
wire    grp_los_fu_236_obstacles_4_ce0;
wire   [9:0] grp_los_fu_236_obstacles_5_address0;
wire    grp_los_fu_236_obstacles_5_ce0;
wire   [9:0] grp_los_fu_236_obstacles_6_address0;
wire    grp_los_fu_236_obstacles_6_ce0;
wire   [9:0] grp_los_fu_236_obstacles_7_address0;
wire    grp_los_fu_236_obstacles_7_ce0;
wire   [9:0] grp_los_fu_236_results_0_address0;
wire    grp_los_fu_236_results_0_ce0;
wire    grp_los_fu_236_results_0_we0;
wire   [0:0] grp_los_fu_236_results_0_d0;
wire   [9:0] grp_los_fu_236_results_1_address0;
wire    grp_los_fu_236_results_1_ce0;
wire    grp_los_fu_236_results_1_we0;
wire   [0:0] grp_los_fu_236_results_1_d0;
wire   [9:0] grp_los_fu_236_results_2_address0;
wire    grp_los_fu_236_results_2_ce0;
wire    grp_los_fu_236_results_2_we0;
wire   [0:0] grp_los_fu_236_results_2_d0;
wire   [9:0] grp_los_fu_236_results_3_address0;
wire    grp_los_fu_236_results_3_ce0;
wire    grp_los_fu_236_results_3_we0;
wire   [0:0] grp_los_fu_236_results_3_d0;
wire   [9:0] grp_los_fu_236_results_4_address0;
wire    grp_los_fu_236_results_4_ce0;
wire    grp_los_fu_236_results_4_we0;
wire   [0:0] grp_los_fu_236_results_4_d0;
wire   [9:0] grp_los_fu_236_results_5_address0;
wire    grp_los_fu_236_results_5_ce0;
wire    grp_los_fu_236_results_5_we0;
wire   [0:0] grp_los_fu_236_results_5_d0;
wire   [9:0] grp_los_fu_236_results_6_address0;
wire    grp_los_fu_236_results_6_ce0;
wire    grp_los_fu_236_results_6_we0;
wire   [0:0] grp_los_fu_236_results_6_d0;
wire   [9:0] grp_los_fu_236_results_7_address0;
wire    grp_los_fu_236_results_7_ce0;
wire    grp_los_fu_236_results_7_we0;
wire   [0:0] grp_los_fu_236_results_7_d0;
reg    grp_los_fu_236_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire   [63:0] zext_ln417_fu_289_p1;
wire    ap_block_pp0_stage0;
reg   [10:0] i_fu_68;
wire   [10:0] add_ln417_fu_275_p2;
reg   [15:0] lfsr_0_fu_72;
wire   [15:0] or_ln19_7_fu_532_p10;
wire   [0:0] tmp_4_fu_349_p3;
wire   [0:0] tmp_1_fu_304_p3;
wire   [0:0] tmp_2_fu_313_p3;
wire   [0:0] tmp_5_fu_358_p3;
wire   [0:0] tmp_3_fu_322_p3;
wire   [0:0] tmp_6_fu_367_p3;
wire   [0:0] tmp_7_fu_394_p3;
wire   [0:0] tmp_8_fu_421_p3;
wire   [0:0] xor_ln19_1_fu_331_p2;
wire   [0:0] xor_ln19_fu_337_p2;
wire   [0:0] trunc_ln19_fu_300_p1;
wire   [0:0] xor_ln19_4_fu_382_p2;
wire   [0:0] xor_ln19_3_fu_376_p2;
wire   [0:0] xor_ln19_7_fu_409_p2;
wire   [0:0] xor_ln19_6_fu_403_p2;
wire   [0:0] xor_ln19_9_fu_430_p2;
wire   [0:0] tmp_9_fu_442_p3;
wire   [0:0] xor_ln19_11_fu_450_p2;
wire   [0:0] tmp_10_fu_462_p3;
wire   [0:0] xor_ln19_13_fu_470_p2;
wire   [0:0] tmp_11_fu_482_p3;
wire   [0:0] xor_ln19_15_fu_490_p2;
wire   [0:0] tmp_12_fu_502_p3;
wire   [0:0] xor_ln19_17_fu_520_p2;
wire   [0:0] xor_ln19_18_fu_526_p2;
wire   [0:0] xor_ln19_16_fu_496_p2;
wire   [0:0] xor_ln19_14_fu_476_p2;
wire   [0:0] xor_ln19_12_fu_456_p2;
wire   [0:0] xor_ln19_10_fu_436_p2;
wire   [0:0] xor_ln19_8_fu_415_p2;
wire   [0:0] xor_ln19_5_fu_388_p2;
wire   [0:0] xor_ln19_2_fu_343_p2;
wire   [7:0] tmp_fu_510_p4;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_los_fu_236_ap_start_reg = 1'b0;
#0 i_fu_68 = 11'd0;
#0 lfsr_0_fu_72 = 16'd0;
end

main_obstacles_0_RAM_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
obstacles_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(obstacles_0_address0),
    .ce0(obstacles_0_ce0),
    .we0(obstacles_0_we0),
    .d0(obstacles_0_d0),
    .q0(obstacles_0_q0)
);

main_obstacles_0_RAM_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
obstacles_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(obstacles_1_address0),
    .ce0(obstacles_1_ce0),
    .we0(obstacles_1_we0),
    .d0(obstacles_1_d0),
    .q0(obstacles_1_q0)
);

main_obstacles_0_RAM_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
obstacles_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(obstacles_2_address0),
    .ce0(obstacles_2_ce0),
    .we0(obstacles_2_we0),
    .d0(obstacles_2_d0),
    .q0(obstacles_2_q0)
);

main_obstacles_0_RAM_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
obstacles_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(obstacles_3_address0),
    .ce0(obstacles_3_ce0),
    .we0(obstacles_3_we0),
    .d0(obstacles_3_d0),
    .q0(obstacles_3_q0)
);

main_obstacles_0_RAM_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
obstacles_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(obstacles_4_address0),
    .ce0(obstacles_4_ce0),
    .we0(obstacles_4_we0),
    .d0(obstacles_4_d0),
    .q0(obstacles_4_q0)
);

main_obstacles_0_RAM_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
obstacles_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(obstacles_5_address0),
    .ce0(obstacles_5_ce0),
    .we0(obstacles_5_we0),
    .d0(obstacles_5_d0),
    .q0(obstacles_5_q0)
);

main_obstacles_0_RAM_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
obstacles_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(obstacles_6_address0),
    .ce0(obstacles_6_ce0),
    .we0(obstacles_6_we0),
    .d0(obstacles_6_d0),
    .q0(obstacles_6_q0)
);

main_obstacles_0_RAM_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
obstacles_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(obstacles_7_address0),
    .ce0(obstacles_7_ce0),
    .we0(obstacles_7_we0),
    .d0(obstacles_7_d0),
    .q0(obstacles_7_q0)
);

main_results_0_RAM_AUTO_0R0W #(
    .DataWidth( 1 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
results_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_los_fu_236_results_0_address0),
    .ce0(grp_los_fu_236_results_0_ce0),
    .we0(grp_los_fu_236_results_0_we0),
    .d0(grp_los_fu_236_results_0_d0)
);

main_results_0_RAM_AUTO_0R0W #(
    .DataWidth( 1 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
results_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_los_fu_236_results_1_address0),
    .ce0(grp_los_fu_236_results_1_ce0),
    .we0(grp_los_fu_236_results_1_we0),
    .d0(grp_los_fu_236_results_1_d0)
);

main_results_0_RAM_AUTO_0R0W #(
    .DataWidth( 1 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
results_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_los_fu_236_results_2_address0),
    .ce0(grp_los_fu_236_results_2_ce0),
    .we0(grp_los_fu_236_results_2_we0),
    .d0(grp_los_fu_236_results_2_d0)
);

main_results_0_RAM_AUTO_0R0W #(
    .DataWidth( 1 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
results_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_los_fu_236_results_3_address0),
    .ce0(grp_los_fu_236_results_3_ce0),
    .we0(grp_los_fu_236_results_3_we0),
    .d0(grp_los_fu_236_results_3_d0)
);

main_results_0_RAM_AUTO_0R0W #(
    .DataWidth( 1 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
results_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_los_fu_236_results_4_address0),
    .ce0(grp_los_fu_236_results_4_ce0),
    .we0(grp_los_fu_236_results_4_we0),
    .d0(grp_los_fu_236_results_4_d0)
);

main_results_0_RAM_AUTO_0R0W #(
    .DataWidth( 1 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
results_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_los_fu_236_results_5_address0),
    .ce0(grp_los_fu_236_results_5_ce0),
    .we0(grp_los_fu_236_results_5_we0),
    .d0(grp_los_fu_236_results_5_d0)
);

main_results_0_RAM_AUTO_0R0W #(
    .DataWidth( 1 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
results_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_los_fu_236_results_6_address0),
    .ce0(grp_los_fu_236_results_6_ce0),
    .we0(grp_los_fu_236_results_6_we0),
    .d0(grp_los_fu_236_results_6_d0)
);

main_results_0_RAM_AUTO_0R0W #(
    .DataWidth( 1 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
results_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_los_fu_236_results_7_address0),
    .ce0(grp_los_fu_236_results_7_ce0),
    .we0(grp_los_fu_236_results_7_we0),
    .d0(grp_los_fu_236_results_7_d0)
);

main_los grp_los_fu_236(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_los_fu_236_ap_start),
    .ap_done(grp_los_fu_236_ap_done),
    .ap_idle(grp_los_fu_236_ap_idle),
    .ap_ready(grp_los_fu_236_ap_ready),
    .obstacles_0_address0(grp_los_fu_236_obstacles_0_address0),
    .obstacles_0_ce0(grp_los_fu_236_obstacles_0_ce0),
    .obstacles_0_q0(obstacles_0_q0),
    .obstacles_1_address0(grp_los_fu_236_obstacles_1_address0),
    .obstacles_1_ce0(grp_los_fu_236_obstacles_1_ce0),
    .obstacles_1_q0(obstacles_1_q0),
    .obstacles_2_address0(grp_los_fu_236_obstacles_2_address0),
    .obstacles_2_ce0(grp_los_fu_236_obstacles_2_ce0),
    .obstacles_2_q0(obstacles_2_q0),
    .obstacles_3_address0(grp_los_fu_236_obstacles_3_address0),
    .obstacles_3_ce0(grp_los_fu_236_obstacles_3_ce0),
    .obstacles_3_q0(obstacles_3_q0),
    .obstacles_4_address0(grp_los_fu_236_obstacles_4_address0),
    .obstacles_4_ce0(grp_los_fu_236_obstacles_4_ce0),
    .obstacles_4_q0(obstacles_4_q0),
    .obstacles_5_address0(grp_los_fu_236_obstacles_5_address0),
    .obstacles_5_ce0(grp_los_fu_236_obstacles_5_ce0),
    .obstacles_5_q0(obstacles_5_q0),
    .obstacles_6_address0(grp_los_fu_236_obstacles_6_address0),
    .obstacles_6_ce0(grp_los_fu_236_obstacles_6_ce0),
    .obstacles_6_q0(obstacles_6_q0),
    .obstacles_7_address0(grp_los_fu_236_obstacles_7_address0),
    .obstacles_7_ce0(grp_los_fu_236_obstacles_7_ce0),
    .obstacles_7_q0(obstacles_7_q0),
    .results_0_address0(grp_los_fu_236_results_0_address0),
    .results_0_ce0(grp_los_fu_236_results_0_ce0),
    .results_0_we0(grp_los_fu_236_results_0_we0),
    .results_0_d0(grp_los_fu_236_results_0_d0),
    .results_1_address0(grp_los_fu_236_results_1_address0),
    .results_1_ce0(grp_los_fu_236_results_1_ce0),
    .results_1_we0(grp_los_fu_236_results_1_we0),
    .results_1_d0(grp_los_fu_236_results_1_d0),
    .results_2_address0(grp_los_fu_236_results_2_address0),
    .results_2_ce0(grp_los_fu_236_results_2_ce0),
    .results_2_we0(grp_los_fu_236_results_2_we0),
    .results_2_d0(grp_los_fu_236_results_2_d0),
    .results_3_address0(grp_los_fu_236_results_3_address0),
    .results_3_ce0(grp_los_fu_236_results_3_ce0),
    .results_3_we0(grp_los_fu_236_results_3_we0),
    .results_3_d0(grp_los_fu_236_results_3_d0),
    .results_4_address0(grp_los_fu_236_results_4_address0),
    .results_4_ce0(grp_los_fu_236_results_4_ce0),
    .results_4_we0(grp_los_fu_236_results_4_we0),
    .results_4_d0(grp_los_fu_236_results_4_d0),
    .results_5_address0(grp_los_fu_236_results_5_address0),
    .results_5_ce0(grp_los_fu_236_results_5_ce0),
    .results_5_we0(grp_los_fu_236_results_5_we0),
    .results_5_d0(grp_los_fu_236_results_5_d0),
    .results_6_address0(grp_los_fu_236_results_6_address0),
    .results_6_ce0(grp_los_fu_236_results_6_ce0),
    .results_6_we0(grp_los_fu_236_results_6_we0),
    .results_6_d0(grp_los_fu_236_results_6_d0),
    .results_7_address0(grp_los_fu_236_results_7_address0),
    .results_7_ce0(grp_los_fu_236_results_7_ce0),
    .results_7_we0(grp_los_fu_236_results_7_we0),
    .results_7_d0(grp_los_fu_236_results_7_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_los_fu_236_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_los_fu_236_ap_start_reg <= 1'b1;
        end else if ((grp_los_fu_236_ap_ready == 1'b1)) begin
            grp_los_fu_236_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_68 <= 11'd0;
    end else if (((icmp_ln417_fu_269_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_68 <= add_ln417_fu_275_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        lfsr_0_fu_72 <= 16'd44257;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lfsr_0_fu_72 <= or_ln19_7_fu_532_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_1_reg_573 <= i_fu_68;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_los_fu_236_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln417_fu_269_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_los_fu_236_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_los_fu_236_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        obstacles_0_address0 = zext_ln417_fu_289_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        obstacles_0_address0 = grp_los_fu_236_obstacles_0_address0;
    end else begin
        obstacles_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        obstacles_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        obstacles_0_ce0 = grp_los_fu_236_obstacles_0_ce0;
    end else begin
        obstacles_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        obstacles_0_we0 = 1'b1;
    end else begin
        obstacles_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        obstacles_1_address0 = zext_ln417_fu_289_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        obstacles_1_address0 = grp_los_fu_236_obstacles_1_address0;
    end else begin
        obstacles_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        obstacles_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        obstacles_1_ce0 = grp_los_fu_236_obstacles_1_ce0;
    end else begin
        obstacles_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        obstacles_1_we0 = 1'b1;
    end else begin
        obstacles_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        obstacles_2_address0 = zext_ln417_fu_289_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        obstacles_2_address0 = grp_los_fu_236_obstacles_2_address0;
    end else begin
        obstacles_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        obstacles_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        obstacles_2_ce0 = grp_los_fu_236_obstacles_2_ce0;
    end else begin
        obstacles_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        obstacles_2_we0 = 1'b1;
    end else begin
        obstacles_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        obstacles_3_address0 = zext_ln417_fu_289_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        obstacles_3_address0 = grp_los_fu_236_obstacles_3_address0;
    end else begin
        obstacles_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        obstacles_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        obstacles_3_ce0 = grp_los_fu_236_obstacles_3_ce0;
    end else begin
        obstacles_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        obstacles_3_we0 = 1'b1;
    end else begin
        obstacles_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        obstacles_4_address0 = zext_ln417_fu_289_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        obstacles_4_address0 = grp_los_fu_236_obstacles_4_address0;
    end else begin
        obstacles_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        obstacles_4_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        obstacles_4_ce0 = grp_los_fu_236_obstacles_4_ce0;
    end else begin
        obstacles_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        obstacles_4_we0 = 1'b1;
    end else begin
        obstacles_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        obstacles_5_address0 = zext_ln417_fu_289_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        obstacles_5_address0 = grp_los_fu_236_obstacles_5_address0;
    end else begin
        obstacles_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        obstacles_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        obstacles_5_ce0 = grp_los_fu_236_obstacles_5_ce0;
    end else begin
        obstacles_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        obstacles_5_we0 = 1'b1;
    end else begin
        obstacles_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        obstacles_6_address0 = zext_ln417_fu_289_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        obstacles_6_address0 = grp_los_fu_236_obstacles_6_address0;
    end else begin
        obstacles_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        obstacles_6_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        obstacles_6_ce0 = grp_los_fu_236_obstacles_6_ce0;
    end else begin
        obstacles_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        obstacles_6_we0 = 1'b1;
    end else begin
        obstacles_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        obstacles_7_address0 = zext_ln417_fu_289_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        obstacles_7_address0 = grp_los_fu_236_obstacles_7_address0;
    end else begin
        obstacles_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        obstacles_7_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        obstacles_7_ce0 = grp_los_fu_236_obstacles_7_ce0;
    end else begin
        obstacles_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        obstacles_7_we0 = 1'b1;
    end else begin
        obstacles_7_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln417_fu_269_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln417_fu_269_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_los_fu_236_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln417_fu_275_p2 = (i_fu_68 + 11'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return = 32'd0;

assign grp_los_fu_236_ap_start = grp_los_fu_236_ap_start_reg;

assign icmp_ln417_fu_269_p2 = ((i_fu_68 == 11'd1024) ? 1'b1 : 1'b0);

assign obstacles_0_d0 = lfsr_0_fu_72[32'd1];

assign obstacles_1_d0 = lfsr_0_fu_72[32'd2];

assign obstacles_2_d0 = lfsr_0_fu_72[32'd3];

assign obstacles_3_d0 = lfsr_0_fu_72[32'd4];

assign obstacles_4_d0 = lfsr_0_fu_72[32'd5];

assign obstacles_5_d0 = lfsr_0_fu_72[32'd6];

assign obstacles_6_d0 = lfsr_0_fu_72[32'd7];

assign obstacles_7_d0 = lfsr_0_fu_72[32'd8];

assign or_ln19_7_fu_532_p10 = {{{{{{{{{xor_ln19_18_fu_526_p2}, {xor_ln19_16_fu_496_p2}}, {xor_ln19_14_fu_476_p2}}, {xor_ln19_12_fu_456_p2}}, {xor_ln19_10_fu_436_p2}}, {xor_ln19_8_fu_415_p2}}, {xor_ln19_5_fu_388_p2}}, {xor_ln19_2_fu_343_p2}}, {tmp_fu_510_p4}};

assign tmp_10_fu_462_p3 = lfsr_0_fu_72[32'd10];

assign tmp_11_fu_482_p3 = lfsr_0_fu_72[32'd11];

assign tmp_12_fu_502_p3 = lfsr_0_fu_72[32'd12];

assign tmp_1_fu_304_p3 = lfsr_0_fu_72[32'd2];

assign tmp_2_fu_313_p3 = lfsr_0_fu_72[32'd3];

assign tmp_3_fu_322_p3 = lfsr_0_fu_72[32'd5];

assign tmp_4_fu_349_p3 = lfsr_0_fu_72[32'd1];

assign tmp_5_fu_358_p3 = lfsr_0_fu_72[32'd4];

assign tmp_6_fu_367_p3 = lfsr_0_fu_72[32'd6];

assign tmp_7_fu_394_p3 = lfsr_0_fu_72[32'd7];

assign tmp_8_fu_421_p3 = lfsr_0_fu_72[32'd8];

assign tmp_9_fu_442_p3 = lfsr_0_fu_72[32'd9];

assign tmp_fu_510_p4 = {{lfsr_0_fu_72[15:8]}};

assign trunc_ln19_fu_300_p1 = lfsr_0_fu_72[0:0];

assign xor_ln19_10_fu_436_p2 = (xor_ln19_9_fu_430_p2 ^ xor_ln19_1_fu_331_p2);

assign xor_ln19_11_fu_450_p2 = (tmp_9_fu_442_p3 ^ tmp_7_fu_394_p3);

assign xor_ln19_12_fu_456_p2 = (xor_ln19_4_fu_382_p2 ^ xor_ln19_11_fu_450_p2);

assign xor_ln19_13_fu_470_p2 = (tmp_8_fu_421_p3 ^ tmp_10_fu_462_p3);

assign xor_ln19_14_fu_476_p2 = (xor_ln19_7_fu_409_p2 ^ xor_ln19_13_fu_470_p2);

assign xor_ln19_15_fu_490_p2 = (tmp_9_fu_442_p3 ^ tmp_11_fu_482_p3);

assign xor_ln19_16_fu_496_p2 = (xor_ln19_9_fu_430_p2 ^ xor_ln19_15_fu_490_p2);

assign xor_ln19_17_fu_520_p2 = (tmp_12_fu_502_p3 ^ tmp_10_fu_462_p3);

assign xor_ln19_18_fu_526_p2 = (xor_ln19_17_fu_520_p2 ^ xor_ln19_11_fu_450_p2);

assign xor_ln19_1_fu_331_p2 = (tmp_3_fu_322_p3 ^ tmp_2_fu_313_p3);

assign xor_ln19_2_fu_343_p2 = (xor_ln19_fu_337_p2 ^ trunc_ln19_fu_300_p1);

assign xor_ln19_3_fu_376_p2 = (tmp_4_fu_349_p3 ^ tmp_2_fu_313_p3);

assign xor_ln19_4_fu_382_p2 = (tmp_6_fu_367_p3 ^ tmp_5_fu_358_p3);

assign xor_ln19_5_fu_388_p2 = (xor_ln19_4_fu_382_p2 ^ xor_ln19_3_fu_376_p2);

assign xor_ln19_6_fu_403_p2 = (tmp_5_fu_358_p3 ^ tmp_1_fu_304_p3);

assign xor_ln19_7_fu_409_p2 = (tmp_7_fu_394_p3 ^ tmp_3_fu_322_p3);

assign xor_ln19_8_fu_415_p2 = (xor_ln19_7_fu_409_p2 ^ xor_ln19_6_fu_403_p2);

assign xor_ln19_9_fu_430_p2 = (tmp_8_fu_421_p3 ^ tmp_6_fu_367_p3);

assign xor_ln19_fu_337_p2 = (xor_ln19_1_fu_331_p2 ^ tmp_1_fu_304_p3);

assign zext_ln417_fu_289_p1 = i_1_reg_573;

endmodule //main
