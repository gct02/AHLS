

================================================================
== Vitis HLS Report for 'los_Pipeline_VITIS_LOOP_104_4'
================================================================
* Date:           Mon Aug 12 18:55:34 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        los
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  5.00 ns|  5.118 ns|     1.35 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_104_4  |        ?|        ?|         7|          5|          1|     ?|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 5, depth = 7


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 1
  Pipeline-0 : II = 5, D = 7, States = { 1 2 3 4 5 6 7 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.11>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%x0_3 = alloca i32 1" [benchmarks/jianyicheng/los/src/los.cpp:83]   --->   Operation 10 'alloca' 'x0_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%y0_3 = alloca i32 1" [benchmarks/jianyicheng/los/src/los.cpp:84]   --->   Operation 11 'alloca' 'y0_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%err_3 = alloca i32 1" [benchmarks/jianyicheng/los/src/los.cpp:102]   --->   Operation 12 'alloca' 'err_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%sight_1 = alloca i32 1" [benchmarks/jianyicheng/los/src/los.cpp:82]   --->   Operation 13 'alloca' 'sight_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%sext_ln86_1_read = read i7 @_ssdm_op_Read.ap_auto.i7, i7 %sext_ln86_1"   --->   Operation 14 'read' 'sext_ln86_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%select_ln85_read = read i2 @_ssdm_op_Read.ap_auto.i2, i2 %select_ln85"   --->   Operation 15 'read' 'select_ln85_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%zext_ln80_1_read = read i6 @_ssdm_op_Read.ap_auto.i6, i6 %zext_ln80_1"   --->   Operation 16 'read' 'zext_ln80_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%sext_ln80_read = read i6 @_ssdm_op_Read.ap_auto.i6, i6 %sext_ln80"   --->   Operation 17 'read' 'sext_ln80_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%zext_ln91_read = read i6 @_ssdm_op_Read.ap_auto.i6, i6 %zext_ln91"   --->   Operation 18 'read' 'zext_ln91_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln80_3_read = read i4 @_ssdm_op_Read.ap_auto.i4, i4 %zext_ln80_3"   --->   Operation 19 'read' 'zext_ln80_3_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%sext_ln102_read = read i7 @_ssdm_op_Read.ap_auto.i7, i7 %sext_ln102"   --->   Operation 20 'read' 'sext_ln102_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%sext_ln86_1_cast = sext i7 %sext_ln86_1_read"   --->   Operation 21 'sext' 'sext_ln86_1_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%select_ln85_cast = sext i2 %select_ln85_read"   --->   Operation 22 'sext' 'select_ln85_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%zext_ln80_1_cast = zext i6 %zext_ln80_1_read"   --->   Operation 23 'zext' 'zext_ln80_1_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%sext_ln80_cast = sext i6 %sext_ln80_read"   --->   Operation 24 'sext' 'sext_ln80_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln91_cast = zext i6 %zext_ln91_read"   --->   Operation 25 'zext' 'zext_ln91_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln80_3_cast = zext i4 %zext_ln80_3_read"   --->   Operation 26 'zext' 'zext_ln80_3_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%sext_ln102_cast = sext i7 %sext_ln102_read"   --->   Operation 27 'sext' 'sext_ln102_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (1.58ns)   --->   "%store_ln82 = store i32 1, i32 %sight_1" [benchmarks/jianyicheng/los/src/los.cpp:82]   --->   Operation 28 'store' 'store_ln82' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 29 [1/1] (1.58ns)   --->   "%store_ln102 = store i32 %sext_ln102_cast, i32 %err_3" [benchmarks/jianyicheng/los/src/los.cpp:102]   --->   Operation 29 'store' 'store_ln102' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 30 [1/1] (1.58ns)   --->   "%store_ln84 = store i32 %zext_ln80_3_cast, i32 %y0_3" [benchmarks/jianyicheng/los/src/los.cpp:84]   --->   Operation 30 'store' 'store_ln84' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 31 [1/1] (1.58ns)   --->   "%store_ln83 = store i32 %zext_ln91_cast, i32 %x0_3" [benchmarks/jianyicheng/los/src/los.cpp:83]   --->   Operation 31 'store' 'store_ln83' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%br_ln0 = br void %while.body79"   --->   Operation 32 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%x0 = load i32 %x0_3" [benchmarks/jianyicheng/los/src/los.cpp:82]   --->   Operation 33 'load' 'x0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%y0 = load i32 %y0_3" [benchmarks/jianyicheng/los/src/los.cpp:105]   --->   Operation 34 'load' 'y0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (2.55ns)   --->   "%icmp_ln105 = icmp_eq  i32 %x0, i32 32" [benchmarks/jianyicheng/los/src/los.cpp:105]   --->   Operation 35 'icmp' 'icmp_ln105' <Predicate = true> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (2.55ns)   --->   "%icmp_ln105_1 = icmp_eq  i32 %y0, i32 32" [benchmarks/jianyicheng/los/src/los.cpp:105]   --->   Operation 36 'icmp' 'icmp_ln105_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.97ns)   --->   "%and_ln105 = and i1 %icmp_ln105, i1 %icmp_ln105_1" [benchmarks/jianyicheng/los/src/los.cpp:105]   --->   Operation 37 'and' 'and_ln105' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%br_ln105 = br i1 %and_ln105, void %land.lhs.true83, void %if.end90" [benchmarks/jianyicheng/los/src/los.cpp:105]   --->   Operation 38 'br' 'br_ln105' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%trunc_ln105 = trunc i32 %y0" [benchmarks/jianyicheng/los/src/los.cpp:105]   --->   Operation 39 'trunc' 'trunc_ln105' <Predicate = (!and_ln105)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%shl_ln1 = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i4.i6, i4 %trunc_ln105, i6 0" [benchmarks/jianyicheng/los/src/los.cpp:105]   --->   Operation 40 'bitconcatenate' 'shl_ln1' <Predicate = (!and_ln105)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%trunc_ln82 = trunc i32 %x0" [benchmarks/jianyicheng/los/src/los.cpp:82]   --->   Operation 41 'trunc' 'trunc_ln82' <Predicate = (!and_ln105)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (1.73ns)   --->   "%add_ln105 = add i10 %shl_ln1, i10 %trunc_ln82" [benchmarks/jianyicheng/los/src/los.cpp:105]   --->   Operation 42 'add' 'add_ln105' <Predicate = (!and_ln105)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 3.25>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln105 = zext i10 %add_ln105" [benchmarks/jianyicheng/los/src/los.cpp:105]   --->   Operation 43 'zext' 'zext_ln105' <Predicate = (!and_ln105)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%obstacles_1_addr = getelementptr i1 %obstacles_1, i64 0, i64 %zext_ln105" [benchmarks/jianyicheng/los/src/los.cpp:105]   --->   Operation 44 'getelementptr' 'obstacles_1_addr' <Predicate = (!and_ln105)> <Delay = 0.00>
ST_2 : Operation 45 [2/2] (3.25ns)   --->   "%obstacles_1_load = load i10 %obstacles_1_addr" [benchmarks/jianyicheng/los/src/los.cpp:105]   --->   Operation 45 'load' 'obstacles_1_load' <Predicate = (!and_ln105)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 1024> <RAM>

State 3 <SV = 2> <Delay = 3.25>
ST_3 : Operation 46 [1/2] (3.25ns)   --->   "%obstacles_1_load = load i10 %obstacles_1_addr" [benchmarks/jianyicheng/los/src/los.cpp:105]   --->   Operation 46 'load' 'obstacles_1_load' <Predicate = (!and_ln105)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 1024> <RAM>

State 4 <SV = 3> <Delay = 2.28>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%sight_1_load = load i32 %sight_1" [benchmarks/jianyicheng/los/src/los.cpp:105]   --->   Operation 47 'load' 'sight_1_load' <Predicate = (!and_ln105 & !obstacles_1_load)> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (0.69ns)   --->   "%select_ln105 = select i1 %obstacles_1_load, i32 0, i32 %sight_1_load" [benchmarks/jianyicheng/los/src/los.cpp:105]   --->   Operation 48 'select' 'select_ln105' <Predicate = (!and_ln105)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 49 [1/1] (1.58ns)   --->   "%store_ln82 = store i32 %select_ln105, i32 %sight_1" [benchmarks/jianyicheng/los/src/los.cpp:82]   --->   Operation 49 'store' 'store_ln82' <Predicate = (!and_ln105)> <Delay = 1.58>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%br_ln105 = br void %if.end90" [benchmarks/jianyicheng/los/src/los.cpp:105]   --->   Operation 50 'br' 'br_ln105' <Predicate = (!and_ln105)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 3.53>
ST_5 : Operation 51 [1/1] (0.00ns)   --->   "%err = load i32 %err_3" [benchmarks/jianyicheng/los/src/los.cpp:109]   --->   Operation 51 'load' 'err' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 52 [1/1] (0.00ns)   --->   "%specpipeline_ln82 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_9" [benchmarks/jianyicheng/los/src/los.cpp:82]   --->   Operation 52 'specpipeline' 'specpipeline_ln82' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 53 [1/1] (0.00ns)   --->   "%specloopname_ln104 = specloopname void @_ssdm_op_SpecLoopName, void @empty_5" [benchmarks/jianyicheng/los/src/los.cpp:104]   --->   Operation 53 'specloopname' 'specloopname_ln104' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "%sight_1_1 = load i32 %sight_1"   --->   Operation 54 'load' 'sight_1_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 55 [1/1] (2.55ns)   --->   "%icmp_ln107 = icmp_eq  i32 %sight_1_1, i32 0" [benchmarks/jianyicheng/los/src/los.cpp:107]   --->   Operation 55 'icmp' 'icmp_ln107' <Predicate = true> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 56 [1/1] (0.97ns)   --->   "%or_ln107 = or i1 %and_ln105, i1 %icmp_ln107" [benchmarks/jianyicheng/los/src/los.cpp:107]   --->   Operation 56 'or' 'or_ln107' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 57 [1/1] (0.00ns)   --->   "%br_ln107 = br i1 %or_ln107, void %if.end97, void %while.end111.exitStub" [benchmarks/jianyicheng/los/src/los.cpp:107]   --->   Operation 57 'br' 'br_ln107' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "%e2 = shl i32 %err, i32 1" [benchmarks/jianyicheng/los/src/los.cpp:109]   --->   Operation 58 'shl' 'e2' <Predicate = (!or_ln107)> <Delay = 0.00>
ST_5 : Operation 59 [1/1] (2.55ns)   --->   "%icmp_ln110 = icmp_sgt  i32 %e2, i32 %sext_ln80_cast" [benchmarks/jianyicheng/los/src/los.cpp:110]   --->   Operation 59 'icmp' 'icmp_ln110' <Predicate = (!or_ln107)> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 60 [1/1] (2.55ns)   --->   "%err_31 = sub i32 %err, i32 %zext_ln80_1_cast" [benchmarks/jianyicheng/los/src/los.cpp:111]   --->   Operation 60 'sub' 'err_31' <Predicate = (!or_ln107)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 61 [1/1] (2.55ns)   --->   "%x0_20 = add i32 %x0, i32 %select_ln85_cast" [benchmarks/jianyicheng/los/src/los.cpp:112]   --->   Operation 61 'add' 'x0_20' <Predicate = (!or_ln107)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 62 [1/1] (0.69ns)   --->   "%err_32 = select i1 %icmp_ln110, i32 %err_31, i32 %err" [benchmarks/jianyicheng/los/src/los.cpp:110]   --->   Operation 62 'select' 'err_32' <Predicate = (!or_ln107)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 63 [1/1] (0.69ns)   --->   "%x0_21 = select i1 %icmp_ln110, i32 %x0_20, i32 %x0" [benchmarks/jianyicheng/los/src/los.cpp:110]   --->   Operation 63 'select' 'x0_21' <Predicate = (!or_ln107)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 64 [1/1] (2.55ns)   --->   "%icmp_ln115 = icmp_slt  i32 %e2, i32 %sext_ln86_1_cast" [benchmarks/jianyicheng/los/src/los.cpp:115]   --->   Operation 64 'icmp' 'icmp_ln115' <Predicate = (!or_ln107)> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 65 [1/1] (2.55ns)   --->   "%y0_20 = add i32 %y0, i32 1" [benchmarks/jianyicheng/los/src/los.cpp:117]   --->   Operation 65 'add' 'y0_20' <Predicate = (!or_ln107)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 66 [1/1] (0.69ns)   --->   "%y0_21 = select i1 %icmp_ln115, i32 %y0_20, i32 %y0" [benchmarks/jianyicheng/los/src/los.cpp:115]   --->   Operation 66 'select' 'y0_21' <Predicate = (!or_ln107)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 73 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %sight_1_1_out, i32 %sight_1_1"   --->   Operation 73 'write' 'write_ln0' <Predicate = (or_ln107)> <Delay = 0.00>
ST_5 : Operation 74 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 74 'ret' 'ret_ln0' <Predicate = (or_ln107)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 2.55>
ST_6 : Operation 67 [1/1] (2.55ns)   --->   "%err_33 = add i32 %err_32, i32 %sext_ln86_1_cast" [benchmarks/jianyicheng/los/src/los.cpp:116]   --->   Operation 67 'add' 'err_33' <Predicate = (icmp_ln115)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 68 [1/1] (1.58ns)   --->   "%store_ln84 = store i32 %y0_21, i32 %y0_3" [benchmarks/jianyicheng/los/src/los.cpp:84]   --->   Operation 68 'store' 'store_ln84' <Predicate = true> <Delay = 1.58>
ST_6 : Operation 69 [1/1] (1.58ns)   --->   "%store_ln83 = store i32 %x0_21, i32 %x0_3" [benchmarks/jianyicheng/los/src/los.cpp:83]   --->   Operation 69 'store' 'store_ln83' <Predicate = true> <Delay = 1.58>

State 7 <SV = 6> <Delay = 2.28>
ST_7 : Operation 70 [1/1] (0.69ns)   --->   "%err_34 = select i1 %icmp_ln115, i32 %err_33, i32 %err_32" [benchmarks/jianyicheng/los/src/los.cpp:115]   --->   Operation 70 'select' 'err_34' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 71 [1/1] (1.58ns)   --->   "%store_ln102 = store i32 %err_34, i32 %err_3" [benchmarks/jianyicheng/los/src/los.cpp:102]   --->   Operation 71 'store' 'store_ln102' <Predicate = true> <Delay = 1.58>
ST_7 : Operation 72 [1/1] (0.00ns)   --->   "%br_ln104 = br void %while.body79" [benchmarks/jianyicheng/los/src/los.cpp:104]   --->   Operation 72 'br' 'br_ln104' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5.000ns, clock uncertainty: 1.350ns.

 <State 1>: 5.118ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln84', benchmarks/jianyicheng/los/src/los.cpp:84) of variable 'zext_ln80_3_cast' on local variable 'y0', benchmarks/jianyicheng/los/src/los.cpp:84 [30]  (1.588 ns)
	'load' operation 32 bit ('y0', benchmarks/jianyicheng/los/src/los.cpp:105) on local variable 'y0', benchmarks/jianyicheng/los/src/los.cpp:84 [35]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln105_1', benchmarks/jianyicheng/los/src/los.cpp:105) [40]  (2.552 ns)
	'and' operation 1 bit ('and_ln105', benchmarks/jianyicheng/los/src/los.cpp:105) [41]  (0.978 ns)

 <State 2>: 3.254ns
The critical path consists of the following:
	'getelementptr' operation 10 bit ('obstacles_1_addr', benchmarks/jianyicheng/los/src/los.cpp:105) [50]  (0.000 ns)
	'load' operation 1 bit ('obstacles_1_load', benchmarks/jianyicheng/los/src/los.cpp:105) on array 'obstacles_1' [51]  (3.254 ns)

 <State 3>: 3.254ns
The critical path consists of the following:
	'load' operation 1 bit ('obstacles_1_load', benchmarks/jianyicheng/los/src/los.cpp:105) on array 'obstacles_1' [51]  (3.254 ns)

 <State 4>: 2.286ns
The critical path consists of the following:
	'load' operation 32 bit ('sight_1_load', benchmarks/jianyicheng/los/src/los.cpp:105) on local variable 'sight_1', benchmarks/jianyicheng/los/src/los.cpp:82 [44]  (0.000 ns)
	'select' operation 32 bit ('select_ln105', benchmarks/jianyicheng/los/src/los.cpp:105) [52]  (0.698 ns)
	'store' operation 0 bit ('store_ln82', benchmarks/jianyicheng/los/src/los.cpp:82) of variable 'select_ln105', benchmarks/jianyicheng/los/src/los.cpp:105 on local variable 'sight_1', benchmarks/jianyicheng/los/src/los.cpp:82 [53]  (1.588 ns)

 <State 5>: 3.530ns
The critical path consists of the following:
	'load' operation 32 bit ('sight_1') on local variable 'sight_1', benchmarks/jianyicheng/los/src/los.cpp:82 [56]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln107', benchmarks/jianyicheng/los/src/los.cpp:107) [57]  (2.552 ns)
	'or' operation 1 bit ('or_ln107', benchmarks/jianyicheng/los/src/los.cpp:107) [58]  (0.978 ns)

 <State 6>: 2.552ns
The critical path consists of the following:
	'add' operation 32 bit ('err', benchmarks/jianyicheng/los/src/los.cpp:116) [68]  (2.552 ns)

 <State 7>: 2.286ns
The critical path consists of the following:
	'select' operation 32 bit ('err', benchmarks/jianyicheng/los/src/los.cpp:115) [70]  (0.698 ns)
	'store' operation 0 bit ('store_ln102', benchmarks/jianyicheng/los/src/los.cpp:102) of variable 'err', benchmarks/jianyicheng/los/src/los.cpp:115 on local variable 'err', benchmarks/jianyicheng/los/src/los.cpp:102 [72]  (1.588 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
