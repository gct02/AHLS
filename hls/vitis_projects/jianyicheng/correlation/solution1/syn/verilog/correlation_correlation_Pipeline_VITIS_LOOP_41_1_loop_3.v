// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module correlation_correlation_Pipeline_VITIS_LOOP_41_1_loop_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_address0,
        data_ce0,
        data_we0,
        data_d0,
        data_address1,
        data_ce1,
        data_q1,
        m_address0,
        m_ce0,
        m_q0,
        s_address0,
        s_ce0,
        s_q0,
        grp_fu_296_p_din0,
        grp_fu_296_p_din1,
        grp_fu_296_p_opcode,
        grp_fu_296_p_dout0,
        grp_fu_296_p_ce,
        grp_fu_300_p_din0,
        grp_fu_300_p_din1,
        grp_fu_300_p_dout0,
        grp_fu_300_p_ce,
        grp_fu_304_p_din0,
        grp_fu_304_p_din1,
        grp_fu_304_p_dout0,
        grp_fu_304_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] data_address0;
output   data_ce0;
output   data_we0;
output  [31:0] data_d0;
output  [9:0] data_address1;
output   data_ce1;
input  [31:0] data_q1;
output  [4:0] m_address0;
output   m_ce0;
input  [31:0] m_q0;
output  [4:0] s_address0;
output   s_ce0;
input  [31:0] s_q0;
output  [31:0] grp_fu_296_p_din0;
output  [31:0] grp_fu_296_p_din1;
output  [0:0] grp_fu_296_p_opcode;
input  [31:0] grp_fu_296_p_dout0;
output   grp_fu_296_p_ce;
output  [31:0] grp_fu_300_p_din0;
output  [31:0] grp_fu_300_p_din1;
input  [31:0] grp_fu_300_p_dout0;
output   grp_fu_300_p_ce;
output  [31:0] grp_fu_304_p_din0;
output  [31:0] grp_fu_304_p_din1;
input  [31:0] grp_fu_304_p_dout0;
output   grp_fu_304_p_ce;

reg ap_idle;
reg data_ce0;
reg data_we0;
reg data_ce1;
reg m_ce0;
reg s_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln41_fu_132_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln43_fu_182_p1;
reg   [63:0] zext_ln43_reg_264;
reg   [9:0] data_addr_32_reg_269;
reg   [9:0] data_addr_32_reg_269_pp0_iter1_reg;
reg   [9:0] data_addr_32_reg_269_pp0_iter2_reg;
reg   [9:0] data_addr_32_reg_269_pp0_iter3_reg;
reg   [9:0] data_addr_32_reg_269_pp0_iter4_reg;
reg   [9:0] data_addr_32_reg_269_pp0_iter5_reg;
reg   [9:0] data_addr_32_reg_269_pp0_iter6_reg;
reg   [9:0] data_addr_32_reg_269_pp0_iter7_reg;
reg   [9:0] data_addr_32_reg_269_pp0_iter8_reg;
reg   [9:0] data_addr_32_reg_269_pp0_iter9_reg;
reg   [9:0] data_addr_32_reg_269_pp0_iter10_reg;
reg   [9:0] data_addr_32_reg_269_pp0_iter11_reg;
reg   [9:0] data_addr_32_reg_269_pp0_iter12_reg;
reg   [9:0] data_addr_32_reg_269_pp0_iter13_reg;
reg   [9:0] data_addr_32_reg_269_pp0_iter14_reg;
reg   [9:0] data_addr_32_reg_269_pp0_iter15_reg;
reg   [9:0] data_addr_32_reg_269_pp0_iter16_reg;
reg   [31:0] data_load_32_reg_280;
reg   [31:0] m_load_reg_285;
wire   [31:0] d_fu_223_p1;
wire   [31:0] bitcast_ln46_fu_227_p1;
reg   [31:0] s_load_reg_305;
wire   [31:0] bitcast_ln47_fu_231_p1;
reg   [31:0] d_32_reg_315;
reg   [31:0] mul4_reg_320;
reg   [31:0] d_33_reg_325;
wire   [63:0] zext_ln45_fu_197_p1;
wire    ap_block_pp0_stage0;
reg   [5:0] j_1_fu_46;
wire   [5:0] add_ln43_fu_202_p2;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_j_1_load;
reg   [10:0] i_fu_50;
wire   [10:0] select_ln41_1_fu_170_p3;
reg   [10:0] ap_sig_allocacmp_i_load;
reg   [10:0] indvar_flatten_fu_54;
wire   [10:0] add_ln41_fu_138_p2;
reg   [10:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [0:0] icmp_ln43_fu_150_p2;
wire   [10:0] add_ln41_1_fu_164_p2;
wire   [5:0] select_ln41_fu_156_p3;
wire   [9:0] zext_ln43_1_fu_187_p1;
wire   [9:0] trunc_ln41_fu_178_p1;
wire   [9:0] add_ln44_fu_191_p2;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 j_1_fu_46 = 6'd0;
#0 i_fu_50 = 11'd0;
#0 indvar_flatten_fu_54 = 11'd0;
#0 ap_done_reg = 1'b0;
end

correlation_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter16_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln41_fu_132_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_50 <= select_ln41_1_fu_170_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_50 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln41_fu_132_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_54 <= add_ln41_fu_138_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_54 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln41_fu_132_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_1_fu_46 <= add_ln43_fu_202_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_1_fu_46 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        d_32_reg_315 <= grp_fu_296_p_dout0;
        d_33_reg_325 <= grp_fu_304_p_dout0;
        data_addr_32_reg_269_pp0_iter10_reg <= data_addr_32_reg_269_pp0_iter9_reg;
        data_addr_32_reg_269_pp0_iter11_reg <= data_addr_32_reg_269_pp0_iter10_reg;
        data_addr_32_reg_269_pp0_iter12_reg <= data_addr_32_reg_269_pp0_iter11_reg;
        data_addr_32_reg_269_pp0_iter13_reg <= data_addr_32_reg_269_pp0_iter12_reg;
        data_addr_32_reg_269_pp0_iter14_reg <= data_addr_32_reg_269_pp0_iter13_reg;
        data_addr_32_reg_269_pp0_iter15_reg <= data_addr_32_reg_269_pp0_iter14_reg;
        data_addr_32_reg_269_pp0_iter16_reg <= data_addr_32_reg_269_pp0_iter15_reg;
        data_addr_32_reg_269_pp0_iter2_reg <= data_addr_32_reg_269_pp0_iter1_reg;
        data_addr_32_reg_269_pp0_iter3_reg <= data_addr_32_reg_269_pp0_iter2_reg;
        data_addr_32_reg_269_pp0_iter4_reg <= data_addr_32_reg_269_pp0_iter3_reg;
        data_addr_32_reg_269_pp0_iter5_reg <= data_addr_32_reg_269_pp0_iter4_reg;
        data_addr_32_reg_269_pp0_iter6_reg <= data_addr_32_reg_269_pp0_iter5_reg;
        data_addr_32_reg_269_pp0_iter7_reg <= data_addr_32_reg_269_pp0_iter6_reg;
        data_addr_32_reg_269_pp0_iter8_reg <= data_addr_32_reg_269_pp0_iter7_reg;
        data_addr_32_reg_269_pp0_iter9_reg <= data_addr_32_reg_269_pp0_iter8_reg;
        mul4_reg_320 <= grp_fu_300_p_dout0;
        s_load_reg_305 <= s_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        data_addr_32_reg_269 <= zext_ln45_fu_197_p1;
        data_addr_32_reg_269_pp0_iter1_reg <= data_addr_32_reg_269;
        m_load_reg_285 <= m_q0;
        zext_ln43_reg_264[5 : 0] <= zext_ln43_fu_182_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_load_32_reg_280 <= data_q1;
    end
end

always @ (*) begin
    if (((icmp_ln41_fu_132_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter16_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 11'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_50;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_54;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_1_load = 6'd0;
    end else begin
        ap_sig_allocacmp_j_1_load = j_1_fu_46;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        data_ce0 = 1'b1;
    end else begin
        data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_ce1 = 1'b1;
    end else begin
        data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        data_we0 = 1'b1;
    end else begin
        data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_ce0 = 1'b1;
    end else begin
        m_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_ce0 = 1'b1;
    end else begin
        s_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln41_1_fu_164_p2 = (ap_sig_allocacmp_i_load + 11'd32);

assign add_ln41_fu_138_p2 = (ap_sig_allocacmp_indvar_flatten_load + 11'd1);

assign add_ln43_fu_202_p2 = (select_ln41_fu_156_p3 + 6'd1);

assign add_ln44_fu_191_p2 = (zext_ln43_1_fu_187_p1 + trunc_ln41_fu_178_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln46_fu_227_p1 = m_load_reg_285;

assign bitcast_ln47_fu_231_p1 = s_load_reg_305;

assign d_fu_223_p1 = data_load_32_reg_280;

assign data_address0 = data_addr_32_reg_269_pp0_iter16_reg;

assign data_address1 = zext_ln45_fu_197_p1;

assign data_d0 = d_33_reg_325;

assign grp_fu_296_p_ce = 1'b1;

assign grp_fu_296_p_din0 = d_fu_223_p1;

assign grp_fu_296_p_din1 = bitcast_ln46_fu_227_p1;

assign grp_fu_296_p_opcode = 2'd1;

assign grp_fu_300_p_ce = 1'b1;

assign grp_fu_300_p_din0 = bitcast_ln47_fu_231_p1;

assign grp_fu_300_p_din1 = 32'd1076006748;

assign grp_fu_304_p_ce = 1'b1;

assign grp_fu_304_p_din0 = d_32_reg_315;

assign grp_fu_304_p_din1 = mul4_reg_320;

assign icmp_ln41_fu_132_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_150_p2 = ((ap_sig_allocacmp_j_1_load == 6'd32) ? 1'b1 : 1'b0);

assign m_address0 = zext_ln43_fu_182_p1;

assign s_address0 = zext_ln43_reg_264;

assign select_ln41_1_fu_170_p3 = ((icmp_ln43_fu_150_p2[0:0] == 1'b1) ? add_ln41_1_fu_164_p2 : ap_sig_allocacmp_i_load);

assign select_ln41_fu_156_p3 = ((icmp_ln43_fu_150_p2[0:0] == 1'b1) ? 6'd0 : ap_sig_allocacmp_j_1_load);

assign trunc_ln41_fu_178_p1 = select_ln41_1_fu_170_p3[9:0];

assign zext_ln43_1_fu_187_p1 = select_ln41_fu_156_p3;

assign zext_ln43_fu_182_p1 = select_ln41_fu_156_p3;

assign zext_ln45_fu_197_p1 = add_ln44_fu_191_p2;

always @ (posedge ap_clk) begin
    zext_ln43_reg_264[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //correlation_correlation_Pipeline_VITIS_LOOP_41_1_loop_3
