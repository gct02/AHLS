// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module main_main_Pipeline_VITIS_LOOP_17_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        az_address0,
        az_ce0,
        az_we0,
        az_d0,
        data_2_address0,
        data_2_ce0,
        data_2_we0,
        data_2_d0,
        data_1_address0,
        data_1_ce0,
        data_1_we0,
        data_1_d0,
        data_address0,
        data_ce0,
        data_we0,
        data_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] az_address0;
output   az_ce0;
output   az_we0;
output  [2:0] az_d0;
output  [6:0] data_2_address0;
output   data_2_ce0;
output   data_2_we0;
output  [31:0] data_2_d0;
output  [6:0] data_1_address0;
output   data_1_ce0;
output   data_1_we0;
output  [31:0] data_1_d0;
output  [6:0] data_address0;
output   data_ce0;
output   data_we0;
output  [31:0] data_d0;

reg ap_idle;
reg az_ce0;
reg az_we0;
reg[6:0] data_2_address0;
reg data_2_ce0;
reg data_2_we0;
reg[31:0] data_2_d0;
reg[6:0] data_1_address0;
reg data_1_ce0;
reg data_1_we0;
reg[31:0] data_1_d0;
reg[6:0] data_address0;
reg data_ce0;
reg data_we0;
reg[31:0] data_d0;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln17_reg_354;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [6:0] i_2_reg_348;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln17_fu_186_p2;
wire   [1:0] trunc_ln17_fu_196_p1;
reg   [1:0] trunc_ln17_reg_358;
reg   [1:0] trunc_ln17_reg_358_pp0_iter1_reg;
wire   [6:0] next_urem13_fu_203_p2;
reg   [6:0] next_urem13_reg_362;
wire   [6:0] next_urem_fu_209_p2;
reg   [6:0] next_urem_reg_368;
wire   [2:0] trunc_ln20_fu_215_p1;
reg   [2:0] trunc_ln20_reg_374;
wire   [6:0] idx_urem14_fu_259_p3;
reg   [6:0] idx_urem14_reg_379;
wire    ap_block_pp0_stage1_11001;
wire   [6:0] idx_urem_fu_271_p3;
reg   [6:0] idx_urem_reg_384;
reg   [6:0] tmp_1_reg_389;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln17_2_fu_247_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln17_fu_227_p1;
wire   [63:0] zext_ln19_fu_305_p1;
wire    ap_block_pp0_stage0;
reg   [6:0] phi_urem12_fu_62;
reg   [6:0] ap_sig_allocacmp_phi_urem12_load;
wire    ap_loop_init;
reg   [6:0] phi_urem_fu_66;
reg   [6:0] ap_sig_allocacmp_phi_urem_load;
reg   [14:0] phi_mul_fu_70;
wire   [14:0] add_ln17_2_fu_231_p2;
reg   [6:0] i_fu_74;
wire   [6:0] add_ln17_1_fu_219_p2;
reg   [6:0] ap_sig_allocacmp_i_2;
wire   [5:0] tmp_fu_237_p4;
wire   [0:0] empty_fu_254_p2;
wire   [0:0] empty_11_fu_266_p2;
wire   [16:0] tmp_1_fu_296_p1;
wire  signed [16:0] grp_fu_311_p3;
wire   [6:0] grp_fu_311_p0;
wire   [6:0] grp_fu_311_p1;
wire   [8:0] grp_fu_311_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter1_stage0;
reg    ap_idle_pp0_0to0;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to2;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [7:0] grp_fu_311_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 phi_urem12_fu_62 = 7'd0;
#0 phi_urem_fu_66 = 7'd0;
#0 phi_mul_fu_70 = 15'd0;
#0 i_fu_74 = 7'd0;
#0 ap_done_reg = 1'b0;
end

main_am_addmul_7ns_7ns_9ns_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 17 ))
am_addmul_7ns_7ns_9ns_17_4_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_311_p0),
    .din1(grp_fu_311_p1),
    .din2(grp_fu_311_p2),
    .ce(1'b1),
    .dout(grp_fu_311_p3)
);

main_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        i_fu_74 <= 7'd0;
    end else if (((icmp_ln17_reg_354 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_fu_74 <= add_ln17_1_fu_219_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        phi_mul_fu_70 <= 15'd0;
    end else if (((icmp_ln17_reg_354 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        phi_mul_fu_70 <= add_ln17_2_fu_231_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            phi_urem12_fu_62 <= 7'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            phi_urem12_fu_62 <= idx_urem14_reg_379;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            phi_urem_fu_66 <= 7'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            phi_urem_fu_66 <= idx_urem_reg_384;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_2_reg_348 <= ap_sig_allocacmp_i_2;
        icmp_ln17_reg_354 <= icmp_ln17_fu_186_p2;
        next_urem13_reg_362 <= next_urem13_fu_203_p2;
        next_urem_reg_368 <= next_urem_fu_209_p2;
        trunc_ln17_reg_358 <= trunc_ln17_fu_196_p1;
        trunc_ln17_reg_358_pp0_iter1_reg <= trunc_ln17_reg_358;
        trunc_ln20_reg_374 <= trunc_ln20_fu_215_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        idx_urem14_reg_379 <= idx_urem14_fu_259_p3;
        idx_urem_reg_384 <= idx_urem_fu_271_p3;
        tmp_1_reg_389 <= {{tmp_1_fu_296_p1[16:10]}};
    end
end

always @ (*) begin
    if (((icmp_ln17_reg_354 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln17_reg_354 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_2 = 7'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_74;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            ap_sig_allocacmp_phi_urem12_load = 7'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            ap_sig_allocacmp_phi_urem12_load = idx_urem14_reg_379;
        end else begin
            ap_sig_allocacmp_phi_urem12_load = phi_urem12_fu_62;
        end
    end else begin
        ap_sig_allocacmp_phi_urem12_load = phi_urem12_fu_62;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            ap_sig_allocacmp_phi_urem_load = 7'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            ap_sig_allocacmp_phi_urem_load = idx_urem_reg_384;
        end else begin
            ap_sig_allocacmp_phi_urem_load = phi_urem_fu_66;
        end
    end else begin
        ap_sig_allocacmp_phi_urem_load = phi_urem_fu_66;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        az_ce0 = 1'b1;
    end else begin
        az_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln17_reg_354 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        az_we0 = 1'b1;
    end else begin
        az_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_1_address0 = zext_ln19_fu_305_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_1_address0 = zext_ln17_2_fu_247_p1;
    end else begin
        data_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        data_1_ce0 = 1'b1;
    end else begin
        data_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_1_d0 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_1_d0 = 32'd1;
    end else begin
        data_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln17_reg_358_pp0_iter1_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln17_reg_358 == 2'd1) & (icmp_ln17_reg_354 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        data_1_we0 = 1'b1;
    end else begin
        data_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_2_address0 = zext_ln19_fu_305_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_2_address0 = zext_ln17_2_fu_247_p1;
    end else begin
        data_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        data_2_ce0 = 1'b1;
    end else begin
        data_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_2_d0 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_2_d0 = 32'd1;
    end else begin
        data_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((~(trunc_ln17_reg_358 == 2'd0) & ~(trunc_ln17_reg_358 == 2'd1) & (icmp_ln17_reg_354 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((trunc_ln17_reg_358_pp0_iter1_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        data_2_we0 = 1'b1;
    end else begin
        data_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_address0 = zext_ln19_fu_305_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_address0 = zext_ln17_2_fu_247_p1;
    end else begin
        data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        data_ce0 = 1'b1;
    end else begin
        data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_d0 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data_d0 = 32'd1;
    end else begin
        data_d0 = 'bx;
    end
end

always @ (*) begin
    if (((~(trunc_ln17_reg_358_pp0_iter1_reg == 2'd1) & ~(trunc_ln17_reg_358_pp0_iter1_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln17_reg_358 == 2'd0) & (icmp_ln17_reg_354 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        data_we0 = 1'b1;
    end else begin
        data_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln17_1_fu_219_p2 = (i_2_reg_348 + 7'd1);

assign add_ln17_2_fu_231_p2 = (phi_mul_fu_70 + 15'd171);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign az_address0 = zext_ln17_fu_227_p1;

assign az_d0 = trunc_ln20_reg_374;

assign empty_11_fu_266_p2 = ((next_urem_reg_368 < 7'd5) ? 1'b1 : 1'b0);

assign empty_fu_254_p2 = ((next_urem13_reg_362 < 7'd3) ? 1'b1 : 1'b0);

assign grp_fu_311_p0 = grp_fu_311_p00;

assign grp_fu_311_p00 = ap_sig_allocacmp_i_2;

assign grp_fu_311_p1 = 8'd100;

assign grp_fu_311_p2 = 17'd342;

assign icmp_ln17_fu_186_p2 = ((ap_sig_allocacmp_i_2 == 7'd100) ? 1'b1 : 1'b0);

assign idx_urem14_fu_259_p3 = ((empty_fu_254_p2[0:0] == 1'b1) ? next_urem13_reg_362 : 7'd0);

assign idx_urem_fu_271_p3 = ((empty_11_fu_266_p2[0:0] == 1'b1) ? next_urem_reg_368 : 7'd0);

assign next_urem13_fu_203_p2 = (ap_sig_allocacmp_phi_urem12_load + 7'd1);

assign next_urem_fu_209_p2 = (ap_sig_allocacmp_phi_urem_load + 7'd1);

assign tmp_1_fu_296_p1 = grp_fu_311_p3;

assign tmp_fu_237_p4 = {{phi_mul_fu_70[14:9]}};

assign trunc_ln17_fu_196_p1 = ap_sig_allocacmp_phi_urem12_load[1:0];

assign trunc_ln20_fu_215_p1 = ap_sig_allocacmp_phi_urem_load[2:0];

assign zext_ln17_2_fu_247_p1 = tmp_fu_237_p4;

assign zext_ln17_fu_227_p1 = i_2_reg_348;

assign zext_ln19_fu_305_p1 = tmp_1_reg_389;

endmodule //main_main_Pipeline_VITIS_LOOP_17_1
