// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module main_main_Pipeline_VITIS_LOOP_15_1_VITIS_LOOP_14_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_address0,
        data_ce0,
        data_we0,
        data_d0,
        data_q0,
        data_1_address0,
        data_1_ce0,
        data_1_we0,
        data_1_d0,
        data_1_q0,
        data_2_address0,
        data_2_ce0,
        data_2_we0,
        data_2_d0,
        data_2_q0,
        w_address0,
        w_ce0,
        w_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 10'd1;
parameter    ap_ST_fsm_pp0_stage1 = 10'd2;
parameter    ap_ST_fsm_pp0_stage2 = 10'd4;
parameter    ap_ST_fsm_pp0_stage3 = 10'd8;
parameter    ap_ST_fsm_pp0_stage4 = 10'd16;
parameter    ap_ST_fsm_pp0_stage5 = 10'd32;
parameter    ap_ST_fsm_pp0_stage6 = 10'd64;
parameter    ap_ST_fsm_pp0_stage7 = 10'd128;
parameter    ap_ST_fsm_pp0_stage8 = 10'd256;
parameter    ap_ST_fsm_pp0_stage9 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] data_address0;
output   data_ce0;
output   data_we0;
output  [31:0] data_d0;
input  [31:0] data_q0;
output  [6:0] data_1_address0;
output   data_1_ce0;
output   data_1_we0;
output  [31:0] data_1_d0;
input  [31:0] data_1_q0;
output  [6:0] data_2_address0;
output   data_2_ce0;
output   data_2_we0;
output  [31:0] data_2_d0;
input  [31:0] data_2_q0;
output  [13:0] w_address0;
output   w_ce0;
input  [3:0] w_q0;

reg ap_idle;
reg[6:0] data_address0;
reg data_ce0;
reg data_we0;
reg[6:0] data_1_address0;
reg data_1_ce0;
reg data_1_we0;
reg[6:0] data_2_address0;
reg data_2_ce0;
reg data_2_we0;
reg w_ce0;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9_subdone;
reg   [0:0] icmp_ln15_reg_403;
reg    ap_condition_exit_pp0_iter0_stage9;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_160;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6_11001;
reg   [31:0] reg_164;
reg   [31:0] reg_168;
wire   [0:0] icmp_ln15_fu_190_p2;
wire    ap_block_pp0_stage0_11001;
wire   [13:0] add_ln15_2_fu_196_p2;
reg   [13:0] add_ln15_2_reg_407;
wire   [0:0] icmp_ln14_fu_205_p2;
reg   [0:0] icmp_ln14_reg_412;
wire   [6:0] select_ln13_fu_211_p3;
reg   [6:0] select_ln13_reg_417;
reg   [6:0] select_ln13_reg_417_pp0_iter1_reg;
reg   [6:0] j_1_load_reg_436;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
wire   [6:0] add_ln15_3_fu_239_p2;
reg   [6:0] add_ln15_3_reg_441;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_11001;
reg   [5:0] tmp_2_reg_451;
wire   [13:0] grp_fu_365_p3;
reg   [13:0] add_ln15_reg_456;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_11001;
reg   [3:0] w_load_reg_466;
wire   [1:0] grp_fu_231_p2;
reg   [1:0] urem_ln13_reg_486;
wire   [1:0] trunc_ln13_fu_296_p1;
reg   [1:0] trunc_ln13_reg_491;
wire  signed [31:0] tmp_fu_299_p9;
reg  signed [31:0] tmp_reg_496;
reg   [6:0] tmp_3_reg_506;
reg   [6:0] data_addr_2_reg_511;
reg   [6:0] data_1_addr_2_reg_516;
reg   [6:0] data_2_addr_2_reg_521;
wire   [31:0] grp_fu_322_p2;
reg   [31:0] mul_ln15_1_reg_526;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7_11001;
wire   [31:0] tmp_1_fu_342_p9;
reg   [31:0] tmp_1_reg_531;
wire   [31:0] add_ln15_1_fu_361_p2;
reg   [31:0] add_ln15_1_reg_536;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln15_fu_283_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln13_fu_287_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln15_2_fu_336_p1;
reg   [6:0] i_1_fu_72;
wire   [6:0] add_ln14_fu_264_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_i_1_load;
reg   [6:0] j_1_fu_76;
wire   [6:0] select_ln15_fu_245_p3;
wire    ap_block_pp0_stage2;
reg   [13:0] indvar_flatten_fu_80;
reg   [13:0] ap_sig_allocacmp_indvar_flatten_load;
wire    ap_block_pp0_stage9_11001;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage1;
wire   [6:0] grp_fu_225_p0;
wire   [8:0] grp_fu_225_p1;
wire   [2:0] grp_fu_231_p1;
wire    ap_block_pp0_stage3;
wire   [14:0] grp_fu_225_p2;
wire   [31:0] tmp_fu_299_p7;
wire   [1:0] tmp_fu_299_p8;
wire   [3:0] grp_fu_322_p0;
wire   [16:0] tmp_3_fu_327_p1;
wire  signed [16:0] grp_fu_373_p3;
wire    ap_block_pp0_stage4;
wire   [31:0] tmp_1_fu_342_p7;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage8;
wire   [6:0] grp_fu_365_p0;
wire   [6:0] grp_fu_365_p1;
wire   [6:0] grp_fu_365_p2;
wire   [6:0] grp_fu_373_p0;
wire   [6:0] grp_fu_373_p1;
wire   [8:0] grp_fu_373_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [9:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [14:0] grp_fu_225_p00;
wire   [31:0] grp_fu_322_p00;
wire   [13:0] grp_fu_365_p00;
wire   [13:0] grp_fu_365_p20;
wire   [7:0] grp_fu_373_p00;
wire   [1:0] tmp_fu_299_p1;
wire   [1:0] tmp_fu_299_p3;
wire  signed [1:0] tmp_fu_299_p5;
wire  signed [1:0] tmp_1_fu_342_p1;
wire   [1:0] tmp_1_fu_342_p3;
wire   [1:0] tmp_1_fu_342_p5;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 i_1_fu_72 = 7'd0;
#0 j_1_fu_76 = 7'd0;
#0 indvar_flatten_fu_80 = 14'd0;
#0 ap_done_reg = 1'b0;
end

main_mul_7ns_9ns_15_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 15 ))
mul_7ns_9ns_15_3_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_225_p0),
    .din1(grp_fu_225_p1),
    .ce(1'b1),
    .dout(grp_fu_225_p2)
);

main_urem_7ns_3ns_2_11_1 #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_7ns_3ns_2_11_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln13_reg_417),
    .din1(grp_fu_231_p1),
    .ce(1'b1),
    .dout(grp_fu_231_p2)
);

main_sparsemux_7_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
sparsemux_7_2_32_1_1_U9(
    .din0(reg_160),
    .din1(reg_164),
    .din2(reg_168),
    .def(tmp_fu_299_p7),
    .sel(tmp_fu_299_p8),
    .dout(tmp_fu_299_p9)
);

main_mul_4ns_32s_32_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_4ns_32s_32_5_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_322_p0),
    .din1(tmp_reg_496),
    .ce(1'b1),
    .dout(grp_fu_322_p2)
);

main_sparsemux_7_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 32 ),
    .CASE1( 2'h0 ),
    .din1_WIDTH( 32 ),
    .CASE2( 2'h1 ),
    .din2_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
sparsemux_7_2_32_1_1_U11(
    .din0(reg_160),
    .din1(reg_164),
    .din2(reg_168),
    .def(tmp_1_fu_342_p7),
    .sel(trunc_ln13_reg_491),
    .dout(tmp_1_fu_342_p9)
);

main_mac_muladd_7ns_7ns_7ns_14_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 7 ),
    .dout_WIDTH( 14 ))
mac_muladd_7ns_7ns_7ns_14_4_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_365_p0),
    .din1(grp_fu_365_p1),
    .din2(grp_fu_365_p2),
    .ce(1'b1),
    .dout(grp_fu_365_p3)
);

main_am_addmul_7ns_7ns_9ns_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 17 ))
am_addmul_7ns_7ns_9ns_17_4_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_373_p0),
    .din1(grp_fu_373_p1),
    .din2(grp_fu_373_p2),
    .ce(1'b1),
    .dout(grp_fu_373_p3)
);

main_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage9),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage9_subdone) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage9)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage9_subdone) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_1_fu_72 <= 7'd0;
    end else if (((icmp_ln15_reg_403 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        i_1_fu_72 <= add_ln14_fu_264_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_fu_80 <= 14'd0;
    end else if (((icmp_ln15_reg_403 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        indvar_flatten_fu_80 <= add_ln15_2_reg_407;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_1_fu_76 <= 7'd0;
    end else if (((icmp_ln15_reg_403 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        j_1_fu_76 <= select_ln15_fu_245_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        add_ln15_1_reg_536 <= add_ln15_1_fu_361_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln15_2_reg_407 <= add_ln15_2_fu_196_p2;
        icmp_ln14_reg_412 <= icmp_ln14_fu_205_p2;
        icmp_ln15_reg_403 <= icmp_ln15_fu_190_p2;
        select_ln13_reg_417 <= select_ln13_fu_211_p3;
        select_ln13_reg_417_pp0_iter1_reg <= select_ln13_reg_417;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln15_3_reg_441 <= add_ln15_3_fu_239_p2;
        j_1_load_reg_436 <= j_1_fu_76;
        tmp_reg_496 <= tmp_fu_299_p9;
        trunc_ln13_reg_491 <= trunc_ln13_fu_296_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln15_reg_456 <= grp_fu_365_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        data_1_addr_2_reg_516 <= zext_ln15_2_fu_336_p1;
        data_2_addr_2_reg_521 <= zext_ln15_2_fu_336_p1;
        data_addr_2_reg_511 <= zext_ln15_2_fu_336_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul_ln15_1_reg_526 <= grp_fu_322_p2;
        tmp_1_reg_531 <= tmp_1_fu_342_p9;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_160 <= data_q0;
        reg_164 <= data_1_q0;
        reg_168 <= data_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_2_reg_451 <= {{grp_fu_225_p2[14:9]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_3_reg_506 <= {{tmp_3_fu_327_p1[16:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        urem_ln13_reg_486 <= grp_fu_231_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        w_load_reg_466 <= w_q0;
    end
end

always @ (*) begin
    if (((icmp_ln15_reg_403 == 1'd1) & (1'b0 == ap_block_pp0_stage9_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        ap_condition_exit_pp0_iter0_stage9 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage9 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage9_subdone) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage9_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1_load = 7'd0;
    end else begin
        ap_sig_allocacmp_i_1_load = i_1_fu_72;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 14'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_80;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            data_1_address0 = data_1_addr_2_reg_516;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            data_1_address0 = zext_ln15_2_fu_336_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_1_address0 = zext_ln13_fu_287_p1;
        end else begin
            data_1_address0 = 'bx;
        end
    end else begin
        data_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        data_1_ce0 = 1'b1;
    end else begin
        data_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (trunc_ln13_reg_491 == 2'd0))) begin
        data_1_we0 = 1'b1;
    end else begin
        data_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            data_2_address0 = data_2_addr_2_reg_521;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            data_2_address0 = zext_ln15_2_fu_336_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_2_address0 = zext_ln13_fu_287_p1;
        end else begin
            data_2_address0 = 'bx;
        end
    end else begin
        data_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        data_2_ce0 = 1'b1;
    end else begin
        data_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (trunc_ln13_reg_491 == 2'd1))) begin
        data_2_we0 = 1'b1;
    end else begin
        data_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            data_address0 = data_addr_2_reg_511;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            data_address0 = zext_ln15_2_fu_336_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_address0 = zext_ln13_fu_287_p1;
        end else begin
            data_address0 = 'bx;
        end
    end else begin
        data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        data_ce0 = 1'b1;
    end else begin
        data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln13_reg_491 == 2'd0) & ~(trunc_ln13_reg_491 == 2'd1) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        data_we0 = 1'b1;
    end else begin
        data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        w_ce0 = 1'b1;
    end else begin
        w_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln14_fu_264_p2 = (select_ln13_reg_417 + 7'd1);

assign add_ln15_1_fu_361_p2 = (tmp_1_reg_531 + mul_ln15_1_reg_526);

assign add_ln15_2_fu_196_p2 = (ap_sig_allocacmp_indvar_flatten_load + 14'd1);

assign add_ln15_3_fu_239_p2 = (j_1_fu_76 + 7'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage9;

assign data_1_d0 = add_ln15_1_reg_536;

assign data_2_d0 = add_ln15_1_reg_536;

assign data_d0 = add_ln15_1_reg_536;

assign grp_fu_225_p0 = grp_fu_225_p00;

assign grp_fu_225_p00 = select_ln13_reg_417;

assign grp_fu_225_p1 = 15'd171;

assign grp_fu_231_p1 = 7'd3;

assign grp_fu_322_p0 = grp_fu_322_p00;

assign grp_fu_322_p00 = w_load_reg_466;

assign grp_fu_365_p0 = grp_fu_365_p00;

assign grp_fu_365_p00 = select_ln13_reg_417;

assign grp_fu_365_p1 = 14'd100;

assign grp_fu_365_p2 = grp_fu_365_p20;

assign grp_fu_365_p20 = select_ln15_fu_245_p3;

assign grp_fu_373_p0 = grp_fu_373_p00;

assign grp_fu_373_p00 = select_ln13_reg_417_pp0_iter1_reg;

assign grp_fu_373_p1 = 8'd100;

assign grp_fu_373_p2 = 17'd342;

assign icmp_ln14_fu_205_p2 = ((ap_sig_allocacmp_i_1_load == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln15_fu_190_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 14'd10000) ? 1'b1 : 1'b0);

assign select_ln13_fu_211_p3 = ((icmp_ln14_fu_205_p2[0:0] == 1'b1) ? 7'd0 : ap_sig_allocacmp_i_1_load);

assign select_ln15_fu_245_p3 = ((icmp_ln14_reg_412[0:0] == 1'b1) ? add_ln15_3_reg_441 : j_1_load_reg_436);

assign tmp_1_fu_342_p7 = 'bx;

assign tmp_3_fu_327_p1 = grp_fu_373_p3;

assign tmp_fu_299_p7 = 'bx;

assign tmp_fu_299_p8 = urem_ln13_reg_486[1:0];

assign trunc_ln13_fu_296_p1 = urem_ln13_reg_486[1:0];

assign w_address0 = zext_ln15_fu_283_p1;

assign zext_ln13_fu_287_p1 = tmp_2_reg_451;

assign zext_ln15_2_fu_336_p1 = tmp_3_reg_506;

assign zext_ln15_fu_283_p1 = add_ln15_reg_456;

endmodule //main_main_Pipeline_VITIS_LOOP_15_1_VITIS_LOOP_14_1
