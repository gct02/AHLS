<xilinx:hls_fe_msgs>
    <msg msg_groups="" msg_id="207-4709" msg_severity="WARNING" msg_loc="benchmarks/jianyicheng/sparseMatrixPower/src/smm_tb.cpp:42:11" msg_body="using the result of an assignment as a condition without parentheses">
        <args ClangWarningOption="parentheses"/>
    </msg>
    <msg msg_groups="" msg_id="207-4136" msg_severity="INFO" msg_loc="benchmarks/jianyicheng/sparseMatrixPower/src/smm_tb.cpp:42:11" msg_body="place parentheses around the assignment to silence this warning">
        <args/>
    </msg>
    <msg msg_groups="" msg_id="207-4137" msg_severity="INFO" msg_loc="benchmarks/jianyicheng/sparseMatrixPower/src/smm_tb.cpp:42:11" msg_body="use '==' to turn this assignment into an equality comparison">
        <args/>
    </msg>
    <msg msg_groups="PRAGMA_VERBOSE_DUMP" msg_id="207-5471" msg_severity="WARNING" msg_loc="/home/gabriel/Documents/UFRGS/RAISE/AHLS/AHLS/hls/tcl/run_sparseMatrixPower.tcl:7:9" msg_body="HLS pragma dump">
        <args ARG_PragmaContext="directive" ARG_PragmaFunction="main" ARG_PragmaIsValid="1" ARG_PragmaOptions="name=main" ARG_PragmaType="top" ClangWarningOption="dump-hls-pragmas"/>
    </msg>
    <msg msg_groups="PRAGMA_INLINE" msg_id="214-178" msg_severity="INFO" msg_loc="benchmarks/jianyicheng/sparseMatrixPower/src/smm.cpp:12:0" msg_body="Inlining function 'g(int*, int, int*)' into 'smm(int*, int*, int*)'">
        <args Callee="g(int*, int, int*)" Callee-DebugLoc="File benchmarks/jianyicheng/sparseMatrixPower/src/g.cpp Line 12 Column 0" Caller="smm(int*, int*, int*)" Caller-DebugLoc="File benchmarks/jianyicheng/sparseMatrixPower/src/smm.cpp Line 12 Column 0"/>
    </msg>
    <msg msg_groups="PRAGMA_INLINE" msg_id="214-178" msg_severity="INFO" msg_loc="benchmarks/jianyicheng/sparseMatrixPower/src/smm_tb.cpp:13:0" msg_body="Inlining function 'smm(int*, int*, int*)' into 'main'">
        <args Callee="smm(int*, int*, int*)" Callee-DebugLoc="File benchmarks/jianyicheng/sparseMatrixPower/src/smm.cpp Line 12 Column 0" Caller="main" Caller-DebugLoc="File benchmarks/jianyicheng/sparseMatrixPower/src/smm_tb.cpp Line 13 Column 0"/>
    </msg>
    <msg msg_groups="AUTOMATION_VERBOSE_PASSED" msg_id="214-335" msg_severity="INFO" msg_loc="benchmarks/jianyicheng/sparseMatrixPower/src/smm_tb.cpp:14:7" msg_body="array_partition dim=1 type=cyclic factor=3 variable=data 1 main benchmarks/jianyicheng/sparseMatrixPower/src/smm_tb.cpp:14:7 data">
        <args PragmaFunction="main" PragmaIsAuto="1" PragmaOptions="dim=1 type=cyclic factor=3 variable=data" PragmaType="array_partition" VarName="data" varLoc="benchmarks/jianyicheng/sparseMatrixPower/src/smm_tb.cpp:14:7"/>
    </msg>
    <msg msg_groups="AUTOMATION PRAGMA_MISC" msg_id="214-270" msg_severity="INFO" msg_loc="benchmarks/jianyicheng/sparseMatrixPower/src/smm_tb.cpp:14:7" msg_body="Inferring pragma 'array_partition type=cyclic factor=3 dim=1' for array 'data' due to pipeline pragma">
        <args Dim="1" Factor="3" Mode="cyclic" Name="data" PragmaType="array_partition"/>
    </msg>
    <msg msg_groups="PRAGMA_MISC" msg_id="214-248" msg_severity="INFO" msg_loc="benchmarks/jianyicheng/sparseMatrixPower/src/smm_tb.cpp:14:7" msg_body="Applying array_partition to 'data': Cyclic partitioning with factor 3 on dimension 1.">
        <args Dim="1" Factor="3" Mode="Cyclic" UOName="data"/>
    </msg>
</xilinx:hls_fe_msgs>

