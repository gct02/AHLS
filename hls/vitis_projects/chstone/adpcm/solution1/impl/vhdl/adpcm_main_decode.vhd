-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity adpcm_main_decode is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_r : IN STD_LOGIC_VECTOR (7 downto 0);
    dec_rlt1_i : IN STD_LOGIC_VECTOR (30 downto 0);
    dec_rlt1_o : OUT STD_LOGIC_VECTOR (30 downto 0);
    dec_rlt1_o_ap_vld : OUT STD_LOGIC;
    dec_al1_i : IN STD_LOGIC_VECTOR (15 downto 0);
    dec_al1_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    dec_al1_o_ap_vld : OUT STD_LOGIC;
    dec_rlt2_i : IN STD_LOGIC_VECTOR (30 downto 0);
    dec_rlt2_o : OUT STD_LOGIC_VECTOR (30 downto 0);
    dec_rlt2_o_ap_vld : OUT STD_LOGIC;
    dec_al2_i : IN STD_LOGIC_VECTOR (14 downto 0);
    dec_al2_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    dec_al2_o_ap_vld : OUT STD_LOGIC;
    dec_detl_i : IN STD_LOGIC_VECTOR (14 downto 0);
    dec_detl_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    dec_detl_o_ap_vld : OUT STD_LOGIC;
    il : IN STD_LOGIC_VECTOR (5 downto 0);
    dec_nbl_i : IN STD_LOGIC_VECTOR (14 downto 0);
    dec_nbl_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    dec_nbl_o_ap_vld : OUT STD_LOGIC;
    dec_plt1_i : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_plt1_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_plt1_o_ap_vld : OUT STD_LOGIC;
    dec_plt2_i : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_plt2_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_plt2_o_ap_vld : OUT STD_LOGIC;
    dec_rh1_i : IN STD_LOGIC_VECTOR (30 downto 0);
    dec_rh1_o : OUT STD_LOGIC_VECTOR (30 downto 0);
    dec_rh1_o_ap_vld : OUT STD_LOGIC;
    dec_ah1_i : IN STD_LOGIC_VECTOR (15 downto 0);
    dec_ah1_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    dec_ah1_o_ap_vld : OUT STD_LOGIC;
    dec_rh2_i : IN STD_LOGIC_VECTOR (30 downto 0);
    dec_rh2_o : OUT STD_LOGIC_VECTOR (30 downto 0);
    dec_rh2_o_ap_vld : OUT STD_LOGIC;
    dec_ah2_i : IN STD_LOGIC_VECTOR (14 downto 0);
    dec_ah2_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    dec_ah2_o_ap_vld : OUT STD_LOGIC;
    dec_deth_i : IN STD_LOGIC_VECTOR (14 downto 0);
    dec_deth_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    dec_deth_o_ap_vld : OUT STD_LOGIC;
    dec_nbh_i : IN STD_LOGIC_VECTOR (14 downto 0);
    dec_nbh_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    dec_nbh_o_ap_vld : OUT STD_LOGIC;
    dec_ph1_i : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_ph1_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_ph1_o_ap_vld : OUT STD_LOGIC;
    dec_ph2_i : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_ph2_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_ph2_o_ap_vld : OUT STD_LOGIC;
    xout1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    xout1_ap_vld : OUT STD_LOGIC;
    xout2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    xout2_ap_vld : OUT STD_LOGIC;
    dec_del_bpl_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dec_del_bpl_ce0 : OUT STD_LOGIC;
    dec_del_bpl_we0 : OUT STD_LOGIC;
    dec_del_bpl_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_del_bpl_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_del_bpl_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dec_del_bpl_ce1 : OUT STD_LOGIC;
    dec_del_bpl_we1 : OUT STD_LOGIC;
    dec_del_bpl_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_del_bpl_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_del_dltx_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dec_del_dltx_ce0 : OUT STD_LOGIC;
    dec_del_dltx_we0 : OUT STD_LOGIC;
    dec_del_dltx_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    dec_del_dltx_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    dec_del_dltx_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dec_del_dltx_ce1 : OUT STD_LOGIC;
    dec_del_dltx_we1 : OUT STD_LOGIC;
    dec_del_dltx_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    dec_del_dltx_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    dec_del_bph_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dec_del_bph_ce0 : OUT STD_LOGIC;
    dec_del_bph_we0 : OUT STD_LOGIC;
    dec_del_bph_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_del_bph_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_del_bph_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dec_del_bph_ce1 : OUT STD_LOGIC;
    dec_del_bph_we1 : OUT STD_LOGIC;
    dec_del_bph_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_del_bph_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_del_dhx_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dec_del_dhx_ce0 : OUT STD_LOGIC;
    dec_del_dhx_we0 : OUT STD_LOGIC;
    dec_del_dhx_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    dec_del_dhx_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    dec_del_dhx_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dec_del_dhx_ce1 : OUT STD_LOGIC;
    dec_del_dhx_we1 : OUT STD_LOGIC;
    dec_del_dhx_d1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    dec_del_dhx_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
    accumc_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    accumc_ce0 : OUT STD_LOGIC;
    accumc_we0 : OUT STD_LOGIC;
    accumc_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    accumc_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    accumc_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    accumc_ce1 : OUT STD_LOGIC;
    accumc_we1 : OUT STD_LOGIC;
    accumc_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    accumc_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    accumd_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    accumd_ce0 : OUT STD_LOGIC;
    accumd_we0 : OUT STD_LOGIC;
    accumd_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    accumd_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    accumd_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    accumd_ce1 : OUT STD_LOGIC;
    accumd_we1 : OUT STD_LOGIC;
    accumd_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    accumd_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of adpcm_main_decode is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv41_D4 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000011010100";
    constant ap_const_lv44_5A8 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000010110101000";
    constant ap_const_lv45_EDC : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000111011011100";
    constant ap_const_lv46_3C90 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000011110010010000";
    constant ap_const_lv42_3FFFFFFFD90 : STD_LOGIC_VECTOR (41 downto 0) := "111111111111111111111111111111110110010000";
    constant ap_const_lv42_3FFFFFFFCB8 : STD_LOGIC_VECTOR (41 downto 0) := "111111111111111111111111111111110010111000";
    constant ap_const_lv43_7FFFFFFFCB8 : STD_LOGIC_VECTOR (42 downto 0) := "1111111111111111111111111111111110010111000";
    constant ap_const_lv45_1FFFFFFFF36C : STD_LOGIC_VECTOR (44 downto 0) := "111111111111111111111111111111111001101101100";
    constant ap_const_lv39_7FFFFFFFD4 : STD_LOGIC_VECTOR (38 downto 0) := "111111111111111111111111111111111010100";
    constant ap_const_lv40_FFFFFFFFD4 : STD_LOGIC_VECTOR (39 downto 0) := "1111111111111111111111111111111111010100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv14_2310 : STD_LOGIC_VECTOR (13 downto 0) := "10001100010000";
    constant ap_const_lv14_39B0 : STD_LOGIC_VECTOR (13 downto 0) := "11100110110000";
    constant ap_const_lv14_1CF0 : STD_LOGIC_VECTOR (13 downto 0) := "01110011110000";
    constant ap_const_lv14_650 : STD_LOGIC_VECTOR (13 downto 0) := "00011001010000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv11_31E : STD_LOGIC_VECTOR (10 downto 0) := "01100011110";
    constant ap_const_lv11_72A : STD_LOGIC_VECTOR (10 downto 0) := "11100101010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv17_5800 : STD_LOGIC_VECTOR (16 downto 0) := "00101100000000000";
    constant ap_const_lv15_5800 : STD_LOGIC_VECTOR (14 downto 0) := "101100000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv17_4800 : STD_LOGIC_VECTOR (16 downto 0) := "00100100000000000";
    constant ap_const_lv15_4800 : STD_LOGIC_VECTOR (14 downto 0) := "100100000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv32_FFFFFF80 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111110000000";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv17_1FF80 : STD_LOGIC_VECTOR (16 downto 0) := "11111111110000000";
    constant ap_const_lv17_80 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv17_3000 : STD_LOGIC_VECTOR (16 downto 0) := "00011000000000000";
    constant ap_const_lv17_1D000 : STD_LOGIC_VECTOR (16 downto 0) := "11101000000000000";
    constant ap_const_lv15_5000 : STD_LOGIC_VECTOR (14 downto 0) := "101000000000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv18_3FF40 : STD_LOGIC_VECTOR (17 downto 0) := "111111111101000000";
    constant ap_const_lv18_C0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000011000000";
    constant ap_const_lv15_3C00 : STD_LOGIC_VECTOR (14 downto 0) := "011110000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal qq4_code4_table_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal qq4_code4_table_ce0 : STD_LOGIC;
    signal qq4_code4_table_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal qq6_code6_table_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal qq6_code6_table_ce0 : STD_LOGIC;
    signal qq6_code6_table_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal wl_code_table_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal wl_code_table_ce0 : STD_LOGIC;
    signal wl_code_table_q0 : STD_LOGIC_VECTOR (12 downto 0);
    signal ilb_table_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal ilb_table_ce0 : STD_LOGIC;
    signal ilb_table_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal reg_640 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal reg_644 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_648 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_652 : STD_LOGIC_VECTOR (13 downto 0);
    signal reg_658 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_663 : STD_LOGIC_VECTOR (13 downto 0);
    signal reg_669 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal grp_fu_556_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal reg_673 : STD_LOGIC_VECTOR (45 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal grp_fu_560_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal reg_677 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_544_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal reg_681 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_548_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal reg_685 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_572_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_689 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_564_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal reg_693 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal grp_fu_591_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal reg_697 : STD_LOGIC_VECTOR (44 downto 0);
    signal grp_fu_596_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal reg_701 : STD_LOGIC_VECTOR (45 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal grp_fu_601_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal reg_705 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_576_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal reg_709 : STD_LOGIC_VECTOR (40 downto 0);
    signal lshr_ln_reg_3231 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_760_p6 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_3_reg_3251 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln759_fu_794_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln759_reg_3256 : STD_LOGIC_VECTOR (22 downto 0);
    signal dec_del_dltx_load_reg_3261 : STD_LOGIC_VECTOR (15 downto 0);
    signal dec_del_dltx_load_2_reg_3268 : STD_LOGIC_VECTOR (15 downto 0);
    signal qq4_code4_table_load_reg_3275 : STD_LOGIC_VECTOR (15 downto 0);
    signal qq6_code6_table_load_reg_3280 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln13_reg_3285 : STD_LOGIC_VECTOR (15 downto 0);
    signal wl_code_table_load_reg_3290 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln760_fu_883_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln760_reg_3305 : STD_LOGIC_VECTOR (16 downto 0);
    signal accumc_load_3_reg_3311 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_3_reg_3311_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_3_reg_3311_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_3_reg_3317 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_3_reg_3317_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_3_reg_3317_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_9_reg_3323 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_9_reg_3323_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_9_reg_3323_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_10_reg_3329 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_10_reg_3329_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln587_8_fu_893_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln587_9_fu_898_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln589_43_fu_906_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln589_44_fu_911_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal dec_del_dltx_load_4_reg_3354 : STD_LOGIC_VECTOR (15 downto 0);
    signal dec_del_dltx_load_5_reg_3361 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln425_1_fu_919_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln640_fu_947_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln640_reg_3383 : STD_LOGIC_VECTOR (16 downto 0);
    signal wd3_19_reg_3389 : STD_LOGIC_VECTOR (31 downto 0);
    signal wd3_15_reg_3395 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln587_11_fu_1005_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln587_12_fu_1010_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln589_58_fu_1015_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln589_59_fu_1020_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal dec_del_dhx_load_4_reg_3421 : STD_LOGIC_VECTOR (13 downto 0);
    signal dec_del_bph_load_5_reg_3428 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_dhx_load_5_reg_3435 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln472_1_reg_3441 : STD_LOGIC_VECTOR (13 downto 0);
    signal wd1_2_reg_3449 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln653_2_reg_3454 : STD_LOGIC_VECTOR (3 downto 0);
    signal wd3_27_reg_3459 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_4_reg_3465 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_4_reg_3465_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_4_reg_3465_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_4_reg_3471 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_4_reg_3471_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_4_reg_3471_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_6_reg_3477 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_6_reg_3477_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_6_reg_3477_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_6_reg_3483 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_6_reg_3483_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_6_reg_3483_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_dltx_load_1_reg_3489 : STD_LOGIC_VECTOR (15 downto 0);
    signal dec_del_dltx_load_3_reg_3496 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln589_49_fu_1125_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln589_50_fu_1130_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln589_52_fu_1138_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln589_53_fu_1143_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal trunc_ln425_2_reg_3523 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln425_2_reg_3523_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln12_reg_3531 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln12_reg_3531_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal wd1_reg_3536 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln14_reg_3541 : STD_LOGIC_VECTOR (3 downto 0);
    signal wd3_17_reg_3546 : STD_LOGIC_VECTOR (31 downto 0);
    signal wd3_18_reg_3552 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_bph_load_3_reg_3568 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_64_fu_1289_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln589_65_fu_1294_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln589_67_fu_1298_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln589_68_fu_1305_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal icmp_ln668_2_fu_1313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln668_2_reg_3605 : STD_LOGIC_VECTOR (0 downto 0);
    signal wd3_23_reg_3609 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln679_18_fu_1342_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln679_18_reg_3615 : STD_LOGIC_VECTOR (27 downto 0);
    signal accumd_load_2_reg_3625 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_2_reg_3625_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_2_reg_3625_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_5_reg_3631 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_5_reg_3631_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_5_reg_3631_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_7_reg_3637 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_7_reg_3637_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_7_reg_3637_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_9_reg_3643 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_9_reg_3643_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_9_reg_3643_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_40_fu_1366_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln589_41_fu_1371_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln589_46_fu_1382_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln589_47_fu_1387_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln425_1_fu_1394_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln425_1_reg_3684 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln668_fu_1401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln668_reg_3700 : STD_LOGIC_VECTOR (0 downto 0);
    signal wd3_16_reg_3704 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln589_55_fu_1452_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln589_56_fu_1457_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln589_61_fu_1462_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln589_62_fu_1466_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sub_ln656_2_fu_1478_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln656_2_reg_3730 : STD_LOGIC_VECTOR (3 downto 0);
    signal wd3_22_reg_3735 : STD_LOGIC_VECTOR (31 downto 0);
    signal wd3_25_reg_3741 : STD_LOGIC_VECTOR (31 downto 0);
    signal wd3_26_reg_3747 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1345_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln679_17_reg_3753 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1351_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln679_19_reg_3758 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1357_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln679_22_reg_3763 : STD_LOGIC_VECTOR (27 downto 0);
    signal accumc_load_5_reg_3768 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_5_reg_3768_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_5_reg_3768_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_10_reg_3774 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_10_reg_3774_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_10_reg_3774_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln656_fu_1564_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln656_reg_3790 : STD_LOGIC_VECTOR (3 downto 0);
    signal wd3_14_reg_3795 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1430_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_reg_3801 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1436_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_13_reg_3806 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1442_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_16_reg_3811 : STD_LOGIC_VECTOR (31 downto 0);
    signal wd3_24_reg_3821 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_17_fu_1674_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_17_reg_3827 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_19_fu_1698_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_19_reg_3832 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_22_fu_1727_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_22_reg_3837 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_7_reg_3842 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_7_reg_3842_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_7_reg_3842_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_8_reg_3848 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_8_reg_3848_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_8_reg_3848_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_fu_1777_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_reg_3859 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1593_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_12_reg_3864 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_13_fu_1801_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_13_reg_3869 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1598_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_15_reg_3874 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_16_fu_1830_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_16_reg_3879 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1703_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln679_21_reg_3894 : STD_LOGIC_VECTOR (27 downto 0);
    signal accumc_load_2_reg_3899 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_2_reg_3899_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_2_reg_3899_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_8_reg_3905 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_8_reg_3905_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_8_reg_3905_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_713_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_reg_3912 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln684_12_fu_1872_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_12_reg_3917 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1806_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln679_14_reg_3922 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_15_fu_1896_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_15_reg_3927 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_719_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_14_reg_3932 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_1843_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln679_18_reg_3937 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1848_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln679_20_reg_3942 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln684_21_fu_1920_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_21_reg_3947 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln589_11_reg_3952 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln684_14_fu_1944_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_14_reg_3957 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln589_16_reg_3962 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln684_18_fu_1968_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_18_reg_3967 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_20_fu_1992_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln684_20_reg_3972 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_1_reg_3977 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumc_load_1_reg_3977_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_1_reg_3984 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_1_reg_3984_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln589_10_fu_1997_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_10_reg_3990 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_12_fu_2002_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_12_reg_3995 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_15_fu_2007_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_15_reg_4000 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_17_fu_2012_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln589_17_reg_4005 : STD_LOGIC_VECTOR (45 downto 0);
    signal trunc_ln_reg_4010 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln591_2_reg_4016 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_al2_load_reg_4021 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln600_7_fu_2061_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln604_4_fu_2066_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal add_ln440_fu_2071_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln440_reg_4037 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln481_fu_2078_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln481_reg_4043 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln705_fu_2091_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln705_4_fu_2096_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln708_fu_2101_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln705_5_fu_2125_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln705_6_fu_2130_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln708_2_fu_2135_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal dec_al1_load_reg_4082 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln600_fu_2167_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln600_6_fu_2172_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal dec_ah2_load_reg_4100 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln600_10_fu_2199_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln604_6_fu_2204_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_552_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal mul_ln604_reg_4116 : STD_LOGIC_VECTOR (46 downto 0);
    signal dec_ah1_load_reg_4121 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln600_8_fu_2225_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln600_9_fu_2230_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal accumc_load_reg_4139 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_reg_4145 : STD_LOGIC_VECTOR (31 downto 0);
    signal accumd_load_reg_4145_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_reg_4151 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln716_fu_2255_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln716_reg_4157 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_fu_2267_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_reg_4162 : STD_LOGIC_VECTOR (32 downto 0);
    signal sub_ln706_fu_2284_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln706_reg_4167 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln716_fu_2319_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln716_reg_4172 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_43_reg_4177 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln716_2_fu_2339_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln716_2_reg_4183 : STD_LOGIC_VECTOR (22 downto 0);
    signal apl2_fu_2382_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal apl2_reg_4193 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln604_2_reg_4199 : STD_LOGIC_VECTOR (46 downto 0);
    signal sub_ln706_2_fu_2398_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln706_2_reg_4204 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln716_5_fu_2433_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln716_5_reg_4209 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln11_reg_4214 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln719_fu_2454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln719_reg_4219 : STD_LOGIC_VECTOR (0 downto 0);
    signal apl2_8_fu_2492_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal apl2_8_reg_4224 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln516_4_fu_2497_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln422_fu_2504_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln422_reg_4235 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln425_fu_2508_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln425_reg_4240 : STD_LOGIC_VECTOR (30 downto 0);
    signal apl2_7_fu_2528_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal apl2_7_reg_4245 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln734_fu_2553_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sub_ln734_reg_4250 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln605_2_reg_4255 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln719_2_fu_2574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln719_2_reg_4260 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln430_fu_2585_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln430_reg_4265 : STD_LOGIC_VECTOR (31 downto 0);
    signal apl1_fu_2610_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal apl1_reg_4271 : STD_LOGIC_VECTOR (17 downto 0);
    signal wd3_20_fu_2616_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal wd3_20_reg_4277 : STD_LOGIC_VECTOR (14 downto 0);
    signal apl2_10_fu_2651_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal apl2_10_reg_4283 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln734_2_fu_2676_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sub_ln734_2_reg_4288 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln493_fu_2682_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln493_reg_4293 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_627_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp34_reg_4299 : STD_LOGIC_VECTOR (39 downto 0);
    signal apl1_8_fu_2707_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal apl1_8_reg_4304 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln733_fu_2714_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln733_reg_4309 : STD_LOGIC_VECTOR (15 downto 0);
    signal apl1_9_fu_2718_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal apl1_9_reg_4314 : STD_LOGIC_VECTOR (15 downto 0);
    signal apl1_11_fu_2744_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal apl1_11_reg_4320 : STD_LOGIC_VECTOR (17 downto 0);
    signal wd3_28_fu_2750_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal wd3_28_reg_4326 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln504_fu_2755_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln504_reg_4332 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln505_fu_2759_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln505_reg_4339 : STD_LOGIC_VECTOR (31 downto 0);
    signal apl1_12_fu_2794_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal apl1_12_reg_4345 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln733_2_fu_2801_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln733_2_reg_4350 : STD_LOGIC_VECTOR (15 downto 0);
    signal apl1_13_fu_2805_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal apl1_13_reg_4355 : STD_LOGIC_VECTOR (15 downto 0);
    signal xa1_fu_2833_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal xa1_reg_4361 : STD_LOGIC_VECTOR (36 downto 0);
    signal sub_ln516_fu_2864_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal sub_ln516_reg_4366 : STD_LOGIC_VECTOR (38 downto 0);
    signal mul_ln516_2_reg_4371 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp35_fu_2873_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp35_reg_4376 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln520_fu_2902_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal add_ln520_reg_4381 : STD_LOGIC_VECTOR (38 downto 0);
    signal sext_ln516_8_fu_2915_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal sext_ln516_9_fu_2919_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln517_6_fu_2931_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln516_11_fu_2935_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln516_15_fu_2943_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln517_1_fu_2951_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln517_7_fu_2955_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal sext_ln517_9_fu_2959_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_607_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal mul_ln516_reg_4456 : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_fu_612_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal mul_ln517_2_reg_4461 : STD_LOGIC_VECTOR (44 downto 0);
    signal grp_fu_617_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal mul_ln516_3_reg_4466 : STD_LOGIC_VECTOR (44 downto 0);
    signal grp_fu_581_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln517_1_reg_4471 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_586_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln516_4_reg_4476 : STD_LOGIC_VECTOR (43 downto 0);
    signal add_ln520_1_fu_2969_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal add_ln520_1_reg_4481 : STD_LOGIC_VECTOR (44 downto 0);
    signal sub_ln521_fu_2997_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal sub_ln521_reg_4486 : STD_LOGIC_VECTOR (36 downto 0);
    signal grp_fu_622_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal mul_ln521_reg_4491 : STD_LOGIC_VECTOR (38 downto 0);
    signal add_ln521_1_fu_3003_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln521_1_reg_4496 : STD_LOGIC_VECTOR (45 downto 0);
    signal sub_ln517_fu_3059_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal sub_ln517_reg_4501 : STD_LOGIC_VECTOR (38 downto 0);
    signal add_ln520_2_fu_3068_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal add_ln520_2_reg_4506 : STD_LOGIC_VECTOR (44 downto 0);
    signal add_ln520_4_fu_3073_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal add_ln520_4_reg_4511 : STD_LOGIC_VECTOR (44 downto 0);
    signal add_ln520_6_fu_3078_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal add_ln520_6_reg_4516 : STD_LOGIC_VECTOR (40 downto 0);
    signal add_ln521_2_fu_3087_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln521_2_reg_4521 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln521_4_fu_3092_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln521_4_reg_4526 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln521_6_fu_3098_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal add_ln521_6_reg_4531 : STD_LOGIC_VECTOR (38 downto 0);
    signal add_ln520_3_fu_3113_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal add_ln520_3_reg_4536 : STD_LOGIC_VECTOR (44 downto 0);
    signal add_ln520_5_fu_3121_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln520_5_reg_4541 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln520_7_fu_3130_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln520_7_reg_4546 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln521_fu_3136_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln521_reg_4551 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln521_5_fu_3144_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal add_ln521_5_reg_4556 : STD_LOGIC_VECTOR (44 downto 0);
    signal add_ln521_7_fu_3153_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal add_ln521_7_reg_4561 : STD_LOGIC_VECTOR (39 downto 0);
    signal add_ln520_8_fu_3162_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln520_8_reg_4566 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln521_3_fu_3170_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln521_3_reg_4571 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln521_8_fu_3178_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal add_ln521_8_reg_4576 : STD_LOGIC_VECTOR (44 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_storemerge28_reg_524 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_storemerge_reg_534 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln425_fu_745_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln428_fu_755_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln656_2_fu_1309_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln656_fu_1397_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal add_ln452_fu_2621_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal apl1_10_fu_2771_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln11_fu_1744_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal select_ln643_fu_1195_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln496_fu_2686_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal apl1_14_fu_2887_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln657_2_fu_1618_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln763_fu_1063_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal grp_fu_544_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_544_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_548_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_548_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_552_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_552_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_556_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_556_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_560_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_560_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_564_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_564_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_568_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_568_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_572_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_572_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_576_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_576_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_581_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_586_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_591_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_591_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_596_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_596_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_601_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_601_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_607_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_612_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_617_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_622_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_627_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_568_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln425_1_fu_735_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_3_fu_760_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal shl_ln15_fu_782_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln759_2_fu_790_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln759_fu_778_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal shl_ln_fu_808_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln639_2_fu_816_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln639_fu_804_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln639_fu_820_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_847_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal wd_fu_853_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_fu_866_p6 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln758_fu_862_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln760_fu_879_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_926_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_935_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln640_2_fu_944_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln640_fu_941_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln12_fu_953_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln587_fu_889_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_fu_961_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal shl_ln672_11_fu_977_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_42_fu_902_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_13_fu_985_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_847_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal sext_ln756_fu_1035_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_fu_1038_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln761_fu_1046_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln763_fu_1057_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln756_fu_1053_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln672_15_fu_1097_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln587_10_fu_1001_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_17_fu_1105_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_926_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_935_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln636_fu_1167_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_1170_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln641_fu_1178_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln643_fu_1189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln636_fu_1185_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln672_13_fu_1229_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_48_fu_1121_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_15_fu_1237_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal shl_ln672_14_fu_1253_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_51_fu_1134_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_16_fu_1261_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal shl_ln672_17_fu_1318_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_57_fu_1281_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_19_fu_1326_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_1345_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1351_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1357_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln672_12_fu_1406_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_45_fu_1378_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_14_fu_1414_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_1430_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1436_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1442_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln672_16_fu_1483_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_54_fu_1448_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_18_fu_1491_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal shl_ln672_19_fu_1507_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_63_fu_1471_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_21_fu_1515_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal shl_ln672_20_fu_1531_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_66_fu_1475_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_22_fu_1538_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal shl_ln672_s_fu_1569_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_fu_1554_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_12_fu_1577_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_1593_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1598_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln656_2cast_fu_1609_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal wd3_21_fu_1612_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln672_18_fu_1632_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln589_60_fu_1603_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln672_20_fu_1639_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln679_19_fu_1655_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_fu_1658_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_17_fu_1666_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln679_21_fu_1679_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_fu_1682_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_19_fu_1690_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1703_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln679_24_fu_1708_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_fu_1711_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_22_fu_1719_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln656cast_fu_1735_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal wd3_fu_1738_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln679_fu_1758_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_1761_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_fu_1769_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln679_14_fu_1782_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_fu_1785_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_13_fu_1793_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1806_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln679_17_fu_1811_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_33_fu_1814_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_16_fu_1822_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1843_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1848_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln679_13_fu_1853_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_fu_1856_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_12_fu_1864_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln679_16_fu_1877_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_fu_1880_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_15_fu_1888_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln679_23_fu_1901_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_41_fu_1904_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_21_fu_1912_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln679_15_fu_1925_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_fu_1928_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_14_fu_1936_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln679_20_fu_1949_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_38_fu_1952_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_18_fu_1960_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln679_22_fu_1973_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_fu_1976_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln666_20_fu_1984_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zl_4_fu_2017_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal zl_6_fu_2031_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal pl2_fu_2053_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln604_4_fu_2066_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln472_1_fu_2075_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln705_4_fu_2096_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln708_fu_2101_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln705_6_fu_2130_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln708_2_fu_2135_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal pl_fu_2159_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln600_6_fu_2172_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal pl2_2_fu_2191_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln604_6_fu_2204_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal pl_5_fu_2217_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln600_9_fu_2230_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln13_fu_2244_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln716_fu_2251_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln604_fu_2241_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal accumc_load_10_cast_fu_2264_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln517_fu_2261_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal wd2_fu_2273_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln702_fu_2280_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln15_fu_2298_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_fu_2290_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln716_4_fu_2307_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln716_fu_2311_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln716_2_fu_2328_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln716_5_fu_2335_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln604_5_fu_2325_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_s_fu_2349_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln707_fu_2358_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1_fu_2362_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln705_fu_2371_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln708_4_fu_2378_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal wd2_2_fu_2387_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln702_2_fu_2394_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln716_2_fu_2412_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_44_fu_2404_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln716_6_fu_2421_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln716_2_fu_2425_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal pl_4_fu_2439_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_2_fu_2459_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln707_2_fu_2468_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_5_fu_2472_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln705_2_fu_2481_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln708_5_fu_2488_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal apl2_6_fu_2512_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln721_fu_2522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln703_fu_2518_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln14_fu_2542_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln734_fu_2549_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln602_fu_2501_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal pl_6_fu_2559_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln428_2_fu_2582_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln16_fu_2590_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln735_fu_2603_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln735_fu_2599_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln428_1_fu_2579_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal apl2_9_fu_2635_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln721_2_fu_2645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln703_2_fu_2641_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln734_2_fu_2665_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln734_2_fu_2672_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln602_2_fu_2632_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln733_fu_2696_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln745_fu_2702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln733_4_fu_2699_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln734_2_fu_2724_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln735_2_fu_2737_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln735_2_fu_2733_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln747_fu_2763_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln747_fu_2766_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln733_5_fu_2783_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln745_2_fu_2789_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln733_6_fu_2786_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln16_fu_2811_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal shl_ln511_1_fu_2822_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln511_fu_2818_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal sext_ln511_1_fu_2829_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal shl_ln17_fu_2842_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal shl_ln516_1_fu_2853_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal sext_ln516_2_fu_2849_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal sext_ln516_3_fu_2860_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal sext_ln520_fu_2870_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln516_fu_2839_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln747_2_fu_2879_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln747_2_fu_2882_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln406_fu_2899_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal sext_ln517_4_fu_2963_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal shl_ln19_fu_2975_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal shl_ln521_1_fu_2986_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln521_fu_2982_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal sext_ln521_1_fu_2993_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal sext_ln516_7_fu_2966_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal shl_ln516_2_fu_3009_p3 : STD_LOGIC_VECTOR (38 downto 0);
    signal shl_ln18_fu_3026_p3 : STD_LOGIC_VECTOR (38 downto 0);
    signal shl_ln517_1_fu_3037_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal shl_ln517_2_fu_3048_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal sext_ln517_10_fu_3044_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal sext_ln517_11_fu_3055_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal sext_ln517_2_fu_3016_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal sext_ln517_8_fu_3023_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal sext_ln520_1_fu_3065_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln516_5_fu_3020_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln516_13_fu_3033_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sub_ln521_cast_fu_3084_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal sext_ln520_2_fu_3110_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal sext_ln520_4_fu_3118_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln520_5_fu_3127_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln516_1_fu_3103_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln521_4_fu_3141_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal sext_ln521_5_fu_3150_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln516_14_fu_3107_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln520_6_fu_3159_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln521_3_fu_3167_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln521_6_fu_3175_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal sext_ln520_3_fu_3183_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln521_7_fu_3191_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal xa1_1_fu_3186_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal xa2_fu_3194_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to3 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_idle_pp0_0to2 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_847_p10 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_condition_2790 : BOOLEAN;
    signal ap_condition_2794 : BOOLEAN;
    signal ap_condition_2798 : BOOLEAN;
    signal ap_condition_2802 : BOOLEAN;
    signal ap_condition_2808 : BOOLEAN;
    signal ap_condition_2812 : BOOLEAN;
    signal ap_condition_2817 : BOOLEAN;
    signal ap_condition_2821 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component adpcm_main_mul_14s_32s_46_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (45 downto 0) );
    end component;


    component adpcm_main_mul_15s_32s_47_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component adpcm_main_mul_16s_32s_46_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (45 downto 0) );
    end component;


    component adpcm_main_mul_16s_32s_47_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component adpcm_main_mul_32s_32s_64_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component adpcm_main_mul_32s_9ns_41_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (40 downto 0) );
    end component;


    component adpcm_main_mul_32s_12ns_44_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (43 downto 0) );
    end component;


    component adpcm_main_mul_32s_13ns_45_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (44 downto 0) );
    end component;


    component adpcm_main_mul_32s_15ns_46_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (45 downto 0) );
    end component;


    component adpcm_main_mul_32s_11s_42_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;


    component adpcm_main_mul_32s_11s_43_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (42 downto 0) );
    end component;


    component adpcm_main_mul_32s_13s_45_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (44 downto 0) );
    end component;


    component adpcm_main_mul_33s_7s_39_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (32 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (38 downto 0) );
    end component;


    component adpcm_main_mul_33s_7s_40_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (32 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component adpcm_main_mux_4_2_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        din3 : IN STD_LOGIC_VECTOR (13 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component adpcm_main_mul_14s_15ns_29_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component adpcm_main_mux_4_2_11_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        din3 : IN STD_LOGIC_VECTOR (10 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component adpcm_main_mul_16s_15ns_31_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component adpcm_main_mul_14s_14s_28_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component adpcm_main_mul_16s_16s_32_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component adpcm_main_encode_qq4_code4_table_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component adpcm_main_decode_qq6_code6_table_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component adpcm_main_encode_wl_code_table_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component adpcm_main_encode_ilb_table_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;



begin
    qq4_code4_table_U : component adpcm_main_encode_qq4_code4_table_ROM_AUTO_1R
    generic map (
        DataWidth => 16,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => qq4_code4_table_address0,
        ce0 => qq4_code4_table_ce0,
        q0 => qq4_code4_table_q0);

    qq6_code6_table_U : component adpcm_main_decode_qq6_code6_table_ROM_AUTO_1R
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => qq6_code6_table_address0,
        ce0 => qq6_code6_table_ce0,
        q0 => qq6_code6_table_q0);

    wl_code_table_U : component adpcm_main_encode_wl_code_table_ROM_AUTO_1R
    generic map (
        DataWidth => 13,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => wl_code_table_address0,
        ce0 => wl_code_table_ce0,
        q0 => wl_code_table_q0);

    ilb_table_U : component adpcm_main_encode_ilb_table_ROM_AUTO_1R
    generic map (
        DataWidth => 12,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ilb_table_address0,
        ce0 => ilb_table_ce0,
        q0 => ilb_table_q0);

    mul_14s_32s_46_5_1_U154 : component adpcm_main_mul_14s_32s_46_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 14,
        din1_WIDTH => 32,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_544_p0,
        din1 => grp_fu_544_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_544_p2);

    mul_14s_32s_46_5_1_U155 : component adpcm_main_mul_14s_32s_46_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 14,
        din1_WIDTH => 32,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_548_p0,
        din1 => grp_fu_548_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_548_p2);

    mul_15s_32s_47_5_1_U156 : component adpcm_main_mul_15s_32s_47_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 15,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_552_p0,
        din1 => grp_fu_552_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_552_p2);

    mul_16s_32s_46_5_1_U157 : component adpcm_main_mul_16s_32s_46_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 32,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_556_p0,
        din1 => grp_fu_556_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_556_p2);

    mul_16s_32s_46_5_1_U158 : component adpcm_main_mul_16s_32s_46_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 32,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_560_p0,
        din1 => grp_fu_560_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_560_p2);

    mul_16s_32s_47_5_1_U159 : component adpcm_main_mul_16s_32s_47_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 16,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_564_p0,
        din1 => grp_fu_564_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_564_p2);

    mul_32s_32s_64_5_1_U160 : component adpcm_main_mul_32s_32s_64_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_568_p0,
        din1 => grp_fu_568_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_568_p2);

    mul_32s_32s_64_5_1_U161 : component adpcm_main_mul_32s_32s_64_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_572_p0,
        din1 => grp_fu_572_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_572_p2);

    mul_32s_9ns_41_5_1_U162 : component adpcm_main_mul_32s_9ns_41_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 9,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_576_p0,
        din1 => grp_fu_576_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_576_p2);

    mul_32s_12ns_44_5_1_U163 : component adpcm_main_mul_32s_12ns_44_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 12,
        dout_WIDTH => 44)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => accumd_load_2_reg_3625_pp0_iter2_reg,
        din1 => grp_fu_581_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_581_p2);

    mul_32s_12ns_44_5_1_U164 : component adpcm_main_mul_32s_12ns_44_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 12,
        dout_WIDTH => 44)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => accumc_load_7_reg_3637_pp0_iter2_reg,
        din1 => grp_fu_586_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_586_p2);

    mul_32s_13ns_45_5_1_U165 : component adpcm_main_mul_32s_13ns_45_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 13,
        dout_WIDTH => 45)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_591_p0,
        din1 => grp_fu_591_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_591_p2);

    mul_32s_15ns_46_5_1_U166 : component adpcm_main_mul_32s_15ns_46_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 15,
        dout_WIDTH => 46)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_596_p0,
        din1 => grp_fu_596_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_596_p2);

    mul_32s_11s_42_5_1_U167 : component adpcm_main_mul_32s_11s_42_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 11,
        dout_WIDTH => 42)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_601_p0,
        din1 => grp_fu_601_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_601_p2);

    mul_32s_11s_43_5_1_U168 : component adpcm_main_mul_32s_11s_43_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 11,
        dout_WIDTH => 43)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => accumc_load_3_reg_3311_pp0_iter2_reg,
        din1 => grp_fu_607_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_607_p2);

    mul_32s_13s_45_5_1_U169 : component adpcm_main_mul_32s_13s_45_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 13,
        dout_WIDTH => 45)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => accumd_load_3_reg_3317_pp0_iter2_reg,
        din1 => grp_fu_612_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_612_p2);

    mul_32s_13s_45_5_1_U170 : component adpcm_main_mul_32s_13s_45_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 13,
        dout_WIDTH => 45)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => accumc_load_6_reg_3477_pp0_iter2_reg,
        din1 => grp_fu_617_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_617_p2);

    mul_33s_7s_39_5_1_U171 : component adpcm_main_mul_33s_7s_39_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 33,
        din1_WIDTH => 7,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp35_reg_4376,
        din1 => grp_fu_622_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_622_p2);

    mul_33s_7s_40_5_1_U172 : component adpcm_main_mul_33s_7s_40_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 33,
        din1_WIDTH => 7,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_reg_4162,
        din1 => grp_fu_627_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_627_p2);

    mux_4_2_14_1_1_U173 : component adpcm_main_mux_4_2_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        din2_WIDTH => 14,
        din3_WIDTH => 14,
        din4_WIDTH => 2,
        dout_WIDTH => 14)
    port map (
        din0 => ap_const_lv14_2310,
        din1 => ap_const_lv14_39B0,
        din2 => ap_const_lv14_1CF0,
        din3 => ap_const_lv14_650,
        din4 => tmp_3_fu_760_p5,
        dout => tmp_3_fu_760_p6);

    mul_14s_15ns_29_2_1_U174 : component adpcm_main_mul_14s_15ns_29_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 14,
        din1_WIDTH => 15,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_3_reg_3251,
        din1 => grp_fu_847_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_847_p2);

    mux_4_2_11_1_1_U175 : component adpcm_main_mux_4_2_11_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        din2_WIDTH => 11,
        din3_WIDTH => 11,
        din4_WIDTH => 2,
        dout_WIDTH => 11)
    port map (
        din0 => ap_const_lv11_31E,
        din1 => ap_const_lv11_72A,
        din2 => ap_const_lv11_31E,
        din3 => ap_const_lv11_72A,
        din4 => lshr_ln_reg_3231,
        dout => tmp_4_fu_866_p6);

    mul_16s_15ns_31_2_1_U176 : component adpcm_main_mul_16s_15ns_31_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => qq4_code4_table_load_reg_3275,
        din1 => grp_fu_926_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_926_p2);

    mul_16s_15ns_31_2_1_U177 : component adpcm_main_mul_16s_15ns_31_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => qq6_code6_table_load_reg_3280,
        din1 => grp_fu_935_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_935_p2);

    mul_14s_14s_28_2_1_U178 : component adpcm_main_mul_14s_14s_28_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1345_p0,
        din1 => reg_652,
        ce => ap_const_logic_1,
        dout => grp_fu_1345_p2);

    mul_14s_14s_28_2_1_U179 : component adpcm_main_mul_14s_14s_28_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1351_p0,
        din1 => reg_663,
        ce => ap_const_logic_1,
        dout => grp_fu_1351_p2);

    mul_14s_14s_28_2_1_U180 : component adpcm_main_mul_14s_14s_28_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1357_p0,
        din1 => dec_del_dhx_load_5_reg_3435,
        ce => ap_const_logic_1,
        dout => grp_fu_1357_p2);

    mul_16s_16s_32_2_1_U181 : component adpcm_main_mul_16s_16s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1430_p0,
        din1 => dec_del_dltx_load_reg_3261,
        ce => ap_const_logic_1,
        dout => grp_fu_1430_p2);

    mul_16s_16s_32_2_1_U182 : component adpcm_main_mul_16s_16s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1436_p0,
        din1 => dec_del_dltx_load_2_reg_3268,
        ce => ap_const_logic_1,
        dout => grp_fu_1436_p2);

    mul_16s_16s_32_2_1_U183 : component adpcm_main_mul_16s_16s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1442_p0,
        din1 => dec_del_dltx_load_5_reg_3361,
        ce => ap_const_logic_1,
        dout => grp_fu_1442_p2);

    mul_16s_16s_32_2_1_U184 : component adpcm_main_mul_16s_16s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1593_p0,
        din1 => dec_del_dltx_load_1_reg_3489,
        ce => ap_const_logic_1,
        dout => grp_fu_1593_p2);

    mul_16s_16s_32_2_1_U185 : component adpcm_main_mul_16s_16s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1598_p0,
        din1 => dec_del_dltx_load_4_reg_3354,
        ce => ap_const_logic_1,
        dout => grp_fu_1598_p2);

    mul_14s_14s_28_2_1_U186 : component adpcm_main_mul_14s_14s_28_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1703_p0,
        din1 => dec_del_dhx_load_4_reg_3421,
        ce => ap_const_logic_1,
        dout => grp_fu_1703_p2);

    mul_16s_16s_32_2_1_U187 : component adpcm_main_mul_16s_16s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1806_p0,
        din1 => dec_del_dltx_load_3_reg_3496,
        ce => ap_const_logic_1,
        dout => grp_fu_1806_p2);

    mul_14s_14s_28_2_1_U188 : component adpcm_main_mul_14s_14s_28_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1843_p0,
        din1 => reg_652,
        ce => ap_const_logic_1,
        dout => grp_fu_1843_p2);

    mul_14s_14s_28_2_1_U189 : component adpcm_main_mul_14s_14s_28_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1848_p0,
        din1 => reg_663,
        ce => ap_const_logic_1,
        dout => grp_fu_1848_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage9_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage9_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage9_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter0_storemerge28_reg_524_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
                if ((ap_const_boolean_1 = ap_condition_2794)) then 
                    ap_phi_reg_pp0_iter0_storemerge28_reg_524 <= wd3_26_reg_3747;
                elsif ((ap_const_boolean_1 = ap_condition_2790)) then 
                    ap_phi_reg_pp0_iter0_storemerge28_reg_524 <= add_ln684_22_reg_3837;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_storemerge_reg_534_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
                if ((ap_const_boolean_1 = ap_condition_2802)) then 
                    ap_phi_reg_pp0_iter0_storemerge_reg_534 <= wd3_18_reg_3552;
                elsif ((ap_const_boolean_1 = ap_condition_2798)) then 
                    ap_phi_reg_pp0_iter0_storemerge_reg_534 <= add_ln684_16_reg_3879;
                end if;
            end if; 
        end if;
    end process;

    reg_652_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    reg_652 <= dec_del_dhx_q0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    reg_652 <= dec_del_dhx_q1;
                end if;
            end if; 
        end if;
    end process;

    reg_658_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    reg_658 <= dec_del_bph_q1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    reg_658 <= dec_del_bph_q0;
                end if;
            end if; 
        end if;
    end process;

    reg_663_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    reg_663 <= dec_del_dhx_q1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    reg_663 <= dec_del_dhx_q0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                accumc_load_10_reg_3329 <= accumc_q0;
                accumc_load_3_reg_3311 <= accumc_q1;
                accumd_load_3_reg_3317 <= accumd_q1;
                accumd_load_9_reg_3323 <= accumd_q0;
                dec_del_dltx_load_2_reg_3268 <= dec_del_dltx_q0;
                dec_del_dltx_load_reg_3261 <= dec_del_dltx_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                accumc_load_10_reg_3329_pp0_iter1_reg <= accumc_load_10_reg_3329;
                accumc_load_3_reg_3311_pp0_iter1_reg <= accumc_load_3_reg_3311;
                accumc_load_3_reg_3311_pp0_iter2_reg <= accumc_load_3_reg_3311_pp0_iter1_reg;
                accumd_load_3_reg_3317_pp0_iter1_reg <= accumd_load_3_reg_3317;
                accumd_load_3_reg_3317_pp0_iter2_reg <= accumd_load_3_reg_3317_pp0_iter1_reg;
                accumd_load_9_reg_3323_pp0_iter1_reg <= accumd_load_9_reg_3323;
                accumd_load_9_reg_3323_pp0_iter2_reg <= accumd_load_9_reg_3323_pp0_iter1_reg;
                add_ln430_reg_4265 <= add_ln430_fu_2585_p2;
                add_ln440_reg_4037 <= add_ln440_fu_2071_p2;
                add_ln481_reg_4043 <= add_ln481_fu_2078_p2;
                add_ln493_reg_4293 <= add_ln493_fu_2682_p2;
                add_ln520_2_reg_4506 <= add_ln520_2_fu_3068_p2;
                add_ln520_4_reg_4511 <= add_ln520_4_fu_3073_p2;
                add_ln520_6_reg_4516 <= add_ln520_6_fu_3078_p2;
                add_ln521_2_reg_4521 <= add_ln521_2_fu_3087_p2;
                add_ln521_4_reg_4526 <= add_ln521_4_fu_3092_p2;
                add_ln521_6_reg_4531 <= add_ln521_6_fu_3098_p2;
                add_ln760_reg_3305 <= add_ln760_fu_883_p2;
                apl1_reg_4271 <= apl1_fu_2610_p2;
                apl2_10_reg_4283 <= apl2_10_fu_2651_p3;
                dec_al2_load_reg_4021 <= dec_al2_i;
                qq4_code4_table_load_reg_3275 <= qq4_code4_table_q0;
                qq6_code6_table_load_reg_3280 <= qq6_code6_table_q0;
                    sub_ln517_reg_4501(38 downto 4) <= sub_ln517_fu_3059_p2(38 downto 4);
                sub_ln734_2_reg_4288 <= sub_ln734_2_fu_2676_p2;
                tmp34_reg_4299 <= grp_fu_627_p2;
                trunc_ln13_reg_3285 <= sub_ln639_fu_820_p2(22 downto 7);
                wd3_20_reg_4277 <= wd3_20_fu_2616_p2;
                wl_code_table_load_reg_3290 <= wl_code_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                accumc_load_1_reg_3977 <= accumc_q1;
                accumd_load_1_reg_3984 <= accumd_q1;
                add_ln589_11_reg_3952 <= grp_fu_713_p2;
                add_ln589_16_reg_3962 <= grp_fu_719_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                accumc_load_1_reg_3977_pp0_iter1_reg <= accumc_load_1_reg_3977;
                accumd_load_1_reg_3984_pp0_iter1_reg <= accumd_load_1_reg_3984;
                add_ln684_14_reg_3957 <= add_ln684_14_fu_1944_p2;
                add_ln684_18_reg_3967 <= add_ln684_18_fu_1968_p2;
                add_ln684_20_reg_3972 <= add_ln684_20_fu_1992_p2;
                add_ln716_5_reg_4209 <= add_ln716_5_fu_2433_p2;
                apl2_reg_4193 <= apl2_fu_2382_p2;
                    sub_ln706_2_reg_4204(18 downto 2) <= sub_ln706_2_fu_2398_p2(18 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                accumc_load_2_reg_3899 <= accumc_q1;
                accumd_load_8_reg_3905 <= accumd_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                accumc_load_2_reg_3899_pp0_iter1_reg <= accumc_load_2_reg_3899;
                accumc_load_2_reg_3899_pp0_iter2_reg <= accumc_load_2_reg_3899_pp0_iter1_reg;
                accumd_load_8_reg_3905_pp0_iter1_reg <= accumd_load_8_reg_3905;
                accumd_load_8_reg_3905_pp0_iter2_reg <= accumd_load_8_reg_3905_pp0_iter1_reg;
                add_ln684_13_reg_3869 <= add_ln684_13_fu_1801_p2;
                add_ln684_16_reg_3879 <= add_ln684_16_fu_1830_p2;
                add_ln684_reg_3859 <= add_ln684_fu_1777_p2;
                mul_ln679_12_reg_3864 <= grp_fu_1593_p2;
                mul_ln679_15_reg_3874 <= grp_fu_1598_p2;
                mul_ln679_21_reg_3894 <= grp_fu_1703_p2;
                sub_ln716_reg_4157 <= sub_ln716_fu_2255_p2;
                tmp_reg_4162 <= tmp_fu_2267_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                accumc_load_4_reg_3465 <= accumc_q1;
                accumc_load_6_reg_3477 <= accumc_q0;
                accumd_load_4_reg_3471 <= accumd_q1;
                accumd_load_6_reg_3483 <= accumd_q0;
                dec_del_bph_load_5_reg_3428 <= dec_del_bph_q0;
                dec_del_dhx_load_4_reg_3421 <= dec_del_dhx_q1;
                dec_del_dhx_load_5_reg_3435 <= dec_del_dhx_q0;
                dec_del_dltx_load_4_reg_3354 <= dec_del_dltx_q1;
                dec_del_dltx_load_5_reg_3361 <= dec_del_dltx_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                accumc_load_4_reg_3465_pp0_iter1_reg <= accumc_load_4_reg_3465;
                accumc_load_4_reg_3465_pp0_iter2_reg <= accumc_load_4_reg_3465_pp0_iter1_reg;
                accumc_load_6_reg_3477_pp0_iter1_reg <= accumc_load_6_reg_3477;
                accumc_load_6_reg_3477_pp0_iter2_reg <= accumc_load_6_reg_3477_pp0_iter1_reg;
                accumd_load_4_reg_3471_pp0_iter1_reg <= accumd_load_4_reg_3471;
                accumd_load_4_reg_3471_pp0_iter2_reg <= accumd_load_4_reg_3471_pp0_iter1_reg;
                accumd_load_6_reg_3483_pp0_iter1_reg <= accumd_load_6_reg_3483;
                accumd_load_6_reg_3483_pp0_iter2_reg <= accumd_load_6_reg_3483_pp0_iter1_reg;
                add_ln505_reg_4339 <= add_ln505_fu_2759_p2;
                add_ln520_3_reg_4536 <= add_ln520_3_fu_3113_p2;
                add_ln520_5_reg_4541 <= add_ln520_5_fu_3121_p2;
                add_ln520_7_reg_4546 <= add_ln520_7_fu_3130_p2;
                add_ln521_5_reg_4556 <= add_ln521_5_fu_3144_p2;
                add_ln521_7_reg_4561 <= add_ln521_7_fu_3153_p2;
                add_ln521_reg_4551 <= add_ln521_fu_3136_p2;
                add_ln640_reg_3383 <= add_ln640_fu_947_p2;
                apl1_11_reg_4320 <= apl1_11_fu_2744_p2;
                apl1_8_reg_4304 <= apl1_8_fu_2707_p3;
                apl1_9_reg_4314 <= apl1_9_fu_2718_p2;
                sub_ln504_reg_4332 <= sub_ln504_fu_2755_p2;
                trunc_ln472_1_reg_3441 <= grp_fu_847_p2(28 downto 15);
                trunc_ln653_2_reg_3454 <= select_ln763_fu_1063_p3(14 downto 11);
                trunc_ln733_reg_4309 <= trunc_ln733_fu_2714_p1;
                wd1_2_reg_3449 <= select_ln763_fu_1063_p3(10 downto 6);
                wd3_15_reg_3395 <= sub_ln672_13_fu_985_p2(39 downto 8);
                wd3_19_reg_3389 <= sub_ln672_fu_961_p2(39 downto 8);
                wd3_27_reg_3459 <= sub_ln672_17_fu_1105_p2(39 downto 8);
                wd3_28_reg_4326 <= wd3_28_fu_2750_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                accumc_load_5_reg_3768 <= accumc_q1;
                accumd_load_10_reg_3774 <= accumd_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                accumc_load_5_reg_3768_pp0_iter1_reg <= accumc_load_5_reg_3768;
                accumc_load_5_reg_3768_pp0_iter2_reg <= accumc_load_5_reg_3768_pp0_iter1_reg;
                accumd_load_10_reg_3774_pp0_iter1_reg <= accumd_load_10_reg_3774;
                accumd_load_10_reg_3774_pp0_iter2_reg <= accumd_load_10_reg_3774_pp0_iter1_reg;
                    add_ln520_reg_4381(38 downto 2) <= add_ln520_fu_2902_p2(38 downto 2);
                dec_ah2_load_reg_4100 <= dec_ah2_i;
                dec_al1_load_reg_4082 <= dec_al1_i;
                icmp_ln668_reg_3700 <= icmp_ln668_fu_1401_p2;
                mul_ln679_17_reg_3753 <= grp_fu_1345_p2;
                mul_ln679_19_reg_3758 <= grp_fu_1351_p2;
                mul_ln679_22_reg_3763 <= grp_fu_1357_p2;
                sext_ln425_1_reg_3684 <= sext_ln425_1_fu_1394_p1;
                sub_ln656_2_reg_3730 <= sub_ln656_2_fu_1478_p2;
                wd3_16_reg_3704 <= sub_ln672_14_fu_1414_p2(39 downto 8);
                wd3_22_reg_3735 <= sub_ln672_18_fu_1491_p2(39 downto 8);
                wd3_25_reg_3741 <= sub_ln672_21_fu_1515_p2(39 downto 8);
                wd3_26_reg_3747 <= sub_ln672_22_fu_1538_p2(39 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                accumc_load_7_reg_3637 <= accumc_q1;
                accumc_load_9_reg_3643 <= accumc_q0;
                accumd_load_2_reg_3625 <= accumd_q1;
                accumd_load_5_reg_3631 <= accumd_q0;
                dec_del_bph_load_3_reg_3568 <= dec_del_bph_q0;
                dec_del_dltx_load_1_reg_3489 <= dec_del_dltx_q0;
                dec_del_dltx_load_3_reg_3496 <= dec_del_dltx_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                accumc_load_7_reg_3637_pp0_iter1_reg <= accumc_load_7_reg_3637;
                accumc_load_7_reg_3637_pp0_iter2_reg <= accumc_load_7_reg_3637_pp0_iter1_reg;
                accumc_load_9_reg_3643_pp0_iter1_reg <= accumc_load_9_reg_3643;
                accumc_load_9_reg_3643_pp0_iter2_reg <= accumc_load_9_reg_3643_pp0_iter1_reg;
                accumd_load_2_reg_3625_pp0_iter1_reg <= accumd_load_2_reg_3625;
                accumd_load_2_reg_3625_pp0_iter2_reg <= accumd_load_2_reg_3625_pp0_iter1_reg;
                accumd_load_5_reg_3631_pp0_iter1_reg <= accumd_load_5_reg_3631;
                accumd_load_5_reg_3631_pp0_iter2_reg <= accumd_load_5_reg_3631_pp0_iter1_reg;
                add_ln520_8_reg_4566 <= add_ln520_8_fu_3162_p2;
                add_ln521_3_reg_4571 <= add_ln521_3_fu_3170_p2;
                add_ln521_8_reg_4576 <= add_ln521_8_fu_3178_p2;
                apl1_12_reg_4345 <= apl1_12_fu_2794_p3;
                apl1_13_reg_4355 <= apl1_13_fu_2805_p2;
                icmp_ln668_2_reg_3605 <= icmp_ln668_2_fu_1313_p2;
                sext_ln679_18_reg_3615 <= sext_ln679_18_fu_1342_p1;
                    sub_ln516_reg_4366(38 downto 4) <= sub_ln516_fu_2864_p2(38 downto 4);
                tmp35_reg_4376 <= tmp35_fu_2873_p2;
                trunc_ln12_reg_3531 <= grp_fu_935_p2(30 downto 15);
                trunc_ln12_reg_3531_pp0_iter1_reg <= trunc_ln12_reg_3531;
                trunc_ln14_reg_3541 <= select_ln643_fu_1195_p3(14 downto 11);
                trunc_ln425_2_reg_3523 <= grp_fu_926_p2(30 downto 15);
                trunc_ln425_2_reg_3523_pp0_iter1_reg <= trunc_ln425_2_reg_3523;
                trunc_ln733_2_reg_4350 <= trunc_ln733_2_fu_2801_p1;
                wd1_reg_3536 <= select_ln643_fu_1195_p3(10 downto 6);
                wd3_17_reg_3546 <= sub_ln672_15_fu_1237_p2(39 downto 8);
                wd3_18_reg_3552 <= sub_ln672_16_fu_1261_p2(39 downto 8);
                wd3_23_reg_3609 <= sub_ln672_19_fu_1326_p2(39 downto 8);
                    xa1_reg_4361(36 downto 2) <= xa1_fu_2833_p2(36 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                accumc_load_8_reg_3848 <= accumc_q0;
                accumd_load_7_reg_3842 <= accumd_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                accumc_load_8_reg_3848_pp0_iter1_reg <= accumc_load_8_reg_3848;
                accumc_load_8_reg_3848_pp0_iter2_reg <= accumc_load_8_reg_3848_pp0_iter1_reg;
                accumd_load_7_reg_3842_pp0_iter1_reg <= accumd_load_7_reg_3842;
                accumd_load_7_reg_3842_pp0_iter2_reg <= accumd_load_7_reg_3842_pp0_iter1_reg;
                accumd_load_reg_4145_pp0_iter2_reg <= accumd_load_reg_4145;
                add_ln684_17_reg_3827 <= add_ln684_17_fu_1674_p2;
                add_ln684_19_reg_3832 <= add_ln684_19_fu_1698_p2;
                add_ln684_22_reg_3837 <= add_ln684_22_fu_1727_p2;
                dec_ah1_load_reg_4121 <= dec_ah1_i;
                mul_ln679_13_reg_3806 <= grp_fu_1436_p2;
                mul_ln679_16_reg_3811 <= grp_fu_1442_p2;
                mul_ln679_reg_3801 <= grp_fu_1430_p2;
                sub_ln656_reg_3790 <= sub_ln656_fu_1564_p2;
                wd3_14_reg_3795 <= sub_ln672_12_fu_1577_p2(39 downto 8);
                wd3_24_reg_3821 <= sub_ln672_20_fu_1639_p2(39 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                accumc_load_reg_4139 <= accumc_q1;
                accumd_load_reg_4145 <= accumd_q1;
                mul_ln604_reg_4116 <= grp_fu_552_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln422_reg_4235 <= add_ln422_fu_2504_p2;
                add_ln520_1_reg_4481 <= add_ln520_1_fu_2969_p2;
                add_ln521_1_reg_4496 <= add_ln521_1_fu_3003_p2;
                apl2_7_reg_4245 <= apl2_7_fu_2528_p3;
                icmp_ln719_2_reg_4260 <= icmp_ln719_2_fu_2574_p2;
                lshr_ln_reg_3231 <= input_r(7 downto 6);
                mul_ln516_4_reg_4476 <= grp_fu_586_p2;
                mul_ln517_1_reg_4471 <= grp_fu_581_p2;
                mul_ln521_reg_4491 <= grp_fu_622_p2;
                    sub_ln521_reg_4486(36 downto 2) <= sub_ln521_fu_2997_p2(36 downto 2);
                sub_ln734_reg_4250 <= sub_ln734_fu_2553_p2;
                sub_ln759_reg_3256 <= sub_ln759_fu_794_p2;
                tmp_3_reg_3251 <= tmp_3_fu_760_p6;
                trunc_ln425_reg_4240 <= trunc_ln425_fu_2508_p1;
                trunc_ln591_2_reg_4016 <= zl_6_fu_2031_p2(45 downto 14);
                trunc_ln605_2_reg_4255 <= pl_6_fu_2559_p2(46 downto 15);
                trunc_ln_reg_4010 <= zl_4_fu_2017_p2(45 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then
                add_ln589_10_reg_3990 <= add_ln589_10_fu_1997_p2;
                add_ln589_12_reg_3995 <= add_ln589_12_fu_2002_p2;
                add_ln589_15_reg_4000 <= add_ln589_15_fu_2007_p2;
                add_ln589_17_reg_4005 <= add_ln589_17_fu_2012_p2;
                apl2_8_reg_4224 <= apl2_8_fu_2492_p2;
                icmp_ln719_reg_4219 <= icmp_ln719_fu_2454_p2;
                mul_ln516_3_reg_4466 <= grp_fu_617_p2;
                mul_ln516_reg_4456 <= grp_fu_607_p2;
                mul_ln517_2_reg_4461 <= grp_fu_612_p2;
                trunc_ln11_reg_4214 <= pl_4_fu_2439_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                add_ln589_14_reg_3932 <= grp_fu_719_p2;
                add_ln589_reg_3912 <= grp_fu_713_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                add_ln684_12_reg_3917 <= add_ln684_12_fu_1872_p2;
                add_ln684_15_reg_3927 <= add_ln684_15_fu_1896_p2;
                add_ln684_21_reg_3947 <= add_ln684_21_fu_1920_p2;
                add_ln716_reg_4172 <= add_ln716_fu_2319_p2;
                mul_ln679_14_reg_3922 <= grp_fu_1806_p2;
                mul_ln679_18_reg_3937 <= grp_fu_1843_p2;
                mul_ln679_20_reg_3942 <= grp_fu_1848_p2;
                    sub_ln706_reg_4167(18 downto 2) <= sub_ln706_fu_2284_p2(18 downto 2);
                sub_ln716_2_reg_4183 <= sub_ln716_2_fu_2339_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul_ln516_2_reg_4371 <= grp_fu_601_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                mul_ln604_2_reg_4199 <= grp_fu_552_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_640 <= dec_del_bpl_q1;
                reg_644 <= dec_del_bpl_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_648 <= dec_del_bph_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then
                reg_669 <= ilb_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then
                reg_673 <= grp_fu_556_p2;
                reg_677 <= grp_fu_560_p2;
                reg_681 <= grp_fu_544_p2;
                reg_685 <= grp_fu_548_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then
                reg_689 <= grp_fu_572_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)))) then
                reg_693 <= grp_fu_564_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_697 <= grp_fu_591_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)))) then
                reg_701 <= grp_fu_596_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_705 <= grp_fu_601_p2;
                reg_709 <= grp_fu_576_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                tmp_34_reg_4151 <= grp_fu_568_p2(63 downto 63);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                tmp_43_reg_4177 <= grp_fu_568_p2(63 downto 63);
            end if;
        end if;
    end process;
    sub_ln706_reg_4167(1 downto 0) <= "00";
    sub_ln706_2_reg_4204(1 downto 0) <= "00";
    xa1_reg_4361(1 downto 0) <= "00";
    sub_ln516_reg_4366(3 downto 0) <= "0000";
    add_ln520_reg_4381(1 downto 0) <= "00";
    sub_ln521_reg_4486(1 downto 0) <= "00";
    sub_ln517_reg_4501(3 downto 0) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage9_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to3, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_reset_idle_pp0, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_idle_pp0_1to3 = ap_const_logic_1) and (ap_start = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_reset_idle_pp0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;

    accumc_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage1, ap_block_pp0_stage6, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            accumc_address0 <= ap_const_lv4_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            accumc_address0 <= ap_const_lv4_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            accumc_address0 <= ap_const_lv4_2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            accumc_address0 <= ap_const_lv4_4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            accumc_address0 <= ap_const_lv4_7;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            accumc_address0 <= ap_const_lv4_8;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            accumc_address0 <= ap_const_lv4_9;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            accumc_address0 <= ap_const_lv4_6;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            accumc_address0 <= ap_const_lv4_A;
        else 
            accumc_address0 <= "XXXX";
        end if; 
    end process;


    accumc_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage1, ap_block_pp0_stage6, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            accumc_address1 <= ap_const_lv4_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            accumc_address1 <= ap_const_lv4_6;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            accumc_address1 <= ap_const_lv4_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            accumc_address1 <= ap_const_lv4_9;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            accumc_address1 <= ap_const_lv4_2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            accumc_address1 <= ap_const_lv4_5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            accumc_address1 <= ap_const_lv4_7;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            accumc_address1 <= ap_const_lv4_4;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)))) then 
            accumc_address1 <= ap_const_lv4_3;
        else 
            accumc_address1 <= "XXXX";
        end if; 
    end process;


    accumc_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            accumc_ce0 <= ap_const_logic_1;
        else 
            accumc_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    accumc_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            accumc_ce1 <= ap_const_logic_1;
        else 
            accumc_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    accumc_d0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, accumc_load_3_reg_3311, accumc_load_6_reg_3477, accumc_load_7_reg_3637, accumc_load_9_reg_3643, accumc_load_1_reg_3977, accumc_load_reg_4139, sub_ln504_reg_4332, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            accumc_d0 <= sub_ln504_reg_4332;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            accumc_d0 <= accumc_load_reg_4139;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            accumc_d0 <= accumc_load_1_reg_3977;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            accumc_d0 <= accumc_load_3_reg_3311;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            accumc_d0 <= accumc_load_6_reg_3477;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            accumc_d0 <= accumc_load_9_reg_3643;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            accumc_d0 <= accumc_load_7_reg_3637;
        else 
            accumc_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accumc_d1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, accumc_load_4_reg_3465, accumc_load_5_reg_3768, accumc_load_8_reg_3848, accumc_load_2_reg_3899, ap_block_pp0_stage3, ap_block_pp0_stage6, ap_block_pp0_stage8, ap_block_pp0_stage9)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                accumc_d1 <= accumc_load_2_reg_3899;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                accumc_d1 <= accumc_load_5_reg_3768;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                accumc_d1 <= accumc_load_8_reg_3848;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                accumc_d1 <= accumc_load_4_reg_3465;
            else 
                accumc_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            accumc_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

        accumc_load_10_cast_fu_2264_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(accumc_load_10_reg_3329_pp0_iter1_reg),33));


    accumc_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            accumc_we0 <= ap_const_logic_1;
        else 
            accumc_we0 <= ap_const_logic_0;
        end if; 
    end process;


    accumc_we1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            accumc_we1 <= ap_const_logic_1;
        else 
            accumc_we1 <= ap_const_logic_0;
        end if; 
    end process;


    accumd_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage1, ap_block_pp0_stage6, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            accumd_address0 <= ap_const_lv4_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            accumd_address0 <= ap_const_lv4_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            accumd_address0 <= ap_const_lv4_2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            accumd_address0 <= ap_const_lv4_3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            accumd_address0 <= ap_const_lv4_7;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            accumd_address0 <= ap_const_lv4_5;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            accumd_address0 <= ap_const_lv4_6;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            accumd_address0 <= ap_const_lv4_9;
        else 
            accumd_address0 <= "XXXX";
        end if; 
    end process;


    accumd_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage1, ap_block_pp0_stage6, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            accumd_address1 <= ap_const_lv4_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            accumd_address1 <= ap_const_lv4_5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            accumd_address1 <= ap_const_lv4_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)))) then 
            accumd_address1 <= ap_const_lv4_8;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            accumd_address1 <= ap_const_lv4_A;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            accumd_address1 <= ap_const_lv4_2;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            accumd_address1 <= ap_const_lv4_4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            accumd_address1 <= ap_const_lv4_3;
        else 
            accumd_address1 <= "XXXX";
        end if; 
    end process;


    accumd_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            accumd_ce0 <= ap_const_logic_1;
        else 
            accumd_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    accumd_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            accumd_ce1 <= ap_const_logic_1;
        else 
            accumd_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    accumd_d0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, accumd_load_6_reg_3483, accumd_load_2_reg_3625, accumd_load_5_reg_3631, accumd_load_8_reg_3905, accumd_load_1_reg_3984, accumd_load_reg_4145, add_ln505_reg_4339, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            accumd_d0 <= add_ln505_reg_4339;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            accumd_d0 <= accumd_load_reg_4145;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            accumd_d0 <= accumd_load_1_reg_3984;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            accumd_d0 <= accumd_load_2_reg_3625;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            accumd_d0 <= accumd_load_8_reg_3905;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            accumd_d0 <= accumd_load_5_reg_3631;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            accumd_d0 <= accumd_load_6_reg_3483;
        else 
            accumd_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accumd_d1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, accumd_load_3_reg_3317, accumd_load_9_reg_3323, accumd_load_4_reg_3471, accumd_load_7_reg_3842, ap_block_pp0_stage3, ap_block_pp0_stage6, ap_block_pp0_stage8, ap_block_pp0_stage9)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                accumd_d1 <= accumd_load_4_reg_3471;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                accumd_d1 <= accumd_load_7_reg_3842;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                accumd_d1 <= accumd_load_3_reg_3317;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                accumd_d1 <= accumd_load_9_reg_3323;
            else 
                accumd_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            accumd_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accumd_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            accumd_we0 <= ap_const_logic_1;
        else 
            accumd_we0 <= ap_const_logic_0;
        end if; 
    end process;


    accumd_we1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            accumd_we1 <= ap_const_logic_1;
        else 
            accumd_we1 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln422_fu_2504_p2 <= std_logic_vector(unsigned(trunc_ln11_reg_4214) + unsigned(trunc_ln_reg_4010));
    add_ln430_fu_2585_p2 <= std_logic_vector(signed(sext_ln428_2_fu_2582_p1) + signed(add_ln422_reg_4235));
    add_ln440_fu_2071_p2 <= std_logic_vector(signed(sext_ln425_1_reg_3684) + signed(trunc_ln_reg_4010));
    add_ln452_fu_2621_p2 <= std_logic_vector(unsigned(trunc_ln425_reg_4240) + unsigned(sext_ln428_1_fu_2579_p1));
    add_ln481_fu_2078_p2 <= std_logic_vector(signed(sext_ln472_1_fu_2075_p1) + signed(trunc_ln591_2_reg_4016));
    add_ln493_fu_2682_p2 <= std_logic_vector(signed(add_ln481_reg_4043) + signed(trunc_ln605_2_reg_4255));
    add_ln505_fu_2759_p2 <= std_logic_vector(unsigned(add_ln493_reg_4293) + unsigned(add_ln430_reg_4265));
    add_ln520_1_fu_2969_p2 <= std_logic_vector(signed(sext_ln517_4_fu_2963_p1) + signed(reg_697));
    add_ln520_2_fu_3068_p2 <= std_logic_vector(unsigned(add_ln520_1_reg_4481) + unsigned(sext_ln517_2_fu_3016_p1));
    add_ln520_3_fu_3113_p2 <= std_logic_vector(unsigned(add_ln520_2_reg_4506) + unsigned(sext_ln520_2_fu_3110_p1));
    add_ln520_4_fu_3073_p2 <= std_logic_vector(unsigned(mul_ln516_3_reg_4466) + unsigned(sext_ln517_8_fu_3023_p1));
    add_ln520_5_fu_3121_p2 <= std_logic_vector(signed(sext_ln520_4_fu_3118_p1) + signed(reg_701));
    add_ln520_6_fu_3078_p2 <= std_logic_vector(unsigned(reg_709) + unsigned(sext_ln520_1_fu_3065_p1));
    add_ln520_7_fu_3130_p2 <= std_logic_vector(signed(sext_ln520_5_fu_3127_p1) + signed(reg_705));
    add_ln520_8_fu_3162_p2 <= std_logic_vector(signed(sext_ln520_6_fu_3159_p1) + signed(add_ln520_5_reg_4541));
    add_ln520_fu_2902_p2 <= std_logic_vector(unsigned(sub_ln516_reg_4366) + unsigned(sext_ln406_fu_2899_p1));
    add_ln521_1_fu_3003_p2 <= std_logic_vector(signed(sext_ln516_7_fu_2966_p1) + signed(reg_701));
    add_ln521_2_fu_3087_p2 <= std_logic_vector(unsigned(add_ln521_1_reg_4496) + unsigned(sext_ln516_5_fu_3020_p1));
    add_ln521_3_fu_3170_p2 <= std_logic_vector(unsigned(add_ln521_2_reg_4521) + unsigned(sext_ln521_3_fu_3167_p1));
    add_ln521_4_fu_3092_p2 <= std_logic_vector(unsigned(reg_705) + unsigned(sext_ln516_13_fu_3033_p1));
    add_ln521_5_fu_3144_p2 <= std_logic_vector(signed(sext_ln521_4_fu_3141_p1) + signed(reg_697));
    add_ln521_6_fu_3098_p2 <= std_logic_vector(unsigned(mul_ln521_reg_4491) + unsigned(sub_ln521_cast_fu_3084_p1));
    add_ln521_7_fu_3153_p2 <= std_logic_vector(signed(sext_ln521_5_fu_3150_p1) + signed(sext_ln516_14_fu_3107_p1));
    add_ln521_8_fu_3178_p2 <= std_logic_vector(signed(sext_ln521_6_fu_3175_p1) + signed(add_ln521_5_reg_4556));
    add_ln521_fu_3136_p2 <= std_logic_vector(unsigned(mul_ln516_2_reg_4371) + unsigned(sext_ln516_1_fu_3103_p1));
    add_ln589_10_fu_1997_p2 <= std_logic_vector(unsigned(add_ln589_reg_3912) + unsigned(reg_673));
    add_ln589_12_fu_2002_p2 <= std_logic_vector(unsigned(add_ln589_11_reg_3952) + unsigned(reg_677));
    add_ln589_15_fu_2007_p2 <= std_logic_vector(unsigned(add_ln589_14_reg_3932) + unsigned(reg_681));
    add_ln589_17_fu_2012_p2 <= std_logic_vector(unsigned(add_ln589_16_reg_3962) + unsigned(reg_685));
    add_ln640_fu_947_p2 <= std_logic_vector(signed(sext_ln640_2_fu_944_p1) + signed(sext_ln640_fu_941_p1));
    add_ln684_12_fu_1872_p2 <= std_logic_vector(unsigned(select_ln666_12_fu_1864_p3) + unsigned(wd3_14_reg_3795));
    add_ln684_13_fu_1801_p2 <= std_logic_vector(unsigned(select_ln666_13_fu_1793_p3) + unsigned(wd3_15_reg_3395));
    add_ln684_14_fu_1944_p2 <= std_logic_vector(unsigned(select_ln666_14_fu_1936_p3) + unsigned(wd3_16_reg_3704));
    add_ln684_15_fu_1896_p2 <= std_logic_vector(unsigned(select_ln666_15_fu_1888_p3) + unsigned(wd3_17_reg_3546));
    add_ln684_16_fu_1830_p2 <= std_logic_vector(unsigned(select_ln666_16_fu_1822_p3) + unsigned(wd3_18_reg_3552));
    add_ln684_17_fu_1674_p2 <= std_logic_vector(unsigned(select_ln666_17_fu_1666_p3) + unsigned(wd3_27_reg_3459));
    add_ln684_18_fu_1968_p2 <= std_logic_vector(unsigned(select_ln666_18_fu_1960_p3) + unsigned(wd3_22_reg_3735));
    add_ln684_19_fu_1698_p2 <= std_logic_vector(unsigned(select_ln666_19_fu_1690_p3) + unsigned(wd3_23_reg_3609));
    add_ln684_20_fu_1992_p2 <= std_logic_vector(unsigned(select_ln666_20_fu_1984_p3) + unsigned(wd3_24_reg_3821));
    add_ln684_21_fu_1920_p2 <= std_logic_vector(unsigned(select_ln666_21_fu_1912_p3) + unsigned(wd3_25_reg_3741));
    add_ln684_22_fu_1727_p2 <= std_logic_vector(unsigned(select_ln666_22_fu_1719_p3) + unsigned(wd3_26_reg_3747));
    add_ln684_fu_1777_p2 <= std_logic_vector(unsigned(select_ln666_fu_1769_p3) + unsigned(wd3_19_reg_3389));
    add_ln716_5_fu_2433_p2 <= std_logic_vector(signed(sext_ln716_6_fu_2421_p1) + signed(select_ln716_2_fu_2425_p3));
    add_ln716_fu_2319_p2 <= std_logic_vector(signed(sext_ln716_4_fu_2307_p1) + signed(select_ln716_fu_2311_p3));
    add_ln760_fu_883_p2 <= std_logic_vector(signed(sext_ln758_fu_862_p1) + signed(sext_ln760_fu_879_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_2790_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, icmp_ln668_2_reg_3605)
    begin
                ap_condition_2790 <= ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln668_2_reg_3605 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6));
    end process;


    ap_condition_2794_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, icmp_ln668_2_reg_3605)
    begin
                ap_condition_2794 <= ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln668_2_reg_3605 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5));
    end process;


    ap_condition_2798_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, icmp_ln668_reg_3700)
    begin
                ap_condition_2798 <= ((icmp_ln668_reg_3700 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7));
    end process;


    ap_condition_2802_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, icmp_ln668_reg_3700)
    begin
                ap_condition_2802 <= ((icmp_ln668_reg_3700 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5));
    end process;


    ap_condition_2808_assign_proc : process(ap_CS_fsm_pp0_stage6, icmp_ln668_2_reg_3605, ap_block_pp0_stage6)
    begin
                ap_condition_2808 <= ((ap_const_boolean_0 = ap_block_pp0_stage6) and (icmp_ln668_2_reg_3605 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6));
    end process;


    ap_condition_2812_assign_proc : process(ap_CS_fsm_pp0_stage6, icmp_ln668_2_reg_3605, ap_block_pp0_stage6)
    begin
                ap_condition_2812 <= ((ap_const_boolean_0 = ap_block_pp0_stage6) and (icmp_ln668_2_reg_3605 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6));
    end process;


    ap_condition_2817_assign_proc : process(ap_CS_fsm_pp0_stage7, icmp_ln668_reg_3700, ap_block_pp0_stage7)
    begin
                ap_condition_2817 <= ((icmp_ln668_reg_3700 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7));
    end process;


    ap_condition_2821_assign_proc : process(ap_CS_fsm_pp0_stage7, icmp_ln668_reg_3700, ap_block_pp0_stage7)
    begin
                ap_condition_2821 <= ((icmp_ln668_reg_3700 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to3_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to3 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage9_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to2)
    begin
        if (((ap_idle_pp0_0to2 = ap_const_logic_1) and (ap_start = ap_const_logic_0))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    apl1_10_fu_2771_p3 <= 
        apl1_9_reg_4314 when (icmp_ln747_fu_2766_p2(0) = '1') else 
        trunc_ln733_reg_4309;
    apl1_11_fu_2744_p2 <= std_logic_vector(unsigned(select_ln735_2_fu_2737_p3) + unsigned(sext_ln735_2_fu_2733_p1));
    apl1_12_fu_2794_p3 <= 
        zext_ln733_5_fu_2783_p1 when (icmp_ln745_2_fu_2789_p2(0) = '1') else 
        apl1_11_reg_4320;
    apl1_13_fu_2805_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(zext_ln733_6_fu_2786_p1));
    apl1_14_fu_2887_p3 <= 
        apl1_13_reg_4355 when (icmp_ln747_2_fu_2882_p2(0) = '1') else 
        trunc_ln733_2_reg_4350;
    apl1_8_fu_2707_p3 <= 
        zext_ln733_fu_2696_p1 when (icmp_ln745_fu_2702_p2(0) = '1') else 
        apl1_reg_4271;
    apl1_9_fu_2718_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(zext_ln733_4_fu_2699_p1));
    apl1_fu_2610_p2 <= std_logic_vector(unsigned(select_ln735_fu_2603_p3) + unsigned(sext_ln735_fu_2599_p1));
    apl2_10_fu_2651_p3 <= 
        ap_const_lv15_5000 when (icmp_ln721_2_fu_2645_p2(0) = '1') else 
        trunc_ln703_2_fu_2641_p1;
    apl2_6_fu_2512_p3 <= 
        ap_const_lv17_3000 when (icmp_ln719_reg_4219(0) = '1') else 
        apl2_reg_4193;
    apl2_7_fu_2528_p3 <= 
        ap_const_lv15_5000 when (icmp_ln721_fu_2522_p2(0) = '1') else 
        trunc_ln703_fu_2518_p1;
    apl2_8_fu_2492_p2 <= std_logic_vector(unsigned(add_ln716_5_reg_4209) + unsigned(sext_ln708_5_fu_2488_p1));
    apl2_9_fu_2635_p3 <= 
        ap_const_lv17_3000 when (icmp_ln719_2_reg_4260(0) = '1') else 
        apl2_8_reg_4224;
    apl2_fu_2382_p2 <= std_logic_vector(unsigned(add_ln716_reg_4172) + unsigned(sext_ln708_4_fu_2378_p1));

    dec_ah1_o_assign_proc : process(ap_enable_reg_pp0_iter2, dec_ah1_i, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, apl1_14_fu_2887_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            dec_ah1_o <= apl1_14_fu_2887_p3;
        else 
            dec_ah1_o <= dec_ah1_i;
        end if; 
    end process;


    dec_ah1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            dec_ah1_o_ap_vld <= ap_const_logic_1;
        else 
            dec_ah1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_ah2_o_assign_proc : process(ap_enable_reg_pp0_iter2, dec_ah2_i, ap_CS_fsm_pp0_stage1, apl2_10_fu_2651_p3, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            dec_ah2_o <= apl2_10_fu_2651_p3;
        else 
            dec_ah2_o <= dec_ah2_i;
        end if; 
    end process;


    dec_ah2_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            dec_ah2_o_ap_vld <= ap_const_logic_1;
        else 
            dec_ah2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_al1_o_assign_proc : process(ap_enable_reg_pp0_iter2, dec_al1_i, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, apl1_10_fu_2771_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            dec_al1_o <= apl1_10_fu_2771_p3;
        else 
            dec_al1_o <= dec_al1_i;
        end if; 
    end process;


    dec_al1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            dec_al1_o_ap_vld <= ap_const_logic_1;
        else 
            dec_al1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_al2_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, dec_al2_i, apl2_7_fu_2528_p3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dec_al2_o <= apl2_7_fu_2528_p3;
        else 
            dec_al2_o <= dec_al2_i;
        end if; 
    end process;


    dec_al2_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dec_al2_o_ap_vld <= ap_const_logic_1;
        else 
            dec_al2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bph_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, icmp_ln668_2_reg_3605, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage1, ap_block_pp0_stage6, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage8, ap_block_pp0_stage9)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            dec_del_bph_address0 <= ap_const_lv3_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)))) then 
            dec_del_bph_address0 <= ap_const_lv3_4;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (icmp_ln668_2_reg_3605 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            dec_del_bph_address0 <= ap_const_lv3_3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            dec_del_bph_address0 <= ap_const_lv3_5;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage6) and (icmp_ln668_2_reg_3605 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            dec_del_bph_address0 <= ap_const_lv3_2;
        else 
            dec_del_bph_address0 <= "XXX";
        end if; 
    end process;


    dec_del_bph_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage1, ap_block_pp0_stage6, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage9)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            dec_del_bph_address1 <= ap_const_lv3_3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            dec_del_bph_address1 <= ap_const_lv3_5;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            dec_del_bph_address1 <= ap_const_lv3_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            dec_del_bph_address1 <= ap_const_lv3_4;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            dec_del_bph_address1 <= ap_const_lv3_0;
        else 
            dec_del_bph_address1 <= "XXX";
        end if; 
    end process;


    dec_del_bph_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage0_11001, icmp_ln668_2_reg_3605)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln668_2_reg_3605 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln668_2_reg_3605 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) 
    and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            dec_del_bph_ce0 <= ap_const_logic_1;
        else 
            dec_del_bph_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bph_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            dec_del_bph_ce1 <= ap_const_logic_1;
        else 
            dec_del_bph_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bph_d0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage8, wd3_23_reg_3609, wd3_25_reg_3741, wd3_24_reg_3821, add_ln684_19_reg_3832, add_ln684_21_reg_3947, add_ln684_18_reg_3967, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_condition_2808, ap_condition_2812)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                dec_del_bph_d0 <= add_ln684_18_reg_3967;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                dec_del_bph_d0 <= add_ln684_21_reg_3947;
            elsif ((ap_const_boolean_1 = ap_condition_2812)) then 
                dec_del_bph_d0 <= wd3_24_reg_3821;
            elsif ((ap_const_boolean_1 = ap_condition_2808)) then 
                dec_del_bph_d0 <= add_ln684_19_reg_3832;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                dec_del_bph_d0 <= wd3_25_reg_3741;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                dec_del_bph_d0 <= wd3_23_reg_3609;
            else 
                dec_del_bph_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            dec_del_bph_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_del_bph_d1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, wd3_27_reg_3459, wd3_22_reg_3735, add_ln684_17_reg_3827, add_ln684_20_reg_3972, ap_phi_reg_pp0_iter0_storemerge28_reg_524, ap_block_pp0_stage4, ap_block_pp0_stage6, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage9)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                dec_del_bph_d1 <= add_ln684_20_reg_3972;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                dec_del_bph_d1 <= ap_phi_reg_pp0_iter0_storemerge28_reg_524;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                dec_del_bph_d1 <= add_ln684_17_reg_3827;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                dec_del_bph_d1 <= wd3_22_reg_3735;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                dec_del_bph_d1 <= wd3_27_reg_3459;
            else 
                dec_del_bph_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            dec_del_bph_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_del_bph_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, icmp_ln668_2_reg_3605)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (icmp_ln668_2_reg_3605 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (icmp_ln668_2_reg_3605 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln668_2_reg_3605 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln668_2_reg_3605 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln668_2_reg_3605 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and 
    (icmp_ln668_2_reg_3605 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            dec_del_bph_we0 <= ap_const_logic_1;
        else 
            dec_del_bph_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bph_we1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_block_pp0_stage9_11001, icmp_ln668_2_reg_3605)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (icmp_ln668_2_reg_3605 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln668_2_reg_3605 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln668_2_reg_3605 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln668_2_reg_3605 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            dec_del_bph_we1 <= ap_const_logic_1;
        else 
            dec_del_bph_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bpl_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, icmp_ln668_reg_3700, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage6, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            dec_del_bpl_address0 <= ap_const_lv3_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)))) then 
            dec_del_bpl_address0 <= ap_const_lv3_4;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln668_reg_3700 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            dec_del_bpl_address0 <= ap_const_lv3_3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            dec_del_bpl_address0 <= ap_const_lv3_5;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln668_reg_3700 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            dec_del_bpl_address0 <= ap_const_lv3_2;
        else 
            dec_del_bpl_address0 <= "XXX";
        end if; 
    end process;


    dec_del_bpl_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage6, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            dec_del_bpl_address1 <= ap_const_lv3_3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            dec_del_bpl_address1 <= ap_const_lv3_5;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            dec_del_bpl_address1 <= ap_const_lv3_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            dec_del_bpl_address1 <= ap_const_lv3_4;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            dec_del_bpl_address1 <= ap_const_lv3_0;
        else 
            dec_del_bpl_address1 <= "XXX";
        end if; 
    end process;


    dec_del_bpl_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage0_11001, icmp_ln668_reg_3700)
    begin
        if ((((icmp_ln668_reg_3700 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln668_reg_3700 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) 
    and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            dec_del_bpl_ce0 <= ap_const_logic_1;
        else 
            dec_del_bpl_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bpl_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            dec_del_bpl_ce1 <= ap_const_logic_1;
        else 
            dec_del_bpl_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bpl_d0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, wd3_15_reg_3395, wd3_17_reg_3546, wd3_16_reg_3704, add_ln684_13_reg_3869, add_ln684_12_reg_3917, add_ln684_15_reg_3927, ap_block_pp0_stage6, ap_block_pp0_stage5, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_condition_2817, ap_condition_2821)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                dec_del_bpl_d0 <= add_ln684_12_reg_3917;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                dec_del_bpl_d0 <= add_ln684_15_reg_3927;
            elsif ((ap_const_boolean_1 = ap_condition_2821)) then 
                dec_del_bpl_d0 <= wd3_16_reg_3704;
            elsif ((ap_const_boolean_1 = ap_condition_2817)) then 
                dec_del_bpl_d0 <= add_ln684_13_reg_3869;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                dec_del_bpl_d0 <= wd3_17_reg_3546;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                dec_del_bpl_d0 <= wd3_15_reg_3395;
            else 
                dec_del_bpl_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            dec_del_bpl_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_del_bpl_d1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, wd3_19_reg_3389, wd3_14_reg_3795, add_ln684_reg_3859, add_ln684_14_reg_3957, ap_phi_reg_pp0_iter0_storemerge_reg_534, ap_block_pp0_stage6, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                dec_del_bpl_d1 <= add_ln684_14_reg_3957;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                dec_del_bpl_d1 <= ap_phi_reg_pp0_iter0_storemerge_reg_534;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                dec_del_bpl_d1 <= add_ln684_reg_3859;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                dec_del_bpl_d1 <= wd3_14_reg_3795;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                dec_del_bpl_d1 <= wd3_19_reg_3389;
            else 
                dec_del_bpl_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            dec_del_bpl_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_del_bpl_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, icmp_ln668_reg_3700)
    begin
        if ((((icmp_ln668_reg_3700 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln668_reg_3700 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln668_reg_3700 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln668_reg_3700 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((icmp_ln668_reg_3700 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((icmp_ln668_reg_3700 = ap_const_lv1_0) and (ap_const_boolean_0 
    = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            dec_del_bpl_we0 <= ap_const_logic_1;
        else 
            dec_del_bpl_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bpl_we1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, icmp_ln668_reg_3700)
    begin
        if ((((icmp_ln668_reg_3700 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln668_reg_3700 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln668_reg_3700 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((icmp_ln668_reg_3700 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)))) then 
            dec_del_bpl_we1 <= ap_const_logic_1;
        else 
            dec_del_bpl_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            dec_del_dhx_address0 <= ap_const_lv3_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            dec_del_dhx_address0 <= ap_const_lv3_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            dec_del_dhx_address0 <= ap_const_lv3_5;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            dec_del_dhx_address0 <= ap_const_lv3_2;
        else 
            dec_del_dhx_address0 <= "XXX";
        end if; 
    end process;


    dec_del_dhx_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            dec_del_dhx_address1 <= ap_const_lv3_5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            dec_del_dhx_address1 <= ap_const_lv3_3;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            dec_del_dhx_address1 <= ap_const_lv3_4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dec_del_dhx_address1 <= ap_const_lv3_0;
        else 
            dec_del_dhx_address1 <= "XXX";
        end if; 
    end process;


    dec_del_dhx_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            dec_del_dhx_ce0 <= ap_const_logic_1;
        else 
            dec_del_dhx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            dec_del_dhx_ce1 <= ap_const_logic_1;
        else 
            dec_del_dhx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_d0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, reg_652, ap_CS_fsm_pp0_stage4, trunc_ln472_1_reg_3441, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            dec_del_dhx_d0 <= trunc_ln472_1_reg_3441;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            dec_del_dhx_d0 <= reg_652;
        else 
            dec_del_dhx_d0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_del_dhx_d1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, reg_663, ap_CS_fsm_pp0_stage4, dec_del_dhx_load_4_reg_3421, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            dec_del_dhx_d1 <= dec_del_dhx_load_4_reg_3421;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            dec_del_dhx_d1 <= reg_663;
        else 
            dec_del_dhx_d1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_del_dhx_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            dec_del_dhx_we0 <= ap_const_logic_1;
        else 
            dec_del_dhx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_we1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            dec_del_dhx_we1 <= ap_const_logic_1;
        else 
            dec_del_dhx_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            dec_del_dltx_address0 <= ap_const_lv3_4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            dec_del_dltx_address0 <= ap_const_lv3_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            dec_del_dltx_address0 <= ap_const_lv3_5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dec_del_dltx_address0 <= ap_const_lv3_2;
        else 
            dec_del_dltx_address0 <= "XXX";
        end if; 
    end process;


    dec_del_dltx_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            dec_del_dltx_address1 <= ap_const_lv3_2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            dec_del_dltx_address1 <= ap_const_lv3_3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            dec_del_dltx_address1 <= ap_const_lv3_4;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            dec_del_dltx_address1 <= ap_const_lv3_0;
        else 
            dec_del_dltx_address1 <= "XXX";
        end if; 
    end process;


    dec_del_dltx_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            dec_del_dltx_ce0 <= ap_const_logic_1;
        else 
            dec_del_dltx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            dec_del_dltx_ce1 <= ap_const_logic_1;
        else 
            dec_del_dltx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_d0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, dec_del_dltx_load_reg_3261, dec_del_dltx_load_4_reg_3354, dec_del_dltx_load_3_reg_3496, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                dec_del_dltx_d0 <= dec_del_dltx_load_3_reg_3496;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                dec_del_dltx_d0 <= dec_del_dltx_load_4_reg_3354;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                dec_del_dltx_d0 <= dec_del_dltx_load_reg_3261;
            else 
                dec_del_dltx_d0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            dec_del_dltx_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_del_dltx_d1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, dec_del_dltx_load_2_reg_3268, dec_del_dltx_load_1_reg_3489, trunc_ln425_2_reg_3523, ap_block_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage5)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                dec_del_dltx_d1 <= trunc_ln425_2_reg_3523;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                dec_del_dltx_d1 <= dec_del_dltx_load_1_reg_3489;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                dec_del_dltx_d1 <= dec_del_dltx_load_2_reg_3268;
            else 
                dec_del_dltx_d1 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            dec_del_dltx_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_del_dltx_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            dec_del_dltx_we0 <= ap_const_logic_1;
        else 
            dec_del_dltx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_we1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            dec_del_dltx_we1 <= ap_const_logic_1;
        else 
            dec_del_dltx_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_deth_o_assign_proc : process(ap_enable_reg_pp0_iter0, dec_deth_i, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, shl_ln657_2_fu_1618_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            dec_deth_o <= shl_ln657_2_fu_1618_p3;
        else 
            dec_deth_o <= dec_deth_i;
        end if; 
    end process;


    dec_deth_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            dec_deth_o_ap_vld <= ap_const_logic_1;
        else 
            dec_deth_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_detl_o_assign_proc : process(ap_enable_reg_pp0_iter0, dec_detl_i, ap_CS_fsm_pp0_stage6, shl_ln11_fu_1744_p3, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            dec_detl_o <= shl_ln11_fu_1744_p3;
        else 
            dec_detl_o <= dec_detl_i;
        end if; 
    end process;


    dec_detl_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            dec_detl_o_ap_vld <= ap_const_logic_1;
        else 
            dec_detl_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_nbh_o_assign_proc : process(ap_enable_reg_pp0_iter0, dec_nbh_i, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, select_ln763_fu_1063_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            dec_nbh_o <= select_ln763_fu_1063_p3;
        else 
            dec_nbh_o <= dec_nbh_i;
        end if; 
    end process;


    dec_nbh_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            dec_nbh_o_ap_vld <= ap_const_logic_1;
        else 
            dec_nbh_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_nbl_o_assign_proc : process(ap_enable_reg_pp0_iter0, dec_nbl_i, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, select_ln643_fu_1195_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            dec_nbl_o <= select_ln643_fu_1195_p3;
        else 
            dec_nbl_o <= dec_nbl_i;
        end if; 
    end process;


    dec_nbl_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            dec_nbl_o_ap_vld <= ap_const_logic_1;
        else 
            dec_nbl_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_ph1_o_assign_proc : process(ap_enable_reg_pp0_iter1, dec_ph1_i, ap_CS_fsm_pp0_stage3, add_ln481_reg_4043, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            dec_ph1_o <= add_ln481_reg_4043;
        else 
            dec_ph1_o <= dec_ph1_i;
        end if; 
    end process;


    dec_ph1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            dec_ph1_o_ap_vld <= ap_const_logic_1;
        else 
            dec_ph1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_ph2_o_assign_proc : process(ap_enable_reg_pp0_iter1, dec_ph1_i, dec_ph2_i, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            dec_ph2_o <= dec_ph1_i;
        else 
            dec_ph2_o <= dec_ph2_i;
        end if; 
    end process;


    dec_ph2_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            dec_ph2_o_ap_vld <= ap_const_logic_1;
        else 
            dec_ph2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_plt1_o_assign_proc : process(ap_enable_reg_pp0_iter1, dec_plt1_i, ap_CS_fsm_pp0_stage2, add_ln440_reg_4037, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            dec_plt1_o <= add_ln440_reg_4037;
        else 
            dec_plt1_o <= dec_plt1_i;
        end if; 
    end process;


    dec_plt1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            dec_plt1_o_ap_vld <= ap_const_logic_1;
        else 
            dec_plt1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_plt2_o_assign_proc : process(ap_enable_reg_pp0_iter1, dec_plt1_i, dec_plt2_i, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            dec_plt2_o <= dec_plt1_i;
        else 
            dec_plt2_o <= dec_plt2_i;
        end if; 
    end process;


    dec_plt2_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            dec_plt2_o_ap_vld <= ap_const_logic_1;
        else 
            dec_plt2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_rh1_o_assign_proc : process(ap_enable_reg_pp0_iter2, dec_rh1_i, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, trunc_ln496_fu_2686_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            dec_rh1_o <= trunc_ln496_fu_2686_p1;
        else 
            dec_rh1_o <= dec_rh1_i;
        end if; 
    end process;


    dec_rh1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            dec_rh1_o_ap_vld <= ap_const_logic_1;
        else 
            dec_rh1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_rh2_o_assign_proc : process(ap_enable_reg_pp0_iter1, dec_rh1_i, dec_rh2_i, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            dec_rh2_o <= dec_rh1_i;
        else 
            dec_rh2_o <= dec_rh2_i;
        end if; 
    end process;


    dec_rh2_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            dec_rh2_o_ap_vld <= ap_const_logic_1;
        else 
            dec_rh2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_rlt1_o_assign_proc : process(ap_enable_reg_pp0_iter2, dec_rlt1_i, ap_CS_fsm_pp0_stage1, add_ln452_fu_2621_p2, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            dec_rlt1_o <= add_ln452_fu_2621_p2;
        else 
            dec_rlt1_o <= dec_rlt1_i;
        end if; 
    end process;


    dec_rlt1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            dec_rlt1_o_ap_vld <= ap_const_logic_1;
        else 
            dec_rlt1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_rlt2_o_assign_proc : process(ap_enable_reg_pp0_iter1, dec_rlt1_i, dec_rlt2_i, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            dec_rlt2_o <= dec_rlt1_i;
        else 
            dec_rlt2_o <= dec_rlt2_i;
        end if; 
    end process;


    dec_rlt2_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            dec_rlt2_o_ap_vld <= ap_const_logic_1;
        else 
            dec_rlt2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1345_p0 <= sext_ln679_18_fu_1342_p1(14 - 1 downto 0);
    grp_fu_1351_p0 <= sext_ln679_18_fu_1342_p1(14 - 1 downto 0);
    grp_fu_1357_p0 <= sext_ln679_18_fu_1342_p1(14 - 1 downto 0);
    grp_fu_1430_p0 <= sext_ln425_1_fu_1394_p1(16 - 1 downto 0);
    grp_fu_1436_p0 <= sext_ln425_1_fu_1394_p1(16 - 1 downto 0);
    grp_fu_1442_p0 <= sext_ln425_1_fu_1394_p1(16 - 1 downto 0);
    grp_fu_1593_p0 <= sext_ln425_1_reg_3684(16 - 1 downto 0);
    grp_fu_1598_p0 <= sext_ln425_1_reg_3684(16 - 1 downto 0);
    grp_fu_1703_p0 <= sext_ln679_18_reg_3615(14 - 1 downto 0);
    grp_fu_1806_p0 <= sext_ln425_1_reg_3684(16 - 1 downto 0);
    grp_fu_1843_p0 <= sext_ln679_18_reg_3615(14 - 1 downto 0);
    grp_fu_1848_p0 <= sext_ln679_18_reg_3615(14 - 1 downto 0);

    grp_fu_544_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, sext_ln587_12_fu_1010_p1, sext_ln589_65_fu_1294_p1, sext_ln589_56_fu_1457_p1, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_544_p0 <= sext_ln589_56_fu_1457_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_544_p0 <= sext_ln589_65_fu_1294_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_544_p0 <= sext_ln587_12_fu_1010_p1(14 - 1 downto 0);
            else 
                grp_fu_544_p0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_544_p0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_544_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, sext_ln587_11_fu_1005_p1, sext_ln589_64_fu_1289_p1, sext_ln589_55_fu_1452_p1, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_544_p1 <= sext_ln589_55_fu_1452_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_544_p1 <= sext_ln589_64_fu_1289_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_544_p1 <= sext_ln587_11_fu_1005_p1(32 - 1 downto 0);
            else 
                grp_fu_544_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_544_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_548_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, sext_ln589_59_fu_1020_p1, sext_ln589_68_fu_1305_p1, sext_ln589_62_fu_1466_p1, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_548_p0 <= sext_ln589_62_fu_1466_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_548_p0 <= sext_ln589_68_fu_1305_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_548_p0 <= sext_ln589_59_fu_1020_p1(14 - 1 downto 0);
            else 
                grp_fu_548_p0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_548_p0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_548_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, sext_ln589_58_fu_1015_p1, sext_ln589_67_fu_1298_p1, sext_ln589_61_fu_1462_p1, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_548_p1 <= sext_ln589_61_fu_1462_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_548_p1 <= sext_ln589_67_fu_1298_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_548_p1 <= sext_ln589_58_fu_1015_p1(32 - 1 downto 0);
            else 
                grp_fu_548_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_548_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_552_p0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, sext_ln604_4_fu_2066_p1, sext_ln604_6_fu_2204_p1, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_552_p0 <= sext_ln604_6_fu_2204_p1(15 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_552_p0 <= sext_ln604_4_fu_2066_p1(15 - 1 downto 0);
            else 
                grp_fu_552_p0 <= "XXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_552_p0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_552_p1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, sext_ln600_7_fu_2061_p1, sext_ln600_10_fu_2199_p1, ap_block_pp0_stage4, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_552_p1 <= sext_ln600_10_fu_2199_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_552_p1 <= sext_ln600_7_fu_2061_p1(32 - 1 downto 0);
            else 
                grp_fu_552_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_552_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_556_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, sext_ln587_9_fu_898_p1, sext_ln589_50_fu_1130_p1, sext_ln589_41_fu_1371_p1, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_556_p0 <= sext_ln589_41_fu_1371_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_556_p0 <= sext_ln589_50_fu_1130_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_556_p0 <= sext_ln587_9_fu_898_p1(16 - 1 downto 0);
            else 
                grp_fu_556_p0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_556_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_556_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, sext_ln587_8_fu_893_p1, sext_ln589_49_fu_1125_p1, sext_ln589_40_fu_1366_p1, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_556_p1 <= sext_ln589_40_fu_1366_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_556_p1 <= sext_ln589_49_fu_1125_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_556_p1 <= sext_ln587_8_fu_893_p1(32 - 1 downto 0);
            else 
                grp_fu_556_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_556_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_560_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, sext_ln589_44_fu_911_p1, sext_ln589_53_fu_1143_p1, sext_ln589_47_fu_1387_p1, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_560_p0 <= sext_ln589_47_fu_1387_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_560_p0 <= sext_ln589_53_fu_1143_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_560_p0 <= sext_ln589_44_fu_911_p1(16 - 1 downto 0);
            else 
                grp_fu_560_p0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_560_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_560_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, sext_ln589_43_fu_906_p1, sext_ln589_52_fu_1138_p1, sext_ln589_46_fu_1382_p1, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_560_p1 <= sext_ln589_46_fu_1382_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_560_p1 <= sext_ln589_52_fu_1138_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_560_p1 <= sext_ln589_43_fu_906_p1(32 - 1 downto 0);
            else 
                grp_fu_560_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_560_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_564_p0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, sext_ln600_6_fu_2172_p1, sext_ln600_9_fu_2230_p1, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_564_p0 <= sext_ln600_9_fu_2230_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_564_p0 <= sext_ln600_6_fu_2172_p1(16 - 1 downto 0);
            else 
                grp_fu_564_p0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_564_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_564_p1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, sext_ln600_fu_2167_p1, sext_ln600_8_fu_2225_p1, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_564_p1 <= sext_ln600_8_fu_2225_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_564_p1 <= sext_ln600_fu_2167_p1(32 - 1 downto 0);
            else 
                grp_fu_564_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_564_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_568_p0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, sext_ln705_4_fu_2096_p1, sext_ln705_6_fu_2130_p1, ap_block_pp0_stage3, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_568_p0 <= sext_ln705_6_fu_2130_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_568_p0 <= sext_ln705_4_fu_2096_p1(32 - 1 downto 0);
            else 
                grp_fu_568_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_568_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_568_p1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, sext_ln705_fu_2091_p1, sext_ln705_5_fu_2125_p1, ap_block_pp0_stage3, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_568_p1 <= sext_ln705_5_fu_2125_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_568_p1 <= sext_ln705_fu_2091_p1(32 - 1 downto 0);
            else 
                grp_fu_568_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_568_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_572_p0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, sext_ln708_fu_2101_p1, sext_ln708_2_fu_2135_p1, ap_block_pp0_stage3, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_572_p0 <= sext_ln708_2_fu_2135_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_572_p0 <= sext_ln708_fu_2101_p1(32 - 1 downto 0);
            else 
                grp_fu_572_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_572_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_572_p1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, sext_ln705_fu_2091_p1, sext_ln705_5_fu_2125_p1, ap_block_pp0_stage3, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_572_p1 <= sext_ln705_5_fu_2125_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_572_p1 <= sext_ln705_fu_2091_p1(32 - 1 downto 0);
            else 
                grp_fu_572_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_572_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_576_p0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, sext_ln516_15_fu_2943_p1, sext_ln517_1_fu_2951_p1, ap_block_pp0_stage6, ap_block_pp0_stage7)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                grp_fu_576_p0 <= sext_ln517_1_fu_2951_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_576_p0 <= sext_ln516_15_fu_2943_p1(32 - 1 downto 0);
            else 
                grp_fu_576_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_576_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_576_p1 <= ap_const_lv41_D4(9 - 1 downto 0);
    grp_fu_581_p1 <= ap_const_lv44_5A8(12 - 1 downto 0);
    grp_fu_586_p1 <= ap_const_lv44_5A8(12 - 1 downto 0);

    grp_fu_591_p0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, sext_ln516_8_fu_2915_p1, sext_ln517_7_fu_2955_p1, ap_block_pp0_stage5, ap_block_pp0_stage7)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                grp_fu_591_p0 <= sext_ln517_7_fu_2955_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_591_p0 <= sext_ln516_8_fu_2915_p1(32 - 1 downto 0);
            else 
                grp_fu_591_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_591_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_591_p1 <= ap_const_lv45_EDC(13 - 1 downto 0);

    grp_fu_596_p0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, sext_ln516_9_fu_2919_p1, sext_ln517_6_fu_2931_p1, ap_block_pp0_stage6, ap_block_pp0_stage5)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_596_p0 <= sext_ln517_6_fu_2931_p1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_596_p0 <= sext_ln516_9_fu_2919_p1(32 - 1 downto 0);
            else 
                grp_fu_596_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_596_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_596_p1 <= ap_const_lv46_3C90(15 - 1 downto 0);

    grp_fu_601_p0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, sext_ln516_4_fu_2497_p1, sext_ln516_11_fu_2935_p1, sext_ln517_9_fu_2959_p1, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage9)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_601_p0 <= sext_ln517_9_fu_2959_p1(32 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_601_p0 <= sext_ln516_11_fu_2935_p1(32 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_601_p0 <= sext_ln516_4_fu_2497_p1(32 - 1 downto 0);
        else 
            grp_fu_601_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_601_p1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage9)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_601_p1 <= ap_const_lv42_3FFFFFFFCB8(11 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            grp_fu_601_p1 <= ap_const_lv42_3FFFFFFFD90(11 - 1 downto 0);
        else 
            grp_fu_601_p1 <= "XXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_607_p1 <= ap_const_lv43_7FFFFFFFCB8(11 - 1 downto 0);
    grp_fu_612_p1 <= ap_const_lv45_1FFFFFFFF36C(13 - 1 downto 0);
    grp_fu_617_p1 <= ap_const_lv45_1FFFFFFFF36C(13 - 1 downto 0);
    grp_fu_622_p1 <= ap_const_lv39_7FFFFFFFD4(7 - 1 downto 0);
    grp_fu_627_p1 <= ap_const_lv40_FFFFFFFFD4(7 - 1 downto 0);
    grp_fu_713_p2 <= std_logic_vector(unsigned(reg_673) + unsigned(reg_677));
    grp_fu_719_p2 <= std_logic_vector(unsigned(reg_681) + unsigned(reg_685));
    grp_fu_847_p1 <= grp_fu_847_p10(15 - 1 downto 0);
    grp_fu_847_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dec_deth_i),29));
    grp_fu_926_p1 <= zext_ln425_1_fu_919_p1(15 - 1 downto 0);
    grp_fu_935_p1 <= zext_ln425_1_fu_919_p1(15 - 1 downto 0);
    icmp_ln643_fu_1189_p2 <= "1" when (unsigned(select_ln641_fu_1178_p3) > unsigned(ap_const_lv17_4800)) else "0";
    icmp_ln668_2_fu_1313_p2 <= "1" when (trunc_ln472_1_reg_3441 = ap_const_lv14_0) else "0";
    icmp_ln668_fu_1401_p2 <= "1" when (trunc_ln425_2_reg_3523 = ap_const_lv16_0) else "0";
    icmp_ln719_2_fu_2574_p2 <= "1" when (signed(apl2_8_reg_4224) > signed(ap_const_lv17_3000)) else "0";
    icmp_ln719_fu_2454_p2 <= "1" when (signed(apl2_reg_4193) > signed(ap_const_lv17_3000)) else "0";
    icmp_ln721_2_fu_2645_p2 <= "1" when (signed(apl2_9_fu_2635_p3) < signed(ap_const_lv17_1D000)) else "0";
    icmp_ln721_fu_2522_p2 <= "1" when (signed(apl2_6_fu_2512_p3) < signed(ap_const_lv17_1D000)) else "0";
    icmp_ln745_2_fu_2789_p2 <= "1" when (signed(apl1_11_reg_4320) > signed(zext_ln733_5_fu_2783_p1)) else "0";
    icmp_ln745_fu_2702_p2 <= "1" when (signed(apl1_reg_4271) > signed(zext_ln733_fu_2696_p1)) else "0";
    icmp_ln747_2_fu_2882_p2 <= "1" when (signed(apl1_12_reg_4345) < signed(sext_ln747_2_fu_2879_p1)) else "0";
    icmp_ln747_fu_2766_p2 <= "1" when (signed(apl1_8_reg_4304) < signed(sext_ln747_fu_2763_p1)) else "0";
    icmp_ln763_fu_1057_p2 <= "1" when (unsigned(select_ln761_fu_1046_p3) > unsigned(ap_const_lv17_5800)) else "0";

    ilb_table_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, zext_ln656_2_fu_1309_p1, ap_block_pp0_stage3, zext_ln656_fu_1397_p1, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                ilb_table_address0 <= zext_ln656_fu_1397_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ilb_table_address0 <= zext_ln656_2_fu_1309_p1(5 - 1 downto 0);
            else 
                ilb_table_address0 <= "XXXXX";
            end if;
        else 
            ilb_table_address0 <= "XXXXX";
        end if; 
    end process;


    ilb_table_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            ilb_table_ce0 <= ap_const_logic_1;
        else 
            ilb_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pl2_2_fu_2191_p3 <= (dec_rh2_i & ap_const_lv1_0);
    pl2_fu_2053_p3 <= (dec_rlt2_i & ap_const_lv1_0);
    pl_4_fu_2439_p2 <= std_logic_vector(unsigned(mul_ln604_reg_4116) + unsigned(reg_693));
    pl_5_fu_2217_p3 <= (dec_rh1_i & ap_const_lv1_0);
    pl_6_fu_2559_p2 <= std_logic_vector(unsigned(mul_ln604_2_reg_4199) + unsigned(reg_693));
    pl_fu_2159_p3 <= (dec_rlt1_i & ap_const_lv1_0);
    qq4_code4_table_address0 <= zext_ln425_fu_745_p1(4 - 1 downto 0);

    qq4_code4_table_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            qq4_code4_table_ce0 <= ap_const_logic_1;
        else 
            qq4_code4_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    qq6_code6_table_address0 <= zext_ln428_fu_755_p1(6 - 1 downto 0);

    qq6_code6_table_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            qq6_code6_table_ce0 <= ap_const_logic_1;
        else 
            qq6_code6_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln641_fu_1178_p3 <= 
        ap_const_lv17_0 when (tmp_27_fu_1170_p3(0) = '1') else 
        add_ln640_reg_3383;
    select_ln643_fu_1195_p3 <= 
        ap_const_lv15_4800 when (icmp_ln643_fu_1189_p2(0) = '1') else 
        trunc_ln636_fu_1185_p1;
    select_ln666_12_fu_1864_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_29_fu_1856_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_13_fu_1793_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_30_fu_1785_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_14_fu_1936_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_31_fu_1928_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_15_fu_1888_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_32_fu_1880_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_16_fu_1822_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_33_fu_1814_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_17_fu_1666_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_37_fu_1658_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_18_fu_1960_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_38_fu_1952_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_19_fu_1690_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_39_fu_1682_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_20_fu_1984_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_40_fu_1976_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_21_fu_1912_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_41_fu_1904_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_22_fu_1719_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_42_fu_1711_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln666_fu_1769_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_28_fu_1761_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln705_2_fu_2481_p3 <= 
        sext_ln707_2_fu_2468_p1 when (tmp_43_reg_4177(0) = '1') else 
        tmp_5_fu_2472_p4;
    select_ln705_fu_2371_p3 <= 
        sext_ln707_fu_2358_p1 when (tmp_34_reg_4151(0) = '1') else 
        tmp_1_fu_2362_p4;
    select_ln716_2_fu_2425_p3 <= 
        ap_const_lv17_1FF80 when (tmp_44_fu_2404_p3(0) = '1') else 
        ap_const_lv17_80;
    select_ln716_fu_2311_p3 <= 
        ap_const_lv17_1FF80 when (tmp_35_fu_2290_p3(0) = '1') else 
        ap_const_lv17_80;
    select_ln735_2_fu_2737_p3 <= 
        ap_const_lv18_3FF40 when (tmp_43_reg_4177(0) = '1') else 
        ap_const_lv18_C0;
    select_ln735_fu_2603_p3 <= 
        ap_const_lv18_3FF40 when (tmp_34_reg_4151(0) = '1') else 
        ap_const_lv18_C0;
    select_ln761_fu_1046_p3 <= 
        ap_const_lv17_0 when (tmp_36_fu_1038_p3(0) = '1') else 
        add_ln760_reg_3305;
    select_ln763_fu_1063_p3 <= 
        ap_const_lv15_5800 when (icmp_ln763_fu_1057_p2(0) = '1') else 
        trunc_ln756_fu_1053_p1;
        sext_ln406_fu_2899_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xa1_reg_4361),39));

        sext_ln425_1_fu_1394_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln425_2_reg_3523),32));

        sext_ln428_1_fu_2579_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln425_2_reg_3523_pp0_iter1_reg),31));

        sext_ln428_2_fu_2582_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln12_reg_3531_pp0_iter1_reg),32));

        sext_ln472_1_fu_2075_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln472_1_reg_3441),32));

        sext_ln511_1_fu_2829_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln511_1_fu_2822_p3),37));

        sext_ln511_fu_2818_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln16_fu_2811_p3),37));

        sext_ln516_11_fu_2935_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(accumd_load_6_reg_3483_pp0_iter2_reg),42));

        sext_ln516_13_fu_3033_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln18_fu_3026_p3),42));

        sext_ln516_14_fu_3107_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln517_reg_4501),40));

        sext_ln516_15_fu_2943_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(accumc_load_9_reg_3643_pp0_iter2_reg),41));

        sext_ln516_1_fu_3103_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_709),42));

        sext_ln516_2_fu_2849_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln17_fu_2842_p3),39));

        sext_ln516_3_fu_2860_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln516_1_fu_2853_p3),39));

        sext_ln516_4_fu_2497_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(accumd_load_1_reg_3984_pp0_iter1_reg),42));

        sext_ln516_5_fu_3020_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln517_1_reg_4471),46));

        sext_ln516_7_fu_2966_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln517_2_reg_4461),46));

        sext_ln516_8_fu_2915_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(accumc_load_4_reg_3465_pp0_iter2_reg),45));

        sext_ln516_9_fu_2919_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(accumd_load_4_reg_3471_pp0_iter2_reg),46));

        sext_ln516_fu_2839_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln505_reg_4339),33));

        sext_ln517_10_fu_3044_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln517_1_fu_3037_p3),39));

        sext_ln517_11_fu_3055_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln517_2_fu_3048_p3),39));

        sext_ln517_1_fu_2951_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(accumd_load_reg_4145_pp0_iter2_reg),41));

        sext_ln517_2_fu_3016_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln516_2_fu_3009_p3),45));

        sext_ln517_4_fu_2963_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln516_reg_4456),45));

        sext_ln517_6_fu_2931_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(accumc_load_5_reg_3768_pp0_iter2_reg),46));

        sext_ln517_7_fu_2955_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(accumd_load_5_reg_3631_pp0_iter2_reg),45));

        sext_ln517_8_fu_3023_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln516_4_reg_4476),45));

        sext_ln517_9_fu_2959_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(accumc_load_8_reg_3848_pp0_iter2_reg),42));

        sext_ln517_fu_2261_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(accumc_load_reg_4139),33));

        sext_ln520_1_fu_3065_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp34_reg_4299),41));

        sext_ln520_2_fu_3110_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln520_reg_4381),45));

        sext_ln520_3_fu_3183_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln520_3_reg_4536),46));

        sext_ln520_4_fu_3118_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln520_4_reg_4511),46));

        sext_ln520_5_fu_3127_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln520_6_reg_4516),42));

        sext_ln520_6_fu_3159_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln520_7_reg_4546),46));

        sext_ln520_fu_2870_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(accumd_load_9_reg_3323_pp0_iter2_reg),33));

        sext_ln521_1_fu_2993_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln521_1_fu_2986_p3),37));

        sext_ln521_3_fu_3167_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln521_reg_4551),46));

        sext_ln521_4_fu_3141_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln521_4_reg_4526),45));

        sext_ln521_5_fu_3150_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln521_6_reg_4531),40));

        sext_ln521_6_fu_3175_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln521_7_reg_4561),45));

        sext_ln521_7_fu_3191_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln521_8_reg_4576),46));

        sext_ln521_fu_2982_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln19_fu_2975_p3),37));

        sext_ln587_10_fu_1001_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_648),40));

        sext_ln587_11_fu_1005_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_648),46));

        sext_ln587_12_fu_1010_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_652),46));

        sext_ln587_8_fu_893_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_640),46));

        sext_ln587_9_fu_898_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_del_dltx_load_reg_3261),46));

        sext_ln587_fu_889_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_640),40));

        sext_ln589_40_fu_1366_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_640),46));

        sext_ln589_41_fu_1371_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_del_dltx_load_1_reg_3489),46));

        sext_ln589_42_fu_902_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_644),40));

        sext_ln589_43_fu_906_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_644),46));

        sext_ln589_44_fu_911_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_del_dltx_load_2_reg_3268),46));

        sext_ln589_45_fu_1378_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_644),40));

        sext_ln589_46_fu_1382_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_644),46));

        sext_ln589_47_fu_1387_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_del_dltx_load_3_reg_3496),46));

        sext_ln589_48_fu_1121_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_640),40));

        sext_ln589_49_fu_1125_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_640),46));

        sext_ln589_50_fu_1130_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_del_dltx_load_4_reg_3354),46));

        sext_ln589_51_fu_1134_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_644),40));

        sext_ln589_52_fu_1138_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_644),46));

        sext_ln589_53_fu_1143_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_del_dltx_load_5_reg_3361),46));

        sext_ln589_54_fu_1448_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_658),40));

        sext_ln589_55_fu_1452_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_658),46));

        sext_ln589_56_fu_1457_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_652),46));

        sext_ln589_57_fu_1281_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_658),40));

        sext_ln589_58_fu_1015_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_658),46));

        sext_ln589_59_fu_1020_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_663),46));

        sext_ln589_60_fu_1603_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_del_bph_load_3_reg_3568),40));

        sext_ln589_61_fu_1462_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_del_bph_load_3_reg_3568),46));

        sext_ln589_62_fu_1466_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_663),46));

        sext_ln589_63_fu_1471_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_648),40));

        sext_ln589_64_fu_1289_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_648),46));

        sext_ln589_65_fu_1294_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_del_dhx_load_4_reg_3421),46));

        sext_ln589_66_fu_1475_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_del_bph_load_5_reg_3428),40));

        sext_ln589_67_fu_1298_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_del_bph_load_5_reg_3428),46));

        sext_ln589_68_fu_1305_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_del_dhx_load_5_reg_3435),46));

        sext_ln589_fu_1554_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_640),40));

        sext_ln600_10_fu_2199_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pl2_2_fu_2191_p3),47));

    sext_ln600_6_fu_2172_p0 <= dec_al1_i;
        sext_ln600_6_fu_2172_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln600_6_fu_2172_p0),47));

        sext_ln600_7_fu_2061_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pl2_fu_2053_p3),47));

        sext_ln600_8_fu_2225_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pl_5_fu_2217_p3),47));

    sext_ln600_9_fu_2230_p0 <= dec_ah1_i;
        sext_ln600_9_fu_2230_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln600_9_fu_2230_p0),47));

        sext_ln600_fu_2167_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pl_fu_2159_p3),47));

        sext_ln602_2_fu_2632_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_ah1_load_reg_4121),25));

        sext_ln602_fu_2501_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_al1_load_reg_4082),25));

    sext_ln604_4_fu_2066_p0 <= dec_al2_i;
        sext_ln604_4_fu_2066_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln604_4_fu_2066_p0),47));

        sext_ln604_5_fu_2325_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_ah2_load_reg_4100),23));

    sext_ln604_6_fu_2204_p0 <= dec_ah2_i;
        sext_ln604_6_fu_2204_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln604_6_fu_2204_p0),47));

        sext_ln604_fu_2241_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_al2_load_reg_4021),23));

        sext_ln636_fu_1167_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln640_reg_3383),32));

        sext_ln640_2_fu_944_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(wl_code_table_load_reg_3290),17));

        sext_ln640_fu_941_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln13_reg_3285),17));

        sext_ln679_13_fu_1853_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_12_reg_3864),64));

        sext_ln679_14_fu_1782_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_13_reg_3806),64));

        sext_ln679_15_fu_1925_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_14_reg_3922),64));

        sext_ln679_16_fu_1877_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_15_reg_3874),64));

        sext_ln679_17_fu_1811_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_16_reg_3811),64));

        sext_ln679_18_fu_1342_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln472_1_reg_3441),28));

        sext_ln679_19_fu_1655_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_17_reg_3753),64));

        sext_ln679_20_fu_1949_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_18_reg_3937),64));

        sext_ln679_21_fu_1679_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_19_reg_3758),64));

        sext_ln679_22_fu_1973_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_20_reg_3942),64));

        sext_ln679_23_fu_1901_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_21_reg_3894),64));

        sext_ln679_24_fu_1708_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_22_reg_3763),64));

        sext_ln679_fu_1758_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln679_reg_3801),64));

        sext_ln702_2_fu_2394_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(wd2_2_fu_2387_p3),19));

        sext_ln702_fu_2280_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(wd2_fu_2273_p3),19));

    sext_ln705_4_fu_2096_p0 <= dec_plt1_i;
        sext_ln705_4_fu_2096_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln705_4_fu_2096_p0),64));

        sext_ln705_5_fu_2125_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln481_reg_4043),64));

    sext_ln705_6_fu_2130_p0 <= dec_ph1_i;
        sext_ln705_6_fu_2130_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln705_6_fu_2130_p0),64));

        sext_ln705_fu_2091_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln440_reg_4037),64));

        sext_ln707_2_fu_2468_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_2459_p4),12));

        sext_ln707_fu_2358_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_2349_p4),12));

    sext_ln708_2_fu_2135_p0 <= dec_ph2_i;
        sext_ln708_2_fu_2135_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln708_2_fu_2135_p0),64));

        sext_ln708_4_fu_2378_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln705_fu_2371_p3),17));

        sext_ln708_5_fu_2488_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln705_2_fu_2481_p3),17));

    sext_ln708_fu_2101_p0 <= dec_plt2_i;
        sext_ln708_fu_2101_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln708_fu_2101_p0),64));

        sext_ln716_4_fu_2307_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln15_fu_2298_p4),17));

        sext_ln716_5_fu_2335_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln716_2_fu_2328_p3),23));

        sext_ln716_6_fu_2421_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln716_2_fu_2412_p4),17));

        sext_ln716_fu_2251_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln13_fu_2244_p3),23));

        sext_ln734_2_fu_2672_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln734_2_fu_2665_p3),25));

        sext_ln734_fu_2549_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln14_fu_2542_p3),25));

        sext_ln735_2_fu_2733_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln734_2_fu_2724_p4),18));

        sext_ln735_fu_2599_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln16_fu_2590_p4),18));

        sext_ln747_2_fu_2879_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(apl1_13_reg_4355),18));

        sext_ln747_fu_2763_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(apl1_9_reg_4314),18));

        sext_ln756_fu_1035_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln760_reg_3305),32));

        sext_ln758_fu_862_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(wd_fu_853_p4),17));

        sext_ln760_fu_879_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_866_p6),17));

    shl_ln11_fu_1744_p3 <= (wd3_fu_1738_p2 & ap_const_lv3_0);
    shl_ln12_fu_953_p3 <= (reg_640 & ap_const_lv8_0);
    shl_ln13_fu_2244_p3 <= (dec_al2_load_reg_4021 & ap_const_lv7_0);
    shl_ln14_fu_2542_p3 <= (dec_al1_load_reg_4082 & ap_const_lv8_0);
    shl_ln15_fu_782_p3 <= (dec_nbh_i & ap_const_lv7_0);
    shl_ln16_fu_2811_p3 <= (sub_ln504_reg_4332 & ap_const_lv4_0);
    shl_ln17_fu_2842_p3 <= (accumc_load_1_reg_3977_pp0_iter1_reg & ap_const_lv6_0);
    shl_ln18_fu_3026_p3 <= (accumd_load_7_reg_3842_pp0_iter2_reg & ap_const_lv7_0);
    shl_ln19_fu_2975_p3 <= (accumd_load_10_reg_3774_pp0_iter2_reg & ap_const_lv4_0);
    shl_ln511_1_fu_2822_p3 <= (sub_ln504_reg_4332 & ap_const_lv2_0);
    shl_ln516_1_fu_2853_p3 <= (accumc_load_1_reg_3977_pp0_iter1_reg & ap_const_lv4_0);
    shl_ln516_2_fu_3009_p3 <= (accumc_load_2_reg_3899_pp0_iter2_reg & ap_const_lv7_0);
    shl_ln517_1_fu_3037_p3 <= (accumd_load_8_reg_3905_pp0_iter2_reg & ap_const_lv6_0);
    shl_ln517_2_fu_3048_p3 <= (accumd_load_8_reg_3905_pp0_iter2_reg & ap_const_lv4_0);
    shl_ln521_1_fu_2986_p3 <= (accumd_load_10_reg_3774_pp0_iter2_reg & ap_const_lv2_0);
    shl_ln657_2_fu_1618_p3 <= (wd3_21_fu_1612_p2 & ap_const_lv3_0);
    shl_ln672_11_fu_977_p3 <= (reg_644 & ap_const_lv8_0);
    shl_ln672_12_fu_1406_p3 <= (reg_644 & ap_const_lv8_0);
    shl_ln672_13_fu_1229_p3 <= (reg_640 & ap_const_lv8_0);
    shl_ln672_14_fu_1253_p3 <= (reg_644 & ap_const_lv8_0);
    shl_ln672_15_fu_1097_p3 <= (reg_648 & ap_const_lv8_0);
    shl_ln672_16_fu_1483_p3 <= (reg_658 & ap_const_lv8_0);
    shl_ln672_17_fu_1318_p3 <= (reg_658 & ap_const_lv8_0);
    shl_ln672_18_fu_1632_p3 <= (dec_del_bph_load_3_reg_3568 & ap_const_lv8_0);
    shl_ln672_19_fu_1507_p3 <= (reg_648 & ap_const_lv8_0);
    shl_ln672_20_fu_1531_p3 <= (dec_del_bph_load_5_reg_3428 & ap_const_lv8_0);
    shl_ln672_s_fu_1569_p3 <= (reg_640 & ap_const_lv8_0);
    shl_ln716_2_fu_2328_p3 <= (dec_ah2_load_reg_4100 & ap_const_lv7_0);
    shl_ln734_2_fu_2665_p3 <= (dec_ah1_load_reg_4121 & ap_const_lv8_0);
    shl_ln_fu_808_p3 <= (dec_nbl_i & ap_const_lv7_0);
    sub_ln504_fu_2755_p2 <= std_logic_vector(unsigned(add_ln430_reg_4265) - unsigned(add_ln493_reg_4293));
    sub_ln516_fu_2864_p2 <= std_logic_vector(signed(sext_ln516_2_fu_2849_p1) - signed(sext_ln516_3_fu_2860_p1));
    sub_ln517_fu_3059_p2 <= std_logic_vector(signed(sext_ln517_10_fu_3044_p1) - signed(sext_ln517_11_fu_3055_p1));
        sub_ln521_cast_fu_3084_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln521_reg_4486),39));

    sub_ln521_fu_2997_p2 <= std_logic_vector(signed(sext_ln521_fu_2982_p1) - signed(sext_ln521_1_fu_2993_p1));
    sub_ln639_fu_820_p2 <= std_logic_vector(unsigned(zext_ln639_2_fu_816_p1) - unsigned(zext_ln639_fu_804_p1));
    sub_ln656_2_fu_1478_p2 <= std_logic_vector(signed(ap_const_lv4_B) - signed(trunc_ln653_2_reg_3454));
    sub_ln656_2cast_fu_1609_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln656_2_reg_3730),12));
    sub_ln656_fu_1564_p2 <= std_logic_vector(unsigned(ap_const_lv4_9) - unsigned(trunc_ln14_reg_3541));
    sub_ln656cast_fu_1735_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln656_reg_3790),12));
    sub_ln672_12_fu_1577_p2 <= std_logic_vector(unsigned(shl_ln672_s_fu_1569_p3) - unsigned(sext_ln589_fu_1554_p1));
    sub_ln672_13_fu_985_p2 <= std_logic_vector(unsigned(shl_ln672_11_fu_977_p3) - unsigned(sext_ln589_42_fu_902_p1));
    sub_ln672_14_fu_1414_p2 <= std_logic_vector(unsigned(shl_ln672_12_fu_1406_p3) - unsigned(sext_ln589_45_fu_1378_p1));
    sub_ln672_15_fu_1237_p2 <= std_logic_vector(unsigned(shl_ln672_13_fu_1229_p3) - unsigned(sext_ln589_48_fu_1121_p1));
    sub_ln672_16_fu_1261_p2 <= std_logic_vector(unsigned(shl_ln672_14_fu_1253_p3) - unsigned(sext_ln589_51_fu_1134_p1));
    sub_ln672_17_fu_1105_p2 <= std_logic_vector(unsigned(shl_ln672_15_fu_1097_p3) - unsigned(sext_ln587_10_fu_1001_p1));
    sub_ln672_18_fu_1491_p2 <= std_logic_vector(unsigned(shl_ln672_16_fu_1483_p3) - unsigned(sext_ln589_54_fu_1448_p1));
    sub_ln672_19_fu_1326_p2 <= std_logic_vector(unsigned(shl_ln672_17_fu_1318_p3) - unsigned(sext_ln589_57_fu_1281_p1));
    sub_ln672_20_fu_1639_p2 <= std_logic_vector(unsigned(shl_ln672_18_fu_1632_p3) - unsigned(sext_ln589_60_fu_1603_p1));
    sub_ln672_21_fu_1515_p2 <= std_logic_vector(unsigned(shl_ln672_19_fu_1507_p3) - unsigned(sext_ln589_63_fu_1471_p1));
    sub_ln672_22_fu_1538_p2 <= std_logic_vector(unsigned(shl_ln672_20_fu_1531_p3) - unsigned(sext_ln589_66_fu_1475_p1));
    sub_ln672_fu_961_p2 <= std_logic_vector(unsigned(shl_ln12_fu_953_p3) - unsigned(sext_ln587_fu_889_p1));
    sub_ln706_2_fu_2398_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(sext_ln702_2_fu_2394_p1));
    sub_ln706_fu_2284_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(sext_ln702_fu_2280_p1));
    sub_ln716_2_fu_2339_p2 <= std_logic_vector(signed(sext_ln716_5_fu_2335_p1) - signed(sext_ln604_5_fu_2325_p1));
    sub_ln716_fu_2255_p2 <= std_logic_vector(signed(sext_ln716_fu_2251_p1) - signed(sext_ln604_fu_2241_p1));
    sub_ln734_2_fu_2676_p2 <= std_logic_vector(signed(sext_ln734_2_fu_2672_p1) - signed(sext_ln602_2_fu_2632_p1));
    sub_ln734_fu_2553_p2 <= std_logic_vector(signed(sext_ln734_fu_2549_p1) - signed(sext_ln602_fu_2501_p1));
    sub_ln759_fu_794_p2 <= std_logic_vector(unsigned(zext_ln759_2_fu_790_p1) - unsigned(zext_ln759_fu_778_p1));
    tmp35_fu_2873_p2 <= std_logic_vector(signed(sext_ln520_fu_2870_p1) + signed(sext_ln516_fu_2839_p1));
    tmp_1_fu_2362_p4 <= sub_ln706_reg_4167(18 downto 7);
    tmp_27_fu_1170_p3 <= sext_ln636_fu_1167_p1(31 downto 31);
    tmp_28_fu_1761_p3 <= sext_ln679_fu_1758_p1(63 downto 63);
    tmp_29_fu_1856_p3 <= sext_ln679_13_fu_1853_p1(63 downto 63);
    tmp_2_fu_2459_p4 <= dec_ah1_load_reg_4121(15 downto 5);
    tmp_30_fu_1785_p3 <= sext_ln679_14_fu_1782_p1(63 downto 63);
    tmp_31_fu_1928_p3 <= sext_ln679_15_fu_1925_p1(63 downto 63);
    tmp_32_fu_1880_p3 <= sext_ln679_16_fu_1877_p1(63 downto 63);
    tmp_33_fu_1814_p3 <= sext_ln679_17_fu_1811_p1(63 downto 63);
    tmp_35_fu_2290_p3 <= reg_689(63 downto 63);
    tmp_36_fu_1038_p3 <= sext_ln756_fu_1035_p1(31 downto 31);
    tmp_37_fu_1658_p3 <= sext_ln679_19_fu_1655_p1(63 downto 63);
    tmp_38_fu_1952_p3 <= sext_ln679_20_fu_1949_p1(63 downto 63);
    tmp_39_fu_1682_p3 <= sext_ln679_21_fu_1679_p1(63 downto 63);
    tmp_3_fu_760_p5 <= input_r(7 downto 6);
    tmp_40_fu_1976_p3 <= sext_ln679_22_fu_1973_p1(63 downto 63);
    tmp_41_fu_1904_p3 <= sext_ln679_23_fu_1901_p1(63 downto 63);
    tmp_42_fu_1711_p3 <= sext_ln679_24_fu_1708_p1(63 downto 63);
    tmp_44_fu_2404_p3 <= reg_689(63 downto 63);
    tmp_5_fu_2472_p4 <= sub_ln706_2_reg_4204(18 downto 7);
    tmp_fu_2267_p2 <= std_logic_vector(signed(accumc_load_10_cast_fu_2264_p1) + signed(sext_ln517_fu_2261_p1));
    tmp_s_fu_2349_p4 <= dec_al1_load_reg_4082(15 downto 5);
    trunc_ln15_fu_2298_p4 <= sub_ln716_reg_4157(22 downto 7);
    trunc_ln16_fu_2590_p4 <= sub_ln734_reg_4250(24 downto 8);
    trunc_ln425_1_fu_735_p4 <= input_r(5 downto 2);
    trunc_ln425_fu_2508_p1 <= add_ln422_fu_2504_p2(31 - 1 downto 0);
    trunc_ln496_fu_2686_p1 <= add_ln493_fu_2682_p2(31 - 1 downto 0);
    trunc_ln636_fu_1185_p1 <= select_ln641_fu_1178_p3(15 - 1 downto 0);
    trunc_ln703_2_fu_2641_p1 <= apl2_9_fu_2635_p3(15 - 1 downto 0);
    trunc_ln703_fu_2518_p1 <= apl2_6_fu_2512_p3(15 - 1 downto 0);
    trunc_ln716_2_fu_2412_p4 <= sub_ln716_2_reg_4183(22 downto 7);
    trunc_ln733_2_fu_2801_p1 <= apl1_12_fu_2794_p3(16 - 1 downto 0);
    trunc_ln733_fu_2714_p1 <= apl1_8_fu_2707_p3(16 - 1 downto 0);
    trunc_ln734_2_fu_2724_p4 <= sub_ln734_2_reg_4288(24 downto 8);
    trunc_ln756_fu_1053_p1 <= select_ln761_fu_1046_p3(15 - 1 downto 0);
    wd2_2_fu_2387_p3 <= (dec_ah1_load_reg_4121 & ap_const_lv2_0);
    wd2_fu_2273_p3 <= (dec_al1_load_reg_4082 & ap_const_lv2_0);
    wd3_20_fu_2616_p2 <= std_logic_vector(unsigned(ap_const_lv15_3C00) - unsigned(apl2_7_reg_4245));
    wd3_21_fu_1612_p2 <= std_logic_vector(shift_right(unsigned(reg_669),to_integer(unsigned('0' & sub_ln656_2cast_fu_1609_p1(12-1 downto 0)))));
    wd3_28_fu_2750_p2 <= std_logic_vector(unsigned(ap_const_lv15_3C00) - unsigned(apl2_10_reg_4283));
    wd3_fu_1738_p2 <= std_logic_vector(shift_right(unsigned(reg_669),to_integer(unsigned('0' & sub_ln656cast_fu_1735_p1(12-1 downto 0)))));
    wd_fu_853_p4 <= sub_ln759_reg_3256(22 downto 7);
    wl_code_table_address0 <= zext_ln425_fu_745_p1(4 - 1 downto 0);

    wl_code_table_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            wl_code_table_ce0 <= ap_const_logic_1;
        else 
            wl_code_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    xa1_1_fu_3186_p2 <= std_logic_vector(unsigned(add_ln520_8_reg_4566) + unsigned(sext_ln520_3_fu_3183_p1));
    xa1_fu_2833_p2 <= std_logic_vector(signed(sext_ln511_fu_2818_p1) - signed(sext_ln511_1_fu_2829_p1));
    xa2_fu_3194_p2 <= std_logic_vector(signed(sext_ln521_7_fu_3191_p1) + signed(add_ln521_3_reg_4571));
    xout1 <= xa1_1_fu_3186_p2(45 downto 14);

    xout1_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            xout1_ap_vld <= ap_const_logic_1;
        else 
            xout1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xout2 <= xa2_fu_3194_p2(45 downto 14);

    xout2_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            xout2_ap_vld <= ap_const_logic_1;
        else 
            xout2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln425_1_fu_919_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dec_detl_i),31));
    zext_ln425_fu_745_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln425_1_fu_735_p4),64));
    zext_ln428_fu_755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(il),64));
    zext_ln639_2_fu_816_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_808_p3),23));
    zext_ln639_fu_804_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dec_nbl_i),23));
    zext_ln656_2_fu_1309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd1_2_reg_3449),64));
    zext_ln656_fu_1397_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd1_reg_3536),64));
    zext_ln733_4_fu_2699_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd3_20_reg_4277),16));
    zext_ln733_5_fu_2783_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd3_28_reg_4326),18));
    zext_ln733_6_fu_2786_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd3_28_reg_4326),16));
    zext_ln733_fu_2696_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd3_20_reg_4277),18));
    zext_ln759_2_fu_790_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln15_fu_782_p3),23));
    zext_ln759_fu_778_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dec_nbh_i),23));
    zl_4_fu_2017_p2 <= std_logic_vector(unsigned(add_ln589_12_reg_3995) + unsigned(add_ln589_10_reg_3990));
    zl_6_fu_2031_p2 <= std_logic_vector(unsigned(add_ln589_17_reg_4005) + unsigned(add_ln589_15_reg_4000));
end behav;
