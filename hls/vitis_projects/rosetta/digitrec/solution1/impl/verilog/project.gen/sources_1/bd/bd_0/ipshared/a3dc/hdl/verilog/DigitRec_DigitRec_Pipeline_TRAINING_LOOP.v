// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module DigitRec_DigitRec_Pipeline_TRAINING_LOOP (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        labels_2_1_reload,
        labels_1_1_reload,
        labels_0_1_reload,
        dists_2_1_reload,
        dists_1_1_reload,
        dists_0_1_reload,
        training_labels_address0,
        training_labels_ce0,
        training_labels_q0,
        training_samples_address0,
        training_samples_ce0,
        training_samples_q0,
        training_samples_address1,
        training_samples_ce1,
        training_samples_q1,
        test_set_load,
        tmp_1,
        test_set_address0,
        test_set_ce0,
        test_set_q0,
        test_set_address1,
        test_set_ce1,
        test_set_q1,
        labels_2_3_out,
        labels_2_3_out_ap_vld,
        labels_1_3_out,
        labels_1_3_out_ap_vld,
        labels_0_3_out,
        labels_0_3_out_ap_vld,
        dists_2_3_out_i,
        dists_2_3_out_o,
        dists_2_3_out_o_ap_vld,
        dists_1_3_out_i,
        dists_1_3_out_o,
        dists_1_3_out_o_ap_vld,
        dists_0_3_out_i,
        dists_0_3_out_o,
        dists_0_3_out_o_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] labels_2_1_reload;
input  [31:0] labels_1_1_reload;
input  [31:0] labels_0_1_reload;
input  [31:0] dists_2_1_reload;
input  [31:0] dists_1_1_reload;
input  [31:0] dists_0_1_reload;
output  [11:0] training_labels_address0;
output   training_labels_ce0;
input  [7:0] training_labels_q0;
output  [13:0] training_samples_address0;
output   training_samples_ce0;
input  [63:0] training_samples_q0;
output  [13:0] training_samples_address1;
output   training_samples_ce1;
input  [63:0] training_samples_q1;
input  [63:0] test_set_load;
input  [10:0] tmp_1;
output  [10:0] test_set_address0;
output   test_set_ce0;
input  [63:0] test_set_q0;
output  [10:0] test_set_address1;
output   test_set_ce1;
input  [63:0] test_set_q1;
output  [31:0] labels_2_3_out;
output   labels_2_3_out_ap_vld;
output  [31:0] labels_1_3_out;
output   labels_1_3_out_ap_vld;
output  [31:0] labels_0_3_out;
output   labels_0_3_out_ap_vld;
input  [31:0] dists_2_3_out_i;
output  [31:0] dists_2_3_out_o;
output   dists_2_3_out_o_ap_vld;
input  [31:0] dists_1_3_out_i;
output  [31:0] dists_1_3_out_o;
output   dists_1_3_out_o_ap_vld;
input  [31:0] dists_0_3_out_i;
output  [31:0] dists_0_3_out_o;
output   dists_0_3_out_o_ap_vld;

reg ap_idle;
reg training_labels_ce0;
reg[13:0] training_samples_address0;
reg training_samples_ce0;
reg[13:0] training_samples_address1;
reg training_samples_ce1;
reg[10:0] test_set_address0;
reg test_set_ce0;
reg test_set_ce1;
reg labels_2_3_out_ap_vld;
reg labels_1_3_out_ap_vld;
reg labels_0_3_out_ap_vld;
reg[31:0] dists_2_3_out_o;
reg dists_2_3_out_o_ap_vld;
reg[31:0] dists_1_3_out_o;
reg dists_1_3_out_o_ap_vld;
reg[31:0] dists_0_3_out_o;
reg dists_0_3_out_o_ap_vld;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln107_reg_5042;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [63:0] reg_414;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
reg   [63:0] reg_418;
reg   [63:0] reg_423;
wire   [63:0] grp_fu_427_p2;
reg   [63:0] reg_689;
wire    ap_block_pp0_stage3_11001;
wire    ap_block_pp0_stage0_11001;
reg   [11:0] i_reg_5036;
reg   [11:0] i_reg_5036_pp0_iter1_reg;
wire   [0:0] icmp_ln107_fu_734_p2;
reg   [0:0] icmp_ln107_reg_5042_pp0_iter1_reg;
reg   [0:0] icmp_ln107_reg_5042_pp0_iter2_reg;
wire   [13:0] shl_ln_fu_740_p3;
reg   [13:0] shl_ln_reg_5046;
reg   [63:0] test_set_load_2_reg_5072;
wire   [63:0] diff_fu_816_p2;
reg   [63:0] diff_reg_5092;
reg   [0:0] tmp_reg_5097;
reg   [0:0] tmp_4_reg_5102;
reg   [0:0] tmp_5_reg_5107;
reg   [0:0] tmp_6_reg_5112;
reg   [0:0] tmp_7_reg_5117;
reg   [0:0] tmp_8_reg_5122;
reg   [0:0] tmp_9_reg_5127;
reg   [0:0] tmp_10_reg_5132;
reg   [0:0] tmp_11_reg_5137;
reg   [0:0] tmp_12_reg_5142;
reg   [0:0] tmp_13_reg_5147;
reg   [0:0] tmp_14_reg_5152;
reg   [0:0] tmp_15_reg_5157;
reg   [0:0] tmp_16_reg_5162;
reg   [0:0] tmp_17_reg_5167;
reg   [0:0] tmp_18_reg_5172;
reg   [0:0] tmp_19_reg_5177;
reg   [0:0] tmp_20_reg_5182;
reg   [0:0] tmp_21_reg_5187;
reg   [0:0] tmp_22_reg_5192;
reg   [0:0] tmp_23_reg_5197;
reg   [0:0] tmp_24_reg_5202;
reg   [0:0] tmp_25_reg_5207;
reg   [0:0] tmp_26_reg_5212;
reg   [0:0] tmp_27_reg_5217;
reg   [0:0] tmp_28_reg_5222;
reg   [0:0] tmp_29_reg_5227;
reg   [0:0] tmp_30_reg_5232;
reg   [0:0] tmp_31_reg_5237;
reg   [0:0] tmp_32_reg_5242;
reg   [0:0] tmp_33_reg_5247;
reg   [0:0] tmp_49_reg_5252;
reg   [0:0] tmp_72_reg_5257;
reg   [0:0] tmp_73_reg_5262;
reg   [0:0] tmp_74_reg_5267;
reg   [0:0] tmp_75_reg_5272;
reg   [0:0] tmp_76_reg_5277;
reg   [0:0] tmp_77_reg_5282;
reg   [0:0] tmp_78_reg_5287;
reg   [0:0] tmp_79_reg_5292;
reg   [0:0] tmp_80_reg_5297;
reg   [0:0] tmp_81_reg_5302;
reg   [0:0] tmp_82_reg_5307;
reg   [0:0] tmp_83_reg_5312;
reg   [0:0] tmp_84_reg_5317;
reg   [0:0] tmp_85_reg_5322;
reg   [0:0] tmp_86_reg_5327;
reg   [0:0] tmp_87_reg_5332;
reg   [0:0] tmp_88_reg_5337;
reg   [0:0] tmp_89_reg_5342;
reg   [0:0] tmp_90_reg_5347;
reg   [0:0] tmp_91_reg_5352;
reg   [0:0] tmp_92_reg_5357;
reg   [0:0] tmp_93_reg_5362;
reg   [0:0] tmp_94_reg_5367;
reg   [0:0] tmp_95_reg_5372;
reg   [0:0] tmp_96_reg_5377;
reg   [0:0] tmp_97_reg_5382;
reg   [0:0] tmp_98_reg_5387;
reg   [0:0] tmp_99_reg_5392;
reg   [0:0] tmp_100_reg_5397;
reg   [0:0] tmp_101_reg_5402;
reg   [0:0] tmp_102_reg_5407;
reg   [0:0] tmp_103_reg_5412;
reg   [1:0] tmp_s_reg_5417;
reg   [1:0] tmp_2_reg_5422;
reg   [1:0] tmp_3_reg_5428;
reg   [1:0] tmp_34_reg_5434;
reg   [1:0] tmp_35_reg_5440;
reg   [1:0] tmp_36_reg_5446;
reg   [1:0] tmp_37_reg_5452;
reg   [1:0] tmp_38_reg_5458;
reg   [1:0] tmp_39_reg_5464;
reg   [1:0] tmp_40_reg_5470;
reg   [1:0] tmp_41_reg_5476;
reg   [1:0] tmp_42_reg_5482;
reg   [1:0] tmp_43_reg_5488;
reg   [1:0] tmp_44_reg_5494;
reg   [1:0] tmp_45_reg_5500;
wire   [1:0] trunc_ln21_fu_1339_p1;
reg   [1:0] trunc_ln21_reg_5506;
reg   [1:0] tmp_46_reg_5512;
reg   [1:0] tmp_47_reg_5517;
reg   [1:0] tmp_48_reg_5523;
reg   [1:0] tmp_50_reg_5529;
reg   [1:0] tmp_51_reg_5535;
reg   [1:0] tmp_52_reg_5541;
reg   [1:0] tmp_53_reg_5547;
reg   [1:0] tmp_54_reg_5553;
reg   [1:0] tmp_55_reg_5559;
reg   [1:0] tmp_56_reg_5565;
reg   [1:0] tmp_57_reg_5571;
reg   [1:0] tmp_58_reg_5577;
reg   [1:0] tmp_59_reg_5583;
reg   [1:0] tmp_60_reg_5589;
reg   [1:0] tmp_61_reg_5595;
reg   [1:0] tmp_62_reg_5601;
reg   [1:0] tmp_104_reg_5607;
reg   [1:0] tmp_105_reg_5612;
reg   [1:0] tmp_106_reg_5618;
reg   [1:0] tmp_107_reg_5624;
reg   [1:0] tmp_108_reg_5630;
reg   [1:0] tmp_109_reg_5636;
reg   [1:0] tmp_110_reg_5642;
reg   [1:0] tmp_111_reg_5648;
reg   [1:0] tmp_112_reg_5654;
reg   [1:0] tmp_113_reg_5660;
reg   [1:0] tmp_114_reg_5666;
reg   [1:0] tmp_115_reg_5672;
reg   [1:0] tmp_116_reg_5678;
reg   [1:0] tmp_117_reg_5684;
reg   [1:0] tmp_118_reg_5690;
wire   [1:0] trunc_ln21_1_fu_1761_p1;
reg   [1:0] trunc_ln21_1_reg_5696;
reg   [1:0] tmp_119_reg_5702;
reg   [1:0] tmp_120_reg_5707;
reg   [1:0] tmp_121_reg_5713;
reg   [1:0] tmp_122_reg_5719;
reg   [1:0] tmp_123_reg_5725;
reg   [1:0] tmp_124_reg_5731;
reg   [1:0] tmp_125_reg_5737;
reg   [1:0] tmp_126_reg_5743;
reg   [1:0] tmp_127_reg_5749;
reg   [1:0] tmp_128_reg_5755;
reg   [1:0] tmp_129_reg_5761;
reg   [1:0] tmp_130_reg_5767;
reg   [1:0] tmp_131_reg_5773;
reg   [1:0] tmp_132_reg_5779;
reg   [1:0] tmp_133_reg_5785;
reg   [1:0] tmp_134_reg_5791;
wire   [63:0] diff_2_fu_1925_p2;
reg   [63:0] diff_2_reg_5797;
reg   [0:0] tmp_144_reg_5802;
reg   [0:0] tmp_145_reg_5807;
reg   [0:0] tmp_146_reg_5812;
reg   [0:0] tmp_147_reg_5817;
reg   [0:0] tmp_148_reg_5822;
reg   [0:0] tmp_149_reg_5827;
reg   [0:0] tmp_150_reg_5832;
reg   [0:0] tmp_151_reg_5837;
reg   [0:0] tmp_152_reg_5842;
reg   [0:0] tmp_153_reg_5847;
reg   [0:0] tmp_154_reg_5852;
reg   [0:0] tmp_155_reg_5857;
reg   [0:0] tmp_156_reg_5862;
reg   [0:0] tmp_157_reg_5867;
reg   [0:0] tmp_158_reg_5872;
reg   [0:0] tmp_159_reg_5877;
reg   [0:0] tmp_160_reg_5882;
reg   [0:0] tmp_161_reg_5887;
reg   [0:0] tmp_162_reg_5892;
reg   [0:0] tmp_163_reg_5897;
reg   [0:0] tmp_164_reg_5902;
reg   [0:0] tmp_165_reg_5907;
reg   [0:0] tmp_166_reg_5912;
reg   [0:0] tmp_167_reg_5917;
reg   [0:0] tmp_168_reg_5922;
reg   [0:0] tmp_169_reg_5927;
reg   [0:0] tmp_170_reg_5932;
reg   [0:0] tmp_171_reg_5937;
reg   [0:0] tmp_172_reg_5942;
reg   [0:0] tmp_173_reg_5947;
reg   [0:0] tmp_174_reg_5952;
reg   [0:0] tmp_175_reg_5957;
reg   [0:0] tmp_216_reg_5962;
reg   [0:0] tmp_217_reg_5967;
reg   [0:0] tmp_218_reg_5972;
reg   [0:0] tmp_219_reg_5977;
reg   [0:0] tmp_220_reg_5982;
reg   [0:0] tmp_221_reg_5987;
reg   [0:0] tmp_222_reg_5992;
reg   [0:0] tmp_223_reg_5997;
reg   [0:0] tmp_224_reg_6002;
reg   [0:0] tmp_225_reg_6007;
reg   [0:0] tmp_226_reg_6012;
reg   [0:0] tmp_227_reg_6017;
reg   [0:0] tmp_228_reg_6022;
reg   [0:0] tmp_229_reg_6027;
reg   [0:0] tmp_230_reg_6032;
reg   [0:0] tmp_231_reg_6037;
reg   [0:0] tmp_232_reg_6042;
reg   [0:0] tmp_233_reg_6047;
reg   [0:0] tmp_234_reg_6052;
reg   [0:0] tmp_235_reg_6057;
reg   [0:0] tmp_236_reg_6062;
reg   [0:0] tmp_237_reg_6067;
reg   [0:0] tmp_238_reg_6072;
reg   [0:0] tmp_239_reg_6077;
reg   [0:0] tmp_240_reg_6082;
reg   [0:0] tmp_241_reg_6087;
reg   [0:0] tmp_242_reg_6092;
reg   [0:0] tmp_243_reg_6097;
reg   [0:0] tmp_244_reg_6102;
reg   [0:0] tmp_245_reg_6107;
reg   [0:0] tmp_246_reg_6112;
reg   [0:0] tmp_247_reg_6117;
reg   [58:0] tmp_63_reg_6122;
wire   [59:0] add_ln18_fu_2413_p2;
reg   [59:0] add_ln18_reg_6127;
wire   [59:0] add_ln18_1_fu_2625_p2;
reg   [59:0] add_ln18_1_reg_6132;
reg   [58:0] tmp_135_reg_6137;
reg   [1:0] tmp_176_reg_6142;
reg   [1:0] tmp_177_reg_6147;
reg   [1:0] tmp_178_reg_6153;
reg   [1:0] tmp_179_reg_6159;
reg   [1:0] tmp_180_reg_6165;
reg   [1:0] tmp_181_reg_6171;
reg   [1:0] tmp_182_reg_6177;
reg   [1:0] tmp_183_reg_6183;
reg   [1:0] tmp_184_reg_6189;
reg   [1:0] tmp_185_reg_6195;
reg   [1:0] tmp_186_reg_6201;
reg   [1:0] tmp_187_reg_6207;
reg   [1:0] tmp_188_reg_6213;
reg   [1:0] tmp_189_reg_6219;
reg   [1:0] tmp_190_reg_6225;
wire   [1:0] trunc_ln21_2_fu_2904_p1;
reg   [1:0] trunc_ln21_2_reg_6231;
reg   [1:0] tmp_191_reg_6237;
reg   [1:0] tmp_192_reg_6242;
reg   [1:0] tmp_193_reg_6248;
reg   [1:0] tmp_194_reg_6254;
reg   [1:0] tmp_195_reg_6260;
reg   [1:0] tmp_196_reg_6266;
reg   [1:0] tmp_197_reg_6272;
reg   [1:0] tmp_198_reg_6278;
reg   [1:0] tmp_199_reg_6284;
reg   [1:0] tmp_200_reg_6290;
reg   [1:0] tmp_201_reg_6296;
reg   [1:0] tmp_202_reg_6302;
reg   [1:0] tmp_203_reg_6308;
reg   [1:0] tmp_204_reg_6314;
reg   [1:0] tmp_205_reg_6320;
reg   [1:0] tmp_206_reg_6326;
reg   [1:0] tmp_248_reg_6332;
reg   [1:0] tmp_249_reg_6337;
reg   [1:0] tmp_250_reg_6343;
reg   [1:0] tmp_251_reg_6349;
reg   [1:0] tmp_252_reg_6355;
reg   [1:0] tmp_253_reg_6361;
reg   [1:0] tmp_254_reg_6367;
reg   [1:0] tmp_255_reg_6373;
reg   [1:0] tmp_256_reg_6379;
reg   [1:0] tmp_257_reg_6385;
reg   [1:0] tmp_258_reg_6391;
reg   [1:0] tmp_259_reg_6397;
reg   [1:0] tmp_260_reg_6403;
reg   [1:0] tmp_261_reg_6409;
reg   [1:0] tmp_262_reg_6415;
wire   [1:0] trunc_ln21_3_fu_3326_p1;
reg   [1:0] trunc_ln21_3_reg_6421;
reg   [1:0] tmp_263_reg_6427;
reg   [1:0] tmp_264_reg_6432;
reg   [1:0] tmp_265_reg_6438;
reg   [1:0] tmp_266_reg_6444;
reg   [1:0] tmp_267_reg_6450;
reg   [1:0] tmp_268_reg_6456;
reg   [1:0] tmp_269_reg_6462;
reg   [1:0] tmp_270_reg_6468;
reg   [1:0] tmp_271_reg_6474;
reg   [1:0] tmp_272_reg_6480;
reg   [1:0] tmp_273_reg_6486;
reg   [1:0] tmp_274_reg_6492;
reg   [1:0] tmp_275_reg_6498;
reg   [1:0] tmp_276_reg_6504;
reg   [1:0] tmp_277_reg_6510;
reg   [1:0] tmp_278_reg_6516;
reg   [3:0] tmp_64_reg_6522;
reg   [3:0] tmp_65_reg_6528;
reg   [3:0] tmp_66_reg_6534;
reg   [3:0] tmp_67_reg_6540;
reg   [3:0] tmp_68_reg_6546;
reg   [3:0] tmp_69_reg_6552;
wire   [3:0] trunc_ln18_fu_3558_p1;
reg   [3:0] trunc_ln18_reg_6558;
reg   [3:0] tmp_70_reg_6563;
reg   [3:0] tmp_136_reg_6568;
reg   [3:0] tmp_137_reg_6574;
reg   [3:0] tmp_138_reg_6580;
reg   [3:0] tmp_139_reg_6586;
reg   [3:0] tmp_140_reg_6592;
reg   [3:0] tmp_141_reg_6598;
wire   [3:0] trunc_ln18_2_fu_3640_p1;
reg   [3:0] trunc_ln18_2_reg_6604;
reg   [3:0] tmp_142_reg_6609;
wire   [59:0] add_ln18_2_fu_3860_p2;
reg   [59:0] add_ln18_2_reg_6614;
reg   [58:0] tmp_207_reg_6619;
wire   [59:0] add_ln18_3_fu_4088_p2;
reg   [59:0] add_ln18_3_reg_6624;
reg   [58:0] tmp_279_reg_6629;
wire   [38:0] trunc_ln18_1_fu_4180_p1;
reg   [38:0] trunc_ln18_1_reg_6634;
reg   [37:0] tmp_71_reg_6639;
wire   [38:0] trunc_ln18_3_fu_4264_p1;
reg   [38:0] trunc_ln18_3_reg_6644;
reg   [37:0] tmp_143_reg_6649;
reg   [3:0] tmp_208_reg_6654;
reg   [3:0] tmp_209_reg_6660;
reg   [3:0] tmp_210_reg_6666;
reg   [3:0] tmp_211_reg_6672;
reg   [3:0] tmp_212_reg_6678;
reg   [3:0] tmp_213_reg_6684;
wire   [3:0] trunc_ln18_4_fu_4346_p1;
reg   [3:0] trunc_ln18_4_reg_6690;
reg   [3:0] tmp_214_reg_6695;
reg   [3:0] tmp_280_reg_6700;
reg   [3:0] tmp_281_reg_6706;
reg   [3:0] tmp_282_reg_6712;
reg   [3:0] tmp_283_reg_6718;
reg   [3:0] tmp_284_reg_6724;
reg   [3:0] tmp_285_reg_6730;
wire   [3:0] trunc_ln18_6_fu_4428_p1;
reg   [3:0] trunc_ln18_6_reg_6736;
reg   [3:0] tmp_286_reg_6741;
wire   [6:0] trunc_ln25_fu_4450_p1;
reg   [6:0] trunc_ln25_reg_6746;
reg   [6:0] trunc_ln25_1_reg_6751;
wire   [6:0] trunc_ln25_2_fu_4472_p1;
reg   [6:0] trunc_ln25_2_reg_6756;
reg   [6:0] trunc_ln25_3_reg_6761;
wire   [38:0] trunc_ln18_5_fu_4556_p1;
reg   [38:0] trunc_ln18_5_reg_6766;
reg   [37:0] tmp_215_reg_6771;
wire   [38:0] trunc_ln18_7_fu_4640_p1;
reg   [38:0] trunc_ln18_7_reg_6776;
reg   [37:0] tmp_287_reg_6781;
wire   [6:0] dist_fu_4658_p2;
reg   [6:0] dist_reg_6791;
wire   [6:0] add_ln26_fu_4662_p2;
reg   [6:0] add_ln26_reg_6796;
wire   [6:0] trunc_ln25_4_fu_4674_p1;
reg   [6:0] trunc_ln25_4_reg_6801;
reg   [6:0] trunc_ln25_5_reg_6806;
wire   [6:0] trunc_ln25_6_fu_4696_p1;
reg   [6:0] trunc_ln25_6_reg_6811;
reg   [6:0] trunc_ln25_7_reg_6816;
reg   [31:0] dists_0_3_out_load_reg_6821;
reg   [7:0] labels_1_reg_6827;
wire   [6:0] add_ln26_1_fu_4718_p2;
reg   [6:0] add_ln26_1_reg_6832;
wire   [6:0] add_ln26_2_fu_4722_p2;
reg   [6:0] add_ln26_2_reg_6837;
wire   [30:0] max_dist_fu_4732_p3;
reg   [30:0] max_dist_reg_6842;
reg   [31:0] dists_1_3_out_load_reg_6847;
wire   [7:0] add_ln36_fu_4756_p2;
reg   [7:0] add_ln36_reg_6853;
wire   [7:0] add_ln36_1_fu_4762_p2;
reg   [7:0] add_ln36_1_reg_6858;
wire   [0:0] icmp_ln45_1_fu_4771_p2;
reg   [0:0] icmp_ln45_1_reg_6863;
wire   [31:0] max_dist_1_fu_4777_p3;
reg   [31:0] max_dist_1_reg_6868;
reg   [31:0] dists_2_3_out_load_reg_6874;
wire   [8:0] dists_0_fu_4795_p2;
reg   [8:0] dists_0_reg_6881;
wire   [0:0] icmp_ln45_2_fu_4801_p2;
reg   [0:0] icmp_ln45_2_reg_6886;
wire   [1:0] select_ln45_2_fu_4819_p3;
reg   [1:0] select_ln45_2_reg_6891;
wire   [0:0] icmp_ln53_fu_4835_p2;
reg   [0:0] icmp_ln53_reg_6897;
wire   [0:0] icmp_ln55_fu_4841_p2;
reg   [0:0] icmp_ln55_reg_6904;
wire   [0:0] icmp_ln55_1_fu_4846_p2;
reg   [0:0] icmp_ln55_1_reg_6909;
wire   [0:0] or_ln55_fu_4851_p2;
reg   [0:0] or_ln55_reg_6914;
wire   [31:0] dists_2_4_fu_4878_p3;
reg   [31:0] dists_2_4_reg_6919;
wire   [31:0] dists_2_5_fu_4885_p3;
reg   [31:0] dists_2_5_reg_6924;
wire   [31:0] dists_2_6_fu_4892_p3;
reg   [31:0] dists_2_6_reg_6929;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
wire   [63:0] zext_ln108_fu_748_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln35_fu_759_p1;
wire   [63:0] zext_ln35_1_fu_770_p1;
wire   [63:0] zext_ln35_3_fu_781_p1;
wire   [63:0] zext_ln35_4_fu_791_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln35_6_fu_801_p1;
wire   [63:0] zext_ln35_7_fu_811_p1;
wire   [63:0] zext_ln107_fu_4654_p1;
wire    ap_loop_init;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage2;
reg   [31:0] ap_sig_allocacmp_dists_0_3_out_load;
reg   [11:0] i_1_fu_242;
wire   [11:0] add_ln107_fu_1077_p2;
reg   [11:0] ap_sig_allocacmp_i;
reg   [31:0] labels_0_3_fu_246;
wire   [31:0] labels_2_7_fu_4946_p3;
reg   [31:0] labels_1_3_fu_250;
wire   [31:0] labels_2_6_fu_4939_p3;
reg   [31:0] labels_2_3_fu_254;
wire   [31:0] labels_2_5_fu_4932_p3;
wire    ap_block_pp0_stage1_01001;
wire   [10:0] or_ln35_fu_753_p2;
wire   [13:0] or_ln35_1_fu_764_p2;
wire   [10:0] or_ln35_2_fu_775_p2;
wire   [13:0] or_ln35_3_fu_786_p2;
wire   [10:0] or_ln35_4_fu_796_p2;
wire   [13:0] or_ln35_5_fu_806_p2;
wire   [62:0] and_ln_fu_1082_p64;
wire   [63:0] zext_ln20_fu_1180_p1;
wire   [63:0] sub_ln20_fu_1184_p2;
wire   [62:0] and_ln20_1_fu_1503_p64;
wire   [63:0] zext_ln20_1_fu_1601_p1;
wire   [63:0] sub_ln20_1_fu_1605_p2;
wire   [61:0] and_ln1_fu_2191_p32;
wire   [61:0] and_ln21_1_fu_2294_p32;
wire   [62:0] zext_ln21_1_fu_2393_p1;
wire   [62:0] zext_ln21_fu_2290_p1;
wire   [62:0] add_ln21_1_fu_2397_p2;
wire   [59:0] and_ln1_cast_fu_2241_p31;
wire   [59:0] and_ln21_1_cast_fu_2344_p31;
wire   [61:0] and_ln21_2_fu_2419_p32;
wire   [61:0] and_ln21_3_fu_2522_p32;
wire   [59:0] and_ln21_3_cast_fu_2572_p31;
wire   [59:0] and_ln21_2_cast_fu_2469_p31;
wire   [62:0] zext_ln21_3_fu_2621_p1;
wire   [62:0] zext_ln21_2_fu_2518_p1;
wire   [62:0] add_ln21_fu_2631_p2;
wire   [62:0] and_ln20_2_fu_2647_p64;
wire   [63:0] zext_ln20_2_fu_2745_p1;
wire   [63:0] sub_ln20_2_fu_2749_p2;
wire   [62:0] and_ln20_3_fu_3068_p64;
wire   [63:0] zext_ln20_3_fu_3166_p1;
wire   [63:0] sub_ln20_3_fu_3170_p2;
wire   [59:0] zext_ln22_fu_3490_p1;
wire   [59:0] add_ln22_fu_3493_p2;
wire   [59:0] zext_ln22_1_fu_3572_p1;
wire   [59:0] add_ln22_1_fu_3575_p2;
wire   [61:0] and_ln21_4_fu_3654_p32;
wire   [61:0] and_ln21_5_fu_3757_p32;
wire   [59:0] and_ln21_5_cast_fu_3807_p31;
wire   [59:0] and_ln21_4_cast_fu_3704_p31;
wire   [62:0] zext_ln21_5_fu_3856_p1;
wire   [62:0] zext_ln21_4_fu_3753_p1;
wire   [62:0] add_ln21_2_fu_3866_p2;
wire   [61:0] and_ln21_6_fu_3882_p32;
wire   [61:0] and_ln21_7_fu_3985_p32;
wire   [59:0] and_ln21_7_cast_fu_4035_p31;
wire   [59:0] and_ln21_6_cast_fu_3932_p31;
wire   [62:0] zext_ln21_7_fu_4084_p1;
wire   [62:0] zext_ln21_6_fu_3981_p1;
wire   [62:0] add_ln21_3_fu_4094_p2;
wire   [52:0] and_ln2_fu_4110_p15;
wire   [52:0] and_ln3_fu_4139_p15;
wire   [53:0] zext_ln23_1_fu_4164_p1;
wire   [53:0] zext_ln23_fu_4135_p1;
wire   [52:0] add_ln23_4_fu_4168_p2;
wire   [53:0] add_ln23_fu_4174_p2;
wire   [52:0] and_ln18_1_fu_4194_p15;
wire   [52:0] and_ln23_1_fu_4223_p15;
wire   [53:0] zext_ln23_3_fu_4248_p1;
wire   [53:0] zext_ln23_2_fu_4219_p1;
wire   [52:0] add_ln23_5_fu_4252_p2;
wire   [53:0] add_ln23_1_fu_4258_p2;
wire   [59:0] zext_ln22_2_fu_4278_p1;
wire   [59:0] add_ln22_2_fu_4281_p2;
wire   [59:0] zext_ln22_3_fu_4360_p1;
wire   [59:0] add_ln22_3_fu_4363_p2;
wire   [38:0] zext_ln24_fu_4442_p1;
wire   [38:0] add_ln24_fu_4445_p2;
wire   [38:0] zext_ln24_1_fu_4464_p1;
wire   [38:0] add_ln24_1_fu_4467_p2;
wire   [52:0] and_ln18_2_fu_4486_p15;
wire   [52:0] and_ln23_2_fu_4515_p15;
wire   [53:0] zext_ln23_5_fu_4540_p1;
wire   [53:0] zext_ln23_4_fu_4511_p1;
wire   [52:0] add_ln23_6_fu_4544_p2;
wire   [53:0] add_ln23_2_fu_4550_p2;
wire   [52:0] and_ln18_3_fu_4570_p15;
wire   [52:0] and_ln23_3_fu_4599_p15;
wire   [53:0] zext_ln23_7_fu_4624_p1;
wire   [53:0] zext_ln23_6_fu_4595_p1;
wire   [52:0] add_ln23_7_fu_4628_p2;
wire   [53:0] add_ln23_3_fu_4634_p2;
wire   [38:0] zext_ln24_2_fu_4666_p1;
wire   [38:0] add_ln24_2_fu_4669_p2;
wire   [38:0] zext_ln24_3_fu_4688_p1;
wire   [38:0] add_ln24_3_fu_4691_p2;
wire   [0:0] icmp_ln45_fu_4726_p2;
wire   [30:0] trunc_ln107_fu_4714_p1;
wire   [7:0] zext_ln31_fu_4744_p1;
wire   [7:0] zext_ln35_5_fu_4750_p1;
wire   [7:0] zext_ln35_2_fu_4747_p1;
wire   [7:0] zext_ln36_fu_4753_p1;
wire   [31:0] zext_ln39_fu_4768_p1;
wire   [8:0] zext_ln36_2_fu_4792_p1;
wire   [8:0] zext_ln36_1_fu_4789_p1;
wire   [0:0] or_ln45_fu_4814_p2;
wire   [1:0] select_ln45_1_fu_4806_p3;
wire   [31:0] zext_ln55_fu_4827_p1;
wire   [31:0] max_dist_2_fu_4830_p3;
wire   [31:0] dists_2_fu_4857_p3;
wire   [31:0] dists_2_2_fu_4864_p3;
wire   [31:0] dists_2_3_fu_4871_p3;
wire   [31:0] zext_ln108_1_fu_4908_p1;
wire   [31:0] labels_2_fu_4911_p3;
wire   [31:0] labels_2_2_fu_4918_p3;
wire   [31:0] labels_2_4_fu_4925_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter2_stage1;
reg    ap_idle_pp0_0to1;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [3:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to3;
wire    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 i_1_fu_242 = 12'd0;
#0 labels_0_3_fu_246 = 32'd0;
#0 labels_1_3_fu_250 = 32'd0;
#0 labels_2_3_fu_254 = 32'd0;
#0 ap_done_reg = 1'b0;
end

DigitRec_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_1_fu_242 <= 12'd0;
    end else if (((icmp_ln107_reg_5042 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        i_1_fu_242 <= add_ln107_fu_1077_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        labels_0_3_fu_246 <= labels_0_1_reload;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        labels_0_3_fu_246 <= labels_2_7_fu_4946_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        labels_1_3_fu_250 <= labels_1_1_reload;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        labels_1_3_fu_250 <= labels_2_6_fu_4939_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        labels_2_3_fu_254 <= labels_2_1_reload;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        labels_2_3_fu_254 <= labels_2_5_fu_4932_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            reg_418 <= test_set_q0;
        end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            reg_418 <= test_set_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln18_1_reg_6132 <= add_ln18_1_fu_2625_p2;
        add_ln18_reg_6127 <= add_ln18_fu_2413_p2;
        add_ln26_reg_6796 <= add_ln26_fu_4662_p2;
        dist_reg_6791 <= dist_fu_4658_p2;
        dists_2_4_reg_6919 <= dists_2_4_fu_4878_p3;
        dists_2_5_reg_6924 <= dists_2_5_fu_4885_p3;
        dists_2_6_reg_6929 <= dists_2_6_fu_4892_p3;
        i_reg_5036 <= ap_sig_allocacmp_i;
        i_reg_5036_pp0_iter1_reg <= i_reg_5036;
        icmp_ln107_reg_5042 <= icmp_ln107_fu_734_p2;
        icmp_ln107_reg_5042_pp0_iter1_reg <= icmp_ln107_reg_5042;
        icmp_ln107_reg_5042_pp0_iter2_reg <= icmp_ln107_reg_5042_pp0_iter1_reg;
        icmp_ln53_reg_6897 <= icmp_ln53_fu_4835_p2;
        icmp_ln55_1_reg_6909 <= icmp_ln55_1_fu_4846_p2;
        icmp_ln55_reg_6904 <= icmp_ln55_fu_4841_p2;
        or_ln55_reg_6914 <= or_ln55_fu_4851_p2;
        shl_ln_reg_5046[13 : 2] <= shl_ln_fu_740_p3[13 : 2];
        tmp_135_reg_6137 <= {{add_ln21_fu_2631_p2[62:4]}};
        tmp_176_reg_6142 <= {{sub_ln20_2_fu_2749_p2[61:60]}};
        tmp_177_reg_6147 <= {{sub_ln20_2_fu_2749_p2[57:56]}};
        tmp_178_reg_6153 <= {{sub_ln20_2_fu_2749_p2[53:52]}};
        tmp_179_reg_6159 <= {{sub_ln20_2_fu_2749_p2[49:48]}};
        tmp_180_reg_6165 <= {{sub_ln20_2_fu_2749_p2[45:44]}};
        tmp_181_reg_6171 <= {{sub_ln20_2_fu_2749_p2[41:40]}};
        tmp_182_reg_6177 <= {{sub_ln20_2_fu_2749_p2[37:36]}};
        tmp_183_reg_6183 <= {{sub_ln20_2_fu_2749_p2[33:32]}};
        tmp_184_reg_6189 <= {{sub_ln20_2_fu_2749_p2[29:28]}};
        tmp_185_reg_6195 <= {{sub_ln20_2_fu_2749_p2[25:24]}};
        tmp_186_reg_6201 <= {{sub_ln20_2_fu_2749_p2[21:20]}};
        tmp_187_reg_6207 <= {{sub_ln20_2_fu_2749_p2[17:16]}};
        tmp_188_reg_6213 <= {{sub_ln20_2_fu_2749_p2[13:12]}};
        tmp_189_reg_6219 <= {{sub_ln20_2_fu_2749_p2[9:8]}};
        tmp_190_reg_6225 <= {{sub_ln20_2_fu_2749_p2[5:4]}};
        tmp_191_reg_6237 <= {{sub_ln20_2_fu_2749_p2[63:62]}};
        tmp_192_reg_6242 <= {{sub_ln20_2_fu_2749_p2[59:58]}};
        tmp_193_reg_6248 <= {{sub_ln20_2_fu_2749_p2[55:54]}};
        tmp_194_reg_6254 <= {{sub_ln20_2_fu_2749_p2[51:50]}};
        tmp_195_reg_6260 <= {{sub_ln20_2_fu_2749_p2[47:46]}};
        tmp_196_reg_6266 <= {{sub_ln20_2_fu_2749_p2[43:42]}};
        tmp_197_reg_6272 <= {{sub_ln20_2_fu_2749_p2[39:38]}};
        tmp_198_reg_6278 <= {{sub_ln20_2_fu_2749_p2[35:34]}};
        tmp_199_reg_6284 <= {{sub_ln20_2_fu_2749_p2[31:30]}};
        tmp_200_reg_6290 <= {{sub_ln20_2_fu_2749_p2[27:26]}};
        tmp_201_reg_6296 <= {{sub_ln20_2_fu_2749_p2[23:22]}};
        tmp_202_reg_6302 <= {{sub_ln20_2_fu_2749_p2[19:18]}};
        tmp_203_reg_6308 <= {{sub_ln20_2_fu_2749_p2[15:14]}};
        tmp_204_reg_6314 <= {{sub_ln20_2_fu_2749_p2[11:10]}};
        tmp_205_reg_6320 <= {{sub_ln20_2_fu_2749_p2[7:6]}};
        tmp_206_reg_6326 <= {{sub_ln20_2_fu_2749_p2[3:2]}};
        tmp_248_reg_6332 <= {{sub_ln20_3_fu_3170_p2[61:60]}};
        tmp_249_reg_6337 <= {{sub_ln20_3_fu_3170_p2[57:56]}};
        tmp_250_reg_6343 <= {{sub_ln20_3_fu_3170_p2[53:52]}};
        tmp_251_reg_6349 <= {{sub_ln20_3_fu_3170_p2[49:48]}};
        tmp_252_reg_6355 <= {{sub_ln20_3_fu_3170_p2[45:44]}};
        tmp_253_reg_6361 <= {{sub_ln20_3_fu_3170_p2[41:40]}};
        tmp_254_reg_6367 <= {{sub_ln20_3_fu_3170_p2[37:36]}};
        tmp_255_reg_6373 <= {{sub_ln20_3_fu_3170_p2[33:32]}};
        tmp_256_reg_6379 <= {{sub_ln20_3_fu_3170_p2[29:28]}};
        tmp_257_reg_6385 <= {{sub_ln20_3_fu_3170_p2[25:24]}};
        tmp_258_reg_6391 <= {{sub_ln20_3_fu_3170_p2[21:20]}};
        tmp_259_reg_6397 <= {{sub_ln20_3_fu_3170_p2[17:16]}};
        tmp_260_reg_6403 <= {{sub_ln20_3_fu_3170_p2[13:12]}};
        tmp_261_reg_6409 <= {{sub_ln20_3_fu_3170_p2[9:8]}};
        tmp_262_reg_6415 <= {{sub_ln20_3_fu_3170_p2[5:4]}};
        tmp_263_reg_6427 <= {{sub_ln20_3_fu_3170_p2[63:62]}};
        tmp_264_reg_6432 <= {{sub_ln20_3_fu_3170_p2[59:58]}};
        tmp_265_reg_6438 <= {{sub_ln20_3_fu_3170_p2[55:54]}};
        tmp_266_reg_6444 <= {{sub_ln20_3_fu_3170_p2[51:50]}};
        tmp_267_reg_6450 <= {{sub_ln20_3_fu_3170_p2[47:46]}};
        tmp_268_reg_6456 <= {{sub_ln20_3_fu_3170_p2[43:42]}};
        tmp_269_reg_6462 <= {{sub_ln20_3_fu_3170_p2[39:38]}};
        tmp_270_reg_6468 <= {{sub_ln20_3_fu_3170_p2[35:34]}};
        tmp_271_reg_6474 <= {{sub_ln20_3_fu_3170_p2[31:30]}};
        tmp_272_reg_6480 <= {{sub_ln20_3_fu_3170_p2[27:26]}};
        tmp_273_reg_6486 <= {{sub_ln20_3_fu_3170_p2[23:22]}};
        tmp_274_reg_6492 <= {{sub_ln20_3_fu_3170_p2[19:18]}};
        tmp_275_reg_6498 <= {{sub_ln20_3_fu_3170_p2[15:14]}};
        tmp_276_reg_6504 <= {{sub_ln20_3_fu_3170_p2[11:10]}};
        tmp_277_reg_6510 <= {{sub_ln20_3_fu_3170_p2[7:6]}};
        tmp_278_reg_6516 <= {{sub_ln20_3_fu_3170_p2[3:2]}};
        tmp_63_reg_6122 <= {{add_ln21_1_fu_2397_p2[62:4]}};
        trunc_ln21_2_reg_6231 <= trunc_ln21_2_fu_2904_p1;
        trunc_ln21_3_reg_6421 <= trunc_ln21_3_fu_3326_p1;
        trunc_ln25_4_reg_6801 <= trunc_ln25_4_fu_4674_p1;
        trunc_ln25_5_reg_6806 <= {{add_ln24_2_fu_4669_p2[38:32]}};
        trunc_ln25_6_reg_6811 <= trunc_ln25_6_fu_4696_p1;
        trunc_ln25_7_reg_6816 <= {{add_ln24_3_fu_4691_p2[38:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln18_2_reg_6614 <= add_ln18_2_fu_3860_p2;
        add_ln18_3_reg_6624 <= add_ln18_3_fu_4088_p2;
        add_ln26_1_reg_6832 <= add_ln26_1_fu_4718_p2;
        add_ln26_2_reg_6837 <= add_ln26_2_fu_4722_p2;
        dists_0_3_out_load_reg_6821 <= ap_sig_allocacmp_dists_0_3_out_load;
        labels_1_reg_6827 <= training_labels_q0;
        max_dist_reg_6842 <= max_dist_fu_4732_p3;
        tmp_136_reg_6568 <= {{add_ln22_1_fu_3575_p2[51:48]}};
        tmp_137_reg_6574 <= {{add_ln22_1_fu_3575_p2[43:40]}};
        tmp_138_reg_6580 <= {{add_ln22_1_fu_3575_p2[35:32]}};
        tmp_139_reg_6586 <= {{add_ln22_1_fu_3575_p2[27:24]}};
        tmp_140_reg_6592 <= {{add_ln22_1_fu_3575_p2[19:16]}};
        tmp_141_reg_6598 <= {{add_ln22_1_fu_3575_p2[11:8]}};
        tmp_142_reg_6609 <= {{add_ln22_1_fu_3575_p2[59:56]}};
        tmp_207_reg_6619 <= {{add_ln21_2_fu_3866_p2[62:4]}};
        tmp_279_reg_6629 <= {{add_ln21_3_fu_4094_p2[62:4]}};
        tmp_64_reg_6522 <= {{add_ln22_fu_3493_p2[51:48]}};
        tmp_65_reg_6528 <= {{add_ln22_fu_3493_p2[43:40]}};
        tmp_66_reg_6534 <= {{add_ln22_fu_3493_p2[35:32]}};
        tmp_67_reg_6540 <= {{add_ln22_fu_3493_p2[27:24]}};
        tmp_68_reg_6546 <= {{add_ln22_fu_3493_p2[19:16]}};
        tmp_69_reg_6552 <= {{add_ln22_fu_3493_p2[11:8]}};
        tmp_70_reg_6563 <= {{add_ln22_fu_3493_p2[59:56]}};
        trunc_ln18_2_reg_6604 <= trunc_ln18_2_fu_3640_p1;
        trunc_ln18_reg_6558 <= trunc_ln18_fu_3558_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln36_1_reg_6858 <= add_ln36_1_fu_4762_p2;
        add_ln36_reg_6853 <= add_ln36_fu_4756_p2;
        diff_reg_5092 <= diff_fu_816_p2;
        dists_1_3_out_load_reg_6847 <= dists_1_3_out_i;
        icmp_ln45_1_reg_6863 <= icmp_ln45_1_fu_4771_p2;
        max_dist_1_reg_6868 <= max_dist_1_fu_4777_p3;
        tmp_10_reg_5132 <= diff_fu_816_p2[32'd49];
        tmp_11_reg_5137 <= diff_fu_816_p2[32'd47];
        tmp_12_reg_5142 <= diff_fu_816_p2[32'd45];
        tmp_13_reg_5147 <= diff_fu_816_p2[32'd43];
        tmp_143_reg_6649 <= {{add_ln23_1_fu_4258_p2[53:16]}};
        tmp_14_reg_5152 <= diff_fu_816_p2[32'd41];
        tmp_15_reg_5157 <= diff_fu_816_p2[32'd39];
        tmp_16_reg_5162 <= diff_fu_816_p2[32'd37];
        tmp_17_reg_5167 <= diff_fu_816_p2[32'd35];
        tmp_18_reg_5172 <= diff_fu_816_p2[32'd33];
        tmp_19_reg_5177 <= diff_fu_816_p2[32'd31];
        tmp_208_reg_6654 <= {{add_ln22_2_fu_4281_p2[51:48]}};
        tmp_209_reg_6660 <= {{add_ln22_2_fu_4281_p2[43:40]}};
        tmp_20_reg_5182 <= diff_fu_816_p2[32'd29];
        tmp_210_reg_6666 <= {{add_ln22_2_fu_4281_p2[35:32]}};
        tmp_211_reg_6672 <= {{add_ln22_2_fu_4281_p2[27:24]}};
        tmp_212_reg_6678 <= {{add_ln22_2_fu_4281_p2[19:16]}};
        tmp_213_reg_6684 <= {{add_ln22_2_fu_4281_p2[11:8]}};
        tmp_214_reg_6695 <= {{add_ln22_2_fu_4281_p2[59:56]}};
        tmp_21_reg_5187 <= diff_fu_816_p2[32'd27];
        tmp_22_reg_5192 <= diff_fu_816_p2[32'd25];
        tmp_23_reg_5197 <= diff_fu_816_p2[32'd23];
        tmp_24_reg_5202 <= diff_fu_816_p2[32'd21];
        tmp_25_reg_5207 <= diff_fu_816_p2[32'd19];
        tmp_26_reg_5212 <= diff_fu_816_p2[32'd17];
        tmp_27_reg_5217 <= diff_fu_816_p2[32'd15];
        tmp_280_reg_6700 <= {{add_ln22_3_fu_4363_p2[51:48]}};
        tmp_281_reg_6706 <= {{add_ln22_3_fu_4363_p2[43:40]}};
        tmp_282_reg_6712 <= {{add_ln22_3_fu_4363_p2[35:32]}};
        tmp_283_reg_6718 <= {{add_ln22_3_fu_4363_p2[27:24]}};
        tmp_284_reg_6724 <= {{add_ln22_3_fu_4363_p2[19:16]}};
        tmp_285_reg_6730 <= {{add_ln22_3_fu_4363_p2[11:8]}};
        tmp_286_reg_6741 <= {{add_ln22_3_fu_4363_p2[59:56]}};
        tmp_28_reg_5222 <= diff_fu_816_p2[32'd13];
        tmp_29_reg_5227 <= diff_fu_816_p2[32'd11];
        tmp_30_reg_5232 <= diff_fu_816_p2[32'd9];
        tmp_31_reg_5237 <= diff_fu_816_p2[32'd7];
        tmp_32_reg_5242 <= diff_fu_816_p2[32'd5];
        tmp_33_reg_5247 <= diff_fu_816_p2[32'd3];
        tmp_49_reg_5252 <= diff_fu_816_p2[32'd1];
        tmp_4_reg_5102 <= diff_fu_816_p2[32'd61];
        tmp_5_reg_5107 <= diff_fu_816_p2[32'd59];
        tmp_6_reg_5112 <= diff_fu_816_p2[32'd57];
        tmp_71_reg_6639 <= {{add_ln23_fu_4174_p2[53:16]}};
        tmp_7_reg_5117 <= diff_fu_816_p2[32'd55];
        tmp_8_reg_5122 <= diff_fu_816_p2[32'd53];
        tmp_9_reg_5127 <= diff_fu_816_p2[32'd51];
        tmp_reg_5097 <= diff_fu_816_p2[32'd63];
        trunc_ln18_1_reg_6634 <= trunc_ln18_1_fu_4180_p1;
        trunc_ln18_3_reg_6644 <= trunc_ln18_3_fu_4264_p1;
        trunc_ln18_4_reg_6690 <= trunc_ln18_4_fu_4346_p1;
        trunc_ln18_6_reg_6736 <= trunc_ln18_6_fu_4428_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        diff_2_reg_5797 <= diff_2_fu_1925_p2;
        dists_0_reg_6881 <= dists_0_fu_4795_p2;
        dists_2_3_out_load_reg_6874 <= dists_2_3_out_i;
        icmp_ln45_2_reg_6886 <= icmp_ln45_2_fu_4801_p2;
        select_ln45_2_reg_6891 <= select_ln45_2_fu_4819_p3;
        tmp_104_reg_5607 <= {{sub_ln20_1_fu_1605_p2[61:60]}};
        tmp_105_reg_5612 <= {{sub_ln20_1_fu_1605_p2[57:56]}};
        tmp_106_reg_5618 <= {{sub_ln20_1_fu_1605_p2[53:52]}};
        tmp_107_reg_5624 <= {{sub_ln20_1_fu_1605_p2[49:48]}};
        tmp_108_reg_5630 <= {{sub_ln20_1_fu_1605_p2[45:44]}};
        tmp_109_reg_5636 <= {{sub_ln20_1_fu_1605_p2[41:40]}};
        tmp_110_reg_5642 <= {{sub_ln20_1_fu_1605_p2[37:36]}};
        tmp_111_reg_5648 <= {{sub_ln20_1_fu_1605_p2[33:32]}};
        tmp_112_reg_5654 <= {{sub_ln20_1_fu_1605_p2[29:28]}};
        tmp_113_reg_5660 <= {{sub_ln20_1_fu_1605_p2[25:24]}};
        tmp_114_reg_5666 <= {{sub_ln20_1_fu_1605_p2[21:20]}};
        tmp_115_reg_5672 <= {{sub_ln20_1_fu_1605_p2[17:16]}};
        tmp_116_reg_5678 <= {{sub_ln20_1_fu_1605_p2[13:12]}};
        tmp_117_reg_5684 <= {{sub_ln20_1_fu_1605_p2[9:8]}};
        tmp_118_reg_5690 <= {{sub_ln20_1_fu_1605_p2[5:4]}};
        tmp_119_reg_5702 <= {{sub_ln20_1_fu_1605_p2[63:62]}};
        tmp_120_reg_5707 <= {{sub_ln20_1_fu_1605_p2[59:58]}};
        tmp_121_reg_5713 <= {{sub_ln20_1_fu_1605_p2[55:54]}};
        tmp_122_reg_5719 <= {{sub_ln20_1_fu_1605_p2[51:50]}};
        tmp_123_reg_5725 <= {{sub_ln20_1_fu_1605_p2[47:46]}};
        tmp_124_reg_5731 <= {{sub_ln20_1_fu_1605_p2[43:42]}};
        tmp_125_reg_5737 <= {{sub_ln20_1_fu_1605_p2[39:38]}};
        tmp_126_reg_5743 <= {{sub_ln20_1_fu_1605_p2[35:34]}};
        tmp_127_reg_5749 <= {{sub_ln20_1_fu_1605_p2[31:30]}};
        tmp_128_reg_5755 <= {{sub_ln20_1_fu_1605_p2[27:26]}};
        tmp_129_reg_5761 <= {{sub_ln20_1_fu_1605_p2[23:22]}};
        tmp_130_reg_5767 <= {{sub_ln20_1_fu_1605_p2[19:18]}};
        tmp_131_reg_5773 <= {{sub_ln20_1_fu_1605_p2[15:14]}};
        tmp_132_reg_5779 <= {{sub_ln20_1_fu_1605_p2[11:10]}};
        tmp_133_reg_5785 <= {{sub_ln20_1_fu_1605_p2[7:6]}};
        tmp_134_reg_5791 <= {{sub_ln20_1_fu_1605_p2[3:2]}};
        tmp_144_reg_5802 <= diff_2_fu_1925_p2[32'd63];
        tmp_145_reg_5807 <= diff_2_fu_1925_p2[32'd61];
        tmp_146_reg_5812 <= diff_2_fu_1925_p2[32'd59];
        tmp_147_reg_5817 <= diff_2_fu_1925_p2[32'd57];
        tmp_148_reg_5822 <= diff_2_fu_1925_p2[32'd55];
        tmp_149_reg_5827 <= diff_2_fu_1925_p2[32'd53];
        tmp_150_reg_5832 <= diff_2_fu_1925_p2[32'd51];
        tmp_151_reg_5837 <= diff_2_fu_1925_p2[32'd49];
        tmp_152_reg_5842 <= diff_2_fu_1925_p2[32'd47];
        tmp_153_reg_5847 <= diff_2_fu_1925_p2[32'd45];
        tmp_154_reg_5852 <= diff_2_fu_1925_p2[32'd43];
        tmp_155_reg_5857 <= diff_2_fu_1925_p2[32'd41];
        tmp_156_reg_5862 <= diff_2_fu_1925_p2[32'd39];
        tmp_157_reg_5867 <= diff_2_fu_1925_p2[32'd37];
        tmp_158_reg_5872 <= diff_2_fu_1925_p2[32'd35];
        tmp_159_reg_5877 <= diff_2_fu_1925_p2[32'd33];
        tmp_160_reg_5882 <= diff_2_fu_1925_p2[32'd31];
        tmp_161_reg_5887 <= diff_2_fu_1925_p2[32'd29];
        tmp_162_reg_5892 <= diff_2_fu_1925_p2[32'd27];
        tmp_163_reg_5897 <= diff_2_fu_1925_p2[32'd25];
        tmp_164_reg_5902 <= diff_2_fu_1925_p2[32'd23];
        tmp_165_reg_5907 <= diff_2_fu_1925_p2[32'd21];
        tmp_166_reg_5912 <= diff_2_fu_1925_p2[32'd19];
        tmp_167_reg_5917 <= diff_2_fu_1925_p2[32'd17];
        tmp_168_reg_5922 <= diff_2_fu_1925_p2[32'd15];
        tmp_169_reg_5927 <= diff_2_fu_1925_p2[32'd13];
        tmp_170_reg_5932 <= diff_2_fu_1925_p2[32'd11];
        tmp_171_reg_5937 <= diff_2_fu_1925_p2[32'd9];
        tmp_172_reg_5942 <= diff_2_fu_1925_p2[32'd7];
        tmp_173_reg_5947 <= diff_2_fu_1925_p2[32'd5];
        tmp_174_reg_5952 <= diff_2_fu_1925_p2[32'd3];
        tmp_175_reg_5957 <= diff_2_fu_1925_p2[32'd1];
        tmp_215_reg_6771 <= {{add_ln23_2_fu_4550_p2[53:16]}};
        tmp_287_reg_6781 <= {{add_ln23_3_fu_4634_p2[53:16]}};
        tmp_2_reg_5422 <= {{sub_ln20_fu_1184_p2[57:56]}};
        tmp_34_reg_5434 <= {{sub_ln20_fu_1184_p2[49:48]}};
        tmp_35_reg_5440 <= {{sub_ln20_fu_1184_p2[45:44]}};
        tmp_36_reg_5446 <= {{sub_ln20_fu_1184_p2[41:40]}};
        tmp_37_reg_5452 <= {{sub_ln20_fu_1184_p2[37:36]}};
        tmp_38_reg_5458 <= {{sub_ln20_fu_1184_p2[33:32]}};
        tmp_39_reg_5464 <= {{sub_ln20_fu_1184_p2[29:28]}};
        tmp_3_reg_5428 <= {{sub_ln20_fu_1184_p2[53:52]}};
        tmp_40_reg_5470 <= {{sub_ln20_fu_1184_p2[25:24]}};
        tmp_41_reg_5476 <= {{sub_ln20_fu_1184_p2[21:20]}};
        tmp_42_reg_5482 <= {{sub_ln20_fu_1184_p2[17:16]}};
        tmp_43_reg_5488 <= {{sub_ln20_fu_1184_p2[13:12]}};
        tmp_44_reg_5494 <= {{sub_ln20_fu_1184_p2[9:8]}};
        tmp_45_reg_5500 <= {{sub_ln20_fu_1184_p2[5:4]}};
        tmp_46_reg_5512 <= {{sub_ln20_fu_1184_p2[63:62]}};
        tmp_47_reg_5517 <= {{sub_ln20_fu_1184_p2[59:58]}};
        tmp_48_reg_5523 <= {{sub_ln20_fu_1184_p2[55:54]}};
        tmp_50_reg_5529 <= {{sub_ln20_fu_1184_p2[51:50]}};
        tmp_51_reg_5535 <= {{sub_ln20_fu_1184_p2[47:46]}};
        tmp_52_reg_5541 <= {{sub_ln20_fu_1184_p2[43:42]}};
        tmp_53_reg_5547 <= {{sub_ln20_fu_1184_p2[39:38]}};
        tmp_54_reg_5553 <= {{sub_ln20_fu_1184_p2[35:34]}};
        tmp_55_reg_5559 <= {{sub_ln20_fu_1184_p2[31:30]}};
        tmp_56_reg_5565 <= {{sub_ln20_fu_1184_p2[27:26]}};
        tmp_57_reg_5571 <= {{sub_ln20_fu_1184_p2[23:22]}};
        tmp_58_reg_5577 <= {{sub_ln20_fu_1184_p2[19:18]}};
        tmp_59_reg_5583 <= {{sub_ln20_fu_1184_p2[15:14]}};
        tmp_60_reg_5589 <= {{sub_ln20_fu_1184_p2[11:10]}};
        tmp_61_reg_5595 <= {{sub_ln20_fu_1184_p2[7:6]}};
        tmp_62_reg_5601 <= {{sub_ln20_fu_1184_p2[3:2]}};
        tmp_s_reg_5417 <= {{sub_ln20_fu_1184_p2[61:60]}};
        trunc_ln18_5_reg_6766 <= trunc_ln18_5_fu_4556_p1;
        trunc_ln18_7_reg_6776 <= trunc_ln18_7_fu_4640_p1;
        trunc_ln21_1_reg_5696 <= trunc_ln21_1_fu_1761_p1;
        trunc_ln21_reg_5506 <= trunc_ln21_fu_1339_p1;
        trunc_ln25_1_reg_6751 <= {{add_ln24_fu_4445_p2[38:32]}};
        trunc_ln25_2_reg_6756 <= trunc_ln25_2_fu_4472_p1;
        trunc_ln25_3_reg_6761 <= {{add_ln24_1_fu_4467_p2[38:32]}};
        trunc_ln25_reg_6746 <= trunc_ln25_fu_4450_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_414 <= training_samples_q1;
        reg_423 <= training_samples_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_689 <= grp_fu_427_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        test_set_load_2_reg_5072 <= test_set_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_100_reg_5397 <= grp_fu_427_p2[32'd7];
        tmp_101_reg_5402 <= grp_fu_427_p2[32'd5];
        tmp_102_reg_5407 <= grp_fu_427_p2[32'd3];
        tmp_103_reg_5412 <= grp_fu_427_p2[32'd1];
        tmp_72_reg_5257 <= grp_fu_427_p2[32'd63];
        tmp_73_reg_5262 <= grp_fu_427_p2[32'd61];
        tmp_74_reg_5267 <= grp_fu_427_p2[32'd59];
        tmp_75_reg_5272 <= grp_fu_427_p2[32'd57];
        tmp_76_reg_5277 <= grp_fu_427_p2[32'd55];
        tmp_77_reg_5282 <= grp_fu_427_p2[32'd53];
        tmp_78_reg_5287 <= grp_fu_427_p2[32'd51];
        tmp_79_reg_5292 <= grp_fu_427_p2[32'd49];
        tmp_80_reg_5297 <= grp_fu_427_p2[32'd47];
        tmp_81_reg_5302 <= grp_fu_427_p2[32'd45];
        tmp_82_reg_5307 <= grp_fu_427_p2[32'd43];
        tmp_83_reg_5312 <= grp_fu_427_p2[32'd41];
        tmp_84_reg_5317 <= grp_fu_427_p2[32'd39];
        tmp_85_reg_5322 <= grp_fu_427_p2[32'd37];
        tmp_86_reg_5327 <= grp_fu_427_p2[32'd35];
        tmp_87_reg_5332 <= grp_fu_427_p2[32'd33];
        tmp_88_reg_5337 <= grp_fu_427_p2[32'd31];
        tmp_89_reg_5342 <= grp_fu_427_p2[32'd29];
        tmp_90_reg_5347 <= grp_fu_427_p2[32'd27];
        tmp_91_reg_5352 <= grp_fu_427_p2[32'd25];
        tmp_92_reg_5357 <= grp_fu_427_p2[32'd23];
        tmp_93_reg_5362 <= grp_fu_427_p2[32'd21];
        tmp_94_reg_5367 <= grp_fu_427_p2[32'd19];
        tmp_95_reg_5372 <= grp_fu_427_p2[32'd17];
        tmp_96_reg_5377 <= grp_fu_427_p2[32'd15];
        tmp_97_reg_5382 <= grp_fu_427_p2[32'd13];
        tmp_98_reg_5387 <= grp_fu_427_p2[32'd11];
        tmp_99_reg_5392 <= grp_fu_427_p2[32'd9];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_216_reg_5962 <= grp_fu_427_p2[32'd63];
        tmp_217_reg_5967 <= grp_fu_427_p2[32'd61];
        tmp_218_reg_5972 <= grp_fu_427_p2[32'd59];
        tmp_219_reg_5977 <= grp_fu_427_p2[32'd57];
        tmp_220_reg_5982 <= grp_fu_427_p2[32'd55];
        tmp_221_reg_5987 <= grp_fu_427_p2[32'd53];
        tmp_222_reg_5992 <= grp_fu_427_p2[32'd51];
        tmp_223_reg_5997 <= grp_fu_427_p2[32'd49];
        tmp_224_reg_6002 <= grp_fu_427_p2[32'd47];
        tmp_225_reg_6007 <= grp_fu_427_p2[32'd45];
        tmp_226_reg_6012 <= grp_fu_427_p2[32'd43];
        tmp_227_reg_6017 <= grp_fu_427_p2[32'd41];
        tmp_228_reg_6022 <= grp_fu_427_p2[32'd39];
        tmp_229_reg_6027 <= grp_fu_427_p2[32'd37];
        tmp_230_reg_6032 <= grp_fu_427_p2[32'd35];
        tmp_231_reg_6037 <= grp_fu_427_p2[32'd33];
        tmp_232_reg_6042 <= grp_fu_427_p2[32'd31];
        tmp_233_reg_6047 <= grp_fu_427_p2[32'd29];
        tmp_234_reg_6052 <= grp_fu_427_p2[32'd27];
        tmp_235_reg_6057 <= grp_fu_427_p2[32'd25];
        tmp_236_reg_6062 <= grp_fu_427_p2[32'd23];
        tmp_237_reg_6067 <= grp_fu_427_p2[32'd21];
        tmp_238_reg_6072 <= grp_fu_427_p2[32'd19];
        tmp_239_reg_6077 <= grp_fu_427_p2[32'd17];
        tmp_240_reg_6082 <= grp_fu_427_p2[32'd15];
        tmp_241_reg_6087 <= grp_fu_427_p2[32'd13];
        tmp_242_reg_6092 <= grp_fu_427_p2[32'd11];
        tmp_243_reg_6097 <= grp_fu_427_p2[32'd9];
        tmp_244_reg_6102 <= grp_fu_427_p2[32'd7];
        tmp_245_reg_6107 <= grp_fu_427_p2[32'd5];
        tmp_246_reg_6112 <= grp_fu_427_p2[32'd3];
        tmp_247_reg_6117 <= grp_fu_427_p2[32'd1];
    end
end

always @ (*) begin
    if (((icmp_ln107_reg_5042 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln107_reg_5042_pp0_iter2_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter2_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_dists_0_3_out_load = dists_2_6_reg_6929;
    end else begin
        ap_sig_allocacmp_dists_0_3_out_load = dists_0_3_out_i;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i = 12'd0;
    end else begin
        ap_sig_allocacmp_i = i_1_fu_242;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dists_0_3_out_o = dists_0_1_reload;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dists_0_3_out_o = dists_2_6_reg_6929;
    end else begin
        dists_0_3_out_o = dists_0_3_out_i;
    end
end

always @ (*) begin
    if ((((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        dists_0_3_out_o_ap_vld = 1'b1;
    end else begin
        dists_0_3_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dists_1_3_out_o = dists_1_1_reload;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dists_1_3_out_o = dists_2_5_reg_6924;
    end else begin
        dists_1_3_out_o = dists_1_3_out_i;
    end
end

always @ (*) begin
    if ((((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        dists_1_3_out_o_ap_vld = 1'b1;
    end else begin
        dists_1_3_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dists_2_3_out_o = dists_2_1_reload;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dists_2_3_out_o = dists_2_4_reg_6919;
    end else begin
        dists_2_3_out_o = dists_2_3_out_i;
    end
end

always @ (*) begin
    if ((((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        dists_2_3_out_o_ap_vld = 1'b1;
    end else begin
        dists_2_3_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln107_reg_5042_pp0_iter2_reg == 1'd1))) begin
        labels_0_3_out_ap_vld = 1'b1;
    end else begin
        labels_0_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln107_reg_5042_pp0_iter2_reg == 1'd1))) begin
        labels_1_3_out_ap_vld = 1'b1;
    end else begin
        labels_1_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln107_reg_5042_pp0_iter2_reg == 1'd1))) begin
        labels_2_3_out_ap_vld = 1'b1;
    end else begin
        labels_2_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            test_set_address0 = zext_ln35_6_fu_801_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            test_set_address0 = zext_ln35_3_fu_781_p1;
        end else begin
            test_set_address0 = 'bx;
        end
    end else begin
        test_set_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        test_set_ce0 = 1'b1;
    end else begin
        test_set_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        test_set_ce1 = 1'b1;
    end else begin
        test_set_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_labels_ce0 = 1'b1;
    end else begin
        training_labels_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            training_samples_address0 = zext_ln35_7_fu_811_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            training_samples_address0 = zext_ln35_1_fu_770_p1;
        end else begin
            training_samples_address0 = 'bx;
        end
    end else begin
        training_samples_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            training_samples_address1 = zext_ln35_4_fu_791_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            training_samples_address1 = zext_ln108_fu_748_p1;
        end else begin
            training_samples_address1 = 'bx;
        end
    end else begin
        training_samples_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        training_samples_ce0 = 1'b1;
    end else begin
        training_samples_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        training_samples_ce1 = 1'b1;
    end else begin
        training_samples_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln107_fu_1077_p2 = (i_reg_5036 + 12'd1);

assign add_ln18_1_fu_2625_p2 = (and_ln21_3_cast_fu_2572_p31 + and_ln21_2_cast_fu_2469_p31);

assign add_ln18_2_fu_3860_p2 = (and_ln21_5_cast_fu_3807_p31 + and_ln21_4_cast_fu_3704_p31);

assign add_ln18_3_fu_4088_p2 = (and_ln21_7_cast_fu_4035_p31 + and_ln21_6_cast_fu_3932_p31);

assign add_ln18_fu_2413_p2 = (and_ln1_cast_fu_2241_p31 + and_ln21_1_cast_fu_2344_p31);

assign add_ln21_1_fu_2397_p2 = (zext_ln21_1_fu_2393_p1 + zext_ln21_fu_2290_p1);

assign add_ln21_2_fu_3866_p2 = (zext_ln21_5_fu_3856_p1 + zext_ln21_4_fu_3753_p1);

assign add_ln21_3_fu_4094_p2 = (zext_ln21_7_fu_4084_p1 + zext_ln21_6_fu_3981_p1);

assign add_ln21_fu_2631_p2 = (zext_ln21_3_fu_2621_p1 + zext_ln21_2_fu_2518_p1);

assign add_ln22_1_fu_3575_p2 = (zext_ln22_1_fu_3572_p1 + add_ln18_1_reg_6132);

assign add_ln22_2_fu_4281_p2 = (zext_ln22_2_fu_4278_p1 + add_ln18_2_reg_6614);

assign add_ln22_3_fu_4363_p2 = (zext_ln22_3_fu_4360_p1 + add_ln18_3_reg_6624);

assign add_ln22_fu_3493_p2 = (add_ln18_reg_6127 + zext_ln22_fu_3490_p1);

assign add_ln23_1_fu_4258_p2 = (zext_ln23_3_fu_4248_p1 + zext_ln23_2_fu_4219_p1);

assign add_ln23_2_fu_4550_p2 = (zext_ln23_5_fu_4540_p1 + zext_ln23_4_fu_4511_p1);

assign add_ln23_3_fu_4634_p2 = (zext_ln23_7_fu_4624_p1 + zext_ln23_6_fu_4595_p1);

assign add_ln23_4_fu_4168_p2 = (and_ln3_fu_4139_p15 + and_ln2_fu_4110_p15);

assign add_ln23_5_fu_4252_p2 = (and_ln23_1_fu_4223_p15 + and_ln18_1_fu_4194_p15);

assign add_ln23_6_fu_4544_p2 = (and_ln23_2_fu_4515_p15 + and_ln18_2_fu_4486_p15);

assign add_ln23_7_fu_4628_p2 = (and_ln23_3_fu_4599_p15 + and_ln18_3_fu_4570_p15);

assign add_ln23_fu_4174_p2 = (zext_ln23_1_fu_4164_p1 + zext_ln23_fu_4135_p1);

assign add_ln24_1_fu_4467_p2 = (zext_ln24_1_fu_4464_p1 + trunc_ln18_3_reg_6644);

assign add_ln24_2_fu_4669_p2 = (zext_ln24_2_fu_4666_p1 + trunc_ln18_5_reg_6766);

assign add_ln24_3_fu_4691_p2 = (zext_ln24_3_fu_4688_p1 + trunc_ln18_7_reg_6776);

assign add_ln24_fu_4445_p2 = (zext_ln24_fu_4442_p1 + trunc_ln18_1_reg_6634);

assign add_ln26_1_fu_4718_p2 = (trunc_ln25_5_reg_6806 + trunc_ln25_4_reg_6801);

assign add_ln26_2_fu_4722_p2 = (trunc_ln25_7_reg_6816 + trunc_ln25_6_reg_6811);

assign add_ln26_fu_4662_p2 = (trunc_ln25_3_reg_6761 + trunc_ln25_2_reg_6756);

assign add_ln36_1_fu_4762_p2 = (zext_ln35_2_fu_4747_p1 + zext_ln36_fu_4753_p1);

assign add_ln36_fu_4756_p2 = (zext_ln31_fu_4744_p1 + zext_ln35_5_fu_4750_p1);

assign and_ln18_1_fu_4194_p15 = {{{{{{{{{{{{{{{{{{{{{{{{{{1'd0}, {tmp_136_reg_6568}}}, {4'd0}}}, {tmp_137_reg_6574}}}, {4'd0}}}, {tmp_138_reg_6580}}}, {4'd0}}}, {tmp_139_reg_6586}}}, {4'd0}}}, {tmp_140_reg_6592}}}, {4'd0}}}, {tmp_141_reg_6598}}}, {4'd0}}}, {trunc_ln18_2_reg_6604}};

assign and_ln18_2_fu_4486_p15 = {{{{{{{{{{{{{{{{{{{{{{{{{{1'd0}, {tmp_208_reg_6654}}}, {4'd0}}}, {tmp_209_reg_6660}}}, {4'd0}}}, {tmp_210_reg_6666}}}, {4'd0}}}, {tmp_211_reg_6672}}}, {4'd0}}}, {tmp_212_reg_6678}}}, {4'd0}}}, {tmp_213_reg_6684}}}, {4'd0}}}, {trunc_ln18_4_reg_6690}};

assign and_ln18_3_fu_4570_p15 = {{{{{{{{{{{{{{{{{{{{{{{{{{1'd0}, {tmp_280_reg_6700}}}, {4'd0}}}, {tmp_281_reg_6706}}}, {4'd0}}}, {tmp_282_reg_6712}}}, {4'd0}}}, {tmp_283_reg_6718}}}, {4'd0}}}, {tmp_284_reg_6724}}}, {4'd0}}}, {tmp_285_reg_6730}}}, {4'd0}}}, {trunc_ln18_6_reg_6736}};

assign and_ln1_cast_fu_2241_p31 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{2'd0}, {tmp_2_reg_5422}}}, {2'd0}}}, {tmp_3_reg_5428}}}, {2'd0}}}, {tmp_34_reg_5434}}}, {2'd0}}}, {tmp_35_reg_5440}}}, {2'd0}}}, {tmp_36_reg_5446}}}, {2'd0}}}, {tmp_37_reg_5452}}}, {2'd0}}}, {tmp_38_reg_5458}}}, {2'd0}}}, {tmp_39_reg_5464}}}, {2'd0}}}, {tmp_40_reg_5470}}}, {2'd0}}}, {tmp_41_reg_5476}}}, {2'd0}}}, {tmp_42_reg_5482}}}, {2'd0}}}, {tmp_43_reg_5488}}}, {2'd0}}}, {tmp_44_reg_5494}}}, {2'd0}}}, {tmp_45_reg_5500}}}, {2'd0}}}, {trunc_ln21_reg_5506}};

assign and_ln1_fu_2191_p32 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_s_reg_5417}, {2'd0}}, {tmp_2_reg_5422}}, {2'd0}}, {tmp_3_reg_5428}}, {2'd0}}, {tmp_34_reg_5434}}, {2'd0}}, {tmp_35_reg_5440}}, {2'd0}}, {tmp_36_reg_5446}}, {2'd0}}, {tmp_37_reg_5452}}, {2'd0}}, {tmp_38_reg_5458}}, {2'd0}}, {tmp_39_reg_5464}}, {2'd0}}, {tmp_40_reg_5470}}, {2'd0}}, {tmp_41_reg_5476}}, {2'd0}}, {tmp_42_reg_5482}}, {2'd0}}, {tmp_43_reg_5488}}, {2'd0}}, {tmp_44_reg_5494}}, {2'd0}}, {tmp_45_reg_5500}}, {2'd0}}, {trunc_ln21_reg_5506}};

assign and_ln20_1_fu_1503_p64 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_72_reg_5257}, {1'd0}}, {tmp_73_reg_5262}}, {1'd0}}, {tmp_74_reg_5267}}, {1'd0}}, {tmp_75_reg_5272}}, {1'd0}}, {tmp_76_reg_5277}}, {1'd0}}, {tmp_77_reg_5282}}, {1'd0}}, {tmp_78_reg_5287}}, {1'd0}}, {tmp_79_reg_5292}}, {1'd0}}, {tmp_80_reg_5297}}, {1'd0}}, {tmp_81_reg_5302}}, {1'd0}}, {tmp_82_reg_5307}}, {1'd0}}, {tmp_83_reg_5312}}, {1'd0}}, {tmp_84_reg_5317}}, {1'd0}}, {tmp_85_reg_5322}}, {1'd0}}, {tmp_86_reg_5327}}, {1'd0}}, {tmp_87_reg_5332}}, {1'd0}}, {tmp_88_reg_5337}}, {1'd0}}, {tmp_89_reg_5342}}, {1'd0}}, {tmp_90_reg_5347}}, {1'd0}}, {tmp_91_reg_5352}}, {1'd0}}, {tmp_92_reg_5357}}, {1'd0}}, {tmp_93_reg_5362}}, {1'd0}}, {tmp_94_reg_5367}}, {1'd0}}, {tmp_95_reg_5372}}, {1'd0}}, {tmp_96_reg_5377}}, {1'd0}}, {tmp_97_reg_5382}}, {1'd0}}, {tmp_98_reg_5387}}, {1'd0}}, {tmp_99_reg_5392}}, {1'd0}}, {tmp_100_reg_5397}}, {1'd0}}, {tmp_101_reg_5402}}, {1'd0}}, {tmp_102_reg_5407}}, {1'd0}}, {tmp_103_reg_5412}};

assign and_ln20_2_fu_2647_p64 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_144_reg_5802}, {1'd0}}, {tmp_145_reg_5807}}, {1'd0}}, {tmp_146_reg_5812}}, {1'd0}}, {tmp_147_reg_5817}}, {1'd0}}, {tmp_148_reg_5822}}, {1'd0}}, {tmp_149_reg_5827}}, {1'd0}}, {tmp_150_reg_5832}}, {1'd0}}, {tmp_151_reg_5837}}, {1'd0}}, {tmp_152_reg_5842}}, {1'd0}}, {tmp_153_reg_5847}}, {1'd0}}, {tmp_154_reg_5852}}, {1'd0}}, {tmp_155_reg_5857}}, {1'd0}}, {tmp_156_reg_5862}}, {1'd0}}, {tmp_157_reg_5867}}, {1'd0}}, {tmp_158_reg_5872}}, {1'd0}}, {tmp_159_reg_5877}}, {1'd0}}, {tmp_160_reg_5882}}, {1'd0}}, {tmp_161_reg_5887}}, {1'd0}}, {tmp_162_reg_5892}}, {1'd0}}, {tmp_163_reg_5897}}, {1'd0}}, {tmp_164_reg_5902}}, {1'd0}}, {tmp_165_reg_5907}}, {1'd0}}, {tmp_166_reg_5912}}, {1'd0}}, {tmp_167_reg_5917}}, {1'd0}}, {tmp_168_reg_5922}}, {1'd0}}, {tmp_169_reg_5927}}, {1'd0}}, {tmp_170_reg_5932}}, {1'd0}}, {tmp_171_reg_5937}}, {1'd0}}, {tmp_172_reg_5942}}, {1'd0}}, {tmp_173_reg_5947}}, {1'd0}}, {tmp_174_reg_5952}}, {1'd0}}, {tmp_175_reg_5957}};

assign and_ln20_3_fu_3068_p64 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_216_reg_5962}, {1'd0}}, {tmp_217_reg_5967}}, {1'd0}}, {tmp_218_reg_5972}}, {1'd0}}, {tmp_219_reg_5977}}, {1'd0}}, {tmp_220_reg_5982}}, {1'd0}}, {tmp_221_reg_5987}}, {1'd0}}, {tmp_222_reg_5992}}, {1'd0}}, {tmp_223_reg_5997}}, {1'd0}}, {tmp_224_reg_6002}}, {1'd0}}, {tmp_225_reg_6007}}, {1'd0}}, {tmp_226_reg_6012}}, {1'd0}}, {tmp_227_reg_6017}}, {1'd0}}, {tmp_228_reg_6022}}, {1'd0}}, {tmp_229_reg_6027}}, {1'd0}}, {tmp_230_reg_6032}}, {1'd0}}, {tmp_231_reg_6037}}, {1'd0}}, {tmp_232_reg_6042}}, {1'd0}}, {tmp_233_reg_6047}}, {1'd0}}, {tmp_234_reg_6052}}, {1'd0}}, {tmp_235_reg_6057}}, {1'd0}}, {tmp_236_reg_6062}}, {1'd0}}, {tmp_237_reg_6067}}, {1'd0}}, {tmp_238_reg_6072}}, {1'd0}}, {tmp_239_reg_6077}}, {1'd0}}, {tmp_240_reg_6082}}, {1'd0}}, {tmp_241_reg_6087}}, {1'd0}}, {tmp_242_reg_6092}}, {1'd0}}, {tmp_243_reg_6097}}, {1'd0}}, {tmp_244_reg_6102}}, {1'd0}}, {tmp_245_reg_6107}}, {1'd0}}, {tmp_246_reg_6112}}, {1'd0}}, {tmp_247_reg_6117}};

assign and_ln21_1_cast_fu_2344_p31 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{2'd0}, {tmp_47_reg_5517}}}, {2'd0}}}, {tmp_48_reg_5523}}}, {2'd0}}}, {tmp_50_reg_5529}}}, {2'd0}}}, {tmp_51_reg_5535}}}, {2'd0}}}, {tmp_52_reg_5541}}}, {2'd0}}}, {tmp_53_reg_5547}}}, {2'd0}}}, {tmp_54_reg_5553}}}, {2'd0}}}, {tmp_55_reg_5559}}}, {2'd0}}}, {tmp_56_reg_5565}}}, {2'd0}}}, {tmp_57_reg_5571}}}, {2'd0}}}, {tmp_58_reg_5577}}}, {2'd0}}}, {tmp_59_reg_5583}}}, {2'd0}}}, {tmp_60_reg_5589}}}, {2'd0}}}, {tmp_61_reg_5595}}}, {2'd0}}}, {tmp_62_reg_5601}};

assign and_ln21_1_fu_2294_p32 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_46_reg_5512}, {2'd0}}, {tmp_47_reg_5517}}, {2'd0}}, {tmp_48_reg_5523}}, {2'd0}}, {tmp_50_reg_5529}}, {2'd0}}, {tmp_51_reg_5535}}, {2'd0}}, {tmp_52_reg_5541}}, {2'd0}}, {tmp_53_reg_5547}}, {2'd0}}, {tmp_54_reg_5553}}, {2'd0}}, {tmp_55_reg_5559}}, {2'd0}}, {tmp_56_reg_5565}}, {2'd0}}, {tmp_57_reg_5571}}, {2'd0}}, {tmp_58_reg_5577}}, {2'd0}}, {tmp_59_reg_5583}}, {2'd0}}, {tmp_60_reg_5589}}, {2'd0}}, {tmp_61_reg_5595}}, {2'd0}}, {tmp_62_reg_5601}};

assign and_ln21_2_cast_fu_2469_p31 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{2'd0}, {tmp_105_reg_5612}}}, {2'd0}}}, {tmp_106_reg_5618}}}, {2'd0}}}, {tmp_107_reg_5624}}}, {2'd0}}}, {tmp_108_reg_5630}}}, {2'd0}}}, {tmp_109_reg_5636}}}, {2'd0}}}, {tmp_110_reg_5642}}}, {2'd0}}}, {tmp_111_reg_5648}}}, {2'd0}}}, {tmp_112_reg_5654}}}, {2'd0}}}, {tmp_113_reg_5660}}}, {2'd0}}}, {tmp_114_reg_5666}}}, {2'd0}}}, {tmp_115_reg_5672}}}, {2'd0}}}, {tmp_116_reg_5678}}}, {2'd0}}}, {tmp_117_reg_5684}}}, {2'd0}}}, {tmp_118_reg_5690}}}, {2'd0}}}, {trunc_ln21_1_reg_5696}};

assign and_ln21_2_fu_2419_p32 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_104_reg_5607}, {2'd0}}, {tmp_105_reg_5612}}, {2'd0}}, {tmp_106_reg_5618}}, {2'd0}}, {tmp_107_reg_5624}}, {2'd0}}, {tmp_108_reg_5630}}, {2'd0}}, {tmp_109_reg_5636}}, {2'd0}}, {tmp_110_reg_5642}}, {2'd0}}, {tmp_111_reg_5648}}, {2'd0}}, {tmp_112_reg_5654}}, {2'd0}}, {tmp_113_reg_5660}}, {2'd0}}, {tmp_114_reg_5666}}, {2'd0}}, {tmp_115_reg_5672}}, {2'd0}}, {tmp_116_reg_5678}}, {2'd0}}, {tmp_117_reg_5684}}, {2'd0}}, {tmp_118_reg_5690}}, {2'd0}}, {trunc_ln21_1_reg_5696}};

assign and_ln21_3_cast_fu_2572_p31 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{2'd0}, {tmp_120_reg_5707}}}, {2'd0}}}, {tmp_121_reg_5713}}}, {2'd0}}}, {tmp_122_reg_5719}}}, {2'd0}}}, {tmp_123_reg_5725}}}, {2'd0}}}, {tmp_124_reg_5731}}}, {2'd0}}}, {tmp_125_reg_5737}}}, {2'd0}}}, {tmp_126_reg_5743}}}, {2'd0}}}, {tmp_127_reg_5749}}}, {2'd0}}}, {tmp_128_reg_5755}}}, {2'd0}}}, {tmp_129_reg_5761}}}, {2'd0}}}, {tmp_130_reg_5767}}}, {2'd0}}}, {tmp_131_reg_5773}}}, {2'd0}}}, {tmp_132_reg_5779}}}, {2'd0}}}, {tmp_133_reg_5785}}}, {2'd0}}}, {tmp_134_reg_5791}};

assign and_ln21_3_fu_2522_p32 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_119_reg_5702}, {2'd0}}, {tmp_120_reg_5707}}, {2'd0}}, {tmp_121_reg_5713}}, {2'd0}}, {tmp_122_reg_5719}}, {2'd0}}, {tmp_123_reg_5725}}, {2'd0}}, {tmp_124_reg_5731}}, {2'd0}}, {tmp_125_reg_5737}}, {2'd0}}, {tmp_126_reg_5743}}, {2'd0}}, {tmp_127_reg_5749}}, {2'd0}}, {tmp_128_reg_5755}}, {2'd0}}, {tmp_129_reg_5761}}, {2'd0}}, {tmp_130_reg_5767}}, {2'd0}}, {tmp_131_reg_5773}}, {2'd0}}, {tmp_132_reg_5779}}, {2'd0}}, {tmp_133_reg_5785}}, {2'd0}}, {tmp_134_reg_5791}};

assign and_ln21_4_cast_fu_3704_p31 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{2'd0}, {tmp_177_reg_6147}}}, {2'd0}}}, {tmp_178_reg_6153}}}, {2'd0}}}, {tmp_179_reg_6159}}}, {2'd0}}}, {tmp_180_reg_6165}}}, {2'd0}}}, {tmp_181_reg_6171}}}, {2'd0}}}, {tmp_182_reg_6177}}}, {2'd0}}}, {tmp_183_reg_6183}}}, {2'd0}}}, {tmp_184_reg_6189}}}, {2'd0}}}, {tmp_185_reg_6195}}}, {2'd0}}}, {tmp_186_reg_6201}}}, {2'd0}}}, {tmp_187_reg_6207}}}, {2'd0}}}, {tmp_188_reg_6213}}}, {2'd0}}}, {tmp_189_reg_6219}}}, {2'd0}}}, {tmp_190_reg_6225}}}, {2'd0}}}, {trunc_ln21_2_reg_6231}};

assign and_ln21_4_fu_3654_p32 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_176_reg_6142}, {2'd0}}, {tmp_177_reg_6147}}, {2'd0}}, {tmp_178_reg_6153}}, {2'd0}}, {tmp_179_reg_6159}}, {2'd0}}, {tmp_180_reg_6165}}, {2'd0}}, {tmp_181_reg_6171}}, {2'd0}}, {tmp_182_reg_6177}}, {2'd0}}, {tmp_183_reg_6183}}, {2'd0}}, {tmp_184_reg_6189}}, {2'd0}}, {tmp_185_reg_6195}}, {2'd0}}, {tmp_186_reg_6201}}, {2'd0}}, {tmp_187_reg_6207}}, {2'd0}}, {tmp_188_reg_6213}}, {2'd0}}, {tmp_189_reg_6219}}, {2'd0}}, {tmp_190_reg_6225}}, {2'd0}}, {trunc_ln21_2_reg_6231}};

assign and_ln21_5_cast_fu_3807_p31 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{2'd0}, {tmp_192_reg_6242}}}, {2'd0}}}, {tmp_193_reg_6248}}}, {2'd0}}}, {tmp_194_reg_6254}}}, {2'd0}}}, {tmp_195_reg_6260}}}, {2'd0}}}, {tmp_196_reg_6266}}}, {2'd0}}}, {tmp_197_reg_6272}}}, {2'd0}}}, {tmp_198_reg_6278}}}, {2'd0}}}, {tmp_199_reg_6284}}}, {2'd0}}}, {tmp_200_reg_6290}}}, {2'd0}}}, {tmp_201_reg_6296}}}, {2'd0}}}, {tmp_202_reg_6302}}}, {2'd0}}}, {tmp_203_reg_6308}}}, {2'd0}}}, {tmp_204_reg_6314}}}, {2'd0}}}, {tmp_205_reg_6320}}}, {2'd0}}}, {tmp_206_reg_6326}};

assign and_ln21_5_fu_3757_p32 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_191_reg_6237}, {2'd0}}, {tmp_192_reg_6242}}, {2'd0}}, {tmp_193_reg_6248}}, {2'd0}}, {tmp_194_reg_6254}}, {2'd0}}, {tmp_195_reg_6260}}, {2'd0}}, {tmp_196_reg_6266}}, {2'd0}}, {tmp_197_reg_6272}}, {2'd0}}, {tmp_198_reg_6278}}, {2'd0}}, {tmp_199_reg_6284}}, {2'd0}}, {tmp_200_reg_6290}}, {2'd0}}, {tmp_201_reg_6296}}, {2'd0}}, {tmp_202_reg_6302}}, {2'd0}}, {tmp_203_reg_6308}}, {2'd0}}, {tmp_204_reg_6314}}, {2'd0}}, {tmp_205_reg_6320}}, {2'd0}}, {tmp_206_reg_6326}};

assign and_ln21_6_cast_fu_3932_p31 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{2'd0}, {tmp_249_reg_6337}}}, {2'd0}}}, {tmp_250_reg_6343}}}, {2'd0}}}, {tmp_251_reg_6349}}}, {2'd0}}}, {tmp_252_reg_6355}}}, {2'd0}}}, {tmp_253_reg_6361}}}, {2'd0}}}, {tmp_254_reg_6367}}}, {2'd0}}}, {tmp_255_reg_6373}}}, {2'd0}}}, {tmp_256_reg_6379}}}, {2'd0}}}, {tmp_257_reg_6385}}}, {2'd0}}}, {tmp_258_reg_6391}}}, {2'd0}}}, {tmp_259_reg_6397}}}, {2'd0}}}, {tmp_260_reg_6403}}}, {2'd0}}}, {tmp_261_reg_6409}}}, {2'd0}}}, {tmp_262_reg_6415}}}, {2'd0}}}, {trunc_ln21_3_reg_6421}};

assign and_ln21_6_fu_3882_p32 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_248_reg_6332}, {2'd0}}, {tmp_249_reg_6337}}, {2'd0}}, {tmp_250_reg_6343}}, {2'd0}}, {tmp_251_reg_6349}}, {2'd0}}, {tmp_252_reg_6355}}, {2'd0}}, {tmp_253_reg_6361}}, {2'd0}}, {tmp_254_reg_6367}}, {2'd0}}, {tmp_255_reg_6373}}, {2'd0}}, {tmp_256_reg_6379}}, {2'd0}}, {tmp_257_reg_6385}}, {2'd0}}, {tmp_258_reg_6391}}, {2'd0}}, {tmp_259_reg_6397}}, {2'd0}}, {tmp_260_reg_6403}}, {2'd0}}, {tmp_261_reg_6409}}, {2'd0}}, {tmp_262_reg_6415}}, {2'd0}}, {trunc_ln21_3_reg_6421}};

assign and_ln21_7_cast_fu_4035_p31 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{2'd0}, {tmp_264_reg_6432}}}, {2'd0}}}, {tmp_265_reg_6438}}}, {2'd0}}}, {tmp_266_reg_6444}}}, {2'd0}}}, {tmp_267_reg_6450}}}, {2'd0}}}, {tmp_268_reg_6456}}}, {2'd0}}}, {tmp_269_reg_6462}}}, {2'd0}}}, {tmp_270_reg_6468}}}, {2'd0}}}, {tmp_271_reg_6474}}}, {2'd0}}}, {tmp_272_reg_6480}}}, {2'd0}}}, {tmp_273_reg_6486}}}, {2'd0}}}, {tmp_274_reg_6492}}}, {2'd0}}}, {tmp_275_reg_6498}}}, {2'd0}}}, {tmp_276_reg_6504}}}, {2'd0}}}, {tmp_277_reg_6510}}}, {2'd0}}}, {tmp_278_reg_6516}};

assign and_ln21_7_fu_3985_p32 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_263_reg_6427}, {2'd0}}, {tmp_264_reg_6432}}, {2'd0}}, {tmp_265_reg_6438}}, {2'd0}}, {tmp_266_reg_6444}}, {2'd0}}, {tmp_267_reg_6450}}, {2'd0}}, {tmp_268_reg_6456}}, {2'd0}}, {tmp_269_reg_6462}}, {2'd0}}, {tmp_270_reg_6468}}, {2'd0}}, {tmp_271_reg_6474}}, {2'd0}}, {tmp_272_reg_6480}}, {2'd0}}, {tmp_273_reg_6486}}, {2'd0}}, {tmp_274_reg_6492}}, {2'd0}}, {tmp_275_reg_6498}}, {2'd0}}, {tmp_276_reg_6504}}, {2'd0}}, {tmp_277_reg_6510}}, {2'd0}}, {tmp_278_reg_6516}};

assign and_ln23_1_fu_4223_p15 = {{{{{{{{{{{{{{{{{{{{{{{{{{1'd0}, {tmp_142_reg_6609}}}, {4'd0}}}, {tmp_136_reg_6568}}}, {4'd0}}}, {tmp_137_reg_6574}}}, {4'd0}}}, {tmp_138_reg_6580}}}, {4'd0}}}, {tmp_139_reg_6586}}}, {4'd0}}}, {tmp_140_reg_6592}}}, {4'd0}}}, {tmp_141_reg_6598}};

assign and_ln23_2_fu_4515_p15 = {{{{{{{{{{{{{{{{{{{{{{{{{{1'd0}, {tmp_214_reg_6695}}}, {4'd0}}}, {tmp_208_reg_6654}}}, {4'd0}}}, {tmp_209_reg_6660}}}, {4'd0}}}, {tmp_210_reg_6666}}}, {4'd0}}}, {tmp_211_reg_6672}}}, {4'd0}}}, {tmp_212_reg_6678}}}, {4'd0}}}, {tmp_213_reg_6684}};

assign and_ln23_3_fu_4599_p15 = {{{{{{{{{{{{{{{{{{{{{{{{{{1'd0}, {tmp_286_reg_6741}}}, {4'd0}}}, {tmp_280_reg_6700}}}, {4'd0}}}, {tmp_281_reg_6706}}}, {4'd0}}}, {tmp_282_reg_6712}}}, {4'd0}}}, {tmp_283_reg_6718}}}, {4'd0}}}, {tmp_284_reg_6724}}}, {4'd0}}}, {tmp_285_reg_6730}};

assign and_ln2_fu_4110_p15 = {{{{{{{{{{{{{{{{{{{{{{{{{{1'd0}, {tmp_64_reg_6522}}}, {4'd0}}}, {tmp_65_reg_6528}}}, {4'd0}}}, {tmp_66_reg_6534}}}, {4'd0}}}, {tmp_67_reg_6540}}}, {4'd0}}}, {tmp_68_reg_6546}}}, {4'd0}}}, {tmp_69_reg_6552}}}, {4'd0}}}, {trunc_ln18_reg_6558}};

assign and_ln3_fu_4139_p15 = {{{{{{{{{{{{{{{{{{{{{{{{{{1'd0}, {tmp_70_reg_6563}}}, {4'd0}}}, {tmp_64_reg_6522}}}, {4'd0}}}, {tmp_65_reg_6528}}}, {4'd0}}}, {tmp_66_reg_6534}}}, {4'd0}}}, {tmp_67_reg_6540}}}, {4'd0}}}, {tmp_68_reg_6546}}}, {4'd0}}}, {tmp_69_reg_6552}};

assign and_ln_fu_1082_p64 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_reg_5097}, {1'd0}}, {tmp_4_reg_5102}}, {1'd0}}, {tmp_5_reg_5107}}, {1'd0}}, {tmp_6_reg_5112}}, {1'd0}}, {tmp_7_reg_5117}}, {1'd0}}, {tmp_8_reg_5122}}, {1'd0}}, {tmp_9_reg_5127}}, {1'd0}}, {tmp_10_reg_5132}}, {1'd0}}, {tmp_11_reg_5137}}, {1'd0}}, {tmp_12_reg_5142}}, {1'd0}}, {tmp_13_reg_5147}}, {1'd0}}, {tmp_14_reg_5152}}, {1'd0}}, {tmp_15_reg_5157}}, {1'd0}}, {tmp_16_reg_5162}}, {1'd0}}, {tmp_17_reg_5167}}, {1'd0}}, {tmp_18_reg_5172}}, {1'd0}}, {tmp_19_reg_5177}}, {1'd0}}, {tmp_20_reg_5182}}, {1'd0}}, {tmp_21_reg_5187}}, {1'd0}}, {tmp_22_reg_5192}}, {1'd0}}, {tmp_23_reg_5197}}, {1'd0}}, {tmp_24_reg_5202}}, {1'd0}}, {tmp_25_reg_5207}}, {1'd0}}, {tmp_26_reg_5212}}, {1'd0}}, {tmp_27_reg_5217}}, {1'd0}}, {tmp_28_reg_5222}}, {1'd0}}, {tmp_29_reg_5227}}, {1'd0}}, {tmp_30_reg_5232}}, {1'd0}}, {tmp_31_reg_5237}}, {1'd0}}, {tmp_32_reg_5242}}, {1'd0}}, {tmp_33_reg_5247}}, {1'd0}}, {tmp_49_reg_5252}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign diff_2_fu_1925_p2 = (test_set_load_2_reg_5072 ^ reg_414);

assign diff_fu_816_p2 = (test_set_load ^ reg_414);

assign dist_fu_4658_p2 = (trunc_ln25_1_reg_6751 + trunc_ln25_reg_6746);

assign dists_0_fu_4795_p2 = (zext_ln36_2_fu_4792_p1 + zext_ln36_1_fu_4789_p1);

assign dists_2_2_fu_4864_p3 = ((icmp_ln55_1_fu_4846_p2[0:0] == 1'b1) ? zext_ln55_fu_4827_p1 : dists_1_3_out_load_reg_6847);

assign dists_2_3_fu_4871_p3 = ((icmp_ln55_fu_4841_p2[0:0] == 1'b1) ? zext_ln55_fu_4827_p1 : dists_0_3_out_load_reg_6821);

assign dists_2_4_fu_4878_p3 = ((icmp_ln53_fu_4835_p2[0:0] == 1'b1) ? dists_2_fu_4857_p3 : dists_2_3_out_load_reg_6874);

assign dists_2_5_fu_4885_p3 = ((icmp_ln53_fu_4835_p2[0:0] == 1'b1) ? dists_2_2_fu_4864_p3 : dists_1_3_out_load_reg_6847);

assign dists_2_6_fu_4892_p3 = ((icmp_ln53_fu_4835_p2[0:0] == 1'b1) ? dists_2_3_fu_4871_p3 : dists_0_3_out_load_reg_6821);

assign dists_2_fu_4857_p3 = ((or_ln55_fu_4851_p2[0:0] == 1'b1) ? dists_2_3_out_load_reg_6874 : zext_ln55_fu_4827_p1);

assign grp_fu_427_p2 = (reg_423 ^ reg_418);

assign icmp_ln107_fu_734_p2 = ((ap_sig_allocacmp_i == 12'd3000) ? 1'b1 : 1'b0);

assign icmp_ln45_1_fu_4771_p2 = (($signed(dists_1_3_out_i) > $signed(zext_ln39_fu_4768_p1)) ? 1'b1 : 1'b0);

assign icmp_ln45_2_fu_4801_p2 = (($signed(dists_2_3_out_i) > $signed(max_dist_1_reg_6868)) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_4726_p2 = (($signed(ap_sig_allocacmp_dists_0_3_out_load) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_4835_p2 = (($signed(zext_ln55_fu_4827_p1) < $signed(max_dist_2_fu_4830_p3)) ? 1'b1 : 1'b0);

assign icmp_ln55_1_fu_4846_p2 = ((select_ln45_2_reg_6891 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_4841_p2 = ((select_ln45_2_reg_6891 == 2'd0) ? 1'b1 : 1'b0);

assign labels_0_3_out = labels_0_3_fu_246;

assign labels_1_3_out = labels_1_3_fu_250;

assign labels_2_2_fu_4918_p3 = ((icmp_ln55_1_reg_6909[0:0] == 1'b1) ? zext_ln108_1_fu_4908_p1 : labels_1_3_fu_250);

assign labels_2_3_out = labels_2_3_fu_254;

assign labels_2_4_fu_4925_p3 = ((icmp_ln55_reg_6904[0:0] == 1'b1) ? zext_ln108_1_fu_4908_p1 : labels_0_3_fu_246);

assign labels_2_5_fu_4932_p3 = ((icmp_ln53_reg_6897[0:0] == 1'b1) ? labels_2_fu_4911_p3 : labels_2_3_fu_254);

assign labels_2_6_fu_4939_p3 = ((icmp_ln53_reg_6897[0:0] == 1'b1) ? labels_2_2_fu_4918_p3 : labels_1_3_fu_250);

assign labels_2_7_fu_4946_p3 = ((icmp_ln53_reg_6897[0:0] == 1'b1) ? labels_2_4_fu_4925_p3 : labels_0_3_fu_246);

assign labels_2_fu_4911_p3 = ((or_ln55_reg_6914[0:0] == 1'b1) ? labels_2_3_fu_254 : zext_ln108_1_fu_4908_p1);

assign max_dist_1_fu_4777_p3 = ((icmp_ln45_1_fu_4771_p2[0:0] == 1'b1) ? dists_1_3_out_i : zext_ln39_fu_4768_p1);

assign max_dist_2_fu_4830_p3 = ((icmp_ln45_2_reg_6886[0:0] == 1'b1) ? dists_2_3_out_load_reg_6874 : max_dist_1_reg_6868);

assign max_dist_fu_4732_p3 = ((icmp_ln45_fu_4726_p2[0:0] == 1'b1) ? trunc_ln107_fu_4714_p1 : 31'd0);

assign or_ln35_1_fu_764_p2 = (shl_ln_fu_740_p3 | 14'd1);

assign or_ln35_2_fu_775_p2 = (tmp_1 | 11'd2);

assign or_ln35_3_fu_786_p2 = (shl_ln_reg_5046 | 14'd2);

assign or_ln35_4_fu_796_p2 = (tmp_1 | 11'd3);

assign or_ln35_5_fu_806_p2 = (shl_ln_reg_5046 | 14'd3);

assign or_ln35_fu_753_p2 = (tmp_1 | 11'd1);

assign or_ln45_fu_4814_p2 = (icmp_ln45_2_fu_4801_p2 | icmp_ln45_1_reg_6863);

assign or_ln55_fu_4851_p2 = (icmp_ln55_fu_4841_p2 | icmp_ln55_1_fu_4846_p2);

assign select_ln45_1_fu_4806_p3 = ((icmp_ln45_2_fu_4801_p2[0:0] == 1'b1) ? 2'd2 : 2'd1);

assign select_ln45_2_fu_4819_p3 = ((or_ln45_fu_4814_p2[0:0] == 1'b1) ? select_ln45_1_fu_4806_p3 : 2'd0);

assign shl_ln_fu_740_p3 = {{ap_sig_allocacmp_i}, {2'd0}};

assign sub_ln20_1_fu_1605_p2 = (reg_689 - zext_ln20_1_fu_1601_p1);

assign sub_ln20_2_fu_2749_p2 = (diff_2_reg_5797 - zext_ln20_2_fu_2745_p1);

assign sub_ln20_3_fu_3170_p2 = (reg_689 - zext_ln20_3_fu_3166_p1);

assign sub_ln20_fu_1184_p2 = (diff_reg_5092 - zext_ln20_fu_1180_p1);

assign test_set_address1 = zext_ln35_fu_759_p1;

assign training_labels_address0 = zext_ln107_fu_4654_p1;

assign trunc_ln107_fu_4714_p1 = ap_sig_allocacmp_dists_0_3_out_load[30:0];

assign trunc_ln18_1_fu_4180_p1 = add_ln23_4_fu_4168_p2[38:0];

assign trunc_ln18_2_fu_3640_p1 = add_ln22_1_fu_3575_p2[3:0];

assign trunc_ln18_3_fu_4264_p1 = add_ln23_5_fu_4252_p2[38:0];

assign trunc_ln18_4_fu_4346_p1 = add_ln22_2_fu_4281_p2[3:0];

assign trunc_ln18_5_fu_4556_p1 = add_ln23_6_fu_4544_p2[38:0];

assign trunc_ln18_6_fu_4428_p1 = add_ln22_3_fu_4363_p2[3:0];

assign trunc_ln18_7_fu_4640_p1 = add_ln23_7_fu_4628_p2[38:0];

assign trunc_ln18_fu_3558_p1 = add_ln22_fu_3493_p2[3:0];

assign trunc_ln21_1_fu_1761_p1 = sub_ln20_1_fu_1605_p2[1:0];

assign trunc_ln21_2_fu_2904_p1 = sub_ln20_2_fu_2749_p2[1:0];

assign trunc_ln21_3_fu_3326_p1 = sub_ln20_3_fu_3170_p2[1:0];

assign trunc_ln21_fu_1339_p1 = sub_ln20_fu_1184_p2[1:0];

assign trunc_ln25_2_fu_4472_p1 = add_ln24_1_fu_4467_p2[6:0];

assign trunc_ln25_4_fu_4674_p1 = add_ln24_2_fu_4669_p2[6:0];

assign trunc_ln25_6_fu_4696_p1 = add_ln24_3_fu_4691_p2[6:0];

assign trunc_ln25_fu_4450_p1 = add_ln24_fu_4445_p2[6:0];

assign zext_ln107_fu_4654_p1 = i_reg_5036_pp0_iter1_reg;

assign zext_ln108_1_fu_4908_p1 = labels_1_reg_6827;

assign zext_ln108_fu_748_p1 = shl_ln_fu_740_p3;

assign zext_ln20_1_fu_1601_p1 = and_ln20_1_fu_1503_p64;

assign zext_ln20_2_fu_2745_p1 = and_ln20_2_fu_2647_p64;

assign zext_ln20_3_fu_3166_p1 = and_ln20_3_fu_3068_p64;

assign zext_ln20_fu_1180_p1 = and_ln_fu_1082_p64;

assign zext_ln21_1_fu_2393_p1 = and_ln21_1_fu_2294_p32;

assign zext_ln21_2_fu_2518_p1 = and_ln21_2_fu_2419_p32;

assign zext_ln21_3_fu_2621_p1 = and_ln21_3_fu_2522_p32;

assign zext_ln21_4_fu_3753_p1 = and_ln21_4_fu_3654_p32;

assign zext_ln21_5_fu_3856_p1 = and_ln21_5_fu_3757_p32;

assign zext_ln21_6_fu_3981_p1 = and_ln21_6_fu_3882_p32;

assign zext_ln21_7_fu_4084_p1 = and_ln21_7_fu_3985_p32;

assign zext_ln21_fu_2290_p1 = and_ln1_fu_2191_p32;

assign zext_ln22_1_fu_3572_p1 = tmp_135_reg_6137;

assign zext_ln22_2_fu_4278_p1 = tmp_207_reg_6619;

assign zext_ln22_3_fu_4360_p1 = tmp_279_reg_6629;

assign zext_ln22_fu_3490_p1 = tmp_63_reg_6122;

assign zext_ln23_1_fu_4164_p1 = and_ln3_fu_4139_p15;

assign zext_ln23_2_fu_4219_p1 = and_ln18_1_fu_4194_p15;

assign zext_ln23_3_fu_4248_p1 = and_ln23_1_fu_4223_p15;

assign zext_ln23_4_fu_4511_p1 = and_ln18_2_fu_4486_p15;

assign zext_ln23_5_fu_4540_p1 = and_ln23_2_fu_4515_p15;

assign zext_ln23_6_fu_4595_p1 = and_ln18_3_fu_4570_p15;

assign zext_ln23_7_fu_4624_p1 = and_ln23_3_fu_4599_p15;

assign zext_ln23_fu_4135_p1 = and_ln2_fu_4110_p15;

assign zext_ln24_1_fu_4464_p1 = tmp_143_reg_6649;

assign zext_ln24_2_fu_4666_p1 = tmp_215_reg_6771;

assign zext_ln24_3_fu_4688_p1 = tmp_287_reg_6781;

assign zext_ln24_fu_4442_p1 = tmp_71_reg_6639;

assign zext_ln31_fu_4744_p1 = dist_reg_6791;

assign zext_ln35_1_fu_770_p1 = or_ln35_1_fu_764_p2;

assign zext_ln35_2_fu_4747_p1 = add_ln26_reg_6796;

assign zext_ln35_3_fu_781_p1 = or_ln35_2_fu_775_p2;

assign zext_ln35_4_fu_791_p1 = or_ln35_3_fu_786_p2;

assign zext_ln35_5_fu_4750_p1 = add_ln26_1_reg_6832;

assign zext_ln35_6_fu_801_p1 = or_ln35_4_fu_796_p2;

assign zext_ln35_7_fu_811_p1 = or_ln35_5_fu_806_p2;

assign zext_ln35_fu_759_p1 = or_ln35_fu_753_p2;

assign zext_ln36_1_fu_4789_p1 = add_ln36_reg_6853;

assign zext_ln36_2_fu_4792_p1 = add_ln36_1_reg_6858;

assign zext_ln36_fu_4753_p1 = add_ln26_2_reg_6837;

assign zext_ln39_fu_4768_p1 = max_dist_reg_6842;

assign zext_ln55_fu_4827_p1 = dists_0_reg_6881;

always @ (posedge ap_clk) begin
    shl_ln_reg_5046[1:0] <= 2'b00;
end

endmodule //DigitRec_DigitRec_Pipeline_TRAINING_LOOP
