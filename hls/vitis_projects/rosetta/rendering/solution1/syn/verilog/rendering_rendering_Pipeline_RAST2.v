// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module rendering_rendering_Pipeline_RAST2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        max_index_0,
        fragment_x_address0,
        fragment_x_ce0,
        fragment_x_we0,
        fragment_x_d0,
        fragment_y_address0,
        fragment_y_ce0,
        fragment_y_we0,
        fragment_y_d0,
        fragment_z_address0,
        fragment_z_ce0,
        fragment_z_we0,
        fragment_z_d0,
        triangle_2ds_z,
        fragment_color_address0,
        fragment_color_ce0,
        fragment_color_we0,
        fragment_color_d0,
        zext_ln174,
        max_min_0,
        max_min_2,
        zext_ln22_1,
        sext_ln22_1,
        zext_ln22_3,
        sext_ln23_1,
        zext_ln23_1,
        sub22_i_i_cast,
        zext_ln22_2,
        sub31_i_i_cast,
        zext_ln22,
        sub42_i_i_cast,
        zext_ln23,
        sext_ln146,
        i_1_out,
        i_1_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [30:0] max_index_0;
output  [8:0] fragment_x_address0;
output   fragment_x_ce0;
output   fragment_x_we0;
output  [7:0] fragment_x_d0;
output  [8:0] fragment_y_address0;
output   fragment_y_ce0;
output   fragment_y_we0;
output  [7:0] fragment_y_d0;
output  [8:0] fragment_z_address0;
output   fragment_z_ce0;
output   fragment_z_we0;
output  [7:0] fragment_z_d0;
input  [7:0] triangle_2ds_z;
output  [8:0] fragment_color_address0;
output   fragment_color_ce0;
output   fragment_color_we0;
output  [5:0] fragment_color_d0;
input  [7:0] zext_ln174;
input  [7:0] max_min_0;
input  [7:0] max_min_2;
input  [7:0] zext_ln22_1;
input  [8:0] sext_ln22_1;
input  [7:0] zext_ln22_3;
input  [8:0] sext_ln23_1;
input  [7:0] zext_ln23_1;
input  [8:0] sub22_i_i_cast;
input  [7:0] zext_ln22_2;
input  [8:0] sub31_i_i_cast;
input  [7:0] zext_ln22;
input  [8:0] sub42_i_i_cast;
input  [7:0] zext_ln23;
input  [8:0] sext_ln146;
output  [31:0] i_1_out;
output   i_1_out_ap_vld;

reg ap_idle;
reg fragment_x_ce0;
reg fragment_x_we0;
reg fragment_y_ce0;
reg fragment_y_we0;
reg fragment_z_ce0;
reg fragment_z_we0;
reg fragment_color_ce0;
reg fragment_color_we0;
reg i_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln174_fu_319_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire  signed [17:0] sext_ln146_cast_fu_254_p1;
reg  signed [17:0] sext_ln146_cast_reg_527;
wire   [8:0] zext_ln23_cast_fu_258_p1;
reg   [8:0] zext_ln23_cast_reg_532;
wire  signed [17:0] sub42_i_i_cast_cast_fu_262_p1;
reg  signed [17:0] sub42_i_i_cast_cast_reg_537;
wire   [8:0] zext_ln22_cast_fu_266_p1;
reg   [8:0] zext_ln22_cast_reg_542;
wire  signed [17:0] sub31_i_i_cast_cast_fu_270_p1;
reg  signed [17:0] sub31_i_i_cast_cast_reg_547;
wire   [8:0] zext_ln22_2_cast_fu_274_p1;
reg   [8:0] zext_ln22_2_cast_reg_552;
wire  signed [17:0] sub22_i_i_cast_cast_fu_278_p1;
reg  signed [17:0] sub22_i_i_cast_cast_reg_557;
wire   [8:0] zext_ln23_1_cast_fu_282_p1;
reg   [8:0] zext_ln23_1_cast_reg_562;
wire  signed [17:0] sext_ln23_1_cast_fu_286_p1;
reg  signed [17:0] sext_ln23_1_cast_reg_567;
wire   [8:0] zext_ln22_3_cast_fu_290_p1;
reg   [8:0] zext_ln22_3_cast_reg_572;
wire  signed [17:0] sext_ln22_1_cast_fu_294_p1;
reg  signed [17:0] sext_ln22_1_cast_reg_577;
wire   [8:0] zext_ln22_1_cast_fu_298_p1;
reg   [8:0] zext_ln22_1_cast_reg_582;
wire   [30:0] zext_ln174_cast_fu_302_p1;
reg   [0:0] icmp_ln174_reg_599;
reg   [0:0] icmp_ln174_reg_599_pp0_iter1_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter2_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter3_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter4_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter5_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter6_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter7_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter8_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter9_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter10_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter11_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter12_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter13_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter14_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter15_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter16_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter17_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter18_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter19_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter20_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter21_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter22_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter23_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter24_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter25_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter26_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter27_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter28_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter29_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter30_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter31_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter32_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter33_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter34_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter35_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter36_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter37_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter38_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter39_reg;
reg   [0:0] icmp_ln174_reg_599_pp0_iter40_reg;
wire   [30:0] k_2_fu_325_p2;
reg   [30:0] k_2_reg_603;
wire   [7:0] grp_fu_331_p2;
reg   [7:0] rem_urem_i_reg_608;
wire   [7:0] grp_fu_337_p2;
reg   [7:0] div_udiv_i_reg_613;
wire   [7:0] x_fu_350_p2;
reg   [7:0] x_reg_618;
reg   [7:0] x_reg_618_pp0_iter36_reg;
reg   [7:0] x_reg_618_pp0_iter37_reg;
reg   [7:0] x_reg_618_pp0_iter38_reg;
reg   [7:0] x_reg_618_pp0_iter39_reg;
reg   [7:0] x_reg_618_pp0_iter40_reg;
reg   [7:0] x_reg_618_pp0_iter41_reg;
wire   [7:0] y_fu_358_p2;
reg   [7:0] y_reg_624;
reg   [7:0] y_reg_624_pp0_iter36_reg;
reg   [7:0] y_reg_624_pp0_iter37_reg;
reg   [7:0] y_reg_624_pp0_iter38_reg;
reg   [7:0] y_reg_624_pp0_iter39_reg;
reg   [7:0] y_reg_624_pp0_iter40_reg;
reg   [7:0] y_reg_624_pp0_iter41_reg;
wire   [8:0] sub_ln52_fu_366_p2;
reg  signed [8:0] sub_ln52_reg_630;
wire   [8:0] sub_ln53_fu_371_p2;
reg  signed [8:0] sub_ln53_reg_635;
wire   [8:0] sub_ln54_fu_376_p2;
reg  signed [8:0] sub_ln54_reg_640;
wire   [17:0] grp_fu_384_p2;
reg  signed [17:0] mul_ln52_reg_675;
wire   [17:0] grp_fu_392_p2;
reg  signed [17:0] mul_ln53_reg_680;
wire   [17:0] grp_fu_400_p2;
reg  signed [17:0] mul_ln54_reg_685;
reg   [0:0] tmp_reg_690;
reg   [31:0] i_1_load_reg_694;
wire   [31:0] i_fu_455_p2;
reg   [31:0] i_reg_699;
wire   [63:0] zext_ln181_fu_461_p1;
wire    ap_block_pp0_stage0;
reg   [30:0] k_fu_84;
reg   [30:0] ap_sig_allocacmp_k_1;
wire    ap_loop_init;
reg   [31:0] i_1_fu_88;
reg   [31:0] ap_sig_allocacmp_i_1_load;
wire    ap_block_pp0_stage0_01001;
wire   [7:0] grp_fu_331_p1;
wire   [7:0] grp_fu_337_p1;
wire   [7:0] trunc_ln176_fu_347_p1;
wire   [7:0] trunc_ln177_fu_355_p1;
wire   [8:0] zext_ln52_fu_363_p1;
wire  signed [8:0] grp_fu_384_p1;
wire  signed [8:0] grp_fu_392_p1;
wire  signed [8:0] grp_fu_400_p1;
wire   [8:0] zext_ln52_1_fu_405_p1;
wire  signed [8:0] sub_ln52_1_fu_408_p2;
wire  signed [8:0] sub_ln53_1_fu_417_p2;
wire  signed [8:0] sub_ln54_1_fu_426_p2;
wire  signed [17:0] grp_fu_483_p3;
wire  signed [17:0] grp_fu_476_p3;
wire   [17:0] or_ln56_fu_435_p2;
wire  signed [17:0] grp_fu_490_p3;
wire   [17:0] or_ln56_1_fu_439_p2;
wire  signed [8:0] grp_fu_476_p1;
wire  signed [8:0] grp_fu_483_p1;
wire  signed [8:0] grp_fu_490_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 k_fu_84 = 31'd0;
#0 i_1_fu_88 = 32'd0;
#0 ap_done_reg = 1'b0;
end

rendering_urem_31ns_8ns_8_35_1 #(
    .ID( 1 ),
    .NUM_STAGE( 35 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
urem_31ns_8ns_8_35_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_sig_allocacmp_k_1),
    .din1(grp_fu_331_p1),
    .ce(1'b1),
    .dout(grp_fu_331_p2)
);

rendering_udiv_31ns_8ns_8_35_1 #(
    .ID( 1 ),
    .NUM_STAGE( 35 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
udiv_31ns_8ns_8_35_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_sig_allocacmp_k_1),
    .din1(grp_fu_337_p1),
    .ce(1'b1),
    .dout(grp_fu_337_p2)
);

rendering_mul_9s_9s_18_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_3_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln52_reg_630),
    .din1(grp_fu_384_p1),
    .ce(1'b1),
    .dout(grp_fu_384_p2)
);

rendering_mul_9s_9s_18_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_3_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln53_reg_635),
    .din1(grp_fu_392_p1),
    .ce(1'b1),
    .dout(grp_fu_392_p2)
);

rendering_mul_9s_9s_18_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_3_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln54_reg_640),
    .din1(grp_fu_400_p1),
    .ce(1'b1),
    .dout(grp_fu_400_p2)
);

rendering_mac_mulsub_9s_9s_18s_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
mac_mulsub_9s_9s_18s_18_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln52_1_fu_408_p2),
    .din1(grp_fu_476_p1),
    .din2(mul_ln52_reg_675),
    .ce(1'b1),
    .dout(grp_fu_476_p3)
);

rendering_mac_mulsub_9s_9s_18s_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
mac_mulsub_9s_9s_18s_18_4_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln53_1_fu_417_p2),
    .din1(grp_fu_483_p1),
    .din2(mul_ln53_reg_680),
    .ce(1'b1),
    .dout(grp_fu_483_p3)
);

rendering_mac_mulsub_9s_9s_18s_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
mac_mulsub_9s_9s_18s_18_4_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln54_1_fu_426_p2),
    .din1(grp_fu_490_p1),
    .din2(mul_ln54_reg_685),
    .ce(1'b1),
    .dout(grp_fu_490_p3)
);

rendering_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter41_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            i_1_fu_88 <= 32'd0;
        end else if (((ap_enable_reg_pp0_iter42 == 1'b1) & (tmp_reg_690 == 1'd0))) begin
            i_1_fu_88 <= i_reg_699;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_fu_84 <= 31'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            k_fu_84 <= k_2_reg_603;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        div_udiv_i_reg_613 <= grp_fu_337_p2;
        i_1_load_reg_694 <= ap_sig_allocacmp_i_1_load;
        i_reg_699 <= i_fu_455_p2;
        icmp_ln174_reg_599_pp0_iter10_reg <= icmp_ln174_reg_599_pp0_iter9_reg;
        icmp_ln174_reg_599_pp0_iter11_reg <= icmp_ln174_reg_599_pp0_iter10_reg;
        icmp_ln174_reg_599_pp0_iter12_reg <= icmp_ln174_reg_599_pp0_iter11_reg;
        icmp_ln174_reg_599_pp0_iter13_reg <= icmp_ln174_reg_599_pp0_iter12_reg;
        icmp_ln174_reg_599_pp0_iter14_reg <= icmp_ln174_reg_599_pp0_iter13_reg;
        icmp_ln174_reg_599_pp0_iter15_reg <= icmp_ln174_reg_599_pp0_iter14_reg;
        icmp_ln174_reg_599_pp0_iter16_reg <= icmp_ln174_reg_599_pp0_iter15_reg;
        icmp_ln174_reg_599_pp0_iter17_reg <= icmp_ln174_reg_599_pp0_iter16_reg;
        icmp_ln174_reg_599_pp0_iter18_reg <= icmp_ln174_reg_599_pp0_iter17_reg;
        icmp_ln174_reg_599_pp0_iter19_reg <= icmp_ln174_reg_599_pp0_iter18_reg;
        icmp_ln174_reg_599_pp0_iter20_reg <= icmp_ln174_reg_599_pp0_iter19_reg;
        icmp_ln174_reg_599_pp0_iter21_reg <= icmp_ln174_reg_599_pp0_iter20_reg;
        icmp_ln174_reg_599_pp0_iter22_reg <= icmp_ln174_reg_599_pp0_iter21_reg;
        icmp_ln174_reg_599_pp0_iter23_reg <= icmp_ln174_reg_599_pp0_iter22_reg;
        icmp_ln174_reg_599_pp0_iter24_reg <= icmp_ln174_reg_599_pp0_iter23_reg;
        icmp_ln174_reg_599_pp0_iter25_reg <= icmp_ln174_reg_599_pp0_iter24_reg;
        icmp_ln174_reg_599_pp0_iter26_reg <= icmp_ln174_reg_599_pp0_iter25_reg;
        icmp_ln174_reg_599_pp0_iter27_reg <= icmp_ln174_reg_599_pp0_iter26_reg;
        icmp_ln174_reg_599_pp0_iter28_reg <= icmp_ln174_reg_599_pp0_iter27_reg;
        icmp_ln174_reg_599_pp0_iter29_reg <= icmp_ln174_reg_599_pp0_iter28_reg;
        icmp_ln174_reg_599_pp0_iter2_reg <= icmp_ln174_reg_599_pp0_iter1_reg;
        icmp_ln174_reg_599_pp0_iter30_reg <= icmp_ln174_reg_599_pp0_iter29_reg;
        icmp_ln174_reg_599_pp0_iter31_reg <= icmp_ln174_reg_599_pp0_iter30_reg;
        icmp_ln174_reg_599_pp0_iter32_reg <= icmp_ln174_reg_599_pp0_iter31_reg;
        icmp_ln174_reg_599_pp0_iter33_reg <= icmp_ln174_reg_599_pp0_iter32_reg;
        icmp_ln174_reg_599_pp0_iter34_reg <= icmp_ln174_reg_599_pp0_iter33_reg;
        icmp_ln174_reg_599_pp0_iter35_reg <= icmp_ln174_reg_599_pp0_iter34_reg;
        icmp_ln174_reg_599_pp0_iter36_reg <= icmp_ln174_reg_599_pp0_iter35_reg;
        icmp_ln174_reg_599_pp0_iter37_reg <= icmp_ln174_reg_599_pp0_iter36_reg;
        icmp_ln174_reg_599_pp0_iter38_reg <= icmp_ln174_reg_599_pp0_iter37_reg;
        icmp_ln174_reg_599_pp0_iter39_reg <= icmp_ln174_reg_599_pp0_iter38_reg;
        icmp_ln174_reg_599_pp0_iter3_reg <= icmp_ln174_reg_599_pp0_iter2_reg;
        icmp_ln174_reg_599_pp0_iter40_reg <= icmp_ln174_reg_599_pp0_iter39_reg;
        icmp_ln174_reg_599_pp0_iter4_reg <= icmp_ln174_reg_599_pp0_iter3_reg;
        icmp_ln174_reg_599_pp0_iter5_reg <= icmp_ln174_reg_599_pp0_iter4_reg;
        icmp_ln174_reg_599_pp0_iter6_reg <= icmp_ln174_reg_599_pp0_iter5_reg;
        icmp_ln174_reg_599_pp0_iter7_reg <= icmp_ln174_reg_599_pp0_iter6_reg;
        icmp_ln174_reg_599_pp0_iter8_reg <= icmp_ln174_reg_599_pp0_iter7_reg;
        icmp_ln174_reg_599_pp0_iter9_reg <= icmp_ln174_reg_599_pp0_iter8_reg;
        mul_ln52_reg_675 <= grp_fu_384_p2;
        mul_ln53_reg_680 <= grp_fu_392_p2;
        mul_ln54_reg_685 <= grp_fu_400_p2;
        rem_urem_i_reg_608 <= grp_fu_331_p2;
        sub_ln52_reg_630 <= sub_ln52_fu_366_p2;
        sub_ln53_reg_635 <= sub_ln53_fu_371_p2;
        sub_ln54_reg_640 <= sub_ln54_fu_376_p2;
        tmp_reg_690 <= or_ln56_1_fu_439_p2[32'd17];
        x_reg_618 <= x_fu_350_p2;
        x_reg_618_pp0_iter36_reg <= x_reg_618;
        x_reg_618_pp0_iter37_reg <= x_reg_618_pp0_iter36_reg;
        x_reg_618_pp0_iter38_reg <= x_reg_618_pp0_iter37_reg;
        x_reg_618_pp0_iter39_reg <= x_reg_618_pp0_iter38_reg;
        x_reg_618_pp0_iter40_reg <= x_reg_618_pp0_iter39_reg;
        x_reg_618_pp0_iter41_reg <= x_reg_618_pp0_iter40_reg;
        y_reg_624 <= y_fu_358_p2;
        y_reg_624_pp0_iter36_reg <= y_reg_624;
        y_reg_624_pp0_iter37_reg <= y_reg_624_pp0_iter36_reg;
        y_reg_624_pp0_iter38_reg <= y_reg_624_pp0_iter37_reg;
        y_reg_624_pp0_iter39_reg <= y_reg_624_pp0_iter38_reg;
        y_reg_624_pp0_iter40_reg <= y_reg_624_pp0_iter39_reg;
        y_reg_624_pp0_iter41_reg <= y_reg_624_pp0_iter40_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln174_reg_599 <= icmp_ln174_fu_319_p2;
        icmp_ln174_reg_599_pp0_iter1_reg <= icmp_ln174_reg_599;
        k_2_reg_603 <= k_2_fu_325_p2;
        sext_ln146_cast_reg_527 <= sext_ln146_cast_fu_254_p1;
        sext_ln22_1_cast_reg_577 <= sext_ln22_1_cast_fu_294_p1;
        sext_ln23_1_cast_reg_567 <= sext_ln23_1_cast_fu_286_p1;
        sub22_i_i_cast_cast_reg_557 <= sub22_i_i_cast_cast_fu_278_p1;
        sub31_i_i_cast_cast_reg_547 <= sub31_i_i_cast_cast_fu_270_p1;
        sub42_i_i_cast_cast_reg_537 <= sub42_i_i_cast_cast_fu_262_p1;
        zext_ln22_1_cast_reg_582[7 : 0] <= zext_ln22_1_cast_fu_298_p1[7 : 0];
        zext_ln22_2_cast_reg_552[7 : 0] <= zext_ln22_2_cast_fu_274_p1[7 : 0];
        zext_ln22_3_cast_reg_572[7 : 0] <= zext_ln22_3_cast_fu_290_p1[7 : 0];
        zext_ln22_cast_reg_542[7 : 0] <= zext_ln22_cast_fu_266_p1[7 : 0];
        zext_ln23_1_cast_reg_562[7 : 0] <= zext_ln23_1_cast_fu_282_p1[7 : 0];
        zext_ln23_cast_reg_532[7 : 0] <= zext_ln23_cast_fu_258_p1[7 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln174_fu_319_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter41_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) 
    & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter42 == 1'b1) & (tmp_reg_690 == 1'd0))) begin
        ap_sig_allocacmp_i_1_load = i_reg_699;
    end else begin
        ap_sig_allocacmp_i_1_load = i_1_fu_88;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            ap_sig_allocacmp_k_1 = 31'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            ap_sig_allocacmp_k_1 = k_2_reg_603;
        end else begin
            ap_sig_allocacmp_k_1 = k_fu_84;
        end
    end else begin
        ap_sig_allocacmp_k_1 = k_fu_84;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter42 == 1'b1))) begin
        fragment_color_ce0 = 1'b1;
    end else begin
        fragment_color_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter42 == 1'b1) & (tmp_reg_690 == 1'd0))) begin
        fragment_color_we0 = 1'b1;
    end else begin
        fragment_color_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter42 == 1'b1))) begin
        fragment_x_ce0 = 1'b1;
    end else begin
        fragment_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter42 == 1'b1) & (tmp_reg_690 == 1'd0))) begin
        fragment_x_we0 = 1'b1;
    end else begin
        fragment_x_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter42 == 1'b1))) begin
        fragment_y_ce0 = 1'b1;
    end else begin
        fragment_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter42 == 1'b1) & (tmp_reg_690 == 1'd0))) begin
        fragment_y_we0 = 1'b1;
    end else begin
        fragment_y_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter42 == 1'b1))) begin
        fragment_z_ce0 = 1'b1;
    end else begin
        fragment_z_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter42 == 1'b1) & (tmp_reg_690 == 1'd0))) begin
        fragment_z_we0 = 1'b1;
    end else begin
        fragment_z_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln174_reg_599_pp0_iter40_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_1_out_ap_vld = 1'b1;
    end else begin
        i_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign fragment_color_address0 = zext_ln181_fu_461_p1;

assign fragment_color_d0 = 6'd36;

assign fragment_x_address0 = zext_ln181_fu_461_p1;

assign fragment_x_d0 = x_reg_618_pp0_iter41_reg;

assign fragment_y_address0 = zext_ln181_fu_461_p1;

assign fragment_y_d0 = y_reg_624_pp0_iter41_reg;

assign fragment_z_address0 = zext_ln181_fu_461_p1;

assign fragment_z_d0 = triangle_2ds_z;

assign grp_fu_331_p1 = zext_ln174_cast_fu_302_p1;

assign grp_fu_337_p1 = zext_ln174_cast_fu_302_p1;

assign grp_fu_384_p1 = sext_ln22_1_cast_reg_577;

assign grp_fu_392_p1 = sub22_i_i_cast_cast_reg_557;

assign grp_fu_400_p1 = sub42_i_i_cast_cast_reg_537;

assign grp_fu_476_p1 = sext_ln23_1_cast_reg_567;

assign grp_fu_483_p1 = sub31_i_i_cast_cast_reg_547;

assign grp_fu_490_p1 = sext_ln146_cast_reg_527;

assign i_1_out = i_1_fu_88;

assign i_fu_455_p2 = (ap_sig_allocacmp_i_1_load + 32'd1);

assign icmp_ln174_fu_319_p2 = ((ap_sig_allocacmp_k_1 == max_index_0) ? 1'b1 : 1'b0);

assign k_2_fu_325_p2 = (ap_sig_allocacmp_k_1 + 31'd1);

assign or_ln56_1_fu_439_p2 = (or_ln56_fu_435_p2 | grp_fu_490_p3);

assign or_ln56_fu_435_p2 = (grp_fu_483_p3 | grp_fu_476_p3);

assign sext_ln146_cast_fu_254_p1 = $signed(sext_ln146);

assign sext_ln22_1_cast_fu_294_p1 = $signed(sext_ln22_1);

assign sext_ln23_1_cast_fu_286_p1 = $signed(sext_ln23_1);

assign sub22_i_i_cast_cast_fu_278_p1 = $signed(sub22_i_i_cast);

assign sub31_i_i_cast_cast_fu_270_p1 = $signed(sub31_i_i_cast);

assign sub42_i_i_cast_cast_fu_262_p1 = $signed(sub42_i_i_cast);

assign sub_ln52_1_fu_408_p2 = (zext_ln52_1_fu_405_p1 - zext_ln22_3_cast_reg_572);

assign sub_ln52_fu_366_p2 = (zext_ln52_fu_363_p1 - zext_ln22_1_cast_reg_582);

assign sub_ln53_1_fu_417_p2 = (zext_ln52_1_fu_405_p1 - zext_ln22_2_cast_reg_552);

assign sub_ln53_fu_371_p2 = (zext_ln52_fu_363_p1 - zext_ln23_1_cast_reg_562);

assign sub_ln54_1_fu_426_p2 = (zext_ln52_1_fu_405_p1 - zext_ln23_cast_reg_532);

assign sub_ln54_fu_376_p2 = (zext_ln52_fu_363_p1 - zext_ln22_cast_reg_542);

assign trunc_ln176_fu_347_p1 = rem_urem_i_reg_608[7:0];

assign trunc_ln177_fu_355_p1 = div_udiv_i_reg_613[7:0];

assign x_fu_350_p2 = (trunc_ln176_fu_347_p1 + max_min_0);

assign y_fu_358_p2 = (trunc_ln177_fu_355_p1 + max_min_2);

assign zext_ln174_cast_fu_302_p1 = zext_ln174;

assign zext_ln181_fu_461_p1 = i_1_load_reg_694;

assign zext_ln22_1_cast_fu_298_p1 = zext_ln22_1;

assign zext_ln22_2_cast_fu_274_p1 = zext_ln22_2;

assign zext_ln22_3_cast_fu_290_p1 = zext_ln22_3;

assign zext_ln22_cast_fu_266_p1 = zext_ln22;

assign zext_ln23_1_cast_fu_282_p1 = zext_ln23_1;

assign zext_ln23_cast_fu_258_p1 = zext_ln23;

assign zext_ln52_1_fu_405_p1 = y_reg_624_pp0_iter37_reg;

assign zext_ln52_fu_363_p1 = x_reg_618;

always @ (posedge ap_clk) begin
    zext_ln23_cast_reg_532[8] <= 1'b0;
    zext_ln22_cast_reg_542[8] <= 1'b0;
    zext_ln22_2_cast_reg_552[8] <= 1'b0;
    zext_ln23_1_cast_reg_562[8] <= 1'b0;
    zext_ln22_3_cast_reg_572[8] <= 1'b0;
    zext_ln22_1_cast_reg_582[8] <= 1'b0;
end

endmodule //rendering_rendering_Pipeline_RAST2
