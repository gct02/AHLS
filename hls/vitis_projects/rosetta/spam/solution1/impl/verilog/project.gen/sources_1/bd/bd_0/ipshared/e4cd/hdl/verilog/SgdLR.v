// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="SgdLR_SgdLR,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.312000,HLS_SYN_LAT=4969201,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=2321,HLS_SYN_LUT=3214,HLS_VERSION=2023_2}" *)

module SgdLR (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_address0,
        data_ce0,
        data_q0,
        label_r_address0,
        label_r_ce0,
        label_r_q0,
        theta_address0,
        theta_ce0,
        theta_we0,
        theta_d0,
        theta_q0,
        theta_address1,
        theta_ce1,
        theta_q1
);

parameter    ap_ST_fsm_state1 = 90'd1;
parameter    ap_ST_fsm_state2 = 90'd2;
parameter    ap_ST_fsm_state3 = 90'd4;
parameter    ap_ST_fsm_state4 = 90'd8;
parameter    ap_ST_fsm_state5 = 90'd16;
parameter    ap_ST_fsm_state6 = 90'd32;
parameter    ap_ST_fsm_state7 = 90'd64;
parameter    ap_ST_fsm_state8 = 90'd128;
parameter    ap_ST_fsm_state9 = 90'd256;
parameter    ap_ST_fsm_state10 = 90'd512;
parameter    ap_ST_fsm_state11 = 90'd1024;
parameter    ap_ST_fsm_state12 = 90'd2048;
parameter    ap_ST_fsm_state13 = 90'd4096;
parameter    ap_ST_fsm_state14 = 90'd8192;
parameter    ap_ST_fsm_state15 = 90'd16384;
parameter    ap_ST_fsm_state16 = 90'd32768;
parameter    ap_ST_fsm_state17 = 90'd65536;
parameter    ap_ST_fsm_state18 = 90'd131072;
parameter    ap_ST_fsm_state19 = 90'd262144;
parameter    ap_ST_fsm_state20 = 90'd524288;
parameter    ap_ST_fsm_state21 = 90'd1048576;
parameter    ap_ST_fsm_state22 = 90'd2097152;
parameter    ap_ST_fsm_state23 = 90'd4194304;
parameter    ap_ST_fsm_state24 = 90'd8388608;
parameter    ap_ST_fsm_state25 = 90'd16777216;
parameter    ap_ST_fsm_state26 = 90'd33554432;
parameter    ap_ST_fsm_state27 = 90'd67108864;
parameter    ap_ST_fsm_state28 = 90'd134217728;
parameter    ap_ST_fsm_state29 = 90'd268435456;
parameter    ap_ST_fsm_state30 = 90'd536870912;
parameter    ap_ST_fsm_state31 = 90'd1073741824;
parameter    ap_ST_fsm_state32 = 90'd2147483648;
parameter    ap_ST_fsm_state33 = 90'd4294967296;
parameter    ap_ST_fsm_state34 = 90'd8589934592;
parameter    ap_ST_fsm_state35 = 90'd17179869184;
parameter    ap_ST_fsm_state36 = 90'd34359738368;
parameter    ap_ST_fsm_state37 = 90'd68719476736;
parameter    ap_ST_fsm_state38 = 90'd137438953472;
parameter    ap_ST_fsm_state39 = 90'd274877906944;
parameter    ap_ST_fsm_state40 = 90'd549755813888;
parameter    ap_ST_fsm_state41 = 90'd1099511627776;
parameter    ap_ST_fsm_state42 = 90'd2199023255552;
parameter    ap_ST_fsm_state43 = 90'd4398046511104;
parameter    ap_ST_fsm_state44 = 90'd8796093022208;
parameter    ap_ST_fsm_state45 = 90'd17592186044416;
parameter    ap_ST_fsm_state46 = 90'd35184372088832;
parameter    ap_ST_fsm_state47 = 90'd70368744177664;
parameter    ap_ST_fsm_state48 = 90'd140737488355328;
parameter    ap_ST_fsm_state49 = 90'd281474976710656;
parameter    ap_ST_fsm_state50 = 90'd562949953421312;
parameter    ap_ST_fsm_state51 = 90'd1125899906842624;
parameter    ap_ST_fsm_state52 = 90'd2251799813685248;
parameter    ap_ST_fsm_state53 = 90'd4503599627370496;
parameter    ap_ST_fsm_state54 = 90'd9007199254740992;
parameter    ap_ST_fsm_state55 = 90'd18014398509481984;
parameter    ap_ST_fsm_state56 = 90'd36028797018963968;
parameter    ap_ST_fsm_state57 = 90'd72057594037927936;
parameter    ap_ST_fsm_state58 = 90'd144115188075855872;
parameter    ap_ST_fsm_state59 = 90'd288230376151711744;
parameter    ap_ST_fsm_state60 = 90'd576460752303423488;
parameter    ap_ST_fsm_state61 = 90'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 90'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 90'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 90'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 90'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 90'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 90'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 90'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 90'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 90'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 90'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 90'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 90'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 90'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 90'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 90'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 90'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 90'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 90'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 90'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 90'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 90'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 90'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 90'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 90'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 90'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 90'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 90'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 90'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 90'd618970019642690137449562112;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [16:0] data_address0;
output   data_ce0;
input  [31:0] data_q0;
output  [6:0] label_r_address0;
output   label_r_ce0;
input  [7:0] label_r_q0;
output  [9:0] theta_address0;
output   theta_ce0;
output   theta_we0;
output  [31:0] theta_d0;
input  [31:0] theta_q0;
output  [9:0] theta_address1;
output   theta_ce1;
input  [31:0] theta_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[16:0] data_address0;
reg data_ce0;
reg label_r_ce0;
reg[9:0] theta_address0;
reg theta_ce0;
reg theta_we0;
reg theta_ce1;

(* fsm_encoding = "none" *) reg   [89:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] grp_fu_119_p2;
reg   [31:0] reg_137;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state86;
wire   [6:0] select_ln60_fu_177_p3;
reg   [6:0] select_ln60_reg_256;
wire    ap_CS_fsm_state2;
wire   [16:0] shl_ln_fu_190_p3;
reg   [16:0] shl_ln_reg_263;
wire    ap_CS_fsm_state3;
wire   [31:0] xor_ln26_fu_215_p2;
reg   [31:0] xor_ln26_reg_269;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire   [31:0] grp_fu_132_p2;
reg   [31:0] tmp_reg_279;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state68;
reg   [7:0] label_r_load_reg_289;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state70;
wire   [31:0] grp_fu_124_p2;
reg   [31:0] prob_reg_299;
wire    ap_CS_fsm_state76;
wire   [31:0] grp_fu_129_p1;
reg   [31:0] conv_reg_304;
reg   [9:0] gradient_address0;
reg    gradient_ce0;
reg    gradient_we0;
wire   [31:0] gradient_q0;
wire    grp_SgdLR_Pipeline_DOT_fu_93_ap_start;
wire    grp_SgdLR_Pipeline_DOT_fu_93_ap_done;
wire    grp_SgdLR_Pipeline_DOT_fu_93_ap_idle;
wire    grp_SgdLR_Pipeline_DOT_fu_93_ap_ready;
wire   [9:0] grp_SgdLR_Pipeline_DOT_fu_93_theta_address0;
wire    grp_SgdLR_Pipeline_DOT_fu_93_theta_ce0;
wire   [16:0] grp_SgdLR_Pipeline_DOT_fu_93_data_address0;
wire    grp_SgdLR_Pipeline_DOT_fu_93_data_ce0;
wire   [31:0] grp_SgdLR_Pipeline_DOT_fu_93_result_out;
wire    grp_SgdLR_Pipeline_DOT_fu_93_result_out_ap_vld;
wire   [31:0] grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_119_p_din0;
wire   [31:0] grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_119_p_din1;
wire   [0:0] grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_119_p_opcode;
wire    grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_119_p_ce;
wire   [31:0] grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_309_p_din0;
wire   [31:0] grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_309_p_din1;
wire    grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_309_p_ce;
wire    grp_SgdLR_Pipeline_GRAD_fu_103_ap_start;
wire    grp_SgdLR_Pipeline_GRAD_fu_103_ap_done;
wire    grp_SgdLR_Pipeline_GRAD_fu_103_ap_idle;
wire    grp_SgdLR_Pipeline_GRAD_fu_103_ap_ready;
wire   [16:0] grp_SgdLR_Pipeline_GRAD_fu_103_data_address0;
wire    grp_SgdLR_Pipeline_GRAD_fu_103_data_ce0;
wire   [9:0] grp_SgdLR_Pipeline_GRAD_fu_103_gradient_address0;
wire    grp_SgdLR_Pipeline_GRAD_fu_103_gradient_ce0;
wire    grp_SgdLR_Pipeline_GRAD_fu_103_gradient_we0;
wire   [31:0] grp_SgdLR_Pipeline_GRAD_fu_103_gradient_d0;
wire   [31:0] grp_SgdLR_Pipeline_GRAD_fu_103_grp_fu_309_p_din0;
wire   [31:0] grp_SgdLR_Pipeline_GRAD_fu_103_grp_fu_309_p_din1;
wire    grp_SgdLR_Pipeline_GRAD_fu_103_grp_fu_309_p_ce;
wire    grp_SgdLR_Pipeline_UPDATE_fu_112_ap_start;
wire    grp_SgdLR_Pipeline_UPDATE_fu_112_ap_done;
wire    grp_SgdLR_Pipeline_UPDATE_fu_112_ap_idle;
wire    grp_SgdLR_Pipeline_UPDATE_fu_112_ap_ready;
wire   [9:0] grp_SgdLR_Pipeline_UPDATE_fu_112_gradient_address0;
wire    grp_SgdLR_Pipeline_UPDATE_fu_112_gradient_ce0;
wire   [9:0] grp_SgdLR_Pipeline_UPDATE_fu_112_theta_address0;
wire    grp_SgdLR_Pipeline_UPDATE_fu_112_theta_ce0;
wire    grp_SgdLR_Pipeline_UPDATE_fu_112_theta_we0;
wire   [31:0] grp_SgdLR_Pipeline_UPDATE_fu_112_theta_d0;
wire   [9:0] grp_SgdLR_Pipeline_UPDATE_fu_112_theta_address1;
wire    grp_SgdLR_Pipeline_UPDATE_fu_112_theta_ce1;
wire   [31:0] grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_119_p_din0;
wire   [31:0] grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_119_p_din1;
wire   [0:0] grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_119_p_opcode;
wire    grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_119_p_ce;
wire   [31:0] grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_309_p_din0;
wire   [31:0] grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_309_p_din1;
wire    grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_309_p_ce;
reg    grp_SgdLR_Pipeline_DOT_fu_93_ap_start_reg;
wire    ap_CS_fsm_state4;
reg    grp_SgdLR_Pipeline_GRAD_fu_103_ap_start_reg;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state88;
reg    grp_SgdLR_Pipeline_UPDATE_fu_112_ap_start_reg;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_state90;
wire   [63:0] zext_ln63_fu_225_p1;
reg   [6:0] training_id_fu_64;
wire   [6:0] add_ln63_fu_198_p2;
wire   [0:0] icmp_ln60_fu_156_p2;
reg   [8:0] indvar_flatten_fu_68;
wire   [8:0] add_ln60_fu_162_p2;
reg   [31:0] grp_fu_119_p0;
reg   [31:0] grp_fu_119_p1;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state47;
wire   [31:0] grp_fu_129_p0;
wire   [31:0] grp_fu_132_p1;
wire   [0:0] icmp_ln63_fu_171_p2;
wire   [31:0] bitcast_ln26_fu_211_p1;
reg   [1:0] grp_fu_119_opcode;
reg    grp_fu_119_ce;
wire   [31:0] grp_fu_309_p2;
reg   [31:0] grp_fu_309_p0;
reg   [31:0] grp_fu_309_p1;
reg    grp_fu_309_ce;
reg   [89:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
wire    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
wire    ap_ST_fsm_state78_blk;
wire    ap_ST_fsm_state79_blk;
wire    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
wire    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
wire    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
wire    ap_ST_fsm_state86_blk;
wire    ap_ST_fsm_state87_blk;
reg    ap_ST_fsm_state88_blk;
wire    ap_ST_fsm_state89_blk;
reg    ap_ST_fsm_state90_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 90'd1;
#0 grp_SgdLR_Pipeline_DOT_fu_93_ap_start_reg = 1'b0;
#0 grp_SgdLR_Pipeline_GRAD_fu_103_ap_start_reg = 1'b0;
#0 grp_SgdLR_Pipeline_UPDATE_fu_112_ap_start_reg = 1'b0;
#0 training_id_fu_64 = 7'd0;
#0 indvar_flatten_fu_68 = 9'd0;
end

SgdLR_gradient_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
gradient_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(gradient_address0),
    .ce0(gradient_ce0),
    .we0(gradient_we0),
    .d0(grp_SgdLR_Pipeline_GRAD_fu_103_gradient_d0),
    .q0(gradient_q0)
);

SgdLR_SgdLR_Pipeline_DOT grp_SgdLR_Pipeline_DOT_fu_93(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_SgdLR_Pipeline_DOT_fu_93_ap_start),
    .ap_done(grp_SgdLR_Pipeline_DOT_fu_93_ap_done),
    .ap_idle(grp_SgdLR_Pipeline_DOT_fu_93_ap_idle),
    .ap_ready(grp_SgdLR_Pipeline_DOT_fu_93_ap_ready),
    .theta_address0(grp_SgdLR_Pipeline_DOT_fu_93_theta_address0),
    .theta_ce0(grp_SgdLR_Pipeline_DOT_fu_93_theta_ce0),
    .theta_q0(theta_q0),
    .shl_ln(shl_ln_reg_263),
    .data_address0(grp_SgdLR_Pipeline_DOT_fu_93_data_address0),
    .data_ce0(grp_SgdLR_Pipeline_DOT_fu_93_data_ce0),
    .data_q0(data_q0),
    .result_out(grp_SgdLR_Pipeline_DOT_fu_93_result_out),
    .result_out_ap_vld(grp_SgdLR_Pipeline_DOT_fu_93_result_out_ap_vld),
    .grp_fu_119_p_din0(grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_119_p_din0),
    .grp_fu_119_p_din1(grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_119_p_din1),
    .grp_fu_119_p_opcode(grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_119_p_opcode),
    .grp_fu_119_p_dout0(grp_fu_119_p2),
    .grp_fu_119_p_ce(grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_119_p_ce),
    .grp_fu_309_p_din0(grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_309_p_din0),
    .grp_fu_309_p_din1(grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_309_p_din1),
    .grp_fu_309_p_dout0(grp_fu_309_p2),
    .grp_fu_309_p_ce(grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_309_p_ce)
);

SgdLR_SgdLR_Pipeline_GRAD grp_SgdLR_Pipeline_GRAD_fu_103(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_SgdLR_Pipeline_GRAD_fu_103_ap_start),
    .ap_done(grp_SgdLR_Pipeline_GRAD_fu_103_ap_done),
    .ap_idle(grp_SgdLR_Pipeline_GRAD_fu_103_ap_idle),
    .ap_ready(grp_SgdLR_Pipeline_GRAD_fu_103_ap_ready),
    .shl_ln(shl_ln_reg_263),
    .data_address0(grp_SgdLR_Pipeline_GRAD_fu_103_data_address0),
    .data_ce0(grp_SgdLR_Pipeline_GRAD_fu_103_data_ce0),
    .data_q0(data_q0),
    .scale_assign(reg_137),
    .gradient_address0(grp_SgdLR_Pipeline_GRAD_fu_103_gradient_address0),
    .gradient_ce0(grp_SgdLR_Pipeline_GRAD_fu_103_gradient_ce0),
    .gradient_we0(grp_SgdLR_Pipeline_GRAD_fu_103_gradient_we0),
    .gradient_d0(grp_SgdLR_Pipeline_GRAD_fu_103_gradient_d0),
    .grp_fu_309_p_din0(grp_SgdLR_Pipeline_GRAD_fu_103_grp_fu_309_p_din0),
    .grp_fu_309_p_din1(grp_SgdLR_Pipeline_GRAD_fu_103_grp_fu_309_p_din1),
    .grp_fu_309_p_dout0(grp_fu_309_p2),
    .grp_fu_309_p_ce(grp_SgdLR_Pipeline_GRAD_fu_103_grp_fu_309_p_ce)
);

SgdLR_SgdLR_Pipeline_UPDATE grp_SgdLR_Pipeline_UPDATE_fu_112(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_SgdLR_Pipeline_UPDATE_fu_112_ap_start),
    .ap_done(grp_SgdLR_Pipeline_UPDATE_fu_112_ap_done),
    .ap_idle(grp_SgdLR_Pipeline_UPDATE_fu_112_ap_idle),
    .ap_ready(grp_SgdLR_Pipeline_UPDATE_fu_112_ap_ready),
    .gradient_address0(grp_SgdLR_Pipeline_UPDATE_fu_112_gradient_address0),
    .gradient_ce0(grp_SgdLR_Pipeline_UPDATE_fu_112_gradient_ce0),
    .gradient_q0(gradient_q0),
    .theta_address0(grp_SgdLR_Pipeline_UPDATE_fu_112_theta_address0),
    .theta_ce0(grp_SgdLR_Pipeline_UPDATE_fu_112_theta_ce0),
    .theta_we0(grp_SgdLR_Pipeline_UPDATE_fu_112_theta_we0),
    .theta_d0(grp_SgdLR_Pipeline_UPDATE_fu_112_theta_d0),
    .theta_address1(grp_SgdLR_Pipeline_UPDATE_fu_112_theta_address1),
    .theta_ce1(grp_SgdLR_Pipeline_UPDATE_fu_112_theta_ce1),
    .theta_q1(theta_q1),
    .grp_fu_119_p_din0(grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_119_p_din0),
    .grp_fu_119_p_din1(grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_119_p_din1),
    .grp_fu_119_p_opcode(grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_119_p_opcode),
    .grp_fu_119_p_dout0(grp_fu_119_p2),
    .grp_fu_119_p_ce(grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_119_p_ce),
    .grp_fu_309_p_din0(grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_309_p_din0),
    .grp_fu_309_p_din1(grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_309_p_din1),
    .grp_fu_309_p_dout0(grp_fu_309_p2),
    .grp_fu_309_p_ce(grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_309_p_ce)
);

SgdLR_faddfsub_32ns_32ns_32_10_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_10_full_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_119_p0),
    .din1(grp_fu_119_p1),
    .opcode(grp_fu_119_opcode),
    .ce(grp_fu_119_ce),
    .dout(grp_fu_119_p2)
);

SgdLR_fdiv_32ns_32ns_32_30_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 30 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_30_no_dsp_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd1065353216),
    .din1(reg_137),
    .ce(1'b1),
    .dout(grp_fu_124_p2)
);

SgdLR_sitofp_32ns_32_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32ns_32_7_no_dsp_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_129_p0),
    .ce(1'b1),
    .dout(grp_fu_129_p1)
);

SgdLR_fexp_32ns_32ns_32_31_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fexp_32ns_32ns_32_31_full_dsp_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(grp_fu_132_p1),
    .ce(1'b1),
    .dout(grp_fu_132_p2)
);

SgdLR_fmul_32ns_32ns_32_8_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_8_max_dsp_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_309_p0),
    .din1(grp_fu_309_p1),
    .ce(grp_fu_309_ce),
    .dout(grp_fu_309_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_SgdLR_Pipeline_DOT_fu_93_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_SgdLR_Pipeline_DOT_fu_93_ap_start_reg <= 1'b1;
        end else if ((grp_SgdLR_Pipeline_DOT_fu_93_ap_ready == 1'b1)) begin
            grp_SgdLR_Pipeline_DOT_fu_93_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_SgdLR_Pipeline_GRAD_fu_103_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state87)) begin
            grp_SgdLR_Pipeline_GRAD_fu_103_ap_start_reg <= 1'b1;
        end else if ((grp_SgdLR_Pipeline_GRAD_fu_103_ap_ready == 1'b1)) begin
            grp_SgdLR_Pipeline_GRAD_fu_103_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_SgdLR_Pipeline_UPDATE_fu_112_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state89)) begin
            grp_SgdLR_Pipeline_UPDATE_fu_112_ap_start_reg <= 1'b1;
        end else if ((grp_SgdLR_Pipeline_UPDATE_fu_112_ap_ready == 1'b1)) begin
            grp_SgdLR_Pipeline_UPDATE_fu_112_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_fu_68 <= 9'd0;
    end else if (((icmp_ln60_fu_156_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_fu_68 <= add_ln60_fu_162_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        training_id_fu_64 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        training_id_fu_64 <= add_ln63_fu_198_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        conv_reg_304 <= grp_fu_129_p1;
        prob_reg_299 <= grp_fu_124_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        label_r_load_reg_289 <= label_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state46))) begin
        reg_137 <= grp_fu_119_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        select_ln60_reg_256 <= select_ln60_fu_177_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        shl_ln_reg_263[16 : 10] <= shl_ln_fu_190_p3[16 : 10];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        tmp_reg_279 <= grp_fu_132_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        xor_ln26_reg_269 <= xor_ln26_fu_215_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

always @ (*) begin
    if ((grp_SgdLR_Pipeline_DOT_fu_93_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

assign ap_ST_fsm_state76_blk = 1'b0;

assign ap_ST_fsm_state77_blk = 1'b0;

assign ap_ST_fsm_state78_blk = 1'b0;

assign ap_ST_fsm_state79_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state80_blk = 1'b0;

assign ap_ST_fsm_state81_blk = 1'b0;

assign ap_ST_fsm_state82_blk = 1'b0;

assign ap_ST_fsm_state83_blk = 1'b0;

assign ap_ST_fsm_state84_blk = 1'b0;

assign ap_ST_fsm_state85_blk = 1'b0;

assign ap_ST_fsm_state86_blk = 1'b0;

assign ap_ST_fsm_state87_blk = 1'b0;

always @ (*) begin
    if ((grp_SgdLR_Pipeline_GRAD_fu_103_ap_done == 1'b0)) begin
        ap_ST_fsm_state88_blk = 1'b1;
    end else begin
        ap_ST_fsm_state88_blk = 1'b0;
    end
end

assign ap_ST_fsm_state89_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if ((grp_SgdLR_Pipeline_UPDATE_fu_112_ap_done == 1'b0)) begin
        ap_ST_fsm_state90_blk = 1'b1;
    end else begin
        ap_ST_fsm_state90_blk = 1'b0;
    end
end

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln60_fu_156_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln60_fu_156_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        data_address0 = grp_SgdLR_Pipeline_GRAD_fu_103_data_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        data_address0 = grp_SgdLR_Pipeline_DOT_fu_93_data_address0;
    end else begin
        data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        data_ce0 = grp_SgdLR_Pipeline_GRAD_fu_103_data_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        data_ce0 = grp_SgdLR_Pipeline_DOT_fu_93_data_ce0;
    end else begin
        data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        gradient_address0 = grp_SgdLR_Pipeline_UPDATE_fu_112_gradient_address0;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        gradient_address0 = grp_SgdLR_Pipeline_GRAD_fu_103_gradient_address0;
    end else begin
        gradient_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        gradient_ce0 = grp_SgdLR_Pipeline_UPDATE_fu_112_gradient_ce0;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        gradient_ce0 = grp_SgdLR_Pipeline_GRAD_fu_103_gradient_ce0;
    end else begin
        gradient_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        gradient_we0 = grp_SgdLR_Pipeline_GRAD_fu_103_gradient_we0;
    end else begin
        gradient_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_119_ce = grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_119_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_119_ce = grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_119_p_ce;
    end else begin
        grp_fu_119_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_119_opcode = grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_119_p_opcode;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_119_opcode = grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_119_p_opcode;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_fu_119_opcode = 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_119_opcode = 2'd0;
    end else begin
        grp_fu_119_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_119_p0 = grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_119_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_119_p0 = grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_119_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_fu_119_p0 = prob_reg_299;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_119_p0 = tmp_reg_279;
    end else begin
        grp_fu_119_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_119_p1 = grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_119_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_119_p1 = grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_119_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_fu_119_p1 = conv_reg_304;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_119_p1 = 32'd1065353216;
    end else begin
        grp_fu_119_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_309_ce = grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_309_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_309_ce = grp_SgdLR_Pipeline_GRAD_fu_103_grp_fu_309_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_309_ce = grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_309_p_ce;
    end else begin
        grp_fu_309_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_309_p0 = grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_309_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_309_p0 = grp_SgdLR_Pipeline_GRAD_fu_103_grp_fu_309_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_309_p0 = grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_309_p_din0;
    end else begin
        grp_fu_309_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_309_p1 = grp_SgdLR_Pipeline_UPDATE_fu_112_grp_fu_309_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_309_p1 = grp_SgdLR_Pipeline_GRAD_fu_103_grp_fu_309_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_309_p1 = grp_SgdLR_Pipeline_DOT_fu_93_grp_fu_309_p_din1;
    end else begin
        grp_fu_309_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        label_r_ce0 = 1'b1;
    end else begin
        label_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        theta_address0 = grp_SgdLR_Pipeline_UPDATE_fu_112_theta_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        theta_address0 = grp_SgdLR_Pipeline_DOT_fu_93_theta_address0;
    end else begin
        theta_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        theta_ce0 = grp_SgdLR_Pipeline_UPDATE_fu_112_theta_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        theta_ce0 = grp_SgdLR_Pipeline_DOT_fu_93_theta_ce0;
    end else begin
        theta_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        theta_ce1 = grp_SgdLR_Pipeline_UPDATE_fu_112_theta_ce1;
    end else begin
        theta_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        theta_we0 = grp_SgdLR_Pipeline_UPDATE_fu_112_theta_we0;
    end else begin
        theta_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln60_fu_156_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_SgdLR_Pipeline_DOT_fu_93_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            if (((grp_SgdLR_Pipeline_GRAD_fu_103_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state88))) begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            if (((grp_SgdLR_Pipeline_UPDATE_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state90))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state90;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln60_fu_162_p2 = (indvar_flatten_fu_68 + 9'd1);

assign add_ln63_fu_198_p2 = (select_ln60_reg_256 + 7'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign bitcast_ln26_fu_211_p1 = grp_SgdLR_Pipeline_DOT_fu_93_result_out;

assign grp_SgdLR_Pipeline_DOT_fu_93_ap_start = grp_SgdLR_Pipeline_DOT_fu_93_ap_start_reg;

assign grp_SgdLR_Pipeline_GRAD_fu_103_ap_start = grp_SgdLR_Pipeline_GRAD_fu_103_ap_start_reg;

assign grp_SgdLR_Pipeline_UPDATE_fu_112_ap_start = grp_SgdLR_Pipeline_UPDATE_fu_112_ap_start_reg;

assign grp_fu_129_p0 = label_r_load_reg_289;

assign grp_fu_132_p1 = xor_ln26_reg_269;

assign icmp_ln60_fu_156_p2 = ((indvar_flatten_fu_68 == 9'd400) ? 1'b1 : 1'b0);

assign icmp_ln63_fu_171_p2 = ((training_id_fu_64 == 7'd80) ? 1'b1 : 1'b0);

assign label_r_address0 = zext_ln63_fu_225_p1;

assign select_ln60_fu_177_p3 = ((icmp_ln63_fu_171_p2[0:0] == 1'b1) ? 7'd0 : training_id_fu_64);

assign shl_ln_fu_190_p3 = {{select_ln60_reg_256}, {10'd0}};

assign theta_address1 = grp_SgdLR_Pipeline_UPDATE_fu_112_theta_address1;

assign theta_d0 = grp_SgdLR_Pipeline_UPDATE_fu_112_theta_d0;

assign xor_ln26_fu_215_p2 = (bitcast_ln26_fu_211_p1 ^ 32'd2147483648);

assign zext_ln63_fu_225_p1 = select_ln60_reg_256;

always @ (posedge ap_clk) begin
    shl_ln_reg_263[9:0] <= 10'b0000000000;
end

endmodule //SgdLR
