// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module face_detect_cascadeClassifier (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        SUM1_data_address0,
        SUM1_data_ce0,
        SUM1_data_q0,
        SUM1_data_address1,
        SUM1_data_ce1,
        SUM1_data_q1,
        SUM1_data_address2,
        SUM1_data_ce2,
        SUM1_data_q2,
        SUM1_data_address3,
        SUM1_data_ce3,
        SUM1_data_q3,
        SUM1_data_address4,
        SUM1_data_ce4,
        SUM1_data_q4,
        SUM1_data_address5,
        SUM1_data_ce5,
        SUM1_data_q5,
        SQSUM1_data_address0,
        SQSUM1_data_ce0,
        SQSUM1_data_q0,
        SQSUM1_data_address1,
        SQSUM1_data_ce1,
        SQSUM1_data_q1,
        pt_x_val,
        pt_y_val,
        ap_return,
        grp_fu_342_p_din0,
        grp_fu_342_p_din1,
        grp_fu_342_p_dout0,
        grp_fu_342_p_ce
);

parameter    ap_ST_fsm_state1 = 45'd1;
parameter    ap_ST_fsm_state2 = 45'd2;
parameter    ap_ST_fsm_state3 = 45'd4;
parameter    ap_ST_fsm_state4 = 45'd8;
parameter    ap_ST_fsm_state5 = 45'd16;
parameter    ap_ST_fsm_state6 = 45'd32;
parameter    ap_ST_fsm_state7 = 45'd64;
parameter    ap_ST_fsm_state8 = 45'd128;
parameter    ap_ST_fsm_state9 = 45'd256;
parameter    ap_ST_fsm_state10 = 45'd512;
parameter    ap_ST_fsm_state11 = 45'd1024;
parameter    ap_ST_fsm_state12 = 45'd2048;
parameter    ap_ST_fsm_state13 = 45'd4096;
parameter    ap_ST_fsm_state14 = 45'd8192;
parameter    ap_ST_fsm_state15 = 45'd16384;
parameter    ap_ST_fsm_state16 = 45'd32768;
parameter    ap_ST_fsm_state17 = 45'd65536;
parameter    ap_ST_fsm_state18 = 45'd131072;
parameter    ap_ST_fsm_state19 = 45'd262144;
parameter    ap_ST_fsm_state20 = 45'd524288;
parameter    ap_ST_fsm_state21 = 45'd1048576;
parameter    ap_ST_fsm_state22 = 45'd2097152;
parameter    ap_ST_fsm_state23 = 45'd4194304;
parameter    ap_ST_fsm_state24 = 45'd8388608;
parameter    ap_ST_fsm_state25 = 45'd16777216;
parameter    ap_ST_fsm_state26 = 45'd33554432;
parameter    ap_ST_fsm_state27 = 45'd67108864;
parameter    ap_ST_fsm_state28 = 45'd134217728;
parameter    ap_ST_fsm_state29 = 45'd268435456;
parameter    ap_ST_fsm_state30 = 45'd536870912;
parameter    ap_ST_fsm_state31 = 45'd1073741824;
parameter    ap_ST_fsm_state32 = 45'd2147483648;
parameter    ap_ST_fsm_state33 = 45'd4294967296;
parameter    ap_ST_fsm_state34 = 45'd8589934592;
parameter    ap_ST_fsm_state35 = 45'd17179869184;
parameter    ap_ST_fsm_state36 = 45'd34359738368;
parameter    ap_ST_fsm_state37 = 45'd68719476736;
parameter    ap_ST_fsm_state38 = 45'd137438953472;
parameter    ap_ST_fsm_state39 = 45'd274877906944;
parameter    ap_ST_fsm_state40 = 45'd549755813888;
parameter    ap_ST_fsm_state41 = 45'd1099511627776;
parameter    ap_ST_fsm_state42 = 45'd2199023255552;
parameter    ap_ST_fsm_state43 = 45'd4398046511104;
parameter    ap_ST_fsm_state44 = 45'd8796093022208;
parameter    ap_ST_fsm_state45 = 45'd17592186044416;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [16:0] SUM1_data_address0;
output   SUM1_data_ce0;
input  [31:0] SUM1_data_q0;
output  [16:0] SUM1_data_address1;
output   SUM1_data_ce1;
input  [31:0] SUM1_data_q1;
output  [16:0] SUM1_data_address2;
output   SUM1_data_ce2;
input  [31:0] SUM1_data_q2;
output  [16:0] SUM1_data_address3;
output   SUM1_data_ce3;
input  [31:0] SUM1_data_q3;
output  [16:0] SUM1_data_address4;
output   SUM1_data_ce4;
input  [31:0] SUM1_data_q4;
output  [16:0] SUM1_data_address5;
output   SUM1_data_ce5;
input  [31:0] SUM1_data_q5;
output  [16:0] SQSUM1_data_address0;
output   SQSUM1_data_ce0;
input  [31:0] SQSUM1_data_q0;
output  [16:0] SQSUM1_data_address1;
output   SQSUM1_data_ce1;
input  [31:0] SQSUM1_data_q1;
input  [16:0] pt_x_val;
input  [7:0] pt_y_val;
output  [5:0] ap_return;
output  [32:0] grp_fu_342_p_din0;
output  [32:0] grp_fu_342_p_din1;
input  [63:0] grp_fu_342_p_dout0;
output   grp_fu_342_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[16:0] SUM1_data_address0;
reg SUM1_data_ce0;
reg[16:0] SUM1_data_address1;
reg SUM1_data_ce1;
reg SUM1_data_ce2;
reg SUM1_data_ce3;
reg SUM1_data_ce4;
reg SUM1_data_ce5;
reg[16:0] SQSUM1_data_address0;
reg SQSUM1_data_ce0;
reg[16:0] SQSUM1_data_address1;
reg SQSUM1_data_ce1;
reg[5:0] ap_return;

(* fsm_encoding = "none" *) reg   [44:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] stages_array_address0;
reg    stages_array_ce0;
wire   [7:0] stages_array_q0;
wire   [4:0] stages_thresh_array_address0;
reg    stages_thresh_array_ce0;
wire   [11:0] stages_thresh_array_q0;
reg   [31:0] reg_359;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg   [31:0] reg_364;
wire   [63:0] grp_fu_352_p1;
reg   [63:0] reg_369;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state40;
wire   [16:0] add_ln180_fu_399_p2;
reg   [16:0] add_ln180_reg_773;
wire   [16:0] add_ln176_fu_405_p2;
reg   [16:0] add_ln176_reg_779;
wire   [7:0] add_ln177_fu_411_p2;
reg   [7:0] add_ln177_reg_785;
wire   [16:0] add_ln180_1_fu_417_p2;
reg   [16:0] add_ln180_1_reg_791;
wire    ap_CS_fsm_state2;
wire   [16:0] add_ln181_fu_421_p2;
reg   [16:0] add_ln181_reg_796;
wire   [16:0] add_ln182_fu_447_p2;
reg   [16:0] add_ln182_reg_801;
wire    ap_CS_fsm_state3;
wire   [16:0] add_ln182_1_fu_463_p2;
reg   [16:0] add_ln182_1_reg_827;
wire   [16:0] add_ln183_fu_467_p2;
reg   [16:0] add_ln183_reg_832;
reg   [31:0] SQSUM1_data_load_1_reg_837;
reg   [31:0] SUM1_data_load_1_reg_852;
wire   [31:0] sub_ln176_fu_476_p2;
reg   [31:0] sub_ln176_reg_857;
wire   [31:0] sub_ln181_fu_486_p2;
reg   [31:0] sub_ln181_reg_872;
wire   [31:0] sub_ln177_fu_491_p2;
reg   [31:0] sub_ln177_reg_877;
wire   [31:0] sub_ln182_fu_496_p2;
reg   [31:0] sub_ln182_reg_882;
wire   [31:0] stddev_fu_501_p2;
reg   [31:0] stddev_reg_887;
wire    ap_CS_fsm_state7;
wire   [31:0] mean_fu_506_p2;
reg   [31:0] mean_reg_893;
wire  signed [63:0] sext_ln180_fu_511_p1;
wire   [41:0] stddev_1_fu_538_p2;
reg   [41:0] stddev_1_reg_904;
wire    ap_CS_fsm_state12;
reg   [63:0] mul_ln186_reg_909;
wire   [63:0] stddev_2_fu_547_p2;
reg   [63:0] stddev_2_reg_914;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln188_fu_552_p2;
reg   [0:0] icmp_ln188_reg_920;
wire    ap_CS_fsm_state14;
wire   [31:0] trunc_ln189_fu_557_p1;
reg   [31:0] trunc_ln189_reg_924;
wire    ap_CS_fsm_state15;
wire   [0:0] icmp_ln199_fu_583_p2;
reg   [0:0] icmp_ln199_reg_953;
wire    ap_CS_fsm_state18;
wire   [4:0] add_ln199_fu_589_p2;
reg   [4:0] add_ln199_reg_957;
reg   [7:0] stages_array_load_reg_972;
wire    ap_CS_fsm_state19;
reg   [11:0] stages_thresh_array_load_reg_979;
wire   [7:0] add_ln200_fu_621_p2;
reg   [7:0] add_ln200_reg_990;
wire    ap_CS_fsm_state20;
wire   [31:0] select_ln256_fu_633_p3;
reg   [31:0] select_ln256_reg_995;
wire  signed [31:0] sext_ln256_fu_641_p1;
wire   [63:0] grp_fu_343_p2;
reg   [63:0] mul_reg_1008;
wire   [0:0] icmp_ln256_fu_684_p2;
reg   [0:0] icmp_ln256_reg_1014;
wire    ap_CS_fsm_state41;
wire   [0:0] icmp_ln256_1_fu_690_p2;
reg   [0:0] icmp_ln256_1_reg_1019;
wire   [0:0] icmp_ln256_2_fu_696_p2;
reg   [0:0] icmp_ln256_2_reg_1024;
wire   [0:0] icmp_ln256_3_fu_702_p2;
reg   [0:0] icmp_ln256_3_reg_1029;
wire   [0:0] grp_fu_348_p2;
reg   [0:0] tmp_4_reg_1034;
wire    ap_CS_fsm_state44;
wire    grp_cascadeClassifier_Pipeline_VITIS_LOOP_379_1_fu_281_ap_start;
wire    grp_cascadeClassifier_Pipeline_VITIS_LOOP_379_1_fu_281_ap_done;
wire    grp_cascadeClassifier_Pipeline_VITIS_LOOP_379_1_fu_281_ap_idle;
wire    grp_cascadeClassifier_Pipeline_VITIS_LOOP_379_1_fu_281_ap_ready;
wire   [31:0] grp_cascadeClassifier_Pipeline_VITIS_LOOP_379_1_fu_281_a_out;
wire    grp_cascadeClassifier_Pipeline_VITIS_LOOP_379_1_fu_281_a_out_ap_vld;
wire    grp_cascadeClassifier_Pipeline_Filters_fu_287_ap_start;
wire    grp_cascadeClassifier_Pipeline_Filters_fu_287_ap_done;
wire    grp_cascadeClassifier_Pipeline_Filters_fu_287_ap_idle;
wire    grp_cascadeClassifier_Pipeline_Filters_fu_287_ap_ready;
wire   [16:0] grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_address0;
wire    grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_ce0;
wire   [16:0] grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_address1;
wire    grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_ce1;
wire   [16:0] grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_address2;
wire    grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_ce2;
wire   [16:0] grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_address3;
wire    grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_ce3;
wire   [16:0] grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_address4;
wire    grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_ce4;
wire   [16:0] grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_address5;
wire    grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_ce5;
wire   [63:0] grp_cascadeClassifier_Pipeline_Filters_fu_287_stage_sum_1_out;
wire    grp_cascadeClassifier_Pipeline_Filters_fu_287_stage_sum_1_out_ap_vld;
reg   [31:0] stddev_0_reg_258;
wire    ap_CS_fsm_state17;
wire   [5:0] sub_ln257_fu_742_p2;
reg   [5:0] ap_phi_mux_retval_0_phi_fu_274_p4;
reg   [5:0] retval_0_reg_270;
wire    ap_CS_fsm_state45;
wire   [0:0] and_ln256_1_fu_722_p2;
reg    grp_cascadeClassifier_Pipeline_VITIS_LOOP_379_1_fu_281_ap_start_reg;
wire    ap_CS_fsm_state16;
reg    grp_cascadeClassifier_Pipeline_Filters_fu_287_ap_start_reg;
wire    ap_CS_fsm_state21;
wire   [63:0] zext_ln180_2_fu_453_p1;
wire   [63:0] zext_ln181_fu_458_p1;
wire   [63:0] zext_ln182_2_fu_471_p1;
wire   [63:0] zext_ln183_fu_481_p1;
wire   [63:0] zext_ln199_fu_595_p1;
wire    ap_CS_fsm_state34;
reg   [31:0] haar_counter_fu_126;
reg   [63:0] stage_sum_fu_130;
reg   [4:0] i_2_fu_134;
wire    ap_CS_fsm_state27;
reg  signed [63:0] grp_fu_352_p0;
wire   [15:0] tmp_26_fu_375_p3;
wire   [13:0] tmp_27_fu_387_p3;
wire   [16:0] zext_ln180_fu_383_p1;
wire   [16:0] zext_ln180_1_fu_395_p1;
wire   [15:0] tmp_28_fu_425_p3;
wire   [13:0] tmp_29_fu_436_p3;
wire   [16:0] zext_ln182_fu_432_p1;
wire   [16:0] zext_ln182_1_fu_443_p1;
wire   [40:0] shl_ln_fu_516_p3;
wire   [37:0] shl_ln185_1_fu_527_p3;
wire  signed [41:0] sext_ln185_fu_523_p1;
wire  signed [41:0] sext_ln185_1_fu_534_p1;
wire  signed [63:0] sext_ln159_fu_544_p1;
wire   [7:0] empty_fu_617_p1;
wire   [31:0] zext_ln200_fu_609_p1;
wire   [0:0] icmp_ln200_fu_612_p2;
wire   [31:0] haar_counter_2_fu_627_p2;
wire   [63:0] bitcast_ln256_fu_649_p1;
wire   [63:0] bitcast_ln256_1_fu_667_p1;
wire   [10:0] tmp_s_fu_653_p4;
wire   [51:0] trunc_ln256_fu_663_p1;
wire   [10:0] tmp_3_fu_670_p4;
wire   [51:0] trunc_ln256_1_fu_680_p1;
wire   [0:0] or_ln256_fu_708_p2;
wire   [0:0] or_ln256_1_fu_712_p2;
wire   [0:0] and_ln256_fu_716_p2;
wire   [5:0] zext_ln257_fu_739_p1;
reg    grp_fu_352_ce;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
reg   [5:0] ap_return_preg;
reg   [44:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
reg    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 45'd1;
#0 grp_cascadeClassifier_Pipeline_VITIS_LOOP_379_1_fu_281_ap_start_reg = 1'b0;
#0 grp_cascadeClassifier_Pipeline_Filters_fu_287_ap_start_reg = 1'b0;
#0 haar_counter_fu_126 = 32'd0;
#0 stage_sum_fu_130 = 64'd0;
#0 i_2_fu_134 = 5'd0;
#0 ap_return_preg = 6'd0;
end

face_detect_cascadeClassifier_stages_array_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
stages_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stages_array_address0),
    .ce0(stages_array_ce0),
    .q0(stages_array_q0)
);

face_detect_cascadeClassifier_stages_thresh_array_ROM_AUTO_1R #(
    .DataWidth( 12 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
stages_thresh_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stages_thresh_array_address0),
    .ce0(stages_thresh_array_ce0),
    .q0(stages_thresh_array_q0)
);

face_detect_cascadeClassifier_Pipeline_VITIS_LOOP_379_1 grp_cascadeClassifier_Pipeline_VITIS_LOOP_379_1_fu_281(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cascadeClassifier_Pipeline_VITIS_LOOP_379_1_fu_281_ap_start),
    .ap_done(grp_cascadeClassifier_Pipeline_VITIS_LOOP_379_1_fu_281_ap_done),
    .ap_idle(grp_cascadeClassifier_Pipeline_VITIS_LOOP_379_1_fu_281_ap_idle),
    .ap_ready(grp_cascadeClassifier_Pipeline_VITIS_LOOP_379_1_fu_281_ap_ready),
    .empty(trunc_ln189_reg_924),
    .a_out(grp_cascadeClassifier_Pipeline_VITIS_LOOP_379_1_fu_281_a_out),
    .a_out_ap_vld(grp_cascadeClassifier_Pipeline_VITIS_LOOP_379_1_fu_281_a_out_ap_vld)
);

face_detect_cascadeClassifier_Pipeline_Filters grp_cascadeClassifier_Pipeline_Filters_fu_287(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cascadeClassifier_Pipeline_Filters_fu_287_ap_start),
    .ap_done(grp_cascadeClassifier_Pipeline_Filters_fu_287_ap_done),
    .ap_idle(grp_cascadeClassifier_Pipeline_Filters_fu_287_ap_idle),
    .ap_ready(grp_cascadeClassifier_Pipeline_Filters_fu_287_ap_ready),
    .sext_ln200(haar_counter_fu_126),
    .stage_sum(stage_sum_fu_130),
    .add_ln200(add_ln200_reg_990),
    .stddev_0(stddev_0_reg_258),
    .pt_y_val(pt_y_val),
    .pt_x_val(pt_x_val),
    .SUM1_data_address0(grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_address0),
    .SUM1_data_ce0(grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_ce0),
    .SUM1_data_q0(SUM1_data_q0),
    .SUM1_data_address1(grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_address1),
    .SUM1_data_ce1(grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_ce1),
    .SUM1_data_q1(SUM1_data_q1),
    .SUM1_data_address2(grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_address2),
    .SUM1_data_ce2(grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_ce2),
    .SUM1_data_q2(SUM1_data_q2),
    .SUM1_data_address3(grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_address3),
    .SUM1_data_ce3(grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_ce3),
    .SUM1_data_q3(SUM1_data_q3),
    .SUM1_data_address4(grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_address4),
    .SUM1_data_ce4(grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_ce4),
    .SUM1_data_q4(SUM1_data_q4),
    .SUM1_data_address5(grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_address5),
    .SUM1_data_ce5(grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_ce5),
    .SUM1_data_q5(SUM1_data_q5),
    .stage_sum_1_out(grp_cascadeClassifier_Pipeline_Filters_fu_287_stage_sum_1_out),
    .stage_sum_1_out_ap_vld(grp_cascadeClassifier_Pipeline_Filters_fu_287_stage_sum_1_out_ap_vld)
);

face_detect_dmul_64ns_64ns_64_14_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_14_full_dsp_1_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_369),
    .din1(64'd4600877379321698714),
    .ce(1'b1),
    .dout(grp_fu_343_p2)
);

face_detect_dcmp_64ns_64ns_1_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_4_no_dsp_1_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_369),
    .din1(mul_reg_1008),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_348_p2)
);

face_detect_sitodp_64s_64_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sitodp_64s_64_7_no_dsp_1_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_352_p0),
    .ce(grp_fu_352_ce),
    .dout(grp_fu_352_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 6'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state45) & ((1'd1 == and_ln256_1_fu_722_p2) | (icmp_ln199_reg_953 == 1'd0)))) begin
            ap_return_preg <= ap_phi_mux_retval_0_phi_fu_274_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cascadeClassifier_Pipeline_Filters_fu_287_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state20)) begin
            grp_cascadeClassifier_Pipeline_Filters_fu_287_ap_start_reg <= 1'b1;
        end else if ((grp_cascadeClassifier_Pipeline_Filters_fu_287_ap_ready == 1'b1)) begin
            grp_cascadeClassifier_Pipeline_Filters_fu_287_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cascadeClassifier_Pipeline_VITIS_LOOP_379_1_fu_281_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln188_reg_920 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
            grp_cascadeClassifier_Pipeline_VITIS_LOOP_379_1_fu_281_ap_start_reg <= 1'b1;
        end else if ((grp_cascadeClassifier_Pipeline_VITIS_LOOP_379_1_fu_281_ap_ready == 1'b1)) begin
            grp_cascadeClassifier_Pipeline_VITIS_LOOP_379_1_fu_281_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        haar_counter_fu_126 <= 32'd0;
    end else if (((1'd0 == and_ln256_1_fu_722_p2) & (icmp_ln199_reg_953 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
        haar_counter_fu_126 <= select_ln256_reg_995;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i_2_fu_134 <= 5'd0;
    end else if (((1'd0 == and_ln256_1_fu_722_p2) & (icmp_ln199_reg_953 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
        i_2_fu_134 <= add_ln199_reg_957;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        reg_359 <= SQSUM1_data_q0;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_359 <= SQSUM1_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        reg_364 <= SUM1_data_q0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        reg_364 <= SUM1_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln199_fu_583_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        retval_0_reg_270 <= 6'd1;
    end else if (((1'd1 == and_ln256_1_fu_722_p2) & (icmp_ln199_reg_953 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
        retval_0_reg_270 <= sub_ln257_fu_742_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        stage_sum_fu_130 <= 64'd0;
    end else if (((1'd0 == and_ln256_1_fu_722_p2) & (icmp_ln199_reg_953 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
        stage_sum_fu_130 <= grp_cascadeClassifier_Pipeline_Filters_fu_287_stage_sum_1_out;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln188_reg_920 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        stddev_0_reg_258 <= 32'd1;
    end else if (((icmp_ln188_reg_920 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        stddev_0_reg_258 <= grp_cascadeClassifier_Pipeline_VITIS_LOOP_379_1_fu_281_a_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        SQSUM1_data_load_1_reg_837 <= SQSUM1_data_q0;
        SUM1_data_load_1_reg_852 <= SUM1_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        add_ln176_reg_779 <= add_ln176_fu_405_p2;
        add_ln177_reg_785 <= add_ln177_fu_411_p2;
        add_ln180_reg_773[16 : 6] <= add_ln180_fu_399_p2[16 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln180_1_reg_791 <= add_ln180_1_fu_417_p2;
        add_ln181_reg_796 <= add_ln181_fu_421_p2;
        add_ln182_reg_801[16 : 6] <= add_ln182_fu_447_p2[16 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln182_1_reg_827 <= add_ln182_1_fu_463_p2;
        add_ln183_reg_832 <= add_ln183_fu_467_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln199_reg_957 <= add_ln199_fu_589_p2;
        icmp_ln199_reg_953 <= icmp_ln199_fu_583_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        add_ln200_reg_990 <= add_ln200_fu_621_p2;
        select_ln256_reg_995 <= select_ln256_fu_633_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        icmp_ln188_reg_920 <= icmp_ln188_fu_552_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        icmp_ln256_1_reg_1019 <= icmp_ln256_1_fu_690_p2;
        icmp_ln256_2_reg_1024 <= icmp_ln256_2_fu_696_p2;
        icmp_ln256_3_reg_1029 <= icmp_ln256_3_fu_702_p2;
        icmp_ln256_reg_1014 <= icmp_ln256_fu_684_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        mean_reg_893 <= mean_fu_506_p2;
        stddev_reg_887 <= stddev_fu_501_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        mul_ln186_reg_909 <= grp_fu_342_p_dout0;
        stddev_1_reg_904[41 : 6] <= stddev_1_fu_538_p2[41 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        mul_reg_1008 <= grp_fu_343_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state26))) begin
        reg_369 <= grp_fu_352_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        stages_array_load_reg_972 <= stages_array_q0;
        stages_thresh_array_load_reg_979 <= stages_thresh_array_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        stddev_2_reg_914 <= stddev_2_fu_547_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        sub_ln176_reg_857 <= sub_ln176_fu_476_p2;
        sub_ln181_reg_872 <= sub_ln181_fu_486_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sub_ln177_reg_877 <= sub_ln177_fu_491_p2;
        sub_ln182_reg_882 <= sub_ln182_fu_496_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        tmp_4_reg_1034 <= grp_fu_348_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        trunc_ln189_reg_924 <= trunc_ln189_fu_557_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        SQSUM1_data_address0 = zext_ln182_2_fu_471_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        SQSUM1_data_address0 = zext_ln181_fu_458_p1;
    end else begin
        SQSUM1_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        SQSUM1_data_address1 = zext_ln183_fu_481_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        SQSUM1_data_address1 = zext_ln180_2_fu_453_p1;
    end else begin
        SQSUM1_data_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4))) begin
        SQSUM1_data_ce0 = 1'b1;
    end else begin
        SQSUM1_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5))) begin
        SQSUM1_data_ce1 = 1'b1;
    end else begin
        SQSUM1_data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        SUM1_data_address0 = zext_ln183_fu_481_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        SUM1_data_address0 = zext_ln182_2_fu_471_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        SUM1_data_address0 = zext_ln181_fu_458_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        SUM1_data_address0 = grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_address0;
    end else begin
        SUM1_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        SUM1_data_address1 = zext_ln180_2_fu_453_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        SUM1_data_address1 = grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_address1;
    end else begin
        SUM1_data_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        SUM1_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        SUM1_data_ce0 = grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_ce0;
    end else begin
        SUM1_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        SUM1_data_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        SUM1_data_ce1 = grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_ce1;
    end else begin
        SUM1_data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        SUM1_data_ce2 = grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_ce2;
    end else begin
        SUM1_data_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        SUM1_data_ce3 = grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_ce3;
    end else begin
        SUM1_data_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        SUM1_data_ce4 = grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_ce4;
    end else begin
        SUM1_data_ce4 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        SUM1_data_ce5 = grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_ce5;
    end else begin
        SUM1_data_ce5 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

always @ (*) begin
    if ((grp_cascadeClassifier_Pipeline_VITIS_LOOP_379_1_fu_281_ap_done == 1'b0)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

always @ (*) begin
    if ((grp_cascadeClassifier_Pipeline_Filters_fu_287_ap_done == 1'b0)) begin
        ap_ST_fsm_state21_blk = 1'b1;
    end else begin
        ap_ST_fsm_state21_blk = 1'b0;
    end
end

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state45) & ((1'd1 == and_ln256_1_fu_722_p2) | (icmp_ln199_reg_953 == 1'd0))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln256_1_fu_722_p2) & (icmp_ln199_reg_953 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
        ap_phi_mux_retval_0_phi_fu_274_p4 = sub_ln257_fu_742_p2;
    end else begin
        ap_phi_mux_retval_0_phi_fu_274_p4 = retval_0_reg_270;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) & ((1'd1 == and_ln256_1_fu_722_p2) | (icmp_ln199_reg_953 == 1'd0)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) & ((1'd1 == and_ln256_1_fu_722_p2) | (icmp_ln199_reg_953 == 1'd0)))) begin
        ap_return = ap_phi_mux_retval_0_phi_fu_274_p4;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state26) | ((grp_cascadeClassifier_Pipeline_Filters_fu_287_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21)))) begin
        grp_fu_352_ce = 1'b1;
    end else begin
        grp_fu_352_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_352_p0 = grp_cascadeClassifier_Pipeline_Filters_fu_287_stage_sum_1_out;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_352_p0 = sext_ln256_fu_641_p1;
    end else begin
        grp_fu_352_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        stages_array_ce0 = 1'b1;
    end else begin
        stages_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        stages_thresh_array_ce0 = 1'b1;
    end else begin
        stages_thresh_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln188_reg_920 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((grp_cascadeClassifier_Pipeline_VITIS_LOOP_379_1_fu_281_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln199_fu_583_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((grp_cascadeClassifier_Pipeline_Filters_fu_287_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            if (((1'b1 == ap_CS_fsm_state45) & ((1'd1 == and_ln256_1_fu_722_p2) | (icmp_ln199_reg_953 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign SUM1_data_address2 = grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_address2;

assign SUM1_data_address3 = grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_address3;

assign SUM1_data_address4 = grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_address4;

assign SUM1_data_address5 = grp_cascadeClassifier_Pipeline_Filters_fu_287_SUM1_data_address5;

assign add_ln176_fu_405_p2 = (pt_x_val + 17'd24);

assign add_ln177_fu_411_p2 = (pt_y_val + 8'd24);

assign add_ln180_1_fu_417_p2 = (add_ln180_reg_773 + pt_x_val);

assign add_ln180_fu_399_p2 = (zext_ln180_fu_383_p1 + zext_ln180_1_fu_395_p1);

assign add_ln181_fu_421_p2 = (add_ln180_reg_773 + add_ln176_reg_779);

assign add_ln182_1_fu_463_p2 = (add_ln182_reg_801 + pt_x_val);

assign add_ln182_fu_447_p2 = (zext_ln182_fu_432_p1 + zext_ln182_1_fu_443_p1);

assign add_ln183_fu_467_p2 = (add_ln182_reg_801 + add_ln176_reg_779);

assign add_ln199_fu_589_p2 = (i_2_fu_134 + 5'd1);

assign add_ln200_fu_621_p2 = (stages_array_load_reg_972 + empty_fu_617_p1);

assign and_ln256_1_fu_722_p2 = (tmp_4_reg_1034 & and_ln256_fu_716_p2);

assign and_ln256_fu_716_p2 = (or_ln256_fu_708_p2 & or_ln256_1_fu_712_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign bitcast_ln256_1_fu_667_p1 = mul_reg_1008;

assign bitcast_ln256_fu_649_p1 = reg_369;

assign empty_fu_617_p1 = haar_counter_fu_126[7:0];

assign grp_cascadeClassifier_Pipeline_Filters_fu_287_ap_start = grp_cascadeClassifier_Pipeline_Filters_fu_287_ap_start_reg;

assign grp_cascadeClassifier_Pipeline_VITIS_LOOP_379_1_fu_281_ap_start = grp_cascadeClassifier_Pipeline_VITIS_LOOP_379_1_fu_281_ap_start_reg;

assign grp_fu_342_p_ce = 1'b1;

assign grp_fu_342_p_din0 = sext_ln180_fu_511_p1;

assign grp_fu_342_p_din1 = sext_ln180_fu_511_p1;

assign haar_counter_2_fu_627_p2 = (zext_ln200_fu_609_p1 + haar_counter_fu_126);

assign icmp_ln188_fu_552_p2 = (($signed(stddev_2_reg_914) > $signed(64'd0)) ? 1'b1 : 1'b0);

assign icmp_ln199_fu_583_p2 = ((i_2_fu_134 < 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln200_fu_612_p2 = ((stages_array_load_reg_972 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln256_1_fu_690_p2 = ((trunc_ln256_fu_663_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln256_2_fu_696_p2 = ((tmp_3_fu_670_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln256_3_fu_702_p2 = ((trunc_ln256_1_fu_680_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln256_fu_684_p2 = ((tmp_s_fu_653_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign mean_fu_506_p2 = (reg_364 + sub_ln182_reg_882);

assign or_ln256_1_fu_712_p2 = (icmp_ln256_3_reg_1029 | icmp_ln256_2_reg_1024);

assign or_ln256_fu_708_p2 = (icmp_ln256_reg_1014 | icmp_ln256_1_reg_1019);

assign select_ln256_fu_633_p3 = ((icmp_ln200_fu_612_p2[0:0] == 1'b1) ? haar_counter_2_fu_627_p2 : haar_counter_fu_126);

assign sext_ln159_fu_544_p1 = $signed(stddev_1_reg_904);

assign sext_ln180_fu_511_p1 = $signed(mean_reg_893);

assign sext_ln185_1_fu_534_p1 = $signed(shl_ln185_1_fu_527_p3);

assign sext_ln185_fu_523_p1 = $signed(shl_ln_fu_516_p3);

assign sext_ln256_fu_641_p1 = $signed(stages_thresh_array_load_reg_979);

assign shl_ln185_1_fu_527_p3 = {{stddev_reg_887}, {6'd0}};

assign shl_ln_fu_516_p3 = {{stddev_reg_887}, {9'd0}};

assign stages_array_address0 = zext_ln199_fu_595_p1;

assign stages_thresh_array_address0 = zext_ln199_fu_595_p1;

assign stddev_1_fu_538_p2 = ($signed(sext_ln185_fu_523_p1) + $signed(sext_ln185_1_fu_534_p1));

assign stddev_2_fu_547_p2 = ($signed(sext_ln159_fu_544_p1) - $signed(mul_ln186_reg_909));

assign stddev_fu_501_p2 = (reg_359 + sub_ln177_reg_877);

assign sub_ln176_fu_476_p2 = (reg_359 - SQSUM1_data_load_1_reg_837);

assign sub_ln177_fu_491_p2 = (sub_ln176_reg_857 - reg_359);

assign sub_ln181_fu_486_p2 = (reg_364 - SUM1_data_load_1_reg_852);

assign sub_ln182_fu_496_p2 = (sub_ln181_reg_872 - reg_364);

assign sub_ln257_fu_742_p2 = (6'd0 - zext_ln257_fu_739_p1);

assign tmp_26_fu_375_p3 = {{pt_y_val}, {8'd0}};

assign tmp_27_fu_387_p3 = {{pt_y_val}, {6'd0}};

assign tmp_28_fu_425_p3 = {{add_ln177_reg_785}, {8'd0}};

assign tmp_29_fu_436_p3 = {{add_ln177_reg_785}, {6'd0}};

assign tmp_3_fu_670_p4 = {{bitcast_ln256_1_fu_667_p1[62:52]}};

assign tmp_s_fu_653_p4 = {{bitcast_ln256_fu_649_p1[62:52]}};

assign trunc_ln189_fu_557_p1 = stddev_2_reg_914[31:0];

assign trunc_ln256_1_fu_680_p1 = bitcast_ln256_1_fu_667_p1[51:0];

assign trunc_ln256_fu_663_p1 = bitcast_ln256_fu_649_p1[51:0];

assign zext_ln180_1_fu_395_p1 = tmp_27_fu_387_p3;

assign zext_ln180_2_fu_453_p1 = add_ln180_1_reg_791;

assign zext_ln180_fu_383_p1 = tmp_26_fu_375_p3;

assign zext_ln181_fu_458_p1 = add_ln181_reg_796;

assign zext_ln182_1_fu_443_p1 = tmp_29_fu_436_p3;

assign zext_ln182_2_fu_471_p1 = add_ln182_1_reg_827;

assign zext_ln182_fu_432_p1 = tmp_28_fu_425_p3;

assign zext_ln183_fu_481_p1 = add_ln183_reg_832;

assign zext_ln199_fu_595_p1 = i_2_fu_134;

assign zext_ln200_fu_609_p1 = stages_array_load_reg_972;

assign zext_ln257_fu_739_p1 = i_2_fu_134;

always @ (posedge ap_clk) begin
    add_ln180_reg_773[5:0] <= 6'b000000;
    add_ln182_reg_801[5:0] <= 6'b000000;
    stddev_1_reg_904[5:0] <= 6'b000000;
end

endmodule //face_detect_cascadeClassifier
