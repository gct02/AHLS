// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module face_detect_cascadeClassifier_Pipeline_Filters (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sext_ln200,
        stage_sum,
        add_ln200,
        stddev_0,
        pt_y_val,
        pt_x_val,
        SUM1_data_address0,
        SUM1_data_ce0,
        SUM1_data_q0,
        SUM1_data_address1,
        SUM1_data_ce1,
        SUM1_data_q1,
        SUM1_data_address2,
        SUM1_data_ce2,
        SUM1_data_q2,
        SUM1_data_address3,
        SUM1_data_ce3,
        SUM1_data_q3,
        SUM1_data_address4,
        SUM1_data_ce4,
        SUM1_data_q4,
        SUM1_data_address5,
        SUM1_data_ce5,
        SUM1_data_q5,
        stage_sum_1_out,
        stage_sum_1_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] sext_ln200;
input  [63:0] stage_sum;
input  [7:0] add_ln200;
input  [31:0] stddev_0;
input  [7:0] pt_y_val;
input  [16:0] pt_x_val;
output  [16:0] SUM1_data_address0;
output   SUM1_data_ce0;
input  [31:0] SUM1_data_q0;
output  [16:0] SUM1_data_address1;
output   SUM1_data_ce1;
input  [31:0] SUM1_data_q1;
output  [16:0] SUM1_data_address2;
output   SUM1_data_ce2;
input  [31:0] SUM1_data_q2;
output  [16:0] SUM1_data_address3;
output   SUM1_data_ce3;
input  [31:0] SUM1_data_q3;
output  [16:0] SUM1_data_address4;
output   SUM1_data_ce4;
input  [31:0] SUM1_data_q4;
output  [16:0] SUM1_data_address5;
output   SUM1_data_ce5;
input  [31:0] SUM1_data_q5;
output  [63:0] stage_sum_1_out;
output   stage_sum_1_out_ap_vld;

reg ap_idle;
reg[16:0] SUM1_data_address0;
reg SUM1_data_ce0;
reg[16:0] SUM1_data_address1;
reg SUM1_data_ce1;
reg[16:0] SUM1_data_address2;
reg SUM1_data_ce2;
reg[16:0] SUM1_data_address3;
reg SUM1_data_ce3;
reg[16:0] SUM1_data_address4;
reg SUM1_data_ce4;
reg[16:0] SUM1_data_address5;
reg SUM1_data_ce5;
reg stage_sum_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_subdone;
wire   [0:0] icmp_ln200_fu_585_p2;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [11:0] tree_thresh_array_address0;
reg    tree_thresh_array_ce0;
wire   [12:0] tree_thresh_array_q0;
wire   [11:0] weights_array0_address0;
reg    weights_array0_ce0;
wire   [12:0] weights_array0_q0;
wire   [11:0] weights_array1_address0;
reg    weights_array1_ce0;
wire   [13:0] weights_array1_q0;
reg   [31:0] coord_8;
reg   [31:0] coord_9;
reg   [31:0] coord_10;
wire   [11:0] weights_array2_address0;
reg    weights_array2_ce0;
wire   [13:0] weights_array2_q0;
wire   [11:0] alpha1_array_address0;
reg    alpha1_array_ce0;
wire   [13:0] alpha1_array_q0;
wire   [11:0] alpha2_array_address0;
reg    alpha2_array_ce0;
wire   [13:0] alpha2_array_q0;
wire   [11:0] rectangles_array0_address0;
reg    rectangles_array0_ce0;
wire   [4:0] rectangles_array0_q0;
wire   [11:0] rectangles_array2_address0;
reg    rectangles_array2_ce0;
wire   [4:0] rectangles_array2_q0;
wire   [11:0] rectangles_array1_address0;
reg    rectangles_array1_ce0;
wire   [4:0] rectangles_array1_q0;
wire   [11:0] rectangles_array3_address0;
reg    rectangles_array3_ce0;
wire   [4:0] rectangles_array3_q0;
wire   [11:0] rectangles_array4_address0;
reg    rectangles_array4_ce0;
wire   [4:0] rectangles_array4_q0;
wire   [11:0] rectangles_array6_address0;
reg    rectangles_array6_ce0;
wire   [4:0] rectangles_array6_q0;
wire   [11:0] rectangles_array5_address0;
reg    rectangles_array5_ce0;
wire   [4:0] rectangles_array5_q0;
wire   [11:0] rectangles_array7_address0;
reg    rectangles_array7_ce0;
wire   [4:0] rectangles_array7_q0;
wire   [11:0] rectangles_array8_address0;
reg    rectangles_array8_ce0;
wire   [4:0] rectangles_array8_q0;
wire   [11:0] rectangles_array10_address0;
reg    rectangles_array10_ce0;
wire   [3:0] rectangles_array10_q0;
wire   [11:0] rectangles_array9_address0;
reg    rectangles_array9_ce0;
wire   [4:0] rectangles_array9_q0;
wire   [11:0] rectangles_array11_address0;
reg    rectangles_array11_ce0;
wire   [3:0] rectangles_array11_q0;
reg   [31:0] reg_541;
wire    ap_block_pp0_stage1_11001;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] reg_545;
reg   [31:0] reg_550;
wire   [31:0] grp_fu_537_p2;
reg   [31:0] reg_555;
reg   [0:0] icmp_ln200_reg_1284;
reg   [0:0] icmp_ln200_reg_1284_pp0_iter1_reg;
reg   [0:0] icmp_ln200_reg_1284_pp0_iter2_reg;
reg   [0:0] icmp_ln200_reg_1284_pp0_iter3_reg;
reg   [0:0] icmp_ln200_reg_1284_pp0_iter4_reg;
reg   [0:0] icmp_ln200_reg_1284_pp0_iter5_reg;
reg   [0:0] icmp_ln200_reg_1284_pp0_iter6_reg;
reg   [0:0] icmp_ln200_reg_1284_pp0_iter7_reg;
reg   [0:0] icmp_ln200_reg_1284_pp0_iter8_reg;
reg   [0:0] icmp_ln200_reg_1284_pp0_iter9_reg;
wire   [11:0] trunc_ln248_fu_606_p1;
reg   [11:0] trunc_ln248_reg_1348;
reg   [11:0] trunc_ln248_reg_1348_pp0_iter1_reg;
reg   [11:0] trunc_ln248_reg_1348_pp0_iter2_reg;
reg   [11:0] trunc_ln248_reg_1348_pp0_iter3_reg;
wire   [32:0] add_ln251_fu_610_p2;
reg   [32:0] add_ln251_reg_1353;
reg   [4:0] rectangles_array0_load_reg_1358;
reg   [4:0] tr0_1_reg_1363;
reg   [4:0] rectangles_array1_load_reg_1368;
reg   [4:0] tr0_3_reg_1373;
reg   [4:0] rectangles_array4_load_reg_1378;
reg   [4:0] tr1_1_reg_1383;
reg   [4:0] rectangles_array5_load_reg_1388;
reg   [4:0] tr1_3_reg_1393;
reg   [4:0] tr2_reg_1398;
reg   [3:0] tr2_1_reg_1405;
reg   [4:0] tr2_2_reg_1412;
reg   [3:0] tr2_3_reg_1419;
wire   [16:0] tr0_fu_623_p2;
reg   [16:0] tr0_reg_1426;
reg   [16:0] tr0_reg_1426_pp0_iter2_reg;
wire   [7:0] tr0_2_fu_631_p2;
reg   [7:0] tr0_2_reg_1433;
wire   [16:0] tr1_fu_639_p2;
reg   [16:0] tr1_reg_1440;
reg   [16:0] tr1_reg_1440_pp0_iter2_reg;
wire   [7:0] tr1_2_fu_647_p2;
reg   [7:0] tr1_2_reg_1447;
wire   [0:0] and_ln233_1_fu_732_p2;
reg   [0:0] and_ln233_1_reg_1454;
reg   [0:0] and_ln233_1_reg_1454_pp0_iter2_reg;
reg   [0:0] and_ln233_1_reg_1454_pp0_iter3_reg;
wire   [7:0] add_ln235_fu_738_p2;
reg   [7:0] add_ln235_reg_1458;
wire   [16:0] add_ln235_1_fu_743_p2;
reg   [16:0] add_ln235_1_reg_1465;
reg   [16:0] add_ln235_1_reg_1465_pp0_iter2_reg;
wire   [16:0] add_ln223_fu_788_p2;
reg   [16:0] add_ln223_reg_1472;
wire   [16:0] add_ln224_fu_794_p2;
reg   [16:0] add_ln224_reg_1478;
wire   [7:0] add_ln225_fu_799_p2;
reg   [7:0] add_ln225_reg_1484;
wire   [16:0] add_ln228_fu_826_p2;
reg   [16:0] add_ln228_reg_1490;
wire   [16:0] add_ln229_fu_832_p2;
reg   [16:0] add_ln229_reg_1496;
wire   [7:0] add_ln230_fu_837_p2;
reg   [7:0] add_ln230_reg_1502;
wire   [16:0] add_ln235_2_fu_864_p2;
reg   [16:0] add_ln235_2_reg_1508;
wire   [16:0] add_ln236_fu_870_p2;
reg   [16:0] add_ln236_reg_1514;
wire   [7:0] add_ln237_fu_875_p2;
reg   [7:0] add_ln237_reg_1520;
wire   [16:0] add_ln223_1_fu_880_p2;
reg   [16:0] add_ln223_1_reg_1526;
wire   [16:0] add_ln224_1_fu_884_p2;
reg   [16:0] add_ln224_1_reg_1531;
wire   [16:0] add_ln225_1_fu_910_p2;
reg   [16:0] add_ln225_1_reg_1536;
wire   [16:0] add_ln228_1_fu_916_p2;
reg   [16:0] add_ln228_1_reg_1542;
wire   [16:0] add_ln229_1_fu_920_p2;
reg   [16:0] add_ln229_1_reg_1547;
wire   [16:0] add_ln230_1_fu_946_p2;
reg   [16:0] add_ln230_1_reg_1552;
wire   [16:0] add_ln235_3_fu_952_p2;
reg   [16:0] add_ln235_3_reg_1558;
wire   [16:0] add_ln236_1_fu_956_p2;
reg   [16:0] add_ln236_1_reg_1563;
wire   [16:0] add_ln237_1_fu_982_p2;
reg   [16:0] add_ln237_1_reg_1568;
wire   [16:0] add_ln225_2_fu_996_p2;
reg   [16:0] add_ln225_2_reg_1584;
wire   [16:0] add_ln226_fu_1000_p2;
reg   [16:0] add_ln226_reg_1589;
wire   [16:0] add_ln230_2_fu_1012_p2;
reg   [16:0] add_ln230_2_reg_1604;
wire   [16:0] add_ln231_fu_1016_p2;
reg   [16:0] add_ln231_reg_1609;
wire   [16:0] add_ln237_2_fu_1028_p2;
reg   [16:0] add_ln237_2_reg_1624;
wire   [16:0] add_ln238_fu_1032_p2;
reg   [16:0] add_ln238_reg_1629;
reg   [31:0] SUM1_data_load_5_reg_1644;
reg   [31:0] SUM1_data_load_8_reg_1659;
reg   [31:0] SUM1_data_load_9_reg_1664;
reg   [31:0] SUM1_data_load_3_reg_1679;
reg   [31:0] SUM1_data_load_7_reg_1684;
reg   [31:0] SUM1_data_load_11_reg_1689;
wire   [31:0] sub_ln279_fu_1071_p2;
reg   [31:0] sub_ln279_reg_1694;
wire   [31:0] sub_ln280_fu_1077_p2;
reg   [31:0] sub_ln280_reg_1699;
wire   [63:0] zext_ln271_fu_1105_p1;
reg   [63:0] zext_ln271_reg_1704;
reg   [63:0] zext_ln271_reg_1704_pp0_iter5_reg;
reg   [63:0] zext_ln271_reg_1704_pp0_iter6_reg;
reg   [63:0] zext_ln271_reg_1704_pp0_iter7_reg;
reg   [63:0] zext_ln271_reg_1704_pp0_iter8_reg;
wire   [31:0] sub_ln279_1_fu_1110_p2;
reg   [31:0] sub_ln279_1_reg_1712;
wire   [31:0] sub_ln280_1_fu_1115_p2;
reg   [31:0] sub_ln280_1_reg_1722;
reg   [12:0] weights_array0_load_reg_1732;
reg   [13:0] weights_array1_load_reg_1737;
wire   [31:0] add_ln281_fu_1124_p2;
reg   [31:0] add_ln281_reg_1742;
wire  signed [31:0] add_ln282_fu_1130_p2;
reg  signed [31:0] add_ln282_reg_1747;
wire  signed [31:0] add_ln282_1_fu_1134_p2;
reg  signed [31:0] add_ln282_1_reg_1752;
wire  signed [31:0] sext_ln280_fu_1138_p1;
wire   [31:0] zext_ln281_fu_1142_p1;
reg   [31:0] coord_10_load_reg_1772;
wire   [31:0] sub_ln281_fu_1154_p2;
reg   [31:0] sub_ln281_reg_1777;
reg   [12:0] tree_thresh_array_load_reg_1787;
wire  signed [31:0] sub_ln281_1_fu_1159_p2;
reg  signed [31:0] sub_ln281_1_reg_1792;
reg   [13:0] weights_array2_load_reg_1797;
wire  signed [31:0] sext_ln271_fu_1163_p1;
wire   [31:0] zext_ln281_1_fu_1167_p1;
wire   [31:0] grp_fu_533_p2;
reg   [31:0] mul_ln282_reg_1812;
wire   [31:0] add_ln282_2_fu_1171_p2;
reg   [31:0] add_ln282_2_reg_1817;
reg   [31:0] add_ln282_2_reg_1817_pp0_iter9_reg;
reg   [31:0] t_reg_1822;
wire   [31:0] final_sum_fu_1176_p2;
reg   [31:0] final_sum_reg_1827;
wire   [63:0] stage_sum_2_fu_1199_p3;
reg   [63:0] stage_sum_2_reg_1842;
wire   [0:0] icmp_ln284_fu_1207_p2;
reg   [0:0] icmp_ln284_reg_1847;
reg   [13:0] return_value_reg_1852;
reg   [13:0] return_value_1_reg_1857;
wire   [63:0] stage_sum_3_fu_1225_p2;
reg   [63:0] stage_sum_3_reg_1862;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter10_stage0;
wire   [31:0] ap_phi_reg_pp0_iter0_storemerge_reg_522;
reg   [31:0] ap_phi_reg_pp0_iter1_storemerge_reg_522;
reg   [31:0] ap_phi_reg_pp0_iter2_storemerge_reg_522;
reg   [31:0] ap_phi_reg_pp0_iter3_storemerge_reg_522;
reg   [31:0] ap_phi_reg_pp0_iter4_storemerge_reg_522;
reg   [31:0] ap_phi_reg_pp0_iter5_storemerge_reg_522;
wire   [63:0] zext_ln200_fu_590_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln223_2_fu_988_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln224_fu_992_p1;
wire   [63:0] zext_ln228_2_fu_1004_p1;
wire   [63:0] zext_ln229_fu_1008_p1;
wire   [63:0] zext_ln235_2_fu_1020_p1;
wire   [63:0] zext_ln236_fu_1024_p1;
wire   [63:0] zext_ln225_2_fu_1036_p1;
wire   [63:0] zext_ln226_fu_1040_p1;
wire   [63:0] zext_ln230_2_fu_1044_p1;
wire   [63:0] zext_ln231_fu_1048_p1;
wire   [63:0] zext_ln237_2_fu_1052_p1;
wire   [63:0] zext_ln238_fu_1056_p1;
reg   [63:0] stage_sum_1_fu_112;
reg   [63:0] ap_sig_allocacmp_stage_sum_1_load_1;
wire    ap_loop_init;
reg   [7:0] j_fu_116;
wire   [7:0] j_2_fu_1184_p2;
reg   [32:0] haar_counter_fu_120;
wire  signed [32:0] sext_ln200_cast_fu_559_p1;
wire    ap_block_pp0_stage0_01001;
reg  signed [12:0] grp_fu_533_p0;
reg  signed [31:0] grp_fu_533_p1;
reg   [13:0] grp_fu_537_p0;
reg  signed [31:0] grp_fu_537_p1;
wire   [7:0] trunc_ln200_fu_581_p1;
wire   [16:0] zext_ln208_fu_620_p1;
wire   [7:0] zext_ln210_fu_628_p1;
wire   [16:0] zext_ln213_fu_636_p1;
wire   [7:0] zext_ln215_fu_644_p1;
wire   [3:0] trunc_ln233_fu_658_p1;
wire   [0:0] tmp_24_fu_666_p3;
wire   [3:0] or_ln233_fu_661_p2;
wire   [3:0] trunc_ln233_1_fu_681_p1;
wire   [0:0] tmp_25_fu_689_p3;
wire   [3:0] or_ln233_1_fu_684_p2;
wire   [4:0] tmp1_fu_696_p3;
wire   [4:0] tmp_fu_673_p3;
wire   [4:0] or_ln233_2_fu_704_p2;
wire   [0:0] icmp_ln233_2_fu_720_p2;
wire   [0:0] icmp_ln233_fu_710_p2;
wire   [0:0] and_ln233_fu_726_p2;
wire   [0:0] icmp_ln233_1_fu_715_p2;
wire   [7:0] zext_ln193_6_fu_655_p1;
wire   [16:0] zext_ln193_4_fu_652_p1;
wire   [15:0] tmp_s_fu_766_p3;
wire   [13:0] tmp_17_fu_777_p3;
wire   [16:0] zext_ln223_fu_773_p1;
wire   [16:0] zext_ln223_1_fu_784_p1;
wire   [16:0] zext_ln193_fu_748_p1;
wire   [7:0] zext_ln193_1_fu_751_p1;
wire   [15:0] tmp_20_fu_804_p3;
wire   [13:0] tmp_21_fu_815_p3;
wire   [16:0] zext_ln228_fu_811_p1;
wire   [16:0] zext_ln228_1_fu_822_p1;
wire   [16:0] zext_ln193_2_fu_754_p1;
wire   [7:0] zext_ln193_3_fu_757_p1;
wire   [15:0] tmp_26_fu_842_p3;
wire   [13:0] tmp_27_fu_853_p3;
wire   [16:0] zext_ln235_fu_849_p1;
wire   [16:0] zext_ln235_1_fu_860_p1;
wire   [16:0] zext_ln193_5_fu_760_p1;
wire   [7:0] zext_ln193_7_fu_763_p1;
wire   [15:0] tmp_18_fu_888_p3;
wire   [13:0] tmp_19_fu_899_p3;
wire   [16:0] zext_ln225_fu_895_p1;
wire   [16:0] zext_ln225_1_fu_906_p1;
wire   [15:0] tmp_22_fu_924_p3;
wire   [13:0] tmp_23_fu_935_p3;
wire   [16:0] zext_ln230_fu_931_p1;
wire   [16:0] zext_ln230_1_fu_942_p1;
wire   [15:0] tmp_28_fu_960_p3;
wire   [13:0] tmp_29_fu_971_p3;
wire   [16:0] zext_ln237_fu_967_p1;
wire   [16:0] zext_ln237_1_fu_978_p1;
wire   [0:0] icmp_ln201_fu_1193_p2;
wire   [13:0] return_value_3_fu_1216_p3;
wire  signed [63:0] sext_ln250_fu_1221_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_idle_pp0_0to9;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to11;
reg    ap_done_pending_pp0;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_603;
reg    ap_condition_1230;
reg    ap_condition_1233;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 coord_8 = 32'd0;
#0 coord_9 = 32'd0;
#0 coord_10 = 32'd0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 stage_sum_1_fu_112 = 64'd0;
#0 j_fu_116 = 8'd0;
#0 haar_counter_fu_120 = 33'd0;
#0 ap_done_reg = 1'b0;
end

face_detect_cascadeClassifier_Pipeline_Filters_tree_thresh_array_ROM_AUTO_1R #(
    .DataWidth( 13 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
tree_thresh_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tree_thresh_array_address0),
    .ce0(tree_thresh_array_ce0),
    .q0(tree_thresh_array_q0)
);

face_detect_cascadeClassifier_Pipeline_Filters_weights_array0_ROM_AUTO_1R #(
    .DataWidth( 13 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
weights_array0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_array0_address0),
    .ce0(weights_array0_ce0),
    .q0(weights_array0_q0)
);

face_detect_cascadeClassifier_Pipeline_Filters_weights_array1_ROM_AUTO_1R #(
    .DataWidth( 14 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
weights_array1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_array1_address0),
    .ce0(weights_array1_ce0),
    .q0(weights_array1_q0)
);

face_detect_cascadeClassifier_Pipeline_Filters_weights_array2_ROM_AUTO_1R #(
    .DataWidth( 14 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
weights_array2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_array2_address0),
    .ce0(weights_array2_ce0),
    .q0(weights_array2_q0)
);

face_detect_cascadeClassifier_Pipeline_Filters_alpha1_array_ROM_AUTO_1R #(
    .DataWidth( 14 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
alpha1_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(alpha1_array_address0),
    .ce0(alpha1_array_ce0),
    .q0(alpha1_array_q0)
);

face_detect_cascadeClassifier_Pipeline_Filters_alpha2_array_ROM_AUTO_1R #(
    .DataWidth( 14 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
alpha2_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(alpha2_array_address0),
    .ce0(alpha2_array_ce0),
    .q0(alpha2_array_q0)
);

face_detect_cascadeClassifier_Pipeline_Filters_rectangles_array0_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
rectangles_array0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rectangles_array0_address0),
    .ce0(rectangles_array0_ce0),
    .q0(rectangles_array0_q0)
);

face_detect_cascadeClassifier_Pipeline_Filters_rectangles_array2_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
rectangles_array2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rectangles_array2_address0),
    .ce0(rectangles_array2_ce0),
    .q0(rectangles_array2_q0)
);

face_detect_cascadeClassifier_Pipeline_Filters_rectangles_array1_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
rectangles_array1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rectangles_array1_address0),
    .ce0(rectangles_array1_ce0),
    .q0(rectangles_array1_q0)
);

face_detect_cascadeClassifier_Pipeline_Filters_rectangles_array3_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
rectangles_array3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rectangles_array3_address0),
    .ce0(rectangles_array3_ce0),
    .q0(rectangles_array3_q0)
);

face_detect_cascadeClassifier_Pipeline_Filters_rectangles_array4_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
rectangles_array4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rectangles_array4_address0),
    .ce0(rectangles_array4_ce0),
    .q0(rectangles_array4_q0)
);

face_detect_cascadeClassifier_Pipeline_Filters_rectangles_array6_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
rectangles_array6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rectangles_array6_address0),
    .ce0(rectangles_array6_ce0),
    .q0(rectangles_array6_q0)
);

face_detect_cascadeClassifier_Pipeline_Filters_rectangles_array5_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
rectangles_array5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rectangles_array5_address0),
    .ce0(rectangles_array5_ce0),
    .q0(rectangles_array5_q0)
);

face_detect_cascadeClassifier_Pipeline_Filters_rectangles_array7_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
rectangles_array7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rectangles_array7_address0),
    .ce0(rectangles_array7_ce0),
    .q0(rectangles_array7_q0)
);

face_detect_cascadeClassifier_Pipeline_Filters_rectangles_array8_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
rectangles_array8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rectangles_array8_address0),
    .ce0(rectangles_array8_ce0),
    .q0(rectangles_array8_q0)
);

face_detect_cascadeClassifier_Pipeline_Filters_rectangles_array10_ROM_AUTO_1R #(
    .DataWidth( 4 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
rectangles_array10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rectangles_array10_address0),
    .ce0(rectangles_array10_ce0),
    .q0(rectangles_array10_q0)
);

face_detect_cascadeClassifier_Pipeline_Filters_rectangles_array9_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
rectangles_array9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rectangles_array9_address0),
    .ce0(rectangles_array9_ce0),
    .q0(rectangles_array9_q0)
);

face_detect_cascadeClassifier_Pipeline_Filters_rectangles_array11_ROM_AUTO_1R #(
    .DataWidth( 4 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
rectangles_array11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rectangles_array11_address0),
    .ce0(rectangles_array11_ce0),
    .q0(rectangles_array11_q0)
);

face_detect_mul_13s_32s_32_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_13s_32s_32_5_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_533_p0),
    .din1(grp_fu_533_p1),
    .ce(1'b1),
    .dout(grp_fu_533_p2)
);

face_detect_mul_14ns_32s_32_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_14ns_32s_32_5_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_537_p0),
    .din1(grp_fu_537_p1),
    .ce(1'b1),
    .dout(grp_fu_537_p2)
);

face_detect_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter10_stage0)) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter11 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter10_stage0) & (ap_idle_pp0_0to9 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter10_stage0) & (ap_idle_pp0_0to9 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter10_stage0) & (ap_idle_pp0_0to9 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter10_stage0) & (ap_idle_pp0_0to9 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter10_stage0) & (ap_idle_pp0_0to9 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter10_stage0) & (ap_idle_pp0_0to9 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter10_stage0) & (ap_idle_pp0_0to9 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter10_stage0) & (ap_idle_pp0_0to9 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter10_stage0) & (ap_idle_pp0_0to9 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter10_stage0) & (ap_idle_pp0_0to9 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln233_1_reg_1454_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln200_reg_1284_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter4_storemerge_reg_522 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter4_storemerge_reg_522 <= ap_phi_reg_pp0_iter3_storemerge_reg_522;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_603)) begin
        if (((1'd1 == and_ln233_1_reg_1454_pp0_iter3_reg) & (icmp_ln200_reg_1284_pp0_iter3_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter5_storemerge_reg_522 <= SUM1_data_load_11_reg_1689;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter5_storemerge_reg_522 <= ap_phi_reg_pp0_iter4_storemerge_reg_522;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1230)) begin
        if ((1'd1 == and_ln233_1_reg_1454_pp0_iter3_reg)) begin
            coord_10 <= reg_550;
        end else if ((1'd0 == and_ln233_1_reg_1454_pp0_iter3_reg)) begin
            coord_10 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1233)) begin
        if ((1'd1 == and_ln233_1_reg_1454_pp0_iter3_reg)) begin
            coord_8 <= SUM1_data_load_8_reg_1659;
        end else if ((1'd0 == and_ln233_1_reg_1454_pp0_iter3_reg)) begin
            coord_8 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1230)) begin
        if ((1'd1 == and_ln233_1_reg_1454_pp0_iter3_reg)) begin
            coord_9 <= SUM1_data_load_9_reg_1664;
        end else if ((1'd0 == and_ln233_1_reg_1454_pp0_iter3_reg)) begin
            coord_9 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            haar_counter_fu_120 <= sext_ln200_cast_fu_559_p1;
        end else if (((icmp_ln200_reg_1284 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            haar_counter_fu_120 <= add_ln251_reg_1353;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_116 <= 8'd0;
        end else if (((ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln200_reg_1284_pp0_iter9_reg == 1'd0))) begin
            j_fu_116 <= j_2_fu_1184_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reg_545 <= SUM1_data_q3;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        reg_545 <= SUM1_data_q4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reg_550 <= SUM1_data_q1;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        reg_550 <= SUM1_data_q3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            stage_sum_1_fu_112 <= stage_sum;
        end else if ((ap_enable_reg_pp0_iter11 == 1'b1)) begin
            stage_sum_1_fu_112 <= stage_sum_3_reg_1862;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        SUM1_data_load_11_reg_1689 <= SUM1_data_q0;
        SUM1_data_load_3_reg_1679 <= SUM1_data_q4;
        SUM1_data_load_7_reg_1684 <= SUM1_data_q2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        SUM1_data_load_5_reg_1644 <= SUM1_data_q2;
        SUM1_data_load_8_reg_1659 <= SUM1_data_q1;
        SUM1_data_load_9_reg_1664 <= SUM1_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln223_1_reg_1526 <= add_ln223_1_fu_880_p2;
        add_ln224_1_reg_1531 <= add_ln224_1_fu_884_p2;
        add_ln225_1_reg_1536[16 : 6] <= add_ln225_1_fu_910_p2[16 : 6];
        add_ln228_1_reg_1542 <= add_ln228_1_fu_916_p2;
        add_ln229_1_reg_1547 <= add_ln229_1_fu_920_p2;
        add_ln230_1_reg_1552[16 : 6] <= add_ln230_1_fu_946_p2[16 : 6];
        add_ln235_1_reg_1465 <= add_ln235_1_fu_743_p2;
        add_ln235_1_reg_1465_pp0_iter2_reg <= add_ln235_1_reg_1465;
        add_ln235_3_reg_1558 <= add_ln235_3_fu_952_p2;
        add_ln235_reg_1458 <= add_ln235_fu_738_p2;
        add_ln236_1_reg_1563 <= add_ln236_1_fu_956_p2;
        add_ln237_1_reg_1568[16 : 6] <= add_ln237_1_fu_982_p2[16 : 6];
        add_ln251_reg_1353 <= add_ln251_fu_610_p2;
        and_ln233_1_reg_1454 <= and_ln233_1_fu_732_p2;
        and_ln233_1_reg_1454_pp0_iter2_reg <= and_ln233_1_reg_1454;
        and_ln233_1_reg_1454_pp0_iter3_reg <= and_ln233_1_reg_1454_pp0_iter2_reg;
        coord_10_load_reg_1772 <= coord_10;
        final_sum_reg_1827 <= final_sum_fu_1176_p2;
        icmp_ln200_reg_1284 <= icmp_ln200_fu_585_p2;
        icmp_ln200_reg_1284_pp0_iter1_reg <= icmp_ln200_reg_1284;
        icmp_ln200_reg_1284_pp0_iter2_reg <= icmp_ln200_reg_1284_pp0_iter1_reg;
        icmp_ln200_reg_1284_pp0_iter3_reg <= icmp_ln200_reg_1284_pp0_iter2_reg;
        icmp_ln200_reg_1284_pp0_iter4_reg <= icmp_ln200_reg_1284_pp0_iter3_reg;
        icmp_ln200_reg_1284_pp0_iter5_reg <= icmp_ln200_reg_1284_pp0_iter4_reg;
        icmp_ln200_reg_1284_pp0_iter6_reg <= icmp_ln200_reg_1284_pp0_iter5_reg;
        icmp_ln200_reg_1284_pp0_iter7_reg <= icmp_ln200_reg_1284_pp0_iter6_reg;
        icmp_ln200_reg_1284_pp0_iter8_reg <= icmp_ln200_reg_1284_pp0_iter7_reg;
        icmp_ln200_reg_1284_pp0_iter9_reg <= icmp_ln200_reg_1284_pp0_iter8_reg;
        stage_sum_3_reg_1862 <= stage_sum_3_fu_1225_p2;
        sub_ln279_1_reg_1712 <= sub_ln279_1_fu_1110_p2;
        sub_ln280_1_reg_1722 <= sub_ln280_1_fu_1115_p2;
        sub_ln281_reg_1777 <= sub_ln281_fu_1154_p2;
        tr0_2_reg_1433 <= tr0_2_fu_631_p2;
        tr0_reg_1426 <= tr0_fu_623_p2;
        tr0_reg_1426_pp0_iter2_reg <= tr0_reg_1426;
        tr1_2_reg_1447 <= tr1_2_fu_647_p2;
        tr1_reg_1440 <= tr1_fu_639_p2;
        tr1_reg_1440_pp0_iter2_reg <= tr1_reg_1440;
        trunc_ln248_reg_1348 <= trunc_ln248_fu_606_p1;
        trunc_ln248_reg_1348_pp0_iter1_reg <= trunc_ln248_reg_1348;
        trunc_ln248_reg_1348_pp0_iter2_reg <= trunc_ln248_reg_1348_pp0_iter1_reg;
        trunc_ln248_reg_1348_pp0_iter3_reg <= trunc_ln248_reg_1348_pp0_iter2_reg;
        zext_ln271_reg_1704[11 : 0] <= zext_ln271_fu_1105_p1[11 : 0];
        zext_ln271_reg_1704_pp0_iter5_reg[11 : 0] <= zext_ln271_reg_1704[11 : 0];
        zext_ln271_reg_1704_pp0_iter6_reg[11 : 0] <= zext_ln271_reg_1704_pp0_iter5_reg[11 : 0];
        zext_ln271_reg_1704_pp0_iter7_reg[11 : 0] <= zext_ln271_reg_1704_pp0_iter6_reg[11 : 0];
        zext_ln271_reg_1704_pp0_iter8_reg[11 : 0] <= zext_ln271_reg_1704_pp0_iter7_reg[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln223_reg_1472[16 : 6] <= add_ln223_fu_788_p2[16 : 6];
        add_ln224_reg_1478 <= add_ln224_fu_794_p2;
        add_ln225_2_reg_1584 <= add_ln225_2_fu_996_p2;
        add_ln225_reg_1484 <= add_ln225_fu_799_p2;
        add_ln226_reg_1589 <= add_ln226_fu_1000_p2;
        add_ln228_reg_1490[16 : 6] <= add_ln228_fu_826_p2[16 : 6];
        add_ln229_reg_1496 <= add_ln229_fu_832_p2;
        add_ln230_2_reg_1604 <= add_ln230_2_fu_1012_p2;
        add_ln230_reg_1502 <= add_ln230_fu_837_p2;
        add_ln231_reg_1609 <= add_ln231_fu_1016_p2;
        add_ln235_2_reg_1508[16 : 6] <= add_ln235_2_fu_864_p2[16 : 6];
        add_ln236_reg_1514 <= add_ln236_fu_870_p2;
        add_ln237_2_reg_1624 <= add_ln237_2_fu_1028_p2;
        add_ln237_reg_1520 <= add_ln237_fu_875_p2;
        add_ln238_reg_1629 <= add_ln238_fu_1032_p2;
        add_ln281_reg_1742 <= add_ln281_fu_1124_p2;
        add_ln282_1_reg_1752 <= add_ln282_1_fu_1134_p2;
        add_ln282_2_reg_1817 <= add_ln282_2_fu_1171_p2;
        add_ln282_2_reg_1817_pp0_iter9_reg <= add_ln282_2_reg_1817;
        add_ln282_reg_1747 <= add_ln282_fu_1130_p2;
        icmp_ln284_reg_1847 <= icmp_ln284_fu_1207_p2;
        rectangles_array0_load_reg_1358 <= rectangles_array0_q0;
        rectangles_array1_load_reg_1368 <= rectangles_array1_q0;
        rectangles_array4_load_reg_1378 <= rectangles_array4_q0;
        rectangles_array5_load_reg_1388 <= rectangles_array5_q0;
        return_value_1_reg_1857 <= alpha2_array_q0;
        return_value_reg_1852 <= alpha1_array_q0;
        stage_sum_2_reg_1842 <= stage_sum_2_fu_1199_p3;
        sub_ln279_reg_1694 <= sub_ln279_fu_1071_p2;
        sub_ln280_reg_1699 <= sub_ln280_fu_1077_p2;
        sub_ln281_1_reg_1792 <= sub_ln281_1_fu_1159_p2;
        tr0_1_reg_1363 <= rectangles_array2_q0;
        tr0_3_reg_1373 <= rectangles_array3_q0;
        tr1_1_reg_1383 <= rectangles_array6_q0;
        tr1_3_reg_1393 <= rectangles_array7_q0;
        tr2_1_reg_1405 <= rectangles_array10_q0;
        tr2_2_reg_1412 <= rectangles_array9_q0;
        tr2_3_reg_1419 <= rectangles_array11_q0;
        tr2_reg_1398 <= rectangles_array8_q0;
        tree_thresh_array_load_reg_1787 <= tree_thresh_array_q0;
        weights_array0_load_reg_1732 <= weights_array0_q0;
        weights_array1_load_reg_1737 <= weights_array1_q0;
        weights_array2_load_reg_1797 <= weights_array2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter1_storemerge_reg_522 <= ap_phi_reg_pp0_iter0_storemerge_reg_522;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter2_storemerge_reg_522 <= ap_phi_reg_pp0_iter1_storemerge_reg_522;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter3_storemerge_reg_522 <= ap_phi_reg_pp0_iter2_storemerge_reg_522;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_ln282_reg_1812 <= grp_fu_533_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_541 <= SUM1_data_q5;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_555 <= grp_fu_537_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        t_reg_1822 <= grp_fu_533_p2;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            SUM1_data_address0 = zext_ln238_fu_1056_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            SUM1_data_address0 = zext_ln236_fu_1024_p1;
        end else begin
            SUM1_data_address0 = 'bx;
        end
    end else begin
        SUM1_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            SUM1_data_address1 = zext_ln237_2_fu_1052_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            SUM1_data_address1 = zext_ln235_2_fu_1020_p1;
        end else begin
            SUM1_data_address1 = 'bx;
        end
    end else begin
        SUM1_data_address1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            SUM1_data_address2 = zext_ln231_fu_1048_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            SUM1_data_address2 = zext_ln229_fu_1008_p1;
        end else begin
            SUM1_data_address2 = 'bx;
        end
    end else begin
        SUM1_data_address2 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            SUM1_data_address3 = zext_ln230_2_fu_1044_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            SUM1_data_address3 = zext_ln228_2_fu_1004_p1;
        end else begin
            SUM1_data_address3 = 'bx;
        end
    end else begin
        SUM1_data_address3 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            SUM1_data_address4 = zext_ln226_fu_1040_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            SUM1_data_address4 = zext_ln224_fu_992_p1;
        end else begin
            SUM1_data_address4 = 'bx;
        end
    end else begin
        SUM1_data_address4 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            SUM1_data_address5 = zext_ln225_2_fu_1036_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            SUM1_data_address5 = zext_ln223_2_fu_988_p1;
        end else begin
            SUM1_data_address5 = 'bx;
        end
    end else begin
        SUM1_data_address5 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        SUM1_data_ce0 = 1'b1;
    end else begin
        SUM1_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        SUM1_data_ce1 = 1'b1;
    end else begin
        SUM1_data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        SUM1_data_ce2 = 1'b1;
    end else begin
        SUM1_data_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        SUM1_data_ce3 = 1'b1;
    end else begin
        SUM1_data_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        SUM1_data_ce4 = 1'b1;
    end else begin
        SUM1_data_ce4 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        SUM1_data_ce5 = 1'b1;
    end else begin
        SUM1_data_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        alpha1_array_ce0 = 1'b1;
    end else begin
        alpha1_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        alpha2_array_ce0 = 1'b1;
    end else begin
        alpha2_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln200_fu_585_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln200_reg_1284_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter10_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter10_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to9 = 1'b1;
    end else begin
        ap_idle_pp0_0to9 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to11 = 1'b1;
    end else begin
        ap_idle_pp0_1to11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_stage_sum_1_load_1 = stage_sum_3_reg_1862;
    end else begin
        ap_sig_allocacmp_stage_sum_1_load_1 = stage_sum_1_fu_112;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_533_p0 = sext_ln271_fu_1163_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_533_p0 = sext_ln280_fu_1138_p1;
    end else begin
        grp_fu_533_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_533_p1 = stddev_0;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_533_p1 = add_ln282_reg_1747;
    end else begin
        grp_fu_533_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_537_p0 = zext_ln281_1_fu_1167_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_537_p0 = zext_ln281_fu_1142_p1;
    end else begin
        grp_fu_537_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_537_p1 = sub_ln281_1_reg_1792;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_537_p1 = add_ln282_1_reg_1752;
    end else begin
        grp_fu_537_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rectangles_array0_ce0 = 1'b1;
    end else begin
        rectangles_array0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rectangles_array10_ce0 = 1'b1;
    end else begin
        rectangles_array10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rectangles_array11_ce0 = 1'b1;
    end else begin
        rectangles_array11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rectangles_array1_ce0 = 1'b1;
    end else begin
        rectangles_array1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rectangles_array2_ce0 = 1'b1;
    end else begin
        rectangles_array2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rectangles_array3_ce0 = 1'b1;
    end else begin
        rectangles_array3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rectangles_array4_ce0 = 1'b1;
    end else begin
        rectangles_array4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rectangles_array5_ce0 = 1'b1;
    end else begin
        rectangles_array5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rectangles_array6_ce0 = 1'b1;
    end else begin
        rectangles_array6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rectangles_array7_ce0 = 1'b1;
    end else begin
        rectangles_array7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rectangles_array8_ce0 = 1'b1;
    end else begin
        rectangles_array8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rectangles_array9_ce0 = 1'b1;
    end else begin
        rectangles_array9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln200_reg_1284_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stage_sum_1_out_ap_vld = 1'b1;
    end else begin
        stage_sum_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tree_thresh_array_ce0 = 1'b1;
    end else begin
        tree_thresh_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights_array0_ce0 = 1'b1;
    end else begin
        weights_array0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights_array1_ce0 = 1'b1;
    end else begin
        weights_array1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights_array2_ce0 = 1'b1;
    end else begin
        weights_array2_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter10_stage0) & (ap_idle_pp0_0to9 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to11 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln223_1_fu_880_p2 = (add_ln223_reg_1472 + tr0_reg_1426);

assign add_ln223_fu_788_p2 = (zext_ln223_fu_773_p1 + zext_ln223_1_fu_784_p1);

assign add_ln224_1_fu_884_p2 = (add_ln223_reg_1472 + add_ln224_reg_1478);

assign add_ln224_fu_794_p2 = (zext_ln193_fu_748_p1 + tr0_reg_1426);

assign add_ln225_1_fu_910_p2 = (zext_ln225_fu_895_p1 + zext_ln225_1_fu_906_p1);

assign add_ln225_2_fu_996_p2 = (add_ln225_1_reg_1536 + tr0_reg_1426_pp0_iter2_reg);

assign add_ln225_fu_799_p2 = (zext_ln193_1_fu_751_p1 + tr0_2_reg_1433);

assign add_ln226_fu_1000_p2 = (add_ln225_1_reg_1536 + add_ln224_reg_1478);

assign add_ln228_1_fu_916_p2 = (add_ln228_reg_1490 + tr1_reg_1440);

assign add_ln228_fu_826_p2 = (zext_ln228_fu_811_p1 + zext_ln228_1_fu_822_p1);

assign add_ln229_1_fu_920_p2 = (add_ln228_reg_1490 + add_ln229_reg_1496);

assign add_ln229_fu_832_p2 = (zext_ln193_2_fu_754_p1 + tr1_reg_1440);

assign add_ln230_1_fu_946_p2 = (zext_ln230_fu_931_p1 + zext_ln230_1_fu_942_p1);

assign add_ln230_2_fu_1012_p2 = (add_ln230_1_reg_1552 + tr1_reg_1440_pp0_iter2_reg);

assign add_ln230_fu_837_p2 = (zext_ln193_3_fu_757_p1 + tr1_2_reg_1447);

assign add_ln231_fu_1016_p2 = (add_ln230_1_reg_1552 + add_ln229_reg_1496);

assign add_ln235_1_fu_743_p2 = (zext_ln193_4_fu_652_p1 + pt_x_val);

assign add_ln235_2_fu_864_p2 = (zext_ln235_fu_849_p1 + zext_ln235_1_fu_860_p1);

assign add_ln235_3_fu_952_p2 = (add_ln235_2_reg_1508 + add_ln235_1_reg_1465);

assign add_ln235_fu_738_p2 = (zext_ln193_6_fu_655_p1 + pt_y_val);

assign add_ln236_1_fu_956_p2 = (add_ln235_2_reg_1508 + add_ln236_reg_1514);

assign add_ln236_fu_870_p2 = (zext_ln193_5_fu_760_p1 + add_ln235_1_reg_1465);

assign add_ln237_1_fu_982_p2 = (zext_ln237_fu_967_p1 + zext_ln237_1_fu_978_p1);

assign add_ln237_2_fu_1028_p2 = (add_ln237_1_reg_1568 + add_ln235_1_reg_1465_pp0_iter2_reg);

assign add_ln237_fu_875_p2 = (zext_ln193_7_fu_763_p1 + add_ln235_reg_1458);

assign add_ln238_fu_1032_p2 = (add_ln237_1_reg_1568 + add_ln236_reg_1514);

assign add_ln251_fu_610_p2 = (haar_counter_fu_120 + 33'd1);

assign add_ln281_fu_1124_p2 = (coord_8 + ap_phi_reg_pp0_iter5_storemerge_reg_522);

assign add_ln282_1_fu_1134_p2 = (SUM1_data_load_7_reg_1684 + sub_ln280_1_reg_1722);

assign add_ln282_2_fu_1171_p2 = (reg_555 + mul_ln282_reg_1812);

assign add_ln282_fu_1130_p2 = (SUM1_data_load_3_reg_1679 + sub_ln279_1_reg_1712);

assign alpha1_array_address0 = zext_ln271_reg_1704_pp0_iter8_reg;

assign alpha2_array_address0 = zext_ln271_reg_1704_pp0_iter8_reg;

assign and_ln233_1_fu_732_p2 = (icmp_ln233_1_fu_715_p2 & and_ln233_fu_726_p2);

assign and_ln233_fu_726_p2 = (icmp_ln233_fu_710_p2 & icmp_ln233_2_fu_720_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1230 = ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln200_reg_1284_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_1233 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln200_reg_1284_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_603 = ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign ap_phi_reg_pp0_iter0_storemerge_reg_522 = 'bx;

assign final_sum_fu_1176_p2 = (add_ln282_2_reg_1817_pp0_iter9_reg + reg_555);

assign icmp_ln200_fu_585_p2 = ((trunc_ln200_fu_581_p1 == add_ln200) ? 1'b1 : 1'b0);

assign icmp_ln201_fu_1193_p2 = ((j_fu_116 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln233_1_fu_715_p2 = ((tr2_3_reg_1419 != 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln233_2_fu_720_p2 = ((or_ln233_2_fu_704_p2 != 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln233_fu_710_p2 = ((tr2_1_reg_1405 != 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln284_fu_1207_p2 = (($signed(final_sum_reg_1827) < $signed(t_reg_1822)) ? 1'b1 : 1'b0);

assign j_2_fu_1184_p2 = (j_fu_116 + 8'd1);

assign or_ln233_1_fu_684_p2 = (trunc_ln233_1_fu_681_p1 | tr2_3_reg_1419);

assign or_ln233_2_fu_704_p2 = (tmp_fu_673_p3 | tmp1_fu_696_p3);

assign or_ln233_fu_661_p2 = (trunc_ln233_fu_658_p1 | tr2_1_reg_1405);

assign rectangles_array0_address0 = zext_ln200_fu_590_p1;

assign rectangles_array10_address0 = zext_ln200_fu_590_p1;

assign rectangles_array11_address0 = zext_ln200_fu_590_p1;

assign rectangles_array1_address0 = zext_ln200_fu_590_p1;

assign rectangles_array2_address0 = zext_ln200_fu_590_p1;

assign rectangles_array3_address0 = zext_ln200_fu_590_p1;

assign rectangles_array4_address0 = zext_ln200_fu_590_p1;

assign rectangles_array5_address0 = zext_ln200_fu_590_p1;

assign rectangles_array6_address0 = zext_ln200_fu_590_p1;

assign rectangles_array7_address0 = zext_ln200_fu_590_p1;

assign rectangles_array8_address0 = zext_ln200_fu_590_p1;

assign rectangles_array9_address0 = zext_ln200_fu_590_p1;

assign return_value_3_fu_1216_p3 = ((icmp_ln284_reg_1847[0:0] == 1'b1) ? return_value_reg_1852 : return_value_1_reg_1857);

assign sext_ln200_cast_fu_559_p1 = $signed(sext_ln200);

assign sext_ln250_fu_1221_p1 = $signed(return_value_3_fu_1216_p3);

assign sext_ln271_fu_1163_p1 = $signed(tree_thresh_array_load_reg_1787);

assign sext_ln280_fu_1138_p1 = $signed(weights_array0_load_reg_1732);

assign stage_sum_1_out = stage_sum_1_fu_112;

assign stage_sum_2_fu_1199_p3 = ((icmp_ln201_fu_1193_p2[0:0] == 1'b1) ? 64'd0 : ap_sig_allocacmp_stage_sum_1_load_1);

assign stage_sum_3_fu_1225_p2 = ($signed(stage_sum_2_reg_1842) + $signed(sext_ln250_fu_1221_p1));

assign sub_ln279_1_fu_1110_p2 = (sub_ln279_reg_1694 - reg_541);

assign sub_ln279_fu_1071_p2 = (reg_541 - reg_545);

assign sub_ln280_1_fu_1115_p2 = (sub_ln280_reg_1699 - reg_545);

assign sub_ln280_fu_1077_p2 = (reg_550 - SUM1_data_load_5_reg_1644);

assign sub_ln281_1_fu_1159_p2 = (sub_ln281_reg_1777 - coord_10_load_reg_1772);

assign sub_ln281_fu_1154_p2 = (add_ln281_reg_1742 - coord_9);

assign tmp1_fu_696_p3 = {{tmp_25_fu_689_p3}, {or_ln233_1_fu_684_p2}};

assign tmp_17_fu_777_p3 = {{tr0_2_reg_1433}, {6'd0}};

assign tmp_18_fu_888_p3 = {{add_ln225_reg_1484}, {8'd0}};

assign tmp_19_fu_899_p3 = {{add_ln225_reg_1484}, {6'd0}};

assign tmp_20_fu_804_p3 = {{tr1_2_reg_1447}, {8'd0}};

assign tmp_21_fu_815_p3 = {{tr1_2_reg_1447}, {6'd0}};

assign tmp_22_fu_924_p3 = {{add_ln230_reg_1502}, {8'd0}};

assign tmp_23_fu_935_p3 = {{add_ln230_reg_1502}, {6'd0}};

assign tmp_24_fu_666_p3 = tr2_reg_1398[32'd4];

assign tmp_25_fu_689_p3 = tr2_2_reg_1412[32'd4];

assign tmp_26_fu_842_p3 = {{add_ln235_reg_1458}, {8'd0}};

assign tmp_27_fu_853_p3 = {{add_ln235_reg_1458}, {6'd0}};

assign tmp_28_fu_960_p3 = {{add_ln237_reg_1520}, {8'd0}};

assign tmp_29_fu_971_p3 = {{add_ln237_reg_1520}, {6'd0}};

assign tmp_fu_673_p3 = {{tmp_24_fu_666_p3}, {or_ln233_fu_661_p2}};

assign tmp_s_fu_766_p3 = {{tr0_2_reg_1433}, {8'd0}};

assign tr0_2_fu_631_p2 = (zext_ln210_fu_628_p1 + pt_y_val);

assign tr0_fu_623_p2 = (zext_ln208_fu_620_p1 + pt_x_val);

assign tr1_2_fu_647_p2 = (zext_ln215_fu_644_p1 + pt_y_val);

assign tr1_fu_639_p2 = (zext_ln213_fu_636_p1 + pt_x_val);

assign tree_thresh_array_address0 = zext_ln271_reg_1704;

assign trunc_ln200_fu_581_p1 = haar_counter_fu_120[7:0];

assign trunc_ln233_1_fu_681_p1 = tr2_2_reg_1412[3:0];

assign trunc_ln233_fu_658_p1 = tr2_reg_1398[3:0];

assign trunc_ln248_fu_606_p1 = haar_counter_fu_120[11:0];

assign weights_array0_address0 = zext_ln271_fu_1105_p1;

assign weights_array1_address0 = zext_ln271_fu_1105_p1;

assign weights_array2_address0 = zext_ln271_reg_1704;

assign zext_ln193_1_fu_751_p1 = tr0_3_reg_1373;

assign zext_ln193_2_fu_754_p1 = tr1_1_reg_1383;

assign zext_ln193_3_fu_757_p1 = tr1_3_reg_1393;

assign zext_ln193_4_fu_652_p1 = tr2_reg_1398;

assign zext_ln193_5_fu_760_p1 = tr2_1_reg_1405;

assign zext_ln193_6_fu_655_p1 = tr2_2_reg_1412;

assign zext_ln193_7_fu_763_p1 = tr2_3_reg_1419;

assign zext_ln193_fu_748_p1 = tr0_1_reg_1363;

assign zext_ln200_fu_590_p1 = haar_counter_fu_120;

assign zext_ln208_fu_620_p1 = rectangles_array0_load_reg_1358;

assign zext_ln210_fu_628_p1 = rectangles_array1_load_reg_1368;

assign zext_ln213_fu_636_p1 = rectangles_array4_load_reg_1378;

assign zext_ln215_fu_644_p1 = rectangles_array5_load_reg_1388;

assign zext_ln223_1_fu_784_p1 = tmp_17_fu_777_p3;

assign zext_ln223_2_fu_988_p1 = add_ln223_1_reg_1526;

assign zext_ln223_fu_773_p1 = tmp_s_fu_766_p3;

assign zext_ln224_fu_992_p1 = add_ln224_1_reg_1531;

assign zext_ln225_1_fu_906_p1 = tmp_19_fu_899_p3;

assign zext_ln225_2_fu_1036_p1 = add_ln225_2_reg_1584;

assign zext_ln225_fu_895_p1 = tmp_18_fu_888_p3;

assign zext_ln226_fu_1040_p1 = add_ln226_reg_1589;

assign zext_ln228_1_fu_822_p1 = tmp_21_fu_815_p3;

assign zext_ln228_2_fu_1004_p1 = add_ln228_1_reg_1542;

assign zext_ln228_fu_811_p1 = tmp_20_fu_804_p3;

assign zext_ln229_fu_1008_p1 = add_ln229_1_reg_1547;

assign zext_ln230_1_fu_942_p1 = tmp_23_fu_935_p3;

assign zext_ln230_2_fu_1044_p1 = add_ln230_2_reg_1604;

assign zext_ln230_fu_931_p1 = tmp_22_fu_924_p3;

assign zext_ln231_fu_1048_p1 = add_ln231_reg_1609;

assign zext_ln235_1_fu_860_p1 = tmp_27_fu_853_p3;

assign zext_ln235_2_fu_1020_p1 = add_ln235_3_reg_1558;

assign zext_ln235_fu_849_p1 = tmp_26_fu_842_p3;

assign zext_ln236_fu_1024_p1 = add_ln236_1_reg_1563;

assign zext_ln237_1_fu_978_p1 = tmp_29_fu_971_p3;

assign zext_ln237_2_fu_1052_p1 = add_ln237_2_reg_1624;

assign zext_ln237_fu_967_p1 = tmp_28_fu_960_p3;

assign zext_ln238_fu_1056_p1 = add_ln238_reg_1629;

assign zext_ln271_fu_1105_p1 = trunc_ln248_reg_1348_pp0_iter3_reg;

assign zext_ln281_1_fu_1167_p1 = weights_array2_load_reg_1797;

assign zext_ln281_fu_1142_p1 = weights_array1_load_reg_1737;

always @ (posedge ap_clk) begin
    add_ln223_reg_1472[5:0] <= 6'b000000;
    add_ln228_reg_1490[5:0] <= 6'b000000;
    add_ln235_2_reg_1508[5:0] <= 6'b000000;
    add_ln225_1_reg_1536[5:0] <= 6'b000000;
    add_ln230_1_reg_1552[5:0] <= 6'b000000;
    add_ln237_1_reg_1568[5:0] <= 6'b000000;
    zext_ln271_reg_1704[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln271_reg_1704_pp0_iter5_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln271_reg_1704_pp0_iter6_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln271_reg_1704_pp0_iter7_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln271_reg_1704_pp0_iter8_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
end

endmodule //face_detect_cascadeClassifier_Pipeline_Filters
