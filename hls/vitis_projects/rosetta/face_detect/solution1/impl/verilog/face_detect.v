// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="face_detect_face_detect,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.442000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=1646,HLS_SYN_DSP=0,HLS_SYN_FF=18010,HLS_SYN_LUT=17224,HLS_VERSION=2023_2}" *)

module face_detect (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Data_address0,
        Data_ce0,
        Data_q0,
        result_x_address0,
        result_x_ce0,
        result_x_we0,
        result_x_d0,
        result_y_address0,
        result_y_ce0,
        result_y_we0,
        result_y_d0,
        result_w_address0,
        result_w_ce0,
        result_w_we0,
        result_w_d0,
        result_h_address0,
        result_h_ce0,
        result_h_we0,
        result_h_d0,
        result_size,
        result_size_ap_vld
);

parameter    ap_ST_fsm_state1 = 76'd1;
parameter    ap_ST_fsm_state2 = 76'd2;
parameter    ap_ST_fsm_state3 = 76'd4;
parameter    ap_ST_fsm_state4 = 76'd8;
parameter    ap_ST_fsm_state5 = 76'd16;
parameter    ap_ST_fsm_state6 = 76'd32;
parameter    ap_ST_fsm_state7 = 76'd64;
parameter    ap_ST_fsm_state8 = 76'd128;
parameter    ap_ST_fsm_state9 = 76'd256;
parameter    ap_ST_fsm_state10 = 76'd512;
parameter    ap_ST_fsm_state11 = 76'd1024;
parameter    ap_ST_fsm_state12 = 76'd2048;
parameter    ap_ST_fsm_state13 = 76'd4096;
parameter    ap_ST_fsm_state14 = 76'd8192;
parameter    ap_ST_fsm_state15 = 76'd16384;
parameter    ap_ST_fsm_state16 = 76'd32768;
parameter    ap_ST_fsm_state17 = 76'd65536;
parameter    ap_ST_fsm_state18 = 76'd131072;
parameter    ap_ST_fsm_state19 = 76'd262144;
parameter    ap_ST_fsm_state20 = 76'd524288;
parameter    ap_ST_fsm_state21 = 76'd1048576;
parameter    ap_ST_fsm_state22 = 76'd2097152;
parameter    ap_ST_fsm_state23 = 76'd4194304;
parameter    ap_ST_fsm_state24 = 76'd8388608;
parameter    ap_ST_fsm_state25 = 76'd16777216;
parameter    ap_ST_fsm_state26 = 76'd33554432;
parameter    ap_ST_fsm_state27 = 76'd67108864;
parameter    ap_ST_fsm_state28 = 76'd134217728;
parameter    ap_ST_fsm_state29 = 76'd268435456;
parameter    ap_ST_fsm_state30 = 76'd536870912;
parameter    ap_ST_fsm_state31 = 76'd1073741824;
parameter    ap_ST_fsm_state32 = 76'd2147483648;
parameter    ap_ST_fsm_state33 = 76'd4294967296;
parameter    ap_ST_fsm_state34 = 76'd8589934592;
parameter    ap_ST_fsm_state35 = 76'd17179869184;
parameter    ap_ST_fsm_state36 = 76'd34359738368;
parameter    ap_ST_fsm_state37 = 76'd68719476736;
parameter    ap_ST_fsm_state38 = 76'd137438953472;
parameter    ap_ST_fsm_state39 = 76'd274877906944;
parameter    ap_ST_fsm_state40 = 76'd549755813888;
parameter    ap_ST_fsm_state41 = 76'd1099511627776;
parameter    ap_ST_fsm_state42 = 76'd2199023255552;
parameter    ap_ST_fsm_state43 = 76'd4398046511104;
parameter    ap_ST_fsm_state44 = 76'd8796093022208;
parameter    ap_ST_fsm_state45 = 76'd17592186044416;
parameter    ap_ST_fsm_state46 = 76'd35184372088832;
parameter    ap_ST_fsm_state47 = 76'd70368744177664;
parameter    ap_ST_fsm_state48 = 76'd140737488355328;
parameter    ap_ST_fsm_state49 = 76'd281474976710656;
parameter    ap_ST_fsm_state50 = 76'd562949953421312;
parameter    ap_ST_fsm_state51 = 76'd1125899906842624;
parameter    ap_ST_fsm_state52 = 76'd2251799813685248;
parameter    ap_ST_fsm_state53 = 76'd4503599627370496;
parameter    ap_ST_fsm_state54 = 76'd9007199254740992;
parameter    ap_ST_fsm_state55 = 76'd18014398509481984;
parameter    ap_ST_fsm_state56 = 76'd36028797018963968;
parameter    ap_ST_fsm_state57 = 76'd72057594037927936;
parameter    ap_ST_fsm_state58 = 76'd144115188075855872;
parameter    ap_ST_fsm_state59 = 76'd288230376151711744;
parameter    ap_ST_fsm_state60 = 76'd576460752303423488;
parameter    ap_ST_fsm_state61 = 76'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 76'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 76'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 76'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 76'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 76'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 76'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 76'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 76'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 76'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 76'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 76'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 76'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 76'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 76'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 76'd37778931862957161709568;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [16:0] Data_address0;
output   Data_ce0;
input  [7:0] Data_q0;
output  [6:0] result_x_address0;
output   result_x_ce0;
output   result_x_we0;
output  [31:0] result_x_d0;
output  [6:0] result_y_address0;
output   result_y_ce0;
output   result_y_we0;
output  [31:0] result_y_d0;
output  [6:0] result_w_address0;
output   result_w_ce0;
output   result_w_we0;
output  [31:0] result_w_d0;
output  [6:0] result_h_address0;
output   result_h_ce0;
output   result_h_we0;
output  [31:0] result_h_d0;
output  [31:0] result_size;
output   result_size_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] result_size;
reg result_size_ap_vld;

(* fsm_encoding = "none" *) reg   [75:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] factor_2_reg_899;
wire    ap_CS_fsm_state2;
wire   [31:0] grp_fu_288_p2;
reg   [31:0] dc_2_reg_904;
wire    ap_CS_fsm_state31;
wire   [31:0] grp_fu_293_p2;
reg   [31:0] dc_3_reg_910;
wire   [0:0] grp_fu_301_p2;
reg   [0:0] tmp_6_reg_916;
wire    ap_CS_fsm_state35;
wire   [0:0] grp_fu_306_p2;
reg   [0:0] tmp_8_reg_921;
wire   [22:0] trunc_ln92_fu_344_p1;
reg   [22:0] trunc_ln92_reg_926;
wire    ap_CS_fsm_state36;
wire   [7:0] xs_exp_3_fu_374_p4;
reg   [7:0] xs_exp_3_reg_931;
wire   [22:0] trunc_ln92_1_fu_384_p1;
reg   [22:0] trunc_ln92_1_reg_937;
reg   [0:0] xs_sign_2_reg_945;
wire   [0:0] tmp_11_fu_435_p3;
reg   [0:0] tmp_11_reg_951;
wire   [8:0] select_ln18_4_fu_453_p3;
reg   [8:0] select_ln18_4_reg_956;
reg   [0:0] xs_sign_3_reg_961;
wire   [78:0] zext_ln15_2_fu_478_p1;
wire    ap_CS_fsm_state37;
wire   [78:0] zext_ln18_2_fu_485_p1;
wire   [0:0] tmp_14_fu_510_p3;
reg   [0:0] tmp_14_reg_979;
wire   [8:0] select_ln18_6_fu_527_p3;
reg   [8:0] select_ln18_6_reg_984;
reg   [31:0] tmp_s_reg_989;
wire    ap_CS_fsm_state38;
reg   [31:0] tmp_13_reg_994;
wire   [78:0] zext_ln15_3_fu_564_p1;
wire   [78:0] zext_ln18_3_fu_571_p1;
wire   [31:0] val_2_fu_587_p3;
reg   [31:0] val_2_reg_1011;
wire    ap_CS_fsm_state39;
reg   [31:0] tmp_15_reg_1018;
reg   [31:0] tmp_16_reg_1023;
wire   [31:0] val_3_fu_612_p3;
reg   [31:0] val_3_reg_1028;
wire    ap_CS_fsm_state40;
wire   [31:0] grp_fu_278_p2;
reg   [31:0] value_assign_reg_1035;
wire    ap_CS_fsm_state43;
wire   [31:0] grp_fu_283_p2;
reg   [31:0] factor_1_reg_1042;
wire   [0:0] icmp_ln61_fu_648_p2;
reg   [0:0] icmp_ln61_reg_1047;
wire    ap_CS_fsm_state45;
wire   [0:0] icmp_ln61_2_fu_654_p2;
reg   [0:0] icmp_ln61_2_reg_1052;
reg   [0:0] tmp_2_reg_1057;
wire    ap_CS_fsm_state47;
wire   [63:0] grp_fu_298_p1;
reg   [63:0] conv_i_reg_1062;
wire    ap_CS_fsm_state48;
wire   [63:0] select_ln61_fu_669_p3;
reg   [63:0] select_ln61_reg_1067;
wire   [63:0] grp_fu_312_p2;
reg   [63:0] dc_reg_1072;
wire    ap_CS_fsm_state64;
wire   [51:0] trunc_ln505_fu_690_p1;
reg   [51:0] trunc_ln505_reg_1077;
wire    ap_CS_fsm_state65;
wire   [0:0] tmp_fu_704_p3;
reg   [0:0] tmp_reg_1082;
wire   [11:0] select_ln18_fu_722_p3;
reg   [11:0] select_ln18_reg_1087;
reg   [0:0] xs_sign_reg_1092;
wire   [136:0] zext_ln15_fu_747_p1;
wire    ap_CS_fsm_state66;
wire   [136:0] zext_ln18_fu_754_p1;
wire   [26:0] grp_fu_617_p2;
reg   [26:0] sdiv_ln357_reg_1109;
wire    ap_CS_fsm_state70;
wire   [23:0] grp_fu_622_p2;
reg   [23:0] sdiv_ln358_reg_1114;
wire   [26:0] trunc_ln357_fu_770_p1;
reg   [26:0] trunc_ln357_reg_1119;
wire    ap_CS_fsm_state71;
wire   [26:0] sub_ln357_fu_773_p2;
reg   [26:0] sub_ln357_reg_1124;
wire   [23:0] trunc_ln358_fu_779_p1;
reg   [23:0] trunc_ln358_reg_1129;
wire   [23:0] sub_ln358_fu_782_p2;
reg   [23:0] sub_ln358_reg_1134;
wire   [31:0] result_18_fu_793_p3;
reg   [31:0] result_18_reg_1139;
wire    ap_CS_fsm_state72;
wire   [31:0] result_19_fu_805_p3;
reg   [31:0] result_19_reg_1145;
wire   [27:0] x_ratio_fu_821_p2;
reg   [27:0] x_ratio_reg_1151;
wire   [23:0] y_ratio_fu_833_p2;
reg   [23:0] y_ratio_reg_1156;
reg   [31:0] tmp_17_reg_1161;
reg   [31:0] tmp_18_reg_1166;
wire   [31:0] val_fu_860_p3;
reg   [31:0] val_reg_1171;
wire    ap_CS_fsm_state73;
wire   [31:0] result_17_fu_870_p3;
reg   [31:0] result_17_reg_1177;
wire    ap_CS_fsm_state74;
reg   [16:0] IMG1_data_address0;
reg    IMG1_data_ce0;
reg    IMG1_data_we0;
wire   [7:0] IMG1_data_q0;
wire    grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_ap_start;
wire    grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_ap_done;
wire    grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_ap_idle;
wire    grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_ap_ready;
wire   [16:0] grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_IMG1_data_address0;
wire    grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_IMG1_data_ce0;
wire    grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_IMG1_data_we0;
wire   [7:0] grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_IMG1_data_d0;
wire   [16:0] grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_Data_address0;
wire    grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_Data_ce0;
wire    grp_processImage_fu_213_ap_start;
wire    grp_processImage_fu_213_ap_done;
wire    grp_processImage_fu_213_ap_idle;
wire    grp_processImage_fu_213_ap_ready;
wire   [6:0] grp_processImage_fu_213_result_x_address0;
wire    grp_processImage_fu_213_result_x_ce0;
wire    grp_processImage_fu_213_result_x_we0;
wire   [31:0] grp_processImage_fu_213_result_x_d0;
wire   [6:0] grp_processImage_fu_213_result_y_address0;
wire    grp_processImage_fu_213_result_y_ce0;
wire    grp_processImage_fu_213_result_y_we0;
wire   [31:0] grp_processImage_fu_213_result_y_d0;
wire   [6:0] grp_processImage_fu_213_result_w_address0;
wire    grp_processImage_fu_213_result_w_ce0;
wire    grp_processImage_fu_213_result_w_we0;
wire   [31:0] grp_processImage_fu_213_result_w_d0;
wire   [6:0] grp_processImage_fu_213_result_h_address0;
wire    grp_processImage_fu_213_result_h_ce0;
wire    grp_processImage_fu_213_result_h_we0;
wire   [31:0] grp_processImage_fu_213_result_h_d0;
wire   [16:0] grp_processImage_fu_213_IMG1_data_address0;
wire    grp_processImage_fu_213_IMG1_data_ce0;
wire   [31:0] grp_processImage_fu_213_ap_return;
wire   [31:0] grp_processImage_fu_213_grp_fu_278_p_din0;
wire   [31:0] grp_processImage_fu_213_grp_fu_278_p_din1;
wire    grp_processImage_fu_213_grp_fu_278_p_ce;
wire   [31:0] grp_processImage_fu_213_grp_fu_298_p_din0;
wire    grp_processImage_fu_213_grp_fu_298_p_ce;
wire   [31:0] grp_processImage_fu_213_grp_fu_301_p_din0;
wire   [31:0] grp_processImage_fu_213_grp_fu_301_p_din1;
wire   [4:0] grp_processImage_fu_213_grp_fu_301_p_opcode;
wire    grp_processImage_fu_213_grp_fu_301_p_ce;
wire   [63:0] grp_processImage_fu_213_grp_fu_312_p_din0;
wire   [63:0] grp_processImage_fu_213_grp_fu_312_p_din1;
wire   [1:0] grp_processImage_fu_213_grp_fu_312_p_opcode;
wire    grp_processImage_fu_213_grp_fu_312_p_ce;
reg    grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_ap_start_reg;
reg    grp_processImage_fu_213_ap_start_reg;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state76;
reg   [31:0] factor_fu_182;
wire    ap_CS_fsm_state44;
reg   [31:0] result_size1_fu_186;
reg   [31:0] grp_fu_278_p0;
reg   [31:0] grp_fu_278_p1;
reg   [31:0] grp_fu_298_p0;
reg   [31:0] grp_fu_301_p0;
reg   [31:0] grp_fu_301_p1;
wire    ap_CS_fsm_state32;
reg   [63:0] grp_fu_312_p0;
reg   [63:0] grp_fu_312_p1;
wire    ap_CS_fsm_state49;
wire   [31:0] data_2_fu_331_p1;
wire   [7:0] xs_exp_2_fu_334_p4;
wire   [0:0] icmp_ln92_1_fu_354_p2;
wire   [0:0] icmp_ln92_fu_348_p2;
wire   [0:0] or_ln92_fu_360_p2;
wire   [31:0] data_3_fu_371_p1;
wire   [0:0] icmp_ln92_3_fu_394_p2;
wire   [0:0] icmp_ln92_2_fu_388_p2;
wire   [0:0] or_ln92_1_fu_400_p2;
wire   [0:0] and_ln92_1_fu_366_p2;
wire   [0:0] and_ln92_2_fu_406_p2;
wire   [8:0] zext_ln317_fu_425_p1;
wire   [8:0] add_ln317_fu_429_p2;
wire   [7:0] sub_ln18_2_fu_443_p2;
wire  signed [8:0] sext_ln18_5_fu_449_p1;
wire   [24:0] mantissa_2_fu_469_p4;
wire  signed [31:0] sext_ln18_6_fu_482_p1;
wire   [8:0] zext_ln317_1_fu_501_p1;
wire   [8:0] add_ln317_1_fu_504_p2;
wire   [7:0] sub_ln18_3_fu_518_p2;
wire  signed [8:0] sext_ln18_7_fu_523_p1;
wire   [78:0] grp_fu_489_p2;
wire   [78:0] grp_fu_495_p2;
wire   [24:0] mantissa_3_fu_555_p4;
wire  signed [31:0] sext_ln18_8_fu_568_p1;
wire   [78:0] grp_fu_575_p2;
wire   [78:0] grp_fu_581_p2;
wire   [26:0] grp_fu_617_p0;
wire   [25:0] grp_fu_622_p0;
wire    ap_CS_fsm_state41;
wire   [31:0] bitcast_ln61_fu_631_p1;
wire   [7:0] tmp_9_fu_634_p4;
wire   [22:0] trunc_ln61_fu_644_p1;
wire   [0:0] or_ln61_fu_660_p2;
wire   [0:0] and_ln61_fu_664_p2;
wire   [63:0] data_fu_677_p1;
wire   [10:0] xs_exp_fu_680_p4;
wire   [11:0] zext_ln486_fu_694_p1;
wire   [11:0] add_ln486_fu_698_p2;
wire   [10:0] sub_ln18_fu_712_p2;
wire  signed [11:0] sext_ln18_fu_718_p1;
wire   [53:0] mantissa_fu_738_p4;
wire  signed [31:0] sext_ln18_4_fu_751_p1;
wire   [31:0] result_12_fu_788_p2;
wire   [31:0] result_15_fu_800_p2;
wire   [26:0] select_ln357_fu_812_p3;
wire  signed [27:0] sext_ln357_fu_817_p1;
wire   [23:0] select_ln358_fu_828_p3;
wire   [136:0] grp_fu_758_p2;
wire   [136:0] grp_fu_764_p2;
wire   [31:0] result_fu_865_p2;
reg    grp_fu_278_ce;
reg    grp_fu_298_ce;
reg    grp_fu_301_ce;
reg   [4:0] grp_fu_301_opcode;
reg    grp_fu_312_ce;
wire   [0:0] and_ln92_fu_411_p2;
reg   [75:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
reg    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
reg    ap_ST_fsm_state76_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 76'd1;
#0 grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_ap_start_reg = 1'b0;
#0 grp_processImage_fu_213_ap_start_reg = 1'b0;
#0 factor_fu_182 = 32'd0;
#0 result_size1_fu_186 = 32'd0;
end

face_detect_IMG1_data_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 76800 ),
    .AddressWidth( 17 ))
IMG1_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(IMG1_data_address0),
    .ce0(IMG1_data_ce0),
    .we0(IMG1_data_we0),
    .d0(grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_IMG1_data_d0),
    .q0(IMG1_data_q0)
);

face_detect_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1 grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_ap_start),
    .ap_done(grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_ap_done),
    .ap_idle(grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_ap_idle),
    .ap_ready(grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_ap_ready),
    .y_ratio(y_ratio_reg_1156),
    .result_19(result_19_reg_1145),
    .IMG1_data_address0(grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_IMG1_data_address0),
    .IMG1_data_ce0(grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_IMG1_data_ce0),
    .IMG1_data_we0(grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_IMG1_data_we0),
    .IMG1_data_d0(grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_IMG1_data_d0),
    .result_18(result_18_reg_1139),
    .sext_ln357_1(x_ratio_reg_1151),
    .Data_address0(grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_Data_address0),
    .Data_ce0(grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_Data_ce0),
    .Data_q0(Data_q0)
);

face_detect_processImage grp_processImage_fu_213(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_processImage_fu_213_ap_start),
    .ap_done(grp_processImage_fu_213_ap_done),
    .ap_idle(grp_processImage_fu_213_ap_idle),
    .ap_ready(grp_processImage_fu_213_ap_ready),
    .factor(factor_2_reg_899),
    .sum_row(result_19_reg_1145),
    .sum_col(result_18_reg_1139),
    .result_x_address0(grp_processImage_fu_213_result_x_address0),
    .result_x_ce0(grp_processImage_fu_213_result_x_ce0),
    .result_x_we0(grp_processImage_fu_213_result_x_we0),
    .result_x_d0(grp_processImage_fu_213_result_x_d0),
    .result_y_address0(grp_processImage_fu_213_result_y_address0),
    .result_y_ce0(grp_processImage_fu_213_result_y_ce0),
    .result_y_we0(grp_processImage_fu_213_result_y_we0),
    .result_y_d0(grp_processImage_fu_213_result_y_d0),
    .result_w_address0(grp_processImage_fu_213_result_w_address0),
    .result_w_ce0(grp_processImage_fu_213_result_w_ce0),
    .result_w_we0(grp_processImage_fu_213_result_w_we0),
    .result_w_d0(grp_processImage_fu_213_result_w_d0),
    .result_h_address0(grp_processImage_fu_213_result_h_address0),
    .result_h_ce0(grp_processImage_fu_213_result_h_ce0),
    .result_h_we0(grp_processImage_fu_213_result_h_we0),
    .result_h_d0(grp_processImage_fu_213_result_h_d0),
    .p_read(result_size1_fu_186),
    .IMG1_data_address0(grp_processImage_fu_213_IMG1_data_address0),
    .IMG1_data_ce0(grp_processImage_fu_213_IMG1_data_ce0),
    .IMG1_data_q0(IMG1_data_q0),
    .winSize_width_val(result_17_reg_1177),
    .ap_return(grp_processImage_fu_213_ap_return),
    .grp_fu_278_p_din0(grp_processImage_fu_213_grp_fu_278_p_din0),
    .grp_fu_278_p_din1(grp_processImage_fu_213_grp_fu_278_p_din1),
    .grp_fu_278_p_dout0(grp_fu_278_p2),
    .grp_fu_278_p_ce(grp_processImage_fu_213_grp_fu_278_p_ce),
    .grp_fu_298_p_din0(grp_processImage_fu_213_grp_fu_298_p_din0),
    .grp_fu_298_p_dout0(grp_fu_298_p1),
    .grp_fu_298_p_ce(grp_processImage_fu_213_grp_fu_298_p_ce),
    .grp_fu_301_p_din0(grp_processImage_fu_213_grp_fu_301_p_din0),
    .grp_fu_301_p_din1(grp_processImage_fu_213_grp_fu_301_p_din1),
    .grp_fu_301_p_opcode(grp_processImage_fu_213_grp_fu_301_p_opcode),
    .grp_fu_301_p_dout0(grp_fu_301_p2),
    .grp_fu_301_p_ce(grp_processImage_fu_213_grp_fu_301_p_ce),
    .grp_fu_312_p_din0(grp_processImage_fu_213_grp_fu_312_p_din0),
    .grp_fu_312_p_din1(grp_processImage_fu_213_grp_fu_312_p_din1),
    .grp_fu_312_p_opcode(grp_processImage_fu_213_grp_fu_312_p_opcode),
    .grp_fu_312_p_dout0(grp_fu_312_p2),
    .grp_fu_312_p_ce(grp_processImage_fu_213_grp_fu_312_p_ce)
);

face_detect_fmul_32ns_32ns_32_8_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_8_max_dsp_1_U89(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_278_p0),
    .din1(grp_fu_278_p1),
    .ce(grp_fu_278_ce),
    .dout(grp_fu_278_p2)
);

face_detect_fmul_32ns_32ns_32_8_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_8_max_dsp_1_U90(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(factor_fu_182),
    .din1(32'd1067030938),
    .ce(1'b1),
    .dout(grp_fu_283_p2)
);

face_detect_fdiv_32ns_32ns_32_30_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 30 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_30_no_dsp_1_U91(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd1134559232),
    .din1(factor_fu_182),
    .ce(1'b1),
    .dout(grp_fu_288_p2)
);

face_detect_fdiv_32ns_32ns_32_30_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 30 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_30_no_dsp_1_U92(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd1131413504),
    .din1(factor_fu_182),
    .ce(1'b1),
    .dout(grp_fu_293_p2)
);

face_detect_fpext_32ns_64_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_4_no_dsp_1_U93(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_298_p0),
    .ce(grp_fu_298_ce),
    .dout(grp_fu_298_p1)
);

face_detect_fcmp_32ns_32ns_1_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_4_no_dsp_1_U94(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_301_p0),
    .din1(grp_fu_301_p1),
    .ce(grp_fu_301_ce),
    .opcode(grp_fu_301_opcode),
    .dout(grp_fu_301_p2)
);

face_detect_fcmp_32ns_32ns_1_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_4_no_dsp_1_U95(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(dc_3_reg_910),
    .din1(32'd1103626240),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_306_p2)
);

face_detect_dadd_64ns_64ns_64_16_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_16_full_dsp_1_U96(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_312_p0),
    .din1(grp_fu_312_p1),
    .ce(grp_fu_312_ce),
    .dout(grp_fu_312_p2)
);

face_detect_lshr_79ns_32ns_79_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 1 ),
    .din0_WIDTH( 79 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 79 ))
lshr_79ns_32ns_79_2_1_U97(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(zext_ln15_2_fu_478_p1),
    .din1(zext_ln18_2_fu_485_p1),
    .ce(1'b1),
    .dout(grp_fu_489_p2)
);

face_detect_shl_79ns_32ns_79_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 0 ),
    .din0_WIDTH( 79 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 79 ))
shl_79ns_32ns_79_2_1_U98(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(zext_ln15_2_fu_478_p1),
    .din1(zext_ln18_2_fu_485_p1),
    .ce(1'b1),
    .dout(grp_fu_495_p2)
);

face_detect_lshr_79ns_32ns_79_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 1 ),
    .din0_WIDTH( 79 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 79 ))
lshr_79ns_32ns_79_2_1_U99(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(zext_ln15_3_fu_564_p1),
    .din1(zext_ln18_3_fu_571_p1),
    .ce(1'b1),
    .dout(grp_fu_575_p2)
);

face_detect_shl_79ns_32ns_79_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 0 ),
    .din0_WIDTH( 79 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 79 ))
shl_79ns_32ns_79_2_1_U100(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(zext_ln15_3_fu_564_p1),
    .din1(zext_ln18_3_fu_571_p1),
    .ce(1'b1),
    .dout(grp_fu_581_p2)
);

face_detect_sdiv_27ns_32ns_27_31_1 #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 27 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 27 ))
sdiv_27ns_32ns_27_31_1_U101(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_617_p0),
    .din1(val_2_reg_1011),
    .ce(1'b1),
    .dout(grp_fu_617_p2)
);

face_detect_sdiv_26ns_32ns_24_30_1 #(
    .ID( 1 ),
    .NUM_STAGE( 30 ),
    .din0_WIDTH( 26 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 24 ))
sdiv_26ns_32ns_24_30_1_U102(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_622_p0),
    .din1(val_3_reg_1028),
    .ce(1'b1),
    .dout(grp_fu_622_p2)
);

face_detect_lshr_137ns_32ns_137_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 1 ),
    .din0_WIDTH( 137 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 137 ))
lshr_137ns_32ns_137_7_1_U103(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(zext_ln15_fu_747_p1),
    .din1(zext_ln18_fu_754_p1),
    .ce(1'b1),
    .dout(grp_fu_758_p2)
);

face_detect_shl_137ns_32ns_137_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 0 ),
    .din0_WIDTH( 137 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 137 ))
shl_137ns_32ns_137_7_1_U104(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(zext_ln15_fu_747_p1),
    .din1(zext_ln18_fu_754_p1),
    .ce(1'b1),
    .dout(grp_fu_764_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state72)) begin
            grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_ap_start_reg <= 1'b1;
        end else if ((grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_ap_ready == 1'b1)) begin
            grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_processImage_fu_213_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state75)) begin
            grp_processImage_fu_213_ap_start_reg <= 1'b1;
        end else if ((grp_processImage_fu_213_ap_ready == 1'b1)) begin
            grp_processImage_fu_213_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        factor_fu_182 <= 32'd1067030938;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        factor_fu_182 <= factor_1_reg_1042;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        result_size1_fu_186 <= 32'd0;
    end else if (((grp_processImage_fu_213_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state76))) begin
        result_size1_fu_186 <= grp_processImage_fu_213_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        conv_i_reg_1062 <= grp_fu_298_p1;
        select_ln61_reg_1067[63] <= select_ln61_fu_669_p3[63];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        dc_2_reg_904 <= grp_fu_288_p2;
        dc_3_reg_910 <= grp_fu_293_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        dc_reg_1072 <= grp_fu_312_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        factor_1_reg_1042 <= grp_fu_283_p2;
        value_assign_reg_1035 <= grp_fu_278_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        factor_2_reg_899 <= factor_fu_182;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        icmp_ln61_2_reg_1052 <= icmp_ln61_2_fu_654_p2;
        icmp_ln61_reg_1047 <= icmp_ln61_fu_648_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        result_17_reg_1177 <= result_17_fu_870_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        result_18_reg_1139 <= result_18_fu_793_p3;
        result_19_reg_1145 <= result_19_fu_805_p3;
        tmp_17_reg_1161 <= {{grp_fu_758_p2[84:53]}};
        tmp_18_reg_1166 <= {{grp_fu_764_p2[84:53]}};
        x_ratio_reg_1151 <= x_ratio_fu_821_p2;
        y_ratio_reg_1156 <= y_ratio_fu_833_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        sdiv_ln357_reg_1109 <= grp_fu_617_p2;
        sdiv_ln358_reg_1114 <= grp_fu_622_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        select_ln18_4_reg_956 <= select_ln18_4_fu_453_p3;
        tmp_11_reg_951 <= add_ln317_fu_429_p2[32'd8];
        trunc_ln92_1_reg_937 <= trunc_ln92_1_fu_384_p1;
        trunc_ln92_reg_926 <= trunc_ln92_fu_344_p1;
        xs_exp_3_reg_931 <= {{data_3_fu_371_p1[30:23]}};
        xs_sign_2_reg_945 <= data_2_fu_331_p1[32'd31];
        xs_sign_3_reg_961 <= data_3_fu_371_p1[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        select_ln18_6_reg_984 <= select_ln18_6_fu_527_p3;
        tmp_14_reg_979 <= add_ln317_1_fu_504_p2[32'd8];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        select_ln18_reg_1087 <= select_ln18_fu_722_p3;
        tmp_reg_1082 <= add_ln486_fu_698_p2[32'd11];
        trunc_ln505_reg_1077 <= trunc_ln505_fu_690_p1;
        xs_sign_reg_1092 <= data_fu_677_p1[32'd63];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        sub_ln357_reg_1124 <= sub_ln357_fu_773_p2;
        sub_ln358_reg_1134 <= sub_ln358_fu_782_p2;
        trunc_ln357_reg_1119 <= trunc_ln357_fu_770_p1;
        trunc_ln358_reg_1129 <= trunc_ln358_fu_779_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        tmp_13_reg_994 <= {{grp_fu_495_p2[55:24]}};
        tmp_s_reg_989 <= {{grp_fu_489_p2[55:24]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        tmp_15_reg_1018 <= {{grp_fu_575_p2[55:24]}};
        tmp_16_reg_1023 <= {{grp_fu_581_p2[55:24]}};
        val_2_reg_1011 <= val_2_fu_587_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        tmp_2_reg_1057 <= grp_fu_301_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        tmp_6_reg_916 <= grp_fu_301_p2;
        tmp_8_reg_921 <= grp_fu_306_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        val_3_reg_1028 <= val_3_fu_612_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        val_reg_1171 <= val_fu_860_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        IMG1_data_address0 = grp_processImage_fu_213_IMG1_data_address0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        IMG1_data_address0 = grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_IMG1_data_address0;
    end else begin
        IMG1_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        IMG1_data_ce0 = grp_processImage_fu_213_IMG1_data_ce0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        IMG1_data_ce0 = grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_IMG1_data_ce0;
    end else begin
        IMG1_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        IMG1_data_we0 = grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_IMG1_data_we0;
    end else begin
        IMG1_data_we0 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

always @ (*) begin
    if ((grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_ap_done == 1'b0)) begin
        ap_ST_fsm_state73_blk = 1'b1;
    end else begin
        ap_ST_fsm_state73_blk = 1'b0;
    end
end

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

always @ (*) begin
    if ((grp_processImage_fu_213_ap_done == 1'b0)) begin
        ap_ST_fsm_state76_blk = 1'b1;
    end else begin
        ap_ST_fsm_state76_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'd0 == and_ln92_fu_411_p2) & (1'b1 == ap_CS_fsm_state36))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln92_fu_411_p2) & (1'b1 == ap_CS_fsm_state36))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_fu_278_ce = grp_processImage_fu_213_grp_fu_278_p_ce;
    end else begin
        grp_fu_278_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_fu_278_p0 = grp_processImage_fu_213_grp_fu_278_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_278_p0 = factor_fu_182;
    end else begin
        grp_fu_278_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_fu_278_p1 = grp_processImage_fu_213_grp_fu_278_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_278_p1 = 32'd1103101952;
    end else begin
        grp_fu_278_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_fu_298_ce = grp_processImage_fu_213_grp_fu_298_p_ce;
    end else begin
        grp_fu_298_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_fu_298_p0 = grp_processImage_fu_213_grp_fu_298_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_298_p0 = value_assign_reg_1035;
    end else begin
        grp_fu_298_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_fu_301_ce = grp_processImage_fu_213_grp_fu_301_p_ce;
    end else begin
        grp_fu_301_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_fu_301_opcode = grp_processImage_fu_213_grp_fu_301_p_opcode;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_301_opcode = 5'd3;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_301_opcode = 5'd2;
    end else begin
        grp_fu_301_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_fu_301_p0 = grp_processImage_fu_213_grp_fu_301_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_301_p0 = value_assign_reg_1035;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_301_p0 = dc_2_reg_904;
    end else begin
        grp_fu_301_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_fu_301_p1 = grp_processImage_fu_213_grp_fu_301_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_301_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_301_p1 = 32'd1103626240;
    end else begin
        grp_fu_301_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_fu_312_ce = grp_processImage_fu_213_grp_fu_312_p_ce;
    end else begin
        grp_fu_312_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_fu_312_p0 = grp_processImage_fu_213_grp_fu_312_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_312_p0 = conv_i_reg_1062;
    end else begin
        grp_fu_312_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_fu_312_p1 = grp_processImage_fu_213_grp_fu_312_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_312_p1 = select_ln61_reg_1067;
    end else begin
        grp_fu_312_p1 = 'bx;
    end
end

always @ (*) begin
    if (((grp_processImage_fu_213_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state76))) begin
        result_size = grp_processImage_fu_213_ap_return;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        result_size = 32'd0;
    end else begin
        result_size = 'bx;
    end
end

always @ (*) begin
    if ((((grp_processImage_fu_213_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state76)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        result_size_ap_vld = 1'b1;
    end else begin
        result_size_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((1'd0 == and_ln92_fu_411_p2) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            if (((grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state73))) begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            if (((grp_processImage_fu_213_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state76))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Data_address0 = grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_Data_address0;

assign Data_ce0 = grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_Data_ce0;

assign add_ln317_1_fu_504_p2 = ($signed(zext_ln317_1_fu_501_p1) + $signed(9'd385));

assign add_ln317_fu_429_p2 = ($signed(zext_ln317_fu_425_p1) + $signed(9'd385));

assign add_ln486_fu_698_p2 = ($signed(zext_ln486_fu_694_p1) + $signed(12'd3073));

assign and_ln61_fu_664_p2 = (tmp_2_reg_1057 & or_ln61_fu_660_p2);

assign and_ln92_1_fu_366_p2 = (tmp_6_reg_916 & or_ln92_fu_360_p2);

assign and_ln92_2_fu_406_p2 = (tmp_8_reg_921 & or_ln92_1_fu_400_p2);

assign and_ln92_fu_411_p2 = (and_ln92_2_fu_406_p2 & and_ln92_1_fu_366_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign bitcast_ln61_fu_631_p1 = value_assign_reg_1035;

assign data_2_fu_331_p1 = dc_2_reg_904;

assign data_3_fu_371_p1 = dc_3_reg_910;

assign data_fu_677_p1 = dc_reg_1072;

assign grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_ap_start = grp_face_detect_Pipeline_nearestNeighborL1_nearestNeighborL1_1_fu_202_ap_start_reg;

assign grp_fu_617_p0 = 32'd20971520;

assign grp_fu_622_p0 = 32'd15728640;

assign grp_processImage_fu_213_ap_start = grp_processImage_fu_213_ap_start_reg;

assign icmp_ln61_2_fu_654_p2 = ((trunc_ln61_fu_644_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln61_fu_648_p2 = ((tmp_9_fu_634_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln92_1_fu_354_p2 = ((trunc_ln92_fu_344_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln92_2_fu_388_p2 = ((xs_exp_3_fu_374_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln92_3_fu_394_p2 = ((trunc_ln92_1_fu_384_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln92_fu_348_p2 = ((xs_exp_2_fu_334_p4 != 8'd255) ? 1'b1 : 1'b0);

assign mantissa_2_fu_469_p4 = {{{{1'd1}, {trunc_ln92_reg_926}}}, {1'd0}};

assign mantissa_3_fu_555_p4 = {{{{1'd1}, {trunc_ln92_1_reg_937}}}, {1'd0}};

assign mantissa_fu_738_p4 = {{{{1'd1}, {trunc_ln505_reg_1077}}}, {1'd0}};

assign or_ln61_fu_660_p2 = (icmp_ln61_reg_1047 | icmp_ln61_2_reg_1052);

assign or_ln92_1_fu_400_p2 = (icmp_ln92_3_fu_394_p2 | icmp_ln92_2_fu_388_p2);

assign or_ln92_fu_360_p2 = (icmp_ln92_fu_348_p2 | icmp_ln92_1_fu_354_p2);

assign result_12_fu_788_p2 = (32'd0 - val_2_reg_1011);

assign result_15_fu_800_p2 = (32'd0 - val_3_reg_1028);

assign result_17_fu_870_p3 = ((xs_sign_reg_1092[0:0] == 1'b1) ? result_fu_865_p2 : val_reg_1171);

assign result_18_fu_793_p3 = ((xs_sign_2_reg_945[0:0] == 1'b1) ? result_12_fu_788_p2 : val_2_reg_1011);

assign result_19_fu_805_p3 = ((xs_sign_3_reg_961[0:0] == 1'b1) ? result_15_fu_800_p2 : val_3_reg_1028);

assign result_fu_865_p2 = (32'd0 - val_reg_1171);

assign result_h_address0 = grp_processImage_fu_213_result_h_address0;

assign result_h_ce0 = grp_processImage_fu_213_result_h_ce0;

assign result_h_d0 = grp_processImage_fu_213_result_h_d0;

assign result_h_we0 = grp_processImage_fu_213_result_h_we0;

assign result_w_address0 = grp_processImage_fu_213_result_w_address0;

assign result_w_ce0 = grp_processImage_fu_213_result_w_ce0;

assign result_w_d0 = grp_processImage_fu_213_result_w_d0;

assign result_w_we0 = grp_processImage_fu_213_result_w_we0;

assign result_x_address0 = grp_processImage_fu_213_result_x_address0;

assign result_x_ce0 = grp_processImage_fu_213_result_x_ce0;

assign result_x_d0 = grp_processImage_fu_213_result_x_d0;

assign result_x_we0 = grp_processImage_fu_213_result_x_we0;

assign result_y_address0 = grp_processImage_fu_213_result_y_address0;

assign result_y_ce0 = grp_processImage_fu_213_result_y_ce0;

assign result_y_d0 = grp_processImage_fu_213_result_y_d0;

assign result_y_we0 = grp_processImage_fu_213_result_y_we0;

assign select_ln18_4_fu_453_p3 = ((tmp_11_fu_435_p3[0:0] == 1'b1) ? sext_ln18_5_fu_449_p1 : add_ln317_fu_429_p2);

assign select_ln18_6_fu_527_p3 = ((tmp_14_fu_510_p3[0:0] == 1'b1) ? sext_ln18_7_fu_523_p1 : add_ln317_1_fu_504_p2);

assign select_ln18_fu_722_p3 = ((tmp_fu_704_p3[0:0] == 1'b1) ? sext_ln18_fu_718_p1 : add_ln486_fu_698_p2);

assign select_ln357_fu_812_p3 = ((xs_sign_2_reg_945[0:0] == 1'b1) ? sub_ln357_reg_1124 : trunc_ln357_reg_1119);

assign select_ln358_fu_828_p3 = ((xs_sign_3_reg_961[0:0] == 1'b1) ? sub_ln358_reg_1134 : trunc_ln358_reg_1129);

assign select_ln61_fu_669_p3 = ((and_ln61_fu_664_p2[0:0] == 1'b1) ? 64'd4602678819172646912 : 64'd13826050856027422720);

assign sext_ln18_4_fu_751_p1 = $signed(select_ln18_reg_1087);

assign sext_ln18_5_fu_449_p1 = $signed(sub_ln18_2_fu_443_p2);

assign sext_ln18_6_fu_482_p1 = $signed(select_ln18_4_reg_956);

assign sext_ln18_7_fu_523_p1 = $signed(sub_ln18_3_fu_518_p2);

assign sext_ln18_8_fu_568_p1 = $signed(select_ln18_6_reg_984);

assign sext_ln18_fu_718_p1 = $signed(sub_ln18_fu_712_p2);

assign sext_ln357_fu_817_p1 = $signed(select_ln357_fu_812_p3);

assign sub_ln18_2_fu_443_p2 = (8'd127 - xs_exp_2_fu_334_p4);

assign sub_ln18_3_fu_518_p2 = (8'd127 - xs_exp_3_reg_931);

assign sub_ln18_fu_712_p2 = (11'd1023 - xs_exp_fu_680_p4);

assign sub_ln357_fu_773_p2 = (27'd0 - trunc_ln357_fu_770_p1);

assign sub_ln358_fu_782_p2 = (24'd0 - trunc_ln358_fu_779_p1);

assign tmp_11_fu_435_p3 = add_ln317_fu_429_p2[32'd8];

assign tmp_14_fu_510_p3 = add_ln317_1_fu_504_p2[32'd8];

assign tmp_9_fu_634_p4 = {{bitcast_ln61_fu_631_p1[30:23]}};

assign tmp_fu_704_p3 = add_ln486_fu_698_p2[32'd11];

assign trunc_ln357_fu_770_p1 = sdiv_ln357_reg_1109[26:0];

assign trunc_ln358_fu_779_p1 = sdiv_ln358_reg_1114[23:0];

assign trunc_ln505_fu_690_p1 = data_fu_677_p1[51:0];

assign trunc_ln61_fu_644_p1 = bitcast_ln61_fu_631_p1[22:0];

assign trunc_ln92_1_fu_384_p1 = data_3_fu_371_p1[22:0];

assign trunc_ln92_fu_344_p1 = data_2_fu_331_p1[22:0];

assign val_2_fu_587_p3 = ((tmp_11_reg_951[0:0] == 1'b1) ? tmp_s_reg_989 : tmp_13_reg_994);

assign val_3_fu_612_p3 = ((tmp_14_reg_979[0:0] == 1'b1) ? tmp_15_reg_1018 : tmp_16_reg_1023);

assign val_fu_860_p3 = ((tmp_reg_1082[0:0] == 1'b1) ? tmp_17_reg_1161 : tmp_18_reg_1166);

assign x_ratio_fu_821_p2 = ($signed(sext_ln357_fu_817_p1) + $signed(28'd1));

assign xs_exp_2_fu_334_p4 = {{data_2_fu_331_p1[30:23]}};

assign xs_exp_3_fu_374_p4 = {{data_3_fu_371_p1[30:23]}};

assign xs_exp_fu_680_p4 = {{data_fu_677_p1[62:52]}};

assign y_ratio_fu_833_p2 = (select_ln358_fu_828_p3 + 24'd1);

assign zext_ln15_2_fu_478_p1 = mantissa_2_fu_469_p4;

assign zext_ln15_3_fu_564_p1 = mantissa_3_fu_555_p4;

assign zext_ln15_fu_747_p1 = mantissa_fu_738_p4;

assign zext_ln18_2_fu_485_p1 = $unsigned(sext_ln18_6_fu_482_p1);

assign zext_ln18_3_fu_571_p1 = $unsigned(sext_ln18_8_fu_568_p1);

assign zext_ln18_fu_754_p1 = $unsigned(sext_ln18_4_fu_751_p1);

assign zext_ln317_1_fu_501_p1 = xs_exp_3_reg_931;

assign zext_ln317_fu_425_p1 = xs_exp_2_fu_334_p4;

assign zext_ln486_fu_694_p1 = xs_exp_fu_680_p4;

always @ (posedge ap_clk) begin
    select_ln61_reg_1067[62:0] <= 63'b011111111100000000000000000000000000000000000000000000000000000;
end

endmodule //face_detect
