// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fn1_fn1_Pipeline_VITIS_LOOP_387_7 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v_47_1_reload,
        empty,
        v_37_1_reload,
        conv614,
        v_51,
        add1053,
        v_39_cast,
        sext_ln90,
        v_95_cast19,
        sext_ln28,
        add1081,
        conv13,
        conv12,
        v_37_2_out,
        v_37_2_out_ap_vld,
        grp_fu_5290_p_din0,
        grp_fu_5290_p_din1,
        grp_fu_5290_p_opcode,
        grp_fu_5290_p_dout0,
        grp_fu_5290_p_ce,
        grp_fu_5294_p_din0,
        grp_fu_5294_p_din1,
        grp_fu_5294_p_dout0,
        grp_fu_5294_p_ce,
        grp_fu_611_p_din0,
        grp_fu_611_p_dout0,
        grp_fu_611_p_ce,
        grp_fu_673_p_din0,
        grp_fu_673_p_din1,
        grp_fu_673_p_dout0,
        grp_fu_673_p_ce,
        grp_fu_693_p_din0,
        grp_fu_693_p_din1,
        grp_fu_693_p_dout0,
        grp_fu_693_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 80'd1;
parameter    ap_ST_fsm_pp0_stage1 = 80'd2;
parameter    ap_ST_fsm_pp0_stage2 = 80'd4;
parameter    ap_ST_fsm_pp0_stage3 = 80'd8;
parameter    ap_ST_fsm_pp0_stage4 = 80'd16;
parameter    ap_ST_fsm_pp0_stage5 = 80'd32;
parameter    ap_ST_fsm_pp0_stage6 = 80'd64;
parameter    ap_ST_fsm_pp0_stage7 = 80'd128;
parameter    ap_ST_fsm_pp0_stage8 = 80'd256;
parameter    ap_ST_fsm_pp0_stage9 = 80'd512;
parameter    ap_ST_fsm_pp0_stage10 = 80'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 80'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 80'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 80'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 80'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 80'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 80'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 80'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 80'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 80'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 80'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 80'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 80'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 80'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 80'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 80'd33554432;
parameter    ap_ST_fsm_pp0_stage26 = 80'd67108864;
parameter    ap_ST_fsm_pp0_stage27 = 80'd134217728;
parameter    ap_ST_fsm_pp0_stage28 = 80'd268435456;
parameter    ap_ST_fsm_pp0_stage29 = 80'd536870912;
parameter    ap_ST_fsm_pp0_stage30 = 80'd1073741824;
parameter    ap_ST_fsm_pp0_stage31 = 80'd2147483648;
parameter    ap_ST_fsm_pp0_stage32 = 80'd4294967296;
parameter    ap_ST_fsm_pp0_stage33 = 80'd8589934592;
parameter    ap_ST_fsm_pp0_stage34 = 80'd17179869184;
parameter    ap_ST_fsm_pp0_stage35 = 80'd34359738368;
parameter    ap_ST_fsm_pp0_stage36 = 80'd68719476736;
parameter    ap_ST_fsm_pp0_stage37 = 80'd137438953472;
parameter    ap_ST_fsm_pp0_stage38 = 80'd274877906944;
parameter    ap_ST_fsm_pp0_stage39 = 80'd549755813888;
parameter    ap_ST_fsm_pp0_stage40 = 80'd1099511627776;
parameter    ap_ST_fsm_pp0_stage41 = 80'd2199023255552;
parameter    ap_ST_fsm_pp0_stage42 = 80'd4398046511104;
parameter    ap_ST_fsm_pp0_stage43 = 80'd8796093022208;
parameter    ap_ST_fsm_pp0_stage44 = 80'd17592186044416;
parameter    ap_ST_fsm_pp0_stage45 = 80'd35184372088832;
parameter    ap_ST_fsm_pp0_stage46 = 80'd70368744177664;
parameter    ap_ST_fsm_pp0_stage47 = 80'd140737488355328;
parameter    ap_ST_fsm_pp0_stage48 = 80'd281474976710656;
parameter    ap_ST_fsm_pp0_stage49 = 80'd562949953421312;
parameter    ap_ST_fsm_pp0_stage50 = 80'd1125899906842624;
parameter    ap_ST_fsm_pp0_stage51 = 80'd2251799813685248;
parameter    ap_ST_fsm_pp0_stage52 = 80'd4503599627370496;
parameter    ap_ST_fsm_pp0_stage53 = 80'd9007199254740992;
parameter    ap_ST_fsm_pp0_stage54 = 80'd18014398509481984;
parameter    ap_ST_fsm_pp0_stage55 = 80'd36028797018963968;
parameter    ap_ST_fsm_pp0_stage56 = 80'd72057594037927936;
parameter    ap_ST_fsm_pp0_stage57 = 80'd144115188075855872;
parameter    ap_ST_fsm_pp0_stage58 = 80'd288230376151711744;
parameter    ap_ST_fsm_pp0_stage59 = 80'd576460752303423488;
parameter    ap_ST_fsm_pp0_stage60 = 80'd1152921504606846976;
parameter    ap_ST_fsm_pp0_stage61 = 80'd2305843009213693952;
parameter    ap_ST_fsm_pp0_stage62 = 80'd4611686018427387904;
parameter    ap_ST_fsm_pp0_stage63 = 80'd9223372036854775808;
parameter    ap_ST_fsm_pp0_stage64 = 80'd18446744073709551616;
parameter    ap_ST_fsm_pp0_stage65 = 80'd36893488147419103232;
parameter    ap_ST_fsm_pp0_stage66 = 80'd73786976294838206464;
parameter    ap_ST_fsm_pp0_stage67 = 80'd147573952589676412928;
parameter    ap_ST_fsm_pp0_stage68 = 80'd295147905179352825856;
parameter    ap_ST_fsm_pp0_stage69 = 80'd590295810358705651712;
parameter    ap_ST_fsm_pp0_stage70 = 80'd1180591620717411303424;
parameter    ap_ST_fsm_pp0_stage71 = 80'd2361183241434822606848;
parameter    ap_ST_fsm_pp0_stage72 = 80'd4722366482869645213696;
parameter    ap_ST_fsm_pp0_stage73 = 80'd9444732965739290427392;
parameter    ap_ST_fsm_pp0_stage74 = 80'd18889465931478580854784;
parameter    ap_ST_fsm_pp0_stage75 = 80'd37778931862957161709568;
parameter    ap_ST_fsm_pp0_stage76 = 80'd75557863725914323419136;
parameter    ap_ST_fsm_pp0_stage77 = 80'd151115727451828646838272;
parameter    ap_ST_fsm_pp0_stage78 = 80'd302231454903657293676544;
parameter    ap_ST_fsm_pp0_stage79 = 80'd604462909807314587353088;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] v_47_1_reload;
input  [31:0] empty;
input  [63:0] v_37_1_reload;
input  [15:0] conv614;
input  [63:0] v_51;
input  [63:0] add1053;
input  [7:0] v_39_cast;
input  [15:0] sext_ln90;
input  [15:0] v_95_cast19;
input  [15:0] sext_ln28;
input  [63:0] add1081;
input  [31:0] conv13;
input  [31:0] conv12;
output  [63:0] v_37_2_out;
output   v_37_2_out_ap_vld;
output  [31:0] grp_fu_5290_p_din0;
output  [31:0] grp_fu_5290_p_din1;
output  [0:0] grp_fu_5290_p_opcode;
input  [31:0] grp_fu_5290_p_dout0;
output   grp_fu_5290_p_ce;
output  [31:0] grp_fu_5294_p_din0;
output  [31:0] grp_fu_5294_p_din1;
input  [31:0] grp_fu_5294_p_dout0;
output   grp_fu_5294_p_ce;
output  [63:0] grp_fu_611_p_din0;
input  [31:0] grp_fu_611_p_dout0;
output   grp_fu_611_p_ce;
output  [31:0] grp_fu_673_p_din0;
output  [16:0] grp_fu_673_p_din1;
input  [31:0] grp_fu_673_p_dout0;
output   grp_fu_673_p_ce;
output  [63:0] grp_fu_693_p_din0;
output  [16:0] grp_fu_693_p_din1;
input  [63:0] grp_fu_693_p_dout0;
output   grp_fu_693_p_ce;

reg ap_idle;
reg v_37_2_out_ap_vld;

(* fsm_encoding = "none" *) reg   [79:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage79;
wire    ap_block_pp0_stage79_subdone;
wire   [0:0] icmp_ln388_fu_308_p2;
reg    ap_condition_exit_pp0_iter0_stage79;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_237;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16_11001;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_pp0_stage24_11001;
wire    ap_block_pp0_stage0_11001;
wire  signed [16:0] sext_ln28_cast_fu_242_p1;
reg  signed [16:0] sext_ln28_cast_reg_573;
wire   [16:0] v_95_cast19_cast_fu_246_p1;
reg   [16:0] v_95_cast19_cast_reg_578;
wire  signed [63:0] sext_ln90_cast_fu_250_p1;
reg  signed [63:0] sext_ln90_cast_reg_583;
wire  signed [16:0] v_39_cast_cast_fu_254_p1;
reg  signed [16:0] v_39_cast_cast_reg_588;
wire   [31:0] conv614_cast_fu_258_p1;
reg   [31:0] mul_ln387_reg_603;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_11001;
wire   [63:0] grp_fu_228_p2;
reg   [63:0] mul_ln387_1_reg_613;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9_11001;
wire   [63:0] grp_fu_291_p2;
reg   [63:0] sdiv_ln387_reg_618;
wire    ap_CS_fsm_pp0_stage77;
wire    ap_block_pp0_stage77_11001;
wire   [16:0] sub_ln387_fu_295_p2;
reg   [16:0] sub_ln387_reg_623;
wire   [63:0] sub_ln388_fu_303_p2;
reg   [63:0] sub_ln388_reg_628;
wire    ap_CS_fsm_pp0_stage78;
wire    ap_block_pp0_stage78_11001;
reg   [0:0] icmp_ln388_reg_633;
wire    ap_block_pp0_stage79_11001;
wire   [16:0] add_ln390_fu_312_p2;
reg   [16:0] add_ln390_reg_637;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
wire   [16:0] grp_fu_322_p2;
reg   [16:0] sdiv_ln390_reg_647;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20_11001;
wire   [1:0] xor_ln390_fu_353_p2;
reg   [1:0] xor_ln390_reg_652;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21_11001;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22_11001;
wire   [31:0] grp_fu_218_p1;
reg   [31:0] v_53_reg_662;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_pp0_stage28_11001;
wire   [31:0] grp_fu_334_p2;
reg   [31:0] urem_ln389_reg_667;
wire    ap_CS_fsm_pp0_stage36;
wire    ap_block_pp0_stage36_11001;
wire   [63:0] sub_ln389_fu_369_p2;
reg   [63:0] sub_ln389_reg_672;
wire    ap_CS_fsm_pp0_stage37;
wire    ap_block_pp0_stage37_11001;
wire   [63:0] grp_fu_221_p1;
reg   [63:0] v_37_1_reg_677;
wire    ap_CS_fsm_pp0_stage44;
wire    ap_block_pp0_stage44_11001;
wire  signed [63:0] grp_fu_317_p2;
reg  signed [63:0] urem_ln392_reg_682;
wire    ap_CS_fsm_pp0_stage66;
wire    ap_block_pp0_stage66_11001;
reg   [63:0] mul_ln393_reg_687;
wire    ap_CS_fsm_pp0_stage71;
wire    ap_block_pp0_stage71_11001;
reg   [31:0] conv_reg_692;
reg   [31:0] add5_reg_697;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8_11001;
reg   [0:0] xs_sign_reg_702;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_pp0_stage25_11001;
wire   [22:0] trunc_ln342_fu_401_p1;
reg   [22:0] trunc_ln342_reg_707;
wire   [0:0] tmp_4_fu_415_p3;
reg   [0:0] tmp_4_reg_712;
wire   [8:0] select_ln18_fu_433_p3;
reg   [8:0] select_ln18_reg_717;
wire   [110:0] zext_ln15_fu_450_p1;
reg   [110:0] zext_ln15_reg_722;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_pp0_stage26_11001;
wire   [110:0] zext_ln18_fu_457_p1;
reg   [110:0] zext_ln18_reg_728;
reg   [63:0] tmp_s_reg_734;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_pp0_stage27_11001;
reg   [63:0] tmp_5_reg_739;
wire   [63:0] val_fu_491_p3;
reg   [63:0] val_reg_744;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_pp0_stage29_11001;
wire   [63:0] result_1_fu_496_p2;
reg   [63:0] result_1_reg_750;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_pp0_stage30_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_CS_fsm_pp0_stage31;
wire    ap_block_pp0_stage31_subdone;
reg   [63:0] v_37_fu_106;
wire    ap_CS_fsm_pp0_stage45;
wire    ap_block_pp0_stage45_11001;
wire    ap_loop_init;
wire    ap_block_pp0_stage31;
reg   [31:0] v_41_fu_110;
reg   [31:0] ap_sig_allocacmp_v_41_1;
wire    ap_block_pp0_stage0;
reg   [31:0] v_47_fu_114;
wire    ap_block_pp0_stage1;
reg   [63:0] v_49_fu_118;
wire   [63:0] result_fu_501_p3;
wire    ap_block_pp0_stage31_11001;
wire    ap_block_pp0_stage37;
wire    ap_block_pp0_stage31_01001;
wire    ap_block_pp0_stage79;
reg   [31:0] grp_fu_211_p0;
reg   [31:0] grp_fu_211_p1;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
wire    ap_block_pp0_stage72;
wire  signed [31:0] grp_fu_218_p0;
wire    ap_block_pp0_stage22;
wire    ap_CS_fsm_pp0_stage38;
wire    ap_block_pp0_stage38;
wire   [31:0] grp_fu_228_p1;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage67;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage77;
wire    ap_block_pp0_stage78;
wire   [63:0] zext_ln387_1_fu_300_p1;
wire   [16:0] grp_fu_334_p1;
wire    ap_block_pp0_stage21;
wire   [0:0] icmp_ln390_fu_344_p2;
wire   [1:0] zext_ln390_fu_349_p1;
wire   [63:0] zext_ln389_fu_366_p1;
wire    ap_block_pp0_stage25;
wire   [31:0] data_fu_379_p1;
wire   [7:0] xs_exp_fu_391_p4;
wire   [8:0] zext_ln317_fu_405_p1;
wire   [8:0] add_ln317_fu_409_p2;
wire   [7:0] sub_ln18_fu_423_p2;
wire  signed [8:0] sext_ln18_fu_429_p1;
wire    ap_block_pp0_stage26;
wire   [24:0] mantissa_fu_441_p4;
wire  signed [31:0] sext_ln18_1_fu_454_p1;
wire   [110:0] grp_fu_461_p0;
wire   [110:0] grp_fu_461_p1;
wire    ap_block_pp0_stage27;
wire   [110:0] grp_fu_461_p2;
wire   [110:0] grp_fu_467_p2;
wire    ap_block_pp0_stage28;
wire    ap_block_pp0_stage29;
wire    ap_block_pp0_stage30;
wire    ap_block_pp0_stage79_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter1_stage31;
reg    ap_idle_pp0_0to0;
reg   [79:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to2;
reg    ap_done_pending_pp0;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_pp0_stage23_subdone;
wire    ap_block_pp0_stage24_subdone;
wire    ap_block_pp0_stage25_subdone;
wire    ap_block_pp0_stage26_subdone;
wire    ap_block_pp0_stage27_subdone;
wire    ap_block_pp0_stage28_subdone;
wire    ap_block_pp0_stage29_subdone;
wire    ap_block_pp0_stage30_subdone;
wire    ap_block_pp0_stage32_subdone;
wire    ap_block_pp0_stage33_subdone;
wire    ap_block_pp0_stage34_subdone;
wire    ap_block_pp0_stage35_subdone;
wire    ap_block_pp0_stage36_subdone;
wire    ap_block_pp0_stage37_subdone;
wire    ap_block_pp0_stage38_subdone;
wire    ap_block_pp0_stage39_subdone;
wire    ap_block_pp0_stage40_subdone;
wire    ap_block_pp0_stage41_subdone;
wire    ap_block_pp0_stage42_subdone;
wire    ap_block_pp0_stage43_subdone;
wire    ap_block_pp0_stage44_subdone;
wire    ap_block_pp0_stage45_subdone;
wire    ap_block_pp0_stage46_subdone;
wire    ap_block_pp0_stage47_subdone;
wire    ap_block_pp0_stage48_subdone;
wire    ap_block_pp0_stage49_subdone;
wire    ap_block_pp0_stage50_subdone;
wire    ap_block_pp0_stage51_subdone;
wire    ap_block_pp0_stage52_subdone;
wire    ap_block_pp0_stage53_subdone;
wire    ap_block_pp0_stage54_subdone;
wire    ap_block_pp0_stage55_subdone;
wire    ap_block_pp0_stage56_subdone;
wire    ap_block_pp0_stage57_subdone;
wire    ap_block_pp0_stage58_subdone;
wire    ap_block_pp0_stage59_subdone;
wire    ap_block_pp0_stage60_subdone;
wire    ap_block_pp0_stage61_subdone;
wire    ap_block_pp0_stage62_subdone;
wire    ap_block_pp0_stage63_subdone;
wire    ap_block_pp0_stage64_subdone;
wire    ap_block_pp0_stage65_subdone;
wire    ap_block_pp0_stage66_subdone;
wire    ap_block_pp0_stage67_subdone;
wire    ap_block_pp0_stage68_subdone;
wire    ap_block_pp0_stage69_subdone;
wire    ap_block_pp0_stage70_subdone;
wire    ap_block_pp0_stage71_subdone;
wire    ap_block_pp0_stage72_subdone;
wire    ap_block_pp0_stage73_subdone;
wire    ap_block_pp0_stage74_subdone;
wire    ap_block_pp0_stage75_subdone;
wire    ap_block_pp0_stage76_subdone;
wire    ap_block_pp0_stage77_subdone;
wire    ap_block_pp0_stage78_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [63:0] grp_fu_228_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 80'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 v_37_fu_106 = 64'd0;
#0 v_41_fu_110 = 32'd0;
#0 v_47_fu_114 = 32'd0;
#0 v_49_fu_118 = 64'd0;
#0 ap_done_reg = 1'b0;
end

fn1_sitofp_32s_32_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32s_32_7_no_dsp_1_U115(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_218_p0),
    .ce(1'b1),
    .dout(grp_fu_218_p1)
);

fn1_sitodp_64ns_64_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sitodp_64ns_64_7_no_dsp_1_U116(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln389_reg_672),
    .ce(1'b1),
    .dout(grp_fu_221_p1)
);

fn1_mul_64s_32ns_64_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32ns_64_5_1_U118(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v_51),
    .din1(grp_fu_228_p1),
    .ce(1'b1),
    .dout(grp_fu_228_p2)
);

fn1_sdiv_64ns_64ns_64_68_1 #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sdiv_64ns_64ns_64_68_1_U120(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln387_1_reg_613),
    .din1(add1053),
    .ce(1'b1),
    .dout(grp_fu_291_p2)
);

fn1_urem_64s_64ns_64_68_1 #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
urem_64s_64ns_64_68_1_U121(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd18446744073709497956),
    .din1(add1081),
    .ce(1'b1),
    .dout(grp_fu_317_p2)
);

fn1_sdiv_17s_17ns_17_21_1 #(
    .ID( 1 ),
    .NUM_STAGE( 21 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 17 ))
sdiv_17s_17ns_17_21_1_U122(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sext_ln28_cast_reg_573),
    .din1(add_ln390_reg_637),
    .ce(1'b1),
    .dout(grp_fu_322_p2)
);

fn1_urem_32ns_17ns_32_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 32 ))
urem_32ns_17ns_32_36_1_U123(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v_47_fu_114),
    .din1(grp_fu_334_p1),
    .ce(1'b1),
    .dout(grp_fu_334_p2)
);

fn1_lshr_111ns_32ns_111_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 1 ),
    .din0_WIDTH( 111 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 111 ))
lshr_111ns_32ns_111_2_1_U124(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_461_p0),
    .din1(grp_fu_461_p1),
    .ce(1'b1),
    .dout(grp_fu_461_p2)
);

fn1_shl_111ns_32ns_111_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 0 ),
    .din0_WIDTH( 111 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 111 ))
shl_111ns_32ns_111_2_1_U125(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(zext_ln15_reg_722),
    .din1(zext_ln18_reg_728),
    .ce(1'b1),
    .dout(grp_fu_467_p2)
);

fn1_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage79),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage79)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage79) & (1'b0 == ap_block_pp0_stage79_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage79) & (1'b0 == ap_block_pp0_stage79_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage31))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage79) & (1'b0 == ap_block_pp0_stage79_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v_37_fu_106 <= v_37_1_reload;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage45) & (1'b0 == ap_block_pp0_stage45_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        v_37_fu_106 <= v_37_1_reg_677;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            v_41_fu_110 <= empty;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            v_41_fu_110 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v_47_fu_114 <= 32'd97225687;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        v_47_fu_114 <= v_47_1_reload;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v_49_fu_118 <= 64'd18446744073709497335;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        v_49_fu_118 <= result_fu_501_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        add5_reg_697 <= grp_fu_5290_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage79) & (1'b0 == ap_block_pp0_stage79_11001))) begin
        add_ln390_reg_637 <= add_ln390_fu_312_p2;
        icmp_ln388_reg_633 <= icmp_ln388_fu_308_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage78) & (1'b0 == ap_block_pp0_stage78_11001))) begin
        conv_reg_692 <= grp_fu_611_p_dout0;
        sub_ln388_reg_628 <= sub_ln388_fu_303_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        mul_ln387_1_reg_613 <= grp_fu_228_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        mul_ln387_reg_603 <= grp_fu_673_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage71) & (1'b0 == ap_block_pp0_stage71_11001))) begin
        mul_ln393_reg_687 <= grp_fu_693_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        reg_237 <= grp_fu_5294_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001))) begin
        result_1_reg_750 <= result_1_fu_496_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage77) & (1'b0 == ap_block_pp0_stage77_11001))) begin
        sdiv_ln387_reg_618 <= grp_fu_291_p2;
        sub_ln387_reg_623 <= sub_ln387_fu_295_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001))) begin
        sdiv_ln390_reg_647 <= grp_fu_322_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001))) begin
        select_ln18_reg_717 <= select_ln18_fu_433_p3;
        tmp_4_reg_712 <= add_ln317_fu_409_p2[32'd8];
        trunc_ln342_reg_707 <= trunc_ln342_fu_401_p1;
        xs_sign_reg_702 <= data_fu_379_p1[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sext_ln28_cast_reg_573 <= sext_ln28_cast_fu_242_p1;
        sext_ln90_cast_reg_583 <= sext_ln90_cast_fu_250_p1;
        v_39_cast_cast_reg_588 <= v_39_cast_cast_fu_254_p1;
        v_95_cast19_cast_reg_578[15 : 0] <= v_95_cast19_cast_fu_246_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage37) & (1'b0 == ap_block_pp0_stage37_11001))) begin
        sub_ln389_reg_672 <= sub_ln389_fu_369_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001))) begin
        tmp_5_reg_739 <= {{grp_fu_467_p2[87:24]}};
        v_53_reg_662 <= grp_fu_218_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001))) begin
        tmp_s_reg_734 <= {{grp_fu_461_p2[87:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage36) & (1'b0 == ap_block_pp0_stage36_11001))) begin
        urem_ln389_reg_667 <= grp_fu_334_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage66) & (1'b0 == ap_block_pp0_stage66_11001))) begin
        urem_ln392_reg_682 <= grp_fu_317_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage44) & (1'b0 == ap_block_pp0_stage44_11001))) begin
        v_37_1_reg_677 <= grp_fu_221_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001))) begin
        val_reg_744 <= val_fu_491_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001))) begin
        xor_ln390_reg_652 <= xor_ln390_fu_353_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001))) begin
        zext_ln15_reg_722[23 : 1] <= zext_ln15_fu_450_p1[23 : 1];
        zext_ln18_reg_728[31 : 0] <= zext_ln18_fu_457_p1[31 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage79) & (icmp_ln388_fu_308_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage79_subdone))) begin
        ap_condition_exit_pp0_iter0_stage79 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage79 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln388_reg_633 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_condition_exit_pp0_iter1_stage31 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage31 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready_pp0_iter1_reg == 1'b0) & (ap_loop_exit_ready == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage79) & (1'b0 == ap_block_pp0_stage79_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            ap_sig_allocacmp_v_41_1 = empty;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            ap_sig_allocacmp_v_41_1 = 32'd0;
        end else begin
            ap_sig_allocacmp_v_41_1 = v_41_fu_110;
        end
    end else begin
        ap_sig_allocacmp_v_41_1 = v_41_fu_110;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17))) begin
            grp_fu_211_p0 = conv12;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
            grp_fu_211_p0 = add5_reg_697;
        end else begin
            grp_fu_211_p0 = 'bx;
        end
    end else begin
        grp_fu_211_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17))) begin
            grp_fu_211_p1 = reg_237;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
            grp_fu_211_p1 = conv13;
        end else begin
            grp_fu_211_p1 = 'bx;
        end
    end else begin
        grp_fu_211_p1 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln388_reg_633 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_11001))) begin
        v_37_2_out_ap_vld = 1'b1;
    end else begin
        v_37_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to2 == 1'b1) & (ap_start_int == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage31))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_pp0_stage32 : begin
            if ((1'b0 == ap_block_pp0_stage32_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end
        end
        ap_ST_fsm_pp0_stage33 : begin
            if ((1'b0 == ap_block_pp0_stage33_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end
        end
        ap_ST_fsm_pp0_stage34 : begin
            if ((1'b0 == ap_block_pp0_stage34_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end
        end
        ap_ST_fsm_pp0_stage35 : begin
            if ((1'b0 == ap_block_pp0_stage35_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end
        end
        ap_ST_fsm_pp0_stage36 : begin
            if ((1'b0 == ap_block_pp0_stage36_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end
        end
        ap_ST_fsm_pp0_stage37 : begin
            if ((1'b0 == ap_block_pp0_stage37_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end
        end
        ap_ST_fsm_pp0_stage38 : begin
            if ((1'b0 == ap_block_pp0_stage38_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end
        end
        ap_ST_fsm_pp0_stage39 : begin
            if ((1'b0 == ap_block_pp0_stage39_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end
        end
        ap_ST_fsm_pp0_stage40 : begin
            if ((1'b0 == ap_block_pp0_stage40_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end
        end
        ap_ST_fsm_pp0_stage41 : begin
            if ((1'b0 == ap_block_pp0_stage41_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end
        end
        ap_ST_fsm_pp0_stage42 : begin
            if ((1'b0 == ap_block_pp0_stage42_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end
        end
        ap_ST_fsm_pp0_stage43 : begin
            if ((1'b0 == ap_block_pp0_stage43_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end
        end
        ap_ST_fsm_pp0_stage44 : begin
            if ((1'b0 == ap_block_pp0_stage44_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end
        end
        ap_ST_fsm_pp0_stage45 : begin
            if ((1'b0 == ap_block_pp0_stage45_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end
        end
        ap_ST_fsm_pp0_stage46 : begin
            if ((1'b0 == ap_block_pp0_stage46_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end
        end
        ap_ST_fsm_pp0_stage47 : begin
            if ((1'b0 == ap_block_pp0_stage47_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end
        end
        ap_ST_fsm_pp0_stage48 : begin
            if ((1'b0 == ap_block_pp0_stage48_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end
        end
        ap_ST_fsm_pp0_stage49 : begin
            if ((1'b0 == ap_block_pp0_stage49_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage49;
            end
        end
        ap_ST_fsm_pp0_stage50 : begin
            if ((1'b0 == ap_block_pp0_stage50_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage50;
            end
        end
        ap_ST_fsm_pp0_stage51 : begin
            if ((1'b0 == ap_block_pp0_stage51_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage51;
            end
        end
        ap_ST_fsm_pp0_stage52 : begin
            if ((1'b0 == ap_block_pp0_stage52_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage52;
            end
        end
        ap_ST_fsm_pp0_stage53 : begin
            if ((1'b0 == ap_block_pp0_stage53_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage53;
            end
        end
        ap_ST_fsm_pp0_stage54 : begin
            if ((1'b0 == ap_block_pp0_stage54_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage54;
            end
        end
        ap_ST_fsm_pp0_stage55 : begin
            if ((1'b0 == ap_block_pp0_stage55_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage55;
            end
        end
        ap_ST_fsm_pp0_stage56 : begin
            if ((1'b0 == ap_block_pp0_stage56_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage56;
            end
        end
        ap_ST_fsm_pp0_stage57 : begin
            if ((1'b0 == ap_block_pp0_stage57_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage57;
            end
        end
        ap_ST_fsm_pp0_stage58 : begin
            if ((1'b0 == ap_block_pp0_stage58_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage58;
            end
        end
        ap_ST_fsm_pp0_stage59 : begin
            if ((1'b0 == ap_block_pp0_stage59_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage59;
            end
        end
        ap_ST_fsm_pp0_stage60 : begin
            if ((1'b0 == ap_block_pp0_stage60_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage60;
            end
        end
        ap_ST_fsm_pp0_stage61 : begin
            if ((1'b0 == ap_block_pp0_stage61_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage61;
            end
        end
        ap_ST_fsm_pp0_stage62 : begin
            if ((1'b0 == ap_block_pp0_stage62_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage62;
            end
        end
        ap_ST_fsm_pp0_stage63 : begin
            if ((1'b0 == ap_block_pp0_stage63_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage63;
            end
        end
        ap_ST_fsm_pp0_stage64 : begin
            if ((1'b0 == ap_block_pp0_stage64_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage64;
            end
        end
        ap_ST_fsm_pp0_stage65 : begin
            if ((1'b0 == ap_block_pp0_stage65_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage65;
            end
        end
        ap_ST_fsm_pp0_stage66 : begin
            if ((1'b0 == ap_block_pp0_stage66_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage66;
            end
        end
        ap_ST_fsm_pp0_stage67 : begin
            if ((1'b0 == ap_block_pp0_stage67_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage67;
            end
        end
        ap_ST_fsm_pp0_stage68 : begin
            if ((1'b0 == ap_block_pp0_stage68_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage68;
            end
        end
        ap_ST_fsm_pp0_stage69 : begin
            if ((1'b0 == ap_block_pp0_stage69_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage69;
            end
        end
        ap_ST_fsm_pp0_stage70 : begin
            if ((1'b0 == ap_block_pp0_stage70_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage70;
            end
        end
        ap_ST_fsm_pp0_stage71 : begin
            if ((1'b0 == ap_block_pp0_stage71_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage71;
            end
        end
        ap_ST_fsm_pp0_stage72 : begin
            if ((1'b0 == ap_block_pp0_stage72_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage72;
            end
        end
        ap_ST_fsm_pp0_stage73 : begin
            if ((1'b0 == ap_block_pp0_stage73_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage73;
            end
        end
        ap_ST_fsm_pp0_stage74 : begin
            if ((1'b0 == ap_block_pp0_stage74_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage74;
            end
        end
        ap_ST_fsm_pp0_stage75 : begin
            if ((1'b0 == ap_block_pp0_stage75_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage75;
            end
        end
        ap_ST_fsm_pp0_stage76 : begin
            if ((1'b0 == ap_block_pp0_stage76_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage76;
            end
        end
        ap_ST_fsm_pp0_stage77 : begin
            if ((1'b0 == ap_block_pp0_stage77_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage77;
            end
        end
        ap_ST_fsm_pp0_stage78 : begin
            if ((1'b0 == ap_block_pp0_stage78_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage78;
            end
        end
        ap_ST_fsm_pp0_stage79 : begin
            if ((1'b0 == ap_block_pp0_stage79_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage79;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln317_fu_409_p2 = ($signed(zext_ln317_fu_405_p1) + $signed(9'd385));

assign add_ln390_fu_312_p2 = (v_95_cast19_cast_reg_578 + 17'd177);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp0_stage36 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_pp0_stage37 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_pp0_stage38 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage44 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_pp0_stage45 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage66 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_pp0_stage71 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_pp0_stage77 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_pp0_stage78 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_pp0_stage79 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage40_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage41_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage43_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage44_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage44_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage45_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage45_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage46_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage47_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage48_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage49_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage50_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage51_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage52_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage53_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage54_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage55_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage56_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage57_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage58_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage59_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage60_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage61_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage62_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage63_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage64_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage65_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage66_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage66_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage67 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage67_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage68_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage69_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage70_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage71_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage71_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage72 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage72_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage73_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage74_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage75_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage76_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage77 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage77_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage77_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage78 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage78_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage78_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage79 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage79_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage79_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage79_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage79;

assign conv614_cast_fu_258_p1 = conv614;

assign data_fu_379_p1 = reg_237;

assign grp_fu_218_p0 = $signed(xor_ln390_reg_652);

assign grp_fu_228_p1 = grp_fu_228_p10;

assign grp_fu_228_p10 = mul_ln387_reg_603;

assign grp_fu_334_p1 = 32'd52540;

assign grp_fu_461_p0 = mantissa_fu_441_p4;

assign grp_fu_461_p1 = $unsigned(sext_ln18_1_fu_454_p1);

assign grp_fu_5290_p_ce = 1'b1;

assign grp_fu_5290_p_din0 = v_53_reg_662;

assign grp_fu_5290_p_din1 = conv_reg_692;

assign grp_fu_5290_p_opcode = 2'd0;

assign grp_fu_5294_p_ce = 1'b1;

assign grp_fu_5294_p_din0 = grp_fu_211_p0;

assign grp_fu_5294_p_din1 = grp_fu_211_p1;

assign grp_fu_611_p_ce = 1'b1;

assign grp_fu_611_p_din0 = mul_ln393_reg_687;

assign grp_fu_673_p_ce = 1'b1;

assign grp_fu_673_p_din0 = ap_sig_allocacmp_v_41_1;

assign grp_fu_673_p_din1 = conv614_cast_fu_258_p1;

assign grp_fu_693_p_ce = 1'b1;

assign grp_fu_693_p_din0 = urem_ln392_reg_682;

assign grp_fu_693_p_din1 = 64'd18956;

assign icmp_ln388_fu_308_p2 = ((sub_ln388_reg_628 == sext_ln90_cast_reg_583) ? 1'b1 : 1'b0);

assign icmp_ln390_fu_344_p2 = ((sdiv_ln390_reg_647 != 17'd0) ? 1'b1 : 1'b0);

assign mantissa_fu_441_p4 = {{{{1'd1}, {trunc_ln342_reg_707}}}, {1'd0}};

assign result_1_fu_496_p2 = (64'd0 - val_reg_744);

assign result_fu_501_p3 = ((xs_sign_reg_702[0:0] == 1'b1) ? result_1_reg_750 : val_reg_744);

assign select_ln18_fu_433_p3 = ((tmp_4_fu_415_p3[0:0] == 1'b1) ? sext_ln18_fu_429_p1 : add_ln317_fu_409_p2);

assign sext_ln18_1_fu_454_p1 = $signed(select_ln18_reg_717);

assign sext_ln18_fu_429_p1 = $signed(sub_ln18_fu_423_p2);

assign sext_ln28_cast_fu_242_p1 = $signed(sext_ln28);

assign sext_ln90_cast_fu_250_p1 = $signed(sext_ln90);

assign sub_ln18_fu_423_p2 = (8'd127 - xs_exp_fu_391_p4);

assign sub_ln387_fu_295_p2 = ($signed(17'd98089) - $signed(v_39_cast_cast_reg_588));

assign sub_ln388_fu_303_p2 = (zext_ln387_1_fu_300_p1 - sdiv_ln387_reg_618);

assign sub_ln389_fu_369_p2 = (v_49_fu_118 - zext_ln389_fu_366_p1);

assign tmp_4_fu_415_p3 = add_ln317_fu_409_p2[32'd8];

assign trunc_ln342_fu_401_p1 = data_fu_379_p1[22:0];

assign v_37_2_out = v_37_fu_106;

assign v_39_cast_cast_fu_254_p1 = $signed(v_39_cast);

assign v_95_cast19_cast_fu_246_p1 = v_95_cast19;

assign val_fu_491_p3 = ((tmp_4_reg_712[0:0] == 1'b1) ? tmp_s_reg_734 : tmp_5_reg_739);

assign xor_ln390_fu_353_p2 = (zext_ln390_fu_349_p1 ^ 2'd3);

assign xs_exp_fu_391_p4 = {{data_fu_379_p1[30:23]}};

assign zext_ln15_fu_450_p1 = mantissa_fu_441_p4;

assign zext_ln18_fu_457_p1 = $unsigned(sext_ln18_1_fu_454_p1);

assign zext_ln317_fu_405_p1 = xs_exp_fu_391_p4;

assign zext_ln387_1_fu_300_p1 = sub_ln387_reg_623;

assign zext_ln389_fu_366_p1 = urem_ln389_reg_667;

assign zext_ln390_fu_349_p1 = icmp_ln390_fu_344_p2;

always @ (posedge ap_clk) begin
    v_95_cast19_cast_reg_578[16] <= 1'b0;
    zext_ln15_reg_722[0] <= 1'b0;
    zext_ln15_reg_722[110:24] <= 87'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000001;
    zext_ln18_reg_728[110:32] <= 79'b0000000000000000000000000000000000000000000000000000000000000000000000000000000;
end

endmodule //fn1_fn1_Pipeline_VITIS_LOOP_387_7
