// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fn1_fn1_Pipeline_VITIS_LOOP_302_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        empty_39,
        v_61_2,
        empty_40,
        v_37,
        sext_ln48,
        result_48,
        add743,
        rem737_cast,
        conv727,
        div768,
        empty,
        add798,
        add800,
        p_15,
        v_29,
        conv614,
        v_61_1_out,
        v_61_1_out_ap_vld,
        v_91_1_out,
        v_91_1_out_ap_vld,
        v_37_1_out,
        v_37_1_out_ap_vld,
        v_35_1_out,
        v_35_1_out_ap_vld,
        grp_fu_621_p_din0,
        grp_fu_621_p_din1,
        grp_fu_621_p_opcode,
        grp_fu_621_p_dout0,
        grp_fu_621_p_ce,
        grp_fu_638_p_din0,
        grp_fu_638_p_dout0,
        grp_fu_638_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 75'd1;
parameter    ap_ST_fsm_pp0_stage1 = 75'd2;
parameter    ap_ST_fsm_pp0_stage2 = 75'd4;
parameter    ap_ST_fsm_pp0_stage3 = 75'd8;
parameter    ap_ST_fsm_pp0_stage4 = 75'd16;
parameter    ap_ST_fsm_pp0_stage5 = 75'd32;
parameter    ap_ST_fsm_pp0_stage6 = 75'd64;
parameter    ap_ST_fsm_pp0_stage7 = 75'd128;
parameter    ap_ST_fsm_pp0_stage8 = 75'd256;
parameter    ap_ST_fsm_pp0_stage9 = 75'd512;
parameter    ap_ST_fsm_pp0_stage10 = 75'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 75'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 75'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 75'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 75'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 75'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 75'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 75'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 75'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 75'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 75'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 75'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 75'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 75'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 75'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 75'd33554432;
parameter    ap_ST_fsm_pp0_stage26 = 75'd67108864;
parameter    ap_ST_fsm_pp0_stage27 = 75'd134217728;
parameter    ap_ST_fsm_pp0_stage28 = 75'd268435456;
parameter    ap_ST_fsm_pp0_stage29 = 75'd536870912;
parameter    ap_ST_fsm_pp0_stage30 = 75'd1073741824;
parameter    ap_ST_fsm_pp0_stage31 = 75'd2147483648;
parameter    ap_ST_fsm_pp0_stage32 = 75'd4294967296;
parameter    ap_ST_fsm_pp0_stage33 = 75'd8589934592;
parameter    ap_ST_fsm_pp0_stage34 = 75'd17179869184;
parameter    ap_ST_fsm_pp0_stage35 = 75'd34359738368;
parameter    ap_ST_fsm_pp0_stage36 = 75'd68719476736;
parameter    ap_ST_fsm_pp0_stage37 = 75'd137438953472;
parameter    ap_ST_fsm_pp0_stage38 = 75'd274877906944;
parameter    ap_ST_fsm_pp0_stage39 = 75'd549755813888;
parameter    ap_ST_fsm_pp0_stage40 = 75'd1099511627776;
parameter    ap_ST_fsm_pp0_stage41 = 75'd2199023255552;
parameter    ap_ST_fsm_pp0_stage42 = 75'd4398046511104;
parameter    ap_ST_fsm_pp0_stage43 = 75'd8796093022208;
parameter    ap_ST_fsm_pp0_stage44 = 75'd17592186044416;
parameter    ap_ST_fsm_pp0_stage45 = 75'd35184372088832;
parameter    ap_ST_fsm_pp0_stage46 = 75'd70368744177664;
parameter    ap_ST_fsm_pp0_stage47 = 75'd140737488355328;
parameter    ap_ST_fsm_pp0_stage48 = 75'd281474976710656;
parameter    ap_ST_fsm_pp0_stage49 = 75'd562949953421312;
parameter    ap_ST_fsm_pp0_stage50 = 75'd1125899906842624;
parameter    ap_ST_fsm_pp0_stage51 = 75'd2251799813685248;
parameter    ap_ST_fsm_pp0_stage52 = 75'd4503599627370496;
parameter    ap_ST_fsm_pp0_stage53 = 75'd9007199254740992;
parameter    ap_ST_fsm_pp0_stage54 = 75'd18014398509481984;
parameter    ap_ST_fsm_pp0_stage55 = 75'd36028797018963968;
parameter    ap_ST_fsm_pp0_stage56 = 75'd72057594037927936;
parameter    ap_ST_fsm_pp0_stage57 = 75'd144115188075855872;
parameter    ap_ST_fsm_pp0_stage58 = 75'd288230376151711744;
parameter    ap_ST_fsm_pp0_stage59 = 75'd576460752303423488;
parameter    ap_ST_fsm_pp0_stage60 = 75'd1152921504606846976;
parameter    ap_ST_fsm_pp0_stage61 = 75'd2305843009213693952;
parameter    ap_ST_fsm_pp0_stage62 = 75'd4611686018427387904;
parameter    ap_ST_fsm_pp0_stage63 = 75'd9223372036854775808;
parameter    ap_ST_fsm_pp0_stage64 = 75'd18446744073709551616;
parameter    ap_ST_fsm_pp0_stage65 = 75'd36893488147419103232;
parameter    ap_ST_fsm_pp0_stage66 = 75'd73786976294838206464;
parameter    ap_ST_fsm_pp0_stage67 = 75'd147573952589676412928;
parameter    ap_ST_fsm_pp0_stage68 = 75'd295147905179352825856;
parameter    ap_ST_fsm_pp0_stage69 = 75'd590295810358705651712;
parameter    ap_ST_fsm_pp0_stage70 = 75'd1180591620717411303424;
parameter    ap_ST_fsm_pp0_stage71 = 75'd2361183241434822606848;
parameter    ap_ST_fsm_pp0_stage72 = 75'd4722366482869645213696;
parameter    ap_ST_fsm_pp0_stage73 = 75'd9444732965739290427392;
parameter    ap_ST_fsm_pp0_stage74 = 75'd18889465931478580854784;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] empty_39;
input  [7:0] v_61_2;
input  [7:0] empty_40;
input  [63:0] v_37;
input  [30:0] sext_ln48;
input  [63:0] result_48;
input  [63:0] add743;
input  [47:0] rem737_cast;
input  [31:0] conv727;
input  [63:0] div768;
input  [15:0] empty;
input  [63:0] add798;
input  [63:0] add800;
input  [63:0] p_15;
input  [63:0] v_29;
input  [15:0] conv614;
output  [31:0] v_61_1_out;
output   v_61_1_out_ap_vld;
output  [7:0] v_91_1_out;
output   v_91_1_out_ap_vld;
output  [63:0] v_37_1_out;
output   v_37_1_out_ap_vld;
output  [63:0] v_35_1_out;
output   v_35_1_out_ap_vld;
output  [63:0] grp_fu_621_p_din0;
output  [63:0] grp_fu_621_p_din1;
output  [0:0] grp_fu_621_p_opcode;
input  [63:0] grp_fu_621_p_dout0;
output   grp_fu_621_p_ce;
output  [63:0] grp_fu_638_p_din0;
input  [63:0] grp_fu_638_p_dout0;
output   grp_fu_638_p_ce;

reg ap_idle;
reg v_61_1_out_ap_vld;
reg v_91_1_out_ap_vld;
reg v_37_1_out_ap_vld;
reg v_35_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [74:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage74;
wire    ap_block_pp0_stage74_subdone;
wire   [0:0] icmp_ln308_fu_330_p2;
reg    ap_condition_exit_pp0_iter0_stage74;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] conv614_cast_fu_269_p1;
reg   [31:0] conv614_cast_reg_614;
wire  signed [63:0] conv727_cast_fu_273_p1;
reg  signed [63:0] conv727_cast_reg_619;
wire   [63:0] rem737_cast_cast_fu_277_p1;
reg   [63:0] rem737_cast_cast_reg_624;
wire  signed [31:0] v_61_2_cast_fu_285_p1;
reg  signed [31:0] v_61_2_cast_reg_629;
reg  signed [31:0] v_61_1_reg_634;
reg  signed [31:0] v_61_1_reg_634_pp0_iter1_reg;
wire   [31:0] grp_fu_264_p2;
reg   [31:0] mul_ln306_reg_640;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_11001;
wire   [63:0] grp_fu_316_p2;
reg   [63:0] urem_ln307_reg_650;
wire    ap_CS_fsm_pp0_stage72;
wire    ap_block_pp0_stage72_11001;
wire   [63:0] add_ln302_fu_325_p2;
reg   [63:0] add_ln302_reg_655;
wire    ap_CS_fsm_pp0_stage73;
wire    ap_block_pp0_stage73_11001;
reg   [0:0] icmp_ln308_reg_660;
wire    ap_block_pp0_stage74_11001;
wire  signed [7:0] v_91_1_fu_352_p1;
reg  signed [7:0] v_91_1_reg_664;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18_11001;
reg   [0:0] tmp_8_reg_671;
wire   [15:0] select_ln320_fu_384_p3;
reg   [15:0] select_ln320_reg_676;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19_11001;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20_11001;
wire   [63:0] grp_fu_339_p2;
reg   [63:0] udiv_ln323_reg_686;
wire   [63:0] add_ln321_1_fu_407_p2;
reg   [63:0] add_ln321_1_reg_691;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21_11001;
wire   [63:0] grp_fu_402_p2;
reg   [63:0] sdiv_ln320_reg_696;
wire    ap_CS_fsm_pp0_stage56;
wire    ap_block_pp0_stage56_11001;
wire   [63:0] add_ln321_fu_411_p2;
reg   [63:0] add_ln321_reg_701;
wire    ap_CS_fsm_pp0_stage57;
wire    ap_block_pp0_stage57_11001;
reg   [63:0] conv4_reg_706;
wire    ap_CS_fsm_pp0_stage64;
wire    ap_block_pp0_stage64_11001;
reg   [10:0] xs_exp_reg_711;
wire   [51:0] trunc_ln505_fu_429_p1;
reg   [51:0] trunc_ln505_reg_717;
wire   [0:0] tmp_9_fu_442_p3;
reg   [0:0] tmp_9_reg_722;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6_11001;
wire   [11:0] select_ln71_2_fu_459_p3;
reg   [11:0] select_ln71_2_reg_727;
wire   [120:0] zext_ln68_fu_476_p1;
reg   [120:0] zext_ln68_reg_732;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7_11001;
wire   [120:0] zext_ln71_fu_483_p1;
reg   [120:0] zext_ln71_reg_738;
reg   [15:0] tmp_s_reg_744;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13_11001;
reg   [15:0] tmp_10_reg_749;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14_11001;
wire   [15:0] select_ln71_fu_517_p3;
reg   [15:0] select_ln71_reg_754;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15_11001;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16_11001;
wire   [31:0] grp_fu_525_p2;
reg   [31:0] mul_ln318_reg_764;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17_11001;
wire   [63:0] grp_fu_261_p1;
reg   [63:0] v_37_2_reg_769;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_pp0_stage24_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_pp0_stage25_subdone;
reg   [63:0] v_35_fu_114;
wire  signed [63:0] sext_ln48_cast_fu_281_p1;
wire    ap_loop_init;
wire    ap_block_pp0_stage25;
reg   [63:0] v_37_1_fu_118;
wire    ap_block_pp0_stage25_11001;
reg   [7:0] v_91_fu_122;
reg   [31:0] v_61_fu_126;
reg  signed [31:0] ap_sig_allocacmp_v_61_1;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage25_01001;
wire    ap_block_pp0_stage65;
wire    ap_block_pp0_stage58;
wire    ap_block_pp0_stage18;
wire  signed [8:0] grp_fu_264_p1;
wire    ap_block_pp0_stage5;
wire  signed [63:0] grp_fu_316_p0;
wire    ap_block_pp0_stage73;
wire   [63:0] xor_ln305_fu_321_p2;
wire    ap_block_pp0_stage74;
wire   [9:0] grp_fu_334_p1;
wire   [16:0] grp_fu_339_p0;
wire   [15:0] grp_fu_334_p2;
wire    ap_block_pp0_stage19;
wire  signed [10:0] sext_ln320_1_fu_367_p1;
wire   [10:0] add_ln320_fu_370_p2;
wire  signed [14:0] sext_ln320_2_fu_376_p1;
wire   [15:0] zext_ln320_fu_380_p1;
wire  signed [15:0] sext_ln320_fu_364_p1;
wire    ap_block_pp0_stage20;
wire  signed [31:0] sext_ln319_fu_395_p1;
wire   [32:0] grp_fu_402_p0;
wire    ap_block_pp0_stage21;
wire    ap_block_pp0_stage57;
wire   [63:0] data_fu_415_p1;
wire    ap_block_pp0_stage6;
wire   [11:0] zext_ln486_fu_433_p1;
wire   [11:0] add_ln486_fu_436_p2;
wire   [10:0] sub_ln71_fu_450_p2;
wire  signed [11:0] sext_ln71_2_fu_455_p1;
wire    ap_block_pp0_stage7;
wire   [53:0] mantissa_fu_467_p4;
wire  signed [31:0] sext_ln71_fu_480_p1;
wire   [120:0] grp_fu_487_p0;
wire   [120:0] grp_fu_487_p1;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire   [120:0] grp_fu_487_p2;
wire    ap_block_pp0_stage13;
wire   [120:0] grp_fu_493_p2;
wire    ap_block_pp0_stage14;
wire    ap_block_pp0_stage15;
wire    ap_block_pp0_stage16;
wire   [15:0] grp_fu_525_p0;
wire   [15:0] grp_fu_525_p1;
wire    ap_block_pp0_stage65_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter1_stage25;
reg    ap_idle_pp0_0to0;
reg   [74:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to2;
reg    ap_done_pending_pp0;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_pp0_stage23_subdone;
wire    ap_block_pp0_stage24_subdone;
wire    ap_block_pp0_stage26_subdone;
wire    ap_block_pp0_stage27_subdone;
wire    ap_block_pp0_stage28_subdone;
wire    ap_block_pp0_stage29_subdone;
wire    ap_block_pp0_stage30_subdone;
wire    ap_block_pp0_stage31_subdone;
wire    ap_block_pp0_stage32_subdone;
wire    ap_block_pp0_stage33_subdone;
wire    ap_block_pp0_stage34_subdone;
wire    ap_block_pp0_stage35_subdone;
wire    ap_block_pp0_stage36_subdone;
wire    ap_block_pp0_stage37_subdone;
wire    ap_block_pp0_stage38_subdone;
wire    ap_block_pp0_stage39_subdone;
wire    ap_block_pp0_stage40_subdone;
wire    ap_block_pp0_stage41_subdone;
wire    ap_block_pp0_stage42_subdone;
wire    ap_block_pp0_stage43_subdone;
wire    ap_block_pp0_stage44_subdone;
wire    ap_block_pp0_stage45_subdone;
wire    ap_block_pp0_stage46_subdone;
wire    ap_block_pp0_stage47_subdone;
wire    ap_block_pp0_stage48_subdone;
wire    ap_block_pp0_stage49_subdone;
wire    ap_block_pp0_stage50_subdone;
wire    ap_block_pp0_stage51_subdone;
wire    ap_block_pp0_stage52_subdone;
wire    ap_block_pp0_stage53_subdone;
wire    ap_block_pp0_stage54_subdone;
wire    ap_block_pp0_stage55_subdone;
wire    ap_block_pp0_stage56_subdone;
wire    ap_block_pp0_stage57_subdone;
wire    ap_block_pp0_stage58_subdone;
wire    ap_block_pp0_stage59_subdone;
wire    ap_block_pp0_stage60_subdone;
wire    ap_block_pp0_stage61_subdone;
wire    ap_block_pp0_stage62_subdone;
wire    ap_block_pp0_stage63_subdone;
wire    ap_block_pp0_stage64_subdone;
wire    ap_block_pp0_stage65_subdone;
wire    ap_block_pp0_stage66_subdone;
wire    ap_block_pp0_stage67_subdone;
wire    ap_block_pp0_stage68_subdone;
wire    ap_block_pp0_stage69_subdone;
wire    ap_block_pp0_stage70_subdone;
wire    ap_block_pp0_stage71_subdone;
wire    ap_block_pp0_stage72_subdone;
wire    ap_block_pp0_stage73_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [63:0] grp_fu_402_p00;
wire   [31:0] grp_fu_525_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 75'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 v_35_fu_114 = 64'd0;
#0 v_37_1_fu_118 = 64'd0;
#0 v_91_fu_122 = 8'd0;
#0 v_61_fu_126 = 32'd0;
#0 ap_done_reg = 1'b0;
end

fn1_sitodp_32ns_64_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sitodp_32ns_64_7_no_dsp_1_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln318_reg_764),
    .ce(1'b1),
    .dout(grp_fu_261_p1)
);

fn1_mul_32s_9s_32_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 32 ))
mul_32s_9s_32_5_1_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_sig_allocacmp_v_61_1),
    .din1(grp_fu_264_p1),
    .ce(1'b1),
    .dout(grp_fu_264_p2)
);

fn1_urem_64s_64ns_64_68_1 #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
urem_64s_64ns_64_68_1_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_316_p0),
    .din1(add743),
    .ce(1'b1),
    .dout(grp_fu_316_p2)
);

fn1_urem_16ns_10ns_16_20_1 #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 16 ))
urem_16ns_10ns_16_20_1_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty),
    .din1(grp_fu_334_p1),
    .ce(1'b1),
    .dout(grp_fu_334_p2)
);

fn1_udiv_17ns_64ns_64_21_1 #(
    .ID( 1 ),
    .NUM_STAGE( 21 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
udiv_17ns_64ns_64_21_1_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_339_p0),
    .din1(add800),
    .ce(1'b1),
    .dout(grp_fu_339_p2)
);

fn1_sdiv_33ns_64ns_64_37_1 #(
    .ID( 1 ),
    .NUM_STAGE( 37 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sdiv_33ns_64ns_64_37_1_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_402_p0),
    .din1(add798),
    .ce(1'b1),
    .dout(grp_fu_402_p2)
);

fn1_lshr_121ns_32ns_121_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 1 ),
    .din0_WIDTH( 121 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 121 ))
lshr_121ns_32ns_121_7_1_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_487_p0),
    .din1(grp_fu_487_p1),
    .ce(1'b1),
    .dout(grp_fu_487_p2)
);

fn1_shl_121ns_32ns_121_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .OP( 0 ),
    .din0_WIDTH( 121 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 121 ))
shl_121ns_32ns_121_7_1_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(zext_ln68_reg_732),
    .din1(zext_ln71_reg_738),
    .ce(1'b1),
    .dout(grp_fu_493_p2)
);

fn1_mul_16ns_16ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_16ns_16ns_32_2_1_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_525_p0),
    .din1(grp_fu_525_p1),
    .ce(1'b1),
    .dout(grp_fu_525_p2)
);

fn1_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage74),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage74)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage74) & (1'b0 == ap_block_pp0_stage74_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_subdone))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage74) & (1'b0 == ap_block_pp0_stage74_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage25))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage74) & (1'b0 == ap_block_pp0_stage74_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            v_35_fu_114 <= sext_ln48_cast_fu_281_p1;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            v_35_fu_114 <= result_48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v_37_1_fu_118 <= v_37;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001))) begin
        v_37_1_fu_118 <= v_37_2_reg_769;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            v_61_fu_126 <= empty_39;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            v_61_fu_126 <= v_61_2_cast_reg_629;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v_91_fu_122 <= empty_40;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001))) begin
        v_91_fu_122 <= v_91_1_reg_664;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage73) & (1'b0 == ap_block_pp0_stage73_11001))) begin
        add_ln302_reg_655 <= add_ln302_fu_325_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001))) begin
        add_ln321_1_reg_691 <= add_ln321_1_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage57) & (1'b0 == ap_block_pp0_stage57_11001))) begin
        add_ln321_reg_701 <= add_ln321_fu_411_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage64) & (1'b0 == ap_block_pp0_stage64_11001))) begin
        conv4_reg_706 <= grp_fu_638_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv614_cast_reg_614[15 : 0] <= conv614_cast_fu_269_p1[15 : 0];
        conv727_cast_reg_619 <= conv727_cast_fu_273_p1;
        rem737_cast_cast_reg_624[47 : 0] <= rem737_cast_cast_fu_277_p1[47 : 0];
        v_61_1_reg_634_pp0_iter1_reg <= v_61_1_reg_634;
        v_61_2_cast_reg_629 <= v_61_2_cast_fu_285_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage74) & (1'b0 == ap_block_pp0_stage74_11001))) begin
        icmp_ln308_reg_660 <= icmp_ln308_fu_330_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        mul_ln306_reg_640 <= grp_fu_264_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001))) begin
        mul_ln318_reg_764 <= grp_fu_525_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage56) & (1'b0 == ap_block_pp0_stage56_11001))) begin
        sdiv_ln320_reg_696 <= grp_fu_402_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001))) begin
        select_ln320_reg_676 <= select_ln320_fu_384_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        select_ln71_2_reg_727 <= select_ln71_2_fu_459_p3;
        tmp_9_reg_722 <= add_ln486_fu_436_p2[32'd11];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001))) begin
        select_ln71_reg_754 <= select_ln71_fu_517_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001))) begin
        tmp_10_reg_749 <= {{grp_fu_493_p2[68:53]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001))) begin
        tmp_8_reg_671 <= grp_fu_334_p2[32'd7];
        v_91_1_reg_664 <= v_91_1_fu_352_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001))) begin
        tmp_s_reg_744 <= {{grp_fu_487_p2[68:53]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        trunc_ln505_reg_717 <= trunc_ln505_fu_429_p1;
        xs_exp_reg_711 <= {{data_fu_415_p1[62:52]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001))) begin
        udiv_ln323_reg_686 <= grp_fu_339_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage72) & (1'b0 == ap_block_pp0_stage72_11001))) begin
        urem_ln307_reg_650 <= grp_fu_316_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001))) begin
        v_37_2_reg_769 <= grp_fu_261_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v_61_1_reg_634 <= ap_sig_allocacmp_v_61_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        zext_ln68_reg_732[52 : 1] <= zext_ln68_fu_476_p1[52 : 1];
        zext_ln71_reg_738[31 : 0] <= zext_ln71_fu_483_p1[31 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage74) & (icmp_ln308_fu_330_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage74_subdone))) begin
        ap_condition_exit_pp0_iter0_stage74 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage74 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln308_reg_660 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_subdone))) begin
        ap_condition_exit_pp0_iter1_stage25 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage25 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready_pp0_iter1_reg == 1'b0) & (ap_loop_exit_ready == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage74) & (1'b0 == ap_block_pp0_stage74_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            ap_sig_allocacmp_v_61_1 = empty_39;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            ap_sig_allocacmp_v_61_1 = v_61_2_cast_reg_629;
        end else begin
            ap_sig_allocacmp_v_61_1 = v_61_fu_126;
        end
    end else begin
        ap_sig_allocacmp_v_61_1 = v_61_fu_126;
    end
end

always @ (*) begin
    if (((icmp_ln308_reg_660 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001))) begin
        v_35_1_out_ap_vld = 1'b1;
    end else begin
        v_35_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln308_reg_660 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001))) begin
        v_37_1_out_ap_vld = 1'b1;
    end else begin
        v_37_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln308_reg_660 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001))) begin
        v_61_1_out_ap_vld = 1'b1;
    end else begin
        v_61_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln308_reg_660 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001))) begin
        v_91_1_out_ap_vld = 1'b1;
    end else begin
        v_91_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to2 == 1'b1) & (ap_start_int == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage25))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_pp0_stage32 : begin
            if ((1'b0 == ap_block_pp0_stage32_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end
        end
        ap_ST_fsm_pp0_stage33 : begin
            if ((1'b0 == ap_block_pp0_stage33_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end
        end
        ap_ST_fsm_pp0_stage34 : begin
            if ((1'b0 == ap_block_pp0_stage34_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end
        end
        ap_ST_fsm_pp0_stage35 : begin
            if ((1'b0 == ap_block_pp0_stage35_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end
        end
        ap_ST_fsm_pp0_stage36 : begin
            if ((1'b0 == ap_block_pp0_stage36_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end
        end
        ap_ST_fsm_pp0_stage37 : begin
            if ((1'b0 == ap_block_pp0_stage37_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end
        end
        ap_ST_fsm_pp0_stage38 : begin
            if ((1'b0 == ap_block_pp0_stage38_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end
        end
        ap_ST_fsm_pp0_stage39 : begin
            if ((1'b0 == ap_block_pp0_stage39_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end
        end
        ap_ST_fsm_pp0_stage40 : begin
            if ((1'b0 == ap_block_pp0_stage40_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end
        end
        ap_ST_fsm_pp0_stage41 : begin
            if ((1'b0 == ap_block_pp0_stage41_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end
        end
        ap_ST_fsm_pp0_stage42 : begin
            if ((1'b0 == ap_block_pp0_stage42_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end
        end
        ap_ST_fsm_pp0_stage43 : begin
            if ((1'b0 == ap_block_pp0_stage43_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end
        end
        ap_ST_fsm_pp0_stage44 : begin
            if ((1'b0 == ap_block_pp0_stage44_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end
        end
        ap_ST_fsm_pp0_stage45 : begin
            if ((1'b0 == ap_block_pp0_stage45_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end
        end
        ap_ST_fsm_pp0_stage46 : begin
            if ((1'b0 == ap_block_pp0_stage46_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end
        end
        ap_ST_fsm_pp0_stage47 : begin
            if ((1'b0 == ap_block_pp0_stage47_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end
        end
        ap_ST_fsm_pp0_stage48 : begin
            if ((1'b0 == ap_block_pp0_stage48_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end
        end
        ap_ST_fsm_pp0_stage49 : begin
            if ((1'b0 == ap_block_pp0_stage49_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage49;
            end
        end
        ap_ST_fsm_pp0_stage50 : begin
            if ((1'b0 == ap_block_pp0_stage50_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage50;
            end
        end
        ap_ST_fsm_pp0_stage51 : begin
            if ((1'b0 == ap_block_pp0_stage51_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage51;
            end
        end
        ap_ST_fsm_pp0_stage52 : begin
            if ((1'b0 == ap_block_pp0_stage52_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage52;
            end
        end
        ap_ST_fsm_pp0_stage53 : begin
            if ((1'b0 == ap_block_pp0_stage53_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage53;
            end
        end
        ap_ST_fsm_pp0_stage54 : begin
            if ((1'b0 == ap_block_pp0_stage54_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage54;
            end
        end
        ap_ST_fsm_pp0_stage55 : begin
            if ((1'b0 == ap_block_pp0_stage55_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage55;
            end
        end
        ap_ST_fsm_pp0_stage56 : begin
            if ((1'b0 == ap_block_pp0_stage56_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage56;
            end
        end
        ap_ST_fsm_pp0_stage57 : begin
            if ((1'b0 == ap_block_pp0_stage57_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage57;
            end
        end
        ap_ST_fsm_pp0_stage58 : begin
            if ((1'b0 == ap_block_pp0_stage58_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage58;
            end
        end
        ap_ST_fsm_pp0_stage59 : begin
            if ((1'b0 == ap_block_pp0_stage59_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage59;
            end
        end
        ap_ST_fsm_pp0_stage60 : begin
            if ((1'b0 == ap_block_pp0_stage60_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage60;
            end
        end
        ap_ST_fsm_pp0_stage61 : begin
            if ((1'b0 == ap_block_pp0_stage61_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage61;
            end
        end
        ap_ST_fsm_pp0_stage62 : begin
            if ((1'b0 == ap_block_pp0_stage62_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage62;
            end
        end
        ap_ST_fsm_pp0_stage63 : begin
            if ((1'b0 == ap_block_pp0_stage63_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage63;
            end
        end
        ap_ST_fsm_pp0_stage64 : begin
            if ((1'b0 == ap_block_pp0_stage64_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage64;
            end
        end
        ap_ST_fsm_pp0_stage65 : begin
            if ((1'b0 == ap_block_pp0_stage65_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage65;
            end
        end
        ap_ST_fsm_pp0_stage66 : begin
            if ((1'b0 == ap_block_pp0_stage66_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage66;
            end
        end
        ap_ST_fsm_pp0_stage67 : begin
            if ((1'b0 == ap_block_pp0_stage67_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage67;
            end
        end
        ap_ST_fsm_pp0_stage68 : begin
            if ((1'b0 == ap_block_pp0_stage68_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage68;
            end
        end
        ap_ST_fsm_pp0_stage69 : begin
            if ((1'b0 == ap_block_pp0_stage69_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage69;
            end
        end
        ap_ST_fsm_pp0_stage70 : begin
            if ((1'b0 == ap_block_pp0_stage70_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage70;
            end
        end
        ap_ST_fsm_pp0_stage71 : begin
            if ((1'b0 == ap_block_pp0_stage71_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage71;
            end
        end
        ap_ST_fsm_pp0_stage72 : begin
            if ((1'b0 == ap_block_pp0_stage72_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage72;
            end
        end
        ap_ST_fsm_pp0_stage73 : begin
            if ((1'b0 == ap_block_pp0_stage73_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage73;
            end
        end
        ap_ST_fsm_pp0_stage74 : begin
            if ((1'b0 == ap_block_pp0_stage74_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage74;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln302_fu_325_p2 = ($signed(xor_ln305_fu_321_p2) + $signed(conv727_cast_reg_619));

assign add_ln320_fu_370_p2 = ($signed(sext_ln320_1_fu_367_p1) + $signed(11'd1278));

assign add_ln321_1_fu_407_p2 = (udiv_ln323_reg_686 + p_15);

assign add_ln321_fu_411_p2 = (add_ln321_1_reg_691 + sdiv_ln320_reg_696);

assign add_ln486_fu_436_p2 = ($signed(zext_ln486_fu_433_p1) + $signed(12'd3073));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage56 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_pp0_stage57 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage64 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage72 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_pp0_stage73 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_pp0_stage74 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage40_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage41_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage43_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage44_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage45_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage46_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage47_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage48_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage49_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage50_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage51_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage52_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage53_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage54_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage55_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage56_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage56_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage57 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage57_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage57_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage58 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage58_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage59_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage60_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage61_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage62_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage63_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage64_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage64_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage65 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage65_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage65_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage66_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage67_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage68_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage69_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage70_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage71_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage72_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage72_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage73 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage73_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage73_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage74 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage74_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage74_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage74;

assign conv614_cast_fu_269_p1 = conv614;

assign conv727_cast_fu_273_p1 = $signed(conv727);

assign data_fu_415_p1 = grp_fu_621_p_dout0;

assign grp_fu_264_p1 = 32'd4294967100;

assign grp_fu_316_p0 = $signed(mul_ln306_reg_640);

assign grp_fu_334_p1 = 16'd289;

assign grp_fu_339_p0 = 64'd52364;

assign grp_fu_402_p0 = grp_fu_402_p00;

assign grp_fu_402_p00 = $unsigned(sext_ln319_fu_395_p1);

assign grp_fu_487_p0 = mantissa_fu_467_p4;

assign grp_fu_487_p1 = $unsigned(sext_ln71_fu_480_p1);

assign grp_fu_525_p0 = grp_fu_525_p00;

assign grp_fu_525_p00 = select_ln71_reg_754;

assign grp_fu_525_p1 = conv614_cast_reg_614;

assign grp_fu_621_p_ce = 1'b1;

assign grp_fu_621_p_din0 = conv4_reg_706;

assign grp_fu_621_p_din1 = v_29;

assign grp_fu_621_p_opcode = 2'd0;

assign grp_fu_638_p_ce = 1'b1;

assign grp_fu_638_p_din0 = add_ln321_reg_701;

assign icmp_ln308_fu_330_p2 = ((add_ln302_reg_655 > div768) ? 1'b1 : 1'b0);

assign mantissa_fu_467_p4 = {{{{1'd1}, {trunc_ln505_reg_717}}}, {1'd0}};

assign rem737_cast_cast_fu_277_p1 = rem737_cast;

assign select_ln320_fu_384_p3 = ((tmp_8_reg_671[0:0] == 1'b1) ? zext_ln320_fu_380_p1 : sext_ln320_fu_364_p1);

assign select_ln71_2_fu_459_p3 = ((tmp_9_fu_442_p3[0:0] == 1'b1) ? sext_ln71_2_fu_455_p1 : add_ln486_fu_436_p2);

assign select_ln71_fu_517_p3 = ((tmp_9_reg_722[0:0] == 1'b1) ? tmp_s_reg_744 : tmp_10_reg_749);

assign sext_ln319_fu_395_p1 = $signed(select_ln320_reg_676);

assign sext_ln320_1_fu_367_p1 = v_91_1_reg_664;

assign sext_ln320_2_fu_376_p1 = $signed(add_ln320_fu_370_p2);

assign sext_ln320_fu_364_p1 = v_91_1_reg_664;

assign sext_ln48_cast_fu_281_p1 = $signed(sext_ln48);

assign sext_ln71_2_fu_455_p1 = $signed(sub_ln71_fu_450_p2);

assign sext_ln71_fu_480_p1 = $signed(select_ln71_2_reg_727);

assign sub_ln71_fu_450_p2 = (11'd1023 - xs_exp_reg_711);

assign tmp_9_fu_442_p3 = add_ln486_fu_436_p2[32'd11];

assign trunc_ln505_fu_429_p1 = data_fu_415_p1[51:0];

assign v_35_1_out = v_35_fu_114;

assign v_37_1_out = v_37_1_fu_118;

assign v_61_1_out = v_61_1_reg_634_pp0_iter1_reg;

assign v_61_2_cast_fu_285_p1 = $signed(v_61_2);

assign v_91_1_fu_352_p1 = grp_fu_334_p2[7:0];

assign v_91_1_out = v_91_fu_122;

assign xor_ln305_fu_321_p2 = (urem_ln307_reg_650 ^ rem737_cast_cast_reg_624);

assign zext_ln320_fu_380_p1 = $unsigned(sext_ln320_2_fu_376_p1);

assign zext_ln486_fu_433_p1 = xs_exp_reg_711;

assign zext_ln68_fu_476_p1 = mantissa_fu_467_p4;

assign zext_ln71_fu_483_p1 = $unsigned(sext_ln71_fu_480_p1);

always @ (posedge ap_clk) begin
    conv614_cast_reg_614[31:16] <= 16'b0000000000000000;
    rem737_cast_cast_reg_624[63:48] <= 16'b0000000000000000;
    zext_ln68_reg_732[0] <= 1'b0;
    zext_ln68_reg_732[120:53] <= 68'b00000000000000000000000000000000000000000000000000000000000000000001;
    zext_ln71_reg_738[120:32] <= 89'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
end

endmodule //fn1_fn1_Pipeline_VITIS_LOOP_302_4
