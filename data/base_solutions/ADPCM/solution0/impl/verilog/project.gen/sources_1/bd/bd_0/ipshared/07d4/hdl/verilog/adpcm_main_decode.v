// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module adpcm_main_decode (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r,
        dec_del_bpl_address0,
        dec_del_bpl_ce0,
        dec_del_bpl_we0,
        dec_del_bpl_d0,
        dec_del_bpl_q0,
        dec_del_dltx_address0,
        dec_del_dltx_ce0,
        dec_del_dltx_we0,
        dec_del_dltx_d0,
        dec_del_dltx_q0,
        dec_del_dltx_address1,
        dec_del_dltx_ce1,
        dec_del_dltx_we1,
        dec_del_dltx_d1,
        dec_del_dltx_q1,
        dec_rlt1_i,
        dec_rlt1_o,
        dec_rlt1_o_ap_vld,
        dec_al1_i,
        dec_al1_o,
        dec_al1_o_ap_vld,
        dec_rlt2_i,
        dec_rlt2_o,
        dec_rlt2_o_ap_vld,
        dec_al2_i,
        dec_al2_o,
        dec_al2_o_ap_vld,
        dec_detl_i,
        dec_detl_o,
        dec_detl_o_ap_vld,
        qq4_code4_table_address0,
        qq4_code4_table_ce0,
        qq4_code4_table_q0,
        il,
        dec_nbl_i,
        dec_nbl_o,
        dec_nbl_o_ap_vld,
        dec_plt1_i,
        dec_plt1_o,
        dec_plt1_o_ap_vld,
        dec_plt2_i,
        dec_plt2_o,
        dec_plt2_o_ap_vld,
        dec_del_bph_address0,
        dec_del_bph_ce0,
        dec_del_bph_we0,
        dec_del_bph_d0,
        dec_del_bph_q0,
        dec_del_dhx_address0,
        dec_del_dhx_ce0,
        dec_del_dhx_we0,
        dec_del_dhx_d0,
        dec_del_dhx_q0,
        dec_del_dhx_address1,
        dec_del_dhx_ce1,
        dec_del_dhx_we1,
        dec_del_dhx_d1,
        dec_del_dhx_q1,
        dec_rh1_i,
        dec_rh1_o,
        dec_rh1_o_ap_vld,
        dec_ah1_i,
        dec_ah1_o,
        dec_ah1_o_ap_vld,
        dec_rh2_i,
        dec_rh2_o,
        dec_rh2_o_ap_vld,
        dec_ah2_i,
        dec_ah2_o,
        dec_ah2_o_ap_vld,
        dec_deth_i,
        dec_deth_o,
        dec_deth_o_ap_vld,
        dec_nbh_i,
        dec_nbh_o,
        dec_nbh_o_ap_vld,
        dec_ph1_i,
        dec_ph1_o,
        dec_ph1_o_ap_vld,
        dec_ph2_i,
        dec_ph2_o,
        dec_ph2_o_ap_vld,
        accumc_address0,
        accumc_ce0,
        accumc_we0,
        accumc_d0,
        accumc_q0,
        h_address0,
        h_ce0,
        h_q0,
        h_address1,
        h_ce1,
        h_q1,
        accumd_address0,
        accumd_ce0,
        accumd_we0,
        accumd_d0,
        accumd_q0,
        xout1,
        xout1_ap_vld,
        xout2,
        xout2_ap_vld,
        grp_filtep_fu_650_p_din1,
        grp_filtep_fu_650_p_din2,
        grp_filtep_fu_650_p_din3,
        grp_filtep_fu_650_p_din4,
        grp_filtep_fu_650_p_dout0,
        grp_filtep_fu_650_p_ready,
        grp_logscl_fu_657_p_din1,
        grp_logscl_fu_657_p_din2,
        grp_logscl_fu_657_p_dout0,
        grp_logscl_fu_657_p_start,
        grp_logscl_fu_657_p_ready,
        grp_logscl_fu_657_p_done,
        grp_logscl_fu_657_p_idle,
        grp_scalel_fu_663_p_din1,
        grp_scalel_fu_663_p_din2,
        grp_scalel_fu_663_p_dout0,
        grp_scalel_fu_663_p_start,
        grp_scalel_fu_663_p_ready,
        grp_scalel_fu_663_p_done,
        grp_scalel_fu_663_p_idle,
        grp_uppol1_fu_669_p_din1,
        grp_uppol1_fu_669_p_din2,
        grp_uppol1_fu_669_p_din3,
        grp_uppol1_fu_669_p_din4,
        grp_uppol1_fu_669_p_dout0,
        grp_uppol1_fu_669_p_start,
        grp_uppol1_fu_669_p_ready,
        grp_uppol1_fu_669_p_done,
        grp_uppol1_fu_669_p_idle,
        grp_uppol2_fu_676_p_din1,
        grp_uppol2_fu_676_p_din2,
        grp_uppol2_fu_676_p_din3,
        grp_uppol2_fu_676_p_din4,
        grp_uppol2_fu_676_p_din5,
        grp_uppol2_fu_676_p_dout0,
        grp_uppol2_fu_676_p_start,
        grp_uppol2_fu_676_p_ready,
        grp_uppol2_fu_676_p_done,
        grp_uppol2_fu_676_p_idle,
        tmp_s_logsch_fu_684_p_din1,
        tmp_s_logsch_fu_684_p_din2,
        tmp_s_logsch_fu_684_p_dout0,
        tmp_s_logsch_fu_684_p_ready
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_state2 = 13'd2;
parameter    ap_ST_fsm_state3 = 13'd4;
parameter    ap_ST_fsm_state4 = 13'd8;
parameter    ap_ST_fsm_state5 = 13'd16;
parameter    ap_ST_fsm_state6 = 13'd32;
parameter    ap_ST_fsm_state7 = 13'd64;
parameter    ap_ST_fsm_state8 = 13'd128;
parameter    ap_ST_fsm_state9 = 13'd256;
parameter    ap_ST_fsm_state10 = 13'd512;
parameter    ap_ST_fsm_state11 = 13'd1024;
parameter    ap_ST_fsm_state12 = 13'd2048;
parameter    ap_ST_fsm_state13 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] input_r;
output  [2:0] dec_del_bpl_address0;
output   dec_del_bpl_ce0;
output   dec_del_bpl_we0;
output  [31:0] dec_del_bpl_d0;
input  [31:0] dec_del_bpl_q0;
output  [2:0] dec_del_dltx_address0;
output   dec_del_dltx_ce0;
output   dec_del_dltx_we0;
output  [15:0] dec_del_dltx_d0;
input  [15:0] dec_del_dltx_q0;
output  [2:0] dec_del_dltx_address1;
output   dec_del_dltx_ce1;
output   dec_del_dltx_we1;
output  [15:0] dec_del_dltx_d1;
input  [15:0] dec_del_dltx_q1;
input  [30:0] dec_rlt1_i;
output  [30:0] dec_rlt1_o;
output   dec_rlt1_o_ap_vld;
input  [15:0] dec_al1_i;
output  [15:0] dec_al1_o;
output   dec_al1_o_ap_vld;
input  [30:0] dec_rlt2_i;
output  [30:0] dec_rlt2_o;
output   dec_rlt2_o_ap_vld;
input  [14:0] dec_al2_i;
output  [14:0] dec_al2_o;
output   dec_al2_o_ap_vld;
input  [14:0] dec_detl_i;
output  [14:0] dec_detl_o;
output   dec_detl_o_ap_vld;
output  [3:0] qq4_code4_table_address0;
output   qq4_code4_table_ce0;
input  [15:0] qq4_code4_table_q0;
input  [5:0] il;
input  [14:0] dec_nbl_i;
output  [14:0] dec_nbl_o;
output   dec_nbl_o_ap_vld;
input  [31:0] dec_plt1_i;
output  [31:0] dec_plt1_o;
output   dec_plt1_o_ap_vld;
input  [31:0] dec_plt2_i;
output  [31:0] dec_plt2_o;
output   dec_plt2_o_ap_vld;
output  [2:0] dec_del_bph_address0;
output   dec_del_bph_ce0;
output   dec_del_bph_we0;
output  [31:0] dec_del_bph_d0;
input  [31:0] dec_del_bph_q0;
output  [2:0] dec_del_dhx_address0;
output   dec_del_dhx_ce0;
output   dec_del_dhx_we0;
output  [15:0] dec_del_dhx_d0;
input  [15:0] dec_del_dhx_q0;
output  [2:0] dec_del_dhx_address1;
output   dec_del_dhx_ce1;
output   dec_del_dhx_we1;
output  [15:0] dec_del_dhx_d1;
input  [15:0] dec_del_dhx_q1;
input  [30:0] dec_rh1_i;
output  [30:0] dec_rh1_o;
output   dec_rh1_o_ap_vld;
input  [15:0] dec_ah1_i;
output  [15:0] dec_ah1_o;
output   dec_ah1_o_ap_vld;
input  [30:0] dec_rh2_i;
output  [30:0] dec_rh2_o;
output   dec_rh2_o_ap_vld;
input  [14:0] dec_ah2_i;
output  [14:0] dec_ah2_o;
output   dec_ah2_o_ap_vld;
input  [14:0] dec_deth_i;
output  [14:0] dec_deth_o;
output   dec_deth_o_ap_vld;
input  [14:0] dec_nbh_i;
output  [14:0] dec_nbh_o;
output   dec_nbh_o_ap_vld;
input  [31:0] dec_ph1_i;
output  [31:0] dec_ph1_o;
output   dec_ph1_o_ap_vld;
input  [31:0] dec_ph2_i;
output  [31:0] dec_ph2_o;
output   dec_ph2_o_ap_vld;
output  [3:0] accumc_address0;
output   accumc_ce0;
output   accumc_we0;
output  [31:0] accumc_d0;
input  [31:0] accumc_q0;
output  [4:0] h_address0;
output   h_ce0;
input  [14:0] h_q0;
output  [4:0] h_address1;
output   h_ce1;
input  [14:0] h_q1;
output  [3:0] accumd_address0;
output   accumd_ce0;
output   accumd_we0;
output  [31:0] accumd_d0;
input  [31:0] accumd_q0;
output  [31:0] xout1;
output   xout1_ap_vld;
output  [31:0] xout2;
output   xout2_ap_vld;
output  [30:0] grp_filtep_fu_650_p_din1;
output  [15:0] grp_filtep_fu_650_p_din2;
output  [30:0] grp_filtep_fu_650_p_din3;
output  [14:0] grp_filtep_fu_650_p_din4;
input  [31:0] grp_filtep_fu_650_p_dout0;
input   grp_filtep_fu_650_p_ready;
output  [5:0] grp_logscl_fu_657_p_din1;
output  [14:0] grp_logscl_fu_657_p_din2;
input  [14:0] grp_logscl_fu_657_p_dout0;
output   grp_logscl_fu_657_p_start;
input   grp_logscl_fu_657_p_ready;
input   grp_logscl_fu_657_p_done;
input   grp_logscl_fu_657_p_idle;
output  [14:0] grp_scalel_fu_663_p_din1;
output  [3:0] grp_scalel_fu_663_p_din2;
input  [14:0] grp_scalel_fu_663_p_dout0;
output   grp_scalel_fu_663_p_start;
input   grp_scalel_fu_663_p_ready;
input   grp_scalel_fu_663_p_done;
input   grp_scalel_fu_663_p_idle;
output  [15:0] grp_uppol1_fu_669_p_din1;
output  [14:0] grp_uppol1_fu_669_p_din2;
output  [31:0] grp_uppol1_fu_669_p_din3;
output  [31:0] grp_uppol1_fu_669_p_din4;
input  [15:0] grp_uppol1_fu_669_p_dout0;
output   grp_uppol1_fu_669_p_start;
input   grp_uppol1_fu_669_p_ready;
input   grp_uppol1_fu_669_p_done;
input   grp_uppol1_fu_669_p_idle;
output  [15:0] grp_uppol2_fu_676_p_din1;
output  [14:0] grp_uppol2_fu_676_p_din2;
output  [31:0] grp_uppol2_fu_676_p_din3;
output  [31:0] grp_uppol2_fu_676_p_din4;
output  [31:0] grp_uppol2_fu_676_p_din5;
input  [14:0] grp_uppol2_fu_676_p_dout0;
output   grp_uppol2_fu_676_p_start;
input   grp_uppol2_fu_676_p_ready;
input   grp_uppol2_fu_676_p_done;
input   grp_uppol2_fu_676_p_idle;
output  [1:0] tmp_s_logsch_fu_684_p_din1;
output  [14:0] tmp_s_logsch_fu_684_p_din2;
input  [14:0] tmp_s_logsch_fu_684_p_dout0;
input   tmp_s_logsch_fu_684_p_ready;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] dec_del_bpl_address0;
reg dec_del_bpl_ce0;
reg dec_del_bpl_we0;
reg[2:0] dec_del_dltx_address0;
reg dec_del_dltx_ce0;
reg dec_del_dltx_we0;
reg dec_del_dltx_ce1;
reg dec_del_dltx_we1;
reg[30:0] dec_rlt1_o;
reg dec_rlt1_o_ap_vld;
reg[15:0] dec_al1_o;
reg dec_al1_o_ap_vld;
reg[30:0] dec_rlt2_o;
reg dec_rlt2_o_ap_vld;
reg[14:0] dec_al2_o;
reg dec_al2_o_ap_vld;
reg[14:0] dec_detl_o;
reg dec_detl_o_ap_vld;
reg qq4_code4_table_ce0;
reg[14:0] dec_nbl_o;
reg dec_nbl_o_ap_vld;
reg[31:0] dec_plt1_o;
reg dec_plt1_o_ap_vld;
reg[31:0] dec_plt2_o;
reg dec_plt2_o_ap_vld;
reg[2:0] dec_del_bph_address0;
reg dec_del_bph_ce0;
reg dec_del_bph_we0;
reg[2:0] dec_del_dhx_address0;
reg dec_del_dhx_ce0;
reg dec_del_dhx_we0;
reg dec_del_dhx_ce1;
reg dec_del_dhx_we1;
reg[30:0] dec_rh1_o;
reg dec_rh1_o_ap_vld;
reg[15:0] dec_ah1_o;
reg dec_ah1_o_ap_vld;
reg[30:0] dec_rh2_o;
reg dec_rh2_o_ap_vld;
reg[14:0] dec_ah2_o;
reg dec_ah2_o_ap_vld;
reg[14:0] dec_deth_o;
reg dec_deth_o_ap_vld;
reg[14:0] dec_nbh_o;
reg dec_nbh_o_ap_vld;
reg[31:0] dec_ph1_o;
reg dec_ph1_o_ap_vld;
reg[31:0] dec_ph2_o;
reg dec_ph2_o_ap_vld;
reg[3:0] accumc_address0;
reg accumc_ce0;
reg accumc_we0;
reg[31:0] accumc_d0;
reg h_ce0;
reg h_ce1;
reg[3:0] accumd_address0;
reg accumd_ce0;
reg accumd_we0;
reg[31:0] accumd_d0;
reg xout1_ap_vld;
reg xout2_ap_vld;

(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] qq6_code6_table_address0;
reg    qq6_code6_table_ce0;
wire  signed [15:0] qq6_code6_table_q0;
reg   [14:0] reg_407;
wire    ap_CS_fsm_state4;
wire    grp_filtez_fu_317_ap_done;
wire    grp_upzero_fu_352_ap_done;
reg    ap_block_state4_on_subcall_done;
wire    ap_CS_fsm_state6;
wire    grp_uppol1_fu_380_ap_done;
reg    ap_block_state6_on_subcall_done;
wire   [5:0] trunc_ln23_fu_422_p1;
reg   [5:0] trunc_ln23_reg_1133;
wire    ap_CS_fsm_state2;
reg   [1:0] trunc_ln_reg_1138;
reg   [3:0] lshr_ln_reg_1143;
wire  signed [13:0] trunc_ln364_1_fu_478_p4;
reg  signed [13:0] trunc_ln364_1_reg_1148;
wire   [31:0] add_ln367_fu_492_p2;
reg   [31:0] add_ln367_reg_1153;
wire    ap_CS_fsm_state3;
reg   [14:0] dec_ah2_load_reg_1177;
wire  signed [15:0] sext_ln365_fu_526_p1;
reg  signed [15:0] sext_ln365_reg_1182;
reg   [14:0] tmp_19_reg_1187;
reg   [31:0] dec_ph1_load_reg_1192;
reg   [31:0] dec_ph2_load_reg_1198;
wire   [31:0] grp_filtez_fu_317_ap_return;
reg   [31:0] tmp_reg_1203;
reg   [31:0] tmp_s_reg_1215;
reg  signed [15:0] trunc_ln345_1_reg_1220;
reg   [15:0] trunc_ln2_reg_1227;
reg   [14:0] tmp_13_reg_1232;
wire   [31:0] add_ln347_fu_671_p2;
reg   [31:0] add_ln347_reg_1237;
wire    ap_CS_fsm_state5;
wire   [31:0] add_ln350_fu_677_p2;
reg   [31:0] add_ln350_reg_1243;
reg   [31:0] dec_plt1_load_reg_1249;
reg   [31:0] dec_plt2_load_reg_1255;
wire   [31:0] add_ln371_fu_727_p2;
reg   [31:0] add_ln371_reg_1260;
wire   [31:0] sub_ln378_fu_772_p2;
reg   [31:0] sub_ln378_reg_1266;
wire    ap_CS_fsm_state8;
wire  signed [31:0] add_ln379_fu_776_p2;
reg  signed [31:0] add_ln379_reg_1271;
wire    ap_CS_fsm_state9;
wire   [3:0] trunc_ln405_fu_1062_p1;
reg   [3:0] trunc_ln405_reg_1316;
wire    ap_CS_fsm_state12;
wire    grp_filtez_fu_317_ap_start;
wire    grp_filtez_fu_317_ap_idle;
wire    grp_filtez_fu_317_ap_ready;
wire   [2:0] grp_filtez_fu_317_bpl_address0;
wire    grp_filtez_fu_317_bpl_ce0;
reg   [31:0] grp_filtez_fu_317_bpl_q0;
wire   [2:0] grp_filtez_fu_317_dlt_address0;
wire    grp_filtez_fu_317_dlt_ce0;
reg   [15:0] grp_filtez_fu_317_dlt_q0;
wire    grp_logscl_fu_327_ap_ready;
wire    grp_scalel_fu_341_ap_ready;
reg   [14:0] grp_scalel_fu_341_nbl;
reg   [3:0] grp_scalel_fu_341_shift_constant;
wire    grp_upzero_fu_352_ap_start;
wire    grp_upzero_fu_352_ap_idle;
wire    grp_upzero_fu_352_ap_ready;
reg   [15:0] grp_upzero_fu_352_dlt;
wire   [2:0] grp_upzero_fu_352_dlti_address0;
wire    grp_upzero_fu_352_dlti_ce0;
wire    grp_upzero_fu_352_dlti_we0;
wire   [15:0] grp_upzero_fu_352_dlti_d0;
reg   [15:0] grp_upzero_fu_352_dlti_q0;
wire   [2:0] grp_upzero_fu_352_dlti_address1;
wire    grp_upzero_fu_352_dlti_ce1;
wire    grp_upzero_fu_352_dlti_we1;
wire   [15:0] grp_upzero_fu_352_dlti_d1;
reg   [15:0] grp_upzero_fu_352_dlti_q1;
wire   [2:0] grp_upzero_fu_352_bli_address0;
wire    grp_upzero_fu_352_bli_ce0;
wire    grp_upzero_fu_352_bli_we0;
wire   [31:0] grp_upzero_fu_352_bli_d0;
reg   [31:0] grp_upzero_fu_352_bli_q0;
wire    grp_uppol2_fu_363_ap_ready;
reg   [15:0] grp_uppol2_fu_363_al1;
reg   [14:0] grp_uppol2_fu_363_al2;
reg   [31:0] grp_uppol2_fu_363_plt;
reg   [31:0] grp_uppol2_fu_363_plt1;
reg   [31:0] grp_uppol2_fu_363_plt2;
reg   [30:0] grp_filtep_fu_372_rlt1;
reg   [15:0] grp_filtep_fu_372_al1;
reg   [30:0] grp_filtep_fu_372_rlt2;
reg   [14:0] grp_filtep_fu_372_al2;
wire    grp_uppol1_fu_380_ap_ready;
reg   [15:0] grp_uppol1_fu_380_al1;
reg   [31:0] grp_uppol1_fu_380_plt;
reg   [31:0] grp_uppol1_fu_380_plt1;
reg    grp_filtez_fu_317_ap_start_reg;
reg    grp_logscl_fu_327_ap_start_reg;
reg    grp_scalel_fu_341_ap_start_reg;
reg    grp_upzero_fu_352_ap_start_reg;
reg    grp_uppol2_fu_363_ap_start_reg;
reg    grp_uppol1_fu_380_ap_start_reg;
wire    ap_CS_fsm_state7;
wire   [63:0] zext_ln345_fu_498_p1;
wire   [63:0] zext_ln346_fu_506_p1;
wire   [63:0] zext_ln389_fu_851_p1;
wire   [0:0] icmp_ln389_fu_836_p2;
wire   [63:0] zext_ln335_fu_863_p1;
wire   [63:0] zext_ln391_fu_874_p1;
wire   [63:0] zext_ln335_2_fu_1072_p1;
wire   [0:0] icmp_ln405_fu_1047_p2;
wire   [63:0] zext_ln335_1_fu_1099_p1;
wire    ap_CS_fsm_state13;
wire   [30:0] add_ln354_fu_693_p2;
wire   [30:0] trunc_ln372_fu_732_p1;
wire    ap_CS_fsm_state11;
reg   [4:0] idx_fu_172;
wire   [4:0] add_ln335_fu_857_p2;
reg   [49:0] xa2_2_fu_176;
wire   [49:0] xa2_5_fu_933_p2;
wire  signed [49:0] sext_ln333_1_fu_819_p1;
wire    ap_CS_fsm_state10;
reg   [49:0] xa1_2_fu_180;
wire   [49:0] xa1_5_fu_913_p2;
wire  signed [49:0] sext_ln333_fu_810_p1;
reg   [3:0] i_fu_184;
wire   [3:0] i_15_fu_842_p2;
reg   [4:0] idx22_fu_188;
wire   [4:0] add_ln405_fu_1078_p2;
reg   [3:0] i_9_fu_192;
wire   [3:0] i_17_fu_1053_p2;
reg  signed [31:0] grp_fu_396_p0;
wire  signed [38:0] sext_ln386_fu_814_p1;
wire  signed [38:0] sext_ln395_fu_957_p1;
wire  signed [6:0] grp_fu_396_p1;
wire   [1:0] tmp_23_fu_454_p5;
wire  signed [13:0] tmp_23_fu_454_p6;
wire   [14:0] mul_ln364_fu_472_p1;
wire   [28:0] mul_ln364_fu_472_p2;
wire  signed [31:0] sext_ln364_1_fu_488_p1;
wire   [14:0] mul_ln345_fu_594_p1;
wire   [30:0] zext_ln345_1_fu_586_p1;
wire   [30:0] mul_ln345_fu_594_p2;
wire   [14:0] mul_ln346_fu_614_p1;
wire   [30:0] mul_ln346_fu_614_p2;
wire   [31:0] add_ln344_fu_654_p2;
wire  signed [31:0] sext_ln346_2_fu_668_p1;
wire  signed [31:0] sext_ln345_1_fu_662_p1;
wire  signed [30:0] sext_ln346_1_fu_665_p1;
wire   [30:0] trunc_ln345_fu_658_p1;
wire   [35:0] shl_ln_fu_780_p3;
wire   [33:0] shl_ln385_1_fu_792_p3;
wire  signed [36:0] sext_ln385_fu_788_p1;
wire  signed [36:0] sext_ln385_1_fu_800_p1;
wire   [36:0] xa1_fu_804_p2;
wire   [38:0] grp_fu_396_p2;
wire   [4:0] add_ln391_fu_868_p2;
wire   [46:0] mul_ln391_fu_388_p2;
wire  signed [49:0] sext_ln391_2_fu_909_p1;
wire   [46:0] mul_ln392_fu_392_p2;
wire  signed [49:0] sext_ln392_2_fu_929_p1;
wire  signed [45:0] sext_ln395_1_fu_962_p1;
wire   [45:0] trunc_ln389_1_fu_953_p1;
wire   [35:0] shl_ln3_fu_972_p3;
wire   [33:0] shl_ln396_1_fu_984_p3;
wire  signed [36:0] sext_ln396_fu_980_p1;
wire  signed [36:0] sext_ln396_1_fu_992_p1;
wire   [36:0] sub_ln396_fu_996_p2;
wire  signed [45:0] sext_ln396_2_fu_1002_p1;
wire   [45:0] trunc_ln389_fu_949_p1;
wire   [45:0] xa1_4_fu_966_p2;
wire   [45:0] xa2_4_fu_1006_p2;
wire   [3:0] add_ln335_2_fu_1066_p2;
wire   [3:0] add_ln335_1_fu_1094_p2;
reg   [12:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire   [28:0] mul_ln364_fu_472_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
#0 grp_filtez_fu_317_ap_start_reg = 1'b0;
#0 grp_logscl_fu_327_ap_start_reg = 1'b0;
#0 grp_scalel_fu_341_ap_start_reg = 1'b0;
#0 grp_upzero_fu_352_ap_start_reg = 1'b0;
#0 grp_uppol2_fu_363_ap_start_reg = 1'b0;
#0 grp_uppol1_fu_380_ap_start_reg = 1'b0;
#0 idx_fu_172 = 5'd0;
#0 xa2_2_fu_176 = 50'd0;
#0 xa1_2_fu_180 = 50'd0;
#0 i_fu_184 = 4'd0;
#0 idx22_fu_188 = 5'd0;
#0 i_9_fu_192 = 4'd0;
end

adpcm_main_decode_qq6_code6_table_ROM_AUTO_1R #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
qq6_code6_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(qq6_code6_table_address0),
    .ce0(qq6_code6_table_ce0),
    .q0(qq6_code6_table_q0)
);

adpcm_main_filtez grp_filtez_fu_317(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_filtez_fu_317_ap_start),
    .ap_done(grp_filtez_fu_317_ap_done),
    .ap_idle(grp_filtez_fu_317_ap_idle),
    .ap_ready(grp_filtez_fu_317_ap_ready),
    .bpl_address0(grp_filtez_fu_317_bpl_address0),
    .bpl_ce0(grp_filtez_fu_317_bpl_ce0),
    .bpl_q0(grp_filtez_fu_317_bpl_q0),
    .dlt_address0(grp_filtez_fu_317_dlt_address0),
    .dlt_ce0(grp_filtez_fu_317_dlt_ce0),
    .dlt_q0(grp_filtez_fu_317_dlt_q0),
    .ap_return(grp_filtez_fu_317_ap_return)
);

adpcm_main_upzero grp_upzero_fu_352(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_upzero_fu_352_ap_start),
    .ap_done(grp_upzero_fu_352_ap_done),
    .ap_idle(grp_upzero_fu_352_ap_idle),
    .ap_ready(grp_upzero_fu_352_ap_ready),
    .dlt(grp_upzero_fu_352_dlt),
    .dlti_address0(grp_upzero_fu_352_dlti_address0),
    .dlti_ce0(grp_upzero_fu_352_dlti_ce0),
    .dlti_we0(grp_upzero_fu_352_dlti_we0),
    .dlti_d0(grp_upzero_fu_352_dlti_d0),
    .dlti_q0(grp_upzero_fu_352_dlti_q0),
    .dlti_address1(grp_upzero_fu_352_dlti_address1),
    .dlti_ce1(grp_upzero_fu_352_dlti_ce1),
    .dlti_we1(grp_upzero_fu_352_dlti_we1),
    .dlti_d1(grp_upzero_fu_352_dlti_d1),
    .dlti_q1(grp_upzero_fu_352_dlti_q1),
    .bli_address0(grp_upzero_fu_352_bli_address0),
    .bli_ce0(grp_upzero_fu_352_bli_ce0),
    .bli_we0(grp_upzero_fu_352_bli_we0),
    .bli_d0(grp_upzero_fu_352_bli_d0),
    .bli_q0(grp_upzero_fu_352_bli_q0)
);

adpcm_main_mul_15s_32s_47_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 47 ))
mul_15s_32s_47_1_1_U130(
    .din0(h_q1),
    .din1(accumc_q0),
    .dout(mul_ln391_fu_388_p2)
);

adpcm_main_mul_15s_32s_47_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 47 ))
mul_15s_32s_47_1_1_U131(
    .din0(h_q0),
    .din1(accumd_q0),
    .dout(mul_ln392_fu_392_p2)
);

adpcm_main_mul_32s_7s_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 39 ))
mul_32s_7s_39_1_1_U132(
    .din0(grp_fu_396_p0),
    .din1(grp_fu_396_p1),
    .dout(grp_fu_396_p2)
);

adpcm_main_mux_4_2_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 14 ),
    .din3_WIDTH( 14 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 14 ))
mux_4_2_14_1_1_U133(
    .din0(14'd8976),
    .din1(14'd14768),
    .din2(14'd7408),
    .din3(14'd1616),
    .din4(tmp_23_fu_454_p5),
    .dout(tmp_23_fu_454_p6)
);

adpcm_main_mul_14s_15ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
mul_14s_15ns_29_1_1_U134(
    .din0(tmp_23_fu_454_p6),
    .din1(mul_ln364_fu_472_p1),
    .dout(mul_ln364_fu_472_p2)
);

adpcm_main_mul_16s_15ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 31 ))
mul_16s_15ns_31_1_1_U135(
    .din0(qq4_code4_table_q0),
    .din1(mul_ln345_fu_594_p1),
    .dout(mul_ln345_fu_594_p2)
);

adpcm_main_mul_16s_15ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 31 ))
mul_16s_15ns_31_1_1_U136(
    .din0(qq6_code6_table_q0),
    .din1(mul_ln346_fu_614_p1),
    .dout(mul_ln346_fu_614_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_filtez_fu_317_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
            grp_filtez_fu_317_ap_start_reg <= 1'b1;
        end else if ((grp_filtez_fu_317_ap_ready == 1'b1)) begin
            grp_filtez_fu_317_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_logscl_fu_327_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_logscl_fu_327_ap_start_reg <= 1'b1;
        end else if ((grp_logscl_fu_327_ap_ready == 1'b1)) begin
            grp_logscl_fu_327_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_scalel_fu_341_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
            grp_scalel_fu_341_ap_start_reg <= 1'b1;
        end else if ((grp_scalel_fu_341_ap_ready == 1'b1)) begin
            grp_scalel_fu_341_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_uppol1_fu_380_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
            grp_uppol1_fu_380_ap_start_reg <= 1'b1;
        end else if ((grp_uppol1_fu_380_ap_ready == 1'b1)) begin
            grp_uppol1_fu_380_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_uppol2_fu_363_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
            grp_uppol2_fu_363_ap_start_reg <= 1'b1;
        end else if ((grp_uppol2_fu_363_ap_ready == 1'b1)) begin
            grp_uppol2_fu_363_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_upzero_fu_352_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
            grp_upzero_fu_352_ap_start_reg <= 1'b1;
        end else if ((grp_upzero_fu_352_ap_ready == 1'b1)) begin
            grp_upzero_fu_352_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln389_fu_836_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        i_9_fu_192 <= 4'd0;
    end else if (((icmp_ln405_fu_1047_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        i_9_fu_192 <= i_17_fu_1053_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_fu_184 <= 4'd0;
    end else if (((icmp_ln389_fu_836_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        i_fu_184 <= i_15_fu_842_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln389_fu_836_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        idx22_fu_188 <= 5'd0;
    end else if (((icmp_ln405_fu_1047_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        idx22_fu_188 <= add_ln405_fu_1078_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        idx_fu_172 <= 5'd0;
    end else if (((icmp_ln389_fu_836_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        idx_fu_172 <= add_ln335_fu_857_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (grp_uppol1_fu_380_ap_done == 1'b1))) begin
        xa1_2_fu_180 <= sext_ln333_fu_810_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        xa1_2_fu_180 <= xa1_5_fu_913_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (grp_uppol1_fu_380_ap_done == 1'b1))) begin
        xa2_2_fu_176 <= sext_ln333_1_fu_819_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        xa2_2_fu_176 <= xa2_5_fu_933_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln347_reg_1237 <= add_ln347_fu_671_p2;
        add_ln350_reg_1243 <= add_ln350_fu_677_p2;
        add_ln371_reg_1260 <= add_ln371_fu_727_p2;
        dec_plt1_load_reg_1249 <= dec_plt1_i;
        dec_plt2_load_reg_1255 <= dec_plt2_i;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln367_reg_1153 <= add_ln367_fu_492_p2;
        lshr_ln_reg_1143 <= {{input_r[5:2]}};
        trunc_ln23_reg_1133 <= trunc_ln23_fu_422_p1;
        trunc_ln364_1_reg_1148 <= {{mul_ln364_fu_472_p2[28:15]}};
        trunc_ln_reg_1138 <= {{input_r[7:6]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln379_reg_1271 <= add_ln379_fu_776_p2;
        sub_ln378_reg_1266 <= sub_ln378_fu_772_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dec_ah2_load_reg_1177 <= dec_ah2_i;
        dec_ph1_load_reg_1192 <= dec_ph1_i;
        dec_ph2_load_reg_1198 <= dec_ph2_i;
        sext_ln365_reg_1182 <= sext_ln365_fu_526_p1;
        tmp_19_reg_1187 <= tmp_s_logsch_fu_684_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6_on_subcall_done)) | ((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_on_subcall_done)))) begin
        reg_407 <= grp_uppol2_fu_676_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_13_reg_1232 <= grp_logscl_fu_657_p_dout0;
        tmp_reg_1203 <= grp_filtez_fu_317_ap_return;
        tmp_s_reg_1215 <= grp_filtep_fu_650_p_dout0;
        trunc_ln2_reg_1227 <= {{mul_ln346_fu_614_p2[30:15]}};
        trunc_ln345_1_reg_1220 <= {{mul_ln345_fu_594_p2[30:15]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        trunc_ln405_reg_1316 <= trunc_ln405_fu_1062_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        accumc_address0 = zext_ln335_1_fu_1099_p1;
    end else if (((icmp_ln405_fu_1047_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        accumc_address0 = 4'd0;
    end else if (((icmp_ln405_fu_1047_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        accumc_address0 = zext_ln335_2_fu_1072_p1;
    end else if (((icmp_ln389_fu_836_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        accumc_address0 = 4'd10;
    end else if (((icmp_ln389_fu_836_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        accumc_address0 = zext_ln389_fu_851_p1;
    end else begin
        accumc_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((icmp_ln405_fu_1047_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)) | ((icmp_ln389_fu_836_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9)) | ((icmp_ln405_fu_1047_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)) | ((icmp_ln389_fu_836_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        accumc_ce0 = 1'b1;
    end else begin
        accumc_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        accumc_d0 = accumc_q0;
    end else if (((icmp_ln405_fu_1047_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        accumc_d0 = sub_ln378_reg_1266;
    end else begin
        accumc_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((icmp_ln405_fu_1047_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)))) begin
        accumc_we0 = 1'b1;
    end else begin
        accumc_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        accumd_address0 = zext_ln335_1_fu_1099_p1;
    end else if (((icmp_ln405_fu_1047_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        accumd_address0 = 4'd0;
    end else if (((icmp_ln405_fu_1047_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        accumd_address0 = zext_ln335_2_fu_1072_p1;
    end else if (((icmp_ln389_fu_836_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        accumd_address0 = 4'd10;
    end else if (((icmp_ln389_fu_836_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        accumd_address0 = zext_ln389_fu_851_p1;
    end else begin
        accumd_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((icmp_ln405_fu_1047_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)) | ((icmp_ln389_fu_836_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9)) | ((icmp_ln405_fu_1047_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)) | ((icmp_ln389_fu_836_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        accumd_ce0 = 1'b1;
    end else begin
        accumd_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        accumd_d0 = accumd_q0;
    end else if (((icmp_ln405_fu_1047_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        accumd_d0 = add_ln379_reg_1271;
    end else begin
        accumd_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((icmp_ln405_fu_1047_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)))) begin
        accumd_we0 = 1'b1;
    end else begin
        accumd_we0 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_filtez_fu_317_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state4_on_subcall_done)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state6_on_subcall_done)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((grp_uppol1_fu_669_p_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((icmp_ln405_fu_1047_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln405_fu_1047_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        dec_ah1_o = grp_uppol1_fu_669_p_dout0;
    end else begin
        dec_ah1_o = dec_ah1_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6_on_subcall_done))) begin
        dec_ah1_o_ap_vld = 1'b1;
    end else begin
        dec_ah1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dec_ah2_o = grp_uppol2_fu_676_p_dout0;
    end else begin
        dec_ah2_o = dec_ah2_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_on_subcall_done))) begin
        dec_ah2_o_ap_vld = 1'b1;
    end else begin
        dec_ah2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dec_al1_o = grp_uppol1_fu_669_p_dout0;
    end else begin
        dec_al1_o = dec_al1_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (grp_uppol1_fu_380_ap_done == 1'b1))) begin
        dec_al1_o_ap_vld = 1'b1;
    end else begin
        dec_al1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        dec_al2_o = grp_uppol2_fu_676_p_dout0;
    end else begin
        dec_al2_o = dec_al2_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6_on_subcall_done))) begin
        dec_al2_o_ap_vld = 1'b1;
    end else begin
        dec_al2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dec_del_bph_address0 = grp_upzero_fu_352_bli_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dec_del_bph_address0 = grp_filtez_fu_317_bpl_address0;
    end else begin
        dec_del_bph_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dec_del_bph_ce0 = grp_upzero_fu_352_bli_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dec_del_bph_ce0 = grp_filtez_fu_317_bpl_ce0;
    end else begin
        dec_del_bph_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dec_del_bph_we0 = grp_upzero_fu_352_bli_we0;
    end else begin
        dec_del_bph_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        dec_del_bpl_address0 = grp_upzero_fu_352_bli_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        dec_del_bpl_address0 = grp_filtez_fu_317_bpl_address0;
    end else begin
        dec_del_bpl_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        dec_del_bpl_ce0 = grp_upzero_fu_352_bli_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        dec_del_bpl_ce0 = grp_filtez_fu_317_bpl_ce0;
    end else begin
        dec_del_bpl_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        dec_del_bpl_we0 = grp_upzero_fu_352_bli_we0;
    end else begin
        dec_del_bpl_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dec_del_dhx_address0 = grp_upzero_fu_352_dlti_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dec_del_dhx_address0 = grp_filtez_fu_317_dlt_address0;
    end else begin
        dec_del_dhx_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dec_del_dhx_ce0 = grp_upzero_fu_352_dlti_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dec_del_dhx_ce0 = grp_filtez_fu_317_dlt_ce0;
    end else begin
        dec_del_dhx_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dec_del_dhx_ce1 = grp_upzero_fu_352_dlti_ce1;
    end else begin
        dec_del_dhx_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dec_del_dhx_we0 = grp_upzero_fu_352_dlti_we0;
    end else begin
        dec_del_dhx_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dec_del_dhx_we1 = grp_upzero_fu_352_dlti_we1;
    end else begin
        dec_del_dhx_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        dec_del_dltx_address0 = grp_upzero_fu_352_dlti_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        dec_del_dltx_address0 = grp_filtez_fu_317_dlt_address0;
    end else begin
        dec_del_dltx_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        dec_del_dltx_ce0 = grp_upzero_fu_352_dlti_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        dec_del_dltx_ce0 = grp_filtez_fu_317_dlt_ce0;
    end else begin
        dec_del_dltx_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        dec_del_dltx_ce1 = grp_upzero_fu_352_dlti_ce1;
    end else begin
        dec_del_dltx_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        dec_del_dltx_we0 = grp_upzero_fu_352_dlti_we0;
    end else begin
        dec_del_dltx_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        dec_del_dltx_we1 = grp_upzero_fu_352_dlti_we1;
    end else begin
        dec_del_dltx_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dec_deth_o = grp_scalel_fu_663_p_dout0;
    end else begin
        dec_deth_o = dec_deth_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_on_subcall_done))) begin
        dec_deth_o_ap_vld = 1'b1;
    end else begin
        dec_deth_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        dec_detl_o = grp_scalel_fu_663_p_dout0;
    end else begin
        dec_detl_o = dec_detl_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6_on_subcall_done))) begin
        dec_detl_o_ap_vld = 1'b1;
    end else begin
        dec_detl_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dec_nbh_o = tmp_s_logsch_fu_684_p_dout0;
    end else begin
        dec_nbh_o = dec_nbh_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dec_nbh_o_ap_vld = 1'b1;
    end else begin
        dec_nbh_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dec_nbl_o = grp_logscl_fu_657_p_dout0;
    end else begin
        dec_nbl_o = dec_nbl_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_on_subcall_done))) begin
        dec_nbl_o_ap_vld = 1'b1;
    end else begin
        dec_nbl_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dec_ph1_o = add_ln367_reg_1153;
    end else begin
        dec_ph1_o = dec_ph1_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dec_ph1_o_ap_vld = 1'b1;
    end else begin
        dec_ph1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dec_ph2_o = dec_ph1_i;
    end else begin
        dec_ph2_o = dec_ph2_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dec_ph2_o_ap_vld = 1'b1;
    end else begin
        dec_ph2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        dec_plt1_o = add_ln350_fu_677_p2;
    end else begin
        dec_plt1_o = dec_plt1_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        dec_plt1_o_ap_vld = 1'b1;
    end else begin
        dec_plt1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        dec_plt2_o = dec_plt1_i;
    end else begin
        dec_plt2_o = dec_plt2_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        dec_plt2_o_ap_vld = 1'b1;
    end else begin
        dec_plt2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        dec_rh1_o = trunc_ln372_fu_732_p1;
    end else begin
        dec_rh1_o = dec_rh1_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        dec_rh1_o_ap_vld = 1'b1;
    end else begin
        dec_rh1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        dec_rh2_o = dec_rh1_i;
    end else begin
        dec_rh2_o = dec_rh2_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        dec_rh2_o_ap_vld = 1'b1;
    end else begin
        dec_rh2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        dec_rlt1_o = add_ln354_fu_693_p2;
    end else begin
        dec_rlt1_o = dec_rlt1_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        dec_rlt1_o_ap_vld = 1'b1;
    end else begin
        dec_rlt1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dec_rlt2_o = dec_rlt1_i;
    end else begin
        dec_rlt2_o = dec_rlt2_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_on_subcall_done))) begin
        dec_rlt2_o_ap_vld = 1'b1;
    end else begin
        dec_rlt2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_filtep_fu_372_al1 = dec_ah1_i;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_filtep_fu_372_al1 = dec_al1_i;
    end else begin
        grp_filtep_fu_372_al1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_filtep_fu_372_al2 = dec_ah2_load_reg_1177;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_filtep_fu_372_al2 = dec_al2_i;
    end else begin
        grp_filtep_fu_372_al2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_filtep_fu_372_rlt1 = dec_rh1_i;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_filtep_fu_372_rlt1 = dec_rlt1_i;
    end else begin
        grp_filtep_fu_372_rlt1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_filtep_fu_372_rlt2 = dec_rh2_i;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_filtep_fu_372_rlt2 = dec_rlt2_i;
    end else begin
        grp_filtep_fu_372_rlt2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_filtez_fu_317_bpl_q0 = dec_del_bpl_q0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_filtez_fu_317_bpl_q0 = dec_del_bph_q0;
    end else begin
        grp_filtez_fu_317_bpl_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_filtez_fu_317_dlt_q0 = dec_del_dltx_q0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_filtez_fu_317_dlt_q0 = dec_del_dhx_q0;
    end else begin
        grp_filtez_fu_317_dlt_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_396_p0 = sext_ln395_fu_957_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_396_p0 = sext_ln386_fu_814_p1;
    end else begin
        grp_fu_396_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_scalel_fu_341_nbl = tmp_13_reg_1232;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_scalel_fu_341_nbl = tmp_19_reg_1187;
    end else begin
        grp_scalel_fu_341_nbl = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_scalel_fu_341_shift_constant = 4'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_scalel_fu_341_shift_constant = 4'd10;
    end else begin
        grp_scalel_fu_341_shift_constant = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_uppol1_fu_380_al1 = dec_al1_i;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_uppol1_fu_380_al1 = dec_ah1_i;
    end else begin
        grp_uppol1_fu_380_al1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_uppol1_fu_380_plt = add_ln350_reg_1243;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_uppol1_fu_380_plt = add_ln367_reg_1153;
    end else begin
        grp_uppol1_fu_380_plt = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_uppol1_fu_380_plt1 = dec_plt1_load_reg_1249;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_uppol1_fu_380_plt1 = dec_ph1_load_reg_1192;
    end else begin
        grp_uppol1_fu_380_plt1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_uppol2_fu_363_al1 = dec_al1_i;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_uppol2_fu_363_al1 = dec_ah1_i;
    end else begin
        grp_uppol2_fu_363_al1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_uppol2_fu_363_al2 = dec_al2_i;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_uppol2_fu_363_al2 = dec_ah2_i;
    end else begin
        grp_uppol2_fu_363_al2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_uppol2_fu_363_plt = add_ln350_reg_1243;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_uppol2_fu_363_plt = add_ln367_reg_1153;
    end else begin
        grp_uppol2_fu_363_plt = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_uppol2_fu_363_plt1 = dec_plt1_load_reg_1249;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_uppol2_fu_363_plt1 = dec_ph1_load_reg_1192;
    end else begin
        grp_uppol2_fu_363_plt1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_uppol2_fu_363_plt2 = dec_plt2_load_reg_1255;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_uppol2_fu_363_plt2 = dec_ph2_load_reg_1198;
    end else begin
        grp_uppol2_fu_363_plt2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_upzero_fu_352_bli_q0 = dec_del_bpl_q0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_upzero_fu_352_bli_q0 = dec_del_bph_q0;
    end else begin
        grp_upzero_fu_352_bli_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_upzero_fu_352_dlt = trunc_ln345_1_reg_1220;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_upzero_fu_352_dlt = sext_ln365_reg_1182;
    end else begin
        grp_upzero_fu_352_dlt = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_upzero_fu_352_dlti_q0 = dec_del_dltx_q0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_upzero_fu_352_dlti_q0 = dec_del_dhx_q0;
    end else begin
        grp_upzero_fu_352_dlti_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_upzero_fu_352_dlti_q1 = dec_del_dltx_q1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_upzero_fu_352_dlti_q1 = dec_del_dhx_q1;
    end else begin
        grp_upzero_fu_352_dlti_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        h_ce0 = 1'b1;
    end else begin
        h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        h_ce1 = 1'b1;
    end else begin
        h_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        qq4_code4_table_ce0 = 1'b1;
    end else begin
        qq4_code4_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        qq6_code6_table_ce0 = 1'b1;
    end else begin
        qq6_code6_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        xout1_ap_vld = 1'b1;
    end else begin
        xout1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        xout2_ap_vld = 1'b1;
    end else begin
        xout2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_filtez_fu_317_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_uppol1_fu_380_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln389_fu_836_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln405_fu_1047_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln335_1_fu_1094_p2 = ($signed(trunc_ln405_reg_1316) + $signed(4'd10));

assign add_ln335_2_fu_1066_p2 = ($signed(trunc_ln405_fu_1062_p1) + $signed(4'd9));

assign add_ln335_fu_857_p2 = (idx_fu_172 + 5'd2);

assign add_ln344_fu_654_p2 = (tmp_s_reg_1215 + tmp_reg_1203);

assign add_ln347_fu_671_p2 = ($signed(sext_ln346_2_fu_668_p1) + $signed(add_ln344_fu_654_p2));

assign add_ln350_fu_677_p2 = ($signed(sext_ln345_1_fu_662_p1) + $signed(tmp_reg_1203));

assign add_ln354_fu_693_p2 = ($signed(sext_ln346_1_fu_665_p1) + $signed(trunc_ln345_fu_658_p1));

assign add_ln367_fu_492_p2 = ($signed(sext_ln364_1_fu_488_p1) + $signed(grp_filtez_fu_317_ap_return));

assign add_ln371_fu_727_p2 = (add_ln367_reg_1153 + grp_filtep_fu_650_p_dout0);

assign add_ln379_fu_776_p2 = (add_ln371_reg_1260 + add_ln347_reg_1237);

assign add_ln391_fu_868_p2 = (idx_fu_172 + 5'd3);

assign add_ln405_fu_1078_p2 = ($signed(idx22_fu_188) + $signed(5'd31));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state4_on_subcall_done = ((grp_uppol2_fu_676_p_done == 1'b0) | (grp_upzero_fu_352_ap_done == 1'b0) | (grp_scalel_fu_663_p_done == 1'b0) | (grp_logscl_fu_657_p_done == 1'b0) | (grp_filtez_fu_317_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state6_on_subcall_done = ((grp_uppol1_fu_669_p_done == 1'b0) | (grp_uppol2_fu_676_p_done == 1'b0) | (grp_upzero_fu_352_ap_done == 1'b0) | (grp_scalel_fu_663_p_done == 1'b0));
end

assign dec_del_bph_d0 = grp_upzero_fu_352_bli_d0;

assign dec_del_bpl_d0 = grp_upzero_fu_352_bli_d0;

assign dec_del_dhx_address1 = grp_upzero_fu_352_dlti_address1;

assign dec_del_dhx_d0 = grp_upzero_fu_352_dlti_d0;

assign dec_del_dhx_d1 = grp_upzero_fu_352_dlti_d1;

assign dec_del_dltx_address1 = grp_upzero_fu_352_dlti_address1;

assign dec_del_dltx_d0 = grp_upzero_fu_352_dlti_d0;

assign dec_del_dltx_d1 = grp_upzero_fu_352_dlti_d1;

assign grp_filtep_fu_650_p_din1 = grp_filtep_fu_372_rlt1;

assign grp_filtep_fu_650_p_din2 = grp_filtep_fu_372_al1;

assign grp_filtep_fu_650_p_din3 = grp_filtep_fu_372_rlt2;

assign grp_filtep_fu_650_p_din4 = grp_filtep_fu_372_al2;

assign grp_filtez_fu_317_ap_start = grp_filtez_fu_317_ap_start_reg;

assign grp_fu_396_p1 = 39'd549755813844;

assign grp_logscl_fu_327_ap_ready = grp_logscl_fu_657_p_ready;

assign grp_logscl_fu_657_p_din1 = trunc_ln23_reg_1133;

assign grp_logscl_fu_657_p_din2 = dec_nbl_i;

assign grp_logscl_fu_657_p_start = grp_logscl_fu_327_ap_start_reg;

assign grp_scalel_fu_341_ap_ready = grp_scalel_fu_663_p_ready;

assign grp_scalel_fu_663_p_din1 = grp_scalel_fu_341_nbl;

assign grp_scalel_fu_663_p_din2 = grp_scalel_fu_341_shift_constant;

assign grp_scalel_fu_663_p_start = grp_scalel_fu_341_ap_start_reg;

assign grp_uppol1_fu_380_ap_done = grp_uppol1_fu_669_p_done;

assign grp_uppol1_fu_380_ap_ready = grp_uppol1_fu_669_p_ready;

assign grp_uppol1_fu_669_p_din1 = grp_uppol1_fu_380_al1;

assign grp_uppol1_fu_669_p_din2 = reg_407;

assign grp_uppol1_fu_669_p_din3 = grp_uppol1_fu_380_plt;

assign grp_uppol1_fu_669_p_din4 = grp_uppol1_fu_380_plt1;

assign grp_uppol1_fu_669_p_start = grp_uppol1_fu_380_ap_start_reg;

assign grp_uppol2_fu_363_ap_ready = grp_uppol2_fu_676_p_ready;

assign grp_uppol2_fu_676_p_din1 = grp_uppol2_fu_363_al1;

assign grp_uppol2_fu_676_p_din2 = grp_uppol2_fu_363_al2;

assign grp_uppol2_fu_676_p_din3 = grp_uppol2_fu_363_plt;

assign grp_uppol2_fu_676_p_din4 = grp_uppol2_fu_363_plt1;

assign grp_uppol2_fu_676_p_din5 = grp_uppol2_fu_363_plt2;

assign grp_uppol2_fu_676_p_start = grp_uppol2_fu_363_ap_start_reg;

assign grp_upzero_fu_352_ap_start = grp_upzero_fu_352_ap_start_reg;

assign h_address0 = zext_ln391_fu_874_p1;

assign h_address1 = zext_ln335_fu_863_p1;

assign i_15_fu_842_p2 = (i_fu_184 + 4'd1);

assign i_17_fu_1053_p2 = (i_9_fu_192 + 4'd1);

assign icmp_ln389_fu_836_p2 = ((i_fu_184 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln405_fu_1047_p2 = ((i_9_fu_192 == 4'd10) ? 1'b1 : 1'b0);

assign mul_ln345_fu_594_p1 = zext_ln345_1_fu_586_p1;

assign mul_ln346_fu_614_p1 = zext_ln345_1_fu_586_p1;

assign mul_ln364_fu_472_p1 = mul_ln364_fu_472_p10;

assign mul_ln364_fu_472_p10 = dec_deth_i;

assign qq4_code4_table_address0 = zext_ln345_fu_498_p1;

assign qq6_code6_table_address0 = zext_ln346_fu_506_p1;

assign sext_ln333_1_fu_819_p1 = $signed(grp_fu_396_p2);

assign sext_ln333_fu_810_p1 = $signed(xa1_fu_804_p2);

assign sext_ln345_1_fu_662_p1 = trunc_ln345_1_reg_1220;

assign sext_ln346_1_fu_665_p1 = trunc_ln345_1_reg_1220;

assign sext_ln346_2_fu_668_p1 = $signed(trunc_ln2_reg_1227);

assign sext_ln364_1_fu_488_p1 = trunc_ln364_1_fu_478_p4;

assign sext_ln365_fu_526_p1 = trunc_ln364_1_reg_1148;

assign sext_ln385_1_fu_800_p1 = $signed(shl_ln385_1_fu_792_p3);

assign sext_ln385_fu_788_p1 = $signed(shl_ln_fu_780_p3);

assign sext_ln386_fu_814_p1 = add_ln379_fu_776_p2;

assign sext_ln391_2_fu_909_p1 = $signed(mul_ln391_fu_388_p2);

assign sext_ln392_2_fu_929_p1 = $signed(mul_ln392_fu_392_p2);

assign sext_ln395_1_fu_962_p1 = $signed(grp_fu_396_p2);

assign sext_ln395_fu_957_p1 = $signed(accumc_q0);

assign sext_ln396_1_fu_992_p1 = $signed(shl_ln396_1_fu_984_p3);

assign sext_ln396_2_fu_1002_p1 = $signed(sub_ln396_fu_996_p2);

assign sext_ln396_fu_980_p1 = $signed(shl_ln3_fu_972_p3);

assign shl_ln385_1_fu_792_p3 = {{sub_ln378_fu_772_p2}, {2'd0}};

assign shl_ln396_1_fu_984_p3 = {{accumd_q0}, {2'd0}};

assign shl_ln3_fu_972_p3 = {{accumd_q0}, {4'd0}};

assign shl_ln_fu_780_p3 = {{sub_ln378_fu_772_p2}, {4'd0}};

assign sub_ln378_fu_772_p2 = (add_ln347_reg_1237 - add_ln371_reg_1260);

assign sub_ln396_fu_996_p2 = ($signed(sext_ln396_fu_980_p1) - $signed(sext_ln396_1_fu_992_p1));

assign tmp_23_fu_454_p5 = {{input_r[7:6]}};

assign tmp_s_logsch_fu_684_p_din1 = trunc_ln_reg_1138;

assign tmp_s_logsch_fu_684_p_din2 = dec_nbh_i;

assign trunc_ln23_fu_422_p1 = input_r[5:0];

assign trunc_ln345_fu_658_p1 = add_ln344_fu_654_p2[30:0];

assign trunc_ln364_1_fu_478_p4 = {{mul_ln364_fu_472_p2[28:15]}};

assign trunc_ln372_fu_732_p1 = add_ln371_fu_727_p2[30:0];

assign trunc_ln389_1_fu_953_p1 = xa1_2_fu_180[45:0];

assign trunc_ln389_fu_949_p1 = xa2_2_fu_176[45:0];

assign trunc_ln405_fu_1062_p1 = idx22_fu_188[3:0];

assign xa1_4_fu_966_p2 = ($signed(sext_ln395_1_fu_962_p1) + $signed(trunc_ln389_1_fu_953_p1));

assign xa1_5_fu_913_p2 = ($signed(sext_ln391_2_fu_909_p1) + $signed(xa1_2_fu_180));

assign xa1_fu_804_p2 = ($signed(sext_ln385_fu_788_p1) - $signed(sext_ln385_1_fu_800_p1));

assign xa2_4_fu_1006_p2 = ($signed(sext_ln396_2_fu_1002_p1) + $signed(trunc_ln389_fu_949_p1));

assign xa2_5_fu_933_p2 = ($signed(sext_ln392_2_fu_929_p1) + $signed(xa2_2_fu_176));

assign xout1 = {{xa1_4_fu_966_p2[45:14]}};

assign xout2 = {{xa2_4_fu_1006_p2[45:14]}};

assign zext_ln335_1_fu_1099_p1 = add_ln335_1_fu_1094_p2;

assign zext_ln335_2_fu_1072_p1 = add_ln335_2_fu_1066_p2;

assign zext_ln335_fu_863_p1 = add_ln335_fu_857_p2;

assign zext_ln345_1_fu_586_p1 = dec_detl_i;

assign zext_ln345_fu_498_p1 = lshr_ln_reg_1143;

assign zext_ln346_fu_506_p1 = il;

assign zext_ln389_fu_851_p1 = i_fu_184;

assign zext_ln391_fu_874_p1 = add_ln391_fu_868_p2;

endmodule //adpcm_main_decode
