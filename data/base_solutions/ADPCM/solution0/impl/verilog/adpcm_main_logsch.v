// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module adpcm_main_logsch (
        ap_ready,
        ih,
        nbh,
        ap_return
);


output   ap_ready;
input  [1:0] ih;
input  [14:0] nbh;
output  [14:0] ap_return;

wire   [21:0] shl_ln_fu_58_p3;
wire   [22:0] zext_ln620_1_fu_66_p1;
wire   [22:0] zext_ln620_fu_54_p1;
wire   [22:0] sub_ln620_fu_70_p2;
wire   [15:0] wd_fu_76_p4;
wire   [10:0] tmp_fu_90_p6;
wire  signed [16:0] sext_ln621_fu_104_p1;
wire  signed [16:0] sext_ln618_fu_86_p1;
wire  signed [16:0] add_ln621_fu_108_p2;
wire  signed [31:0] sext_ln622_fu_114_p1;
wire   [0:0] tmp_4_fu_118_p3;
wire   [16:0] select_ln622_fu_126_p3;
wire   [0:0] icmp_ln624_fu_138_p2;
wire   [14:0] trunc_ln624_fu_134_p1;

adpcm_main_mux_4_2_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 11 ))
mux_4_2_11_1_1_U88(
    .din0(11'd798),
    .din1(11'd1834),
    .din2(11'd798),
    .din3(11'd1834),
    .din4(ih),
    .dout(tmp_fu_90_p6)
);

assign add_ln621_fu_108_p2 = ($signed(sext_ln621_fu_104_p1) + $signed(sext_ln618_fu_86_p1));

assign ap_ready = 1'b1;

assign select_ln622_fu_126_p3 = ((tmp_4_fu_118_p3[0:0] == 1'b1) ? 17'd0 : add_ln621_fu_108_p2);

assign sext_ln618_fu_86_p1 = $signed(wd_fu_76_p4);

assign sext_ln621_fu_104_p1 = $signed(tmp_fu_90_p6);

assign sext_ln622_fu_114_p1 = add_ln621_fu_108_p2;

assign shl_ln_fu_58_p3 = {{nbh}, {7'd0}};

assign sub_ln620_fu_70_p2 = (zext_ln620_1_fu_66_p1 - zext_ln620_fu_54_p1);

assign tmp_4_fu_118_p3 = sext_ln622_fu_114_p1[32'd31];

assign trunc_ln624_fu_134_p1 = select_ln622_fu_126_p3[14:0];

assign wd_fu_76_p4 = {{sub_ln620_fu_70_p2[22:7]}};

assign zext_ln620_1_fu_66_p1 = shl_ln_fu_58_p3;

assign zext_ln620_fu_54_p1 = nbh;

assign ap_return = ((icmp_ln624_fu_138_p2[0:0] == 1'b1) ? 15'd22528 : trunc_ln624_fu_134_p1);

assign icmp_ln624_fu_138_p2 = ((select_ln622_fu_126_p3 > 17'd22528) ? 1'b1 : 1'b0);

endmodule //adpcm_main_logsch
