-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity adpcm_main_logsch is
port (
    ap_ready : OUT STD_LOGIC;
    ih : IN STD_LOGIC_VECTOR (1 downto 0);
    nbh : IN STD_LOGIC_VECTOR (14 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (14 downto 0) );
end;


architecture behav of adpcm_main_logsch is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv11_31E : STD_LOGIC_VECTOR (10 downto 0) := "01100011110";
    constant ap_const_lv11_72A : STD_LOGIC_VECTOR (10 downto 0) := "11100101010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv17_5800 : STD_LOGIC_VECTOR (16 downto 0) := "00101100000000000";
    constant ap_const_lv15_5800 : STD_LOGIC_VECTOR (14 downto 0) := "101100000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal shl_ln_fu_58_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln620_1_fu_66_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln620_fu_54_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln620_fu_70_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal wd_fu_76_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_90_p6 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln621_fu_104_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln618_fu_86_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln621_fu_108_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln622_fu_114_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_118_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln622_fu_126_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln624_fu_138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln624_fu_134_p1 : STD_LOGIC_VECTOR (14 downto 0);

    component adpcm_main_mux_4_2_11_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        din3 : IN STD_LOGIC_VECTOR (10 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;



begin
    mux_4_2_11_1_1_U88 : component adpcm_main_mux_4_2_11_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        din2_WIDTH => 11,
        din3_WIDTH => 11,
        din4_WIDTH => 2,
        dout_WIDTH => 11)
    port map (
        din0 => ap_const_lv11_31E,
        din1 => ap_const_lv11_72A,
        din2 => ap_const_lv11_31E,
        din3 => ap_const_lv11_72A,
        din4 => ih,
        dout => tmp_fu_90_p6);




    add_ln621_fu_108_p2 <= std_logic_vector(signed(sext_ln621_fu_104_p1) + signed(sext_ln618_fu_86_p1));
    ap_ready <= ap_const_logic_1;
    ap_return <= 
        ap_const_lv15_5800 when (icmp_ln624_fu_138_p2(0) = '1') else 
        trunc_ln624_fu_134_p1;
    icmp_ln624_fu_138_p2 <= "1" when (unsigned(select_ln622_fu_126_p3) > unsigned(ap_const_lv17_5800)) else "0";
    select_ln622_fu_126_p3 <= 
        ap_const_lv17_0 when (tmp_4_fu_118_p3(0) = '1') else 
        add_ln621_fu_108_p2;
        sext_ln618_fu_86_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(wd_fu_76_p4),17));

        sext_ln621_fu_104_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_90_p6),17));

        sext_ln622_fu_114_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln621_fu_108_p2),32));

    shl_ln_fu_58_p3 <= (nbh & ap_const_lv7_0);
    sub_ln620_fu_70_p2 <= std_logic_vector(unsigned(zext_ln620_1_fu_66_p1) - unsigned(zext_ln620_fu_54_p1));
    tmp_4_fu_118_p3 <= sext_ln622_fu_114_p1(31 downto 31);
    trunc_ln624_fu_134_p1 <= select_ln622_fu_126_p3(15 - 1 downto 0);
    wd_fu_76_p4 <= sub_ln620_fu_70_p2(22 downto 7);
    zext_ln620_1_fu_66_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_58_p3),23));
    zext_ln620_fu_54_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nbh),23));
end behav;
