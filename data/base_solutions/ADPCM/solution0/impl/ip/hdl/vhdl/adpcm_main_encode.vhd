-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity adpcm_main_encode is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    xin1 : IN STD_LOGIC_VECTOR (31 downto 0);
    xin2 : IN STD_LOGIC_VECTOR (31 downto 0);
    tqmf_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    tqmf_ce0 : OUT STD_LOGIC;
    tqmf_we0 : OUT STD_LOGIC;
    tqmf_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    tqmf_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    tqmf_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    tqmf_ce1 : OUT STD_LOGIC;
    tqmf_we1 : OUT STD_LOGIC;
    tqmf_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    tqmf_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    h_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    h_ce0 : OUT STD_LOGIC;
    h_q0 : IN STD_LOGIC_VECTOR (14 downto 0);
    h_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    h_ce1 : OUT STD_LOGIC;
    h_q1 : IN STD_LOGIC_VECTOR (14 downto 0);
    delay_bpl_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    delay_bpl_ce0 : OUT STD_LOGIC;
    delay_bpl_we0 : OUT STD_LOGIC;
    delay_bpl_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    delay_bpl_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    delay_dltx_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    delay_dltx_ce0 : OUT STD_LOGIC;
    delay_dltx_we0 : OUT STD_LOGIC;
    delay_dltx_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    delay_dltx_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    delay_dltx_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    delay_dltx_ce1 : OUT STD_LOGIC;
    delay_dltx_we1 : OUT STD_LOGIC;
    delay_dltx_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    delay_dltx_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    rlt1_i : IN STD_LOGIC_VECTOR (30 downto 0);
    rlt1_o : OUT STD_LOGIC_VECTOR (30 downto 0);
    rlt1_o_ap_vld : OUT STD_LOGIC;
    al1_i : IN STD_LOGIC_VECTOR (15 downto 0);
    al1_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    al1_o_ap_vld : OUT STD_LOGIC;
    rlt2_i : IN STD_LOGIC_VECTOR (30 downto 0);
    rlt2_o : OUT STD_LOGIC_VECTOR (30 downto 0);
    rlt2_o_ap_vld : OUT STD_LOGIC;
    al2_i : IN STD_LOGIC_VECTOR (14 downto 0);
    al2_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    al2_o_ap_vld : OUT STD_LOGIC;
    detl_i : IN STD_LOGIC_VECTOR (14 downto 0);
    detl_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    detl_o_ap_vld : OUT STD_LOGIC;
    il : OUT STD_LOGIC_VECTOR (5 downto 0);
    il_ap_vld : OUT STD_LOGIC;
    qq4_code4_table_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    qq4_code4_table_ce0 : OUT STD_LOGIC;
    qq4_code4_table_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    nbl_i : IN STD_LOGIC_VECTOR (14 downto 0);
    nbl_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    nbl_o_ap_vld : OUT STD_LOGIC;
    wl_code_table_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    wl_code_table_ce0 : OUT STD_LOGIC;
    wl_code_table_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
    ilb_table_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    ilb_table_ce0 : OUT STD_LOGIC;
    ilb_table_q0 : IN STD_LOGIC_VECTOR (11 downto 0);
    ilb_table_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    ilb_table_ce1 : OUT STD_LOGIC;
    ilb_table_q1 : IN STD_LOGIC_VECTOR (11 downto 0);
    plt1_i : IN STD_LOGIC_VECTOR (31 downto 0);
    plt1_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    plt1_o_ap_vld : OUT STD_LOGIC;
    plt2_i : IN STD_LOGIC_VECTOR (31 downto 0);
    plt2_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    plt2_o_ap_vld : OUT STD_LOGIC;
    delay_bph_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    delay_bph_ce0 : OUT STD_LOGIC;
    delay_bph_we0 : OUT STD_LOGIC;
    delay_bph_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    delay_bph_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    delay_dhx_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    delay_dhx_ce0 : OUT STD_LOGIC;
    delay_dhx_we0 : OUT STD_LOGIC;
    delay_dhx_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    delay_dhx_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    delay_dhx_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    delay_dhx_ce1 : OUT STD_LOGIC;
    delay_dhx_we1 : OUT STD_LOGIC;
    delay_dhx_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    delay_dhx_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    rh1_i : IN STD_LOGIC_VECTOR (30 downto 0);
    rh1_o : OUT STD_LOGIC_VECTOR (30 downto 0);
    rh1_o_ap_vld : OUT STD_LOGIC;
    ah1_i : IN STD_LOGIC_VECTOR (15 downto 0);
    ah1_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    ah1_o_ap_vld : OUT STD_LOGIC;
    rh2_i : IN STD_LOGIC_VECTOR (30 downto 0);
    rh2_o : OUT STD_LOGIC_VECTOR (30 downto 0);
    rh2_o_ap_vld : OUT STD_LOGIC;
    ah2_i : IN STD_LOGIC_VECTOR (14 downto 0);
    ah2_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    ah2_o_ap_vld : OUT STD_LOGIC;
    deth_i : IN STD_LOGIC_VECTOR (14 downto 0);
    deth_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    deth_o_ap_vld : OUT STD_LOGIC;
    nbh_i : IN STD_LOGIC_VECTOR (14 downto 0);
    nbh_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    nbh_o_ap_vld : OUT STD_LOGIC;
    ph1_i : IN STD_LOGIC_VECTOR (31 downto 0);
    ph1_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    ph1_o_ap_vld : OUT STD_LOGIC;
    ph2_i : IN STD_LOGIC_VECTOR (31 downto 0);
    ph2_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    ph2_o_ap_vld : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of adpcm_main_encode is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv39_7FFFFFFFD4 : STD_LOGIC_VECTOR (38 downto 0) := "111111111111111111111111111111111010100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv25_234 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000001000110100";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv17_4800 : STD_LOGIC_VECTOR (16 downto 0) := "00100100000000000";
    constant ap_const_lv15_4800 : STD_LOGIC_VECTOR (14 downto 0) := "100100000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv14_2310 : STD_LOGIC_VECTOR (13 downto 0) := "10001100010000";
    constant ap_const_lv14_39B0 : STD_LOGIC_VECTOR (13 downto 0) := "11100110110000";
    constant ap_const_lv14_1CF0 : STD_LOGIC_VECTOR (13 downto 0) := "01110011110000";
    constant ap_const_lv14_650 : STD_LOGIC_VECTOR (13 downto 0) := "00011001010000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv11_31E : STD_LOGIC_VECTOR (10 downto 0) := "01100011110";
    constant ap_const_lv11_72A : STD_LOGIC_VECTOR (10 downto 0) := "11100101010";
    constant ap_const_lv17_5800 : STD_LOGIC_VECTOR (16 downto 0) := "00101100000000000";
    constant ap_const_lv15_5800 : STD_LOGIC_VECTOR (14 downto 0) := "101100000000000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv17_1FF80 : STD_LOGIC_VECTOR (16 downto 0) := "11111111110000000";
    constant ap_const_lv17_80 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv17_3000 : STD_LOGIC_VECTOR (16 downto 0) := "00011000000000000";
    constant ap_const_lv17_1D000 : STD_LOGIC_VECTOR (16 downto 0) := "11101000000000000";
    constant ap_const_lv15_5000 : STD_LOGIC_VECTOR (14 downto 0) := "101000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv18_3FF40 : STD_LOGIC_VECTOR (17 downto 0) := "111111111101000000";
    constant ap_const_lv18_C0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000011000000";
    constant ap_const_lv15_3C00 : STD_LOGIC_VECTOR (14 downto 0) := "011110000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_525 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_filtez_fu_430_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal trunc_ln255_fu_710_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal trunc_ln255_reg_2204 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal trunc_ln255_1_fu_714_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal trunc_ln255_1_reg_2209 : STD_LOGIC_VECTOR (46 downto 0);
    signal tqmf_load_2_reg_2214 : STD_LOGIC_VECTOR (31 downto 0);
    signal tqmf_load_3_reg_2219 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln269_fu_736_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln269_reg_2228 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln1_reg_2238 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln2_reg_2243 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_2254 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_filtez_fu_430_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_2259 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln285_fu_927_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln285_reg_2264 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln285_fu_931_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln285_reg_2269 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_2283 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_quantl_fu_440_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal il_assign_reg_2288 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_2_reg_2303 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln304_fu_1032_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln304_reg_2308 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_11_fu_1041_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_2313 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln311_fu_1091_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln311_reg_2321 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln5_fu_1110_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln5_reg_2326 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal trunc_ln8_reg_2331 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln290_fu_1248_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln290_reg_2341 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln314_fu_1281_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln314_reg_2347 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln620_1_fu_1325_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln620_1_reg_2352 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln522_1_reg_2357 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln317_fu_1467_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln317_reg_2367 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1544_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_2373 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal apl2_fu_1641_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal apl2_reg_2378 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_13_fu_1719_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_2384 : STD_LOGIC_VECTOR (0 downto 0);
    signal apl2_3_fu_1816_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal apl2_3_reg_2389 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_filtez_fu_430_ap_start : STD_LOGIC;
    signal grp_filtez_fu_430_ap_idle : STD_LOGIC;
    signal grp_filtez_fu_430_ap_ready : STD_LOGIC;
    signal grp_filtez_fu_430_bpl_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_filtez_fu_430_bpl_ce0 : STD_LOGIC;
    signal grp_filtez_fu_430_bpl_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtez_fu_430_dlt_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_filtez_fu_430_dlt_ce0 : STD_LOGIC;
    signal grp_filtez_fu_430_dlt_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_quantl_fu_440_ap_start : STD_LOGIC;
    signal grp_quantl_fu_440_ap_done : STD_LOGIC;
    signal grp_quantl_fu_440_ap_idle : STD_LOGIC;
    signal grp_quantl_fu_440_ap_ready : STD_LOGIC;
    signal grp_upzero_fu_452_ap_start : STD_LOGIC;
    signal grp_upzero_fu_452_ap_done : STD_LOGIC;
    signal grp_upzero_fu_452_ap_idle : STD_LOGIC;
    signal grp_upzero_fu_452_ap_ready : STD_LOGIC;
    signal grp_upzero_fu_452_dlti_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_452_dlti_ce0 : STD_LOGIC;
    signal grp_upzero_fu_452_dlti_we0 : STD_LOGIC;
    signal grp_upzero_fu_452_dlti_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_upzero_fu_452_dlti_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_452_dlti_ce1 : STD_LOGIC;
    signal grp_upzero_fu_452_dlti_we1 : STD_LOGIC;
    signal grp_upzero_fu_452_dlti_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_upzero_fu_452_bli_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_452_bli_ce0 : STD_LOGIC;
    signal grp_upzero_fu_452_bli_we0 : STD_LOGIC;
    signal grp_upzero_fu_452_bli_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_upzero_fu_461_ap_start : STD_LOGIC;
    signal grp_upzero_fu_461_ap_done : STD_LOGIC;
    signal grp_upzero_fu_461_ap_idle : STD_LOGIC;
    signal grp_upzero_fu_461_ap_ready : STD_LOGIC;
    signal grp_upzero_fu_461_dlti_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_461_dlti_ce0 : STD_LOGIC;
    signal grp_upzero_fu_461_dlti_we0 : STD_LOGIC;
    signal grp_upzero_fu_461_dlti_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_upzero_fu_461_dlti_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_461_dlti_ce1 : STD_LOGIC;
    signal grp_upzero_fu_461_dlti_we1 : STD_LOGIC;
    signal grp_upzero_fu_461_dlti_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_upzero_fu_461_bli_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_upzero_fu_461_bli_ce0 : STD_LOGIC;
    signal grp_upzero_fu_461_bli_we0 : STD_LOGIC;
    signal grp_upzero_fu_461_bli_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filtez_fu_430_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln269_fu_721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_quantl_fu_440_ap_start_reg : STD_LOGIC := '0';
    signal grp_upzero_fu_452_ap_start_reg : STD_LOGIC := '0';
    signal grp_upzero_fu_461_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln243_fu_622_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln255_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln257_fu_634_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln243_1_fu_746_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln243_2_fu_922_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal zext_ln287_1_fu_1026_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln525_fu_1243_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln525_1_fu_1462_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln294_fu_1253_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal apl1_3_fu_1964_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal apl2_2_fu_1858_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln4_fu_1501_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_state11_on_subcall_done : BOOLEAN;
    signal ap_block_state9_on_subcall_done : BOOLEAN;
    signal select_ln515_fu_1209_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln321_fu_1472_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal apl1_7_fu_2109_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal apl2_5_fu_2003_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln526_1_fu_1676_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln624_fu_1428_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal idx_fu_270 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal add_ln243_fu_616_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_fu_274 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal i_11_fu_607_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal xa_1_fu_278 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000000000000";
    signal xa_3_fu_674_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal sext_ln244_fu_575_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal xb_1_fu_282 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000000000000";
    signal xb_3_fu_694_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal sext_ln244_1_fu_584_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal idx118_fu_286 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal add_ln269_fu_751_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_6_fu_290 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal i_13_fu_727_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_470_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln257_1_fu_665_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln479_1_fu_896_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln479_3_fu_989_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_470_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln257_fu_660_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln475_2_fu_891_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln475_5_fu_984_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_478_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln475_1_fu_878_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln475_4_fu_971_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_478_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln475_fu_873_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln475_3_fu_966_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal mul_ln570_fu_482_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln570_fu_1534_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln574_fu_486_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln570_1_fu_490_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln570_2_fu_1709_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln574_1_fu_494_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_498_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln251_fu_579_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal sext_ln263_fu_767_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal grp_fu_498_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_470_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_478_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_509_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal shl_ln_fu_545_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal shl_ln250_1_fu_557_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln250_fu_553_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal sext_ln250_1_fu_565_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal xa_fu_569_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal grp_fu_498_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal add_ln257_fu_628_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln257_2_fu_670_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal mul_ln258_fu_474_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln258_2_fu_690_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal add_ln243_1_fu_740_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln2_fu_775_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal shl_ln263_1_fu_786_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln263_2_fu_782_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal sext_ln263_3_fu_793_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal sub_ln263_fu_797_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal sext_ln263_1_fu_771_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln262_fu_803_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal xb_4_fu_812_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal xa_4_fu_807_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal add_ln278_fu_817_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal sub_ln279_fu_833_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal pl_fu_865_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln475_1_fu_878_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal pl2_fu_883_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln479_1_fu_896_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_5_fu_901_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln243_2_fu_917_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_529_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal pl_2_fu_958_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln475_4_fu_971_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal pl2_1_fu_976_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln479_3_fu_989_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_8_fu_994_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln_fu_1016_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln304_fu_1036_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln310_fu_1057_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln310_fu_1057_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln310_fu_1057_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal decis_fu_1063_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal m_fu_1077_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_3_fu_1083_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln310_2_fu_1073_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln287_fu_1104_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln287_fu_1104_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln3_fu_1137_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln511_1_fu_1145_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln511_fu_1133_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln511_fu_1149_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln6_fu_1155_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln512_1_fu_1169_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln512_fu_1165_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln512_fu_1173_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln509_fu_1179_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_1183_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln513_fu_1191_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln515_fu_1203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln509_fu_1199_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal wd1_fu_1223_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln287_1_fu_1121_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln511_fu_1125_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln311_fu_1274_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln305_fu_1264_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_fu_1287_p6 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln314_fu_1305_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln314_fu_1305_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln7_fu_1311_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln7_fu_1342_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln620_1_fu_1350_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln620_fu_1338_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln620_fu_1354_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal wd_fu_1360_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_1374_p6 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln618_fu_1370_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln621_fu_1388_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln621_fu_1392_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln617_fu_1398_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_1402_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln622_fu_1410_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln624_fu_1422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln617_fu_1418_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal wd1_1_fu_1442_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln314_1_fu_1321_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln620_fu_1330_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln479_fu_1483_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln525_fu_1486_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln525cast_fu_1491_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal wd3_fu_1495_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal wd2_fu_1523_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal wd2_fu_1523_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln570_fu_482_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln566_fu_1530_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln571_fu_1552_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln572_fu_1558_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_6_fu_1561_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln570_fu_1571_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln574_fu_486_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln5_fu_1596_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln5_fu_1596_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln580_fu_1603_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln479_fu_1483_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln580_fu_1607_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln_fu_1613_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_fu_1588_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln580_1_fu_1623_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln580_fu_1627_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln580_fu_1635_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln574_2_fu_1579_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln479_2_fu_1658_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln525_1_fu_1661_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln525_1cast_fu_1666_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal wd3_2_fu_1670_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal wd2_1_fu_1698_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal wd2_1_fu_1698_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln570_1_fu_490_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln566_1_fu_1705_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln571_1_fu_1727_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln572_1_fu_1733_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_9_fu_1736_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln570_1_fu_1746_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln574_1_fu_494_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln580_1_fu_1771_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln580_1_fu_1771_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln580_2_fu_1778_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln479_2_fu_1658_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln580_1_fu_1782_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln580_1_fu_1788_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_fu_1763_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln580_3_fu_1798_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln580_1_fu_1802_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln580_2_fu_1810_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln574_3_fu_1754_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln477_fu_1833_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln583_fu_1836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal apl2_1_fu_1841_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln585_fu_1852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln567_fu_1848_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln6_fu_1872_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln6_fu_1872_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln597_fu_1879_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln477_fu_1833_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sub_ln597_fu_1883_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln4_fu_1889_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln599_fu_1903_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln599_fu_1899_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal wd3_1_fu_1916_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal apl1_fu_1910_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln595_fu_1922_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln607_fu_1930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal apl1_1_fu_1936_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln595_1_fu_1926_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal apl1_2_fu_1948_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln609_fu_1954_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln609_fu_1958_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln595_fu_1944_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln477_1_fu_1978_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln583_1_fu_1981_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal apl2_4_fu_1986_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln585_1_fu_1997_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln567_1_fu_1993_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln597_1_fu_2017_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln597_1_fu_2017_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln597_1_fu_2024_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln477_1_fu_1978_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sub_ln597_1_fu_2028_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln597_1_fu_2034_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln599_1_fu_2048_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln599_1_fu_2044_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal wd3_3_fu_2061_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal apl1_4_fu_2055_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln595_2_fu_2067_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln607_1_fu_2075_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal apl1_5_fu_2081_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln595_3_fu_2071_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal apl1_6_fu_2093_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln609_1_fu_2099_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln609_1_fu_2103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln595_1_fu_2089_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal mul_ln287_fu_1104_p10 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln310_fu_1057_p00 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln314_fu_1305_p10 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component adpcm_main_filtez IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        bpl_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        bpl_ce0 : OUT STD_LOGIC;
        bpl_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dlt_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        dlt_ce0 : OUT STD_LOGIC;
        dlt_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component adpcm_main_quantl IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        el : IN STD_LOGIC_VECTOR (31 downto 0);
        detl : IN STD_LOGIC_VECTOR (14 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component adpcm_main_upzero IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dlt : IN STD_LOGIC_VECTOR (15 downto 0);
        dlti_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        dlti_ce0 : OUT STD_LOGIC;
        dlti_we0 : OUT STD_LOGIC;
        dlti_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dlti_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        dlti_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        dlti_ce1 : OUT STD_LOGIC;
        dlti_we1 : OUT STD_LOGIC;
        dlti_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dlti_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        bli_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        bli_ce0 : OUT STD_LOGIC;
        bli_we0 : OUT STD_LOGIC;
        bli_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        bli_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component adpcm_main_mul_15s_32s_47_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component adpcm_main_mul_16s_32s_47_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component adpcm_main_mul_32s_32s_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component adpcm_main_mul_32s_7s_39_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (38 downto 0) );
    end component;


    component adpcm_main_mul_15ns_11ns_25_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component adpcm_main_mul_16s_15ns_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component adpcm_main_mux_4_2_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        din3 : IN STD_LOGIC_VECTOR (13 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component adpcm_main_mul_14s_15ns_29_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component adpcm_main_mux_4_2_11_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        din3 : IN STD_LOGIC_VECTOR (10 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;



begin
    grp_filtez_fu_430 : component adpcm_main_filtez
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_filtez_fu_430_ap_start,
        ap_done => grp_filtez_fu_430_ap_done,
        ap_idle => grp_filtez_fu_430_ap_idle,
        ap_ready => grp_filtez_fu_430_ap_ready,
        bpl_address0 => grp_filtez_fu_430_bpl_address0,
        bpl_ce0 => grp_filtez_fu_430_bpl_ce0,
        bpl_q0 => grp_filtez_fu_430_bpl_q0,
        dlt_address0 => grp_filtez_fu_430_dlt_address0,
        dlt_ce0 => grp_filtez_fu_430_dlt_ce0,
        dlt_q0 => grp_filtez_fu_430_dlt_q0,
        ap_return => grp_filtez_fu_430_ap_return);

    grp_quantl_fu_440 : component adpcm_main_quantl
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_quantl_fu_440_ap_start,
        ap_done => grp_quantl_fu_440_ap_done,
        ap_idle => grp_quantl_fu_440_ap_idle,
        ap_ready => grp_quantl_fu_440_ap_ready,
        el => sub_ln285_reg_2269,
        detl => detl_i,
        ap_return => grp_quantl_fu_440_ap_return);

    grp_upzero_fu_452 : component adpcm_main_upzero
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_upzero_fu_452_ap_start,
        ap_done => grp_upzero_fu_452_ap_done,
        ap_idle => grp_upzero_fu_452_ap_idle,
        ap_ready => grp_upzero_fu_452_ap_ready,
        dlt => trunc_ln5_reg_2326,
        dlti_address0 => grp_upzero_fu_452_dlti_address0,
        dlti_ce0 => grp_upzero_fu_452_dlti_ce0,
        dlti_we0 => grp_upzero_fu_452_dlti_we0,
        dlti_d0 => grp_upzero_fu_452_dlti_d0,
        dlti_q0 => delay_dltx_q0,
        dlti_address1 => grp_upzero_fu_452_dlti_address1,
        dlti_ce1 => grp_upzero_fu_452_dlti_ce1,
        dlti_we1 => grp_upzero_fu_452_dlti_we1,
        dlti_d1 => grp_upzero_fu_452_dlti_d1,
        dlti_q1 => delay_dltx_q1,
        bli_address0 => grp_upzero_fu_452_bli_address0,
        bli_ce0 => grp_upzero_fu_452_bli_ce0,
        bli_we0 => grp_upzero_fu_452_bli_we0,
        bli_d0 => grp_upzero_fu_452_bli_d0,
        bli_q0 => delay_bpl_q0);

    grp_upzero_fu_461 : component adpcm_main_upzero
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_upzero_fu_461_ap_start,
        ap_done => grp_upzero_fu_461_ap_done,
        ap_idle => grp_upzero_fu_461_ap_idle,
        ap_ready => grp_upzero_fu_461_ap_ready,
        dlt => sext_ln620_1_reg_2352,
        dlti_address0 => grp_upzero_fu_461_dlti_address0,
        dlti_ce0 => grp_upzero_fu_461_dlti_ce0,
        dlti_we0 => grp_upzero_fu_461_dlti_we0,
        dlti_d0 => grp_upzero_fu_461_dlti_d0,
        dlti_q0 => delay_dhx_q0,
        dlti_address1 => grp_upzero_fu_461_dlti_address1,
        dlti_ce1 => grp_upzero_fu_461_dlti_ce1,
        dlti_we1 => grp_upzero_fu_461_dlti_we1,
        dlti_d1 => grp_upzero_fu_461_dlti_d1,
        dlti_q1 => delay_dhx_q1,
        bli_address0 => grp_upzero_fu_461_bli_address0,
        bli_ce0 => grp_upzero_fu_461_bli_ce0,
        bli_we0 => grp_upzero_fu_461_bli_we0,
        bli_d0 => grp_upzero_fu_461_bli_d0,
        bli_q0 => delay_bph_q0);

    mul_15s_32s_47_1_1_U60 : component adpcm_main_mul_15s_32s_47_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        din0 => grp_fu_470_p0,
        din1 => grp_fu_470_p1,
        dout => grp_fu_470_p2);

    mul_15s_32s_47_1_1_U61 : component adpcm_main_mul_15s_32s_47_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        din0 => h_q0,
        din1 => tqmf_q0,
        dout => mul_ln258_fu_474_p2);

    mul_16s_32s_47_1_1_U62 : component adpcm_main_mul_16s_32s_47_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        din0 => grp_fu_478_p0,
        din1 => grp_fu_478_p1,
        dout => grp_fu_478_p2);

    mul_32s_32s_64_1_1_U63 : component adpcm_main_mul_32s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => plt1_i,
        din1 => mul_ln570_fu_482_p1,
        dout => mul_ln570_fu_482_p2);

    mul_32s_32s_64_1_1_U64 : component adpcm_main_mul_32s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => plt2_i,
        din1 => mul_ln574_fu_486_p1,
        dout => mul_ln574_fu_486_p2);

    mul_32s_32s_64_1_1_U65 : component adpcm_main_mul_32s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => ph1_i,
        din1 => mul_ln570_1_fu_490_p1,
        dout => mul_ln570_1_fu_490_p2);

    mul_32s_32s_64_1_1_U66 : component adpcm_main_mul_32s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => ph2_i,
        din1 => mul_ln574_1_fu_494_p1,
        dout => mul_ln574_1_fu_494_p2);

    mul_32s_7s_39_1_1_U67 : component adpcm_main_mul_32s_7s_39_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 39)
    port map (
        din0 => grp_fu_498_p0,
        din1 => grp_fu_498_p1,
        dout => grp_fu_498_p2);

    mul_15ns_11ns_25_1_1_U68 : component adpcm_main_mul_15ns_11ns_25_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 11,
        dout_WIDTH => 25)
    port map (
        din0 => mul_ln310_fu_1057_p0,
        din1 => mul_ln310_fu_1057_p1,
        dout => mul_ln310_fu_1057_p2);

    mul_16s_15ns_31_1_1_U69 : component adpcm_main_mul_16s_15ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        dout_WIDTH => 31)
    port map (
        din0 => qq4_code4_table_q0,
        din1 => mul_ln287_fu_1104_p1,
        dout => mul_ln287_fu_1104_p2);

    mux_4_2_14_1_1_U70 : component adpcm_main_mux_4_2_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        din2_WIDTH => 14,
        din3_WIDTH => 14,
        din4_WIDTH => 2,
        dout_WIDTH => 14)
    port map (
        din0 => ap_const_lv14_2310,
        din1 => ap_const_lv14_39B0,
        din2 => ap_const_lv14_1CF0,
        din3 => ap_const_lv14_650,
        din4 => add_ln314_fu_1281_p2,
        dout => tmp_1_fu_1287_p6);

    mul_14s_15ns_29_1_1_U71 : component adpcm_main_mul_14s_15ns_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 15,
        dout_WIDTH => 29)
    port map (
        din0 => tmp_1_fu_1287_p6,
        din1 => mul_ln314_fu_1305_p1,
        dout => mul_ln314_fu_1305_p2);

    mux_4_2_11_1_1_U72 : component adpcm_main_mux_4_2_11_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        din2_WIDTH => 11,
        din3_WIDTH => 11,
        din4_WIDTH => 2,
        dout_WIDTH => 11)
    port map (
        din0 => ap_const_lv11_31E,
        din1 => ap_const_lv11_72A,
        din2 => ap_const_lv11_31E,
        din3 => ap_const_lv11_72A,
        din4 => add_ln314_fu_1281_p2,
        dout => tmp_3_fu_1374_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_filtez_fu_430_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_filtez_fu_430_ap_start_reg <= ap_const_logic_0;
            else
                if ((((icmp_ln269_fu_721_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_filtez_fu_430_ap_done = ap_const_logic_1)))) then 
                    grp_filtez_fu_430_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_filtez_fu_430_ap_ready = ap_const_logic_1)) then 
                    grp_filtez_fu_430_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_quantl_fu_440_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_quantl_fu_440_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_filtez_fu_430_ap_done = ap_const_logic_1))) then 
                    grp_quantl_fu_440_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_quantl_fu_440_ap_ready = ap_const_logic_1)) then 
                    grp_quantl_fu_440_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_upzero_fu_452_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_upzero_fu_452_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    grp_upzero_fu_452_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_upzero_fu_452_ap_ready = ap_const_logic_1)) then 
                    grp_upzero_fu_452_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_upzero_fu_461_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_upzero_fu_461_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    grp_upzero_fu_461_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_upzero_fu_461_ap_ready = ap_const_logic_1)) then 
                    grp_upzero_fu_461_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_6_fu_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln255_fu_601_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_6_fu_290 <= ap_const_lv5_0;
            elsif (((icmp_ln269_fu_721_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i_6_fu_290 <= i_13_fu_727_p2;
            end if; 
        end if;
    end process;

    i_fu_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_fu_274 <= ap_const_lv4_0;
            elsif (((icmp_ln255_fu_601_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_fu_274 <= i_11_fu_607_p2;
            end if; 
        end if;
    end process;

    idx118_fu_286_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln255_fu_601_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                idx118_fu_286 <= ap_const_lv6_0;
            elsif (((icmp_ln269_fu_721_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                idx118_fu_286 <= add_ln269_fu_751_p2;
            end if; 
        end if;
    end process;

    idx_fu_270_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                idx_fu_270 <= ap_const_lv5_0;
            elsif (((icmp_ln255_fu_601_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                idx_fu_270 <= add_ln243_fu_616_p2;
            end if; 
        end if;
    end process;

    xa_1_fu_278_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                xa_1_fu_278 <= sext_ln244_fu_575_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                xa_1_fu_278 <= xa_3_fu_674_p2;
            end if; 
        end if;
    end process;

    xb_1_fu_282_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                xb_1_fu_282 <= sext_ln244_1_fu_584_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                xb_1_fu_282 <= xb_3_fu_694_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                add_ln290_reg_2341 <= add_ln290_fu_1248_p2;
                add_ln314_reg_2347 <= add_ln314_fu_1281_p2;
                add_ln317_reg_2367 <= add_ln317_fu_1467_p2;
                sext_ln620_1_reg_2352 <= sext_ln620_1_fu_1325_p1;
                trunc_ln522_1_reg_2357 <= select_ln624_fu_1428_p3(14 downto 11);
                trunc_ln5_reg_2326 <= mul_ln287_fu_1104_p2(30 downto 15);
                trunc_ln8_reg_2331 <= select_ln515_fu_1209_p3(14 downto 11);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                apl2_3_reg_2389 <= apl2_3_fu_1816_p2;
                apl2_reg_2378 <= apl2_fu_1641_p2;
                tmp_13_reg_2384 <= mul_ln570_1_fu_490_p2(63 downto 63);
                tmp_7_reg_2373 <= mul_ln570_fu_482_p2(63 downto 63);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                icmp_ln311_reg_2321 <= icmp_ln311_fu_1091_p2;
                il_assign_reg_2288 <= grp_quantl_fu_440_ap_return;
                tmp_11_reg_2313 <= sub_ln304_fu_1036_p2(31 downto 31);
                tmp_2_reg_2303 <= grp_filtez_fu_430_ap_return;
                trunc_ln304_reg_2308 <= trunc_ln304_fu_1032_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_filtez_fu_430_ap_done = ap_const_logic_1)))) then
                reg_525 <= grp_fu_509_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                sub_ln285_reg_2269 <= sub_ln285_fu_931_p2;
                tmp_8_reg_2283 <= tmp_8_fu_994_p1(15 downto 5);
                tmp_reg_2259 <= grp_filtez_fu_430_ap_return;
                trunc_ln285_reg_2264 <= trunc_ln285_fu_927_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                tmp_5_reg_2254 <= tmp_5_fu_901_p1(15 downto 5);
                trunc_ln1_reg_2238 <= add_ln278_fu_817_p2(46 downto 15);
                trunc_ln269_reg_2228 <= trunc_ln269_fu_736_p1;
                trunc_ln2_reg_2243 <= sub_ln279_fu_833_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                tqmf_load_2_reg_2214 <= tqmf_q1;
                tqmf_load_3_reg_2219 <= tqmf_q0;
                trunc_ln255_1_reg_2209 <= trunc_ln255_1_fu_714_p1;
                trunc_ln255_reg_2204 <= trunc_ln255_fu_710_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state6, ap_CS_fsm_state8, grp_filtez_fu_430_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state9, ap_CS_fsm_state11, icmp_ln269_fu_721_p2, icmp_ln255_fu_601_p2, ap_block_state11_on_subcall_done, ap_block_state9_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln255_fu_601_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln269_fu_721_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_filtez_fu_430_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    add_ln243_1_fu_740_p2 <= std_logic_vector(unsigned(trunc_ln269_fu_736_p1) + unsigned(ap_const_lv5_15));
    add_ln243_2_fu_917_p2 <= std_logic_vector(unsigned(trunc_ln269_reg_2228) + unsigned(ap_const_lv5_17));
    add_ln243_fu_616_p2 <= std_logic_vector(unsigned(idx_fu_270) + unsigned(ap_const_lv5_2));
    add_ln257_fu_628_p2 <= std_logic_vector(unsigned(idx_fu_270) + unsigned(ap_const_lv5_3));
    add_ln269_fu_751_p2 <= std_logic_vector(unsigned(idx118_fu_286) + unsigned(ap_const_lv6_3F));
    add_ln278_fu_817_p2 <= std_logic_vector(unsigned(xb_4_fu_812_p2) + unsigned(xa_4_fu_807_p2));
    add_ln290_fu_1248_p2 <= std_logic_vector(signed(sext_ln287_1_fu_1121_p1) + signed(tmp_reg_2259));
    add_ln294_fu_1253_p2 <= std_logic_vector(signed(sext_ln511_fu_1125_p1) + signed(trunc_ln285_reg_2264));
    add_ln314_fu_1281_p2 <= std_logic_vector(unsigned(select_ln311_fu_1274_p3) + unsigned(select_ln305_fu_1264_p3));
    add_ln317_fu_1467_p2 <= std_logic_vector(signed(sext_ln314_1_fu_1321_p1) + signed(tmp_2_reg_2303));
    add_ln321_fu_1472_p2 <= std_logic_vector(unsigned(trunc_ln304_reg_2308) + unsigned(sext_ln620_fu_1330_p1));
    add_ln512_fu_1173_p2 <= std_logic_vector(signed(sext_ln512_1_fu_1169_p1) + signed(sext_ln512_fu_1165_p1));
    add_ln580_2_fu_1810_p2 <= std_logic_vector(signed(sext_ln580_3_fu_1798_p1) + signed(select_ln580_1_fu_1802_p3));
    add_ln580_fu_1635_p2 <= std_logic_vector(signed(sext_ln580_1_fu_1623_p1) + signed(select_ln580_fu_1627_p3));
    add_ln621_fu_1392_p2 <= std_logic_vector(signed(sext_ln618_fu_1370_p1) + signed(sext_ln621_fu_1388_p1));

    ah1_o_assign_proc : process(ah1_i, ap_CS_fsm_state12, apl1_7_fu_2109_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ah1_o <= apl1_7_fu_2109_p3;
        else 
            ah1_o <= ah1_i;
        end if; 
    end process;


    ah1_o_ap_vld_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ah1_o_ap_vld <= ap_const_logic_1;
        else 
            ah1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    ah2_o_assign_proc : process(ah2_i, ap_CS_fsm_state12, apl2_5_fu_2003_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ah2_o <= apl2_5_fu_2003_p3;
        else 
            ah2_o <= ah2_i;
        end if; 
    end process;


    ah2_o_ap_vld_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ah2_o_ap_vld <= ap_const_logic_1;
        else 
            ah2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    al1_o_assign_proc : process(al1_i, apl1_3_fu_1964_p3, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            al1_o <= apl1_3_fu_1964_p3;
        else 
            al1_o <= al1_i;
        end if; 
    end process;


    al1_o_ap_vld_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            al1_o_ap_vld <= ap_const_logic_1;
        else 
            al1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    al2_o_assign_proc : process(al2_i, ap_CS_fsm_state12, apl2_2_fu_1858_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            al2_o <= apl2_2_fu_1858_p3;
        else 
            al2_o <= al2_i;
        end if; 
    end process;


    al2_o_ap_vld_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            al2_o_ap_vld <= ap_const_logic_1;
        else 
            al2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(ap_block_state11_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state11_on_subcall_done)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_filtez_fu_430_ap_done)
    begin
        if ((grp_filtez_fu_430_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state9_blk_assign_proc : process(ap_block_state9_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state9_on_subcall_done)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state11_on_subcall_done_assign_proc : process(grp_upzero_fu_452_ap_done, grp_upzero_fu_461_ap_done)
    begin
                ap_block_state11_on_subcall_done <= ((grp_upzero_fu_461_ap_done = ap_const_logic_0) or (grp_upzero_fu_452_ap_done = ap_const_logic_0));
    end process;


    ap_block_state9_on_subcall_done_assign_proc : process(grp_filtez_fu_430_ap_done, grp_quantl_fu_440_ap_done)
    begin
                ap_block_state9_on_subcall_done <= ((grp_quantl_fu_440_ap_done = ap_const_logic_0) or (grp_filtez_fu_430_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= (add_ln314_reg_2347 & il_assign_reg_2288);
    apl1_1_fu_1936_p3 <= 
        zext_ln595_fu_1922_p1 when (icmp_ln607_fu_1930_p2(0) = '1') else 
        apl1_fu_1910_p2;
    apl1_2_fu_1948_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(zext_ln595_1_fu_1926_p1));
    apl1_3_fu_1964_p3 <= 
        apl1_2_fu_1948_p2 when (icmp_ln609_fu_1958_p2(0) = '1') else 
        trunc_ln595_fu_1944_p1;
    apl1_4_fu_2055_p2 <= std_logic_vector(unsigned(select_ln599_1_fu_2048_p3) + unsigned(sext_ln599_1_fu_2044_p1));
    apl1_5_fu_2081_p3 <= 
        zext_ln595_2_fu_2067_p1 when (icmp_ln607_1_fu_2075_p2(0) = '1') else 
        apl1_4_fu_2055_p2;
    apl1_6_fu_2093_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(zext_ln595_3_fu_2071_p1));
    apl1_7_fu_2109_p3 <= 
        apl1_6_fu_2093_p2 when (icmp_ln609_1_fu_2103_p2(0) = '1') else 
        trunc_ln595_1_fu_2089_p1;
    apl1_fu_1910_p2 <= std_logic_vector(unsigned(select_ln599_fu_1903_p3) + unsigned(sext_ln599_fu_1899_p1));
    apl2_1_fu_1841_p3 <= 
        ap_const_lv17_3000 when (icmp_ln583_fu_1836_p2(0) = '1') else 
        apl2_reg_2378;
    apl2_2_fu_1858_p3 <= 
        ap_const_lv15_5000 when (icmp_ln585_fu_1852_p2(0) = '1') else 
        trunc_ln567_fu_1848_p1;
    apl2_3_fu_1816_p2 <= std_logic_vector(unsigned(add_ln580_2_fu_1810_p2) + unsigned(sext_ln574_3_fu_1754_p1));
    apl2_4_fu_1986_p3 <= 
        ap_const_lv17_3000 when (icmp_ln583_1_fu_1981_p2(0) = '1') else 
        apl2_3_reg_2389;
    apl2_5_fu_2003_p3 <= 
        ap_const_lv15_5000 when (icmp_ln585_1_fu_1997_p2(0) = '1') else 
        trunc_ln567_1_fu_1993_p1;
    apl2_fu_1641_p2 <= std_logic_vector(unsigned(add_ln580_fu_1635_p2) + unsigned(sext_ln574_2_fu_1579_p1));
    decis_fu_1063_p4 <= mul_ln310_fu_1057_p2(24 downto 12);

    delay_bph_address0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state11, grp_filtez_fu_430_bpl_address0, grp_upzero_fu_461_bli_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            delay_bph_address0 <= grp_upzero_fu_461_bli_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            delay_bph_address0 <= grp_filtez_fu_430_bpl_address0;
        else 
            delay_bph_address0 <= "XXX";
        end if; 
    end process;


    delay_bph_ce0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state11, grp_filtez_fu_430_bpl_ce0, grp_upzero_fu_461_bli_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            delay_bph_ce0 <= grp_upzero_fu_461_bli_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            delay_bph_ce0 <= grp_filtez_fu_430_bpl_ce0;
        else 
            delay_bph_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    delay_bph_d0 <= grp_upzero_fu_461_bli_d0;

    delay_bph_we0_assign_proc : process(ap_CS_fsm_state11, grp_upzero_fu_461_bli_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            delay_bph_we0 <= grp_upzero_fu_461_bli_we0;
        else 
            delay_bph_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_bpl_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state11, grp_filtez_fu_430_bpl_address0, grp_upzero_fu_452_bli_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            delay_bpl_address0 <= grp_upzero_fu_452_bli_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            delay_bpl_address0 <= grp_filtez_fu_430_bpl_address0;
        else 
            delay_bpl_address0 <= "XXX";
        end if; 
    end process;


    delay_bpl_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state11, grp_filtez_fu_430_bpl_ce0, grp_upzero_fu_452_bli_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            delay_bpl_ce0 <= grp_upzero_fu_452_bli_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            delay_bpl_ce0 <= grp_filtez_fu_430_bpl_ce0;
        else 
            delay_bpl_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    delay_bpl_d0 <= grp_upzero_fu_452_bli_d0;

    delay_bpl_we0_assign_proc : process(ap_CS_fsm_state11, grp_upzero_fu_452_bli_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            delay_bpl_we0 <= grp_upzero_fu_452_bli_we0;
        else 
            delay_bpl_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_address0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state11, grp_filtez_fu_430_dlt_address0, grp_upzero_fu_461_dlti_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            delay_dhx_address0 <= grp_upzero_fu_461_dlti_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            delay_dhx_address0 <= grp_filtez_fu_430_dlt_address0;
        else 
            delay_dhx_address0 <= "XXX";
        end if; 
    end process;

    delay_dhx_address1 <= grp_upzero_fu_461_dlti_address1;

    delay_dhx_ce0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state11, grp_filtez_fu_430_dlt_ce0, grp_upzero_fu_461_dlti_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            delay_dhx_ce0 <= grp_upzero_fu_461_dlti_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            delay_dhx_ce0 <= grp_filtez_fu_430_dlt_ce0;
        else 
            delay_dhx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_ce1_assign_proc : process(ap_CS_fsm_state11, grp_upzero_fu_461_dlti_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            delay_dhx_ce1 <= grp_upzero_fu_461_dlti_ce1;
        else 
            delay_dhx_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    delay_dhx_d0 <= grp_upzero_fu_461_dlti_d0;
    delay_dhx_d1 <= grp_upzero_fu_461_dlti_d1;

    delay_dhx_we0_assign_proc : process(ap_CS_fsm_state11, grp_upzero_fu_461_dlti_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            delay_dhx_we0 <= grp_upzero_fu_461_dlti_we0;
        else 
            delay_dhx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dhx_we1_assign_proc : process(ap_CS_fsm_state11, grp_upzero_fu_461_dlti_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            delay_dhx_we1 <= grp_upzero_fu_461_dlti_we1;
        else 
            delay_dhx_we1 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state11, grp_filtez_fu_430_dlt_address0, grp_upzero_fu_452_dlti_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            delay_dltx_address0 <= grp_upzero_fu_452_dlti_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            delay_dltx_address0 <= grp_filtez_fu_430_dlt_address0;
        else 
            delay_dltx_address0 <= "XXX";
        end if; 
    end process;

    delay_dltx_address1 <= grp_upzero_fu_452_dlti_address1;

    delay_dltx_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state11, grp_filtez_fu_430_dlt_ce0, grp_upzero_fu_452_dlti_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            delay_dltx_ce0 <= grp_upzero_fu_452_dlti_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            delay_dltx_ce0 <= grp_filtez_fu_430_dlt_ce0;
        else 
            delay_dltx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_ce1_assign_proc : process(ap_CS_fsm_state11, grp_upzero_fu_452_dlti_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            delay_dltx_ce1 <= grp_upzero_fu_452_dlti_ce1;
        else 
            delay_dltx_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    delay_dltx_d0 <= grp_upzero_fu_452_dlti_d0;
    delay_dltx_d1 <= grp_upzero_fu_452_dlti_d1;

    delay_dltx_we0_assign_proc : process(ap_CS_fsm_state11, grp_upzero_fu_452_dlti_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            delay_dltx_we0 <= grp_upzero_fu_452_dlti_we0;
        else 
            delay_dltx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delay_dltx_we1_assign_proc : process(ap_CS_fsm_state11, grp_upzero_fu_452_dlti_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            delay_dltx_we1 <= grp_upzero_fu_452_dlti_we1;
        else 
            delay_dltx_we1 <= ap_const_logic_0;
        end if; 
    end process;


    deth_o_assign_proc : process(deth_i, ap_CS_fsm_state11, shl_ln526_1_fu_1676_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            deth_o <= shl_ln526_1_fu_1676_p3;
        else 
            deth_o <= deth_i;
        end if; 
    end process;


    deth_o_ap_vld_assign_proc : process(ap_CS_fsm_state11, ap_block_state11_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            deth_o_ap_vld <= ap_const_logic_1;
        else 
            deth_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    detl_o_assign_proc : process(detl_i, ap_CS_fsm_state11, shl_ln4_fu_1501_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            detl_o <= shl_ln4_fu_1501_p3;
        else 
            detl_o <= detl_i;
        end if; 
    end process;


    detl_o_ap_vld_assign_proc : process(ap_CS_fsm_state11, ap_block_state11_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            detl_o_ap_vld <= ap_const_logic_1;
        else 
            detl_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    grp_filtez_fu_430_ap_start <= grp_filtez_fu_430_ap_start_reg;

    grp_filtez_fu_430_bpl_q0_assign_proc : process(delay_bpl_q0, delay_bph_q0, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_filtez_fu_430_bpl_q0 <= delay_bph_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_filtez_fu_430_bpl_q0 <= delay_bpl_q0;
        else 
            grp_filtez_fu_430_bpl_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_filtez_fu_430_dlt_q0_assign_proc : process(delay_dltx_q0, delay_dhx_q0, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_filtez_fu_430_dlt_q0 <= delay_dhx_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_filtez_fu_430_dlt_q0 <= delay_dltx_q0;
        else 
            grp_filtez_fu_430_dlt_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_470_p0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state4, sext_ln257_1_fu_665_p1, sext_ln479_1_fu_896_p1, sext_ln479_3_fu_989_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_470_p0 <= sext_ln479_3_fu_989_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_470_p0 <= sext_ln479_1_fu_896_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_470_p0 <= sext_ln257_1_fu_665_p1(15 - 1 downto 0);
        else 
            grp_fu_470_p0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_470_p1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state4, sext_ln257_fu_660_p1, sext_ln475_2_fu_891_p1, sext_ln475_5_fu_984_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_470_p1 <= sext_ln475_5_fu_984_p1(32 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_470_p1 <= sext_ln475_2_fu_891_p1(32 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_470_p1 <= sext_ln257_fu_660_p1(32 - 1 downto 0);
        else 
            grp_fu_470_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_478_p0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, sext_ln475_1_fu_878_p1, sext_ln475_4_fu_971_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_478_p0 <= sext_ln475_4_fu_971_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_478_p0 <= sext_ln475_1_fu_878_p1(16 - 1 downto 0);
        else 
            grp_fu_478_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_478_p1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, sext_ln475_fu_873_p1, sext_ln475_3_fu_966_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_478_p1 <= sext_ln475_3_fu_966_p1(32 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_478_p1 <= sext_ln475_fu_873_p1(32 - 1 downto 0);
        else 
            grp_fu_478_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_498_p0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state2, sext_ln251_fu_579_p1, sext_ln263_fu_767_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_498_p0 <= sext_ln263_fu_767_p1(32 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_498_p0 <= sext_ln251_fu_579_p1(32 - 1 downto 0);
        else 
            grp_fu_498_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_498_p1 <= ap_const_lv39_7FFFFFFFD4(7 - 1 downto 0);
    grp_fu_509_p2 <= std_logic_vector(unsigned(grp_fu_470_p2) + unsigned(grp_fu_478_p2));
    grp_fu_529_p2 <= std_logic_vector(unsigned(reg_525) + unsigned(grp_filtez_fu_430_ap_return));
    grp_quantl_fu_440_ap_start <= grp_quantl_fu_440_ap_start_reg;
    grp_upzero_fu_452_ap_start <= grp_upzero_fu_452_ap_start_reg;
    grp_upzero_fu_461_ap_start <= grp_upzero_fu_461_ap_start_reg;
    h_address0 <= zext_ln257_fu_634_p1(5 - 1 downto 0);
    h_address1 <= zext_ln243_fu_622_p1(5 - 1 downto 0);

    h_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            h_ce0 <= ap_const_logic_1;
        else 
            h_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    h_ce1_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            h_ce1 <= ap_const_logic_1;
        else 
            h_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    i_11_fu_607_p2 <= std_logic_vector(unsigned(i_fu_274) + unsigned(ap_const_lv4_1));
    i_13_fu_727_p2 <= std_logic_vector(unsigned(i_6_fu_290) + unsigned(ap_const_lv5_1));
    icmp_ln255_fu_601_p2 <= "1" when (i_fu_274 = ap_const_lv4_A) else "0";
    icmp_ln269_fu_721_p2 <= "1" when (i_6_fu_290 = ap_const_lv5_16) else "0";
    icmp_ln311_fu_1091_p2 <= "1" when (signed(m_3_fu_1083_p3) > signed(zext_ln310_2_fu_1073_p1)) else "0";
    icmp_ln515_fu_1203_p2 <= "1" when (unsigned(select_ln513_fu_1191_p3) > unsigned(ap_const_lv17_4800)) else "0";
    icmp_ln583_1_fu_1981_p2 <= "1" when (signed(apl2_3_reg_2389) > signed(ap_const_lv17_3000)) else "0";
    icmp_ln583_fu_1836_p2 <= "1" when (signed(apl2_reg_2378) > signed(ap_const_lv17_3000)) else "0";
    icmp_ln585_1_fu_1997_p2 <= "1" when (signed(apl2_4_fu_1986_p3) < signed(ap_const_lv17_1D000)) else "0";
    icmp_ln585_fu_1852_p2 <= "1" when (signed(apl2_1_fu_1841_p3) < signed(ap_const_lv17_1D000)) else "0";
    icmp_ln607_1_fu_2075_p2 <= "1" when (signed(apl1_4_fu_2055_p2) > signed(zext_ln595_2_fu_2067_p1)) else "0";
    icmp_ln607_fu_1930_p2 <= "1" when (signed(apl1_fu_1910_p2) > signed(zext_ln595_fu_1922_p1)) else "0";
    icmp_ln609_1_fu_2103_p2 <= "1" when (signed(apl1_5_fu_2081_p3) < signed(sext_ln609_1_fu_2099_p1)) else "0";
    icmp_ln609_fu_1958_p2 <= "1" when (signed(apl1_1_fu_1936_p3) < signed(sext_ln609_fu_1954_p1)) else "0";
    icmp_ln624_fu_1422_p2 <= "1" when (unsigned(select_ln622_fu_1410_p3) > unsigned(ap_const_lv17_5800)) else "0";
    il <= grp_quantl_fu_440_ap_return;

    il_ap_vld_assign_proc : process(ap_CS_fsm_state9, ap_block_state9_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            il_ap_vld <= ap_const_logic_1;
        else 
            il_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ilb_table_address0 <= zext_ln525_1_fu_1462_p1(5 - 1 downto 0);
    ilb_table_address1 <= zext_ln525_fu_1243_p1(5 - 1 downto 0);

    ilb_table_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ilb_table_ce0 <= ap_const_logic_1;
        else 
            ilb_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ilb_table_ce1_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ilb_table_ce1 <= ap_const_logic_1;
        else 
            ilb_table_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln_fu_1016_p4 <= grp_quantl_fu_440_ap_return(5 downto 2);
    m_3_fu_1083_p3 <= 
        m_fu_1077_p2 when (tmp_11_fu_1041_p3(0) = '1') else 
        sub_ln304_fu_1036_p2;
    m_fu_1077_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sub_ln304_fu_1036_p2));
    mul_ln287_fu_1104_p1 <= mul_ln287_fu_1104_p10(15 - 1 downto 0);
    mul_ln287_fu_1104_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(detl_i),31));
    mul_ln310_fu_1057_p0 <= mul_ln310_fu_1057_p00(15 - 1 downto 0);
    mul_ln310_fu_1057_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(deth_i),25));
    mul_ln310_fu_1057_p1 <= ap_const_lv25_234(11 - 1 downto 0);
    mul_ln314_fu_1305_p1 <= mul_ln314_fu_1305_p10(15 - 1 downto 0);
    mul_ln314_fu_1305_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(deth_i),29));
    mul_ln570_1_fu_490_p1 <= sext_ln570_2_fu_1709_p1(32 - 1 downto 0);
    mul_ln570_fu_482_p1 <= sext_ln570_fu_1534_p1(32 - 1 downto 0);
    mul_ln574_1_fu_494_p1 <= sext_ln570_2_fu_1709_p1(32 - 1 downto 0);
    mul_ln574_fu_486_p1 <= sext_ln570_fu_1534_p1(32 - 1 downto 0);

    nbh_o_assign_proc : process(nbh_i, ap_CS_fsm_state10, select_ln624_fu_1428_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            nbh_o <= select_ln624_fu_1428_p3;
        else 
            nbh_o <= nbh_i;
        end if; 
    end process;


    nbh_o_ap_vld_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            nbh_o_ap_vld <= ap_const_logic_1;
        else 
            nbh_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    nbl_o_assign_proc : process(nbl_i, ap_CS_fsm_state10, select_ln515_fu_1209_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            nbl_o <= select_ln515_fu_1209_p3;
        else 
            nbl_o <= nbl_i;
        end if; 
    end process;


    nbl_o_ap_vld_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            nbl_o_ap_vld <= ap_const_logic_1;
        else 
            nbl_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    ph1_o_assign_proc : process(ph1_i, add_ln317_reg_2367, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ph1_o <= add_ln317_reg_2367;
        else 
            ph1_o <= ph1_i;
        end if; 
    end process;


    ph1_o_ap_vld_assign_proc : process(ap_CS_fsm_state11, ap_block_state11_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ph1_o_ap_vld <= ap_const_logic_1;
        else 
            ph1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    ph2_o_assign_proc : process(ph1_i, ph2_i, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ph2_o <= ph1_i;
        else 
            ph2_o <= ph2_i;
        end if; 
    end process;


    ph2_o_ap_vld_assign_proc : process(ap_CS_fsm_state11, ap_block_state11_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ph2_o_ap_vld <= ap_const_logic_1;
        else 
            ph2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pl2_1_fu_976_p3 <= (rh2_i & ap_const_lv1_0);
    pl2_fu_883_p3 <= (rlt2_i & ap_const_lv1_0);
    pl_2_fu_958_p3 <= (rh1_i & ap_const_lv1_0);
    pl_fu_865_p3 <= (rlt1_i & ap_const_lv1_0);

    plt1_o_assign_proc : process(plt1_i, add_ln290_reg_2341, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            plt1_o <= add_ln290_reg_2341;
        else 
            plt1_o <= plt1_i;
        end if; 
    end process;


    plt1_o_ap_vld_assign_proc : process(ap_CS_fsm_state11, ap_block_state11_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            plt1_o_ap_vld <= ap_const_logic_1;
        else 
            plt1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    plt2_o_assign_proc : process(plt1_i, plt2_i, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            plt2_o <= plt1_i;
        else 
            plt2_o <= plt2_i;
        end if; 
    end process;


    plt2_o_ap_vld_assign_proc : process(ap_CS_fsm_state11, ap_block_state11_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            plt2_o_ap_vld <= ap_const_logic_1;
        else 
            plt2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    qq4_code4_table_address0 <= zext_ln287_1_fu_1026_p1(4 - 1 downto 0);

    qq4_code4_table_ce0_assign_proc : process(ap_CS_fsm_state9, ap_block_state9_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            qq4_code4_table_ce0 <= ap_const_logic_1;
        else 
            qq4_code4_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rh1_o_assign_proc : process(rh1_i, ap_CS_fsm_state10, add_ln321_fu_1472_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rh1_o <= add_ln321_fu_1472_p2;
        else 
            rh1_o <= rh1_i;
        end if; 
    end process;


    rh1_o_ap_vld_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rh1_o_ap_vld <= ap_const_logic_1;
        else 
            rh1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rh2_o_assign_proc : process(rh1_i, rh2_i, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            rh2_o <= rh1_i;
        else 
            rh2_o <= rh2_i;
        end if; 
    end process;


    rh2_o_ap_vld_assign_proc : process(ap_CS_fsm_state8, grp_filtez_fu_430_ap_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_filtez_fu_430_ap_done = ap_const_logic_1))) then 
            rh2_o_ap_vld <= ap_const_logic_1;
        else 
            rh2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rlt1_o_assign_proc : process(rlt1_i, ap_CS_fsm_state10, add_ln294_fu_1253_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rlt1_o <= add_ln294_fu_1253_p2;
        else 
            rlt1_o <= rlt1_i;
        end if; 
    end process;


    rlt1_o_ap_vld_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rlt1_o_ap_vld <= ap_const_logic_1;
        else 
            rlt1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    rlt2_o_assign_proc : process(rlt1_i, rlt2_i, ap_CS_fsm_state6, icmp_ln269_fu_721_p2)
    begin
        if (((icmp_ln269_fu_721_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            rlt2_o <= rlt1_i;
        else 
            rlt2_o <= rlt2_i;
        end if; 
    end process;


    rlt2_o_ap_vld_assign_proc : process(ap_CS_fsm_state6, icmp_ln269_fu_721_p2)
    begin
        if (((icmp_ln269_fu_721_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            rlt2_o_ap_vld <= ap_const_logic_1;
        else 
            rlt2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln305_fu_1264_p3 <= 
        ap_const_lv2_2 when (tmp_11_reg_2313(0) = '1') else 
        ap_const_lv2_0;
    select_ln311_fu_1274_p3 <= 
        ap_const_lv2_2 when (icmp_ln311_reg_2321(0) = '1') else 
        ap_const_lv2_3;
    select_ln513_fu_1191_p3 <= 
        ap_const_lv17_0 when (tmp_4_fu_1183_p3(0) = '1') else 
        add_ln512_fu_1173_p2;
    select_ln515_fu_1209_p3 <= 
        ap_const_lv15_4800 when (icmp_ln515_fu_1203_p2(0) = '1') else 
        trunc_ln509_fu_1199_p1;
    select_ln570_1_fu_1746_p3 <= 
        sext_ln572_1_fu_1733_p1 when (tmp_13_fu_1719_p3(0) = '1') else 
        tmp_9_fu_1736_p4;
    select_ln570_fu_1571_p3 <= 
        sext_ln572_fu_1558_p1 when (tmp_7_fu_1544_p3(0) = '1') else 
        tmp_6_fu_1561_p4;
    select_ln580_1_fu_1802_p3 <= 
        ap_const_lv17_1FF80 when (tmp_14_fu_1763_p3(0) = '1') else 
        ap_const_lv17_80;
    select_ln580_fu_1627_p3 <= 
        ap_const_lv17_1FF80 when (tmp_10_fu_1588_p3(0) = '1') else 
        ap_const_lv17_80;
    select_ln599_1_fu_2048_p3 <= 
        ap_const_lv18_3FF40 when (tmp_13_reg_2384(0) = '1') else 
        ap_const_lv18_C0;
    select_ln599_fu_1903_p3 <= 
        ap_const_lv18_3FF40 when (tmp_7_reg_2373(0) = '1') else 
        ap_const_lv18_C0;
    select_ln622_fu_1410_p3 <= 
        ap_const_lv17_0 when (tmp_12_fu_1402_p3(0) = '1') else 
        add_ln621_fu_1392_p2;
    select_ln624_fu_1428_p3 <= 
        ap_const_lv15_5800 when (icmp_ln624_fu_1422_p2(0) = '1') else 
        trunc_ln617_fu_1418_p1;
        sext_ln244_1_fu_584_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_498_p2),50));

        sext_ln244_fu_575_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xa_fu_569_p2),50));

        sext_ln250_1_fu_565_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln250_1_fu_557_p3),37));

        sext_ln250_fu_553_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_545_p3),37));

        sext_ln251_fu_579_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tqmf_q0),39));

        sext_ln257_1_fu_665_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(h_q1),47));

        sext_ln257_2_fu_670_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_470_p2),50));

        sext_ln257_fu_660_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tqmf_q1),47));

        sext_ln258_2_fu_690_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln258_fu_474_p2),50));

        sext_ln262_fu_803_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln263_fu_797_p2),47));

        sext_ln263_1_fu_771_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_498_p2),47));

        sext_ln263_2_fu_782_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln2_fu_775_p3),37));

        sext_ln263_3_fu_793_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln263_1_fu_786_p3),37));

        sext_ln263_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tqmf_load_2_reg_2214),39));

        sext_ln287_1_fu_1121_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln5_fu_1110_p4),32));

        sext_ln314_1_fu_1321_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln7_fu_1311_p4),32));

    sext_ln475_1_fu_878_p0 <= al1_i;
        sext_ln475_1_fu_878_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln475_1_fu_878_p0),47));

        sext_ln475_2_fu_891_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pl2_fu_883_p3),47));

        sext_ln475_3_fu_966_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pl_2_fu_958_p3),47));

    sext_ln475_4_fu_971_p0 <= ah1_i;
        sext_ln475_4_fu_971_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln475_4_fu_971_p0),47));

        sext_ln475_5_fu_984_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pl2_1_fu_976_p3),47));

        sext_ln475_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pl_fu_865_p3),47));

    sext_ln477_1_fu_1978_p0 <= ah1_i;
        sext_ln477_1_fu_1978_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln477_1_fu_1978_p0),25));

    sext_ln477_fu_1833_p0 <= al1_i;
        sext_ln477_fu_1833_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln477_fu_1833_p0),25));

    sext_ln479_1_fu_896_p0 <= al2_i;
        sext_ln479_1_fu_896_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln479_1_fu_896_p0),47));

    sext_ln479_2_fu_1658_p0 <= ah2_i;
        sext_ln479_2_fu_1658_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln479_2_fu_1658_p0),23));

    sext_ln479_3_fu_989_p0 <= ah2_i;
        sext_ln479_3_fu_989_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln479_3_fu_989_p0),47));

    sext_ln479_fu_1483_p0 <= al2_i;
        sext_ln479_fu_1483_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln479_fu_1483_p0),23));

        sext_ln509_fu_1179_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln512_fu_1173_p2),32));

        sext_ln511_fu_1125_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln5_fu_1110_p4),31));

        sext_ln512_1_fu_1169_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(wl_code_table_q0),17));

        sext_ln512_fu_1165_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln6_fu_1155_p4),17));

        sext_ln566_1_fu_1705_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(wd2_1_fu_1698_p3),19));

        sext_ln566_fu_1530_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(wd2_fu_1523_p3),19));

        sext_ln570_2_fu_1709_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln317_reg_2367),64));

        sext_ln570_fu_1534_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln290_reg_2341),64));

        sext_ln572_1_fu_1733_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_8_reg_2283),12));

        sext_ln572_fu_1558_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_reg_2254),12));

        sext_ln574_2_fu_1579_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln570_fu_1571_p3),17));

        sext_ln574_3_fu_1754_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln570_1_fu_1746_p3),17));

        sext_ln580_1_fu_1623_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_1613_p4),17));

        sext_ln580_2_fu_1778_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln580_1_fu_1771_p3),23));

        sext_ln580_3_fu_1798_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln580_1_fu_1788_p4),17));

        sext_ln580_fu_1603_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln5_fu_1596_p3),23));

        sext_ln597_1_fu_2024_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln597_1_fu_2017_p3),25));

        sext_ln597_fu_1879_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln6_fu_1872_p3),25));

        sext_ln599_1_fu_2044_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln597_1_fu_2034_p4),18));

        sext_ln599_fu_1899_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln4_fu_1889_p4),18));

        sext_ln609_1_fu_2099_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(apl1_6_fu_2093_p2),18));

        sext_ln609_fu_1954_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(apl1_2_fu_1948_p2),18));

        sext_ln617_fu_1398_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln621_fu_1392_p2),32));

        sext_ln618_fu_1370_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(wd_fu_1360_p4),17));

        sext_ln620_1_fu_1325_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln7_fu_1311_p4),16));

        sext_ln620_fu_1330_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln7_fu_1311_p4),31));

        sext_ln621_fu_1388_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_3_fu_1374_p6),17));

    shl_ln250_1_fu_557_p3 <= (tqmf_q1 & ap_const_lv2_0);
    shl_ln263_1_fu_786_p3 <= (tqmf_load_3_reg_2219 & ap_const_lv2_0);
    shl_ln2_fu_775_p3 <= (tqmf_load_3_reg_2219 & ap_const_lv4_0);
    shl_ln3_fu_1137_p3 <= (nbl_i & ap_const_lv7_0);
    shl_ln4_fu_1501_p3 <= (wd3_fu_1495_p2 & ap_const_lv3_0);
    shl_ln526_1_fu_1676_p3 <= (wd3_2_fu_1670_p2 & ap_const_lv3_0);
    shl_ln580_1_fu_1771_p1 <= ah2_i;
    shl_ln580_1_fu_1771_p3 <= (shl_ln580_1_fu_1771_p1 & ap_const_lv7_0);
    shl_ln597_1_fu_2017_p1 <= ah1_i;
    shl_ln597_1_fu_2017_p3 <= (shl_ln597_1_fu_2017_p1 & ap_const_lv8_0);
    shl_ln5_fu_1596_p1 <= al2_i;
    shl_ln5_fu_1596_p3 <= (shl_ln5_fu_1596_p1 & ap_const_lv7_0);
    shl_ln6_fu_1872_p1 <= al1_i;
    shl_ln6_fu_1872_p3 <= (shl_ln6_fu_1872_p1 & ap_const_lv8_0);
    shl_ln7_fu_1342_p3 <= (nbh_i & ap_const_lv7_0);
    shl_ln_fu_545_p3 <= (tqmf_q1 & ap_const_lv4_0);
    sub_ln263_fu_797_p2 <= std_logic_vector(signed(sext_ln263_2_fu_782_p1) - signed(sext_ln263_3_fu_793_p1));
    sub_ln279_fu_833_p2 <= std_logic_vector(unsigned(xa_4_fu_807_p2) - unsigned(xb_4_fu_812_p2));
    sub_ln285_fu_931_p2 <= std_logic_vector(unsigned(trunc_ln1_reg_2238) - unsigned(grp_fu_529_p2));
    sub_ln304_fu_1036_p2 <= std_logic_vector(unsigned(trunc_ln2_reg_2243) - unsigned(grp_fu_529_p2));
    sub_ln511_fu_1149_p2 <= std_logic_vector(unsigned(zext_ln511_1_fu_1145_p1) - unsigned(zext_ln511_fu_1133_p1));
    sub_ln525_1_fu_1661_p2 <= std_logic_vector(signed(ap_const_lv4_B) - signed(trunc_ln522_1_reg_2357));
    sub_ln525_1cast_fu_1666_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln525_1_fu_1661_p2),12));
    sub_ln525_fu_1486_p2 <= std_logic_vector(signed(ap_const_lv4_9) - signed(trunc_ln8_reg_2331));
    sub_ln525cast_fu_1491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln525_fu_1486_p2),12));
    sub_ln571_1_fu_1727_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(sext_ln566_1_fu_1705_p1));
    sub_ln571_fu_1552_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(sext_ln566_fu_1530_p1));
    sub_ln580_1_fu_1782_p2 <= std_logic_vector(signed(sext_ln580_2_fu_1778_p1) - signed(sext_ln479_2_fu_1658_p1));
    sub_ln580_fu_1607_p2 <= std_logic_vector(signed(sext_ln580_fu_1603_p1) - signed(sext_ln479_fu_1483_p1));
    sub_ln597_1_fu_2028_p2 <= std_logic_vector(signed(sext_ln597_1_fu_2024_p1) - signed(sext_ln477_1_fu_1978_p1));
    sub_ln597_fu_1883_p2 <= std_logic_vector(signed(sext_ln597_fu_1879_p1) - signed(sext_ln477_fu_1833_p1));
    sub_ln620_fu_1354_p2 <= std_logic_vector(unsigned(zext_ln620_1_fu_1350_p1) - unsigned(zext_ln620_fu_1338_p1));
    tmp_10_fu_1588_p3 <= mul_ln574_fu_486_p2(63 downto 63);
    tmp_11_fu_1041_p3 <= sub_ln304_fu_1036_p2(31 downto 31);
    tmp_12_fu_1402_p3 <= sext_ln617_fu_1398_p1(31 downto 31);
    tmp_13_fu_1719_p3 <= mul_ln570_1_fu_490_p2(63 downto 63);
    tmp_14_fu_1763_p3 <= mul_ln574_1_fu_494_p2(63 downto 63);
    tmp_4_fu_1183_p3 <= sext_ln509_fu_1179_p1(31 downto 31);
    tmp_5_fu_901_p1 <= al1_i;
    tmp_6_fu_1561_p4 <= sub_ln571_fu_1552_p2(18 downto 7);
    tmp_7_fu_1544_p3 <= mul_ln570_fu_482_p2(63 downto 63);
    tmp_8_fu_994_p1 <= ah1_i;
    tmp_9_fu_1736_p4 <= sub_ln571_1_fu_1727_p2(18 downto 7);

    tqmf_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state6, ap_CS_fsm_state3, icmp_ln269_fu_721_p2, icmp_ln255_fu_601_p2, zext_ln257_fu_634_p1, zext_ln243_1_fu_746_p1)
    begin
        if (((icmp_ln269_fu_721_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            tqmf_address0 <= ap_const_lv5_0;
        elsif (((icmp_ln269_fu_721_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            tqmf_address0 <= zext_ln243_1_fu_746_p1(5 - 1 downto 0);
        elsif (((icmp_ln255_fu_601_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            tqmf_address0 <= ap_const_lv5_17;
        elsif (((icmp_ln255_fu_601_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            tqmf_address0 <= zext_ln257_fu_634_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            tqmf_address0 <= ap_const_lv5_1;
        else 
            tqmf_address0 <= "XXXXX";
        end if; 
    end process;


    tqmf_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state6, ap_CS_fsm_state3, zext_ln243_fu_622_p1, icmp_ln255_fu_601_p2, zext_ln243_2_fu_922_p1, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            tqmf_address1 <= zext_ln243_2_fu_922_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            tqmf_address1 <= ap_const_lv5_1;
        elsif (((icmp_ln255_fu_601_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            tqmf_address1 <= ap_const_lv5_16;
        elsif (((icmp_ln255_fu_601_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            tqmf_address1 <= zext_ln243_fu_622_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            tqmf_address1 <= ap_const_lv5_0;
        else 
            tqmf_address1 <= "XXXXX";
        end if; 
    end process;


    tqmf_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state6, ap_CS_fsm_state3, icmp_ln269_fu_721_p2, icmp_ln255_fu_601_p2)
    begin
        if ((((icmp_ln255_fu_601_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((icmp_ln269_fu_721_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((icmp_ln255_fu_601_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((icmp_ln269_fu_721_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            tqmf_ce0 <= ap_const_logic_1;
        else 
            tqmf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tqmf_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state6, ap_CS_fsm_state3, icmp_ln255_fu_601_p2, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln255_fu_601_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((icmp_ln255_fu_601_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            tqmf_ce1 <= ap_const_logic_1;
        else 
            tqmf_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    tqmf_d0 <= xin2;

    tqmf_d1_assign_proc : process(xin1, tqmf_q0, ap_CS_fsm_state6, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            tqmf_d1 <= tqmf_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            tqmf_d1 <= xin1;
        else 
            tqmf_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tqmf_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln269_fu_721_p2)
    begin
        if (((icmp_ln269_fu_721_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            tqmf_we0 <= ap_const_logic_1;
        else 
            tqmf_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tqmf_we1_assign_proc : process(ap_CS_fsm_state6, icmp_ln269_fu_721_p2, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((icmp_ln269_fu_721_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            tqmf_we1 <= ap_const_logic_1;
        else 
            tqmf_we1 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln255_1_fu_714_p1 <= xa_1_fu_278(47 - 1 downto 0);
    trunc_ln255_fu_710_p1 <= xb_1_fu_282(47 - 1 downto 0);
    trunc_ln269_fu_736_p1 <= idx118_fu_286(5 - 1 downto 0);
    trunc_ln285_fu_927_p1 <= grp_fu_529_p2(31 - 1 downto 0);
    trunc_ln304_fu_1032_p1 <= grp_fu_529_p2(31 - 1 downto 0);
    trunc_ln4_fu_1889_p4 <= sub_ln597_fu_1883_p2(24 downto 8);
    trunc_ln509_fu_1199_p1 <= select_ln513_fu_1191_p3(15 - 1 downto 0);
    trunc_ln567_1_fu_1993_p1 <= apl2_4_fu_1986_p3(15 - 1 downto 0);
    trunc_ln567_fu_1848_p1 <= apl2_1_fu_1841_p3(15 - 1 downto 0);
    trunc_ln580_1_fu_1788_p4 <= sub_ln580_1_fu_1782_p2(22 downto 7);
    trunc_ln595_1_fu_2089_p1 <= apl1_5_fu_2081_p3(16 - 1 downto 0);
    trunc_ln595_fu_1944_p1 <= apl1_1_fu_1936_p3(16 - 1 downto 0);
    trunc_ln597_1_fu_2034_p4 <= sub_ln597_1_fu_2028_p2(24 downto 8);
    trunc_ln5_fu_1110_p4 <= mul_ln287_fu_1104_p2(30 downto 15);
    trunc_ln617_fu_1418_p1 <= select_ln622_fu_1410_p3(15 - 1 downto 0);
    trunc_ln6_fu_1155_p4 <= sub_ln511_fu_1149_p2(22 downto 7);
    trunc_ln7_fu_1311_p4 <= mul_ln314_fu_1305_p2(28 downto 15);
    trunc_ln_fu_1613_p4 <= sub_ln580_fu_1607_p2(22 downto 7);
    wd1_1_fu_1442_p4 <= select_ln624_fu_1428_p3(10 downto 6);
    wd1_fu_1223_p4 <= select_ln515_fu_1209_p3(10 downto 6);
    wd2_1_fu_1698_p1 <= ah1_i;
    wd2_1_fu_1698_p3 <= (wd2_1_fu_1698_p1 & ap_const_lv2_0);
    wd2_fu_1523_p1 <= al1_i;
    wd2_fu_1523_p3 <= (wd2_fu_1523_p1 & ap_const_lv2_0);
    wd3_1_fu_1916_p2 <= std_logic_vector(unsigned(ap_const_lv15_3C00) - unsigned(apl2_2_fu_1858_p3));
    wd3_2_fu_1670_p2 <= std_logic_vector(shift_right(unsigned(ilb_table_q0),to_integer(unsigned('0' & sub_ln525_1cast_fu_1666_p1(12-1 downto 0)))));
    wd3_3_fu_2061_p2 <= std_logic_vector(unsigned(ap_const_lv15_3C00) - unsigned(apl2_5_fu_2003_p3));
    wd3_fu_1495_p2 <= std_logic_vector(shift_right(unsigned(ilb_table_q1),to_integer(unsigned('0' & sub_ln525cast_fu_1491_p1(12-1 downto 0)))));
    wd_fu_1360_p4 <= sub_ln620_fu_1354_p2(22 downto 7);
    wl_code_table_address0 <= zext_ln287_1_fu_1026_p1(4 - 1 downto 0);

    wl_code_table_ce0_assign_proc : process(ap_CS_fsm_state9, ap_block_state9_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            wl_code_table_ce0 <= ap_const_logic_1;
        else 
            wl_code_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    xa_3_fu_674_p2 <= std_logic_vector(signed(sext_ln257_2_fu_670_p1) + signed(xa_1_fu_278));
    xa_4_fu_807_p2 <= std_logic_vector(signed(sext_ln263_1_fu_771_p1) + signed(trunc_ln255_1_reg_2209));
    xa_fu_569_p2 <= std_logic_vector(signed(sext_ln250_fu_553_p1) - signed(sext_ln250_1_fu_565_p1));
    xb_3_fu_694_p2 <= std_logic_vector(signed(sext_ln258_2_fu_690_p1) + signed(xb_1_fu_282));
    xb_4_fu_812_p2 <= std_logic_vector(signed(sext_ln262_fu_803_p1) + signed(trunc_ln255_reg_2204));
    zext_ln243_1_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln243_1_fu_740_p2),64));
    zext_ln243_2_fu_922_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln243_2_fu_917_p2),64));
    zext_ln243_fu_622_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln243_fu_616_p2),64));
    zext_ln257_fu_634_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln257_fu_628_p2),64));
    zext_ln287_1_fu_1026_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_1016_p4),64));
    zext_ln310_2_fu_1073_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(decis_fu_1063_p4),32));
    zext_ln511_1_fu_1145_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln3_fu_1137_p3),23));
    zext_ln511_fu_1133_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nbl_i),23));
    zext_ln525_1_fu_1462_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd1_1_fu_1442_p4),64));
    zext_ln525_fu_1243_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd1_fu_1223_p4),64));
    zext_ln595_1_fu_1926_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd3_1_fu_1916_p2),16));
    zext_ln595_2_fu_2067_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd3_3_fu_2061_p2),18));
    zext_ln595_3_fu_2071_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd3_3_fu_2061_p2),16));
    zext_ln595_fu_1922_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd3_1_fu_1916_p2),18));
    zext_ln620_1_fu_1350_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln7_fu_1342_p3),23));
    zext_ln620_fu_1338_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nbh_i),23));
end behav;
