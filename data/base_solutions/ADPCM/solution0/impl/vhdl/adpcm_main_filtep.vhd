-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity adpcm_main_filtep is
port (
    ap_ready : OUT STD_LOGIC;
    rlt1 : IN STD_LOGIC_VECTOR (30 downto 0);
    al1 : IN STD_LOGIC_VECTOR (15 downto 0);
    rlt2 : IN STD_LOGIC_VECTOR (30 downto 0);
    al2 : IN STD_LOGIC_VECTOR (14 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of adpcm_main_filtep is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal pl_fu_64_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal pl2_fu_82_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln479_fu_56_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal pl_1_fu_60_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal pl_2_fu_100_p2 : STD_LOGIC_VECTOR (46 downto 0);

    component adpcm_main_mul_15s_32s_47_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component adpcm_main_mul_16s_32s_47_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;



begin
    mul_15s_32s_47_1_1_U48 : component adpcm_main_mul_15s_32s_47_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        din0 => al2,
        din1 => pl2_fu_82_p3,
        dout => mul_ln479_fu_56_p2);

    mul_16s_32s_47_1_1_U49 : component adpcm_main_mul_16s_32s_47_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        din0 => al1,
        din1 => pl_fu_64_p3,
        dout => pl_1_fu_60_p2);




    ap_ready <= ap_const_logic_1;
    ap_return <= pl_2_fu_100_p2(46 downto 15);
    pl2_fu_82_p3 <= (rlt2 & ap_const_lv1_0);
    pl_2_fu_100_p2 <= std_logic_vector(unsigned(mul_ln479_fu_56_p2) + unsigned(pl_1_fu_60_p2));
    pl_fu_64_p3 <= (rlt1 & ap_const_lv1_0);
end behav;
