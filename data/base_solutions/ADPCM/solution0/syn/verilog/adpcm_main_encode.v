// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module adpcm_main_encode (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        xin1,
        xin2,
        tqmf_address0,
        tqmf_ce0,
        tqmf_we0,
        tqmf_d0,
        tqmf_q0,
        tqmf_address1,
        tqmf_ce1,
        tqmf_we1,
        tqmf_d1,
        tqmf_q1,
        h_address0,
        h_ce0,
        h_q0,
        h_address1,
        h_ce1,
        h_q1,
        delay_bpl_address0,
        delay_bpl_ce0,
        delay_bpl_we0,
        delay_bpl_d0,
        delay_bpl_q0,
        delay_dltx_address0,
        delay_dltx_ce0,
        delay_dltx_we0,
        delay_dltx_d0,
        delay_dltx_q0,
        delay_dltx_address1,
        delay_dltx_ce1,
        delay_dltx_we1,
        delay_dltx_d1,
        delay_dltx_q1,
        rlt1_i,
        rlt1_o,
        rlt1_o_ap_vld,
        al1_i,
        al1_o,
        al1_o_ap_vld,
        rlt2_i,
        rlt2_o,
        rlt2_o_ap_vld,
        al2_i,
        al2_o,
        al2_o_ap_vld,
        detl_i,
        detl_o,
        detl_o_ap_vld,
        il,
        il_ap_vld,
        qq4_code4_table_address0,
        qq4_code4_table_ce0,
        qq4_code4_table_q0,
        nbl_i,
        nbl_o,
        nbl_o_ap_vld,
        plt1_i,
        plt1_o,
        plt1_o_ap_vld,
        plt2_i,
        plt2_o,
        plt2_o_ap_vld,
        delay_bph_address0,
        delay_bph_ce0,
        delay_bph_we0,
        delay_bph_d0,
        delay_bph_q0,
        delay_dhx_address0,
        delay_dhx_ce0,
        delay_dhx_we0,
        delay_dhx_d0,
        delay_dhx_q0,
        delay_dhx_address1,
        delay_dhx_ce1,
        delay_dhx_we1,
        delay_dhx_d1,
        delay_dhx_q1,
        rh1_i,
        rh1_o,
        rh1_o_ap_vld,
        ah1_i,
        ah1_o,
        ah1_o_ap_vld,
        rh2_i,
        rh2_o,
        rh2_o_ap_vld,
        ah2_i,
        ah2_o,
        ah2_o_ap_vld,
        deth_i,
        deth_o,
        deth_o_ap_vld,
        nbh_i,
        nbh_o,
        nbh_o_ap_vld,
        ph1_i,
        ph1_o,
        ph1_o_ap_vld,
        ph2_i,
        ph2_o,
        ph2_o_ap_vld,
        ap_return,
        grp_filtep_fu_650_p_din1,
        grp_filtep_fu_650_p_din2,
        grp_filtep_fu_650_p_din3,
        grp_filtep_fu_650_p_din4,
        grp_filtep_fu_650_p_dout0,
        grp_filtep_fu_650_p_ready,
        grp_logscl_fu_657_p_din1,
        grp_logscl_fu_657_p_din2,
        grp_logscl_fu_657_p_dout0,
        grp_logscl_fu_657_p_start,
        grp_logscl_fu_657_p_ready,
        grp_logscl_fu_657_p_done,
        grp_logscl_fu_657_p_idle,
        grp_scalel_fu_663_p_din1,
        grp_scalel_fu_663_p_din2,
        grp_scalel_fu_663_p_dout0,
        grp_scalel_fu_663_p_start,
        grp_scalel_fu_663_p_ready,
        grp_scalel_fu_663_p_done,
        grp_scalel_fu_663_p_idle,
        grp_uppol1_fu_669_p_din1,
        grp_uppol1_fu_669_p_din2,
        grp_uppol1_fu_669_p_din3,
        grp_uppol1_fu_669_p_din4,
        grp_uppol1_fu_669_p_dout0,
        grp_uppol1_fu_669_p_start,
        grp_uppol1_fu_669_p_ready,
        grp_uppol1_fu_669_p_done,
        grp_uppol1_fu_669_p_idle,
        grp_uppol2_fu_676_p_din1,
        grp_uppol2_fu_676_p_din2,
        grp_uppol2_fu_676_p_din3,
        grp_uppol2_fu_676_p_din4,
        grp_uppol2_fu_676_p_din5,
        grp_uppol2_fu_676_p_dout0,
        grp_uppol2_fu_676_p_start,
        grp_uppol2_fu_676_p_ready,
        grp_uppol2_fu_676_p_done,
        grp_uppol2_fu_676_p_idle,
        tmp_s_logsch_fu_684_p_din1,
        tmp_s_logsch_fu_684_p_din2,
        tmp_s_logsch_fu_684_p_dout0,
        tmp_s_logsch_fu_684_p_ready
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] xin1;
input  [31:0] xin2;
output  [4:0] tqmf_address0;
output   tqmf_ce0;
output   tqmf_we0;
output  [31:0] tqmf_d0;
input  [31:0] tqmf_q0;
output  [4:0] tqmf_address1;
output   tqmf_ce1;
output   tqmf_we1;
output  [31:0] tqmf_d1;
input  [31:0] tqmf_q1;
output  [4:0] h_address0;
output   h_ce0;
input  [14:0] h_q0;
output  [4:0] h_address1;
output   h_ce1;
input  [14:0] h_q1;
output  [2:0] delay_bpl_address0;
output   delay_bpl_ce0;
output   delay_bpl_we0;
output  [31:0] delay_bpl_d0;
input  [31:0] delay_bpl_q0;
output  [2:0] delay_dltx_address0;
output   delay_dltx_ce0;
output   delay_dltx_we0;
output  [15:0] delay_dltx_d0;
input  [15:0] delay_dltx_q0;
output  [2:0] delay_dltx_address1;
output   delay_dltx_ce1;
output   delay_dltx_we1;
output  [15:0] delay_dltx_d1;
input  [15:0] delay_dltx_q1;
input  [30:0] rlt1_i;
output  [30:0] rlt1_o;
output   rlt1_o_ap_vld;
input  [15:0] al1_i;
output  [15:0] al1_o;
output   al1_o_ap_vld;
input  [30:0] rlt2_i;
output  [30:0] rlt2_o;
output   rlt2_o_ap_vld;
input  [14:0] al2_i;
output  [14:0] al2_o;
output   al2_o_ap_vld;
input  [14:0] detl_i;
output  [14:0] detl_o;
output   detl_o_ap_vld;
output  [5:0] il;
output   il_ap_vld;
output  [3:0] qq4_code4_table_address0;
output   qq4_code4_table_ce0;
input  [15:0] qq4_code4_table_q0;
input  [14:0] nbl_i;
output  [14:0] nbl_o;
output   nbl_o_ap_vld;
input  [31:0] plt1_i;
output  [31:0] plt1_o;
output   plt1_o_ap_vld;
input  [31:0] plt2_i;
output  [31:0] plt2_o;
output   plt2_o_ap_vld;
output  [2:0] delay_bph_address0;
output   delay_bph_ce0;
output   delay_bph_we0;
output  [31:0] delay_bph_d0;
input  [31:0] delay_bph_q0;
output  [2:0] delay_dhx_address0;
output   delay_dhx_ce0;
output   delay_dhx_we0;
output  [15:0] delay_dhx_d0;
input  [15:0] delay_dhx_q0;
output  [2:0] delay_dhx_address1;
output   delay_dhx_ce1;
output   delay_dhx_we1;
output  [15:0] delay_dhx_d1;
input  [15:0] delay_dhx_q1;
input  [30:0] rh1_i;
output  [30:0] rh1_o;
output   rh1_o_ap_vld;
input  [15:0] ah1_i;
output  [15:0] ah1_o;
output   ah1_o_ap_vld;
input  [30:0] rh2_i;
output  [30:0] rh2_o;
output   rh2_o_ap_vld;
input  [14:0] ah2_i;
output  [14:0] ah2_o;
output   ah2_o_ap_vld;
input  [14:0] deth_i;
output  [14:0] deth_o;
output   deth_o_ap_vld;
input  [14:0] nbh_i;
output  [14:0] nbh_o;
output   nbh_o_ap_vld;
input  [31:0] ph1_i;
output  [31:0] ph1_o;
output   ph1_o_ap_vld;
input  [31:0] ph2_i;
output  [31:0] ph2_o;
output   ph2_o_ap_vld;
output  [7:0] ap_return;
output  [30:0] grp_filtep_fu_650_p_din1;
output  [15:0] grp_filtep_fu_650_p_din2;
output  [30:0] grp_filtep_fu_650_p_din3;
output  [14:0] grp_filtep_fu_650_p_din4;
input  [31:0] grp_filtep_fu_650_p_dout0;
input   grp_filtep_fu_650_p_ready;
output  [5:0] grp_logscl_fu_657_p_din1;
output  [14:0] grp_logscl_fu_657_p_din2;
input  [14:0] grp_logscl_fu_657_p_dout0;
output   grp_logscl_fu_657_p_start;
input   grp_logscl_fu_657_p_ready;
input   grp_logscl_fu_657_p_done;
input   grp_logscl_fu_657_p_idle;
output  [14:0] grp_scalel_fu_663_p_din1;
output  [3:0] grp_scalel_fu_663_p_din2;
input  [14:0] grp_scalel_fu_663_p_dout0;
output   grp_scalel_fu_663_p_start;
input   grp_scalel_fu_663_p_ready;
input   grp_scalel_fu_663_p_done;
input   grp_scalel_fu_663_p_idle;
output  [15:0] grp_uppol1_fu_669_p_din1;
output  [14:0] grp_uppol1_fu_669_p_din2;
output  [31:0] grp_uppol1_fu_669_p_din3;
output  [31:0] grp_uppol1_fu_669_p_din4;
input  [15:0] grp_uppol1_fu_669_p_dout0;
output   grp_uppol1_fu_669_p_start;
input   grp_uppol1_fu_669_p_ready;
input   grp_uppol1_fu_669_p_done;
input   grp_uppol1_fu_669_p_idle;
output  [15:0] grp_uppol2_fu_676_p_din1;
output  [14:0] grp_uppol2_fu_676_p_din2;
output  [31:0] grp_uppol2_fu_676_p_din3;
output  [31:0] grp_uppol2_fu_676_p_din4;
output  [31:0] grp_uppol2_fu_676_p_din5;
input  [14:0] grp_uppol2_fu_676_p_dout0;
output   grp_uppol2_fu_676_p_start;
input   grp_uppol2_fu_676_p_ready;
input   grp_uppol2_fu_676_p_done;
input   grp_uppol2_fu_676_p_idle;
output  [1:0] tmp_s_logsch_fu_684_p_din1;
output  [14:0] tmp_s_logsch_fu_684_p_din2;
input  [14:0] tmp_s_logsch_fu_684_p_dout0;
input   tmp_s_logsch_fu_684_p_ready;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] tqmf_address0;
reg tqmf_ce0;
reg tqmf_we0;
reg[4:0] tqmf_address1;
reg tqmf_ce1;
reg tqmf_we1;
reg[31:0] tqmf_d1;
reg h_ce0;
reg h_ce1;
reg[2:0] delay_bpl_address0;
reg delay_bpl_ce0;
reg delay_bpl_we0;
reg[2:0] delay_dltx_address0;
reg delay_dltx_ce0;
reg delay_dltx_we0;
reg delay_dltx_ce1;
reg delay_dltx_we1;
reg[30:0] rlt1_o;
reg rlt1_o_ap_vld;
reg[15:0] al1_o;
reg al1_o_ap_vld;
reg[30:0] rlt2_o;
reg rlt2_o_ap_vld;
reg[14:0] al2_o;
reg al2_o_ap_vld;
reg[14:0] detl_o;
reg detl_o_ap_vld;
reg il_ap_vld;
reg qq4_code4_table_ce0;
reg[14:0] nbl_o;
reg nbl_o_ap_vld;
reg[31:0] plt1_o;
reg plt1_o_ap_vld;
reg[31:0] plt2_o;
reg plt2_o_ap_vld;
reg[2:0] delay_bph_address0;
reg delay_bph_ce0;
reg delay_bph_we0;
reg[2:0] delay_dhx_address0;
reg delay_dhx_ce0;
reg delay_dhx_we0;
reg delay_dhx_ce1;
reg delay_dhx_we1;
reg[30:0] rh1_o;
reg rh1_o_ap_vld;
reg[15:0] ah1_o;
reg ah1_o_ap_vld;
reg[30:0] rh2_o;
reg rh2_o_ap_vld;
reg[14:0] ah2_o;
reg ah2_o_ap_vld;
reg[14:0] deth_o;
reg deth_o_ap_vld;
reg[14:0] nbh_o;
reg nbh_o_ap_vld;
reg[31:0] ph1_o;
reg ph1_o_ap_vld;
reg[31:0] ph2_o;
reg ph2_o_ap_vld;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_449;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state8;
wire    grp_filtez_fu_318_ap_done;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire   [46:0] trunc_ln255_fu_634_p1;
reg   [46:0] trunc_ln255_reg_1239;
wire    ap_CS_fsm_state5;
wire   [46:0] trunc_ln255_1_fu_638_p1;
reg   [46:0] trunc_ln255_1_reg_1244;
reg   [31:0] tqmf_load_2_reg_1249;
reg   [31:0] tqmf_load_3_reg_1254;
wire   [4:0] trunc_ln269_fu_660_p1;
reg   [4:0] trunc_ln269_reg_1263;
reg   [31:0] trunc_ln8_reg_1273;
reg   [31:0] trunc_ln9_reg_1278;
wire   [31:0] grp_filtez_fu_318_ap_return;
reg   [31:0] tmp_reg_1289;
wire   [30:0] trunc_ln285_fu_809_p1;
reg   [30:0] trunc_ln285_reg_1294;
wire   [31:0] sub_ln285_fu_813_p2;
reg   [31:0] sub_ln285_reg_1299;
wire   [5:0] grp_quantl_fu_336_ap_return;
reg   [5:0] tmp_2_reg_1313;
wire    ap_CS_fsm_state9;
reg   [31:0] tmp_7_reg_1324;
wire   [30:0] trunc_ln304_fu_871_p1;
reg   [30:0] trunc_ln304_reg_1329;
wire   [1:0] add_ln314_fu_939_p2;
reg   [1:0] add_ln314_reg_1337;
wire  signed [15:0] trunc_ln_fu_958_p4;
reg   [15:0] trunc_ln_reg_1344;
wire    ap_CS_fsm_state10;
wire  signed [13:0] trunc_ln1_fu_1009_p4;
reg  signed [13:0] trunc_ln1_reg_1350;
wire   [31:0] add_ln290_fu_1042_p2;
reg   [31:0] add_ln290_reg_1359;
wire    ap_CS_fsm_state11;
reg   [31:0] plt1_load_reg_1365;
reg   [31:0] plt2_load_reg_1371;
wire  signed [15:0] sext_ln315_1_fu_1073_p1;
reg   [15:0] sext_ln315_1_reg_1376;
reg   [14:0] tmp_s_reg_1381;
wire   [31:0] add_ln317_fu_1088_p2;
reg   [31:0] add_ln317_reg_1386;
reg   [31:0] ph1_load_reg_1392;
reg   [31:0] ph2_load_reg_1398;
reg   [14:0] tmp_3_reg_1403;
wire    ap_CS_fsm_state12;
reg   [14:0] tmp_5_reg_1408;
wire   [14:0] grp_uppol2_fu_388_ap_return;
reg   [14:0] tmp_11_reg_1413;
wire    grp_filtez_fu_318_ap_start;
wire    grp_filtez_fu_318_ap_idle;
wire    grp_filtez_fu_318_ap_ready;
wire   [2:0] grp_filtez_fu_318_bpl_address0;
wire    grp_filtez_fu_318_bpl_ce0;
reg   [31:0] grp_filtez_fu_318_bpl_q0;
wire   [2:0] grp_filtez_fu_318_dlt_address0;
wire    grp_filtez_fu_318_dlt_ce0;
reg   [15:0] grp_filtez_fu_318_dlt_q0;
reg   [30:0] grp_filtep_fu_328_rlt1;
reg   [15:0] grp_filtep_fu_328_al1;
reg   [30:0] grp_filtep_fu_328_rlt2;
reg   [14:0] grp_filtep_fu_328_al2;
wire    grp_quantl_fu_336_ap_start;
wire    grp_quantl_fu_336_ap_done;
wire    grp_quantl_fu_336_ap_idle;
wire    grp_quantl_fu_336_ap_ready;
wire    tmp_9_abs_r_fu_348_ap_ready;
wire   [31:0] tmp_9_abs_r_fu_348_ap_return;
wire    grp_logscl_fu_353_ap_ready;
wire    grp_upzero_fu_361_ap_start;
wire    grp_upzero_fu_361_ap_done;
wire    grp_upzero_fu_361_ap_idle;
wire    grp_upzero_fu_361_ap_ready;
wire   [2:0] grp_upzero_fu_361_dlti_address0;
wire    grp_upzero_fu_361_dlti_ce0;
wire    grp_upzero_fu_361_dlti_we0;
wire   [15:0] grp_upzero_fu_361_dlti_d0;
wire   [2:0] grp_upzero_fu_361_dlti_address1;
wire    grp_upzero_fu_361_dlti_ce1;
wire    grp_upzero_fu_361_dlti_we1;
wire   [15:0] grp_upzero_fu_361_dlti_d1;
wire   [2:0] grp_upzero_fu_361_bli_address0;
wire    grp_upzero_fu_361_bli_ce0;
wire    grp_upzero_fu_361_bli_we0;
wire   [31:0] grp_upzero_fu_361_bli_d0;
wire    grp_upzero_fu_370_ap_start;
wire    grp_upzero_fu_370_ap_done;
wire    grp_upzero_fu_370_ap_idle;
wire    grp_upzero_fu_370_ap_ready;
wire   [2:0] grp_upzero_fu_370_dlti_address0;
wire    grp_upzero_fu_370_dlti_ce0;
wire    grp_upzero_fu_370_dlti_we0;
wire   [15:0] grp_upzero_fu_370_dlti_d0;
wire   [2:0] grp_upzero_fu_370_dlti_address1;
wire    grp_upzero_fu_370_dlti_ce1;
wire    grp_upzero_fu_370_dlti_we1;
wire   [15:0] grp_upzero_fu_370_dlti_d1;
wire   [2:0] grp_upzero_fu_370_bli_address0;
wire    grp_upzero_fu_370_bli_ce0;
wire    grp_upzero_fu_370_bli_we0;
wire   [31:0] grp_upzero_fu_370_bli_d0;
wire    grp_uppol2_fu_379_ap_ready;
wire    grp_uppol2_fu_388_ap_start;
wire    grp_uppol2_fu_388_ap_done;
wire    grp_uppol2_fu_388_ap_idle;
wire    grp_uppol2_fu_388_ap_ready;
wire    grp_scalel_fu_403_ap_ready;
reg   [14:0] grp_scalel_fu_403_nbl;
reg   [3:0] grp_scalel_fu_403_shift_constant;
wire    grp_uppol1_fu_414_ap_ready;
wire    grp_uppol1_fu_422_ap_start;
wire    grp_uppol1_fu_422_ap_done;
wire    grp_uppol1_fu_422_ap_idle;
wire    grp_uppol1_fu_422_ap_ready;
wire   [15:0] grp_uppol1_fu_422_ap_return;
reg    grp_filtez_fu_318_ap_start_reg;
wire   [0:0] icmp_ln269_fu_645_p2;
reg    grp_quantl_fu_336_ap_start_reg;
wire   [31:0] sub_ln304_fu_875_p2;
reg    grp_logscl_fu_353_ap_start_reg;
reg    grp_upzero_fu_361_ap_start_reg;
reg    grp_upzero_fu_370_ap_start_reg;
reg    grp_uppol2_fu_379_ap_start_reg;
reg    grp_uppol2_fu_388_ap_start_reg;
reg    grp_scalel_fu_403_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
reg    grp_uppol1_fu_414_ap_start_reg;
reg    grp_uppol1_fu_422_ap_start_reg;
wire   [63:0] zext_ln243_fu_546_p1;
wire   [0:0] icmp_ln255_fu_525_p2;
wire   [63:0] zext_ln257_fu_558_p1;
wire   [63:0] zext_ln243_1_fu_670_p1;
wire   [63:0] zext_ln243_2_fu_804_p1;
wire    ap_CS_fsm_state7;
wire   [63:0] zext_ln287_1_fu_866_p1;
wire   [30:0] add_ln294_fu_972_p2;
reg    ap_block_state14_on_subcall_done;
reg    ap_block_state12_on_subcall_done;
reg    ap_block_state9_on_subcall_done;
wire   [30:0] add_ln321_fu_1023_p2;
reg   [4:0] idx_fu_196;
wire   [4:0] add_ln243_fu_540_p2;
reg   [3:0] i_fu_200;
wire   [3:0] i_11_fu_531_p2;
reg   [49:0] xa_1_fu_204;
wire   [49:0] xa_3_fu_598_p2;
wire  signed [49:0] sext_ln244_fu_499_p1;
wire    ap_CS_fsm_state4;
reg   [49:0] xb_1_fu_208;
wire   [49:0] xb_3_fu_618_p2;
wire  signed [49:0] sext_ln244_1_fu_508_p1;
reg   [5:0] idx17_fu_212;
wire   [5:0] add_ln269_fu_675_p2;
reg   [4:0] i_6_fu_216;
wire   [4:0] i_13_fu_651_p2;
reg  signed [31:0] grp_fu_438_p0;
wire  signed [38:0] sext_ln251_fu_503_p1;
wire  signed [38:0] sext_ln263_fu_691_p1;
wire  signed [6:0] grp_fu_438_p1;
wire   [35:0] shl_ln_fu_469_p3;
wire   [33:0] shl_ln250_1_fu_481_p3;
wire  signed [36:0] sext_ln250_fu_477_p1;
wire  signed [36:0] sext_ln250_1_fu_489_p1;
wire   [36:0] xa_fu_493_p2;
wire   [38:0] grp_fu_438_p2;
wire   [4:0] add_ln257_fu_552_p2;
wire   [46:0] mul_ln257_fu_430_p2;
wire  signed [49:0] sext_ln257_2_fu_594_p1;
wire   [46:0] mul_ln258_fu_434_p2;
wire  signed [49:0] sext_ln258_2_fu_614_p1;
wire   [4:0] add_ln243_1_fu_664_p2;
wire   [35:0] shl_ln2_fu_699_p3;
wire   [33:0] shl_ln263_1_fu_710_p3;
wire  signed [36:0] sext_ln263_2_fu_706_p1;
wire  signed [36:0] sext_ln263_3_fu_717_p1;
wire   [36:0] sub_ln263_fu_721_p2;
wire  signed [46:0] sext_ln263_1_fu_695_p1;
wire  signed [46:0] sext_ln262_fu_727_p1;
wire   [46:0] xb_4_fu_736_p2;
wire   [46:0] xa_4_fu_731_p2;
wire   [46:0] add_ln278_fu_741_p2;
wire   [46:0] sub_ln279_fu_757_p2;
wire   [4:0] add_ln243_2_fu_799_p2;
wire   [31:0] grp_fu_453_p2;
wire   [3:0] lshr_ln_fu_856_p4;
wire   [0:0] tmp_14_fu_881_p3;
wire   [14:0] mul_ln310_fu_905_p0;
wire   [10:0] mul_ln310_fu_905_p1;
wire   [24:0] mul_ln310_fu_905_p2;
wire   [12:0] decis_fu_911_p4;
wire   [31:0] zext_ln310_2_fu_921_p1;
wire   [0:0] icmp_ln311_fu_925_p2;
wire   [1:0] select_ln311_fu_931_p3;
wire   [1:0] select_ln305_fu_889_p3;
wire   [14:0] mul_ln287_fu_952_p1;
wire   [30:0] mul_ln287_fu_952_p2;
wire  signed [30:0] sext_ln288_fu_968_p1;
wire  signed [13:0] tmp_13_fu_986_p6;
wire   [14:0] mul_ln314_fu_1003_p1;
wire   [28:0] mul_ln314_fu_1003_p2;
wire  signed [30:0] sext_ln315_fu_1019_p1;
wire  signed [31:0] sext_ln287_1_fu_1034_p1;
wire  signed [31:0] sext_ln314_1_fu_1070_p1;
reg   [13:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
wire   [30:0] mul_ln287_fu_952_p10;
wire   [24:0] mul_ln310_fu_905_p00;
wire   [28:0] mul_ln314_fu_1003_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 grp_filtez_fu_318_ap_start_reg = 1'b0;
#0 grp_quantl_fu_336_ap_start_reg = 1'b0;
#0 grp_logscl_fu_353_ap_start_reg = 1'b0;
#0 grp_upzero_fu_361_ap_start_reg = 1'b0;
#0 grp_upzero_fu_370_ap_start_reg = 1'b0;
#0 grp_uppol2_fu_379_ap_start_reg = 1'b0;
#0 grp_uppol2_fu_388_ap_start_reg = 1'b0;
#0 grp_scalel_fu_403_ap_start_reg = 1'b0;
#0 grp_uppol1_fu_414_ap_start_reg = 1'b0;
#0 grp_uppol1_fu_422_ap_start_reg = 1'b0;
#0 idx_fu_196 = 5'd0;
#0 i_fu_200 = 4'd0;
#0 xa_1_fu_204 = 50'd0;
#0 xb_1_fu_208 = 50'd0;
#0 idx17_fu_212 = 6'd0;
#0 i_6_fu_216 = 5'd0;
end

adpcm_main_filtez grp_filtez_fu_318(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_filtez_fu_318_ap_start),
    .ap_done(grp_filtez_fu_318_ap_done),
    .ap_idle(grp_filtez_fu_318_ap_idle),
    .ap_ready(grp_filtez_fu_318_ap_ready),
    .bpl_address0(grp_filtez_fu_318_bpl_address0),
    .bpl_ce0(grp_filtez_fu_318_bpl_ce0),
    .bpl_q0(grp_filtez_fu_318_bpl_q0),
    .dlt_address0(grp_filtez_fu_318_dlt_address0),
    .dlt_ce0(grp_filtez_fu_318_dlt_ce0),
    .dlt_q0(grp_filtez_fu_318_dlt_q0),
    .ap_return(grp_filtez_fu_318_ap_return)
);

adpcm_main_quantl grp_quantl_fu_336(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_quantl_fu_336_ap_start),
    .ap_done(grp_quantl_fu_336_ap_done),
    .ap_idle(grp_quantl_fu_336_ap_idle),
    .ap_ready(grp_quantl_fu_336_ap_ready),
    .el(sub_ln285_reg_1299),
    .detl(detl_i),
    .ap_return(grp_quantl_fu_336_ap_return)
);

adpcm_main_abs_r tmp_9_abs_r_fu_348(
    .ap_ready(tmp_9_abs_r_fu_348_ap_ready),
    .n(sub_ln304_fu_875_p2),
    .ap_return(tmp_9_abs_r_fu_348_ap_return)
);

adpcm_main_upzero grp_upzero_fu_361(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_upzero_fu_361_ap_start),
    .ap_done(grp_upzero_fu_361_ap_done),
    .ap_idle(grp_upzero_fu_361_ap_idle),
    .ap_ready(grp_upzero_fu_361_ap_ready),
    .dlt(trunc_ln_reg_1344),
    .dlti_address0(grp_upzero_fu_361_dlti_address0),
    .dlti_ce0(grp_upzero_fu_361_dlti_ce0),
    .dlti_we0(grp_upzero_fu_361_dlti_we0),
    .dlti_d0(grp_upzero_fu_361_dlti_d0),
    .dlti_q0(delay_dltx_q0),
    .dlti_address1(grp_upzero_fu_361_dlti_address1),
    .dlti_ce1(grp_upzero_fu_361_dlti_ce1),
    .dlti_we1(grp_upzero_fu_361_dlti_we1),
    .dlti_d1(grp_upzero_fu_361_dlti_d1),
    .dlti_q1(delay_dltx_q1),
    .bli_address0(grp_upzero_fu_361_bli_address0),
    .bli_ce0(grp_upzero_fu_361_bli_ce0),
    .bli_we0(grp_upzero_fu_361_bli_we0),
    .bli_d0(grp_upzero_fu_361_bli_d0),
    .bli_q0(delay_bpl_q0)
);

adpcm_main_upzero grp_upzero_fu_370(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_upzero_fu_370_ap_start),
    .ap_done(grp_upzero_fu_370_ap_done),
    .ap_idle(grp_upzero_fu_370_ap_idle),
    .ap_ready(grp_upzero_fu_370_ap_ready),
    .dlt(sext_ln315_1_reg_1376),
    .dlti_address0(grp_upzero_fu_370_dlti_address0),
    .dlti_ce0(grp_upzero_fu_370_dlti_ce0),
    .dlti_we0(grp_upzero_fu_370_dlti_we0),
    .dlti_d0(grp_upzero_fu_370_dlti_d0),
    .dlti_q0(delay_dhx_q0),
    .dlti_address1(grp_upzero_fu_370_dlti_address1),
    .dlti_ce1(grp_upzero_fu_370_dlti_ce1),
    .dlti_we1(grp_upzero_fu_370_dlti_we1),
    .dlti_d1(grp_upzero_fu_370_dlti_d1),
    .dlti_q1(delay_dhx_q1),
    .bli_address0(grp_upzero_fu_370_bli_address0),
    .bli_ce0(grp_upzero_fu_370_bli_ce0),
    .bli_we0(grp_upzero_fu_370_bli_we0),
    .bli_d0(grp_upzero_fu_370_bli_d0),
    .bli_q0(delay_bph_q0)
);

adpcm_main_uppol2 grp_uppol2_fu_388(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_uppol2_fu_388_ap_start),
    .ap_done(grp_uppol2_fu_388_ap_done),
    .ap_idle(grp_uppol2_fu_388_ap_idle),
    .ap_ready(grp_uppol2_fu_388_ap_ready),
    .al1(ah1_i),
    .al2(ah2_i),
    .plt(add_ln317_reg_1386),
    .plt1(ph1_load_reg_1392),
    .plt2(ph2_load_reg_1398),
    .ap_return(grp_uppol2_fu_388_ap_return)
);

adpcm_main_uppol1 grp_uppol1_fu_422(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_uppol1_fu_422_ap_start),
    .ap_done(grp_uppol1_fu_422_ap_done),
    .ap_idle(grp_uppol1_fu_422_ap_idle),
    .ap_ready(grp_uppol1_fu_422_ap_ready),
    .al1(ah1_i),
    .apl2(tmp_11_reg_1413),
    .plt(add_ln317_reg_1386),
    .plt1(ph1_load_reg_1392),
    .ap_return(grp_uppol1_fu_422_ap_return)
);

adpcm_main_mul_15s_32s_47_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 47 ))
mul_15s_32s_47_1_1_U92(
    .din0(h_q1),
    .din1(tqmf_q1),
    .dout(mul_ln257_fu_430_p2)
);

adpcm_main_mul_15s_32s_47_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 47 ))
mul_15s_32s_47_1_1_U93(
    .din0(h_q0),
    .din1(tqmf_q0),
    .dout(mul_ln258_fu_434_p2)
);

adpcm_main_mul_32s_7s_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 39 ))
mul_32s_7s_39_1_1_U94(
    .din0(grp_fu_438_p0),
    .din1(grp_fu_438_p1),
    .dout(grp_fu_438_p2)
);

adpcm_main_mul_15ns_11ns_25_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 25 ))
mul_15ns_11ns_25_1_1_U95(
    .din0(mul_ln310_fu_905_p0),
    .din1(mul_ln310_fu_905_p1),
    .dout(mul_ln310_fu_905_p2)
);

adpcm_main_mul_16s_15ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 31 ))
mul_16s_15ns_31_1_1_U96(
    .din0(qq4_code4_table_q0),
    .din1(mul_ln287_fu_952_p1),
    .dout(mul_ln287_fu_952_p2)
);

adpcm_main_mux_4_2_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 14 ),
    .din3_WIDTH( 14 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 14 ))
mux_4_2_14_1_1_U97(
    .din0(14'd8976),
    .din1(14'd14768),
    .din2(14'd7408),
    .din3(14'd1616),
    .din4(add_ln314_reg_1337),
    .dout(tmp_13_fu_986_p6)
);

adpcm_main_mul_14s_15ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
mul_14s_15ns_29_1_1_U98(
    .din0(tmp_13_fu_986_p6),
    .din1(mul_ln314_fu_1003_p1),
    .dout(mul_ln314_fu_1003_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_filtez_fu_318_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln269_fu_645_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == ap_CS_fsm_state8) & (grp_filtez_fu_318_ap_done == 1'b1)))) begin
            grp_filtez_fu_318_ap_start_reg <= 1'b1;
        end else if ((grp_filtez_fu_318_ap_ready == 1'b1)) begin
            grp_filtez_fu_318_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_logscl_fu_353_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_logscl_fu_353_ap_start_reg <= 1'b1;
        end else if ((grp_logscl_fu_353_ap_ready == 1'b1)) begin
            grp_logscl_fu_353_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_quantl_fu_336_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state8) & (grp_filtez_fu_318_ap_done == 1'b1))) begin
            grp_quantl_fu_336_ap_start_reg <= 1'b1;
        end else if ((grp_quantl_fu_336_ap_ready == 1'b1)) begin
            grp_quantl_fu_336_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_scalel_fu_403_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11))) begin
            grp_scalel_fu_403_ap_start_reg <= 1'b1;
        end else if ((grp_scalel_fu_403_ap_ready == 1'b1)) begin
            grp_scalel_fu_403_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_uppol1_fu_414_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_uppol1_fu_414_ap_start_reg <= 1'b1;
        end else if ((grp_uppol1_fu_414_ap_ready == 1'b1)) begin
            grp_uppol1_fu_414_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_uppol1_fu_422_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_uppol1_fu_422_ap_start_reg <= 1'b1;
        end else if ((grp_uppol1_fu_422_ap_ready == 1'b1)) begin
            grp_uppol1_fu_422_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_uppol2_fu_379_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_uppol2_fu_379_ap_start_reg <= 1'b1;
        end else if ((grp_uppol2_fu_379_ap_ready == 1'b1)) begin
            grp_uppol2_fu_379_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_uppol2_fu_388_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_uppol2_fu_388_ap_start_reg <= 1'b1;
        end else if ((grp_uppol2_fu_388_ap_ready == 1'b1)) begin
            grp_uppol2_fu_388_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_upzero_fu_361_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_upzero_fu_361_ap_start_reg <= 1'b1;
        end else if ((grp_upzero_fu_361_ap_ready == 1'b1)) begin
            grp_upzero_fu_361_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_upzero_fu_370_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_upzero_fu_370_ap_start_reg <= 1'b1;
        end else if ((grp_upzero_fu_370_ap_ready == 1'b1)) begin
            grp_upzero_fu_370_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln255_fu_525_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_6_fu_216 <= 5'd0;
    end else if (((icmp_ln269_fu_645_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        i_6_fu_216 <= i_13_fu_651_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_fu_200 <= 4'd0;
    end else if (((icmp_ln255_fu_525_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_fu_200 <= i_11_fu_531_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln255_fu_525_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        idx17_fu_212 <= 6'd0;
    end else if (((icmp_ln269_fu_645_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        idx17_fu_212 <= add_ln269_fu_675_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        idx_fu_196 <= 5'd0;
    end else if (((icmp_ln255_fu_525_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        idx_fu_196 <= add_ln243_fu_540_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        xa_1_fu_204 <= sext_ln244_fu_499_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        xa_1_fu_204 <= xa_3_fu_598_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        xb_1_fu_208 <= sext_ln244_1_fu_508_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        xb_1_fu_208 <= xb_3_fu_618_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln290_reg_1359 <= add_ln290_fu_1042_p2;
        add_ln317_reg_1386 <= add_ln317_fu_1088_p2;
        ph1_load_reg_1392 <= ph1_i;
        ph2_load_reg_1398 <= ph2_i;
        plt1_load_reg_1365 <= plt1_i;
        plt2_load_reg_1371 <= plt2_i;
        sext_ln315_1_reg_1376 <= sext_ln315_1_fu_1073_p1;
        tmp_s_reg_1381 <= tmp_s_logsch_fu_684_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln314_reg_1337 <= add_ln314_fu_939_p2;
        tmp_2_reg_1313 <= grp_quantl_fu_336_ap_return;
        tmp_7_reg_1324 <= grp_filtez_fu_318_ap_return;
        trunc_ln304_reg_1329 <= trunc_ln304_fu_871_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state8) & (grp_filtez_fu_318_ap_done == 1'b1)))) begin
        reg_449 <= grp_filtep_fu_650_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        sub_ln285_reg_1299 <= sub_ln285_fu_813_p2;
        tmp_reg_1289 <= grp_filtez_fu_318_ap_return;
        trunc_ln285_reg_1294 <= trunc_ln285_fu_809_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_11_reg_1413 <= grp_uppol2_fu_388_ap_return;
        tmp_3_reg_1403 <= grp_logscl_fu_657_p_dout0;
        tmp_5_reg_1408 <= grp_uppol2_fu_676_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tqmf_load_2_reg_1249 <= tqmf_q1;
        tqmf_load_3_reg_1254 <= tqmf_q0;
        trunc_ln255_1_reg_1244 <= trunc_ln255_1_fu_638_p1;
        trunc_ln255_reg_1239 <= trunc_ln255_fu_634_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        trunc_ln1_reg_1350 <= {{mul_ln314_fu_1003_p2[28:15]}};
        trunc_ln_reg_1344 <= {{mul_ln287_fu_952_p2[30:15]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        trunc_ln269_reg_1263 <= trunc_ln269_fu_660_p1;
        trunc_ln8_reg_1273 <= {{add_ln278_fu_741_p2[46:15]}};
        trunc_ln9_reg_1278 <= {{sub_ln279_fu_757_p2[46:15]}};
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ah1_o = grp_uppol1_fu_422_ap_return;
    end else begin
        ah1_o = ah1_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
        ah1_o_ap_vld = 1'b1;
    end else begin
        ah1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ah2_o = grp_uppol2_fu_388_ap_return;
    end else begin
        ah2_o = ah2_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state12_on_subcall_done) & (1'b1 == ap_CS_fsm_state12))) begin
        ah2_o_ap_vld = 1'b1;
    end else begin
        ah2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        al1_o = grp_uppol1_fu_669_p_dout0;
    end else begin
        al1_o = al1_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
        al1_o_ap_vld = 1'b1;
    end else begin
        al1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        al2_o = grp_uppol2_fu_676_p_dout0;
    end else begin
        al2_o = al2_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state12_on_subcall_done) & (1'b1 == ap_CS_fsm_state12))) begin
        al2_o_ap_vld = 1'b1;
    end else begin
        al2_o_ap_vld = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state12_on_subcall_done)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

assign ap_ST_fsm_state13_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state14_on_subcall_done)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((grp_filtez_fu_318_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state9_on_subcall_done)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        delay_bph_address0 = grp_upzero_fu_370_bli_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        delay_bph_address0 = grp_filtez_fu_318_bpl_address0;
    end else begin
        delay_bph_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        delay_bph_ce0 = grp_upzero_fu_370_bli_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        delay_bph_ce0 = grp_filtez_fu_318_bpl_ce0;
    end else begin
        delay_bph_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        delay_bph_we0 = grp_upzero_fu_370_bli_we0;
    end else begin
        delay_bph_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        delay_bpl_address0 = grp_upzero_fu_361_bli_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        delay_bpl_address0 = grp_filtez_fu_318_bpl_address0;
    end else begin
        delay_bpl_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        delay_bpl_ce0 = grp_upzero_fu_361_bli_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        delay_bpl_ce0 = grp_filtez_fu_318_bpl_ce0;
    end else begin
        delay_bpl_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        delay_bpl_we0 = grp_upzero_fu_361_bli_we0;
    end else begin
        delay_bpl_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        delay_dhx_address0 = grp_upzero_fu_370_dlti_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        delay_dhx_address0 = grp_filtez_fu_318_dlt_address0;
    end else begin
        delay_dhx_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        delay_dhx_ce0 = grp_upzero_fu_370_dlti_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        delay_dhx_ce0 = grp_filtez_fu_318_dlt_ce0;
    end else begin
        delay_dhx_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        delay_dhx_ce1 = grp_upzero_fu_370_dlti_ce1;
    end else begin
        delay_dhx_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        delay_dhx_we0 = grp_upzero_fu_370_dlti_we0;
    end else begin
        delay_dhx_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        delay_dhx_we1 = grp_upzero_fu_370_dlti_we1;
    end else begin
        delay_dhx_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        delay_dltx_address0 = grp_upzero_fu_361_dlti_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        delay_dltx_address0 = grp_filtez_fu_318_dlt_address0;
    end else begin
        delay_dltx_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        delay_dltx_ce0 = grp_upzero_fu_361_dlti_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        delay_dltx_ce0 = grp_filtez_fu_318_dlt_ce0;
    end else begin
        delay_dltx_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        delay_dltx_ce1 = grp_upzero_fu_361_dlti_ce1;
    end else begin
        delay_dltx_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        delay_dltx_we0 = grp_upzero_fu_361_dlti_we0;
    end else begin
        delay_dltx_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        delay_dltx_we1 = grp_upzero_fu_361_dlti_we1;
    end else begin
        delay_dltx_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        deth_o = grp_scalel_fu_663_p_dout0;
    end else begin
        deth_o = deth_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state12_on_subcall_done) & (1'b1 == ap_CS_fsm_state12))) begin
        deth_o_ap_vld = 1'b1;
    end else begin
        deth_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        detl_o = grp_scalel_fu_663_p_dout0;
    end else begin
        detl_o = detl_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
        detl_o_ap_vld = 1'b1;
    end else begin
        detl_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_filtep_fu_328_al1 = ah1_i;
    end else if (((icmp_ln269_fu_645_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        grp_filtep_fu_328_al1 = al1_i;
    end else begin
        grp_filtep_fu_328_al1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_filtep_fu_328_al2 = ah2_i;
    end else if (((icmp_ln269_fu_645_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        grp_filtep_fu_328_al2 = al2_i;
    end else begin
        grp_filtep_fu_328_al2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_filtep_fu_328_rlt1 = rh1_i;
    end else if (((icmp_ln269_fu_645_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        grp_filtep_fu_328_rlt1 = rlt1_i;
    end else begin
        grp_filtep_fu_328_rlt1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_filtep_fu_328_rlt2 = rh2_i;
    end else if (((icmp_ln269_fu_645_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        grp_filtep_fu_328_rlt2 = rlt2_i;
    end else begin
        grp_filtep_fu_328_rlt2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_filtez_fu_318_bpl_q0 = delay_bph_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_filtez_fu_318_bpl_q0 = delay_bpl_q0;
    end else begin
        grp_filtez_fu_318_bpl_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_filtez_fu_318_dlt_q0 = delay_dhx_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_filtez_fu_318_dlt_q0 = delay_dltx_q0;
    end else begin
        grp_filtez_fu_318_dlt_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_438_p0 = sext_ln263_fu_691_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_438_p0 = sext_ln251_fu_503_p1;
    end else begin
        grp_fu_438_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_scalel_fu_403_nbl = tmp_3_reg_1403;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_scalel_fu_403_nbl = tmp_s_reg_1381;
    end else begin
        grp_scalel_fu_403_nbl = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_scalel_fu_403_shift_constant = 4'd8;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_scalel_fu_403_shift_constant = 4'd10;
    end else begin
        grp_scalel_fu_403_shift_constant = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        h_ce0 = 1'b1;
    end else begin
        h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        h_ce1 = 1'b1;
    end else begin
        h_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9))) begin
        il_ap_vld = 1'b1;
    end else begin
        il_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        nbh_o = tmp_s_logsch_fu_684_p_dout0;
    end else begin
        nbh_o = nbh_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        nbh_o_ap_vld = 1'b1;
    end else begin
        nbh_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        nbl_o = grp_logscl_fu_657_p_dout0;
    end else begin
        nbl_o = nbl_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state12_on_subcall_done) & (1'b1 == ap_CS_fsm_state12))) begin
        nbl_o_ap_vld = 1'b1;
    end else begin
        nbl_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ph1_o = add_ln317_fu_1088_p2;
    end else begin
        ph1_o = ph1_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ph1_o_ap_vld = 1'b1;
    end else begin
        ph1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ph2_o = ph1_i;
    end else begin
        ph2_o = ph2_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ph2_o_ap_vld = 1'b1;
    end else begin
        ph2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        plt1_o = add_ln290_fu_1042_p2;
    end else begin
        plt1_o = plt1_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        plt1_o_ap_vld = 1'b1;
    end else begin
        plt1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        plt2_o = plt1_i;
    end else begin
        plt2_o = plt2_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        plt2_o_ap_vld = 1'b1;
    end else begin
        plt2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9))) begin
        qq4_code4_table_ce0 = 1'b1;
    end else begin
        qq4_code4_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        rh1_o = add_ln321_fu_1023_p2;
    end else begin
        rh1_o = rh1_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        rh1_o_ap_vld = 1'b1;
    end else begin
        rh1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        rh2_o = rh1_i;
    end else begin
        rh2_o = rh2_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (grp_filtez_fu_318_ap_done == 1'b1))) begin
        rh2_o_ap_vld = 1'b1;
    end else begin
        rh2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        rlt1_o = add_ln294_fu_972_p2;
    end else begin
        rlt1_o = rlt1_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        rlt1_o_ap_vld = 1'b1;
    end else begin
        rlt1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln269_fu_645_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        rlt2_o = rlt1_i;
    end else begin
        rlt2_o = rlt2_i;
    end
end

always @ (*) begin
    if (((icmp_ln269_fu_645_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        rlt2_o_ap_vld = 1'b1;
    end else begin
        rlt2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln269_fu_645_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        tqmf_address0 = 5'd0;
    end else if (((icmp_ln269_fu_645_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        tqmf_address0 = zext_ln243_1_fu_670_p1;
    end else if (((icmp_ln255_fu_525_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        tqmf_address0 = 5'd23;
    end else if (((icmp_ln255_fu_525_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tqmf_address0 = zext_ln257_fu_558_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        tqmf_address0 = 5'd1;
    end else begin
        tqmf_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tqmf_address1 = zext_ln243_2_fu_804_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tqmf_address1 = 5'd1;
    end else if (((icmp_ln255_fu_525_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        tqmf_address1 = 5'd22;
    end else if (((icmp_ln255_fu_525_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tqmf_address1 = zext_ln243_fu_546_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        tqmf_address1 = 5'd0;
    end else begin
        tqmf_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln255_fu_525_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln269_fu_645_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((icmp_ln255_fu_525_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln269_fu_645_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        tqmf_ce0 = 1'b1;
    end else begin
        tqmf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | ((icmp_ln255_fu_525_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln255_fu_525_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        tqmf_ce1 = 1'b1;
    end else begin
        tqmf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tqmf_d1 = tqmf_q0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        tqmf_d1 = xin1;
    end else begin
        tqmf_d1 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln269_fu_645_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        tqmf_we0 = 1'b1;
    end else begin
        tqmf_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((icmp_ln269_fu_645_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6)))) begin
        tqmf_we1 = 1'b1;
    end else begin
        tqmf_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln255_fu_525_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln269_fu_645_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_filtez_fu_318_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b0 == ap_block_state12_on_subcall_done) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln243_1_fu_664_p2 = ($signed(trunc_ln269_fu_660_p1) + $signed(5'd21));

assign add_ln243_2_fu_799_p2 = (trunc_ln269_reg_1263 + 5'd23);

assign add_ln243_fu_540_p2 = (idx_fu_196 + 5'd2);

assign add_ln257_fu_552_p2 = (idx_fu_196 + 5'd3);

assign add_ln269_fu_675_p2 = ($signed(idx17_fu_212) + $signed(6'd63));

assign add_ln278_fu_741_p2 = (xb_4_fu_736_p2 + xa_4_fu_731_p2);

assign add_ln290_fu_1042_p2 = ($signed(sext_ln287_1_fu_1034_p1) + $signed(tmp_reg_1289));

assign add_ln294_fu_972_p2 = ($signed(sext_ln288_fu_968_p1) + $signed(trunc_ln285_reg_1294));

assign add_ln314_fu_939_p2 = (select_ln311_fu_931_p3 + select_ln305_fu_889_p3);

assign add_ln317_fu_1088_p2 = ($signed(sext_ln314_1_fu_1070_p1) + $signed(tmp_7_reg_1324));

assign add_ln321_fu_1023_p2 = ($signed(sext_ln315_fu_1019_p1) + $signed(trunc_ln304_reg_1329));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state12_on_subcall_done = ((grp_scalel_fu_663_p_done == 1'b0) | (grp_uppol2_fu_388_ap_done == 1'b0) | (grp_uppol2_fu_676_p_done == 1'b0) | (grp_upzero_fu_370_ap_done == 1'b0) | (grp_upzero_fu_361_ap_done == 1'b0) | (grp_logscl_fu_657_p_done == 1'b0));
end

always @ (*) begin
    ap_block_state14_on_subcall_done = ((grp_uppol1_fu_422_ap_done == 1'b0) | (grp_uppol1_fu_669_p_done == 1'b0) | (grp_scalel_fu_663_p_done == 1'b0));
end

always @ (*) begin
    ap_block_state9_on_subcall_done = ((grp_quantl_fu_336_ap_done == 1'b0) | (grp_filtez_fu_318_ap_done == 1'b0));
end

assign ap_return = {{add_ln314_reg_1337}, {tmp_2_reg_1313}};

assign decis_fu_911_p4 = {{mul_ln310_fu_905_p2[24:12]}};

assign delay_bph_d0 = grp_upzero_fu_370_bli_d0;

assign delay_bpl_d0 = grp_upzero_fu_361_bli_d0;

assign delay_dhx_address1 = grp_upzero_fu_370_dlti_address1;

assign delay_dhx_d0 = grp_upzero_fu_370_dlti_d0;

assign delay_dhx_d1 = grp_upzero_fu_370_dlti_d1;

assign delay_dltx_address1 = grp_upzero_fu_361_dlti_address1;

assign delay_dltx_d0 = grp_upzero_fu_361_dlti_d0;

assign delay_dltx_d1 = grp_upzero_fu_361_dlti_d1;

assign grp_filtep_fu_650_p_din1 = grp_filtep_fu_328_rlt1;

assign grp_filtep_fu_650_p_din2 = grp_filtep_fu_328_al1;

assign grp_filtep_fu_650_p_din3 = grp_filtep_fu_328_rlt2;

assign grp_filtep_fu_650_p_din4 = grp_filtep_fu_328_al2;

assign grp_filtez_fu_318_ap_start = grp_filtez_fu_318_ap_start_reg;

assign grp_fu_438_p1 = 39'd549755813844;

assign grp_fu_453_p2 = (reg_449 + grp_filtez_fu_318_ap_return);

assign grp_logscl_fu_353_ap_ready = grp_logscl_fu_657_p_ready;

assign grp_logscl_fu_657_p_din1 = tmp_2_reg_1313;

assign grp_logscl_fu_657_p_din2 = nbl_i;

assign grp_logscl_fu_657_p_start = grp_logscl_fu_353_ap_start_reg;

assign grp_quantl_fu_336_ap_start = grp_quantl_fu_336_ap_start_reg;

assign grp_scalel_fu_403_ap_ready = grp_scalel_fu_663_p_ready;

assign grp_scalel_fu_663_p_din1 = grp_scalel_fu_403_nbl;

assign grp_scalel_fu_663_p_din2 = grp_scalel_fu_403_shift_constant;

assign grp_scalel_fu_663_p_start = grp_scalel_fu_403_ap_start_reg;

assign grp_uppol1_fu_414_ap_ready = grp_uppol1_fu_669_p_ready;

assign grp_uppol1_fu_422_ap_start = grp_uppol1_fu_422_ap_start_reg;

assign grp_uppol1_fu_669_p_din1 = al1_i;

assign grp_uppol1_fu_669_p_din2 = tmp_5_reg_1408;

assign grp_uppol1_fu_669_p_din3 = add_ln290_reg_1359;

assign grp_uppol1_fu_669_p_din4 = plt1_load_reg_1365;

assign grp_uppol1_fu_669_p_start = grp_uppol1_fu_414_ap_start_reg;

assign grp_uppol2_fu_379_ap_ready = grp_uppol2_fu_676_p_ready;

assign grp_uppol2_fu_388_ap_start = grp_uppol2_fu_388_ap_start_reg;

assign grp_uppol2_fu_676_p_din1 = al1_i;

assign grp_uppol2_fu_676_p_din2 = al2_i;

assign grp_uppol2_fu_676_p_din3 = add_ln290_reg_1359;

assign grp_uppol2_fu_676_p_din4 = plt1_load_reg_1365;

assign grp_uppol2_fu_676_p_din5 = plt2_load_reg_1371;

assign grp_uppol2_fu_676_p_start = grp_uppol2_fu_379_ap_start_reg;

assign grp_upzero_fu_361_ap_start = grp_upzero_fu_361_ap_start_reg;

assign grp_upzero_fu_370_ap_start = grp_upzero_fu_370_ap_start_reg;

assign h_address0 = zext_ln257_fu_558_p1;

assign h_address1 = zext_ln243_fu_546_p1;

assign i_11_fu_531_p2 = (i_fu_200 + 4'd1);

assign i_13_fu_651_p2 = (i_6_fu_216 + 5'd1);

assign icmp_ln255_fu_525_p2 = ((i_fu_200 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln269_fu_645_p2 = ((i_6_fu_216 == 5'd22) ? 1'b1 : 1'b0);

assign icmp_ln311_fu_925_p2 = (($signed(tmp_9_abs_r_fu_348_ap_return) > $signed(zext_ln310_2_fu_921_p1)) ? 1'b1 : 1'b0);

assign il = grp_quantl_fu_336_ap_return;

assign lshr_ln_fu_856_p4 = {{grp_quantl_fu_336_ap_return[5:2]}};

assign mul_ln287_fu_952_p1 = mul_ln287_fu_952_p10;

assign mul_ln287_fu_952_p10 = detl_i;

assign mul_ln310_fu_905_p0 = mul_ln310_fu_905_p00;

assign mul_ln310_fu_905_p00 = deth_i;

assign mul_ln310_fu_905_p1 = 25'd564;

assign mul_ln314_fu_1003_p1 = mul_ln314_fu_1003_p10;

assign mul_ln314_fu_1003_p10 = deth_i;

assign qq4_code4_table_address0 = zext_ln287_1_fu_866_p1;

assign select_ln305_fu_889_p3 = ((tmp_14_fu_881_p3[0:0] == 1'b1) ? 2'd2 : 2'd0);

assign select_ln311_fu_931_p3 = ((icmp_ln311_fu_925_p2[0:0] == 1'b1) ? 2'd2 : 2'd3);

assign sext_ln244_1_fu_508_p1 = $signed(grp_fu_438_p2);

assign sext_ln244_fu_499_p1 = $signed(xa_fu_493_p2);

assign sext_ln250_1_fu_489_p1 = $signed(shl_ln250_1_fu_481_p3);

assign sext_ln250_fu_477_p1 = $signed(shl_ln_fu_469_p3);

assign sext_ln251_fu_503_p1 = $signed(tqmf_q0);

assign sext_ln257_2_fu_594_p1 = $signed(mul_ln257_fu_430_p2);

assign sext_ln258_2_fu_614_p1 = $signed(mul_ln258_fu_434_p2);

assign sext_ln262_fu_727_p1 = $signed(sub_ln263_fu_721_p2);

assign sext_ln263_1_fu_695_p1 = $signed(grp_fu_438_p2);

assign sext_ln263_2_fu_706_p1 = $signed(shl_ln2_fu_699_p3);

assign sext_ln263_3_fu_717_p1 = $signed(shl_ln263_1_fu_710_p3);

assign sext_ln263_fu_691_p1 = $signed(tqmf_load_2_reg_1249);

assign sext_ln287_1_fu_1034_p1 = $signed(trunc_ln_reg_1344);

assign sext_ln288_fu_968_p1 = trunc_ln_fu_958_p4;

assign sext_ln314_1_fu_1070_p1 = trunc_ln1_reg_1350;

assign sext_ln315_1_fu_1073_p1 = trunc_ln1_reg_1350;

assign sext_ln315_fu_1019_p1 = trunc_ln1_fu_1009_p4;

assign shl_ln250_1_fu_481_p3 = {{tqmf_q1}, {2'd0}};

assign shl_ln263_1_fu_710_p3 = {{tqmf_load_3_reg_1254}, {2'd0}};

assign shl_ln2_fu_699_p3 = {{tqmf_load_3_reg_1254}, {4'd0}};

assign shl_ln_fu_469_p3 = {{tqmf_q1}, {4'd0}};

assign sub_ln263_fu_721_p2 = ($signed(sext_ln263_2_fu_706_p1) - $signed(sext_ln263_3_fu_717_p1));

assign sub_ln279_fu_757_p2 = (xa_4_fu_731_p2 - xb_4_fu_736_p2);

assign sub_ln285_fu_813_p2 = (trunc_ln8_reg_1273 - grp_fu_453_p2);

assign sub_ln304_fu_875_p2 = (trunc_ln9_reg_1278 - grp_fu_453_p2);

assign tmp_14_fu_881_p3 = sub_ln304_fu_875_p2[32'd31];

assign tmp_s_logsch_fu_684_p_din1 = add_ln314_reg_1337;

assign tmp_s_logsch_fu_684_p_din2 = nbh_i;

assign tqmf_d0 = xin2;

assign trunc_ln1_fu_1009_p4 = {{mul_ln314_fu_1003_p2[28:15]}};

assign trunc_ln255_1_fu_638_p1 = xa_1_fu_204[46:0];

assign trunc_ln255_fu_634_p1 = xb_1_fu_208[46:0];

assign trunc_ln269_fu_660_p1 = idx17_fu_212[4:0];

assign trunc_ln285_fu_809_p1 = grp_fu_453_p2[30:0];

assign trunc_ln304_fu_871_p1 = grp_fu_453_p2[30:0];

assign trunc_ln_fu_958_p4 = {{mul_ln287_fu_952_p2[30:15]}};

assign xa_3_fu_598_p2 = ($signed(sext_ln257_2_fu_594_p1) + $signed(xa_1_fu_204));

assign xa_4_fu_731_p2 = ($signed(sext_ln263_1_fu_695_p1) + $signed(trunc_ln255_1_reg_1244));

assign xa_fu_493_p2 = ($signed(sext_ln250_fu_477_p1) - $signed(sext_ln250_1_fu_489_p1));

assign xb_3_fu_618_p2 = ($signed(sext_ln258_2_fu_614_p1) + $signed(xb_1_fu_208));

assign xb_4_fu_736_p2 = ($signed(sext_ln262_fu_727_p1) + $signed(trunc_ln255_reg_1239));

assign zext_ln243_1_fu_670_p1 = add_ln243_1_fu_664_p2;

assign zext_ln243_2_fu_804_p1 = add_ln243_2_fu_799_p2;

assign zext_ln243_fu_546_p1 = add_ln243_fu_540_p2;

assign zext_ln257_fu_558_p1 = add_ln257_fu_552_p2;

assign zext_ln287_1_fu_866_p1 = lshr_ln_fu_856_p4;

assign zext_ln310_2_fu_921_p1 = decis_fu_911_p4;

endmodule //adpcm_main_encode
