

================================================================
== Vitis HLS Report for 'sha_final'
================================================================
* Date:           Wed Jul  9 04:09:34 2025

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        SHA
* Solution:       solution0 (Vivado IP Flow Target)
* Product family: virtexuplusHBM
* Target device:  xcu50-fsvh2104-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  8.00 ns|  3.237 ns|     2.16 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      402|      829|  3.216 us|  6.632 us|  402|  829|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 4 
3 --> 8 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.69>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%lo_bit_count = load i32 %sha_info_count_lo" [data/benchmarks/sha/sha.c:175]   --->   Operation 12 'load' 'lo_bit_count' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%count = partselect i6 @_ssdm_op_PartSelect.i6.i32.i32.i32, i32 %lo_bit_count, i32 3, i32 8" [data/benchmarks/sha/sha.c:178]   --->   Operation 13 'partselect' 'count' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%zext_ln179 = zext i6 %count" [data/benchmarks/sha/sha.c:179]   --->   Operation 14 'zext' 'zext_ln179' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%sha_info_data_addr = getelementptr i32 %sha_info_data, i64 0, i64 %zext_ln179" [data/benchmarks/sha/sha.c:179]   --->   Operation 15 'getelementptr' 'sha_info_data_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.69ns)   --->   "%store_ln179 = store i32 128, i4 %sha_info_data_addr" [data/benchmarks/sha/sha.c:179]   --->   Operation 16 'store' 'store_ln179' <Predicate = true> <Delay = 0.69> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.69> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>

State 2 <SV = 1> <Delay = 3.23>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%specpipeline_ln20 = specpipeline void @_ssdm_op_SpecPipeline, i32 0, i32 0, i32 1, i32 0, void @empty_7" [/home/gabriel/Documents/UFRGS/RAISE/AHLS/AHLS/data/base_directives/sha.tcl:20]   --->   Operation 17 'specpipeline' 'specpipeline_ln20' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%hi_bit_count = load i32 %sha_info_count_hi" [data/benchmarks/sha/sha.c:176]   --->   Operation 18 'load' 'hi_bit_count' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln174 = zext i6 %count" [data/benchmarks/sha/sha.c:174]   --->   Operation 19 'zext' 'zext_ln174' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.70ns)   --->   "%count_1 = add i7 %zext_ln174, i7 1" [data/benchmarks/sha/sha.c:179]   --->   Operation 20 'add' 'count_1' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%trunc_ln174 = trunc i7 %count_1" [data/benchmarks/sha/sha.c:174]   --->   Operation 21 'trunc' 'trunc_ln174' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.70ns)   --->   "%icmp_ln181 = icmp_ugt  i7 %count_1, i7 56" [data/benchmarks/sha/sha.c:181]   --->   Operation 22 'icmp' 'icmp_ln181' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%br_ln181 = br i1 %icmp_ln181, void %if.else, void %if.then" [data/benchmarks/sha/sha.c:181]   --->   Operation 23 'br' 'br_ln181' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.70ns)   --->   "%sub_ln186 = sub i7 55, i7 %zext_ln174" [data/benchmarks/sha/sha.c:186]   --->   Operation 24 'sub' 'sub_ln186' <Predicate = (!icmp_ln181)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [2/2] (1.82ns)   --->   "%call_ln186 = call void @local_memset, i7 %sub_ln186, i4 %trunc_ln174, i32 %sha_info_data" [data/benchmarks/sha/sha.c:186]   --->   Operation 25 'call' 'call_ln186' <Predicate = (!icmp_ln181)> <Delay = 1.82> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 26 [1/1] (0.12ns)   --->   "%xor_ln182 = xor i6 %count, i6 63" [data/benchmarks/sha/sha.c:182]   --->   Operation 26 'xor' 'xor_ln182' <Predicate = (icmp_ln181)> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln182 = zext i6 %xor_ln182" [data/benchmarks/sha/sha.c:182]   --->   Operation 27 'zext' 'zext_ln182' <Predicate = (icmp_ln181)> <Delay = 0.00>
ST_2 : Operation 28 [2/2] (1.82ns)   --->   "%call_ln182 = call void @local_memset, i7 %zext_ln182, i4 %trunc_ln174, i32 %sha_info_data" [data/benchmarks/sha/sha.c:182]   --->   Operation 28 'call' 'call_ln182' <Predicate = (icmp_ln181)> <Delay = 1.82> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 29 [1/2] (0.00ns)   --->   "%call_ln186 = call void @local_memset, i7 %sub_ln186, i4 %trunc_ln174, i32 %sha_info_data" [data/benchmarks/sha/sha.c:186]   --->   Operation 29 'call' 'call_ln186' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%br_ln0 = br void %if.end"   --->   Operation 30 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 4 <SV = 2> <Delay = 0.00>
ST_4 : Operation 31 [1/2] (0.00ns)   --->   "%call_ln182 = call void @local_memset, i7 %zext_ln182, i4 %trunc_ln174, i32 %sha_info_data" [data/benchmarks/sha/sha.c:182]   --->   Operation 31 'call' 'call_ln182' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 3> <Delay = 0.00>
ST_5 : Operation 32 [2/2] (0.00ns)   --->   "%call_ln183 = call void @sha_transform, i32 %sha_info_data, i32 %sha_info_digest" [data/benchmarks/sha/sha.c:183]   --->   Operation 32 'call' 'call_ln183' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 4> <Delay = 0.00>
ST_6 : Operation 33 [1/2] (0.00ns)   --->   "%call_ln183 = call void @sha_transform, i32 %sha_info_data, i32 %sha_info_digest" [data/benchmarks/sha/sha.c:183]   --->   Operation 33 'call' 'call_ln183' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 5> <Delay = 1.82>
ST_7 : Operation 34 [2/2] (1.82ns)   --->   "%call_ln184 = call void @local_memset, i7 56, i4 0, i32 %sha_info_data" [data/benchmarks/sha/sha.c:184]   --->   Operation 34 'call' 'call_ln184' <Predicate = true> <Delay = 1.82> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 8 <SV = 6> <Delay = 0.00>
ST_8 : Operation 35 [1/2] (0.00ns)   --->   "%call_ln184 = call void @local_memset, i7 56, i4 0, i32 %sha_info_data" [data/benchmarks/sha/sha.c:184]   --->   Operation 35 'call' 'call_ln184' <Predicate = (icmp_ln181)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 36 [1/1] (0.00ns)   --->   "%br_ln185 = br void %if.end" [data/benchmarks/sha/sha.c:185]   --->   Operation 36 'br' 'br_ln185' <Predicate = (icmp_ln181)> <Delay = 0.00>

State 9 <SV = 7> <Delay = 0.69>
ST_9 : Operation 37 [1/1] (0.69ns)   --->   "%store_ln189 = store i32 %hi_bit_count, i32 14" [data/benchmarks/sha/sha.c:189]   --->   Operation 37 'store' 'store_ln189' <Predicate = true> <Delay = 0.69> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.69> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_9 : Operation 38 [1/1] (0.69ns)   --->   "%store_ln190 = store i32 %lo_bit_count, i32 15" [data/benchmarks/sha/sha.c:190]   --->   Operation 38 'store' 'store_ln190' <Predicate = true> <Delay = 0.69> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.69> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>

State 10 <SV = 8> <Delay = 0.00>
ST_10 : Operation 39 [2/2] (0.00ns)   --->   "%call_ln191 = call void @sha_transform, i32 %sha_info_data, i32 %sha_info_digest" [data/benchmarks/sha/sha.c:191]   --->   Operation 39 'call' 'call_ln191' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 9> <Delay = 0.00>
ST_11 : Operation 40 [1/2] (0.00ns)   --->   "%call_ln191 = call void @sha_transform, i32 %sha_info_data, i32 %sha_info_digest" [data/benchmarks/sha/sha.c:191]   --->   Operation 40 'call' 'call_ln191' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 41 [1/1] (0.00ns)   --->   "%ret_ln192 = ret" [data/benchmarks/sha/sha.c:192]   --->   Operation 41 'ret' 'ret_ln192' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8.000ns, clock uncertainty: 2.160ns.

 <State 1>: 0.699ns
The critical path consists of the following:
	'load' operation 32 bit ('lo_bit_count', data/benchmarks/sha/sha.c:175) on static variable 'sha_info_count_lo' [6]  (0.000 ns)
	'getelementptr' operation 4 bit ('sha_info_data_addr', data/benchmarks/sha/sha.c:179) [13]  (0.000 ns)
	'store' operation 0 bit ('store_ln179', data/benchmarks/sha/sha.c:179) of constant 128 on array 'sha_info_data' [14]  (0.699 ns)

 <State 2>: 3.237ns
The critical path consists of the following:
	'add' operation 7 bit ('count', data/benchmarks/sha/sha.c:179) [10]  (0.706 ns)
	'icmp' operation 1 bit ('icmp_ln181', data/benchmarks/sha/sha.c:181) [15]  (0.706 ns)
	'call' operation 0 bit ('call_ln186', data/benchmarks/sha/sha.c:186) to 'local_memset' [19]  (1.825 ns)
	blocking operation 4.44089e-16 ns on control path)

 <State 3>: 0.000ns
The critical path consists of the following:

 <State 4>: 0.000ns
The critical path consists of the following:

 <State 5>: 0.000ns
The critical path consists of the following:

 <State 6>: 0.000ns
The critical path consists of the following:

 <State 7>: 1.825ns
The critical path consists of the following:
	'call' operation 0 bit ('call_ln184', data/benchmarks/sha/sha.c:184) to 'local_memset' [26]  (1.825 ns)

 <State 8>: 0.000ns
The critical path consists of the following:

 <State 9>: 0.699ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln189', data/benchmarks/sha/sha.c:189) of variable 'hi_bit_count', data/benchmarks/sha/sha.c:176 on array 'sha_info_data' [29]  (0.699 ns)

 <State 10>: 0.000ns
The critical path consists of the following:

 <State 11>: 0.000ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
