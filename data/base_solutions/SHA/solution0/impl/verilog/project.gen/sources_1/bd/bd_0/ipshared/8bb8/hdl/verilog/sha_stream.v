// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sha_stream_sha_stream,hls_ip_2023_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu50-fsvh2104-2-e,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.507000,HLS_SYN_LAT=124768,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=2877,HLS_SYN_LUT=6043,HLS_VERSION=2023_2}" *)

module sha_stream (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        indata_address0,
        indata_ce0,
        indata_q0,
        in_i_address0,
        in_i_ce0,
        in_i_q0,
        outdata_address0,
        outdata_ce0,
        outdata_we0,
        outdata_d0
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] indata_address0;
output   indata_ce0;
input  [7:0] indata_q0;
output  [0:0] in_i_address0;
output   in_i_ce0;
input  [31:0] in_i_q0;
output  [2:0] outdata_address0;
output   outdata_ce0;
output   outdata_we0;
output  [31:0] outdata_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_i_ce0;
reg outdata_ce0;
reg outdata_we0;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [13:0] local_indata_address0;
reg    local_indata_ce0;
reg    local_indata_we0;
wire   [7:0] local_indata_q0;
reg    local_indata_ce1;
wire   [7:0] local_indata_q1;
reg   [31:0] sha_info_count_lo;
reg   [31:0] sha_info_count_hi;
reg   [2:0] sha_info_digest_address0;
reg    sha_info_digest_ce0;
reg    sha_info_digest_we0;
reg   [31:0] sha_info_digest_d0;
wire   [31:0] sha_info_digest_q0;
reg   [2:0] sha_info_digest_address1;
reg    sha_info_digest_ce1;
reg    sha_info_digest_we1;
reg   [31:0] sha_info_digest_d1;
wire   [31:0] sha_info_digest_q1;
reg   [3:0] sha_info_data_address0;
reg    sha_info_data_ce0;
reg    sha_info_data_we0;
reg   [31:0] sha_info_data_d0;
wire   [31:0] sha_info_data_q0;
reg    sha_info_data_ce1;
reg    sha_info_data_we1;
wire   [0:0] trunc_ln216_fu_190_p1;
reg   [0:0] trunc_ln216_reg_239;
wire    ap_CS_fsm_state3;
reg   [31:0] i_reg_256;
wire    ap_CS_fsm_state4;
wire   [63:0] zext_ln225_fu_219_p1;
reg   [63:0] zext_ln225_reg_264;
wire    ap_CS_fsm_state7;
wire    grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_ap_start;
wire    grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_ap_done;
wire    grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_ap_idle;
wire    grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_ap_ready;
wire   [13:0] grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_indata_address0;
wire    grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_indata_ce0;
wire   [13:0] grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_local_indata_address0;
wire    grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_local_indata_ce0;
wire    grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_local_indata_we0;
wire   [7:0] grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_local_indata_d0;
wire    grp_sha_init_fu_126_ap_start;
wire    grp_sha_init_fu_126_ap_done;
wire    grp_sha_init_fu_126_ap_idle;
wire    grp_sha_init_fu_126_ap_ready;
wire   [31:0] grp_sha_init_fu_126_sha_info_count_lo;
wire    grp_sha_init_fu_126_sha_info_count_lo_ap_vld;
wire   [31:0] grp_sha_init_fu_126_sha_info_count_hi;
wire    grp_sha_init_fu_126_sha_info_count_hi_ap_vld;
wire   [2:0] grp_sha_init_fu_126_sha_info_digest_address0;
wire    grp_sha_init_fu_126_sha_info_digest_ce0;
wire    grp_sha_init_fu_126_sha_info_digest_we0;
wire   [31:0] grp_sha_init_fu_126_sha_info_digest_d0;
wire   [2:0] grp_sha_init_fu_126_sha_info_digest_address1;
wire    grp_sha_init_fu_126_sha_info_digest_ce1;
wire    grp_sha_init_fu_126_sha_info_digest_we1;
wire   [31:0] grp_sha_init_fu_126_sha_info_digest_d1;
wire    grp_sha_final_fu_136_ap_start;
wire    grp_sha_final_fu_136_ap_done;
wire    grp_sha_final_fu_136_ap_idle;
wire    grp_sha_final_fu_136_ap_ready;
wire   [3:0] grp_sha_final_fu_136_sha_info_data_address0;
wire    grp_sha_final_fu_136_sha_info_data_ce0;
wire    grp_sha_final_fu_136_sha_info_data_we0;
wire   [31:0] grp_sha_final_fu_136_sha_info_data_d0;
wire   [3:0] grp_sha_final_fu_136_sha_info_data_address1;
wire    grp_sha_final_fu_136_sha_info_data_ce1;
wire    grp_sha_final_fu_136_sha_info_data_we1;
wire   [31:0] grp_sha_final_fu_136_sha_info_data_d1;
wire   [2:0] grp_sha_final_fu_136_sha_info_digest_address0;
wire    grp_sha_final_fu_136_sha_info_digest_ce0;
wire    grp_sha_final_fu_136_sha_info_digest_we0;
wire   [31:0] grp_sha_final_fu_136_sha_info_digest_d0;
wire   [2:0] grp_sha_final_fu_136_sha_info_digest_address1;
wire    grp_sha_final_fu_136_sha_info_digest_ce1;
wire    grp_sha_final_fu_136_sha_info_digest_we1;
wire   [31:0] grp_sha_final_fu_136_sha_info_digest_d1;
wire    grp_sha_update_fu_148_ap_start;
wire    grp_sha_update_fu_148_ap_done;
wire    grp_sha_update_fu_148_ap_idle;
wire    grp_sha_update_fu_148_ap_ready;
wire   [13:0] grp_sha_update_fu_148_buffer_r_address0;
wire    grp_sha_update_fu_148_buffer_r_ce0;
wire   [13:0] grp_sha_update_fu_148_buffer_r_address1;
wire    grp_sha_update_fu_148_buffer_r_ce1;
wire   [31:0] grp_sha_update_fu_148_sha_info_count_lo_o;
wire    grp_sha_update_fu_148_sha_info_count_lo_o_ap_vld;
wire   [31:0] grp_sha_update_fu_148_sha_info_count_hi_o;
wire    grp_sha_update_fu_148_sha_info_count_hi_o_ap_vld;
wire   [3:0] grp_sha_update_fu_148_sha_info_data_address0;
wire    grp_sha_update_fu_148_sha_info_data_ce0;
wire    grp_sha_update_fu_148_sha_info_data_we0;
wire   [31:0] grp_sha_update_fu_148_sha_info_data_d0;
wire   [2:0] grp_sha_update_fu_148_sha_info_digest_address0;
wire    grp_sha_update_fu_148_sha_info_digest_ce0;
wire    grp_sha_update_fu_148_sha_info_digest_we0;
wire   [31:0] grp_sha_update_fu_148_sha_info_digest_d0;
wire   [2:0] grp_sha_update_fu_148_sha_info_digest_address1;
wire    grp_sha_update_fu_148_sha_info_digest_ce1;
wire    grp_sha_update_fu_148_sha_info_digest_we1;
wire   [31:0] grp_sha_update_fu_148_sha_info_digest_d1;
reg    grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_sha_init_fu_126_ap_start_reg;
reg    grp_sha_final_fu_136_ap_start_reg;
wire   [0:0] icmp_ln216_fu_173_p2;
wire    ap_CS_fsm_state6;
reg    grp_sha_update_fu_148_ap_start_reg;
wire    ap_CS_fsm_state5;
wire   [63:0] zext_ln216_fu_185_p1;
wire   [0:0] icmp_ln225_fu_207_p2;
wire    ap_CS_fsm_state8;
reg   [1:0] j_fu_70;
wire   [1:0] add_ln216_fu_179_p2;
reg   [2:0] i_7_fu_74;
wire   [2:0] add_ln225_fu_213_p2;
reg   [7:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_block_state2_on_subcall_done;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 sha_info_count_lo = 32'd0;
#0 sha_info_count_hi = 32'd0;
#0 grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_ap_start_reg = 1'b0;
#0 grp_sha_init_fu_126_ap_start_reg = 1'b0;
#0 grp_sha_final_fu_136_ap_start_reg = 1'b0;
#0 grp_sha_update_fu_148_ap_start_reg = 1'b0;
#0 j_fu_70 = 2'd0;
#0 i_7_fu_74 = 3'd0;
end

sha_stream_local_indata_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
local_indata_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_indata_address0),
    .ce0(local_indata_ce0),
    .we0(local_indata_we0),
    .d0(grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_local_indata_d0),
    .q0(local_indata_q0),
    .address1(grp_sha_update_fu_148_buffer_r_address1),
    .ce1(local_indata_ce1),
    .q1(local_indata_q1)
);

sha_stream_sha_info_digest_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
sha_info_digest_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sha_info_digest_address0),
    .ce0(sha_info_digest_ce0),
    .we0(sha_info_digest_we0),
    .d0(sha_info_digest_d0),
    .q0(sha_info_digest_q0),
    .address1(sha_info_digest_address1),
    .ce1(sha_info_digest_ce1),
    .we1(sha_info_digest_we1),
    .d1(sha_info_digest_d1),
    .q1(sha_info_digest_q1)
);

sha_stream_sha_info_data_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
sha_info_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sha_info_data_address0),
    .ce0(sha_info_data_ce0),
    .we0(sha_info_data_we0),
    .d0(sha_info_data_d0),
    .q0(sha_info_data_q0),
    .address1(grp_sha_final_fu_136_sha_info_data_address1),
    .ce1(sha_info_data_ce1),
    .we1(sha_info_data_we1),
    .d1(grp_sha_final_fu_136_sha_info_data_d1)
);

sha_stream_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1 grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_ap_start),
    .ap_done(grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_ap_done),
    .ap_idle(grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_ap_idle),
    .ap_ready(grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_ap_ready),
    .indata_address0(grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_indata_address0),
    .indata_ce0(grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_indata_ce0),
    .indata_q0(indata_q0),
    .local_indata_address0(grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_local_indata_address0),
    .local_indata_ce0(grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_local_indata_ce0),
    .local_indata_we0(grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_local_indata_we0),
    .local_indata_d0(grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_local_indata_d0)
);

sha_stream_sha_init grp_sha_init_fu_126(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sha_init_fu_126_ap_start),
    .ap_done(grp_sha_init_fu_126_ap_done),
    .ap_idle(grp_sha_init_fu_126_ap_idle),
    .ap_ready(grp_sha_init_fu_126_ap_ready),
    .sha_info_count_lo(grp_sha_init_fu_126_sha_info_count_lo),
    .sha_info_count_lo_ap_vld(grp_sha_init_fu_126_sha_info_count_lo_ap_vld),
    .sha_info_count_hi(grp_sha_init_fu_126_sha_info_count_hi),
    .sha_info_count_hi_ap_vld(grp_sha_init_fu_126_sha_info_count_hi_ap_vld),
    .sha_info_digest_address0(grp_sha_init_fu_126_sha_info_digest_address0),
    .sha_info_digest_ce0(grp_sha_init_fu_126_sha_info_digest_ce0),
    .sha_info_digest_we0(grp_sha_init_fu_126_sha_info_digest_we0),
    .sha_info_digest_d0(grp_sha_init_fu_126_sha_info_digest_d0),
    .sha_info_digest_address1(grp_sha_init_fu_126_sha_info_digest_address1),
    .sha_info_digest_ce1(grp_sha_init_fu_126_sha_info_digest_ce1),
    .sha_info_digest_we1(grp_sha_init_fu_126_sha_info_digest_we1),
    .sha_info_digest_d1(grp_sha_init_fu_126_sha_info_digest_d1)
);

sha_stream_sha_final grp_sha_final_fu_136(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sha_final_fu_136_ap_start),
    .ap_done(grp_sha_final_fu_136_ap_done),
    .ap_idle(grp_sha_final_fu_136_ap_idle),
    .ap_ready(grp_sha_final_fu_136_ap_ready),
    .sha_info_count_lo(sha_info_count_lo),
    .sha_info_count_hi(sha_info_count_hi),
    .sha_info_data_address0(grp_sha_final_fu_136_sha_info_data_address0),
    .sha_info_data_ce0(grp_sha_final_fu_136_sha_info_data_ce0),
    .sha_info_data_we0(grp_sha_final_fu_136_sha_info_data_we0),
    .sha_info_data_d0(grp_sha_final_fu_136_sha_info_data_d0),
    .sha_info_data_q0(sha_info_data_q0),
    .sha_info_data_address1(grp_sha_final_fu_136_sha_info_data_address1),
    .sha_info_data_ce1(grp_sha_final_fu_136_sha_info_data_ce1),
    .sha_info_data_we1(grp_sha_final_fu_136_sha_info_data_we1),
    .sha_info_data_d1(grp_sha_final_fu_136_sha_info_data_d1),
    .sha_info_digest_address0(grp_sha_final_fu_136_sha_info_digest_address0),
    .sha_info_digest_ce0(grp_sha_final_fu_136_sha_info_digest_ce0),
    .sha_info_digest_we0(grp_sha_final_fu_136_sha_info_digest_we0),
    .sha_info_digest_d0(grp_sha_final_fu_136_sha_info_digest_d0),
    .sha_info_digest_q0(sha_info_digest_q0),
    .sha_info_digest_address1(grp_sha_final_fu_136_sha_info_digest_address1),
    .sha_info_digest_ce1(grp_sha_final_fu_136_sha_info_digest_ce1),
    .sha_info_digest_we1(grp_sha_final_fu_136_sha_info_digest_we1),
    .sha_info_digest_d1(grp_sha_final_fu_136_sha_info_digest_d1),
    .sha_info_digest_q1(sha_info_digest_q1)
);

sha_stream_sha_update grp_sha_update_fu_148(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sha_update_fu_148_ap_start),
    .ap_done(grp_sha_update_fu_148_ap_done),
    .ap_idle(grp_sha_update_fu_148_ap_idle),
    .ap_ready(grp_sha_update_fu_148_ap_ready),
    .buffer_r_address0(grp_sha_update_fu_148_buffer_r_address0),
    .buffer_r_ce0(grp_sha_update_fu_148_buffer_r_ce0),
    .buffer_r_q0(local_indata_q0),
    .buffer_r_address1(grp_sha_update_fu_148_buffer_r_address1),
    .buffer_r_ce1(grp_sha_update_fu_148_buffer_r_ce1),
    .buffer_r_q1(local_indata_q1),
    .buffer_offset(trunc_ln216_reg_239),
    .count(i_reg_256),
    .sha_info_count_lo_i(sha_info_count_lo),
    .sha_info_count_lo_o(grp_sha_update_fu_148_sha_info_count_lo_o),
    .sha_info_count_lo_o_ap_vld(grp_sha_update_fu_148_sha_info_count_lo_o_ap_vld),
    .sha_info_count_hi_i(sha_info_count_hi),
    .sha_info_count_hi_o(grp_sha_update_fu_148_sha_info_count_hi_o),
    .sha_info_count_hi_o_ap_vld(grp_sha_update_fu_148_sha_info_count_hi_o_ap_vld),
    .sha_info_data_address0(grp_sha_update_fu_148_sha_info_data_address0),
    .sha_info_data_ce0(grp_sha_update_fu_148_sha_info_data_ce0),
    .sha_info_data_we0(grp_sha_update_fu_148_sha_info_data_we0),
    .sha_info_data_d0(grp_sha_update_fu_148_sha_info_data_d0),
    .sha_info_data_q0(sha_info_data_q0),
    .sha_info_digest_address0(grp_sha_update_fu_148_sha_info_digest_address0),
    .sha_info_digest_ce0(grp_sha_update_fu_148_sha_info_digest_ce0),
    .sha_info_digest_we0(grp_sha_update_fu_148_sha_info_digest_we0),
    .sha_info_digest_d0(grp_sha_update_fu_148_sha_info_digest_d0),
    .sha_info_digest_q0(sha_info_digest_q0),
    .sha_info_digest_address1(grp_sha_update_fu_148_sha_info_digest_address1),
    .sha_info_digest_ce1(grp_sha_update_fu_148_sha_info_digest_ce1),
    .sha_info_digest_we1(grp_sha_update_fu_148_sha_info_digest_we1),
    .sha_info_digest_d1(grp_sha_update_fu_148_sha_info_digest_d1),
    .sha_info_digest_q1(sha_info_digest_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sha_final_fu_136_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln216_fu_173_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_sha_final_fu_136_ap_start_reg <= 1'b1;
        end else if ((grp_sha_final_fu_136_ap_ready == 1'b1)) begin
            grp_sha_final_fu_136_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sha_init_fu_126_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_sha_init_fu_126_ap_start_reg <= 1'b1;
        end else if ((grp_sha_init_fu_126_ap_ready == 1'b1)) begin
            grp_sha_init_fu_126_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_ap_start_reg <= 1'b1;
        end else if ((grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_ap_ready == 1'b1)) begin
            grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sha_update_fu_148_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_sha_update_fu_148_ap_start_reg <= 1'b1;
        end else if ((grp_sha_update_fu_148_ap_ready == 1'b1)) begin
            grp_sha_update_fu_148_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln216_fu_173_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_7_fu_74 <= 3'd0;
    end else if (((icmp_ln225_fu_207_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        i_7_fu_74 <= add_ln225_fu_213_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        j_fu_70 <= 2'd0;
    end else if (((icmp_ln216_fu_173_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        j_fu_70 <= add_ln216_fu_179_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_sha_update_fu_148_sha_info_count_hi_o_ap_vld == 1'b1))) begin
        sha_info_count_hi <= grp_sha_update_fu_148_sha_info_count_hi_o;
    end else if (((1'b1 == ap_CS_fsm_state2) & (grp_sha_init_fu_126_sha_info_count_hi_ap_vld == 1'b1))) begin
        sha_info_count_hi <= grp_sha_init_fu_126_sha_info_count_hi;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_sha_update_fu_148_sha_info_count_lo_o_ap_vld == 1'b1))) begin
        sha_info_count_lo <= grp_sha_update_fu_148_sha_info_count_lo_o;
    end else if (((1'b1 == ap_CS_fsm_state2) & (grp_sha_init_fu_126_sha_info_count_lo_ap_vld == 1'b1))) begin
        sha_info_count_lo <= grp_sha_init_fu_126_sha_info_count_lo;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_reg_256 <= in_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        trunc_ln216_reg_239 <= trunc_ln216_fu_190_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        zext_ln225_reg_264[2 : 0] <= zext_ln225_fu_219_p1[2 : 0];
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state2_on_subcall_done)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_sha_update_fu_148_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_sha_final_fu_136_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln225_fu_207_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln225_fu_207_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        in_i_ce0 = 1'b1;
    end else begin
        in_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        local_indata_address0 = grp_sha_update_fu_148_buffer_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        local_indata_address0 = grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_local_indata_address0;
    end else begin
        local_indata_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        local_indata_ce0 = grp_sha_update_fu_148_buffer_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        local_indata_ce0 = grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_local_indata_ce0;
    end else begin
        local_indata_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        local_indata_ce1 = grp_sha_update_fu_148_buffer_r_ce1;
    end else begin
        local_indata_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        local_indata_we0 = grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_local_indata_we0;
    end else begin
        local_indata_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        outdata_ce0 = 1'b1;
    end else begin
        outdata_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        outdata_we0 = 1'b1;
    end else begin
        outdata_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        sha_info_data_address0 = grp_sha_update_fu_148_sha_info_data_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sha_info_data_address0 = grp_sha_final_fu_136_sha_info_data_address0;
    end else begin
        sha_info_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        sha_info_data_ce0 = grp_sha_update_fu_148_sha_info_data_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sha_info_data_ce0 = grp_sha_final_fu_136_sha_info_data_ce0;
    end else begin
        sha_info_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sha_info_data_ce1 = grp_sha_final_fu_136_sha_info_data_ce1;
    end else begin
        sha_info_data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        sha_info_data_d0 = grp_sha_update_fu_148_sha_info_data_d0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sha_info_data_d0 = grp_sha_final_fu_136_sha_info_data_d0;
    end else begin
        sha_info_data_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        sha_info_data_we0 = grp_sha_update_fu_148_sha_info_data_we0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sha_info_data_we0 = grp_sha_final_fu_136_sha_info_data_we0;
    end else begin
        sha_info_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sha_info_data_we1 = grp_sha_final_fu_136_sha_info_data_we1;
    end else begin
        sha_info_data_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        sha_info_digest_address0 = zext_ln225_fu_219_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sha_info_digest_address0 = grp_sha_update_fu_148_sha_info_digest_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sha_info_digest_address0 = grp_sha_final_fu_136_sha_info_digest_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        sha_info_digest_address0 = grp_sha_init_fu_126_sha_info_digest_address0;
    end else begin
        sha_info_digest_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        sha_info_digest_address1 = grp_sha_update_fu_148_sha_info_digest_address1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sha_info_digest_address1 = grp_sha_final_fu_136_sha_info_digest_address1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        sha_info_digest_address1 = grp_sha_init_fu_126_sha_info_digest_address1;
    end else begin
        sha_info_digest_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        sha_info_digest_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sha_info_digest_ce0 = grp_sha_update_fu_148_sha_info_digest_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sha_info_digest_ce0 = grp_sha_final_fu_136_sha_info_digest_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        sha_info_digest_ce0 = grp_sha_init_fu_126_sha_info_digest_ce0;
    end else begin
        sha_info_digest_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        sha_info_digest_ce1 = grp_sha_update_fu_148_sha_info_digest_ce1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sha_info_digest_ce1 = grp_sha_final_fu_136_sha_info_digest_ce1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        sha_info_digest_ce1 = grp_sha_init_fu_126_sha_info_digest_ce1;
    end else begin
        sha_info_digest_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        sha_info_digest_d0 = grp_sha_update_fu_148_sha_info_digest_d0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sha_info_digest_d0 = grp_sha_final_fu_136_sha_info_digest_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        sha_info_digest_d0 = grp_sha_init_fu_126_sha_info_digest_d0;
    end else begin
        sha_info_digest_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        sha_info_digest_d1 = grp_sha_update_fu_148_sha_info_digest_d1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sha_info_digest_d1 = grp_sha_final_fu_136_sha_info_digest_d1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        sha_info_digest_d1 = grp_sha_init_fu_126_sha_info_digest_d1;
    end else begin
        sha_info_digest_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        sha_info_digest_we0 = grp_sha_update_fu_148_sha_info_digest_we0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sha_info_digest_we0 = grp_sha_final_fu_136_sha_info_digest_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        sha_info_digest_we0 = grp_sha_init_fu_126_sha_info_digest_we0;
    end else begin
        sha_info_digest_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        sha_info_digest_we1 = grp_sha_update_fu_148_sha_info_digest_we1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        sha_info_digest_we1 = grp_sha_final_fu_136_sha_info_digest_we1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        sha_info_digest_we1 = grp_sha_init_fu_126_sha_info_digest_we1;
    end else begin
        sha_info_digest_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln216_fu_173_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_sha_update_fu_148_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_sha_final_fu_136_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln225_fu_207_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln216_fu_179_p2 = (j_fu_70 + 2'd1);

assign add_ln225_fu_213_p2 = (i_7_fu_74 + 3'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state2_on_subcall_done = ((grp_sha_init_fu_126_ap_done == 1'b0) | (grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_ap_done == 1'b0));
end

assign grp_sha_final_fu_136_ap_start = grp_sha_final_fu_136_ap_start_reg;

assign grp_sha_init_fu_126_ap_start = grp_sha_init_fu_126_ap_start_reg;

assign grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_ap_start = grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_ap_start_reg;

assign grp_sha_update_fu_148_ap_start = grp_sha_update_fu_148_ap_start_reg;

assign icmp_ln216_fu_173_p2 = ((j_fu_70 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln225_fu_207_p2 = ((i_7_fu_74 == 3'd5) ? 1'b1 : 1'b0);

assign in_i_address0 = zext_ln216_fu_185_p1;

assign indata_address0 = grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_indata_address0;

assign indata_ce0 = grp_sha_stream_Pipeline_sha_stream_label1_VITIS_LOOP_207_1_fu_118_indata_ce0;

assign outdata_address0 = zext_ln225_reg_264;

assign outdata_d0 = sha_info_digest_q0;

assign trunc_ln216_fu_190_p1 = j_fu_70[0:0];

assign zext_ln216_fu_185_p1 = j_fu_70;

assign zext_ln225_fu_219_p1 = i_7_fu_74;

always @ (posedge ap_clk) begin
    zext_ln225_reg_264[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end

endmodule //sha_stream
