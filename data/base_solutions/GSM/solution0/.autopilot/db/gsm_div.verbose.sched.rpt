

================================================================
== Vitis HLS Report for 'gsm_div'
================================================================
* Date:           Wed Aug  6 20:41:47 2025

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        GSM
* Solution:       solution0 (Vivado IP Flow Target)
* Product family: virtexuplusHBM
* Target device:  xcu50-fsvh2104-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  8.00 ns|  2.048 ns|     2.16 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        1|       15|  8.000 ns|  0.120 us|    1|   15|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                  |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name    |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- gsm_div_label0  |       14|       14|         1|          -|          -|    15|        no|
        +------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.17>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%specpipeline_ln16 = specpipeline void @_ssdm_op_SpecPipeline, i32 0, i32 0, i32 1, i32 0, void @empty" [/home/gabriel/Documents/UFRGS/RAISE/AHLS/AHLS/data/base_directives/gsm.tcl:16]   --->   Operation 3 'specpipeline' 'specpipeline_ln16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%denum_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %denum" [data/benchmarks/gsm/gsm_add.c:120]   --->   Operation 4 'read' 'denum_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%num_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %num" [data/benchmarks/gsm/gsm_add.c:120]   --->   Operation 5 'read' 'num_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%sext_ln120 = sext i16 %num_read" [data/benchmarks/gsm/gsm_add.c:120]   --->   Operation 6 'sext' 'sext_ln120' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%sext_ln126 = sext i16 %denum_read" [data/benchmarks/gsm/gsm_add.c:126]   --->   Operation 7 'sext' 'sext_ln126' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%sext_ln121 = sext i16 %denum_read" [data/benchmarks/gsm/gsm_add.c:121]   --->   Operation 8 'sext' 'sext_ln121' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.78ns)   --->   "%icmp_ln134 = icmp_eq  i16 %num_read, i16 0" [data/benchmarks/gsm/gsm_add.c:134]   --->   Operation 9 'icmp' 'icmp_ln134' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 10 [1/1] (0.38ns)   --->   "%br_ln134 = br i1 %icmp_ln134, void %while.body.preheader, void %cleanup" [data/benchmarks/gsm/gsm_add.c:134]   --->   Operation 10 'br' 'br_ln134' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%div = alloca i32 1" [data/benchmarks/gsm/gsm_add.c:122]   --->   Operation 11 'alloca' 'div' <Predicate = (!icmp_ln134)> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%L_num = alloca i32 1" [data/benchmarks/gsm/gsm_add.c:120]   --->   Operation 12 'alloca' 'L_num' <Predicate = (!icmp_ln134)> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%k = alloca i32 1" [data/benchmarks/gsm/gsm_add.c:123]   --->   Operation 13 'alloca' 'k' <Predicate = (!icmp_ln134)> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.38ns)   --->   "%store_ln123 = store i4 14, i4 %k" [data/benchmarks/gsm/gsm_add.c:123]   --->   Operation 14 'store' 'store_ln123' <Predicate = (!icmp_ln134)> <Delay = 0.38>
ST_1 : Operation 15 [1/1] (0.38ns)   --->   "%store_ln120 = store i63 %sext_ln120, i63 %L_num" [data/benchmarks/gsm/gsm_add.c:120]   --->   Operation 15 'store' 'store_ln120' <Predicate = (!icmp_ln134)> <Delay = 0.38>
ST_1 : Operation 16 [1/1] (0.38ns)   --->   "%store_ln122 = store i15 0, i15 %div" [data/benchmarks/gsm/gsm_add.c:122]   --->   Operation 16 'store' 'store_ln122' <Predicate = (!icmp_ln134)> <Delay = 0.38>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%br_ln140 = br void %while.body" [data/benchmarks/gsm/gsm_add.c:140]   --->   Operation 17 'br' 'br_ln140' <Predicate = (!icmp_ln134)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 2.04>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%div_4 = load i15 %div" [data/benchmarks/gsm/gsm_add.c:141]   --->   Operation 18 'load' 'div_4' <Predicate = (!icmp_ln134)> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%L_num_4 = load i63 %L_num" [data/benchmarks/gsm/gsm_add.c:120]   --->   Operation 19 'load' 'L_num_4' <Predicate = (!icmp_ln134)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%k_2 = load i4 %k" [data/benchmarks/gsm/gsm_add.c:138]   --->   Operation 20 'load' 'k_2' <Predicate = (!icmp_ln134)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%speclooptripcount_ln140 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 15, i64 15, i64 15" [data/benchmarks/gsm/gsm_add.c:140]   --->   Operation 21 'speclooptripcount' 'speclooptripcount_ln140' <Predicate = (!icmp_ln134)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%specloopname_ln149 = specloopname void @_ssdm_op_SpecLoopName, void @empty_0" [data/benchmarks/gsm/gsm_add.c:149]   --->   Operation 22 'specloopname' 'specloopname_ln149' <Predicate = (!icmp_ln134)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%div_1 = bitconcatenate i16 @_ssdm_op_BitConcatenate.i16.i15.i1, i15 %div_4, i1 0" [data/benchmarks/gsm/gsm_add.c:141]   --->   Operation 23 'bitconcatenate' 'div_1' <Predicate = (!icmp_ln134)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%L_num_1 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i63.i1, i63 %L_num_4, i1 0" [data/benchmarks/gsm/gsm_add.c:142]   --->   Operation 24 'bitconcatenate' 'L_num_1' <Predicate = (!icmp_ln134)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%shl_ln120 = shl i63 %L_num_4, i63 1" [data/benchmarks/gsm/gsm_add.c:120]   --->   Operation 25 'shl' 'shl_ln120' <Predicate = (!icmp_ln134)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (1.14ns)   --->   "%icmp_ln144 = icmp_slt  i64 %L_num_1, i64 %sext_ln126" [data/benchmarks/gsm/gsm_add.c:144]   --->   Operation 26 'icmp' 'icmp_ln144' <Predicate = (!icmp_ln134)> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.12ns)   --->   "%xor_ln144 = xor i1 %icmp_ln144, i1 1" [data/benchmarks/gsm/gsm_add.c:144]   --->   Operation 27 'xor' 'xor_ln144' <Predicate = (!icmp_ln134)> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (1.13ns)   --->   "%L_num_5 = sub i63 %shl_ln120, i63 %sext_ln121" [data/benchmarks/gsm/gsm_add.c:146]   --->   Operation 28 'sub' 'L_num_5' <Predicate = (!icmp_ln134)> <Delay = 1.13> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns) (grouped into LUT with out node div_6)   --->   "%div_5 = or i16 %div_1, i16 1" [data/benchmarks/gsm/gsm_add.c:147]   --->   Operation 29 'or' 'div_5' <Predicate = (!icmp_ln134)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.24ns) (out node of the LUT)   --->   "%div_6 = select i1 %xor_ln144, i16 %div_5, i16 %div_1" [data/benchmarks/gsm/gsm_add.c:144]   --->   Operation 30 'select' 'div_6' <Predicate = (!icmp_ln134)> <Delay = 0.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%trunc_ln144 = trunc i16 %div_6" [data/benchmarks/gsm/gsm_add.c:144]   --->   Operation 31 'trunc' 'trunc_ln144' <Predicate = (!icmp_ln134)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.39ns)   --->   "%L_num_6 = select i1 %xor_ln144, i63 %L_num_5, i63 %shl_ln120" [data/benchmarks/gsm/gsm_add.c:144]   --->   Operation 32 'select' 'L_num_6' <Predicate = (!icmp_ln134)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.70ns)   --->   "%k_3 = add i4 %k_2, i4 15" [data/benchmarks/gsm/gsm_add.c:138]   --->   Operation 33 'add' 'k_3' <Predicate = (!icmp_ln134)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.70ns)   --->   "%icmp_ln138 = icmp_eq  i4 %k_2, i4 0" [data/benchmarks/gsm/gsm_add.c:138]   --->   Operation 34 'icmp' 'icmp_ln138' <Predicate = (!icmp_ln134)> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.38ns)   --->   "%store_ln123 = store i4 %k_3, i4 %k" [data/benchmarks/gsm/gsm_add.c:123]   --->   Operation 35 'store' 'store_ln123' <Predicate = (!icmp_ln134)> <Delay = 0.38>
ST_2 : Operation 36 [1/1] (0.38ns)   --->   "%store_ln120 = store i63 %L_num_6, i63 %L_num" [data/benchmarks/gsm/gsm_add.c:120]   --->   Operation 36 'store' 'store_ln120' <Predicate = (!icmp_ln134)> <Delay = 0.38>
ST_2 : Operation 37 [1/1] (0.38ns)   --->   "%store_ln122 = store i15 %trunc_ln144, i15 %div" [data/benchmarks/gsm/gsm_add.c:122]   --->   Operation 37 'store' 'store_ln122' <Predicate = (!icmp_ln134)> <Delay = 0.38>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%br_ln138 = br i1 %icmp_ln138, void %while.body, void %cleanup.loopexit" [data/benchmarks/gsm/gsm_add.c:138]   --->   Operation 38 'br' 'br_ln138' <Predicate = (!icmp_ln134)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.38ns)   --->   "%br_ln0 = br void %cleanup"   --->   Operation 39 'br' 'br_ln0' <Predicate = (!icmp_ln134 & icmp_ln138)> <Delay = 0.38>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%retval_0 = phi i16 0, void %entry, i16 %div_6, void %cleanup.loopexit"   --->   Operation 40 'phi' 'retval_0' <Predicate = (icmp_ln138) | (icmp_ln134)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%ret_ln152 = ret i16 %retval_0" [data/benchmarks/gsm/gsm_add.c:152]   --->   Operation 41 'ret' 'ret_ln152' <Predicate = (icmp_ln138) | (icmp_ln134)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8.000ns, clock uncertainty: 2.160ns.

 <State 1>: 1.172ns
The critical path consists of the following:
	wire read operation ('num_read', data/benchmarks/gsm/gsm_add.c:120) on port 'num' (data/benchmarks/gsm/gsm_add.c:120) [5]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln134', data/benchmarks/gsm/gsm_add.c:134) [9]  (0.785 ns)
	'store' operation 0 bit ('store_ln123', data/benchmarks/gsm/gsm_add.c:123) of constant 14 on local variable 'k', data/benchmarks/gsm/gsm_add.c:123 [15]  (0.387 ns)

 <State 2>: 2.048ns
The critical path consists of the following:
	'load' operation 63 bit ('L_num', data/benchmarks/gsm/gsm_add.c:120) on local variable 'L_num', data/benchmarks/gsm/gsm_add.c:120 [21]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln144', data/benchmarks/gsm/gsm_add.c:144) [28]  (1.147 ns)
	'xor' operation 1 bit ('xor_ln144', data/benchmarks/gsm/gsm_add.c:144) [29]  (0.122 ns)
	'select' operation 63 bit ('L_num', data/benchmarks/gsm/gsm_add.c:144) [34]  (0.392 ns)
	'store' operation 0 bit ('store_ln120', data/benchmarks/gsm/gsm_add.c:120) of variable 'L_num', data/benchmarks/gsm/gsm_add.c:144 on local variable 'L_num', data/benchmarks/gsm/gsm_add.c:120 [38]  (0.387 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
