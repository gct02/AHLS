

================================================================
== Vitis HLS Report for 'gsm_norm'
================================================================
* Date:           Fri May 30 22:03:37 2025

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        GSM
* Solution:       solution0 (Vivado IP Flow Target)
* Product family: virtexuplusHBM
* Target device:  xcu50-fsvh2104-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  8.00 ns|  1.874 ns|     2.16 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        1|        1|  8.000 ns|  8.000 ns|    1|    1|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.51>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%a_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %a" [data/benchmarks/gsm/gsm_add.c:107]   --->   Operation 3 'read' 'a_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns) (grouped into LUT with out node xor_ln105)   --->   "%trunc_ln107 = trunc i64 %a_read" [data/benchmarks/gsm/gsm_add.c:107]   --->   Operation 4 'trunc' 'trunc_ln107' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (1.14ns)   --->   "%icmp_ln107 = icmp_slt  i64 %a_read, i64 18446744072635809793" [data/benchmarks/gsm/gsm_add.c:107]   --->   Operation 5 'icmp' 'icmp_ln107' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %a_read, i32 63" [data/benchmarks/gsm/gsm_add.c:105]   --->   Operation 6 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns) (grouped into LUT with out node xor_ln105)   --->   "%select_ln105 = select i1 %tmp, i32 4294967295, i32 0" [data/benchmarks/gsm/gsm_add.c:105]   --->   Operation 7 'select' 'select_ln105' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 8 [1/1] (0.00ns) (grouped into LUT with out node xor_ln112_2)   --->   "%trunc_ln105 = trunc i64 %a_read" [data/benchmarks/gsm/gsm_add.c:105]   --->   Operation 8 'trunc' 'trunc_ln105' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns) (grouped into LUT with out node xor_ln112_2)   --->   "%select_ln105_1 = select i1 %tmp, i16 65535, i16 0" [data/benchmarks/gsm/gsm_add.c:105]   --->   Operation 9 'select' 'select_ln105_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 10 [1/1] (0.00ns) (grouped into LUT with out node xor_ln112_1)   --->   "%trunc_ln105_1 = trunc i64 %a_read" [data/benchmarks/gsm/gsm_add.c:105]   --->   Operation 10 'trunc' 'trunc_ln105_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns) (grouped into LUT with out node xor_ln112_1)   --->   "%select_ln105_2 = select i1 %tmp, i8 255, i8 0" [data/benchmarks/gsm/gsm_add.c:105]   --->   Operation 11 'select' 'select_ln105_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (0.00ns) (grouped into LUT with out node xor_ln112)   --->   "%trunc_ln105_2 = trunc i64 %a_read" [data/benchmarks/gsm/gsm_add.c:105]   --->   Operation 12 'trunc' 'trunc_ln105_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns) (grouped into LUT with out node xor_ln112)   --->   "%select_ln105_3 = select i1 %tmp, i24 16777215, i24 0" [data/benchmarks/gsm/gsm_add.c:105]   --->   Operation 13 'select' 'select_ln105_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.27ns) (out node of the LUT)   --->   "%xor_ln105 = xor i32 %select_ln105, i32 %trunc_ln107" [data/benchmarks/gsm/gsm_add.c:105]   --->   Operation 14 'xor' 'xor_ln105' <Predicate = true> <Delay = 0.27> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.21> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.30ns) (out node of the LUT)   --->   "%xor_ln112 = xor i24 %select_ln105_3, i24 %trunc_ln105_2" [data/benchmarks/gsm/gsm_add.c:112]   --->   Operation 15 'xor' 'xor_ln112' <Predicate = true> <Delay = 0.30> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.27ns) (out node of the LUT)   --->   "%xor_ln112_1 = xor i8 %select_ln105_2, i8 %trunc_ln105_1" [data/benchmarks/gsm/gsm_add.c:112]   --->   Operation 16 'xor' 'xor_ln112_1' <Predicate = true> <Delay = 0.27> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.29ns) (out node of the LUT)   --->   "%xor_ln112_2 = xor i16 %select_ln105_1, i16 %trunc_ln105" [data/benchmarks/gsm/gsm_add.c:112]   --->   Operation 17 'xor' 'xor_ln112_2' <Predicate = true> <Delay = 0.29> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i16 @_ssdm_op_PartSelect.i16.i32.i32.i32, i32 %xor_ln105, i32 16, i32 31" [data/benchmarks/gsm/gsm_add.c:112]   --->   Operation 18 'partselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.78ns)   --->   "%icmp_ln112 = icmp_eq  i16 %tmp_1, i16 0" [data/benchmarks/gsm/gsm_add.c:112]   --->   Operation 19 'icmp' 'icmp_ln112' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%tmp_2 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %xor_ln105, i32 24, i32 31" [data/benchmarks/gsm/gsm_add.c:113]   --->   Operation 20 'partselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.70ns)   --->   "%icmp_ln113 = icmp_eq  i8 %tmp_2, i8 0" [data/benchmarks/gsm/gsm_add.c:113]   --->   Operation 21 'icmp' 'icmp_ln113' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%zext_ln115 = zext i8 %xor_ln112_1" [data/benchmarks/gsm/gsm_add.c:115]   --->   Operation 22 'zext' 'zext_ln115' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%bitoff_addr = getelementptr i4 %bitoff, i64 0, i64 %zext_ln115" [data/benchmarks/gsm/gsm_add.c:115]   --->   Operation 23 'getelementptr' 'bitoff_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [2/2] (0.61ns)   --->   "%bitoff_load = load i8 %bitoff_addr" [data/benchmarks/gsm/gsm_add.c:115]   --->   Operation 24 'load' 'bitoff_load' <Predicate = true> <Delay = 0.61> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 4> <Depth = 256> <ROM>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%trunc_ln2 = partselect i8 @_ssdm_op_PartSelect.i8.i16.i32.i32, i16 %xor_ln112_2, i32 8, i32 15" [data/benchmarks/gsm/gsm_add.c:115]   --->   Operation 25 'partselect' 'trunc_ln2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln115_1 = zext i8 %trunc_ln2" [data/benchmarks/gsm/gsm_add.c:115]   --->   Operation 26 'zext' 'zext_ln115_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%bitoff_addr_1 = getelementptr i4 %bitoff, i64 0, i64 %zext_ln115_1" [data/benchmarks/gsm/gsm_add.c:115]   --->   Operation 27 'getelementptr' 'bitoff_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [2/2] (0.61ns)   --->   "%bitoff_load_1 = load i8 %bitoff_addr_1" [data/benchmarks/gsm/gsm_add.c:115]   --->   Operation 28 'load' 'bitoff_load_1' <Predicate = true> <Delay = 0.61> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 4> <Depth = 256> <ROM>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%trunc_ln3 = partselect i8 @_ssdm_op_PartSelect.i8.i24.i32.i32, i24 %xor_ln112, i32 16, i32 23" [data/benchmarks/gsm/gsm_add.c:114]   --->   Operation 29 'partselect' 'trunc_ln3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln114 = zext i8 %trunc_ln3" [data/benchmarks/gsm/gsm_add.c:114]   --->   Operation 30 'zext' 'zext_ln114' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%bitoff_addr_2 = getelementptr i4 %bitoff, i64 0, i64 %zext_ln114" [data/benchmarks/gsm/gsm_add.c:114]   --->   Operation 31 'getelementptr' 'bitoff_addr_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [2/2] (0.61ns)   --->   "%bitoff_load_2 = load i8 %bitoff_addr_2" [data/benchmarks/gsm/gsm_add.c:114]   --->   Operation 32 'load' 'bitoff_load_2' <Predicate = true> <Delay = 0.61> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 4> <Depth = 256> <ROM>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln113_1 = zext i8 %tmp_2" [data/benchmarks/gsm/gsm_add.c:113]   --->   Operation 33 'zext' 'zext_ln113_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%bitoff_addr_3 = getelementptr i4 %bitoff, i64 0, i64 %zext_ln113_1" [data/benchmarks/gsm/gsm_add.c:113]   --->   Operation 34 'getelementptr' 'bitoff_addr_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [2/2] (0.61ns)   --->   "%bitoff_load_3 = load i8 %bitoff_addr_3" [data/benchmarks/gsm/gsm_add.c:113]   --->   Operation 35 'load' 'bitoff_load_3' <Predicate = true> <Delay = 0.61> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 4> <Depth = 256> <ROM>
ST_1 : Operation 36 [1/1] (0.12ns)   --->   "%xor_ln107 = xor i1 %icmp_ln107, i1 1" [data/benchmarks/gsm/gsm_add.c:107]   --->   Operation 36 'xor' 'xor_ln107' <Predicate = true> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%tmp_3 = partselect i24 @_ssdm_op_PartSelect.i24.i32.i32.i32, i32 %xor_ln105, i32 8, i32 31" [data/benchmarks/gsm/gsm_add.c:115]   --->   Operation 37 'partselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.83ns)   --->   "%icmp_ln115 = icmp_eq  i24 %tmp_3, i24 0" [data/benchmarks/gsm/gsm_add.c:115]   --->   Operation 38 'icmp' 'icmp_ln115' <Predicate = true> <Delay = 0.83> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.83> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (0.12ns)   --->   "%and_ln107 = and i1 %icmp_ln115, i1 %xor_ln107" [data/benchmarks/gsm/gsm_add.c:107]   --->   Operation 39 'and' 'and_ln107' <Predicate = true> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (0.70ns)   --->   "%icmp_ln115_1 = icmp_ne  i8 %trunc_ln2, i8 0" [data/benchmarks/gsm/gsm_add.c:115]   --->   Operation 40 'icmp' 'icmp_ln115_1' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node or_ln107)   --->   "%and_ln107_1 = and i1 %icmp_ln115_1, i1 %xor_ln107" [data/benchmarks/gsm/gsm_add.c:107]   --->   Operation 41 'and' 'and_ln107_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node or_ln107)   --->   "%and_ln107_2 = and i1 %and_ln107_1, i1 %icmp_ln112" [data/benchmarks/gsm/gsm_add.c:107]   --->   Operation 42 'and' 'and_ln107_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node and_ln107_4)   --->   "%xor_ln112_3 = xor i1 %icmp_ln112, i1 1" [data/benchmarks/gsm/gsm_add.c:112]   --->   Operation 43 'xor' 'xor_ln112_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node and_ln107_4)   --->   "%and_ln107_3 = and i1 %xor_ln112_3, i1 %xor_ln107" [data/benchmarks/gsm/gsm_add.c:107]   --->   Operation 44 'and' 'and_ln107_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.12ns) (out node of the LUT)   --->   "%and_ln107_4 = and i1 %and_ln107_3, i1 %icmp_ln113" [data/benchmarks/gsm/gsm_add.c:107]   --->   Operation 45 'and' 'and_ln107_4' <Predicate = true> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.12ns) (out node of the LUT)   --->   "%or_ln107 = or i1 %and_ln107_4, i1 %and_ln107_2" [data/benchmarks/gsm/gsm_add.c:107]   --->   Operation 46 'or' 'or_ln107' <Predicate = true> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 1.87>
ST_2 : Operation 47 [1/2] (0.61ns)   --->   "%bitoff_load = load i8 %bitoff_addr" [data/benchmarks/gsm/gsm_add.c:115]   --->   Operation 47 'load' 'bitoff_load' <Predicate = true> <Delay = 0.61> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 4> <Depth = 256> <ROM>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%zext_ln112 = zext i4 %bitoff_load" [data/benchmarks/gsm/gsm_add.c:112]   --->   Operation 48 'zext' 'zext_ln112' <Predicate = (and_ln107 & !or_ln107)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.70ns)   --->   "%add_ln112 = add i5 %zext_ln112, i5 23" [data/benchmarks/gsm/gsm_add.c:112]   --->   Operation 49 'add' 'add_ln112' <Predicate = (and_ln107 & !or_ln107)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/2] (0.61ns)   --->   "%bitoff_load_1 = load i8 %bitoff_addr_1" [data/benchmarks/gsm/gsm_add.c:115]   --->   Operation 50 'load' 'bitoff_load_1' <Predicate = true> <Delay = 0.61> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 4> <Depth = 256> <ROM>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln112_1 = zext i4 %bitoff_load_1" [data/benchmarks/gsm/gsm_add.c:112]   --->   Operation 51 'zext' 'zext_ln112_1' <Predicate = (!and_ln107_4 & or_ln107)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.70ns)   --->   "%add_ln112_1 = add i5 %zext_ln112_1, i5 15" [data/benchmarks/gsm/gsm_add.c:112]   --->   Operation 52 'add' 'add_ln112_1' <Predicate = (!and_ln107_4 & or_ln107)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/2] (0.61ns)   --->   "%bitoff_load_2 = load i8 %bitoff_addr_2" [data/benchmarks/gsm/gsm_add.c:114]   --->   Operation 53 'load' 'bitoff_load_2' <Predicate = true> <Delay = 0.61> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 4> <Depth = 256> <ROM>
ST_2 : Operation 54 [1/1] (0.70ns)   --->   "%add_ln112_2 = add i4 %bitoff_load_2, i4 7" [data/benchmarks/gsm/gsm_add.c:112]   --->   Operation 54 'add' 'add_ln112_2' <Predicate = (and_ln107_4 & or_ln107)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node select_ln107_2)   --->   "%zext_ln113 = zext i4 %add_ln112_2" [data/benchmarks/gsm/gsm_add.c:113]   --->   Operation 55 'zext' 'zext_ln113' <Predicate = (and_ln107_4 & or_ln107)> <Delay = 0.00>
ST_2 : Operation 56 [1/2] (0.61ns)   --->   "%bitoff_load_3 = load i8 %bitoff_addr_3" [data/benchmarks/gsm/gsm_add.c:113]   --->   Operation 56 'load' 'bitoff_load_3' <Predicate = true> <Delay = 0.61> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 0.61> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 4> <Depth = 256> <ROM>
ST_2 : Operation 57 [1/1] (0.70ns)   --->   "%add_ln112_3 = add i4 %bitoff_load_3, i4 15" [data/benchmarks/gsm/gsm_add.c:112]   --->   Operation 57 'add' 'add_ln112_3' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node select_ln107_3)   --->   "%sext_ln107 = sext i4 %add_ln112_3" [data/benchmarks/gsm/gsm_add.c:107]   --->   Operation 58 'sext' 'sext_ln107' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node select_ln107_2)   --->   "%select_ln107 = select i1 %and_ln107_4, i5 %zext_ln113, i5 %add_ln112_1" [data/benchmarks/gsm/gsm_add.c:107]   --->   Operation 59 'select' 'select_ln107' <Predicate = (or_ln107)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node select_ln107_2)   --->   "%select_ln107_1 = select i1 %and_ln107, i5 %add_ln112, i5 0" [data/benchmarks/gsm/gsm_add.c:107]   --->   Operation 60 'select' 'select_ln107_1' <Predicate = (!or_ln107)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node select_ln107_3)   --->   "%or_ln107_1 = or i1 %and_ln107, i1 %icmp_ln107" [data/benchmarks/gsm/gsm_add.c:107]   --->   Operation 61 'or' 'or_ln107_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.27ns) (out node of the LUT)   --->   "%select_ln107_2 = select i1 %or_ln107, i5 %select_ln107, i5 %select_ln107_1" [data/benchmarks/gsm/gsm_add.c:107]   --->   Operation 62 'select' 'select_ln107_2' <Predicate = true> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node select_ln107_3)   --->   "%zext_ln107 = zext i5 %select_ln107_2" [data/benchmarks/gsm/gsm_add.c:107]   --->   Operation 63 'zext' 'zext_ln107' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node select_ln107_3)   --->   "%or_ln107_2 = or i1 %or_ln107, i1 %or_ln107_1" [data/benchmarks/gsm/gsm_add.c:107]   --->   Operation 64 'or' 'or_ln107_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.27ns) (out node of the LUT)   --->   "%select_ln107_3 = select i1 %or_ln107_2, i6 %zext_ln107, i6 %sext_ln107" [data/benchmarks/gsm/gsm_add.c:107]   --->   Operation 65 'select' 'select_ln107_3' <Predicate = true> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%ret_ln116 = ret i6 %select_ln107_3" [data/benchmarks/gsm/gsm_add.c:116]   --->   Operation 66 'ret' 'ret_ln116' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8.000ns, clock uncertainty: 2.160ns.

 <State 1>: 1.513ns
The critical path consists of the following:
	wire read operation ('a_read', data/benchmarks/gsm/gsm_add.c:107) on port 'a' (data/benchmarks/gsm/gsm_add.c:107) [3]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln107', data/benchmarks/gsm/gsm_add.c:107) [5]  (1.147 ns)
	'xor' operation 1 bit ('xor_ln107', data/benchmarks/gsm/gsm_add.c:107) [44]  (0.122 ns)
	'and' operation 1 bit ('and_ln107_3', data/benchmarks/gsm/gsm_add.c:107) [52]  (0.000 ns)
	'and' operation 1 bit ('and_ln107_4', data/benchmarks/gsm/gsm_add.c:107) [53]  (0.122 ns)
	'or' operation 1 bit ('or_ln107', data/benchmarks/gsm/gsm_add.c:107) [55]  (0.122 ns)

 <State 2>: 1.874ns
The critical path consists of the following:
	'load' operation 4 bit ('bitoff_load_2', data/benchmarks/gsm/gsm_add.c:114) on array 'bitoff' [36]  (0.610 ns)
	'add' operation 4 bit ('add_ln112_2', data/benchmarks/gsm/gsm_add.c:112) [37]  (0.708 ns)
	'select' operation 5 bit ('select_ln107', data/benchmarks/gsm/gsm_add.c:107) [54]  (0.000 ns)
	'select' operation 5 bit ('select_ln107_2', data/benchmarks/gsm/gsm_add.c:107) [58]  (0.278 ns)
	'select' operation 6 bit ('select_ln107_3', data/benchmarks/gsm/gsm_add.c:107) [61]  (0.278 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
