// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module Gsm_LPC_Analysis_gsm_add (
        ap_ready,
        a,
        b,
        ap_return
);


output   ap_ready;
input  [15:0] a;
input  [15:0] b;
output  [15:0] ap_return;

wire  signed [15:0] sext_ln39_fu_40_p0;
wire  signed [15:0] sext_ln39_1_fu_44_p0;
wire  signed [15:0] add_ln39_fu_48_p0;
wire  signed [15:0] add_ln39_fu_48_p1;
wire  signed [16:0] sext_ln39_1_fu_44_p1;
wire  signed [16:0] sext_ln39_fu_40_p1;
wire   [16:0] sum_fu_54_p2;
wire   [1:0] tmp_fu_66_p4;
wire   [0:0] icmp_ln40_fu_60_p2;
wire   [0:0] icmp_ln40_1_fu_76_p2;
wire   [0:0] or_ln40_fu_90_p2;
wire   [15:0] select_ln40_fu_82_p3;
wire   [15:0] add_ln39_fu_48_p2;

assign add_ln39_fu_48_p2 = ($signed(add_ln39_fu_48_p0) + $signed(add_ln39_fu_48_p1));

assign ap_ready = 1'b1;

assign or_ln40_fu_90_p2 = (icmp_ln40_fu_60_p2 | icmp_ln40_1_fu_76_p2);

assign select_ln40_fu_82_p3 = ((icmp_ln40_fu_60_p2[0:0] == 1'b1) ? 16'd32768 : 16'd32767);

assign sext_ln39_1_fu_44_p1 = sext_ln39_1_fu_44_p0;

assign sext_ln39_fu_40_p1 = sext_ln39_fu_40_p0;

assign sum_fu_54_p2 = ($signed(sext_ln39_1_fu_44_p1) + $signed(sext_ln39_fu_40_p1));

assign tmp_fu_66_p4 = {{sum_fu_54_p2[16:15]}};

assign add_ln39_fu_48_p0 = b;

assign add_ln39_fu_48_p1 = a;

assign ap_return = ((or_ln40_fu_90_p2[0:0] == 1'b1) ? select_ln40_fu_82_p3 : add_ln39_fu_48_p2);

assign icmp_ln40_1_fu_76_p2 = ((tmp_fu_66_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_60_p2 = (($signed(sum_fu_54_p2) < $signed(17'd98304)) ? 1'b1 : 1'b0);

assign sext_ln39_1_fu_44_p0 = b;

assign sext_ln39_fu_40_p0 = a;

endmodule //Gsm_LPC_Analysis_gsm_add
