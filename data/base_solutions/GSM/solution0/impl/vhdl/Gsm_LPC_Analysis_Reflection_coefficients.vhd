-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Gsm_LPC_Analysis_Reflection_coefficients is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    L_ACF_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    L_ACF_ce0 : OUT STD_LOGIC;
    L_ACF_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    LARc_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    LARc_ce0 : OUT STD_LOGIC;
    LARc_we0 : OUT STD_LOGIC;
    LARc_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    grp_gsm_norm_fu_323_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_gsm_norm_fu_323_p_dout0 : IN STD_LOGIC_VECTOR (5 downto 0);
    grp_gsm_norm_fu_323_p_start : OUT STD_LOGIC;
    grp_gsm_norm_fu_323_p_ready : IN STD_LOGIC;
    grp_gsm_norm_fu_323_p_done : IN STD_LOGIC;
    grp_gsm_norm_fu_323_p_idle : IN STD_LOGIC );
end;


architecture behav of Gsm_LPC_Analysis_Reflection_coefficients is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (21 downto 0) := "0000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (21 downto 0) := "0000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (21 downto 0) := "0000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (21 downto 0) := "0000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (21 downto 0) := "0000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (21 downto 0) := "0000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (21 downto 0) := "0001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (21 downto 0) := "0010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (21 downto 0) := "0100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (21 downto 0) := "1000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv15_7FFF : STD_LOGIC_VECTOR (14 downto 0) := "111111111111111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv16_7FFF : STD_LOGIC_VECTOR (15 downto 0) := "0111111111111111";
    constant ap_const_lv17_18000 : STD_LOGIC_VECTOR (16 downto 0) := "11000000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv31_4000 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000100000000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal L_ACF_load_reg_1000 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln172_fu_328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln172_reg_1005 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_prom_cast_cast_cast_cast_fu_348_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sh_prom_cast_cast_cast_cast_reg_1009 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal zext_ln184_fu_358_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln184_reg_1017 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal zext_ln191_fu_398_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln191_reg_1037 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal zext_ln197_fu_434_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_reg_1057 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal icmp_ln204_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln204_reg_1111 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal add_ln204_1_fu_476_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln204_1_reg_1115 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln204_fu_482_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln204_reg_1120 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal P_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_1_reg_1125 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln67_fu_517_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal P_load_reg_1141 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal icmp_ln208_fu_521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln208_reg_1148 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln204_fu_527_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln204_reg_1159 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln55_fu_560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_1167 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal icmp_ln55_1_fu_566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_1_reg_1174 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln59_fu_571_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln59_reg_1179 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln229_fu_705_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln229_reg_1197 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal K_addr_1_reg_1202 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln232_fu_710_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln232_reg_1207 : STD_LOGIC_VECTOR (3 downto 0);
    signal K_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal K_load_reg_1217 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal P_load_1_reg_1229 : STD_LOGIC_VECTOR (15 downto 0);
    signal ACF_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ACF_ce0 : STD_LOGIC;
    signal ACF_we0 : STD_LOGIC;
    signal ACF_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal ACF_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal P_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal P_ce0 : STD_LOGIC;
    signal P_we0 : STD_LOGIC;
    signal P_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal K_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal K_ce0 : STD_LOGIC;
    signal K_we0 : STD_LOGIC;
    signal K_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gsm_norm_fu_300_ap_done : STD_LOGIC;
    signal grp_gsm_norm_fu_300_ap_ready : STD_LOGIC;
    signal grp_gsm_div_fu_308_ap_start : STD_LOGIC;
    signal grp_gsm_div_fu_308_ap_done : STD_LOGIC;
    signal grp_gsm_div_fu_308_ap_idle : STD_LOGIC;
    signal grp_gsm_div_fu_308_ap_ready : STD_LOGIC;
    signal grp_gsm_div_fu_308_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_2_reg_279 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_fu_489_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_reg_289 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_gsm_norm_fu_300_ap_start_reg : STD_LOGIC := '0';
    signal grp_gsm_div_fu_308_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln184_fu_352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln191_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln197_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal zext_ln165_fu_602_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln210_fu_581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln229_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln232_fu_716_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln174_fu_951_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal icmp_ln174_fu_945_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_108 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal grp_fu_319_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_1_fu_112 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal add_ln191_fu_403_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_2_fu_116 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal add_ln197_fu_428_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal idx_fu_120 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal i_5_fu_124 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal add_ln204_fu_721_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvars_iv_fu_128 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal add_ln204_2_fu_726_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvars_iv3_fu_132 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal add_ln204_3_fu_732_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal idx94_fu_136 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal add_ln210_fu_587_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_predicate_op131_call_state13 : BOOLEAN;
    signal ap_block_state13_on_subcall_done : BOOLEAN;
    signal select_ln40_5_fu_936_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln40_1_fu_687_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln40_3_fu_849_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln219_fu_546_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sh_prom_cast_cast_cast_fu_344_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln186_fu_373_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln166_fu_485_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_fu_489_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln67_fu_497_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln166_fu_485_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln67_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln67_fu_503_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln67_fu_509_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln208_fu_521_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln219_fu_535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln220_fu_540_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln210_fu_593_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln165_fu_597_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln7_fu_616_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_961_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal and_ln55_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln7_fu_616_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_3_fu_625_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_1_fu_636_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln39_fu_633_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_fu_645_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_5_fu_657_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln40_fu_651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_1_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln40_fu_681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln40_fu_673_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln39_fu_640_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln55_2_fu_765_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln61_1_fu_778_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_970_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal and_ln55_1_fu_770_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln61_1_fu_778_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_4_fu_787_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_3_fu_798_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln39_2_fu_795_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_1_fu_807_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_6_fu_819_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln40_2_fu_813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_3_fu_829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln40_1_fu_843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln40_2_fu_835_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln39_2_fu_802_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln55_3_fu_858_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln61_2_fu_868_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_978_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal and_ln55_2_fu_863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln61_2_fu_868_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_5_fu_877_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_4_fu_885_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln59_2_fu_775_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_2_fu_894_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_7_fu_906_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln40_4_fu_900_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_5_fu_916_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln40_2_fu_930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln40_4_fu_922_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln39_4_fu_889_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_961_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_fu_970_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_970_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_fu_978_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_978_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln221_fu_555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_961_ce : STD_LOGIC;
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component Gsm_LPC_Analysis_gsm_norm IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component Gsm_LPC_Analysis_gsm_div IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        num : IN STD_LOGIC_VECTOR (15 downto 0);
        denum : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component Gsm_LPC_Analysis_mac_muladd_16s_16s_15ns_31_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component Gsm_LPC_Analysis_Reflection_coefficients_ACF_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    ACF_U : component Gsm_LPC_Analysis_Reflection_coefficients_ACF_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ACF_address0,
        ce0 => ACF_ce0,
        we0 => ACF_we0,
        d0 => ACF_d0,
        q0 => ACF_q0);

    P_U : component Gsm_LPC_Analysis_Reflection_coefficients_ACF_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => P_address0,
        ce0 => P_ce0,
        we0 => P_we0,
        d0 => P_d0,
        q0 => P_q0);

    K_U : component Gsm_LPC_Analysis_Reflection_coefficients_ACF_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => K_address0,
        ce0 => K_ce0,
        we0 => K_we0,
        d0 => K_d0,
        q0 => K_q0);

    grp_gsm_div_fu_308 : component Gsm_LPC_Analysis_gsm_div
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_gsm_div_fu_308_ap_start,
        ap_done => grp_gsm_div_fu_308_ap_done,
        ap_idle => grp_gsm_div_fu_308_ap_idle,
        ap_ready => grp_gsm_div_fu_308_ap_ready,
        num => temp_2_reg_279,
        denum => P_load_reg_1141,
        ap_return => grp_gsm_div_fu_308_ap_return);

    mac_muladd_16s_16s_15ns_31_4_1_U79 : component Gsm_LPC_Analysis_mac_muladd_16s_16s_15ns_31_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 15,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => select_ln219_fu_546_p3,
        din1 => temp_1_reg_1125,
        din2 => grp_fu_961_p2,
        ce => grp_fu_961_ce,
        dout => grp_fu_961_p3);

    mac_muladd_16s_16s_15ns_31_4_1_U80 : component Gsm_LPC_Analysis_mac_muladd_16s_16s_15ns_31_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 15,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => K_q0,
        din1 => grp_fu_970_p1,
        din2 => grp_fu_970_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_970_p3);

    mac_muladd_16s_16s_15ns_31_4_1_U81 : component Gsm_LPC_Analysis_mac_muladd_16s_16s_15ns_31_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 15,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => P_q0,
        din1 => grp_fu_978_p1,
        din2 => grp_fu_978_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_978_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_gsm_div_fu_308_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_gsm_div_fu_308_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln208_fu_521_p2 = ap_const_lv1_0))) then 
                    grp_gsm_div_fu_308_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_gsm_div_fu_308_ap_ready = ap_const_logic_1)) then 
                    grp_gsm_div_fu_308_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_gsm_norm_fu_300_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_gsm_norm_fu_300_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln172_fu_328_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_gsm_norm_fu_300_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_gsm_norm_fu_300_ap_ready = ap_const_logic_1)) then 
                    grp_gsm_norm_fu_300_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_1_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln184_fu_352_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                i_1_fu_112 <= ap_const_lv4_1;
            elsif (((icmp_ln191_fu_392_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i_1_fu_112 <= add_ln191_fu_403_p2;
            end if; 
        end if;
    end process;

    i_2_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln191_fu_392_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i_2_fu_116 <= ap_const_lv4_0;
            elsif (((icmp_ln197_fu_422_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                i_2_fu_116 <= add_ln197_fu_428_p2;
            end if; 
        end if;
    end process;

    i_5_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln197_fu_422_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                i_5_fu_124 <= ap_const_lv4_1;
            elsif (((icmp_ln229_fu_699_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                i_5_fu_124 <= add_ln204_fu_721_p2;
            end if; 
        end if;
    end process;

    i_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln172_fu_328_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln172_fu_328_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
                i_fu_108 <= ap_const_lv4_0;
            elsif ((((icmp_ln174_fu_945_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((icmp_ln184_fu_352_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
                i_fu_108 <= grp_fu_319_p2;
            end if; 
        end if;
    end process;

    idx94_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln208_fu_521_p2 = ap_const_lv1_1))) then 
                idx94_fu_136 <= ap_const_lv4_0;
            elsif (((icmp_ln172_reg_1005 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state13_on_subcall_done) and (icmp_ln210_fu_581_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln208_reg_1148 = ap_const_lv1_1) and (icmp_ln204_reg_1111 = ap_const_lv1_1))) then 
                idx94_fu_136 <= add_ln210_fu_587_p2;
            end if; 
        end if;
    end process;

    idx_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln197_fu_422_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                idx_fu_120 <= ap_const_lv4_0;
            elsif (((icmp_ln229_fu_699_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                idx_fu_120 <= add_ln204_1_reg_1115;
            end if; 
        end if;
    end process;

    indvars_iv3_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln197_fu_422_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                indvars_iv3_fu_132 <= ap_const_lv4_8;
            elsif (((icmp_ln229_fu_699_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                indvars_iv3_fu_132 <= add_ln204_3_fu_732_p2;
            end if; 
        end if;
    end process;

    indvars_iv_fu_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln197_fu_422_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                indvars_iv_fu_128 <= ap_const_lv4_8;
            elsif (((icmp_ln229_fu_699_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                indvars_iv_fu_128 <= add_ln204_2_fu_726_p2;
            end if; 
        end if;
    end process;

    m_reg_289_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                m_reg_289 <= ap_const_lv4_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                m_reg_289 <= add_ln232_reg_1207;
            end if; 
        end if;
    end process;

    temp_2_reg_279_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                if ((tmp_4_fu_489_p3 = ap_const_lv1_0)) then 
                    temp_2_reg_279 <= P_q0;
                elsif ((tmp_4_fu_489_p3 = ap_const_lv1_1)) then 
                    temp_2_reg_279 <= zext_ln67_fu_517_p1;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                K_addr_1_reg_1202 <= zext_ln229_fu_705_p1(4 - 1 downto 0);
                add_ln232_reg_1207 <= add_ln232_fu_710_p2;
                    zext_ln229_reg_1197(3 downto 0) <= zext_ln229_fu_705_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                K_load_reg_1217 <= K_q0;
                P_load_1_reg_1229 <= P_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                L_ACF_load_reg_1000 <= L_ACF_q0;
                icmp_ln172_reg_1005 <= icmp_ln172_fu_328_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                P_load_reg_1141 <= P_q0;
                icmp_ln208_reg_1148 <= icmp_ln208_fu_521_p2;
                trunc_ln204_reg_1159 <= trunc_ln204_fu_527_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                add_ln204_1_reg_1115 <= add_ln204_1_fu_476_p2;
                icmp_ln204_reg_1111 <= icmp_ln204_fu_470_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                icmp_ln55_1_reg_1174 <= icmp_ln55_1_fu_566_p2;
                icmp_ln55_reg_1167 <= icmp_ln55_fu_560_p2;
                sext_ln59_reg_1179 <= sext_ln59_fu_571_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    sh_prom_cast_cast_cast_cast_reg_1009(31 downto 0) <= sh_prom_cast_cast_cast_cast_fu_348_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                temp_1_reg_1125 <= P_q0;
                    zext_ln204_reg_1120(3 downto 0) <= zext_ln204_fu_482_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    zext_ln184_reg_1017(3 downto 0) <= zext_ln184_fu_358_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                    zext_ln191_reg_1037(3 downto 0) <= zext_ln191_fu_398_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                    zext_ln197_reg_1057(3 downto 0) <= zext_ln197_fu_434_p1(3 downto 0);
            end if;
        end if;
    end process;
    sh_prom_cast_cast_cast_cast_reg_1009(63 downto 32) <= "00000000000000000000000000000000";
    zext_ln184_reg_1017(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln191_reg_1037(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln197_reg_1057(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln204_reg_1120(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln229_reg_1197(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln172_fu_328_p2, icmp_ln172_reg_1005, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, icmp_ln204_fu_470_p2, icmp_ln204_reg_1111, ap_CS_fsm_state10, icmp_ln208_reg_1148, ap_CS_fsm_state13, ap_CS_fsm_state17, grp_gsm_norm_fu_300_ap_done, icmp_ln184_fu_352_p2, icmp_ln191_fu_392_p2, icmp_ln197_fu_422_p2, icmp_ln210_fu_581_p2, icmp_ln229_fu_699_p2, ap_CS_fsm_state22, icmp_ln174_fu_945_p2, ap_block_state13_on_subcall_done, icmp_ln221_fu_555_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln172_fu_328_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((grp_gsm_norm_fu_300_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln184_fu_352_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln191_fu_392_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state8 => 
                if (((icmp_ln197_fu_422_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln204_fu_470_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((ap_const_boolean_0 = ap_block_state13_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state13) and ((icmp_ln172_reg_1005 = ap_const_lv1_1) or ((icmp_ln204_reg_1111 = ap_const_lv1_0) or (((icmp_ln221_fu_555_p2 = ap_const_lv1_1) and (icmp_ln208_reg_1148 = ap_const_lv1_0)) or ((icmp_ln210_fu_581_p2 = ap_const_lv1_1) and (icmp_ln208_reg_1148 = ap_const_lv1_1))))))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((icmp_ln172_reg_1005 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state13_on_subcall_done) and (icmp_ln210_fu_581_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln208_reg_1148 = ap_const_lv1_1) and (icmp_ln204_reg_1111 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                elsif (((icmp_ln221_fu_555_p2 = ap_const_lv1_0) and (icmp_ln172_reg_1005 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state13_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln208_reg_1148 = ap_const_lv1_0) and (icmp_ln204_reg_1111 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((icmp_ln229_fu_699_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state22 => 
                if (((icmp_ln174_fu_945_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    ACF_address0_assign_proc : process(zext_ln184_reg_1017, zext_ln191_fu_398_p1, ap_CS_fsm_state6, zext_ln197_fu_434_p1, ap_CS_fsm_state8, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ACF_address0 <= zext_ln197_fu_434_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ACF_address0 <= zext_ln191_fu_398_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ACF_address0 <= zext_ln184_reg_1017(4 - 1 downto 0);
        else 
            ACF_address0 <= "XXXX";
        end if; 
    end process;


    ACF_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ACF_ce0 <= ap_const_logic_1;
        else 
            ACF_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ACF_d0 <= shl_ln186_fu_373_p2(31 downto 16);

    ACF_we0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ACF_we0 <= ap_const_logic_1;
        else 
            ACF_we0 <= ap_const_logic_0;
        end if; 
    end process;


    K_address0_assign_proc : process(zext_ln191_reg_1037, zext_ln229_fu_705_p1, ap_CS_fsm_state17, K_addr_1_reg_1202, ap_CS_fsm_state21, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            K_address0 <= K_addr_1_reg_1202;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            K_address0 <= zext_ln229_fu_705_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            K_address0 <= zext_ln191_reg_1037(4 - 1 downto 0);
        else 
            K_address0 <= "XXXX";
        end if; 
    end process;


    K_ce0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state21, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            K_ce0 <= ap_const_logic_1;
        else 
            K_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    K_d0_assign_proc : process(ACF_q0, ap_CS_fsm_state21, ap_CS_fsm_state7, select_ln40_5_fu_936_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            K_d0 <= select_ln40_5_fu_936_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            K_d0 <= ACF_q0;
        else 
            K_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    K_we0_assign_proc : process(ap_CS_fsm_state21, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            K_we0 <= ap_const_logic_1;
        else 
            K_we0 <= ap_const_logic_0;
        end if; 
    end process;


    LARc_address0_assign_proc : process(icmp_ln172_reg_1005, icmp_ln204_reg_1111, zext_ln204_reg_1120, icmp_ln208_reg_1148, ap_CS_fsm_state13, zext_ln165_fu_602_p1, icmp_ln210_fu_581_p2, zext_ln174_fu_951_p1, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            LARc_address0 <= zext_ln174_fu_951_p1(3 - 1 downto 0);
        elsif (((icmp_ln172_reg_1005 = ap_const_lv1_0) and (icmp_ln210_fu_581_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln208_reg_1148 = ap_const_lv1_1) and (icmp_ln204_reg_1111 = ap_const_lv1_1))) then 
            LARc_address0 <= zext_ln165_fu_602_p1(3 - 1 downto 0);
        elsif (((icmp_ln172_reg_1005 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln208_reg_1148 = ap_const_lv1_0) and (icmp_ln204_reg_1111 = ap_const_lv1_1))) then 
            LARc_address0 <= zext_ln204_reg_1120(3 - 1 downto 0);
        else 
            LARc_address0 <= "XXX";
        end if; 
    end process;


    LARc_ce0_assign_proc : process(icmp_ln172_reg_1005, icmp_ln204_reg_1111, icmp_ln208_reg_1148, ap_CS_fsm_state13, icmp_ln210_fu_581_p2, ap_CS_fsm_state22, ap_block_state13_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or ((icmp_ln172_reg_1005 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state13_on_subcall_done) and (icmp_ln210_fu_581_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln208_reg_1148 = ap_const_lv1_1) and (icmp_ln204_reg_1111 = ap_const_lv1_1)) or ((icmp_ln172_reg_1005 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state13_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln208_reg_1148 = ap_const_lv1_0) and (icmp_ln204_reg_1111 = ap_const_lv1_1)))) then 
            LARc_ce0 <= ap_const_logic_1;
        else 
            LARc_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    LARc_d0_assign_proc : process(icmp_ln172_reg_1005, icmp_ln204_reg_1111, icmp_ln208_reg_1148, ap_CS_fsm_state13, icmp_ln210_fu_581_p2, ap_CS_fsm_state22, select_ln219_fu_546_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or ((icmp_ln172_reg_1005 = ap_const_lv1_0) and (icmp_ln210_fu_581_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln208_reg_1148 = ap_const_lv1_1) and (icmp_ln204_reg_1111 = ap_const_lv1_1)))) then 
            LARc_d0 <= ap_const_lv16_0;
        elsif (((icmp_ln172_reg_1005 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln208_reg_1148 = ap_const_lv1_0) and (icmp_ln204_reg_1111 = ap_const_lv1_1))) then 
            LARc_d0 <= select_ln219_fu_546_p3;
        else 
            LARc_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    LARc_we0_assign_proc : process(icmp_ln172_reg_1005, icmp_ln204_reg_1111, icmp_ln208_reg_1148, ap_CS_fsm_state13, icmp_ln210_fu_581_p2, ap_CS_fsm_state22, icmp_ln174_fu_945_p2, ap_block_state13_on_subcall_done)
    begin
        if ((((icmp_ln174_fu_945_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((icmp_ln172_reg_1005 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state13_on_subcall_done) and (icmp_ln210_fu_581_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln208_reg_1148 = ap_const_lv1_1) and (icmp_ln204_reg_1111 = ap_const_lv1_1)) or ((icmp_ln172_reg_1005 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state13_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln208_reg_1148 = ap_const_lv1_0) and (icmp_ln204_reg_1111 = ap_const_lv1_1)))) then 
            LARc_we0 <= ap_const_logic_1;
        else 
            LARc_we0 <= ap_const_logic_0;
        end if; 
    end process;


    L_ACF_address0_assign_proc : process(ap_CS_fsm_state1, zext_ln184_fu_358_p1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            L_ACF_address0 <= zext_ln184_fu_358_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            L_ACF_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        else 
            L_ACF_address0 <= "XXXX";
        end if; 
    end process;


    L_ACF_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            L_ACF_ce0 <= ap_const_logic_1;
        else 
            L_ACF_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    P_address0_assign_proc : process(zext_ln197_reg_1057, ap_CS_fsm_state10, ap_CS_fsm_state11, zext_ln229_reg_1197, ap_CS_fsm_state17, ap_CS_fsm_state21, ap_CS_fsm_state16, ap_CS_fsm_state9, zext_ln232_fu_716_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            P_address0 <= zext_ln229_reg_1197(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            P_address0 <= zext_ln232_fu_716_p1(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            P_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            P_address0 <= ap_const_lv64_1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            P_address0 <= zext_ln197_reg_1057(4 - 1 downto 0);
        else 
            P_address0 <= "XXXX";
        end if; 
    end process;


    P_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state17, ap_CS_fsm_state21, ap_CS_fsm_state16, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            P_ce0 <= ap_const_logic_1;
        else 
            P_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    P_d0_assign_proc : process(ACF_q0, ap_CS_fsm_state21, ap_CS_fsm_state16, ap_CS_fsm_state9, select_ln40_1_fu_687_p3, select_ln40_3_fu_849_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            P_d0 <= select_ln40_3_fu_849_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            P_d0 <= select_ln40_1_fu_687_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            P_d0 <= ACF_q0;
        else 
            P_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    P_we0_assign_proc : process(ap_CS_fsm_state21, ap_CS_fsm_state16, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            P_we0 <= ap_const_logic_1;
        else 
            P_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln165_fu_597_p2 <= std_logic_vector(unsigned(trunc_ln210_fu_593_p1) + unsigned(trunc_ln204_reg_1159));
    add_ln191_fu_403_p2 <= std_logic_vector(unsigned(i_1_fu_112) + unsigned(ap_const_lv4_1));
    add_ln197_fu_428_p2 <= std_logic_vector(unsigned(i_2_fu_116) + unsigned(ap_const_lv4_1));
    add_ln204_1_fu_476_p2 <= std_logic_vector(unsigned(idx_fu_120) + unsigned(ap_const_lv4_1));
    add_ln204_2_fu_726_p2 <= std_logic_vector(unsigned(indvars_iv_fu_128) + unsigned(ap_const_lv4_F));
    add_ln204_3_fu_732_p2 <= std_logic_vector(unsigned(indvars_iv3_fu_132) + unsigned(ap_const_lv4_F));
    add_ln204_fu_721_p2 <= std_logic_vector(unsigned(i_5_fu_124) + unsigned(ap_const_lv4_1));
    add_ln210_fu_587_p2 <= std_logic_vector(unsigned(idx94_fu_136) + unsigned(ap_const_lv4_1));
    add_ln232_fu_710_p2 <= std_logic_vector(unsigned(m_reg_289) + unsigned(ap_const_lv4_1));
    add_ln39_2_fu_802_p2 <= std_logic_vector(signed(temp_4_fu_787_p3) + signed(P_load_1_reg_1229));
    add_ln39_4_fu_889_p2 <= std_logic_vector(signed(temp_5_fu_877_p3) + signed(K_load_reg_1217));
    add_ln39_fu_640_p2 <= std_logic_vector(signed(temp_3_fu_625_p3) + signed(P_load_reg_1141));
    and_ln55_1_fu_770_p2 <= (icmp_ln55_reg_1167 and icmp_ln55_2_fu_765_p2);
    and_ln55_2_fu_863_p2 <= (icmp_ln55_reg_1167 and icmp_ln55_3_fu_858_p2);
    and_ln55_fu_612_p2 <= (icmp_ln55_reg_1167 and icmp_ln55_1_reg_1174);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(ap_block_state13_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state13_on_subcall_done)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_gsm_norm_fu_300_ap_done)
    begin
        if ((grp_gsm_norm_fu_300_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state13_on_subcall_done_assign_proc : process(grp_gsm_div_fu_308_ap_done, ap_predicate_op131_call_state13)
    begin
                ap_block_state13_on_subcall_done <= ((ap_predicate_op131_call_state13 = ap_const_boolean_1) and (grp_gsm_div_fu_308_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln172_reg_1005, icmp_ln204_reg_1111, icmp_ln208_reg_1148, ap_CS_fsm_state13, icmp_ln210_fu_581_p2, ap_block_state13_on_subcall_done, icmp_ln221_fu_555_p2)
    begin
        if ((((ap_const_boolean_0 = ap_block_state13_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state13) and ((icmp_ln172_reg_1005 = ap_const_lv1_1) or ((icmp_ln204_reg_1111 = ap_const_lv1_0) or (((icmp_ln221_fu_555_p2 = ap_const_lv1_1) and (icmp_ln208_reg_1148 = ap_const_lv1_0)) or ((icmp_ln210_fu_581_p2 = ap_const_lv1_1) and (icmp_ln208_reg_1148 = ap_const_lv1_1)))))) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op131_call_state13_assign_proc : process(icmp_ln172_reg_1005, icmp_ln204_reg_1111, icmp_ln208_reg_1148)
    begin
                ap_predicate_op131_call_state13 <= ((icmp_ln172_reg_1005 = ap_const_lv1_0) and (icmp_ln208_reg_1148 = ap_const_lv1_0) and (icmp_ln204_reg_1111 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(icmp_ln172_reg_1005, icmp_ln204_reg_1111, icmp_ln208_reg_1148, ap_CS_fsm_state13, icmp_ln210_fu_581_p2, ap_block_state13_on_subcall_done, icmp_ln221_fu_555_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_state13_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state13) and ((icmp_ln172_reg_1005 = ap_const_lv1_1) or ((icmp_ln204_reg_1111 = ap_const_lv1_0) or (((icmp_ln221_fu_555_p2 = ap_const_lv1_1) and (icmp_ln208_reg_1148 = ap_const_lv1_0)) or ((icmp_ln210_fu_581_p2 = ap_const_lv1_1) and (icmp_ln208_reg_1148 = ap_const_lv1_1))))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_319_p2 <= std_logic_vector(unsigned(i_fu_108) + unsigned(ap_const_lv4_1));

    grp_fu_961_ce_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state16, ap_block_state13_on_subcall_done, ap_CS_fsm_state15, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state16) or ((ap_const_boolean_0 = ap_block_state13_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state13)))) then 
            grp_fu_961_ce <= ap_const_logic_1;
        else 
            grp_fu_961_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_961_p2 <= ap_const_lv31_4000(15 - 1 downto 0);
    grp_fu_970_p1 <= sext_ln59_reg_1179(16 - 1 downto 0);
    grp_fu_970_p2 <= ap_const_lv31_4000(15 - 1 downto 0);
    grp_fu_978_p1 <= sext_ln59_reg_1179(16 - 1 downto 0);
    grp_fu_978_p2 <= ap_const_lv31_4000(15 - 1 downto 0);
    grp_gsm_div_fu_308_ap_start <= grp_gsm_div_fu_308_ap_start_reg;
    grp_gsm_norm_fu_300_ap_done <= grp_gsm_norm_fu_323_p_done;
    grp_gsm_norm_fu_300_ap_ready <= grp_gsm_norm_fu_323_p_ready;
    grp_gsm_norm_fu_323_p_din1 <= L_ACF_load_reg_1000;
    grp_gsm_norm_fu_323_p_start <= grp_gsm_norm_fu_300_ap_start_reg;
    icmp_ln172_fu_328_p2 <= "1" when (L_ACF_q0 = ap_const_lv64_0) else "0";
    icmp_ln174_fu_945_p2 <= "1" when (i_fu_108 = ap_const_lv4_8) else "0";
    icmp_ln184_fu_352_p2 <= "1" when (i_fu_108 = ap_const_lv4_9) else "0";
    icmp_ln191_fu_392_p2 <= "1" when (i_1_fu_112 = ap_const_lv4_8) else "0";
    icmp_ln197_fu_422_p2 <= "1" when (i_2_fu_116 = ap_const_lv4_9) else "0";
    icmp_ln204_fu_470_p2 <= "1" when (unsigned(i_5_fu_124) < unsigned(ap_const_lv4_9)) else "0";
    icmp_ln208_fu_521_p0 <= P_q0;
    icmp_ln208_fu_521_p2 <= "1" when (signed(icmp_ln208_fu_521_p0) < signed(temp_2_reg_279)) else "0";
    icmp_ln210_fu_581_p2 <= "1" when (idx94_fu_136 = indvars_iv3_fu_132) else "0";
    icmp_ln219_fu_535_p2 <= "1" when (signed(temp_1_reg_1125) > signed(ap_const_lv16_0)) else "0";
    icmp_ln221_fu_555_p2 <= "1" when (i_5_fu_124 = ap_const_lv4_8) else "0";
    icmp_ln229_fu_699_p2 <= "1" when (m_reg_289 = indvars_iv_fu_128) else "0";
    icmp_ln40_1_fu_667_p2 <= "1" when (tmp_5_fu_657_p4 = ap_const_lv2_1) else "0";
    icmp_ln40_2_fu_813_p2 <= "1" when (signed(sum_1_fu_807_p2) < signed(ap_const_lv17_18000)) else "0";
    icmp_ln40_3_fu_829_p2 <= "1" when (tmp_6_fu_819_p4 = ap_const_lv2_1) else "0";
    icmp_ln40_4_fu_900_p2 <= "1" when (signed(sum_2_fu_894_p2) < signed(ap_const_lv17_18000)) else "0";
    icmp_ln40_5_fu_916_p2 <= "1" when (tmp_7_fu_906_p4 = ap_const_lv2_1) else "0";
    icmp_ln40_fu_651_p2 <= "1" when (signed(sum_fu_645_p2) < signed(ap_const_lv17_18000)) else "0";
    icmp_ln55_1_fu_566_p2 <= "1" when (temp_1_reg_1125 = ap_const_lv16_8000) else "0";
    icmp_ln55_2_fu_765_p2 <= "1" when (K_load_reg_1217 = ap_const_lv16_8000) else "0";
    icmp_ln55_3_fu_858_p2 <= "1" when (P_load_1_reg_1229 = ap_const_lv16_8000) else "0";
    icmp_ln55_fu_560_p2 <= "1" when (select_ln219_fu_546_p3 = ap_const_lv16_8000) else "0";
    icmp_ln67_fu_497_p0 <= P_q0;
    icmp_ln67_fu_497_p2 <= "1" when (icmp_ln67_fu_497_p0 = ap_const_lv16_8000) else "0";
    or_ln40_1_fu_843_p2 <= (icmp_ln40_3_fu_829_p2 or icmp_ln40_2_fu_813_p2);
    or_ln40_2_fu_930_p2 <= (icmp_ln40_5_fu_916_p2 or icmp_ln40_4_fu_900_p2);
    or_ln40_fu_681_p2 <= (icmp_ln40_fu_651_p2 or icmp_ln40_1_fu_667_p2);
    select_ln219_fu_546_p3 <= 
        sub_ln220_fu_540_p2 when (icmp_ln219_fu_535_p2(0) = '1') else 
        grp_gsm_div_fu_308_ap_return;
    select_ln40_1_fu_687_p3 <= 
        select_ln40_fu_673_p3 when (or_ln40_fu_681_p2(0) = '1') else 
        add_ln39_fu_640_p2;
    select_ln40_2_fu_835_p3 <= 
        ap_const_lv16_8000 when (icmp_ln40_2_fu_813_p2(0) = '1') else 
        ap_const_lv16_7FFF;
    select_ln40_3_fu_849_p3 <= 
        select_ln40_2_fu_835_p3 when (or_ln40_1_fu_843_p2(0) = '1') else 
        add_ln39_2_fu_802_p2;
    select_ln40_4_fu_922_p3 <= 
        ap_const_lv16_8000 when (icmp_ln40_4_fu_900_p2(0) = '1') else 
        ap_const_lv16_7FFF;
    select_ln40_5_fu_936_p3 <= 
        select_ln40_4_fu_922_p3 when (or_ln40_2_fu_930_p2(0) = '1') else 
        add_ln39_4_fu_889_p2;
    select_ln40_fu_673_p3 <= 
        ap_const_lv16_8000 when (icmp_ln40_fu_651_p2(0) = '1') else 
        ap_const_lv16_7FFF;
    select_ln67_fu_509_p3 <= 
        ap_const_lv15_7FFF when (icmp_ln67_fu_497_p2(0) = '1') else 
        sub_ln67_fu_503_p2;
        sext_ln39_1_fu_636_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_3_fu_625_p3),17));

        sext_ln39_2_fu_795_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(P_load_1_reg_1229),17));

        sext_ln39_3_fu_798_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_4_fu_787_p3),17));

        sext_ln39_4_fu_885_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_5_fu_877_p3),17));

        sext_ln39_fu_633_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(P_load_reg_1141),17));

        sext_ln59_2_fu_775_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(K_load_reg_1217),17));

        sext_ln59_fu_571_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln219_fu_546_p3),31));

    sh_prom_cast_cast_cast_cast_fu_348_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_prom_cast_cast_cast_fu_344_p1),64));
        sh_prom_cast_cast_cast_fu_344_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_gsm_norm_fu_323_p_dout0),32));

    shl_ln186_fu_373_p2 <= std_logic_vector(shift_left(unsigned(L_ACF_q0),to_integer(unsigned('0' & sh_prom_cast_cast_cast_cast_reg_1009(31-1 downto 0)))));
    sub_ln220_fu_540_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(grp_gsm_div_fu_308_ap_return));
    sub_ln67_fu_503_p2 <= std_logic_vector(unsigned(ap_const_lv15_0) - unsigned(trunc_ln166_fu_485_p1));
    sum_1_fu_807_p2 <= std_logic_vector(signed(sext_ln39_3_fu_798_p1) + signed(sext_ln39_2_fu_795_p1));
    sum_2_fu_894_p2 <= std_logic_vector(signed(sext_ln39_4_fu_885_p1) + signed(sext_ln59_2_fu_775_p1));
    sum_fu_645_p2 <= std_logic_vector(signed(sext_ln39_1_fu_636_p1) + signed(sext_ln39_fu_633_p1));
    temp_3_fu_625_p3 <= 
        ap_const_lv16_7FFF when (and_ln55_fu_612_p2(0) = '1') else 
        trunc_ln7_fu_616_p4;
    temp_4_fu_787_p3 <= 
        ap_const_lv16_7FFF when (and_ln55_1_fu_770_p2(0) = '1') else 
        trunc_ln61_1_fu_778_p4;
    temp_5_fu_877_p3 <= 
        ap_const_lv16_7FFF when (and_ln55_2_fu_863_p2(0) = '1') else 
        trunc_ln61_2_fu_868_p4;
    tmp_4_fu_489_p1 <= P_q0;
    tmp_4_fu_489_p3 <= tmp_4_fu_489_p1(15 downto 15);
    tmp_5_fu_657_p4 <= sum_fu_645_p2(16 downto 15);
    tmp_6_fu_819_p4 <= sum_1_fu_807_p2(16 downto 15);
    tmp_7_fu_906_p4 <= sum_2_fu_894_p2(16 downto 15);
    trunc_ln166_fu_485_p0 <= P_q0;
    trunc_ln166_fu_485_p1 <= trunc_ln166_fu_485_p0(15 - 1 downto 0);
    trunc_ln204_fu_527_p1 <= idx_fu_120(3 - 1 downto 0);
    trunc_ln210_fu_593_p1 <= idx94_fu_136(3 - 1 downto 0);
    trunc_ln61_1_fu_778_p1 <= grp_fu_970_p3;
    trunc_ln61_1_fu_778_p4 <= trunc_ln61_1_fu_778_p1(30 downto 15);
    trunc_ln61_2_fu_868_p1 <= grp_fu_978_p3;
    trunc_ln61_2_fu_868_p4 <= trunc_ln61_2_fu_868_p1(30 downto 15);
    trunc_ln7_fu_616_p1 <= grp_fu_961_p3;
    trunc_ln7_fu_616_p4 <= trunc_ln7_fu_616_p1(30 downto 15);
    zext_ln165_fu_602_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln165_fu_597_p2),64));
    zext_ln174_fu_951_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_108),64));
    zext_ln184_fu_358_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_108),64));
    zext_ln191_fu_398_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_fu_112),64));
    zext_ln197_fu_434_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_2_fu_116),64));
    zext_ln204_fu_482_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_fu_120),64));
    zext_ln229_fu_705_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_reg_289),64));
    zext_ln232_fu_716_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln232_fu_710_p2),64));
    zext_ln67_fu_517_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln67_fu_509_p3),16));
end behav;
