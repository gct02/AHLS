-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Gsm_LPC_Analysis_Reflection_coefficients is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    L_ACF_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    L_ACF_ce0 : OUT STD_LOGIC;
    L_ACF_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    LARc_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    LARc_ce0 : OUT STD_LOGIC;
    LARc_we0 : OUT STD_LOGIC;
    LARc_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    grp_gsm_add_fu_310_p_din1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    grp_gsm_add_fu_310_p_din2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    grp_gsm_add_fu_310_p_dout0 : IN STD_LOGIC_VECTOR (15 downto 0);
    grp_gsm_add_fu_310_p_ready : IN STD_LOGIC;
    grp_gsm_mult_r_fu_300_p_din1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    grp_gsm_mult_r_fu_300_p_din2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    grp_gsm_mult_r_fu_300_p_dout0 : IN STD_LOGIC_VECTOR (15 downto 0);
    grp_gsm_mult_r_fu_300_p_start : OUT STD_LOGIC;
    grp_gsm_mult_r_fu_300_p_ready : IN STD_LOGIC;
    grp_gsm_mult_r_fu_300_p_done : IN STD_LOGIC;
    grp_gsm_mult_r_fu_300_p_idle : IN STD_LOGIC;
    grp_gsm_norm_fu_305_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_gsm_norm_fu_305_p_dout0 : IN STD_LOGIC_VECTOR (5 downto 0);
    grp_gsm_norm_fu_305_p_start : OUT STD_LOGIC;
    grp_gsm_norm_fu_305_p_ready : IN STD_LOGIC;
    grp_gsm_norm_fu_305_p_done : IN STD_LOGIC;
    grp_gsm_norm_fu_305_p_idle : IN STD_LOGIC;
    temp_37_gsm_abs_fu_120_p_din1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    temp_37_gsm_abs_fu_120_p_dout0 : IN STD_LOGIC_VECTOR (15 downto 0);
    temp_37_gsm_abs_fu_120_p_ready : IN STD_LOGIC;
    tmp_6_gsm_add_fu_315_p_din1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    tmp_6_gsm_add_fu_315_p_din2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    tmp_6_gsm_add_fu_315_p_dout0 : IN STD_LOGIC_VECTOR (15 downto 0);
    tmp_6_gsm_add_fu_315_p_ready : IN STD_LOGIC );
end;


architecture behav of Gsm_LPC_Analysis_Reflection_coefficients is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal L_ACF_load_reg_662 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln172_fu_340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln172_reg_667 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_prom_cast_cast_cast_cast_fu_360_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sh_prom_cast_cast_cast_cast_reg_671 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal zext_ln184_fu_370_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln184_reg_679 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal zext_ln191_fu_410_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln191_reg_699 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal zext_ln197_fu_446_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_reg_719 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal icmp_ln204_fu_482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln204_reg_774 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal add_ln204_1_fu_488_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln204_1_reg_778 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln204_fu_494_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln204_reg_783 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal P_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_1_reg_788 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_2_reg_794 : STD_LOGIC_VECTOR (15 downto 0);
    signal P_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal P_load_reg_799 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln208_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln208_reg_805 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln204_fu_503_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln204_reg_816 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln219_fu_522_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln219_reg_821 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal zext_ln229_fu_580_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln229_reg_836 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal K_addr_1_reg_841 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln232_fu_585_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln232_reg_846 : STD_LOGIC_VECTOR (3 downto 0);
    signal K_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal K_load_reg_856 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal P_load_1_reg_862 : STD_LOGIC_VECTOR (15 downto 0);
    signal ACF_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ACF_ce0 : STD_LOGIC;
    signal ACF_we0 : STD_LOGIC;
    signal ACF_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal ACF_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal P_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal P_ce0 : STD_LOGIC;
    signal P_we0 : STD_LOGIC;
    signal P_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal P_ce1 : STD_LOGIC;
    signal P_we1 : STD_LOGIC;
    signal K_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal K_ce0 : STD_LOGIC;
    signal K_we0 : STD_LOGIC;
    signal K_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gsm_norm_fu_276_ap_done : STD_LOGIC;
    signal grp_gsm_norm_fu_276_ap_ready : STD_LOGIC;
    signal grp_gsm_div_fu_290_ap_start : STD_LOGIC;
    signal grp_gsm_div_fu_290_ap_done : STD_LOGIC;
    signal grp_gsm_div_fu_290_ap_idle : STD_LOGIC;
    signal grp_gsm_div_fu_290_ap_ready : STD_LOGIC;
    signal grp_gsm_div_fu_290_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gsm_mult_r_fu_298_ap_done : STD_LOGIC;
    signal grp_gsm_mult_r_fu_298_ap_ready : STD_LOGIC;
    signal grp_gsm_mult_r_fu_298_a : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gsm_mult_r_fu_305_ap_start : STD_LOGIC;
    signal grp_gsm_mult_r_fu_305_ap_done : STD_LOGIC;
    signal grp_gsm_mult_r_fu_305_ap_idle : STD_LOGIC;
    signal grp_gsm_mult_r_fu_305_ap_ready : STD_LOGIC;
    signal grp_gsm_mult_r_fu_305_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gsm_add_fu_312_a : STD_LOGIC_VECTOR (15 downto 0);
    signal m_reg_265 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_block_state16_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_gsm_norm_fu_276_ap_start_reg : STD_LOGIC := '0';
    signal grp_gsm_div_fu_290_ap_start_reg : STD_LOGIC := '0';
    signal grp_gsm_mult_r_fu_298_ap_start_reg : STD_LOGIC := '0';
    signal ap_predicate_op118_call_state12 : BOOLEAN;
    signal ap_block_state12_on_subcall_done : BOOLEAN;
    signal icmp_ln221_fu_532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_gsm_mult_r_fu_305_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln184_fu_364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln191_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln197_fu_434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal zext_ln165_fu_561_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln210_fu_540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln229_fu_574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln232_fu_591_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln174_fu_638_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal icmp_ln174_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_90 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal grp_fu_331_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_1_fu_94 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal add_ln191_fu_415_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_2_fu_98 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal add_ln197_fu_440_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal idx_fu_102 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal i_5_fu_106 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal add_ln204_fu_596_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvars_iv_fu_110 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal add_ln204_2_fu_601_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvars_iv3_fu_114 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal add_ln204_3_fu_607_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal idx47_fu_118 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal add_ln210_fu_546_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sh_prom_cast_cast_cast_fu_356_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln186_fu_385_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln219_fu_511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln220_fu_516_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln210_fu_552_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln165_fu_556_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component Gsm_LPC_Analysis_gsm_norm IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component Gsm_LPC_Analysis_gsm_abs IS
    port (
        ap_ready : OUT STD_LOGIC;
        a : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component Gsm_LPC_Analysis_gsm_div IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        num : IN STD_LOGIC_VECTOR (15 downto 0);
        denum : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component Gsm_LPC_Analysis_gsm_mult_r IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a : IN STD_LOGIC_VECTOR (15 downto 0);
        b : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component Gsm_LPC_Analysis_gsm_add IS
    port (
        ap_ready : OUT STD_LOGIC;
        a : IN STD_LOGIC_VECTOR (15 downto 0);
        b : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component Gsm_LPC_Analysis_Reflection_coefficients_ACF_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component Gsm_LPC_Analysis_Reflection_coefficients_P_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (15 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    ACF_U : component Gsm_LPC_Analysis_Reflection_coefficients_ACF_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ACF_address0,
        ce0 => ACF_ce0,
        we0 => ACF_we0,
        d0 => ACF_d0,
        q0 => ACF_q0);

    P_U : component Gsm_LPC_Analysis_Reflection_coefficients_P_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => P_address0,
        ce0 => P_ce0,
        we0 => P_we0,
        d0 => ACF_q0,
        q0 => P_q0,
        address1 => P_address1,
        ce1 => P_ce1,
        we1 => P_we1,
        d1 => grp_gsm_add_fu_310_p_dout0,
        q1 => P_q1);

    K_U : component Gsm_LPC_Analysis_Reflection_coefficients_ACF_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => K_address0,
        ce0 => K_ce0,
        we0 => K_we0,
        d0 => K_d0,
        q0 => K_q0);

    grp_gsm_div_fu_290 : component Gsm_LPC_Analysis_gsm_div
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_gsm_div_fu_290_ap_start,
        ap_done => grp_gsm_div_fu_290_ap_done,
        ap_idle => grp_gsm_div_fu_290_ap_idle,
        ap_ready => grp_gsm_div_fu_290_ap_ready,
        num => temp_2_reg_794,
        denum => P_load_reg_799,
        ap_return => grp_gsm_div_fu_290_ap_return);

    grp_gsm_mult_r_fu_305 : component Gsm_LPC_Analysis_gsm_mult_r
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_gsm_mult_r_fu_305_ap_start,
        ap_done => grp_gsm_mult_r_fu_305_ap_done,
        ap_idle => grp_gsm_mult_r_fu_305_ap_idle,
        ap_ready => grp_gsm_mult_r_fu_305_ap_ready,
        a => P_load_1_reg_862,
        b => select_ln219_reg_821,
        ap_return => grp_gsm_mult_r_fu_305_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_gsm_div_fu_290_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_gsm_div_fu_290_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln208_fu_497_p2 = ap_const_lv1_0))) then 
                    grp_gsm_div_fu_290_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_gsm_div_fu_290_ap_ready = ap_const_logic_1)) then 
                    grp_gsm_div_fu_290_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_gsm_mult_r_fu_298_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_gsm_mult_r_fu_298_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state15) or ((icmp_ln204_reg_774 = ap_const_lv1_1) and (icmp_ln172_reg_667 = ap_const_lv1_0) and (icmp_ln221_fu_532_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln208_reg_805 = ap_const_lv1_0)))) then 
                    grp_gsm_mult_r_fu_298_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_gsm_mult_r_fu_298_ap_ready = ap_const_logic_1)) then 
                    grp_gsm_mult_r_fu_298_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_gsm_mult_r_fu_305_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_gsm_mult_r_fu_305_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                    grp_gsm_mult_r_fu_305_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_gsm_mult_r_fu_305_ap_ready = ap_const_logic_1)) then 
                    grp_gsm_mult_r_fu_305_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_gsm_norm_fu_276_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_gsm_norm_fu_276_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln172_fu_340_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_gsm_norm_fu_276_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_gsm_norm_fu_276_ap_ready = ap_const_logic_1)) then 
                    grp_gsm_norm_fu_276_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_1_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln184_fu_364_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                i_1_fu_94 <= ap_const_lv4_1;
            elsif (((icmp_ln191_fu_404_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i_1_fu_94 <= add_ln191_fu_415_p2;
            end if; 
        end if;
    end process;

    i_2_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln191_fu_404_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i_2_fu_98 <= ap_const_lv4_0;
            elsif (((icmp_ln197_fu_434_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                i_2_fu_98 <= add_ln197_fu_440_p2;
            end if; 
        end if;
    end process;

    i_5_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln197_fu_434_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                i_5_fu_106 <= ap_const_lv4_1;
            elsif (((icmp_ln229_fu_574_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                i_5_fu_106 <= add_ln204_fu_596_p2;
            end if; 
        end if;
    end process;

    i_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln172_fu_340_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln172_fu_340_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
                i_fu_90 <= ap_const_lv4_0;
            elsif ((((icmp_ln174_fu_632_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((icmp_ln184_fu_364_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
                i_fu_90 <= grp_fu_331_p2;
            end if; 
        end if;
    end process;

    idx47_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln208_fu_497_p2 = ap_const_lv1_1))) then 
                idx47_fu_118 <= ap_const_lv4_0;
            elsif (((icmp_ln204_reg_774 = ap_const_lv1_1) and (icmp_ln172_reg_667 = ap_const_lv1_0) and (icmp_ln210_fu_540_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln208_reg_805 = ap_const_lv1_1))) then 
                idx47_fu_118 <= add_ln210_fu_546_p2;
            end if; 
        end if;
    end process;

    idx_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln197_fu_434_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                idx_fu_102 <= ap_const_lv4_0;
            elsif (((icmp_ln229_fu_574_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                idx_fu_102 <= add_ln204_1_reg_778;
            end if; 
        end if;
    end process;

    indvars_iv3_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln197_fu_434_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                indvars_iv3_fu_114 <= ap_const_lv4_8;
            elsif (((icmp_ln229_fu_574_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                indvars_iv3_fu_114 <= add_ln204_3_fu_607_p2;
            end if; 
        end if;
    end process;

    indvars_iv_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln197_fu_434_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                indvars_iv_fu_110 <= ap_const_lv4_8;
            elsif (((icmp_ln229_fu_574_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                indvars_iv_fu_110 <= add_ln204_2_fu_601_p2;
            end if; 
        end if;
    end process;

    m_reg_265_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_gsm_mult_r_fu_298_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                m_reg_265 <= ap_const_lv4_1;
            elsif (((ap_const_boolean_0 = ap_block_state16_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                m_reg_265 <= add_ln232_reg_846;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                K_addr_1_reg_841 <= zext_ln229_fu_580_p1(4 - 1 downto 0);
                add_ln232_reg_846 <= add_ln232_fu_585_p2;
                    zext_ln229_reg_836(3 downto 0) <= zext_ln229_fu_580_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                K_load_reg_856 <= K_q0;
                P_load_1_reg_862 <= P_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                L_ACF_load_reg_662 <= L_ACF_q0;
                icmp_ln172_reg_667 <= icmp_ln172_fu_340_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                P_load_reg_799 <= P_q0;
                icmp_ln208_reg_805 <= icmp_ln208_fu_497_p2;
                temp_1_reg_788 <= P_q1;
                temp_2_reg_794 <= temp_37_gsm_abs_fu_120_p_dout0;
                trunc_ln204_reg_816 <= trunc_ln204_fu_503_p1;
                    zext_ln204_reg_783(3 downto 0) <= zext_ln204_fu_494_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                add_ln204_1_reg_778 <= add_ln204_1_fu_488_p2;
                icmp_ln204_reg_774 <= icmp_ln204_fu_482_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                select_ln219_reg_821 <= select_ln219_fu_522_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    sh_prom_cast_cast_cast_cast_reg_671(31 downto 0) <= sh_prom_cast_cast_cast_cast_fu_360_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    zext_ln184_reg_679(3 downto 0) <= zext_ln184_fu_370_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                    zext_ln191_reg_699(3 downto 0) <= zext_ln191_fu_410_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                    zext_ln197_reg_719(3 downto 0) <= zext_ln197_fu_446_p1(3 downto 0);
            end if;
        end if;
    end process;
    sh_prom_cast_cast_cast_cast_reg_671(63 downto 32) <= "00000000000000000000000000000000";
    zext_ln184_reg_679(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln191_reg_699(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln197_reg_719(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln204_reg_783(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln229_reg_836(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln172_fu_340_p2, icmp_ln172_reg_667, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, icmp_ln204_fu_482_p2, icmp_ln204_reg_774, ap_CS_fsm_state10, icmp_ln208_reg_805, ap_CS_fsm_state12, ap_CS_fsm_state14, grp_gsm_norm_fu_276_ap_done, grp_gsm_mult_r_fu_298_ap_done, ap_CS_fsm_state16, ap_block_state16_on_subcall_done, ap_CS_fsm_state13, ap_block_state12_on_subcall_done, icmp_ln221_fu_532_p2, icmp_ln184_fu_364_p2, icmp_ln191_fu_404_p2, icmp_ln197_fu_434_p2, icmp_ln210_fu_540_p2, icmp_ln229_fu_574_p2, ap_CS_fsm_state17, icmp_ln174_fu_632_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln172_fu_340_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_gsm_norm_fu_276_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln184_fu_364_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln191_fu_404_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state8 => 
                if (((icmp_ln197_fu_434_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state10 => 
                if (((icmp_ln204_fu_482_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12) and ((icmp_ln172_reg_667 = ap_const_lv1_1) or ((icmp_ln204_reg_774 = ap_const_lv1_0) or (((icmp_ln221_fu_532_p2 = ap_const_lv1_1) and (icmp_ln208_reg_805 = ap_const_lv1_0)) or ((icmp_ln210_fu_540_p2 = ap_const_lv1_1) and (icmp_ln208_reg_805 = ap_const_lv1_1))))))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((icmp_ln204_reg_774 = ap_const_lv1_1) and (icmp_ln172_reg_667 = ap_const_lv1_0) and (icmp_ln210_fu_540_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln208_reg_805 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                elsif (((icmp_ln204_reg_774 = ap_const_lv1_1) and (icmp_ln172_reg_667 = ap_const_lv1_0) and (icmp_ln221_fu_532_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln208_reg_805 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (((grp_gsm_mult_r_fu_298_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if (((icmp_ln229_fu_574_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((ap_const_boolean_0 = ap_block_state16_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                if (((icmp_ln174_fu_632_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;

    ACF_address0_assign_proc : process(zext_ln184_reg_679, zext_ln191_fu_410_p1, ap_CS_fsm_state6, zext_ln197_fu_446_p1, ap_CS_fsm_state8, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ACF_address0 <= zext_ln197_fu_446_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ACF_address0 <= zext_ln191_fu_410_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ACF_address0 <= zext_ln184_reg_679(4 - 1 downto 0);
        else 
            ACF_address0 <= "XXXX";
        end if; 
    end process;


    ACF_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ACF_ce0 <= ap_const_logic_1;
        else 
            ACF_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ACF_d0 <= shl_ln186_fu_385_p2(31 downto 16);

    ACF_we0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ACF_we0 <= ap_const_logic_1;
        else 
            ACF_we0 <= ap_const_logic_0;
        end if; 
    end process;


    K_address0_assign_proc : process(zext_ln191_reg_699, zext_ln229_fu_580_p1, ap_CS_fsm_state14, K_addr_1_reg_841, ap_CS_fsm_state16, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            K_address0 <= K_addr_1_reg_841;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            K_address0 <= zext_ln229_fu_580_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            K_address0 <= zext_ln191_reg_699(4 - 1 downto 0);
        else 
            K_address0 <= "XXXX";
        end if; 
    end process;


    K_ce0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state16, ap_block_state16_on_subcall_done, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_boolean_0 = ap_block_state16_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            K_ce0 <= ap_const_logic_1;
        else 
            K_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    K_d0_assign_proc : process(ACF_q0, ap_CS_fsm_state16, ap_CS_fsm_state7, tmp_6_gsm_add_fu_315_p_dout0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            K_d0 <= tmp_6_gsm_add_fu_315_p_dout0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            K_d0 <= ACF_q0;
        else 
            K_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    K_we0_assign_proc : process(ap_CS_fsm_state16, ap_block_state16_on_subcall_done, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_const_boolean_0 = ap_block_state16_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            K_we0 <= ap_const_logic_1;
        else 
            K_we0 <= ap_const_logic_0;
        end if; 
    end process;


    LARc_address0_assign_proc : process(icmp_ln172_reg_667, icmp_ln204_reg_774, zext_ln204_reg_783, icmp_ln208_reg_805, ap_CS_fsm_state12, zext_ln165_fu_561_p1, icmp_ln210_fu_540_p2, zext_ln174_fu_638_p1, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            LARc_address0 <= zext_ln174_fu_638_p1(3 - 1 downto 0);
        elsif (((icmp_ln204_reg_774 = ap_const_lv1_1) and (icmp_ln172_reg_667 = ap_const_lv1_0) and (icmp_ln210_fu_540_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln208_reg_805 = ap_const_lv1_1))) then 
            LARc_address0 <= zext_ln165_fu_561_p1(3 - 1 downto 0);
        elsif (((icmp_ln204_reg_774 = ap_const_lv1_1) and (icmp_ln172_reg_667 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln208_reg_805 = ap_const_lv1_0))) then 
            LARc_address0 <= zext_ln204_reg_783(3 - 1 downto 0);
        else 
            LARc_address0 <= "XXX";
        end if; 
    end process;


    LARc_ce0_assign_proc : process(icmp_ln172_reg_667, icmp_ln204_reg_774, icmp_ln208_reg_805, ap_CS_fsm_state12, ap_block_state12_on_subcall_done, icmp_ln210_fu_540_p2, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((icmp_ln204_reg_774 = ap_const_lv1_1) and (icmp_ln172_reg_667 = ap_const_lv1_0) and (icmp_ln210_fu_540_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln208_reg_805 = ap_const_lv1_1)) or ((icmp_ln204_reg_774 = ap_const_lv1_1) and (icmp_ln172_reg_667 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln208_reg_805 = ap_const_lv1_0)))) then 
            LARc_ce0 <= ap_const_logic_1;
        else 
            LARc_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    LARc_d0_assign_proc : process(icmp_ln172_reg_667, icmp_ln204_reg_774, icmp_ln208_reg_805, select_ln219_fu_522_p3, ap_CS_fsm_state12, icmp_ln210_fu_540_p2, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((icmp_ln204_reg_774 = ap_const_lv1_1) and (icmp_ln172_reg_667 = ap_const_lv1_0) and (icmp_ln210_fu_540_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln208_reg_805 = ap_const_lv1_1)))) then 
            LARc_d0 <= ap_const_lv16_0;
        elsif (((icmp_ln204_reg_774 = ap_const_lv1_1) and (icmp_ln172_reg_667 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln208_reg_805 = ap_const_lv1_0))) then 
            LARc_d0 <= select_ln219_fu_522_p3;
        else 
            LARc_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    LARc_we0_assign_proc : process(icmp_ln172_reg_667, icmp_ln204_reg_774, icmp_ln208_reg_805, ap_CS_fsm_state12, ap_block_state12_on_subcall_done, icmp_ln210_fu_540_p2, ap_CS_fsm_state17, icmp_ln174_fu_632_p2)
    begin
        if ((((icmp_ln174_fu_632_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((icmp_ln204_reg_774 = ap_const_lv1_1) and (icmp_ln172_reg_667 = ap_const_lv1_0) and (icmp_ln210_fu_540_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln208_reg_805 = ap_const_lv1_1)) or ((icmp_ln204_reg_774 = ap_const_lv1_1) and (icmp_ln172_reg_667 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln208_reg_805 = ap_const_lv1_0)))) then 
            LARc_we0 <= ap_const_logic_1;
        else 
            LARc_we0 <= ap_const_logic_0;
        end if; 
    end process;


    L_ACF_address0_assign_proc : process(ap_CS_fsm_state1, zext_ln184_fu_370_p1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            L_ACF_address0 <= zext_ln184_fu_370_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            L_ACF_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        else 
            L_ACF_address0 <= "XXXX";
        end if; 
    end process;


    L_ACF_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            L_ACF_ce0 <= ap_const_logic_1;
        else 
            L_ACF_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    P_address0_assign_proc : process(zext_ln197_reg_719, ap_CS_fsm_state10, ap_CS_fsm_state14, ap_CS_fsm_state9, zext_ln232_fu_591_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            P_address0 <= zext_ln232_fu_591_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            P_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            P_address0 <= zext_ln197_reg_719(4 - 1 downto 0);
        else 
            P_address0 <= "XXXX";
        end if; 
    end process;


    P_address1_assign_proc : process(ap_CS_fsm_state10, zext_ln229_reg_836, ap_CS_fsm_state16, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            P_address1 <= zext_ln229_reg_836(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            P_address1 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            P_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            P_address1 <= "XXXX";
        end if; 
    end process;


    P_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state14, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            P_ce0 <= ap_const_logic_1;
        else 
            P_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    P_ce1_assign_proc : process(ap_CS_fsm_state10, grp_gsm_mult_r_fu_298_ap_done, ap_CS_fsm_state16, ap_block_state16_on_subcall_done, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((grp_gsm_mult_r_fu_298_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_const_boolean_0 = ap_block_state16_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            P_ce1 <= ap_const_logic_1;
        else 
            P_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    P_we0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            P_we0 <= ap_const_logic_1;
        else 
            P_we0 <= ap_const_logic_0;
        end if; 
    end process;


    P_we1_assign_proc : process(grp_gsm_mult_r_fu_298_ap_done, ap_CS_fsm_state16, ap_block_state16_on_subcall_done, ap_CS_fsm_state13)
    begin
        if ((((grp_gsm_mult_r_fu_298_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_const_boolean_0 = ap_block_state16_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            P_we1 <= ap_const_logic_1;
        else 
            P_we1 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln165_fu_556_p2 <= std_logic_vector(unsigned(trunc_ln210_fu_552_p1) + unsigned(trunc_ln204_reg_816));
    add_ln191_fu_415_p2 <= std_logic_vector(unsigned(i_1_fu_94) + unsigned(ap_const_lv4_1));
    add_ln197_fu_440_p2 <= std_logic_vector(unsigned(i_2_fu_98) + unsigned(ap_const_lv4_1));
    add_ln204_1_fu_488_p2 <= std_logic_vector(unsigned(idx_fu_102) + unsigned(ap_const_lv4_1));
    add_ln204_2_fu_601_p2 <= std_logic_vector(unsigned(indvars_iv_fu_110) + unsigned(ap_const_lv4_F));
    add_ln204_3_fu_607_p2 <= std_logic_vector(unsigned(indvars_iv3_fu_114) + unsigned(ap_const_lv4_F));
    add_ln204_fu_596_p2 <= std_logic_vector(unsigned(i_5_fu_106) + unsigned(ap_const_lv4_1));
    add_ln210_fu_546_p2 <= std_logic_vector(unsigned(idx47_fu_118) + unsigned(ap_const_lv4_1));
    add_ln232_fu_585_p2 <= std_logic_vector(unsigned(m_reg_265) + unsigned(ap_const_lv4_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(ap_block_state12_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state12_on_subcall_done)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state13_blk_assign_proc : process(grp_gsm_mult_r_fu_300_p_done)
    begin
        if ((grp_gsm_mult_r_fu_300_p_done = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;

    ap_ST_fsm_state16_blk_assign_proc : process(ap_block_state16_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state16_on_subcall_done)) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state17_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_gsm_norm_fu_276_ap_done)
    begin
        if ((grp_gsm_norm_fu_276_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state12_on_subcall_done_assign_proc : process(grp_gsm_div_fu_290_ap_done, ap_predicate_op118_call_state12)
    begin
                ap_block_state12_on_subcall_done <= ((ap_predicate_op118_call_state12 = ap_const_boolean_1) and (grp_gsm_div_fu_290_ap_done = ap_const_logic_0));
    end process;


    ap_block_state16_on_subcall_done_assign_proc : process(grp_gsm_mult_r_fu_305_ap_done, grp_gsm_mult_r_fu_300_p_done)
    begin
                ap_block_state16_on_subcall_done <= ((grp_gsm_mult_r_fu_305_ap_done = ap_const_logic_0) or (grp_gsm_mult_r_fu_300_p_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln172_reg_667, icmp_ln204_reg_774, icmp_ln208_reg_805, ap_CS_fsm_state12, ap_block_state12_on_subcall_done, icmp_ln221_fu_532_p2, icmp_ln210_fu_540_p2)
    begin
        if ((((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12) and ((icmp_ln172_reg_667 = ap_const_lv1_1) or ((icmp_ln204_reg_774 = ap_const_lv1_0) or (((icmp_ln221_fu_532_p2 = ap_const_lv1_1) and (icmp_ln208_reg_805 = ap_const_lv1_0)) or ((icmp_ln210_fu_540_p2 = ap_const_lv1_1) and (icmp_ln208_reg_805 = ap_const_lv1_1)))))) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op118_call_state12_assign_proc : process(icmp_ln172_reg_667, icmp_ln204_reg_774, icmp_ln208_reg_805)
    begin
                ap_predicate_op118_call_state12 <= ((icmp_ln204_reg_774 = ap_const_lv1_1) and (icmp_ln172_reg_667 = ap_const_lv1_0) and (icmp_ln208_reg_805 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(icmp_ln172_reg_667, icmp_ln204_reg_774, icmp_ln208_reg_805, ap_CS_fsm_state12, ap_block_state12_on_subcall_done, icmp_ln221_fu_532_p2, icmp_ln210_fu_540_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12) and ((icmp_ln172_reg_667 = ap_const_lv1_1) or ((icmp_ln204_reg_774 = ap_const_lv1_0) or (((icmp_ln221_fu_532_p2 = ap_const_lv1_1) and (icmp_ln208_reg_805 = ap_const_lv1_0)) or ((icmp_ln210_fu_540_p2 = ap_const_lv1_1) and (icmp_ln208_reg_805 = ap_const_lv1_1))))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_331_p2 <= std_logic_vector(unsigned(i_fu_90) + unsigned(ap_const_lv4_1));
    grp_gsm_add_fu_310_p_din1 <= grp_gsm_add_fu_312_a;
    grp_gsm_add_fu_310_p_din2 <= grp_gsm_mult_r_fu_300_p_dout0;

    grp_gsm_add_fu_312_a_assign_proc : process(P_load_reg_799, P_load_1_reg_862, ap_CS_fsm_state16, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_gsm_add_fu_312_a <= P_load_1_reg_862;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_gsm_add_fu_312_a <= P_load_reg_799;
        else 
            grp_gsm_add_fu_312_a <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_gsm_div_fu_290_ap_start <= grp_gsm_div_fu_290_ap_start_reg;

    grp_gsm_mult_r_fu_298_a_assign_proc : process(temp_1_reg_788, K_load_reg_856, ap_CS_fsm_state16, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_gsm_mult_r_fu_298_a <= K_load_reg_856;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_gsm_mult_r_fu_298_a <= temp_1_reg_788;
        else 
            grp_gsm_mult_r_fu_298_a <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_gsm_mult_r_fu_298_ap_done <= grp_gsm_mult_r_fu_300_p_done;
    grp_gsm_mult_r_fu_298_ap_ready <= grp_gsm_mult_r_fu_300_p_ready;
    grp_gsm_mult_r_fu_300_p_din1 <= grp_gsm_mult_r_fu_298_a;
    grp_gsm_mult_r_fu_300_p_din2 <= select_ln219_reg_821;
    grp_gsm_mult_r_fu_300_p_start <= grp_gsm_mult_r_fu_298_ap_start_reg;
    grp_gsm_mult_r_fu_305_ap_start <= grp_gsm_mult_r_fu_305_ap_start_reg;
    grp_gsm_norm_fu_276_ap_done <= grp_gsm_norm_fu_305_p_done;
    grp_gsm_norm_fu_276_ap_ready <= grp_gsm_norm_fu_305_p_ready;
    grp_gsm_norm_fu_305_p_din1 <= L_ACF_load_reg_662;
    grp_gsm_norm_fu_305_p_start <= grp_gsm_norm_fu_276_ap_start_reg;
    icmp_ln172_fu_340_p2 <= "1" when (L_ACF_q0 = ap_const_lv64_0) else "0";
    icmp_ln174_fu_632_p2 <= "1" when (i_fu_90 = ap_const_lv4_8) else "0";
    icmp_ln184_fu_364_p2 <= "1" when (i_fu_90 = ap_const_lv4_9) else "0";
    icmp_ln191_fu_404_p2 <= "1" when (i_1_fu_94 = ap_const_lv4_8) else "0";
    icmp_ln197_fu_434_p2 <= "1" when (i_2_fu_98 = ap_const_lv4_9) else "0";
    icmp_ln204_fu_482_p2 <= "1" when (unsigned(i_5_fu_106) < unsigned(ap_const_lv4_9)) else "0";
    icmp_ln208_fu_497_p2 <= "1" when (signed(P_q0) < signed(temp_37_gsm_abs_fu_120_p_dout0)) else "0";
    icmp_ln210_fu_540_p2 <= "1" when (idx47_fu_118 = indvars_iv3_fu_114) else "0";
    icmp_ln219_fu_511_p2 <= "1" when (signed(temp_1_reg_788) > signed(ap_const_lv16_0)) else "0";
    icmp_ln221_fu_532_p2 <= "1" when (i_5_fu_106 = ap_const_lv4_8) else "0";
    icmp_ln229_fu_574_p2 <= "1" when (m_reg_265 = indvars_iv_fu_110) else "0";
    select_ln219_fu_522_p3 <= 
        sub_ln220_fu_516_p2 when (icmp_ln219_fu_511_p2(0) = '1') else 
        grp_gsm_div_fu_290_ap_return;
    sh_prom_cast_cast_cast_cast_fu_360_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_prom_cast_cast_cast_fu_356_p1),64));
        sh_prom_cast_cast_cast_fu_356_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_gsm_norm_fu_305_p_dout0),32));

    shl_ln186_fu_385_p2 <= std_logic_vector(shift_left(unsigned(L_ACF_q0),to_integer(unsigned('0' & sh_prom_cast_cast_cast_cast_reg_671(31-1 downto 0)))));
    sub_ln220_fu_516_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(grp_gsm_div_fu_290_ap_return));
    temp_37_gsm_abs_fu_120_p_din1 <= P_q1;
    tmp_6_gsm_add_fu_315_p_din1 <= K_load_reg_856;
    tmp_6_gsm_add_fu_315_p_din2 <= grp_gsm_mult_r_fu_305_ap_return;
    trunc_ln204_fu_503_p1 <= idx_fu_102(3 - 1 downto 0);
    trunc_ln210_fu_552_p1 <= idx47_fu_118(3 - 1 downto 0);
    zext_ln165_fu_561_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln165_fu_556_p2),64));
    zext_ln174_fu_638_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_90),64));
    zext_ln184_fu_370_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_90),64));
    zext_ln191_fu_410_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_fu_94),64));
    zext_ln197_fu_446_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_2_fu_98),64));
    zext_ln204_fu_494_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_fu_102),64));
    zext_ln229_fu_580_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_reg_265),64));
    zext_ln232_fu_591_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln232_fu_585_p2),64));
end behav;
