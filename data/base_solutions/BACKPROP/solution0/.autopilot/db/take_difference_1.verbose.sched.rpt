

================================================================
== Vitis HLS Report for 'take_difference_1'
================================================================
* Date:           Wed Jul  9 03:32:56 2025

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        BACKPROP
* Solution:       solution0 (Vivado IP Flow Target)
* Product family: virtexuplusHBM
* Target device:  xcu50-fsvh2104-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  8.00 ns|  5.534 ns|     2.16 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       28|       28|  0.224 us|  0.224 us|   28|   28|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                         |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |        Loop Name        |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- take_difference_loop1  |       27|       27|         9|          -|          -|     3|        no|
        +-------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 10
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.38>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [data/benchmarks/backprop/backprop.c:112]   --->   Operation 11 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%output_difference4_03 = alloca i32 1"   --->   Operation 12 'alloca' 'output_difference4_03' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%write_flag_0 = alloca i32 1"   --->   Operation 13 'alloca' 'write_flag_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%write_flag6_0 = alloca i32 1"   --->   Operation 14 'alloca' 'write_flag6_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%output_difference3_04 = alloca i32 1"   --->   Operation 15 'alloca' 'output_difference3_04' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%output_difference_05 = alloca i32 1"   --->   Operation 16 'alloca' 'output_difference_05' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%write_flag3_0 = alloca i32 1"   --->   Operation 17 'alloca' 'write_flag3_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %training_targets, void @empty_8, i32 0, i32 0, void @empty_42, i32 4294967295, i32 0, void @empty_42, void @empty_42, void @empty_42, i32 0, i32 0, i32 0, i32 0, void @empty_42, void @empty_42, i32 4294967295, i32 0"   --->   Operation 18 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specpipeline_ln49 = specpipeline void @_ssdm_op_SpecPipeline, i32 0, i32 0, i32 1, i32 0, void @empty_42" [/home/gabriel/Documents/UFRGS/RAISE/AHLS/AHLS/data/base_directives/backprop.tcl:49]   --->   Operation 19 'specpipeline' 'specpipeline_ln49' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%idx_read = read i9 @_ssdm_op_Read.ap_auto.i9, i9 %idx" [data/benchmarks/backprop/backprop.c:114]   --->   Operation 20 'read' 'idx_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%p_read_4 = read i64 @_ssdm_op_Read.ap_auto.double, i64 %p_read8" [data/benchmarks/backprop/backprop.c:114]   --->   Operation 21 'read' 'p_read_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%p_read_5 = read i64 @_ssdm_op_Read.ap_auto.double, i64 %p_read7" [data/benchmarks/backprop/backprop.c:114]   --->   Operation 22 'read' 'p_read_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%p_read_6 = read i64 @_ssdm_op_Read.ap_auto.double, i64 %p_read6" [data/benchmarks/backprop/backprop.c:114]   --->   Operation 23 'read' 'p_read_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%p_read_7 = read i64 @_ssdm_op_Read.ap_auto.double, i64 %p_read25" [data/benchmarks/backprop/backprop.c:114]   --->   Operation 24 'read' 'p_read_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%p_read_8 = read i64 @_ssdm_op_Read.ap_auto.double, i64 %p_read14" [data/benchmarks/backprop/backprop.c:114]   --->   Operation 25 'read' 'p_read_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%p_read37 = read i64 @_ssdm_op_Read.ap_auto.double, i64 %p_read3" [data/benchmarks/backprop/backprop.c:114]   --->   Operation 26 'read' 'p_read37' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%p_read26 = read i64 @_ssdm_op_Read.ap_auto.double, i64 %p_read2" [data/benchmarks/backprop/backprop.c:114]   --->   Operation 27 'read' 'p_read26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%p_read15 = read i64 @_ssdm_op_Read.ap_auto.double, i64 %p_read1" [data/benchmarks/backprop/backprop.c:114]   --->   Operation 28 'read' 'p_read15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%p_read_9 = read i64 @_ssdm_op_Read.ap_auto.double, i64 %p_read" [data/benchmarks/backprop/backprop.c:114]   --->   Operation 29 'read' 'p_read_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.38ns)   --->   "%store_ln0 = store i1 0, i1 %write_flag3_0"   --->   Operation 30 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 31 [1/1] (0.38ns)   --->   "%store_ln0 = store i1 0, i1 %write_flag6_0"   --->   Operation 31 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 32 [1/1] (0.38ns)   --->   "%store_ln0 = store i1 0, i1 %write_flag_0"   --->   Operation 32 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 33 [1/1] (0.38ns)   --->   "%store_ln112 = store i2 0, i2 %i" [data/benchmarks/backprop/backprop.c:112]   --->   Operation 33 'store' 'store_ln112' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%br_ln114 = br void %for.inc" [data/benchmarks/backprop/backprop.c:114]   --->   Operation 34 'br' 'br_ln114' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 1.91>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%i_24 = load i2 %i" [data/benchmarks/backprop/backprop.c:114]   --->   Operation 35 'load' 'i_24' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.43ns)   --->   "%icmp_ln114 = icmp_eq  i2 %i_24, i2 3" [data/benchmarks/backprop/backprop.c:114]   --->   Operation 36 'icmp' 'icmp_ln114' <Predicate = true> <Delay = 0.43> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.43ns)   --->   "%add_ln114 = add i2 %i_24, i2 1" [data/benchmarks/backprop/backprop.c:114]   --->   Operation 37 'add' 'add_ln114' <Predicate = true> <Delay = 0.43> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%br_ln114 = br i1 %icmp_ln114, void %for.inc.split, void %for.end" [data/benchmarks/backprop/backprop.c:114]   --->   Operation 38 'br' 'br_ln114' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln114 = zext i2 %i_24" [data/benchmarks/backprop/backprop.c:114]   --->   Operation 39 'zext' 'zext_ln114' <Predicate = (!icmp_ln114)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.41ns)   --->   "%tmp = mux i64 @_ssdm_op_Mux.ap_auto.3double.i2, i64 %p_read_9, i64 %p_read15, i64 %p_read26, i2 %i_24" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 40 'mux' 'tmp' <Predicate = (!icmp_ln114)> <Delay = 0.41> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.71ns)   --->   "%add_ln116 = add i9 %zext_ln114, i9 %idx_read" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 41 'add' 'add_ln116' <Predicate = (!icmp_ln114)> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln116 = zext i9 %add_ln116" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 42 'zext' 'zext_ln116' <Predicate = (!icmp_ln114)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%training_targets_addr = getelementptr i64 %training_targets, i64 0, i64 %zext_ln116" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 43 'getelementptr' 'training_targets_addr' <Predicate = (!icmp_ln114)> <Delay = 0.00>
ST_2 : Operation 44 [2/2] (1.20ns)   --->   "%training_targets_load = load i9 %training_targets_addr" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 44 'load' 'training_targets_load' <Predicate = (!icmp_ln114)> <Delay = 1.20> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 489> <RAM>
ST_2 : Operation 45 [1/1] (0.41ns)   --->   "%tmp_1 = mux i64 @_ssdm_op_Mux.ap_auto.3double.i2, i64 %p_read_6, i64 %p_read_5, i64 %p_read_4, i2 %i_24" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 45 'mux' 'tmp_1' <Predicate = (!icmp_ln114)> <Delay = 0.41> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%output_difference4_03_load = load i64 %output_difference4_03" [data/benchmarks/backprop/backprop.c:118]   --->   Operation 46 'load' 'output_difference4_03_load' <Predicate = (icmp_ln114)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%write_flag_0_load = load i1 %write_flag_0" [data/benchmarks/backprop/backprop.c:118]   --->   Operation 47 'load' 'write_flag_0_load' <Predicate = (icmp_ln114)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%write_flag6_0_load = load i1 %write_flag6_0" [data/benchmarks/backprop/backprop.c:118]   --->   Operation 48 'load' 'write_flag6_0_load' <Predicate = (icmp_ln114)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%output_difference3_04_load = load i64 %output_difference3_04" [data/benchmarks/backprop/backprop.c:118]   --->   Operation 49 'load' 'output_difference3_04_load' <Predicate = (icmp_ln114)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%output_difference_05_load = load i64 %output_difference_05" [data/benchmarks/backprop/backprop.c:118]   --->   Operation 50 'load' 'output_difference_05_load' <Predicate = (icmp_ln114)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%write_flag3_0_load = load i1 %write_flag3_0" [data/benchmarks/backprop/backprop.c:118]   --->   Operation 51 'load' 'write_flag3_0_load' <Predicate = (icmp_ln114)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.41ns)   --->   "%select_ln118 = select i1 %write_flag_0_load, i64 %output_difference_05_load, i64 %p_read37" [data/benchmarks/backprop/backprop.c:118]   --->   Operation 52 'select' 'select_ln118' <Predicate = (icmp_ln114)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.41ns)   --->   "%select_ln118_1 = select i1 %write_flag3_0_load, i64 %output_difference3_04_load, i64 %p_read_8" [data/benchmarks/backprop/backprop.c:118]   --->   Operation 53 'select' 'select_ln118_1' <Predicate = (icmp_ln114)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.41ns)   --->   "%select_ln118_2 = select i1 %write_flag6_0_load, i64 %output_difference4_03_load, i64 %p_read_7" [data/benchmarks/backprop/backprop.c:118]   --->   Operation 54 'select' 'select_ln118_2' <Predicate = (icmp_ln114)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%mrv = insertvalue i192 <undef>, i64 %select_ln118" [data/benchmarks/backprop/backprop.c:118]   --->   Operation 55 'insertvalue' 'mrv' <Predicate = (icmp_ln114)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue i192 %mrv, i64 %select_ln118_1" [data/benchmarks/backprop/backprop.c:118]   --->   Operation 56 'insertvalue' 'mrv_1' <Predicate = (icmp_ln114)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue i192 %mrv_1, i64 %select_ln118_2" [data/benchmarks/backprop/backprop.c:118]   --->   Operation 57 'insertvalue' 'mrv_2' <Predicate = (icmp_ln114)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%ret_ln118 = ret i192 %mrv_2" [data/benchmarks/backprop/backprop.c:118]   --->   Operation 58 'ret' 'ret_ln118' <Predicate = (icmp_ln114)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 5.53>
ST_3 : Operation 59 [1/2] (1.20ns)   --->   "%training_targets_load = load i9 %training_targets_addr" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 59 'load' 'training_targets_load' <Predicate = true> <Delay = 1.20> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 489> <RAM>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%bitcast_ln116 = bitcast i64 %training_targets_load" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 60 'bitcast' 'bitcast_ln116' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 61 [4/4] (4.33ns)   --->   "%sub = dsub i64 %tmp, i64 %bitcast_ln116" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 61 'dsub' 'sub' <Predicate = true> <Delay = 4.33> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 4.33>
ST_4 : Operation 62 [3/4] (4.33ns)   --->   "%sub = dsub i64 %tmp, i64 %bitcast_ln116" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 62 'dsub' 'sub' <Predicate = true> <Delay = 4.33> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 4.33>
ST_5 : Operation 63 [2/4] (4.33ns)   --->   "%sub = dsub i64 %tmp, i64 %bitcast_ln116" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 63 'dsub' 'sub' <Predicate = true> <Delay = 4.33> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 4.33>
ST_6 : Operation 64 [1/4] (4.33ns)   --->   "%sub = dsub i64 %tmp, i64 %bitcast_ln116" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 64 'dsub' 'sub' <Predicate = true> <Delay = 4.33> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 4.79>
ST_7 : Operation 65 [1/1] (0.00ns)   --->   "%bitcast_ln116_1 = bitcast i64 %sub" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 65 'bitcast' 'bitcast_ln116_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 66 [1/1] (0.28ns)   --->   "%xor_ln116 = xor i64 %bitcast_ln116_1, i64 9223372036854775808" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 66 'xor' 'xor_ln116' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 67 [1/1] (0.00ns)   --->   "%bitcast_ln116_2 = bitcast i64 %xor_ln116" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 67 'bitcast' 'bitcast_ln116_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 68 [4/4] (4.50ns)   --->   "%output_difference = dmul i64 %bitcast_ln116_2, i64 %tmp_1" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 68 'dmul' 'output_difference' <Predicate = true> <Delay = 4.50> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 3> <II = 1> <Delay = 4.50> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 4.50>
ST_8 : Operation 69 [3/4] (4.50ns)   --->   "%output_difference = dmul i64 %bitcast_ln116_2, i64 %tmp_1" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 69 'dmul' 'output_difference' <Predicate = true> <Delay = 4.50> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 3> <II = 1> <Delay = 4.50> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 4.50>
ST_9 : Operation 70 [2/4] (4.50ns)   --->   "%output_difference = dmul i64 %bitcast_ln116_2, i64 %tmp_1" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 70 'dmul' 'output_difference' <Predicate = true> <Delay = 4.50> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 3> <II = 1> <Delay = 4.50> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 4.50>
ST_10 : Operation 71 [1/1] (0.00ns)   --->   "%speclooptripcount_ln115 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 3, i64 3, i64 3" [data/benchmarks/backprop/backprop.c:115]   --->   Operation 71 'speclooptripcount' 'speclooptripcount_ln115' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 72 [1/1] (0.00ns)   --->   "%specloopname_ln117 = specloopname void @_ssdm_op_SpecLoopName, void @empty_15" [data/benchmarks/backprop/backprop.c:117]   --->   Operation 72 'specloopname' 'specloopname_ln117' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 73 [1/4] (4.50ns)   --->   "%output_difference = dmul i64 %bitcast_ln116_2, i64 %tmp_1" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 73 'dmul' 'output_difference' <Predicate = true> <Delay = 4.50> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 3> <II = 1> <Delay = 4.50> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 74 [1/1] (0.66ns)   --->   "%switch_ln116 = switch i2 %i_24, void %branch2, i2 0, void %for.inc.split.for.inc.split13_crit_edge, i2 1, void %branch1" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 74 'switch' 'switch_ln116' <Predicate = true> <Delay = 0.66>
ST_10 : Operation 75 [1/1] (0.38ns)   --->   "%store_ln0 = store i1 1, i1 %write_flag3_0"   --->   Operation 75 'store' 'store_ln0' <Predicate = (i_24 == 1)> <Delay = 0.38>
ST_10 : Operation 76 [1/1] (0.00ns)   --->   "%store_ln116 = store i64 %output_difference, i64 %output_difference3_04" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 76 'store' 'store_ln116' <Predicate = (i_24 == 1)> <Delay = 0.00>
ST_10 : Operation 77 [1/1] (0.00ns)   --->   "%br_ln116 = br void %for.inc.split13" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 77 'br' 'br_ln116' <Predicate = (i_24 == 1)> <Delay = 0.00>
ST_10 : Operation 78 [1/1] (0.00ns)   --->   "%store_ln116 = store i64 %output_difference, i64 %output_difference_05" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 78 'store' 'store_ln116' <Predicate = (i_24 == 0)> <Delay = 0.00>
ST_10 : Operation 79 [1/1] (0.38ns)   --->   "%store_ln0 = store i1 1, i1 %write_flag_0"   --->   Operation 79 'store' 'store_ln0' <Predicate = (i_24 == 0)> <Delay = 0.38>
ST_10 : Operation 80 [1/1] (0.00ns)   --->   "%br_ln116 = br void %for.inc.split13" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 80 'br' 'br_ln116' <Predicate = (i_24 == 0)> <Delay = 0.00>
ST_10 : Operation 81 [1/1] (0.38ns)   --->   "%store_ln0 = store i1 1, i1 %write_flag6_0"   --->   Operation 81 'store' 'store_ln0' <Predicate = (i_24 != 0 & i_24 != 1)> <Delay = 0.38>
ST_10 : Operation 82 [1/1] (0.00ns)   --->   "%store_ln116 = store i64 %output_difference, i64 %output_difference4_03" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 82 'store' 'store_ln116' <Predicate = (i_24 != 0 & i_24 != 1)> <Delay = 0.00>
ST_10 : Operation 83 [1/1] (0.00ns)   --->   "%br_ln116 = br void %for.inc.split13" [data/benchmarks/backprop/backprop.c:116]   --->   Operation 83 'br' 'br_ln116' <Predicate = (i_24 != 0 & i_24 != 1)> <Delay = 0.00>
ST_10 : Operation 84 [1/1] (0.38ns)   --->   "%store_ln112 = store i2 %add_ln114, i2 %i" [data/benchmarks/backprop/backprop.c:112]   --->   Operation 84 'store' 'store_ln112' <Predicate = true> <Delay = 0.38>
ST_10 : Operation 85 [1/1] (0.00ns)   --->   "%br_ln114 = br void %for.inc" [data/benchmarks/backprop/backprop.c:114]   --->   Operation 85 'br' 'br_ln114' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8.000ns, clock uncertainty: 2.160ns.

 <State 1>: 0.387ns
The critical path consists of the following:
	'alloca' operation 1 bit ('write_flag3_0') [18]  (0.000 ns)
	'store' operation 0 bit ('store_ln0') of constant 0 on local variable 'write_flag3_0' [31]  (0.387 ns)

 <State 2>: 1.915ns
The critical path consists of the following:
	'load' operation 2 bit ('i', data/benchmarks/backprop/backprop.c:114) on local variable 'i', data/benchmarks/backprop/backprop.c:112 [37]  (0.000 ns)
	'add' operation 9 bit ('add_ln116', data/benchmarks/backprop/backprop.c:116) [46]  (0.715 ns)
	'getelementptr' operation 9 bit ('training_targets_addr', data/benchmarks/backprop/backprop.c:116) [48]  (0.000 ns)
	'load' operation 64 bit ('training_targets_load', data/benchmarks/backprop/backprop.c:116) on array 'training_targets' [49]  (1.200 ns)

 <State 3>: 5.534ns
The critical path consists of the following:
	'load' operation 64 bit ('training_targets_load', data/benchmarks/backprop/backprop.c:116) on array 'training_targets' [49]  (1.200 ns)
	'dsub' operation 64 bit ('sub', data/benchmarks/backprop/backprop.c:116) [51]  (4.334 ns)

 <State 4>: 4.334ns
The critical path consists of the following:
	'dsub' operation 64 bit ('sub', data/benchmarks/backprop/backprop.c:116) [51]  (4.334 ns)

 <State 5>: 4.334ns
The critical path consists of the following:
	'dsub' operation 64 bit ('sub', data/benchmarks/backprop/backprop.c:116) [51]  (4.334 ns)

 <State 6>: 4.334ns
The critical path consists of the following:
	'dsub' operation 64 bit ('sub', data/benchmarks/backprop/backprop.c:116) [51]  (4.334 ns)

 <State 7>: 4.792ns
The critical path consists of the following:
	'xor' operation 64 bit ('xor_ln116', data/benchmarks/backprop/backprop.c:116) [53]  (0.289 ns)
	'dmul' operation 64 bit ('output_difference', data/benchmarks/backprop/backprop.c:116) [56]  (4.503 ns)

 <State 8>: 4.503ns
The critical path consists of the following:
	'dmul' operation 64 bit ('output_difference', data/benchmarks/backprop/backprop.c:116) [56]  (4.503 ns)

 <State 9>: 4.503ns
The critical path consists of the following:
	'dmul' operation 64 bit ('output_difference', data/benchmarks/backprop/backprop.c:116) [56]  (4.503 ns)

 <State 10>: 4.503ns
The critical path consists of the following:
	'dmul' operation 64 bit ('output_difference', data/benchmarks/backprop/backprop.c:116) [56]  (4.503 ns)
	'store' operation 0 bit ('store_ln116', data/benchmarks/backprop/backprop.c:116) of variable 'output_difference', data/benchmarks/backprop/backprop.c:116 on local variable 'output_difference_05' [63]  (0.000 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
