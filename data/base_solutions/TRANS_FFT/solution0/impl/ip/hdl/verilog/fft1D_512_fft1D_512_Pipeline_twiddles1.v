// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fft1D_512_fft1D_512_Pipeline_twiddles1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv2_i1,
        data_x_address0,
        data_x_ce0,
        data_x_we0,
        data_x_d0,
        data_x_address1,
        data_x_ce1,
        data_x_q1,
        data_y_address0,
        data_y_ce0,
        data_y_we0,
        data_y_d0,
        data_y_address1,
        data_y_ce1,
        data_y_q1,
        twiddles8_reversed8_address0,
        twiddles8_reversed8_ce0,
        twiddles8_reversed8_q0,
        grp_fu_2047_p_din0,
        grp_fu_2047_p_din1,
        grp_fu_2047_p_opcode,
        grp_fu_2047_p_dout0,
        grp_fu_2047_p_ce,
        grp_fu_2051_p_din0,
        grp_fu_2051_p_din1,
        grp_fu_2051_p_opcode,
        grp_fu_2051_p_dout0,
        grp_fu_2051_p_ce,
        grp_fu_2105_p_din0,
        grp_fu_2105_p_din1,
        grp_fu_2105_p_dout0,
        grp_fu_2105_p_ce,
        grp_fu_2110_p_din0,
        grp_fu_2110_p_din1,
        grp_fu_2110_p_dout0,
        grp_fu_2110_p_ce,
        grp_fu_2117_p_din0,
        grp_fu_2117_p_din1,
        grp_fu_2117_p_dout0,
        grp_fu_2117_p_ce,
        grp_fu_2122_p_din0,
        grp_fu_2122_p_din1,
        grp_fu_2122_p_dout0,
        grp_fu_2122_p_ce,
        grp_fu_2127_p_din0,
        grp_fu_2127_p_din1,
        grp_fu_2127_p_dout0,
        grp_fu_2127_p_ce,
        grp_fu_2132_p_din0,
        grp_fu_2132_p_din1,
        grp_fu_2132_p_dout0,
        grp_fu_2132_p_ce,
        grp_fu_6909_p_din0,
        grp_fu_6909_p_din1,
        grp_fu_6909_p_dout0,
        grp_fu_6909_p_ce,
        grp_fu_6913_p_din0,
        grp_fu_6913_p_dout0,
        grp_fu_6913_p_ce,
        grp_sin_or_cos_double_s_fu_6916_p_din1,
        grp_sin_or_cos_double_s_fu_6916_p_din2,
        grp_sin_or_cos_double_s_fu_6916_p_dout0,
        grp_sin_or_cos_double_s_fu_6916_p_start,
        grp_sin_or_cos_double_s_fu_6916_p_ready,
        grp_sin_or_cos_double_s_fu_6916_p_done,
        grp_sin_or_cos_double_s_fu_6916_p_idle,
        grp_sin_or_cos_double_s_fu_6927_p_din1,
        grp_sin_or_cos_double_s_fu_6927_p_din2,
        grp_sin_or_cos_double_s_fu_6927_p_dout0,
        grp_sin_or_cos_double_s_fu_6927_p_start,
        grp_sin_or_cos_double_s_fu_6927_p_ready,
        grp_sin_or_cos_double_s_fu_6927_p_done,
        grp_sin_or_cos_double_s_fu_6927_p_idle
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] conv2_i1;
output  [2:0] data_x_address0;
output   data_x_ce0;
output   data_x_we0;
output  [63:0] data_x_d0;
output  [2:0] data_x_address1;
output   data_x_ce1;
input  [63:0] data_x_q1;
output  [2:0] data_y_address0;
output   data_y_ce0;
output   data_y_we0;
output  [63:0] data_y_d0;
output  [2:0] data_y_address1;
output   data_y_ce1;
input  [63:0] data_y_q1;
output  [2:0] twiddles8_reversed8_address0;
output   twiddles8_reversed8_ce0;
input  [31:0] twiddles8_reversed8_q0;
output  [63:0] grp_fu_2047_p_din0;
output  [63:0] grp_fu_2047_p_din1;
output  [0:0] grp_fu_2047_p_opcode;
input  [63:0] grp_fu_2047_p_dout0;
output   grp_fu_2047_p_ce;
output  [63:0] grp_fu_2051_p_din0;
output  [63:0] grp_fu_2051_p_din1;
output  [0:0] grp_fu_2051_p_opcode;
input  [63:0] grp_fu_2051_p_dout0;
output   grp_fu_2051_p_ce;
output  [63:0] grp_fu_2105_p_din0;
output  [63:0] grp_fu_2105_p_din1;
input  [63:0] grp_fu_2105_p_dout0;
output   grp_fu_2105_p_ce;
output  [63:0] grp_fu_2110_p_din0;
output  [63:0] grp_fu_2110_p_din1;
input  [63:0] grp_fu_2110_p_dout0;
output   grp_fu_2110_p_ce;
output  [63:0] grp_fu_2117_p_din0;
output  [63:0] grp_fu_2117_p_din1;
input  [63:0] grp_fu_2117_p_dout0;
output   grp_fu_2117_p_ce;
output  [63:0] grp_fu_2122_p_din0;
output  [63:0] grp_fu_2122_p_din1;
input  [63:0] grp_fu_2122_p_dout0;
output   grp_fu_2122_p_ce;
output  [63:0] grp_fu_2127_p_din0;
output  [63:0] grp_fu_2127_p_din1;
input  [63:0] grp_fu_2127_p_dout0;
output   grp_fu_2127_p_ce;
output  [63:0] grp_fu_2132_p_din0;
output  [63:0] grp_fu_2132_p_din1;
input  [63:0] grp_fu_2132_p_dout0;
output   grp_fu_2132_p_ce;
output  [63:0] grp_fu_6909_p_din0;
output  [63:0] grp_fu_6909_p_din1;
input  [63:0] grp_fu_6909_p_dout0;
output   grp_fu_6909_p_ce;
output  [31:0] grp_fu_6913_p_din0;
input  [63:0] grp_fu_6913_p_dout0;
output   grp_fu_6913_p_ce;
output  [63:0] grp_sin_or_cos_double_s_fu_6916_p_din1;
output  [0:0] grp_sin_or_cos_double_s_fu_6916_p_din2;
input  [63:0] grp_sin_or_cos_double_s_fu_6916_p_dout0;
output   grp_sin_or_cos_double_s_fu_6916_p_start;
input   grp_sin_or_cos_double_s_fu_6916_p_ready;
input   grp_sin_or_cos_double_s_fu_6916_p_done;
input   grp_sin_or_cos_double_s_fu_6916_p_idle;
output  [63:0] grp_sin_or_cos_double_s_fu_6927_p_din1;
output  [0:0] grp_sin_or_cos_double_s_fu_6927_p_din2;
input  [63:0] grp_sin_or_cos_double_s_fu_6927_p_dout0;
output   grp_sin_or_cos_double_s_fu_6927_p_start;
input   grp_sin_or_cos_double_s_fu_6927_p_ready;
input   grp_sin_or_cos_double_s_fu_6927_p_done;
input   grp_sin_or_cos_double_s_fu_6927_p_idle;

reg ap_idle;
reg data_x_ce0;
reg data_x_we0;
reg data_x_ce1;
reg data_y_ce0;
reg data_y_we0;
reg data_y_ce1;
reg twiddles8_reversed8_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln28_fu_205_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln28_reg_241;
reg   [0:0] icmp_ln28_reg_241_pp0_iter1_reg;
reg   [0:0] icmp_ln28_reg_241_pp0_iter2_reg;
reg   [0:0] icmp_ln28_reg_241_pp0_iter3_reg;
reg   [0:0] icmp_ln28_reg_241_pp0_iter4_reg;
reg   [0:0] icmp_ln28_reg_241_pp0_iter5_reg;
reg   [0:0] icmp_ln28_reg_241_pp0_iter6_reg;
reg   [0:0] icmp_ln28_reg_241_pp0_iter7_reg;
reg   [0:0] icmp_ln28_reg_241_pp0_iter8_reg;
reg   [0:0] icmp_ln28_reg_241_pp0_iter9_reg;
reg   [0:0] icmp_ln28_reg_241_pp0_iter10_reg;
reg   [0:0] icmp_ln28_reg_241_pp0_iter11_reg;
reg   [0:0] icmp_ln28_reg_241_pp0_iter12_reg;
reg   [0:0] icmp_ln28_reg_241_pp0_iter13_reg;
reg   [2:0] data_x_addr_reg_250;
reg   [2:0] data_x_addr_reg_250_pp0_iter1_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter2_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter3_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter4_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter5_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter6_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter7_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter8_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter9_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter10_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter11_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter12_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter13_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter14_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter15_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter16_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter17_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter18_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter19_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter20_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter21_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter22_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter23_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter24_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter25_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter26_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter27_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter28_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter29_reg;
reg   [2:0] data_x_addr_reg_250_pp0_iter30_reg;
reg   [2:0] data_y_addr_reg_256;
reg   [2:0] data_y_addr_reg_256_pp0_iter1_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter2_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter3_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter4_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter5_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter6_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter7_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter8_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter9_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter10_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter11_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter12_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter13_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter14_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter15_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter16_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter17_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter18_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter19_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter20_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter21_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter22_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter23_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter24_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter25_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter26_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter27_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter28_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter29_reg;
reg   [2:0] data_y_addr_reg_256_pp0_iter30_reg;
reg   [63:0] conv_i1_reg_267;
reg   [63:0] mul_i1_reg_272;
reg   [63:0] div_i1_reg_277;
reg   [63:0] phi_reg_282;
reg   [63:0] phi_x_reg_288;
reg   [63:0] phi_y_reg_294;
reg   [63:0] mul8_i1_reg_312;
reg   [63:0] mul11_i1_reg_317;
reg   [63:0] mul14_i1_reg_322;
reg   [63:0] mul17_i1_reg_327;
wire    grp_sin_or_cos_double_s_fu_111_ap_ready;
wire    grp_sin_or_cos_double_s_fu_130_ap_ready;
reg    grp_sin_or_cos_double_s_fu_111_ap_start_reg;
wire    ap_block_pp0_stage0;
reg    grp_sin_or_cos_double_s_fu_130_ap_start_reg;
wire   [63:0] zext_ln28_fu_211_p1;
reg   [3:0] j_fu_56;
wire   [3:0] add_ln28_fu_218_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_j_1;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 grp_sin_or_cos_double_s_fu_111_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_double_s_fu_130_ap_start_reg = 1'b0;
#0 j_fu_56 = 4'd0;
#0 ap_done_reg = 1'b0;
end

fft1D_512_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter30_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_111_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter14 == 1'b1) & (icmp_ln28_reg_241_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_sin_or_cos_double_s_fu_111_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_111_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_111_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_130_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter14 == 1'b1) & (icmp_ln28_reg_241_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_sin_or_cos_double_s_fu_130_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_130_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_130_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln28_fu_205_p2 == 1'd0))) begin
            j_fu_56 <= add_ln28_fu_218_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_56 <= 4'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        conv_i1_reg_267 <= grp_fu_6913_p_dout0;
        data_x_addr_reg_250_pp0_iter10_reg <= data_x_addr_reg_250_pp0_iter9_reg;
        data_x_addr_reg_250_pp0_iter11_reg <= data_x_addr_reg_250_pp0_iter10_reg;
        data_x_addr_reg_250_pp0_iter12_reg <= data_x_addr_reg_250_pp0_iter11_reg;
        data_x_addr_reg_250_pp0_iter13_reg <= data_x_addr_reg_250_pp0_iter12_reg;
        data_x_addr_reg_250_pp0_iter14_reg <= data_x_addr_reg_250_pp0_iter13_reg;
        data_x_addr_reg_250_pp0_iter15_reg <= data_x_addr_reg_250_pp0_iter14_reg;
        data_x_addr_reg_250_pp0_iter16_reg <= data_x_addr_reg_250_pp0_iter15_reg;
        data_x_addr_reg_250_pp0_iter17_reg <= data_x_addr_reg_250_pp0_iter16_reg;
        data_x_addr_reg_250_pp0_iter18_reg <= data_x_addr_reg_250_pp0_iter17_reg;
        data_x_addr_reg_250_pp0_iter19_reg <= data_x_addr_reg_250_pp0_iter18_reg;
        data_x_addr_reg_250_pp0_iter20_reg <= data_x_addr_reg_250_pp0_iter19_reg;
        data_x_addr_reg_250_pp0_iter21_reg <= data_x_addr_reg_250_pp0_iter20_reg;
        data_x_addr_reg_250_pp0_iter22_reg <= data_x_addr_reg_250_pp0_iter21_reg;
        data_x_addr_reg_250_pp0_iter23_reg <= data_x_addr_reg_250_pp0_iter22_reg;
        data_x_addr_reg_250_pp0_iter24_reg <= data_x_addr_reg_250_pp0_iter23_reg;
        data_x_addr_reg_250_pp0_iter25_reg <= data_x_addr_reg_250_pp0_iter24_reg;
        data_x_addr_reg_250_pp0_iter26_reg <= data_x_addr_reg_250_pp0_iter25_reg;
        data_x_addr_reg_250_pp0_iter27_reg <= data_x_addr_reg_250_pp0_iter26_reg;
        data_x_addr_reg_250_pp0_iter28_reg <= data_x_addr_reg_250_pp0_iter27_reg;
        data_x_addr_reg_250_pp0_iter29_reg <= data_x_addr_reg_250_pp0_iter28_reg;
        data_x_addr_reg_250_pp0_iter2_reg <= data_x_addr_reg_250_pp0_iter1_reg;
        data_x_addr_reg_250_pp0_iter30_reg <= data_x_addr_reg_250_pp0_iter29_reg;
        data_x_addr_reg_250_pp0_iter3_reg <= data_x_addr_reg_250_pp0_iter2_reg;
        data_x_addr_reg_250_pp0_iter4_reg <= data_x_addr_reg_250_pp0_iter3_reg;
        data_x_addr_reg_250_pp0_iter5_reg <= data_x_addr_reg_250_pp0_iter4_reg;
        data_x_addr_reg_250_pp0_iter6_reg <= data_x_addr_reg_250_pp0_iter5_reg;
        data_x_addr_reg_250_pp0_iter7_reg <= data_x_addr_reg_250_pp0_iter6_reg;
        data_x_addr_reg_250_pp0_iter8_reg <= data_x_addr_reg_250_pp0_iter7_reg;
        data_x_addr_reg_250_pp0_iter9_reg <= data_x_addr_reg_250_pp0_iter8_reg;
        data_y_addr_reg_256_pp0_iter10_reg <= data_y_addr_reg_256_pp0_iter9_reg;
        data_y_addr_reg_256_pp0_iter11_reg <= data_y_addr_reg_256_pp0_iter10_reg;
        data_y_addr_reg_256_pp0_iter12_reg <= data_y_addr_reg_256_pp0_iter11_reg;
        data_y_addr_reg_256_pp0_iter13_reg <= data_y_addr_reg_256_pp0_iter12_reg;
        data_y_addr_reg_256_pp0_iter14_reg <= data_y_addr_reg_256_pp0_iter13_reg;
        data_y_addr_reg_256_pp0_iter15_reg <= data_y_addr_reg_256_pp0_iter14_reg;
        data_y_addr_reg_256_pp0_iter16_reg <= data_y_addr_reg_256_pp0_iter15_reg;
        data_y_addr_reg_256_pp0_iter17_reg <= data_y_addr_reg_256_pp0_iter16_reg;
        data_y_addr_reg_256_pp0_iter18_reg <= data_y_addr_reg_256_pp0_iter17_reg;
        data_y_addr_reg_256_pp0_iter19_reg <= data_y_addr_reg_256_pp0_iter18_reg;
        data_y_addr_reg_256_pp0_iter20_reg <= data_y_addr_reg_256_pp0_iter19_reg;
        data_y_addr_reg_256_pp0_iter21_reg <= data_y_addr_reg_256_pp0_iter20_reg;
        data_y_addr_reg_256_pp0_iter22_reg <= data_y_addr_reg_256_pp0_iter21_reg;
        data_y_addr_reg_256_pp0_iter23_reg <= data_y_addr_reg_256_pp0_iter22_reg;
        data_y_addr_reg_256_pp0_iter24_reg <= data_y_addr_reg_256_pp0_iter23_reg;
        data_y_addr_reg_256_pp0_iter25_reg <= data_y_addr_reg_256_pp0_iter24_reg;
        data_y_addr_reg_256_pp0_iter26_reg <= data_y_addr_reg_256_pp0_iter25_reg;
        data_y_addr_reg_256_pp0_iter27_reg <= data_y_addr_reg_256_pp0_iter26_reg;
        data_y_addr_reg_256_pp0_iter28_reg <= data_y_addr_reg_256_pp0_iter27_reg;
        data_y_addr_reg_256_pp0_iter29_reg <= data_y_addr_reg_256_pp0_iter28_reg;
        data_y_addr_reg_256_pp0_iter2_reg <= data_y_addr_reg_256_pp0_iter1_reg;
        data_y_addr_reg_256_pp0_iter30_reg <= data_y_addr_reg_256_pp0_iter29_reg;
        data_y_addr_reg_256_pp0_iter3_reg <= data_y_addr_reg_256_pp0_iter2_reg;
        data_y_addr_reg_256_pp0_iter4_reg <= data_y_addr_reg_256_pp0_iter3_reg;
        data_y_addr_reg_256_pp0_iter5_reg <= data_y_addr_reg_256_pp0_iter4_reg;
        data_y_addr_reg_256_pp0_iter6_reg <= data_y_addr_reg_256_pp0_iter5_reg;
        data_y_addr_reg_256_pp0_iter7_reg <= data_y_addr_reg_256_pp0_iter6_reg;
        data_y_addr_reg_256_pp0_iter8_reg <= data_y_addr_reg_256_pp0_iter7_reg;
        data_y_addr_reg_256_pp0_iter9_reg <= data_y_addr_reg_256_pp0_iter8_reg;
        div_i1_reg_277 <= grp_fu_2110_p_dout0;
        icmp_ln28_reg_241_pp0_iter10_reg <= icmp_ln28_reg_241_pp0_iter9_reg;
        icmp_ln28_reg_241_pp0_iter11_reg <= icmp_ln28_reg_241_pp0_iter10_reg;
        icmp_ln28_reg_241_pp0_iter12_reg <= icmp_ln28_reg_241_pp0_iter11_reg;
        icmp_ln28_reg_241_pp0_iter13_reg <= icmp_ln28_reg_241_pp0_iter12_reg;
        icmp_ln28_reg_241_pp0_iter2_reg <= icmp_ln28_reg_241_pp0_iter1_reg;
        icmp_ln28_reg_241_pp0_iter3_reg <= icmp_ln28_reg_241_pp0_iter2_reg;
        icmp_ln28_reg_241_pp0_iter4_reg <= icmp_ln28_reg_241_pp0_iter3_reg;
        icmp_ln28_reg_241_pp0_iter5_reg <= icmp_ln28_reg_241_pp0_iter4_reg;
        icmp_ln28_reg_241_pp0_iter6_reg <= icmp_ln28_reg_241_pp0_iter5_reg;
        icmp_ln28_reg_241_pp0_iter7_reg <= icmp_ln28_reg_241_pp0_iter6_reg;
        icmp_ln28_reg_241_pp0_iter8_reg <= icmp_ln28_reg_241_pp0_iter7_reg;
        icmp_ln28_reg_241_pp0_iter9_reg <= icmp_ln28_reg_241_pp0_iter8_reg;
        mul11_i1_reg_317 <= grp_fu_2127_p_dout0;
        mul14_i1_reg_322 <= grp_fu_2132_p_dout0;
        mul17_i1_reg_327 <= grp_fu_6909_p_dout0;
        mul8_i1_reg_312 <= grp_fu_2122_p_dout0;
        mul_i1_reg_272 <= grp_fu_2105_p_dout0;
        phi_reg_282 <= grp_fu_2117_p_dout0;
        phi_x_reg_288 <= grp_sin_or_cos_double_s_fu_6916_p_dout0;
        phi_y_reg_294 <= grp_sin_or_cos_double_s_fu_6927_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        data_x_addr_reg_250 <= zext_ln28_fu_211_p1;
        data_x_addr_reg_250_pp0_iter1_reg <= data_x_addr_reg_250;
        data_y_addr_reg_256 <= zext_ln28_fu_211_p1;
        data_y_addr_reg_256_pp0_iter1_reg <= data_y_addr_reg_256;
        icmp_ln28_reg_241 <= icmp_ln28_fu_205_p2;
        icmp_ln28_reg_241_pp0_iter1_reg <= icmp_ln28_reg_241;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln28_fu_205_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter30_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) 
    & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j_1 = 4'd1;
    end else begin
        ap_sig_allocacmp_j_1 = j_fu_56;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        data_x_ce0 = 1'b1;
    end else begin
        data_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_x_ce1 = 1'b1;
    end else begin
        data_x_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        data_x_we0 = 1'b1;
    end else begin
        data_x_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        data_y_ce0 = 1'b1;
    end else begin
        data_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_y_ce1 = 1'b1;
    end else begin
        data_y_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        data_y_we0 = 1'b1;
    end else begin
        data_y_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        twiddles8_reversed8_ce0 = 1'b1;
    end else begin
        twiddles8_reversed8_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln28_fu_218_p2 = (ap_sig_allocacmp_j_1 + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign data_x_address0 = data_x_addr_reg_250_pp0_iter30_reg;

assign data_x_address1 = data_x_addr_reg_250_pp0_iter22_reg;

assign data_x_d0 = grp_fu_2047_p_dout0;

assign data_y_address0 = data_y_addr_reg_256_pp0_iter30_reg;

assign data_y_address1 = data_y_addr_reg_256_pp0_iter22_reg;

assign data_y_d0 = grp_fu_2051_p_dout0;

assign grp_fu_2047_p_ce = 1'b1;

assign grp_fu_2047_p_din0 = mul8_i1_reg_312;

assign grp_fu_2047_p_din1 = mul11_i1_reg_317;

assign grp_fu_2047_p_opcode = 2'd1;

assign grp_fu_2051_p_ce = 1'b1;

assign grp_fu_2051_p_din0 = mul14_i1_reg_322;

assign grp_fu_2051_p_din1 = mul17_i1_reg_327;

assign grp_fu_2051_p_opcode = 2'd0;

assign grp_fu_2105_p_ce = 1'b1;

assign grp_fu_2105_p_din0 = conv_i1_reg_267;

assign grp_fu_2105_p_din1 = 64'd13842132293033989956;

assign grp_fu_2110_p_ce = 1'b1;

assign grp_fu_2110_p_din0 = mul_i1_reg_272;

assign grp_fu_2110_p_din1 = 64'd4580160821035794432;

assign grp_fu_2117_p_ce = 1'b1;

assign grp_fu_2117_p_din0 = div_i1_reg_277;

assign grp_fu_2117_p_din1 = conv2_i1;

assign grp_fu_2122_p_ce = 1'b1;

assign grp_fu_2122_p_din0 = data_x_q1;

assign grp_fu_2122_p_din1 = phi_x_reg_288;

assign grp_fu_2127_p_ce = 1'b1;

assign grp_fu_2127_p_din0 = data_y_q1;

assign grp_fu_2127_p_din1 = phi_y_reg_294;

assign grp_fu_2132_p_ce = 1'b1;

assign grp_fu_2132_p_din0 = data_x_q1;

assign grp_fu_2132_p_din1 = phi_y_reg_294;

assign grp_fu_6909_p_ce = 1'b1;

assign grp_fu_6909_p_din0 = data_y_q1;

assign grp_fu_6909_p_din1 = phi_x_reg_288;

assign grp_fu_6913_p_ce = 1'b1;

assign grp_fu_6913_p_din0 = twiddles8_reversed8_q0;

assign grp_sin_or_cos_double_s_fu_111_ap_ready = grp_sin_or_cos_double_s_fu_6916_p_ready;

assign grp_sin_or_cos_double_s_fu_130_ap_ready = grp_sin_or_cos_double_s_fu_6927_p_ready;

assign grp_sin_or_cos_double_s_fu_6916_p_din1 = phi_reg_282;

assign grp_sin_or_cos_double_s_fu_6916_p_din2 = 1'd1;

assign grp_sin_or_cos_double_s_fu_6916_p_start = grp_sin_or_cos_double_s_fu_111_ap_start_reg;

assign grp_sin_or_cos_double_s_fu_6927_p_din1 = phi_reg_282;

assign grp_sin_or_cos_double_s_fu_6927_p_din2 = 1'd0;

assign grp_sin_or_cos_double_s_fu_6927_p_start = grp_sin_or_cos_double_s_fu_130_ap_start_reg;

assign icmp_ln28_fu_205_p2 = ((ap_sig_allocacmp_j_1 == 4'd8) ? 1'b1 : 1'b0);

assign twiddles8_reversed8_address0 = zext_ln28_fu_211_p1;

assign zext_ln28_fu_211_p1 = ap_sig_allocacmp_j_1;

endmodule //fft1D_512_fft1D_512_Pipeline_twiddles1
