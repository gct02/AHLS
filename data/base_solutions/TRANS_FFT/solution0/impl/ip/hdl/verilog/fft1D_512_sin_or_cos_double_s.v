// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fft1D_512_sin_or_cos_double_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        t_in,
        do_cos,
        ap_return
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_state9 = 10'd256;
parameter    ap_ST_fsm_state10 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] t_in;
input  [0:0] do_cos;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[63:0] ap_return;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] ref_4oPi_table_256_address0;
reg    ref_4oPi_table_256_ce0;
wire   [255:0] ref_4oPi_table_256_q0;
wire   [7:0] fourth_order_double_sin_cos_K0_address0;
reg    fourth_order_double_sin_cos_K0_ce0;
wire   [58:0] fourth_order_double_sin_cos_K0_q0;
wire   [7:0] fourth_order_double_sin_cos_K1_address0;
reg    fourth_order_double_sin_cos_K1_ce0;
wire  signed [51:0] fourth_order_double_sin_cos_K1_q0;
wire   [7:0] fourth_order_double_sin_cos_K2_address0;
reg    fourth_order_double_sin_cos_K2_ce0;
wire  signed [43:0] fourth_order_double_sin_cos_K2_q0;
wire   [7:0] fourth_order_double_sin_cos_K3_address0;
reg    fourth_order_double_sin_cos_K3_ce0;
wire   [32:0] fourth_order_double_sin_cos_K3_q0;
wire   [7:0] fourth_order_double_sin_cos_K4_address0;
reg    fourth_order_double_sin_cos_K4_ce0;
wire   [24:0] fourth_order_double_sin_cos_K4_q0;
reg   [0:0] din_sign_reg_1255;
wire   [10:0] din_exp_fu_364_p4;
reg   [10:0] din_exp_reg_1261;
wire   [51:0] din_sig_fu_374_p1;
reg   [51:0] din_sig_reg_1268;
wire   [0:0] closepath_fu_378_p2;
reg   [0:0] closepath_reg_1274;
wire   [6:0] trunc_ln398_fu_413_p1;
reg   [6:0] trunc_ln398_reg_1286;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln271_1_fu_449_p2;
reg   [0:0] icmp_ln271_1_reg_1301;
wire   [2:0] k_1_fu_482_p3;
reg   [2:0] k_1_reg_1307;
wire    ap_CS_fsm_state3;
wire   [123:0] Mx_bits_3_fu_506_p3;
reg   [123:0] Mx_bits_3_reg_1313;
wire   [6:0] Mx_zeros_fu_562_p1;
reg   [6:0] Mx_zeros_reg_1318;
reg   [62:0] Mx_reg_1324;
wire    ap_CS_fsm_state4;
wire   [10:0] Ex_1_fu_599_p2;
reg   [10:0] Ex_1_reg_1331;
reg   [0:0] tmp_7_reg_1337;
wire   [10:0] sub_ln506_fu_613_p2;
reg   [10:0] sub_ln506_reg_1343;
wire   [0:0] icmp_ln271_fu_619_p2;
reg   [0:0] icmp_ln271_reg_1348;
wire   [0:0] icmp_ln282_fu_624_p2;
reg   [0:0] icmp_ln282_reg_1354;
wire    ap_CS_fsm_state5;
wire   [0:0] cos_basis_fu_700_p3;
reg   [0:0] cos_basis_reg_1367;
wire   [55:0] B_fu_718_p1;
reg   [55:0] B_reg_1374;
wire   [97:0] zext_ln25_fu_732_p1;
reg   [97:0] zext_ln25_reg_1379;
reg   [48:0] B_squared_reg_1384;
reg   [41:0] tmp_10_reg_1415;
wire    ap_CS_fsm_state6;
reg   [32:0] fourth_order_double_sin_cos_K3_load_reg_1420;
reg   [34:0] tmp_11_reg_1425;
reg   [24:0] fourth_order_double_sin_cos_K4_load_reg_1430;
wire   [63:0] add_ln37_1_fu_863_p2;
reg   [63:0] add_ln37_1_reg_1435;
wire   [63:0] add_ln37_3_fu_918_p2;
reg  signed [63:0] add_ln37_3_reg_1440;
wire    ap_CS_fsm_state7;
reg   [62:0] result_reg_1445;
wire    ap_CS_fsm_state8;
wire   [11:0] sub_ln252_fu_959_p2;
reg   [11:0] sub_ln252_reg_1450;
wire    ap_CS_fsm_state9;
wire    grp_scaled_fixed2ieee_63_1_s_fu_314_ap_start;
wire    grp_scaled_fixed2ieee_63_1_s_fu_314_ap_done;
wire    grp_scaled_fixed2ieee_63_1_s_fu_314_ap_idle;
wire    grp_scaled_fixed2ieee_63_1_s_fu_314_ap_ready;
wire   [63:0] grp_scaled_fixed2ieee_63_1_s_fu_314_ap_return;
reg    grp_scaled_fixed2ieee_63_1_s_fu_314_ap_start_reg;
wire    ap_CS_fsm_state10;
wire   [63:0] zext_ln397_fu_408_p1;
wire   [63:0] zext_ln32_fu_764_p1;
wire   [34:0] mul_ln36_fu_320_p0;
wire   [24:0] mul_ln36_fu_320_p1;
wire   [41:0] mul_ln35_fu_324_p0;
wire   [32:0] mul_ln35_fu_324_p1;
wire   [48:0] mul_ln34_fu_328_p0;
reg   [48:0] grp_fu_332_p0;
wire   [97:0] zext_ln25_1_fu_773_p1;
reg   [48:0] grp_fu_332_p1;
wire   [48:0] mul_ln27_fu_336_p0;
wire   [48:0] mul_ln27_fu_336_p1;
wire   [55:0] mul_ln33_fu_340_p0;
wire   [62:0] mul_ln37_fu_344_p1;
wire  signed [169:0] grp_fu_348_p0;
wire   [52:0] grp_fu_348_p1;
wire   [63:0] data_fu_352_p1;
wire   [10:0] add_ln396_fu_384_p2;
wire   [10:0] addr_fu_390_p3;
wire   [3:0] tmp_s_fu_398_p4;
wire   [255:0] zext_ln398_fu_424_p1;
wire   [255:0] shl_ln398_fu_427_p2;
wire   [52:0] X_fu_417_p3;
wire   [169:0] grp_fu_348_p2;
wire   [2:0] k_fu_464_p4;
wire   [0:0] tmp_fu_474_p3;
wire   [0:0] xor_ln451_fu_489_p2;
wire   [123:0] Mx_bits_fu_454_p4;
wire   [0:0] and_ln451_fu_494_p2;
wire   [123:0] Mx_bits_1_fu_500_p2;
wire   [60:0] tmp_2_fu_514_p4;
wire   [61:0] t_fu_524_p3;
reg   [61:0] tmp_3_fu_532_p4;
wire   [62:0] tmp_4_fu_542_p3;
wire  signed [63:0] sext_ln75_fu_550_p1;
reg   [63:0] tmp_5_fu_554_p3;
wire   [10:0] Ex_fu_566_p2;
wire   [123:0] zext_ln504_fu_581_p1;
wire   [123:0] shl_ln504_fu_584_p2;
wire   [10:0] select_ln453_fu_571_p3;
wire   [10:0] zext_ln505_fu_578_p1;
wire   [10:0] select_ln506_fu_629_p3;
wire   [62:0] zext_ln506_fu_634_p1;
wire   [62:0] lshr_ln506_fu_638_p2;
wire   [62:0] shl_ln506_fu_643_p2;
wire   [0:0] tmp_6_fu_655_p17;
wire   [0:0] tmp_6_fu_655_p19;
wire   [0:0] xor_ln242_fu_694_p2;
wire   [62:0] x_1_fu_648_p3;
wire   [48:0] B_trunc_fu_722_p4;
wire   [97:0] grp_fu_332_p2;
wire   [0:0] sin_basis_fu_748_p3;
wire   [6:0] tmp_9_fu_708_p4;
wire   [7:0] A_fu_756_p3;
wire   [107:0] mul_ln33_fu_340_p2;
wire   [92:0] mul_ln34_fu_328_p2;
wire   [97:0] mul_ln27_fu_336_p2;
wire   [62:0] t1_1_fu_779_p3;
wire   [55:0] trunc_ln_fu_796_p4;
wire  signed [63:0] sext_ln37_fu_845_p1;
wire  signed [63:0] sext_ln37_1_fu_849_p1;
wire   [47:0] trunc_ln1_fu_815_p4;
wire   [63:0] add_ln37_fu_853_p2;
wire  signed [63:0] sext_ln37_2_fu_859_p1;
wire   [59:0] mul_ln36_fu_320_p2;
wire   [74:0] mul_ln35_fu_324_p2;
wire   [36:0] tmp_12_fu_895_p4;
wire   [63:0] zext_ln37_2_fu_905_p1;
wire   [28:0] lshr_ln_fu_885_p4;
wire   [63:0] add_ln37_2_fu_909_p2;
wire   [63:0] zext_ln37_fu_914_p1;
wire   [62:0] Mx_1_fu_924_p3;
wire   [125:0] mul_ln37_fu_344_p2;
wire   [10:0] Ex_2_fu_949_p3;
wire  signed [11:0] sext_ln252_fu_955_p1;
wire   [63:0] data_1_fu_966_p1;
wire   [0:0] tmp_8_fu_998_p33;
wire   [3:0] index_fu_992_p3;
wire   [0:0] tmp_1_fu_1070_p33;
wire   [0:0] tmp_8_fu_998_p35;
wire   [0:0] tmp_1_fu_1070_p35;
wire   [0:0] select_ln242_fu_1142_p3;
wire   [0:0] results_sign_fu_970_p3;
wire   [0:0] xor_ln278_fu_1159_p2;
wire   [0:0] results_sign_1_fu_1149_p2;
wire   [0:0] xor_ln282_fu_1176_p2;
wire   [10:0] results_exp_fu_978_p4;
wire   [0:0] and_ln271_fu_1155_p2;
wire   [0:0] results_sign_3_fu_1164_p2;
wire   [0:0] results_sign_4_fu_1181_p2;
wire   [10:0] select_ln259_fu_1169_p3;
wire   [10:0] results_exp_1_fu_1187_p3;
wire   [0:0] and_ln271_1_fu_1210_p2;
wire   [0:0] xor_ln271_fu_1214_p2;
wire   [0:0] or_ln271_fu_1228_p2;
wire   [51:0] select_ln271_fu_1220_p3;
wire   [51:0] results_sig_fu_988_p1;
wire   [0:0] results_sign_5_fu_1194_p3;
wire   [10:0] results_exp_2_fu_1202_p3;
wire   [51:0] results_sig_1_fu_1233_p3;
wire   [63:0] t_2_fu_1241_p4;
wire   [63:0] bitcast_ln497_fu_1251_p1;
reg   [63:0] ap_return_preg;
reg   [9:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
wire   [169:0] grp_fu_348_p10;
wire   [107:0] mul_ln33_fu_340_p00;
wire   [92:0] mul_ln34_fu_328_p00;
wire   [74:0] mul_ln35_fu_324_p00;
wire   [74:0] mul_ln35_fu_324_p10;
wire   [59:0] mul_ln36_fu_320_p00;
wire   [59:0] mul_ln36_fu_320_p10;
wire   [125:0] mul_ln37_fu_344_p10;
wire   [2:0] tmp_6_fu_655_p1;
wire   [2:0] tmp_6_fu_655_p3;
wire   [2:0] tmp_6_fu_655_p5;
wire   [2:0] tmp_6_fu_655_p7;
wire  signed [2:0] tmp_6_fu_655_p9;
wire  signed [2:0] tmp_6_fu_655_p11;
wire  signed [2:0] tmp_6_fu_655_p13;
wire  signed [2:0] tmp_6_fu_655_p15;
wire   [3:0] tmp_8_fu_998_p1;
wire   [3:0] tmp_8_fu_998_p3;
wire   [3:0] tmp_8_fu_998_p5;
wire   [3:0] tmp_8_fu_998_p7;
wire   [3:0] tmp_8_fu_998_p9;
wire   [3:0] tmp_8_fu_998_p11;
wire   [3:0] tmp_8_fu_998_p13;
wire   [3:0] tmp_8_fu_998_p15;
wire  signed [3:0] tmp_8_fu_998_p17;
wire  signed [3:0] tmp_8_fu_998_p19;
wire  signed [3:0] tmp_8_fu_998_p21;
wire  signed [3:0] tmp_8_fu_998_p23;
wire  signed [3:0] tmp_8_fu_998_p25;
wire  signed [3:0] tmp_8_fu_998_p27;
wire  signed [3:0] tmp_8_fu_998_p29;
wire  signed [3:0] tmp_8_fu_998_p31;
wire   [3:0] tmp_1_fu_1070_p1;
wire   [3:0] tmp_1_fu_1070_p3;
wire   [3:0] tmp_1_fu_1070_p5;
wire   [3:0] tmp_1_fu_1070_p7;
wire   [3:0] tmp_1_fu_1070_p9;
wire   [3:0] tmp_1_fu_1070_p11;
wire   [3:0] tmp_1_fu_1070_p13;
wire   [3:0] tmp_1_fu_1070_p15;
wire  signed [3:0] tmp_1_fu_1070_p17;
wire  signed [3:0] tmp_1_fu_1070_p19;
wire  signed [3:0] tmp_1_fu_1070_p21;
wire  signed [3:0] tmp_1_fu_1070_p23;
wire  signed [3:0] tmp_1_fu_1070_p25;
wire  signed [3:0] tmp_1_fu_1070_p27;
wire  signed [3:0] tmp_1_fu_1070_p29;
wire  signed [3:0] tmp_1_fu_1070_p31;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 grp_scaled_fixed2ieee_63_1_s_fu_314_ap_start_reg = 1'b0;
#0 ap_return_preg = 64'd0;
end

fft1D_512_sin_or_cos_double_s_ref_4oPi_table_256_ROM_AUTO_1R #(
    .DataWidth( 256 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
ref_4oPi_table_256_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ref_4oPi_table_256_address0),
    .ce0(ref_4oPi_table_256_ce0),
    .q0(ref_4oPi_table_256_q0)
);

fft1D_512_sin_or_cos_double_s_fourth_order_double_sin_cos_K0_ROM_1P_LUTRAM_1R #(
    .DataWidth( 59 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_sin_cos_K0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_sin_cos_K0_address0),
    .ce0(fourth_order_double_sin_cos_K0_ce0),
    .q0(fourth_order_double_sin_cos_K0_q0)
);

fft1D_512_sin_or_cos_double_s_fourth_order_double_sin_cos_K1_ROM_1P_LUTRAM_1R #(
    .DataWidth( 52 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_sin_cos_K1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_sin_cos_K1_address0),
    .ce0(fourth_order_double_sin_cos_K1_ce0),
    .q0(fourth_order_double_sin_cos_K1_q0)
);

fft1D_512_sin_or_cos_double_s_fourth_order_double_sin_cos_K2_ROM_1P_LUTRAM_1R #(
    .DataWidth( 44 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_sin_cos_K2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_sin_cos_K2_address0),
    .ce0(fourth_order_double_sin_cos_K2_ce0),
    .q0(fourth_order_double_sin_cos_K2_q0)
);

fft1D_512_sin_or_cos_double_s_fourth_order_double_sin_cos_K3_ROM_1P_LUTRAM_1R #(
    .DataWidth( 33 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_sin_cos_K3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_sin_cos_K3_address0),
    .ce0(fourth_order_double_sin_cos_K3_ce0),
    .q0(fourth_order_double_sin_cos_K3_q0)
);

fft1D_512_sin_or_cos_double_s_fourth_order_double_sin_cos_K4_ROM_1P_LUTRAM_1R #(
    .DataWidth( 25 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_sin_cos_K4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_sin_cos_K4_address0),
    .ce0(fourth_order_double_sin_cos_K4_ce0),
    .q0(fourth_order_double_sin_cos_K4_q0)
);

fft1D_512_scaled_fixed2ieee_63_1_s grp_scaled_fixed2ieee_63_1_s_fu_314(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_scaled_fixed2ieee_63_1_s_fu_314_ap_start),
    .ap_done(grp_scaled_fixed2ieee_63_1_s_fu_314_ap_done),
    .ap_idle(grp_scaled_fixed2ieee_63_1_s_fu_314_ap_idle),
    .ap_ready(grp_scaled_fixed2ieee_63_1_s_fu_314_ap_ready),
    .in_val(result_reg_1445),
    .prescale(sub_ln252_reg_1450),
    .ap_return(grp_scaled_fixed2ieee_63_1_s_fu_314_ap_return)
);

fft1D_512_mul_35ns_25ns_60_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 35 ),
    .din1_WIDTH( 25 ),
    .dout_WIDTH( 60 ))
mul_35ns_25ns_60_1_1_U33(
    .din0(mul_ln36_fu_320_p0),
    .din1(mul_ln36_fu_320_p1),
    .dout(mul_ln36_fu_320_p2)
);

fft1D_512_mul_42ns_33ns_75_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 42 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 75 ))
mul_42ns_33ns_75_1_1_U34(
    .din0(mul_ln35_fu_324_p0),
    .din1(mul_ln35_fu_324_p1),
    .dout(mul_ln35_fu_324_p2)
);

fft1D_512_mul_49ns_44s_93_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 44 ),
    .dout_WIDTH( 93 ))
mul_49ns_44s_93_1_1_U35(
    .din0(mul_ln34_fu_328_p0),
    .din1(fourth_order_double_sin_cos_K2_q0),
    .dout(mul_ln34_fu_328_p2)
);

fft1D_512_mul_49ns_49ns_98_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 98 ))
mul_49ns_49ns_98_1_1_U36(
    .din0(grp_fu_332_p0),
    .din1(grp_fu_332_p1),
    .dout(grp_fu_332_p2)
);

fft1D_512_mul_49ns_49ns_98_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 98 ))
mul_49ns_49ns_98_1_1_U37(
    .din0(mul_ln27_fu_336_p0),
    .din1(mul_ln27_fu_336_p1),
    .dout(mul_ln27_fu_336_p2)
);

fft1D_512_mul_56ns_52s_108_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 56 ),
    .din1_WIDTH( 52 ),
    .dout_WIDTH( 108 ))
mul_56ns_52s_108_1_1_U38(
    .din0(mul_ln33_fu_340_p0),
    .din1(fourth_order_double_sin_cos_K1_q0),
    .dout(mul_ln33_fu_340_p2)
);

fft1D_512_mul_64s_63ns_126_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 63 ),
    .dout_WIDTH( 126 ))
mul_64s_63ns_126_1_1_U39(
    .din0(add_ln37_3_reg_1440),
    .din1(mul_ln37_fu_344_p1),
    .dout(mul_ln37_fu_344_p2)
);

fft1D_512_mul_170s_53ns_170_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 170 ),
    .din1_WIDTH( 53 ),
    .dout_WIDTH( 170 ))
mul_170s_53ns_170_2_1_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_348_p0),
    .din1(grp_fu_348_p1),
    .ce(1'b1),
    .dout(grp_fu_348_p2)
);

fft1D_512_sparsemux_17_3_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 1 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 1 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 1 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 1 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 1 ),
    .CASE5( 3'h5 ),
    .din5_WIDTH( 1 ),
    .CASE6( 3'h6 ),
    .din6_WIDTH( 1 ),
    .CASE7( 3'h7 ),
    .din7_WIDTH( 1 ),
    .def_WIDTH( 1 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
sparsemux_17_3_1_1_1_U41(
    .din0(1'd0),
    .din1(1'd1),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd0),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .def(tmp_6_fu_655_p17),
    .sel(k_1_reg_1307),
    .dout(tmp_6_fu_655_p19)
);

fft1D_512_sparsemux_33_4_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 1 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 1 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 1 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 1 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 1 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 1 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 1 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 1 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 1 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 1 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 1 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 1 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 1 ),
    .CASE13( 4'hD ),
    .din13_WIDTH( 1 ),
    .CASE14( 4'hE ),
    .din14_WIDTH( 1 ),
    .CASE15( 4'hF ),
    .din15_WIDTH( 1 ),
    .def_WIDTH( 1 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
sparsemux_33_4_1_1_1_U42(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(1'd1),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(1'd0),
    .din9(1'd1),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd1),
    .din13(1'd0),
    .din14(1'd0),
    .din15(1'd0),
    .def(tmp_8_fu_998_p33),
    .sel(index_fu_992_p3),
    .dout(tmp_8_fu_998_p35)
);

fft1D_512_sparsemux_33_4_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 1 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 1 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 1 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 1 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 1 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 1 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 1 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 1 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 1 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 1 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 1 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 1 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 1 ),
    .CASE13( 4'hD ),
    .din13_WIDTH( 1 ),
    .CASE14( 4'hE ),
    .din14_WIDTH( 1 ),
    .CASE15( 4'hF ),
    .din15_WIDTH( 1 ),
    .def_WIDTH( 1 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
sparsemux_33_4_1_1_1_U43(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd0),
    .din7(1'd1),
    .din8(1'd1),
    .din9(1'd0),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd0),
    .din13(1'd1),
    .din14(1'd0),
    .din15(1'd0),
    .def(tmp_1_fu_1070_p33),
    .sel(index_fu_992_p3),
    .dout(tmp_1_fu_1070_p35)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 64'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state10) & (grp_scaled_fixed2ieee_63_1_s_fu_314_ap_done == 1'b1))) begin
            ap_return_preg <= bitcast_ln497_fu_1251_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_scaled_fixed2ieee_63_1_s_fu_314_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_scaled_fixed2ieee_63_1_s_fu_314_ap_start_reg <= 1'b1;
        end else if ((grp_scaled_fixed2ieee_63_1_s_fu_314_ap_ready == 1'b1)) begin
            grp_scaled_fixed2ieee_63_1_s_fu_314_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        B_reg_1374 <= B_fu_718_p1;
        B_squared_reg_1384 <= {{grp_fu_332_p2[97:49]}};
        cos_basis_reg_1367 <= cos_basis_fu_700_p3;
        zext_ln25_reg_1379[48 : 0] <= zext_ln25_fu_732_p1[48 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Ex_1_reg_1331 <= Ex_1_fu_599_p2;
        Mx_reg_1324 <= {{shl_ln504_fu_584_p2[123:61]}};
        icmp_ln271_reg_1348 <= icmp_ln271_fu_619_p2;
        icmp_ln282_reg_1354 <= icmp_ln282_fu_624_p2;
        sub_ln506_reg_1343 <= sub_ln506_fu_613_p2;
        tmp_7_reg_1337 <= Ex_1_fu_599_p2[32'd10];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Mx_bits_3_reg_1313 <= Mx_bits_3_fu_506_p3;
        Mx_zeros_reg_1318 <= Mx_zeros_fu_562_p1;
        k_1_reg_1307 <= k_1_fu_482_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln37_1_reg_1435 <= add_ln37_1_fu_863_p2;
        fourth_order_double_sin_cos_K3_load_reg_1420 <= fourth_order_double_sin_cos_K3_q0;
        fourth_order_double_sin_cos_K4_load_reg_1430 <= fourth_order_double_sin_cos_K4_q0;
        tmp_10_reg_1415 <= {{grp_fu_332_p2[97:56]}};
        tmp_11_reg_1425 <= {{mul_ln27_fu_336_p2[97:63]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln37_3_reg_1440 <= add_ln37_3_fu_918_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        closepath_reg_1274 <= closepath_fu_378_p2;
        din_exp_reg_1261 <= {{data_fu_352_p1[62:52]}};
        din_sig_reg_1268 <= din_sig_fu_374_p1;
        din_sign_reg_1255 <= data_fu_352_p1[32'd63];
        trunc_ln398_reg_1286 <= trunc_ln398_fu_413_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln271_1_reg_1301 <= icmp_ln271_1_fu_449_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        result_reg_1445 <= {{mul_ln37_fu_344_p2[125:63]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sub_ln252_reg_1450 <= sub_ln252_fu_959_p2;
    end
end

always @ (*) begin
    if ((grp_scaled_fixed2ieee_63_1_s_fu_314_ap_done == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_state10) & (grp_scaled_fixed2ieee_63_1_s_fu_314_ap_done == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (grp_scaled_fixed2ieee_63_1_s_fu_314_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (grp_scaled_fixed2ieee_63_1_s_fu_314_ap_done == 1'b1))) begin
        ap_return = bitcast_ln497_fu_1251_p1;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        fourth_order_double_sin_cos_K0_ce0 = 1'b1;
    end else begin
        fourth_order_double_sin_cos_K0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        fourth_order_double_sin_cos_K1_ce0 = 1'b1;
    end else begin
        fourth_order_double_sin_cos_K1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        fourth_order_double_sin_cos_K2_ce0 = 1'b1;
    end else begin
        fourth_order_double_sin_cos_K2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        fourth_order_double_sin_cos_K3_ce0 = 1'b1;
    end else begin
        fourth_order_double_sin_cos_K3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        fourth_order_double_sin_cos_K4_ce0 = 1'b1;
    end else begin
        fourth_order_double_sin_cos_K4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_332_p0 = zext_ln25_1_fu_773_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_332_p0 = zext_ln25_fu_732_p1;
    end else begin
        grp_fu_332_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_332_p1 = zext_ln25_reg_1379;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_332_p1 = zext_ln25_fu_732_p1;
    end else begin
        grp_fu_332_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        ref_4oPi_table_256_ce0 = 1'b1;
    end else begin
        ref_4oPi_table_256_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (grp_scaled_fixed2ieee_63_1_s_fu_314_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_fu_756_p3 = {{sin_basis_fu_748_p3}, {tmp_9_fu_708_p4}};

assign B_fu_718_p1 = x_1_fu_648_p3[55:0];

assign B_trunc_fu_722_p4 = {{x_1_fu_648_p3[55:7]}};

assign Ex_1_fu_599_p2 = (select_ln453_fu_571_p3 - zext_ln505_fu_578_p1);

assign Ex_2_fu_949_p3 = ((cos_basis_reg_1367[0:0] == 1'b1) ? 11'd0 : Ex_1_reg_1331);

assign Ex_fu_566_p2 = ($signed(din_exp_reg_1261) + $signed(11'd1027));

assign Mx_1_fu_924_p3 = ((cos_basis_reg_1367[0:0] == 1'b1) ? 63'd9223372036854775807 : Mx_reg_1324);

assign Mx_bits_1_fu_500_p2 = (124'd0 - Mx_bits_fu_454_p4);

assign Mx_bits_3_fu_506_p3 = ((and_ln451_fu_494_p2[0:0] == 1'b1) ? Mx_bits_1_fu_500_p2 : Mx_bits_fu_454_p4);

assign Mx_bits_fu_454_p4 = {{grp_fu_348_p2[166:43]}};

assign Mx_zeros_fu_562_p1 = tmp_5_fu_554_p3[6:0];

assign X_fu_417_p3 = {{1'd1}, {din_sig_reg_1268}};

assign add_ln37_1_fu_863_p2 = ($signed(add_ln37_fu_853_p2) + $signed(sext_ln37_2_fu_859_p1));

assign add_ln37_2_fu_909_p2 = (add_ln37_1_reg_1435 + zext_ln37_2_fu_905_p1);

assign add_ln37_3_fu_918_p2 = (add_ln37_2_fu_909_p2 + zext_ln37_fu_914_p1);

assign add_ln37_fu_853_p2 = ($signed(sext_ln37_fu_845_p1) + $signed(sext_ln37_1_fu_849_p1));

assign add_ln396_fu_384_p2 = ($signed(din_exp_fu_364_p4) + $signed(11'd1101));

assign addr_fu_390_p3 = ((closepath_fu_378_p2[0:0] == 1'b1) ? 11'd74 : add_ln396_fu_384_p2);

assign and_ln271_1_fu_1210_p2 = (icmp_ln271_reg_1348 & icmp_ln271_1_reg_1301);

assign and_ln271_fu_1155_p2 = (icmp_ln271_reg_1348 & icmp_ln271_1_reg_1301);

assign and_ln451_fu_494_p2 = (xor_ln451_fu_489_p2 & tmp_fu_474_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bitcast_ln497_fu_1251_p1 = t_2_fu_1241_p4;

assign closepath_fu_378_p2 = ((din_exp_fu_364_p4 < 11'd1022) ? 1'b1 : 1'b0);

assign cos_basis_fu_700_p3 = ((do_cos[0:0] == 1'b1) ? xor_ln242_fu_694_p2 : tmp_6_fu_655_p19);

assign data_1_fu_966_p1 = grp_scaled_fixed2ieee_63_1_s_fu_314_ap_return;

assign data_fu_352_p1 = t_in;

assign din_exp_fu_364_p4 = {{data_fu_352_p1[62:52]}};

assign din_sig_fu_374_p1 = data_fu_352_p1[51:0];

assign fourth_order_double_sin_cos_K0_address0 = zext_ln32_fu_764_p1;

assign fourth_order_double_sin_cos_K1_address0 = zext_ln32_fu_764_p1;

assign fourth_order_double_sin_cos_K2_address0 = zext_ln32_fu_764_p1;

assign fourth_order_double_sin_cos_K3_address0 = zext_ln32_fu_764_p1;

assign fourth_order_double_sin_cos_K4_address0 = zext_ln32_fu_764_p1;

assign grp_fu_348_p0 = {{shl_ln398_fu_427_p2[255:86]}};

assign grp_fu_348_p1 = grp_fu_348_p10;

assign grp_fu_348_p10 = X_fu_417_p3;

assign grp_scaled_fixed2ieee_63_1_s_fu_314_ap_start = grp_scaled_fixed2ieee_63_1_s_fu_314_ap_start_reg;

assign icmp_ln271_1_fu_449_p2 = ((din_sig_reg_1268 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln271_fu_619_p2 = ((din_exp_reg_1261 == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln282_fu_624_p2 = ((din_exp_reg_1261 == 11'd2047) ? 1'b1 : 1'b0);

assign index_fu_992_p3 = {{din_sign_reg_1255}, {k_1_reg_1307}};

assign k_1_fu_482_p3 = ((closepath_reg_1274[0:0] == 1'b1) ? 3'd0 : k_fu_464_p4);

assign k_fu_464_p4 = {{grp_fu_348_p2[169:167]}};

assign lshr_ln506_fu_638_p2 = Mx_reg_1324 >> zext_ln506_fu_634_p1;

assign lshr_ln_fu_885_p4 = {{mul_ln36_fu_320_p2[59:31]}};

assign mul_ln27_fu_336_p0 = zext_ln25_1_fu_773_p1;

assign mul_ln27_fu_336_p1 = zext_ln25_1_fu_773_p1;

assign mul_ln33_fu_340_p0 = mul_ln33_fu_340_p00;

assign mul_ln33_fu_340_p00 = B_reg_1374;

assign mul_ln34_fu_328_p0 = mul_ln34_fu_328_p00;

assign mul_ln34_fu_328_p00 = B_squared_reg_1384;

assign mul_ln35_fu_324_p0 = mul_ln35_fu_324_p00;

assign mul_ln35_fu_324_p00 = tmp_10_reg_1415;

assign mul_ln35_fu_324_p1 = mul_ln35_fu_324_p10;

assign mul_ln35_fu_324_p10 = fourth_order_double_sin_cos_K3_load_reg_1420;

assign mul_ln36_fu_320_p0 = mul_ln36_fu_320_p00;

assign mul_ln36_fu_320_p00 = tmp_11_reg_1425;

assign mul_ln36_fu_320_p1 = mul_ln36_fu_320_p10;

assign mul_ln36_fu_320_p10 = fourth_order_double_sin_cos_K4_load_reg_1430;

assign mul_ln37_fu_344_p1 = mul_ln37_fu_344_p10;

assign mul_ln37_fu_344_p10 = Mx_1_fu_924_p3;

assign or_ln271_fu_1228_p2 = (icmp_ln282_reg_1354 | and_ln271_fu_1155_p2);

assign ref_4oPi_table_256_address0 = zext_ln397_fu_408_p1;

assign results_exp_1_fu_1187_p3 = ((icmp_ln282_reg_1354[0:0] == 1'b1) ? 11'd2047 : results_exp_fu_978_p4);

assign results_exp_2_fu_1202_p3 = ((and_ln271_fu_1155_p2[0:0] == 1'b1) ? select_ln259_fu_1169_p3 : results_exp_1_fu_1187_p3);

assign results_exp_fu_978_p4 = {{data_1_fu_966_p1[62:52]}};

assign results_sig_1_fu_1233_p3 = ((or_ln271_fu_1228_p2[0:0] == 1'b1) ? select_ln271_fu_1220_p3 : results_sig_fu_988_p1);

assign results_sig_fu_988_p1 = data_1_fu_966_p1[51:0];

assign results_sign_1_fu_1149_p2 = (select_ln242_fu_1142_p3 | results_sign_fu_970_p3);

assign results_sign_3_fu_1164_p2 = (xor_ln278_fu_1159_p2 & din_sign_reg_1255);

assign results_sign_4_fu_1181_p2 = (xor_ln282_fu_1176_p2 & results_sign_1_fu_1149_p2);

assign results_sign_5_fu_1194_p3 = ((and_ln271_fu_1155_p2[0:0] == 1'b1) ? results_sign_3_fu_1164_p2 : results_sign_4_fu_1181_p2);

assign results_sign_fu_970_p3 = data_1_fu_966_p1[32'd63];

assign select_ln242_fu_1142_p3 = ((cos_basis_reg_1367[0:0] == 1'b1) ? tmp_8_fu_998_p35 : tmp_1_fu_1070_p35);

assign select_ln259_fu_1169_p3 = ((do_cos[0:0] == 1'b1) ? 11'd1023 : 11'd0);

assign select_ln271_fu_1220_p3 = ((xor_ln271_fu_1214_p2[0:0] == 1'b1) ? 52'd4503599627370495 : 52'd0);

assign select_ln453_fu_571_p3 = ((closepath_reg_1274[0:0] == 1'b1) ? Ex_fu_566_p2 : 11'd0);

assign select_ln506_fu_629_p3 = ((tmp_7_reg_1337[0:0] == 1'b1) ? sub_ln506_reg_1343 : Ex_1_reg_1331);

assign sext_ln252_fu_955_p1 = $signed(Ex_2_fu_949_p3);

assign sext_ln37_1_fu_849_p1 = $signed(trunc_ln_fu_796_p4);

assign sext_ln37_2_fu_859_p1 = $signed(trunc_ln1_fu_815_p4);

assign sext_ln37_fu_845_p1 = $signed(t1_1_fu_779_p3);

assign sext_ln75_fu_550_p1 = $signed(tmp_4_fu_542_p3);

assign shl_ln398_fu_427_p2 = ref_4oPi_table_256_q0 << zext_ln398_fu_424_p1;

assign shl_ln504_fu_584_p2 = Mx_bits_3_reg_1313 << zext_ln504_fu_581_p1;

assign shl_ln506_fu_643_p2 = Mx_reg_1324 << zext_ln506_fu_634_p1;

assign sin_basis_fu_748_p3 = ((do_cos[0:0] == 1'b1) ? tmp_6_fu_655_p19 : xor_ln242_fu_694_p2);

assign sub_ln252_fu_959_p2 = ($signed(12'd0) - $signed(sext_ln252_fu_955_p1));

assign sub_ln506_fu_613_p2 = (11'd0 - Ex_1_fu_599_p2);

assign t1_1_fu_779_p3 = {{fourth_order_double_sin_cos_K0_q0}, {4'd0}};

assign t_2_fu_1241_p4 = {{{results_sign_5_fu_1194_p3}, {results_exp_2_fu_1202_p3}}, {results_sig_1_fu_1233_p3}};

assign t_fu_524_p3 = {{tmp_2_fu_514_p4}, {1'd1}};

assign tmp_12_fu_895_p4 = {{mul_ln35_fu_324_p2[74:38]}};

assign tmp_1_fu_1070_p33 = 'bx;

assign tmp_2_fu_514_p4 = {{Mx_bits_3_fu_506_p3[123:63]}};

integer ap_tvar_int_0;

always @ (t_fu_524_p3) begin
    for (ap_tvar_int_0 = 62 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 61 - 0) begin
            tmp_3_fu_532_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_3_fu_532_p4[ap_tvar_int_0] = t_fu_524_p3[61 - ap_tvar_int_0];
        end
    end
end

assign tmp_4_fu_542_p3 = {{1'd1}, {tmp_3_fu_532_p4}};


always @ (sext_ln75_fu_550_p1) begin
    if (sext_ln75_fu_550_p1[0] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd0;
    end else if (sext_ln75_fu_550_p1[1] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd1;
    end else if (sext_ln75_fu_550_p1[2] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd2;
    end else if (sext_ln75_fu_550_p1[3] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd3;
    end else if (sext_ln75_fu_550_p1[4] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd4;
    end else if (sext_ln75_fu_550_p1[5] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd5;
    end else if (sext_ln75_fu_550_p1[6] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd6;
    end else if (sext_ln75_fu_550_p1[7] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd7;
    end else if (sext_ln75_fu_550_p1[8] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd8;
    end else if (sext_ln75_fu_550_p1[9] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd9;
    end else if (sext_ln75_fu_550_p1[10] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd10;
    end else if (sext_ln75_fu_550_p1[11] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd11;
    end else if (sext_ln75_fu_550_p1[12] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd12;
    end else if (sext_ln75_fu_550_p1[13] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd13;
    end else if (sext_ln75_fu_550_p1[14] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd14;
    end else if (sext_ln75_fu_550_p1[15] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd15;
    end else if (sext_ln75_fu_550_p1[16] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd16;
    end else if (sext_ln75_fu_550_p1[17] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd17;
    end else if (sext_ln75_fu_550_p1[18] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd18;
    end else if (sext_ln75_fu_550_p1[19] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd19;
    end else if (sext_ln75_fu_550_p1[20] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd20;
    end else if (sext_ln75_fu_550_p1[21] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd21;
    end else if (sext_ln75_fu_550_p1[22] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd22;
    end else if (sext_ln75_fu_550_p1[23] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd23;
    end else if (sext_ln75_fu_550_p1[24] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd24;
    end else if (sext_ln75_fu_550_p1[25] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd25;
    end else if (sext_ln75_fu_550_p1[26] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd26;
    end else if (sext_ln75_fu_550_p1[27] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd27;
    end else if (sext_ln75_fu_550_p1[28] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd28;
    end else if (sext_ln75_fu_550_p1[29] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd29;
    end else if (sext_ln75_fu_550_p1[30] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd30;
    end else if (sext_ln75_fu_550_p1[31] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd31;
    end else if (sext_ln75_fu_550_p1[32] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd32;
    end else if (sext_ln75_fu_550_p1[33] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd33;
    end else if (sext_ln75_fu_550_p1[34] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd34;
    end else if (sext_ln75_fu_550_p1[35] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd35;
    end else if (sext_ln75_fu_550_p1[36] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd36;
    end else if (sext_ln75_fu_550_p1[37] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd37;
    end else if (sext_ln75_fu_550_p1[38] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd38;
    end else if (sext_ln75_fu_550_p1[39] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd39;
    end else if (sext_ln75_fu_550_p1[40] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd40;
    end else if (sext_ln75_fu_550_p1[41] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd41;
    end else if (sext_ln75_fu_550_p1[42] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd42;
    end else if (sext_ln75_fu_550_p1[43] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd43;
    end else if (sext_ln75_fu_550_p1[44] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd44;
    end else if (sext_ln75_fu_550_p1[45] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd45;
    end else if (sext_ln75_fu_550_p1[46] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd46;
    end else if (sext_ln75_fu_550_p1[47] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd47;
    end else if (sext_ln75_fu_550_p1[48] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd48;
    end else if (sext_ln75_fu_550_p1[49] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd49;
    end else if (sext_ln75_fu_550_p1[50] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd50;
    end else if (sext_ln75_fu_550_p1[51] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd51;
    end else if (sext_ln75_fu_550_p1[52] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd52;
    end else if (sext_ln75_fu_550_p1[53] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd53;
    end else if (sext_ln75_fu_550_p1[54] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd54;
    end else if (sext_ln75_fu_550_p1[55] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd55;
    end else if (sext_ln75_fu_550_p1[56] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd56;
    end else if (sext_ln75_fu_550_p1[57] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd57;
    end else if (sext_ln75_fu_550_p1[58] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd58;
    end else if (sext_ln75_fu_550_p1[59] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd59;
    end else if (sext_ln75_fu_550_p1[60] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd60;
    end else if (sext_ln75_fu_550_p1[61] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd61;
    end else if (sext_ln75_fu_550_p1[62] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd62;
    end else if (sext_ln75_fu_550_p1[63] == 1'b1) begin
        tmp_5_fu_554_p3 = 64'd63;
    end else begin
        tmp_5_fu_554_p3 = 64'd64;
    end
end

assign tmp_6_fu_655_p17 = 'bx;

assign tmp_8_fu_998_p33 = 'bx;

assign tmp_9_fu_708_p4 = {{x_1_fu_648_p3[62:56]}};

assign tmp_fu_474_p3 = grp_fu_348_p2[32'd167];

assign tmp_s_fu_398_p4 = {{addr_fu_390_p3[10:7]}};

assign trunc_ln1_fu_815_p4 = {{mul_ln34_fu_328_p2[92:45]}};

assign trunc_ln398_fu_413_p1 = addr_fu_390_p3[6:0];

assign trunc_ln_fu_796_p4 = {{mul_ln33_fu_340_p2[107:52]}};

assign x_1_fu_648_p3 = ((tmp_7_reg_1337[0:0] == 1'b1) ? lshr_ln506_fu_638_p2 : shl_ln506_fu_643_p2);

assign xor_ln242_fu_694_p2 = (tmp_6_fu_655_p19 ^ 1'd1);

assign xor_ln271_fu_1214_p2 = (1'd1 ^ and_ln271_1_fu_1210_p2);

assign xor_ln278_fu_1159_p2 = (do_cos ^ 1'd1);

assign xor_ln282_fu_1176_p2 = (icmp_ln282_reg_1354 ^ 1'd1);

assign xor_ln451_fu_489_p2 = (closepath_reg_1274 ^ 1'd1);

assign zext_ln25_1_fu_773_p1 = B_squared_reg_1384;

assign zext_ln25_fu_732_p1 = B_trunc_fu_722_p4;

assign zext_ln32_fu_764_p1 = A_fu_756_p3;

assign zext_ln37_2_fu_905_p1 = tmp_12_fu_895_p4;

assign zext_ln37_fu_914_p1 = lshr_ln_fu_885_p4;

assign zext_ln397_fu_408_p1 = tmp_s_fu_398_p4;

assign zext_ln398_fu_424_p1 = trunc_ln398_reg_1286;

assign zext_ln504_fu_581_p1 = Mx_zeros_reg_1318;

assign zext_ln505_fu_578_p1 = Mx_zeros_reg_1318;

assign zext_ln506_fu_634_p1 = select_ln506_fu_629_p3;

always @ (posedge ap_clk) begin
    zext_ln25_reg_1379[97:49] <= 49'b0000000000000000000000000000000000000000000000000;
end

endmodule //fft1D_512_sin_or_cos_double_s
