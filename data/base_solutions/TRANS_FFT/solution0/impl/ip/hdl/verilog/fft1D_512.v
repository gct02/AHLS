// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fft1D_512_fft1D_512,hls_ip_2023_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu50-fsvh2104-2-e,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.136400,HLS_SYN_LAT=75467,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=15951,HLS_SYN_LUT=29423,HLS_VERSION=2023_2}" *)

module fft1D_512 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        work_x_address0,
        work_x_ce0,
        work_x_we0,
        work_x_d0,
        work_x_q0,
        work_x_address1,
        work_x_ce1,
        work_x_we1,
        work_x_d1,
        work_x_q1,
        work_y_address0,
        work_y_ce0,
        work_y_we0,
        work_y_d0,
        work_y_q0,
        work_y_address1,
        work_y_ce1,
        work_y_we1,
        work_y_d1,
        work_y_q1
);

parameter    ap_ST_fsm_state1 = 160'd1;
parameter    ap_ST_fsm_state2 = 160'd2;
parameter    ap_ST_fsm_state3 = 160'd4;
parameter    ap_ST_fsm_state4 = 160'd8;
parameter    ap_ST_fsm_state5 = 160'd16;
parameter    ap_ST_fsm_state6 = 160'd32;
parameter    ap_ST_fsm_state7 = 160'd64;
parameter    ap_ST_fsm_state8 = 160'd128;
parameter    ap_ST_fsm_state9 = 160'd256;
parameter    ap_ST_fsm_state10 = 160'd512;
parameter    ap_ST_fsm_state11 = 160'd1024;
parameter    ap_ST_fsm_state12 = 160'd2048;
parameter    ap_ST_fsm_state13 = 160'd4096;
parameter    ap_ST_fsm_state14 = 160'd8192;
parameter    ap_ST_fsm_state15 = 160'd16384;
parameter    ap_ST_fsm_state16 = 160'd32768;
parameter    ap_ST_fsm_state17 = 160'd65536;
parameter    ap_ST_fsm_state18 = 160'd131072;
parameter    ap_ST_fsm_state19 = 160'd262144;
parameter    ap_ST_fsm_state20 = 160'd524288;
parameter    ap_ST_fsm_state21 = 160'd1048576;
parameter    ap_ST_fsm_state22 = 160'd2097152;
parameter    ap_ST_fsm_state23 = 160'd4194304;
parameter    ap_ST_fsm_state24 = 160'd8388608;
parameter    ap_ST_fsm_state25 = 160'd16777216;
parameter    ap_ST_fsm_state26 = 160'd33554432;
parameter    ap_ST_fsm_state27 = 160'd67108864;
parameter    ap_ST_fsm_state28 = 160'd134217728;
parameter    ap_ST_fsm_state29 = 160'd268435456;
parameter    ap_ST_fsm_state30 = 160'd536870912;
parameter    ap_ST_fsm_state31 = 160'd1073741824;
parameter    ap_ST_fsm_state32 = 160'd2147483648;
parameter    ap_ST_fsm_state33 = 160'd4294967296;
parameter    ap_ST_fsm_state34 = 160'd8589934592;
parameter    ap_ST_fsm_state35 = 160'd17179869184;
parameter    ap_ST_fsm_state36 = 160'd34359738368;
parameter    ap_ST_fsm_state37 = 160'd68719476736;
parameter    ap_ST_fsm_state38 = 160'd137438953472;
parameter    ap_ST_fsm_state39 = 160'd274877906944;
parameter    ap_ST_fsm_state40 = 160'd549755813888;
parameter    ap_ST_fsm_state41 = 160'd1099511627776;
parameter    ap_ST_fsm_state42 = 160'd2199023255552;
parameter    ap_ST_fsm_state43 = 160'd4398046511104;
parameter    ap_ST_fsm_state44 = 160'd8796093022208;
parameter    ap_ST_fsm_state45 = 160'd17592186044416;
parameter    ap_ST_fsm_state46 = 160'd35184372088832;
parameter    ap_ST_fsm_state47 = 160'd70368744177664;
parameter    ap_ST_fsm_state48 = 160'd140737488355328;
parameter    ap_ST_fsm_state49 = 160'd281474976710656;
parameter    ap_ST_fsm_state50 = 160'd562949953421312;
parameter    ap_ST_fsm_state51 = 160'd1125899906842624;
parameter    ap_ST_fsm_state52 = 160'd2251799813685248;
parameter    ap_ST_fsm_state53 = 160'd4503599627370496;
parameter    ap_ST_fsm_state54 = 160'd9007199254740992;
parameter    ap_ST_fsm_state55 = 160'd18014398509481984;
parameter    ap_ST_fsm_state56 = 160'd36028797018963968;
parameter    ap_ST_fsm_state57 = 160'd72057594037927936;
parameter    ap_ST_fsm_state58 = 160'd144115188075855872;
parameter    ap_ST_fsm_state59 = 160'd288230376151711744;
parameter    ap_ST_fsm_state60 = 160'd576460752303423488;
parameter    ap_ST_fsm_state61 = 160'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 160'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 160'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 160'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 160'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 160'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 160'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 160'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 160'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 160'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 160'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 160'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 160'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 160'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 160'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 160'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 160'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 160'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 160'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 160'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 160'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 160'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 160'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 160'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 160'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 160'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 160'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 160'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 160'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 160'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 160'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 160'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 160'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 160'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 160'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 160'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 160'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 160'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 160'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 160'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 160'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 160'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 160'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 160'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 160'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 160'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 160'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 160'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 160'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 160'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 160'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 160'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 160'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 160'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 160'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 160'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 160'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 160'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 160'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 160'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 160'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 160'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 160'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 160'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 160'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 160'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 160'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 160'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 160'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 160'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 160'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 160'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 160'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 160'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 160'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 160'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 160'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 160'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 160'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 160'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 160'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 160'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 160'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 160'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 160'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 160'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 160'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 160'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 160'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 160'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 160'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 160'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 160'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 160'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 160'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 160'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 160'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 160'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 160'd365375409332725729550921208179070754913983135744;
parameter    ap_ST_fsm_state160 = 160'd730750818665451459101842416358141509827966271488;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] work_x_address0;
output   work_x_ce0;
output   work_x_we0;
output  [63:0] work_x_d0;
input  [63:0] work_x_q0;
output  [8:0] work_x_address1;
output   work_x_ce1;
output   work_x_we1;
output  [63:0] work_x_d1;
input  [63:0] work_x_q1;
output  [8:0] work_y_address0;
output   work_y_ce0;
output   work_y_we0;
output  [63:0] work_y_d0;
input  [63:0] work_y_q0;
output  [8:0] work_y_address1;
output   work_y_ce1;
output   work_y_we1;
output  [63:0] work_y_d1;
input  [63:0] work_y_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] work_x_address0;
reg work_x_ce0;
reg work_x_we0;
reg[63:0] work_x_d0;
reg[8:0] work_x_address1;
reg work_x_ce1;
reg work_x_we1;
reg[63:0] work_x_d1;
reg[8:0] work_y_address0;
reg work_y_ce0;
reg work_y_we0;
reg[63:0] work_y_d0;
reg[8:0] work_y_address1;
reg work_y_ce1;
reg work_y_we1;
reg[63:0] work_y_d1;

(* fsm_encoding = "none" *) reg   [159:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] grp_fu_1860_p2;
reg   [63:0] reg_1944;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_state135;
wire    ap_CS_fsm_state139;
wire    ap_CS_fsm_state144;
wire    ap_CS_fsm_state148;
wire    ap_CS_fsm_state155;
wire   [63:0] grp_fu_1864_p2;
reg   [63:0] reg_1955;
wire   [63:0] grp_fu_1868_p2;
reg   [63:0] reg_1966;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state147;
wire    ap_CS_fsm_state159;
wire   [63:0] grp_fu_1872_p2;
reg   [63:0] reg_1975;
wire   [63:0] grp_fu_1876_p2;
reg   [63:0] reg_1984;
wire   [63:0] grp_fu_1880_p2;
reg   [63:0] reg_1993;
wire   [63:0] grp_fu_1884_p2;
reg   [63:0] reg_2002;
wire   [63:0] grp_fu_1888_p2;
reg   [63:0] reg_2007;
reg   [63:0] reg_2012;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state91;
wire    ap_CS_fsm_state136;
wire    ap_CS_fsm_state141;
reg   [63:0] reg_2020;
reg   [63:0] reg_2028;
wire    ap_CS_fsm_state151;
reg   [63:0] reg_2037;
reg   [63:0] reg_2046;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state137;
reg   [63:0] reg_2054;
reg   [63:0] reg_2062;
reg   [63:0] reg_2068;
wire   [63:0] grp_fu_1912_p2;
reg   [63:0] reg_2074;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state140;
wire   [63:0] grp_fu_1917_p2;
reg   [63:0] reg_2081;
reg   [63:0] reg_2088;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state143;
reg   [63:0] reg_2095;
wire   [63:0] grp_fu_1924_p2;
reg   [63:0] reg_2102;
wire   [63:0] grp_fu_1929_p2;
reg   [63:0] reg_2108;
wire   [63:0] grp_fu_1934_p2;
reg   [63:0] reg_2114;
wire   [63:0] grp_fu_1939_p2;
reg   [63:0] reg_2119;
wire   [63:0] DATA_x_q1;
reg   [63:0] reg_2124;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state131;
wire   [63:0] DATA_x_q0;
reg   [63:0] reg_2130;
wire   [63:0] DATA_y_q1;
reg   [63:0] reg_2138;
wire   [63:0] DATA_y_q0;
reg   [63:0] reg_2144;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state132;
reg   [6:0] tid_11_reg_4976;
wire    ap_CS_fsm_state2;
wire  signed [6:0] xor_ln132_fu_2204_p2;
reg  signed [6:0] xor_ln132_reg_4988;
wire   [63:0] c0_x_1_fu_2239_p1;
reg   [63:0] c0_x_1_reg_5020;
wire    ap_CS_fsm_state3;
reg   [63:0] work_x_load_3_reg_5026;
wire   [63:0] c0_y_1_fu_2264_p1;
reg   [63:0] c0_y_1_reg_5041;
reg   [63:0] work_y_load_3_reg_5047;
wire    ap_CS_fsm_state4;
wire   [63:0] c0_x_3_fu_2281_p1;
wire   [63:0] bitcast_ln136_fu_2286_p1;
wire   [63:0] bitcast_ln138_fu_2302_p1;
wire   [63:0] c0_y_3_fu_2308_p1;
wire   [63:0] bitcast_ln145_fu_2313_p1;
wire   [63:0] bitcast_ln147_fu_2319_p1;
wire    ap_CS_fsm_state5;
wire   [63:0] c0_x_2_fu_2330_p1;
wire   [63:0] bitcast_ln137_fu_2349_p1;
wire   [63:0] c0_y_2_fu_2355_p1;
wire   [63:0] bitcast_ln146_fu_2361_p1;
wire   [5:0] trunc_ln153_fu_2367_p1;
reg   [5:0] trunc_ln153_reg_5162;
wire   [63:0] c0_x_fu_2370_p1;
wire    ap_CS_fsm_state6;
wire   [63:0] bitcast_ln135_fu_2376_p1;
wire   [63:0] c0_y_fu_2382_p1;
wire   [63:0] bitcast_ln144_fu_2388_p1;
wire   [63:0] bitcast_ln150_1_fu_2404_p1;
wire   [63:0] bitcast_ln150_3_fu_2419_p1;
wire   [63:0] bitcast_ln150_9_fu_2434_p1;
wire   [63:0] bitcast_ln150_11_fu_2450_p1;
wire   [63:0] bitcast_ln150_5_fu_2466_p1;
wire   [63:0] bitcast_ln150_7_fu_2481_p1;
wire   [63:0] bitcast_ln150_13_fu_2496_p1;
wire   [63:0] bitcast_ln150_15_fu_2511_p1;
wire   [63:0] bitcast_ln150_17_fu_2526_p1;
wire    ap_CS_fsm_state24;
wire   [63:0] bitcast_ln150_19_fu_2541_p1;
wire   [8:0] shl_ln_fu_2546_p3;
reg   [8:0] shl_ln_reg_5244;
wire    ap_CS_fsm_state35;
wire   [5:0] offset_fu_2652_p1;
reg   [5:0] offset_reg_5257;
wire    ap_CS_fsm_state39;
wire   [8:0] shl_ln1_fu_2656_p3;
reg   [8:0] shl_ln1_reg_5265;
wire   [8:0] zext_ln174_2_fu_2690_p1;
reg   [8:0] zext_ln174_2_reg_5292;
wire    ap_CS_fsm_state40;
wire   [7:0] zext_ln174_1_fu_2728_p1;
reg   [7:0] zext_ln174_1_reg_5308;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state42;
wire   [9:0] offset_1_fu_2889_p2;
reg   [9:0] offset_1_reg_5337;
wire    ap_CS_fsm_state44;
wire   [5:0] trunc_ln197_fu_2900_p1;
reg   [5:0] trunc_ln197_reg_5352;
wire   [8:0] shl_ln2_fu_2925_p3;
reg   [8:0] shl_ln2_reg_5369;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state47;
wire   [5:0] offset_2_fu_3083_p1;
reg   [5:0] offset_2_reg_5412;
wire    ap_CS_fsm_state49;
wire   [8:0] shl_ln3_fu_3087_p3;
reg   [8:0] shl_ln3_reg_5420;
wire   [8:0] zext_ln174_5_fu_3121_p1;
reg   [8:0] zext_ln174_5_reg_5447;
wire    ap_CS_fsm_state50;
wire   [7:0] zext_ln174_4_fu_3159_p1;
reg   [7:0] zext_ln174_4_reg_5463;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state52;
wire   [8:0] shl_ln4_fu_3290_p3;
reg   [8:0] shl_ln4_reg_5492;
wire    ap_CS_fsm_state54;
reg   [8:0] DATA_y_addr_16_reg_5502;
reg   [8:0] DATA_y_addr_17_reg_5507;
wire   [2:0] trunc_ln235_fu_3314_p1;
reg   [2:0] trunc_ln235_reg_5512;
reg   [2:0] hi_1_reg_5518;
reg   [8:0] DATA_y_addr_18_reg_5530;
wire    ap_CS_fsm_state55;
reg   [8:0] DATA_y_addr_19_reg_5535;
reg   [8:0] DATA_y_addr_20_reg_5540;
wire    ap_CS_fsm_state56;
reg   [8:0] DATA_y_addr_21_reg_5545;
reg   [8:0] DATA_y_addr_22_reg_5550;
wire    ap_CS_fsm_state57;
reg   [8:0] DATA_y_addr_23_reg_5555;
wire   [9:0] add_ln238_fu_3415_p2;
reg   [9:0] add_ln238_reg_5560;
wire    ap_CS_fsm_state59;
wire   [8:0] shl_ln5_fu_3441_p3;
reg   [8:0] shl_ln5_reg_5568;
wire    ap_CS_fsm_state66;
reg   [8:0] DATA_x_addr_25_reg_5578;
reg   [8:0] DATA_x_addr_27_reg_5584;
reg   [8:0] DATA_y_addr_25_reg_5589;
reg   [8:0] DATA_y_addr_27_reg_5595;
reg   [2:0] hi_2_reg_5600;
reg   [8:0] DATA_x_addr_29_reg_5612;
reg   [8:0] DATA_x_addr_31_reg_5618;
reg   [8:0] DATA_y_addr_29_reg_5623;
reg   [8:0] DATA_y_addr_31_reg_5629;
wire   [63:0] bitcast_ln271_1_fu_3525_p1;
wire    ap_CS_fsm_state72;
wire   [63:0] bitcast_ln271_3_fu_3540_p1;
wire   [63:0] bitcast_ln271_9_fu_3555_p1;
wire   [63:0] bitcast_ln271_11_fu_3571_p1;
reg   [8:0] DATA_x_addr_26_reg_5656;
wire    ap_CS_fsm_state73;
reg   [8:0] DATA_x_addr_30_reg_5661;
reg   [8:0] DATA_y_addr_26_reg_5667;
reg   [8:0] DATA_y_addr_30_reg_5672;
reg   [8:0] DATA_x_addr_24_reg_5678;
reg   [8:0] DATA_x_addr_28_reg_5683;
reg   [8:0] DATA_y_addr_24_reg_5689;
reg   [8:0] DATA_y_addr_28_reg_5694;
wire   [63:0] bitcast_ln271_13_fu_3625_p1;
wire    ap_CS_fsm_state80;
wire   [63:0] bitcast_ln271_15_fu_3640_p1;
wire   [63:0] bitcast_ln271_5_fu_3655_p1;
wire   [63:0] bitcast_ln271_7_fu_3670_p1;
reg   [63:0] tmp_3_reg_5720;
reg   [63:0] sub33_reg_5726;
wire   [63:0] bitcast_ln271_17_fu_3684_p1;
wire    ap_CS_fsm_state88;
wire   [63:0] bitcast_ln271_19_fu_3698_p1;
wire   [5:0] zext_ln274_fu_3703_p1;
reg   [5:0] zext_ln274_reg_5742;
wire    ap_CS_fsm_state96;
wire   [5:0] offset_3_fu_3722_p1;
reg   [5:0] offset_3_reg_5750;
wire    ap_CS_fsm_state103;
wire   [8:0] shl_ln6_fu_3726_p3;
reg   [8:0] shl_ln6_reg_5758;
wire   [8:0] zext_ln174_8_fu_3760_p1;
reg   [8:0] zext_ln174_8_reg_5785;
wire    ap_CS_fsm_state104;
wire   [7:0] zext_ln174_7_fu_3798_p1;
reg   [7:0] zext_ln174_7_reg_5801;
wire    ap_CS_fsm_state105;
wire    ap_CS_fsm_state106;
wire   [5:0] trunc_ln321_fu_3935_p1;
reg   [5:0] trunc_ln321_reg_5830;
wire    ap_CS_fsm_state108;
wire   [9:0] zext_ln321_fu_3947_p1;
reg   [9:0] zext_ln321_reg_5835;
wire   [8:0] shl_ln7_fu_3977_p3;
reg   [8:0] shl_ln7_reg_5862;
wire    ap_CS_fsm_state109;
wire    ap_CS_fsm_state110;
wire    ap_CS_fsm_state111;
wire   [5:0] offset_5_fu_4135_p1;
reg   [5:0] offset_5_reg_5905;
wire    ap_CS_fsm_state113;
wire   [8:0] shl_ln8_fu_4139_p3;
reg   [8:0] shl_ln8_reg_5913;
wire   [8:0] zext_ln174_11_fu_4173_p1;
reg   [8:0] zext_ln174_11_reg_5940;
wire    ap_CS_fsm_state114;
wire   [7:0] zext_ln174_10_fu_4211_p1;
reg   [7:0] zext_ln174_10_reg_5956;
wire    ap_CS_fsm_state115;
wire    ap_CS_fsm_state116;
wire   [5:0] trunc_ln352_fu_4338_p1;
reg   [5:0] trunc_ln352_reg_5985;
wire    ap_CS_fsm_state118;
wire   [8:0] shl_ln9_fu_4342_p3;
reg   [8:0] shl_ln9_reg_5990;
reg   [8:0] DATA_y_addr_40_reg_6000;
reg   [8:0] DATA_y_addr_41_reg_6005;
reg   [2:0] tmp_14_reg_6010;
reg   [8:0] DATA_y_addr_42_reg_6022;
wire    ap_CS_fsm_state119;
reg   [8:0] DATA_y_addr_43_reg_6027;
reg   [8:0] DATA_y_addr_44_reg_6032;
wire    ap_CS_fsm_state120;
reg   [8:0] DATA_y_addr_45_reg_6037;
reg   [8:0] DATA_y_addr_46_reg_6042;
wire    ap_CS_fsm_state121;
reg   [8:0] DATA_y_addr_47_reg_6047;
wire   [9:0] zext_ln364_fu_4452_p1;
reg   [9:0] zext_ln364_reg_6052;
wire    ap_CS_fsm_state123;
reg   [6:0] tid_21_reg_6057;
wire    ap_CS_fsm_state130;
wire   [8:0] shl_ln10_fu_4476_p3;
reg   [8:0] shl_ln10_reg_6069;
wire    ap_CS_fsm_state133;
wire    ap_CS_fsm_state134;
wire   [63:0] bitcast_ln398_1_fu_4583_p1;
wire   [63:0] bitcast_ln398_3_fu_4598_p1;
wire   [63:0] bitcast_ln398_9_fu_4613_p1;
wire   [63:0] bitcast_ln398_11_fu_4629_p1;
wire   [63:0] bitcast_ln398_5_fu_4645_p1;
wire   [63:0] bitcast_ln398_7_fu_4660_p1;
wire   [63:0] bitcast_ln398_13_fu_4675_p1;
wire   [63:0] bitcast_ln398_15_fu_4690_p1;
wire  signed [7:0] zext_ln403_cast_fu_4733_p3;
reg  signed [7:0] zext_ln403_cast_reg_6249;
wire   [63:0] bitcast_ln398_17_fu_4769_p1;
wire    ap_CS_fsm_state152;
wire   [63:0] bitcast_ln398_19_fu_4784_p1;
wire  signed [6:0] xor_ln402_fu_4789_p2;
reg  signed [6:0] xor_ln402_reg_6264;
reg   [8:0] DATA_x_address0;
reg    DATA_x_ce0;
reg    DATA_x_we0;
reg   [63:0] DATA_x_d0;
reg   [8:0] DATA_x_address1;
reg    DATA_x_ce1;
reg    DATA_x_we1;
reg   [63:0] DATA_x_d1;
reg   [8:0] DATA_y_address0;
reg    DATA_y_ce0;
reg    DATA_y_we0;
reg   [8:0] DATA_y_address1;
reg    DATA_y_ce1;
reg    DATA_y_we1;
reg   [2:0] data_x_address0;
reg    data_x_ce0;
reg    data_x_we0;
reg   [63:0] data_x_d0;
wire   [63:0] data_x_q0;
reg   [2:0] data_x_address1;
reg    data_x_ce1;
reg    data_x_we1;
wire   [63:0] data_x_q1;
reg   [2:0] data_y_address0;
reg    data_y_ce0;
reg    data_y_we0;
reg   [63:0] data_y_d0;
wire   [63:0] data_y_q0;
reg   [2:0] data_y_address1;
reg    data_y_ce1;
reg    data_y_we1;
reg   [63:0] data_y_d1;
wire   [63:0] data_y_q1;
reg   [9:0] smem_address0;
reg    smem_ce0;
reg    smem_we0;
reg   [63:0] smem_d0;
wire   [63:0] smem_q0;
reg   [9:0] smem_address1;
reg    smem_ce1;
reg    smem_we1;
reg   [63:0] smem_d1;
wire   [63:0] smem_q1;
wire    grp_twiddles8_fu_1829_ap_start;
wire    grp_twiddles8_fu_1829_ap_done;
wire    grp_twiddles8_fu_1829_ap_idle;
wire    grp_twiddles8_fu_1829_ap_ready;
wire   [2:0] grp_twiddles8_fu_1829_a_x_address0;
wire    grp_twiddles8_fu_1829_a_x_ce0;
wire    grp_twiddles8_fu_1829_a_x_we0;
wire   [63:0] grp_twiddles8_fu_1829_a_x_d0;
wire   [2:0] grp_twiddles8_fu_1829_a_y_address0;
wire    grp_twiddles8_fu_1829_a_y_ce0;
wire    grp_twiddles8_fu_1829_a_y_we0;
wire   [63:0] grp_twiddles8_fu_1829_a_y_d0;
reg   [5:0] grp_twiddles8_fu_1829_i;
reg   [9:0] grp_twiddles8_fu_1829_n;
wire    grp_loady8_fu_1853_ap_start;
wire    grp_loady8_fu_1853_ap_done;
wire    grp_loady8_fu_1853_ap_idle;
wire    grp_loady8_fu_1853_ap_ready;
wire   [2:0] grp_loady8_fu_1853_a_y_address0;
wire    grp_loady8_fu_1853_a_y_ce0;
wire    grp_loady8_fu_1853_a_y_we0;
wire   [63:0] grp_loady8_fu_1853_a_y_d0;
wire   [2:0] grp_loady8_fu_1853_a_y_address1;
wire    grp_loady8_fu_1853_a_y_ce1;
wire    grp_loady8_fu_1853_a_y_we1;
wire   [63:0] grp_loady8_fu_1853_a_y_d1;
wire   [9:0] grp_loady8_fu_1853_x_address0;
wire    grp_loady8_fu_1853_x_ce0;
wire   [9:0] grp_loady8_fu_1853_x_address1;
wire    grp_loady8_fu_1853_x_ce1;
reg   [9:0] grp_loady8_fu_1853_offset;
reg    grp_twiddles8_fu_1829_ap_start_reg;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state97;
reg    grp_loady8_fu_1853_ap_start_reg;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state124;
wire   [63:0] zext_ln132_fu_2210_p1;
wire   [0:0] icmp_ln128_fu_2192_p2;
wire   [63:0] zext_ln134_fu_2220_p1;
wire   [63:0] zext_ln136_fu_2249_p1;
wire   [63:0] zext_ln138_fu_2258_p1;
wire   [63:0] zext_ln133_fu_2275_p1;
wire   [63:0] zext_ln137_fu_2296_p1;
wire   [63:0] zext_ln128_fu_2325_p1;
wire   [63:0] zext_ln135_fu_2343_p1;
wire   [63:0] zext_ln156_fu_2553_p1;
wire   [63:0] zext_ln157_fu_2565_p1;
wire   [63:0] zext_ln158_fu_2576_p1;
wire    ap_CS_fsm_state36;
wire   [63:0] zext_ln159_fu_2587_p1;
wire   [63:0] zext_ln160_fu_2598_p1;
wire    ap_CS_fsm_state37;
wire   [63:0] zext_ln161_fu_2609_p1;
wire   [63:0] zext_ln162_fu_2620_p1;
wire    ap_CS_fsm_state38;
wire   [63:0] zext_ln163_fu_2631_p1;
wire   [63:0] zext_ln181_1_fu_2664_p1;
wire   [0:0] icmp_ln176_fu_2640_p2;
wire   [63:0] zext_ln182_1_fu_2675_p1;
wire   [63:0] zext_ln181_fu_2693_p1;
wire   [63:0] zext_ln182_fu_2703_p1;
wire   [63:0] zext_ln183_1_fu_2713_p1;
wire   [63:0] zext_ln184_1_fu_2723_p1;
wire   [63:0] zext_ln183_fu_2737_p1;
wire   [63:0] zext_ln184_fu_2747_p1;
wire   [63:0] zext_ln185_1_fu_2757_p1;
wire   [63:0] zext_ln186_fu_2767_p1;
wire   [63:0] zext_ln185_fu_2777_p1;
wire   [63:0] zext_ln186_1_fu_2791_p1;
wire   [63:0] zext_ln187_1_fu_2801_p1;
wire   [63:0] zext_ln188_1_fu_2811_p1;
wire   [63:0] zext_ln187_fu_2824_p1;
wire    ap_CS_fsm_state43;
wire   [63:0] zext_ln188_fu_2835_p1;
wire   [63:0] zext_ln197_fu_2895_p1;
wire   [0:0] icmp_ln191_fu_2843_p2;
wire   [63:0] zext_ln198_fu_2910_p1;
wire   [63:0] zext_ln197_1_fu_2932_p1;
wire   [63:0] zext_ln198_1_fu_2943_p1;
wire   [63:0] zext_ln199_fu_2953_p1;
wire   [63:0] zext_ln200_fu_2963_p1;
wire   [63:0] zext_ln199_1_fu_2973_p1;
wire   [63:0] zext_ln200_1_fu_2983_p1;
wire   [63:0] zext_ln201_fu_2993_p1;
wire   [63:0] zext_ln202_fu_3003_p1;
wire   [63:0] zext_ln201_1_fu_3013_p1;
wire   [63:0] zext_ln202_1_fu_3023_p1;
wire   [63:0] zext_ln203_fu_3033_p1;
wire   [63:0] zext_ln204_fu_3043_p1;
wire   [63:0] zext_ln203_1_fu_3053_p1;
wire    ap_CS_fsm_state48;
wire   [63:0] zext_ln204_1_fu_3063_p1;
wire   [63:0] zext_ln214_1_fu_3095_p1;
wire   [0:0] icmp_ln208_fu_3071_p2;
wire   [63:0] zext_ln215_1_fu_3106_p1;
wire   [63:0] zext_ln214_fu_3124_p1;
wire   [63:0] zext_ln215_fu_3134_p1;
wire   [63:0] zext_ln216_1_fu_3144_p1;
wire   [63:0] zext_ln217_1_fu_3154_p1;
wire   [63:0] zext_ln216_fu_3168_p1;
wire   [63:0] zext_ln217_fu_3178_p1;
wire   [63:0] zext_ln218_1_fu_3188_p1;
wire   [63:0] zext_ln219_fu_3198_p1;
wire   [63:0] zext_ln218_fu_3208_p1;
wire   [63:0] zext_ln219_1_fu_3222_p1;
wire   [63:0] zext_ln220_1_fu_3232_p1;
wire   [63:0] zext_ln221_1_fu_3242_p1;
wire   [63:0] zext_ln220_fu_3255_p1;
wire    ap_CS_fsm_state53;
wire   [63:0] zext_ln221_fu_3266_p1;
wire   [63:0] zext_ln226_fu_3298_p1;
wire   [0:0] icmp_ln224_fu_3274_p2;
wire   [63:0] zext_ln227_fu_3309_p1;
wire   [63:0] zext_ln228_fu_3343_p1;
wire   [63:0] zext_ln229_fu_3353_p1;
wire   [63:0] zext_ln230_fu_3363_p1;
wire   [63:0] zext_ln231_fu_3373_p1;
wire   [63:0] zext_ln232_fu_3383_p1;
wire   [63:0] zext_ln233_fu_3393_p1;
wire   [63:0] zext_ln253_fu_3455_p1;
wire   [0:0] icmp_ln250_fu_3425_p2;
wire   [63:0] zext_ln255_fu_3467_p1;
wire   [63:0] zext_ln257_fu_3498_p1;
wire   [63:0] zext_ln259_fu_3509_p1;
wire   [63:0] zext_ln254_fu_3582_p1;
wire   [63:0] zext_ln258_fu_3593_p1;
wire   [63:0] zext_ln252_fu_3599_p1;
wire   [63:0] zext_ln256_fu_3609_p1;
wire   [63:0] zext_ln306_1_fu_3734_p1;
wire   [0:0] icmp_ln301_fu_3710_p2;
wire   [63:0] zext_ln307_1_fu_3745_p1;
wire   [63:0] zext_ln306_fu_3763_p1;
wire   [63:0] zext_ln307_fu_3773_p1;
wire   [63:0] zext_ln308_1_fu_3783_p1;
wire   [63:0] zext_ln309_1_fu_3793_p1;
wire   [63:0] zext_ln308_fu_3807_p1;
wire   [63:0] zext_ln309_fu_3817_p1;
wire   [63:0] zext_ln310_1_fu_3827_p1;
wire   [63:0] zext_ln311_fu_3837_p1;
wire   [63:0] zext_ln310_fu_3847_p1;
wire   [63:0] zext_ln311_1_fu_3861_p1;
wire   [63:0] zext_ln312_1_fu_3871_p1;
wire   [63:0] zext_ln313_1_fu_3881_p1;
wire   [63:0] zext_ln312_fu_3894_p1;
wire    ap_CS_fsm_state107;
wire   [63:0] zext_ln313_fu_3905_p1;
wire   [63:0] zext_ln323_fu_3951_p1;
wire   [0:0] icmp_ln317_fu_3913_p2;
wire   [63:0] zext_ln324_fu_3962_p1;
wire   [63:0] zext_ln323_1_fu_3984_p1;
wire   [63:0] zext_ln324_1_fu_3995_p1;
wire   [63:0] zext_ln325_fu_4005_p1;
wire   [63:0] zext_ln326_fu_4015_p1;
wire   [63:0] zext_ln325_1_fu_4025_p1;
wire   [63:0] zext_ln326_1_fu_4035_p1;
wire   [63:0] zext_ln327_fu_4045_p1;
wire   [63:0] zext_ln328_fu_4055_p1;
wire   [63:0] zext_ln327_1_fu_4065_p1;
wire   [63:0] zext_ln328_1_fu_4075_p1;
wire   [63:0] zext_ln329_fu_4085_p1;
wire   [63:0] zext_ln330_fu_4095_p1;
wire   [63:0] zext_ln329_1_fu_4105_p1;
wire    ap_CS_fsm_state112;
wire   [63:0] zext_ln330_1_fu_4115_p1;
wire   [63:0] zext_ln340_1_fu_4147_p1;
wire   [0:0] icmp_ln334_fu_4123_p2;
wire   [63:0] zext_ln341_1_fu_4158_p1;
wire   [63:0] zext_ln340_fu_4176_p1;
wire   [63:0] zext_ln341_fu_4186_p1;
wire   [63:0] zext_ln342_1_fu_4196_p1;
wire   [63:0] zext_ln343_1_fu_4206_p1;
wire   [63:0] zext_ln342_fu_4220_p1;
wire   [63:0] zext_ln343_fu_4230_p1;
wire   [63:0] zext_ln344_1_fu_4240_p1;
wire   [63:0] zext_ln345_fu_4250_p1;
wire   [63:0] zext_ln344_fu_4260_p1;
wire   [63:0] zext_ln345_1_fu_4274_p1;
wire   [63:0] zext_ln346_1_fu_4284_p1;
wire   [63:0] zext_ln347_1_fu_4294_p1;
wire   [63:0] zext_ln346_fu_4307_p1;
wire    ap_CS_fsm_state117;
wire   [63:0] zext_ln347_fu_4318_p1;
wire   [63:0] zext_ln352_fu_4350_p1;
wire   [0:0] icmp_ln350_fu_4326_p2;
wire   [63:0] zext_ln353_fu_4361_p1;
wire   [63:0] zext_ln354_fu_4391_p1;
wire   [63:0] zext_ln355_fu_4401_p1;
wire   [63:0] zext_ln356_fu_4411_p1;
wire   [63:0] zext_ln357_fu_4421_p1;
wire   [63:0] zext_ln358_fu_4431_p1;
wire   [63:0] zext_ln359_fu_4441_p1;
wire   [63:0] zext_ln380_fu_4490_p1;
wire   [0:0] icmp_ln376_fu_4460_p2;
wire   [63:0] zext_ln382_fu_4502_p1;
wire   [63:0] zext_ln384_fu_4518_p1;
wire   [63:0] zext_ln386_fu_4529_p1;
wire   [63:0] zext_ln381_fu_4540_p1;
wire   [63:0] zext_ln385_fu_4551_p1;
wire   [63:0] zext_ln379_fu_4557_p1;
wire   [63:0] zext_ln383_fu_4567_p1;
wire   [63:0] zext_ln376_fu_4695_p1;
wire    ap_CS_fsm_state145;
wire   [63:0] zext_ln405_fu_4712_p1;
wire   [63:0] zext_ln403_fu_4740_p1;
wire   [63:0] zext_ln402_fu_4794_p1;
wire   [63:0] zext_ln406_fu_4811_p1;
wire   [63:0] zext_ln407_fu_4835_p1;
wire    ap_CS_fsm_state153;
wire   [63:0] zext_ln404_fu_4854_p1;
wire   [63:0] zext_ln408_fu_4873_p1;
wire    ap_CS_fsm_state160;
reg   [6:0] tid_fu_186;
wire   [6:0] add_ln128_fu_2198_p2;
reg   [6:0] tid_1_fu_210;
wire   [6:0] add_ln176_fu_2646_p2;
reg   [6:0] tid_2_fu_214;
wire   [6:0] add_ln191_fu_2849_p2;
reg   [6:0] tid_3_fu_218;
wire   [6:0] add_ln208_fu_3077_p2;
reg   [6:0] tid_4_fu_222;
wire   [6:0] add_ln224_fu_3280_p2;
reg   [6:0] tid_5_fu_226;
wire   [6:0] add_ln250_fu_3431_p2;
reg   [6:0] tid_6_fu_230;
wire   [6:0] add_ln301_fu_3716_p2;
reg   [6:0] tid_7_fu_234;
wire   [6:0] add_ln317_fu_3919_p2;
reg   [6:0] tid_8_fu_238;
wire   [6:0] add_ln334_fu_4129_p2;
reg   [6:0] tid_9_fu_242;
wire   [6:0] add_ln350_fu_4332_p2;
reg   [6:0] tid_10_fu_246;
wire   [6:0] add_ln376_fu_4466_p2;
wire   [63:0] bitcast_ln401_fu_4700_p1;
wire   [63:0] bitcast_ln405_fu_4718_p1;
wire   [63:0] bitcast_ln403_fu_4746_p1;
wire   [63:0] bitcast_ln402_fu_4800_p1;
wire   [63:0] bitcast_ln406_fu_4817_p1;
wire   [63:0] bitcast_ln407_fu_4841_p1;
wire   [63:0] bitcast_ln404_fu_4860_p1;
wire   [63:0] bitcast_ln408_fu_4879_p1;
wire   [63:0] bitcast_ln410_fu_4723_p1;
wire   [63:0] bitcast_ln414_fu_4728_p1;
wire   [63:0] bitcast_ln412_fu_4751_p1;
wire   [63:0] bitcast_ln411_fu_4822_p1;
wire   [63:0] bitcast_ln415_fu_4827_p1;
wire   [63:0] bitcast_ln416_fu_4846_p1;
wire   [63:0] bitcast_ln413_fu_4865_p1;
wire   [63:0] bitcast_ln417_fu_4884_p1;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state95;
wire    ap_CS_fsm_state98;
wire    ap_CS_fsm_state99;
wire    ap_CS_fsm_state100;
wire    ap_CS_fsm_state101;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state122;
wire    ap_CS_fsm_state125;
wire    ap_CS_fsm_state126;
wire    ap_CS_fsm_state127;
wire    ap_CS_fsm_state128;
wire    ap_CS_fsm_state102;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state129;
reg   [63:0] grp_fu_1860_p0;
reg   [63:0] grp_fu_1860_p1;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state92;
wire    ap_CS_fsm_state138;
wire    ap_CS_fsm_state142;
wire    ap_CS_fsm_state149;
wire    ap_CS_fsm_state156;
reg   [63:0] grp_fu_1864_p0;
reg   [63:0] grp_fu_1864_p1;
reg   [63:0] grp_fu_1868_p0;
reg   [63:0] grp_fu_1868_p1;
reg   [63:0] grp_fu_1872_p0;
reg   [63:0] grp_fu_1872_p1;
reg   [63:0] grp_fu_1876_p0;
reg   [63:0] grp_fu_1876_p1;
reg   [63:0] grp_fu_1880_p0;
reg   [63:0] grp_fu_1880_p1;
reg   [63:0] grp_fu_1884_p0;
reg   [63:0] grp_fu_1884_p1;
reg   [63:0] grp_fu_1888_p0;
reg   [63:0] grp_fu_1888_p1;
reg   [63:0] grp_fu_1912_p0;
reg   [63:0] grp_fu_1912_p1;
wire    ap_CS_fsm_state76;
reg   [63:0] grp_fu_1917_p0;
reg   [63:0] grp_fu_1917_p1;
wire  signed [7:0] sext_ln134_fu_2216_p1;
wire   [8:0] zext_ln128_1_fu_2236_p1;
wire   [8:0] add_ln136_fu_2243_p2;
wire  signed [8:0] sext_ln138_fu_2255_p1;
wire  signed [7:0] zext_ln133_cast_fu_2268_p3;
wire  signed [8:0] sext_ln137_fu_2292_p1;
wire   [8:0] zext_ln135_cast_fu_2336_p3;
wire   [63:0] bitcast_ln150_fu_2394_p1;
wire   [63:0] xor_ln150_fu_2398_p2;
wire   [63:0] bitcast_ln150_2_fu_2409_p1;
wire   [63:0] xor_ln150_1_fu_2413_p2;
wire   [63:0] bitcast_ln150_8_fu_2424_p1;
wire   [63:0] xor_ln150_4_fu_2428_p2;
wire   [63:0] bitcast_ln150_10_fu_2440_p1;
wire   [63:0] xor_ln150_5_fu_2444_p2;
wire   [63:0] bitcast_ln150_4_fu_2456_p1;
wire   [63:0] xor_ln150_2_fu_2460_p2;
wire   [63:0] bitcast_ln150_6_fu_2471_p1;
wire   [63:0] xor_ln150_3_fu_2475_p2;
wire   [63:0] bitcast_ln150_12_fu_2486_p1;
wire   [63:0] xor_ln150_6_fu_2490_p2;
wire   [63:0] bitcast_ln150_14_fu_2501_p1;
wire   [63:0] xor_ln150_7_fu_2505_p2;
wire   [63:0] bitcast_ln150_16_fu_2516_p1;
wire   [63:0] xor_ln150_8_fu_2520_p2;
wire   [63:0] bitcast_ln150_18_fu_2531_p1;
wire   [63:0] xor_ln150_9_fu_2535_p2;
wire   [8:0] or_ln157_fu_2559_p2;
wire   [8:0] or_ln158_fu_2571_p2;
wire   [8:0] or_ln159_fu_2582_p2;
wire   [8:0] or_ln160_fu_2593_p2;
wire   [8:0] or_ln161_fu_2604_p2;
wire   [8:0] or_ln162_fu_2615_p2;
wire   [8:0] or_ln163_fu_2626_p2;
wire   [8:0] or_ln182_fu_2669_p2;
wire   [8:0] add_ln182_fu_2697_p2;
wire   [8:0] or_ln183_fu_2708_p2;
wire   [8:0] or_ln184_fu_2718_p2;
wire   [7:0] add_ln183_fu_2731_p2;
wire   [8:0] add_ln184_fu_2742_p2;
wire   [8:0] or_ln185_fu_2752_p2;
wire   [8:0] or_ln186_fu_2762_p2;
wire   [7:0] add_ln185_fu_2772_p2;
wire   [7:0] add_ln186_fu_2782_p2;
wire  signed [8:0] sext_ln186_fu_2787_p1;
wire   [8:0] or_ln187_fu_2796_p2;
wire   [8:0] or_ln188_fu_2806_p2;
wire   [8:0] add_ln187_fu_2819_p2;
wire   [9:0] zext_ln174_fu_2816_p1;
wire   [9:0] add_ln188_fu_2829_p2;
wire   [2:0] hi_fu_2859_p4;
wire   [2:0] trunc_ln193_fu_2855_p1;
wire   [8:0] or_ln_fu_2873_p5;
wire   [9:0] zext_ln195_fu_2885_p1;
wire   [9:0] zext_ln115_fu_2869_p1;
wire   [9:0] add_ln198_fu_2904_p2;
wire   [8:0] or_ln198_fu_2937_p2;
wire   [9:0] add_ln199_fu_2948_p2;
wire   [9:0] add_ln200_fu_2958_p2;
wire   [8:0] or_ln199_fu_2968_p2;
wire   [8:0] or_ln200_fu_2978_p2;
wire   [9:0] add_ln201_fu_2988_p2;
wire   [9:0] add_ln202_fu_2998_p2;
wire   [8:0] or_ln201_fu_3008_p2;
wire   [8:0] or_ln202_fu_3018_p2;
wire   [9:0] add_ln203_fu_3028_p2;
wire   [9:0] add_ln204_fu_3038_p2;
wire   [8:0] or_ln203_fu_3048_p2;
wire   [8:0] or_ln204_fu_3058_p2;
wire   [8:0] or_ln215_fu_3100_p2;
wire   [8:0] add_ln215_fu_3128_p2;
wire   [8:0] or_ln216_fu_3139_p2;
wire   [8:0] or_ln217_fu_3149_p2;
wire   [7:0] add_ln216_fu_3162_p2;
wire   [8:0] add_ln217_fu_3173_p2;
wire   [8:0] or_ln218_fu_3183_p2;
wire   [8:0] or_ln219_fu_3193_p2;
wire   [7:0] add_ln218_fu_3203_p2;
wire   [7:0] add_ln219_fu_3213_p2;
wire  signed [8:0] sext_ln219_fu_3218_p1;
wire   [8:0] or_ln220_fu_3227_p2;
wire   [8:0] or_ln221_fu_3237_p2;
wire   [8:0] add_ln220_fu_3250_p2;
wire   [9:0] zext_ln174_3_fu_3247_p1;
wire   [9:0] add_ln221_fu_3260_p2;
wire   [5:0] trunc_ln226_fu_3286_p1;
wire   [8:0] or_ln227_fu_3303_p2;
wire   [8:0] or_ln228_fu_3338_p2;
wire   [8:0] or_ln229_fu_3348_p2;
wire   [8:0] or_ln230_fu_3358_p2;
wire   [8:0] or_ln231_fu_3368_p2;
wire   [8:0] or_ln232_fu_3378_p2;
wire   [8:0] or_ln233_fu_3388_p2;
wire   [8:0] or_ln1_fu_3401_p5;
wire   [9:0] zext_ln238_fu_3411_p1;
wire   [9:0] zext_ln115_1_fu_3398_p1;
wire   [5:0] trunc_ln252_fu_3437_p1;
wire   [8:0] or_ln253_fu_3449_p2;
wire   [8:0] or_ln255_fu_3461_p2;
wire   [8:0] or_ln257_fu_3493_p2;
wire   [8:0] or_ln259_fu_3504_p2;
wire   [63:0] bitcast_ln271_fu_3515_p1;
wire   [63:0] xor_ln271_fu_3519_p2;
wire   [63:0] bitcast_ln271_2_fu_3530_p1;
wire   [63:0] xor_ln271_1_fu_3534_p2;
wire   [63:0] bitcast_ln271_8_fu_3545_p1;
wire   [63:0] xor_ln271_4_fu_3549_p2;
wire   [63:0] bitcast_ln271_10_fu_3561_p1;
wire   [63:0] xor_ln271_5_fu_3565_p2;
wire   [8:0] or_ln254_fu_3577_p2;
wire   [8:0] or_ln258_fu_3588_p2;
wire   [8:0] or_ln256_fu_3604_p2;
wire   [63:0] bitcast_ln271_12_fu_3615_p1;
wire   [63:0] xor_ln271_6_fu_3619_p2;
wire   [63:0] bitcast_ln271_14_fu_3630_p1;
wire   [63:0] xor_ln271_7_fu_3634_p2;
wire   [63:0] bitcast_ln271_4_fu_3645_p1;
wire   [63:0] xor_ln271_2_fu_3649_p2;
wire   [63:0] bitcast_ln271_6_fu_3660_p1;
wire   [63:0] xor_ln271_3_fu_3664_p2;
wire   [63:0] bitcast_ln271_16_fu_3675_p1;
wire   [63:0] xor_ln271_8_fu_3678_p2;
wire   [63:0] bitcast_ln271_18_fu_3689_p1;
wire   [63:0] xor_ln271_9_fu_3692_p2;
wire   [8:0] or_ln307_fu_3739_p2;
wire   [8:0] add_ln307_fu_3767_p2;
wire   [8:0] or_ln308_fu_3778_p2;
wire   [8:0] or_ln309_fu_3788_p2;
wire   [7:0] add_ln308_fu_3801_p2;
wire   [8:0] add_ln309_fu_3812_p2;
wire   [8:0] or_ln310_fu_3822_p2;
wire   [8:0] or_ln311_fu_3832_p2;
wire   [7:0] add_ln310_fu_3842_p2;
wire   [7:0] add_ln311_fu_3852_p2;
wire  signed [8:0] sext_ln311_fu_3857_p1;
wire   [8:0] or_ln312_fu_3866_p2;
wire   [8:0] or_ln313_fu_3876_p2;
wire   [8:0] add_ln312_fu_3889_p2;
wire   [9:0] zext_ln174_6_fu_3886_p1;
wire   [9:0] add_ln313_fu_3899_p2;
wire   [2:0] tmp_13_fu_3925_p4;
wire   [8:0] offset_4_fu_3939_p3;
wire   [9:0] add_ln324_fu_3956_p2;
wire   [8:0] or_ln324_fu_3989_p2;
wire   [9:0] add_ln325_fu_4000_p2;
wire   [9:0] add_ln326_fu_4010_p2;
wire   [8:0] or_ln325_fu_4020_p2;
wire   [8:0] or_ln326_fu_4030_p2;
wire   [9:0] add_ln327_fu_4040_p2;
wire   [9:0] add_ln328_fu_4050_p2;
wire   [8:0] or_ln327_fu_4060_p2;
wire   [8:0] or_ln328_fu_4070_p2;
wire   [9:0] add_ln329_fu_4080_p2;
wire   [9:0] add_ln330_fu_4090_p2;
wire   [8:0] or_ln329_fu_4100_p2;
wire   [8:0] or_ln330_fu_4110_p2;
wire   [8:0] or_ln341_fu_4152_p2;
wire   [8:0] add_ln341_fu_4180_p2;
wire   [8:0] or_ln342_fu_4191_p2;
wire   [8:0] or_ln343_fu_4201_p2;
wire   [7:0] add_ln342_fu_4214_p2;
wire   [8:0] add_ln343_fu_4225_p2;
wire   [8:0] or_ln344_fu_4235_p2;
wire   [8:0] or_ln345_fu_4245_p2;
wire   [7:0] add_ln344_fu_4255_p2;
wire   [7:0] add_ln345_fu_4265_p2;
wire  signed [8:0] sext_ln345_fu_4270_p1;
wire   [8:0] or_ln346_fu_4279_p2;
wire   [8:0] or_ln347_fu_4289_p2;
wire   [8:0] add_ln346_fu_4302_p2;
wire   [9:0] zext_ln174_9_fu_4299_p1;
wire   [9:0] add_ln347_fu_4312_p2;
wire   [8:0] or_ln353_fu_4355_p2;
wire   [8:0] or_ln354_fu_4386_p2;
wire   [8:0] or_ln355_fu_4396_p2;
wire   [8:0] or_ln356_fu_4406_p2;
wire   [8:0] or_ln357_fu_4416_p2;
wire   [8:0] or_ln358_fu_4426_p2;
wire   [8:0] or_ln359_fu_4436_p2;
wire   [8:0] tmp_s_fu_4446_p3;
wire   [5:0] trunc_ln379_fu_4472_p1;
wire   [8:0] or_ln380_fu_4484_p2;
wire   [8:0] or_ln382_fu_4496_p2;
wire   [8:0] or_ln384_fu_4513_p2;
wire   [8:0] or_ln386_fu_4524_p2;
wire   [8:0] or_ln381_fu_4535_p2;
wire   [8:0] or_ln385_fu_4546_p2;
wire   [8:0] or_ln383_fu_4562_p2;
wire   [63:0] bitcast_ln398_fu_4573_p1;
wire   [63:0] xor_ln398_fu_4577_p2;
wire   [63:0] bitcast_ln398_2_fu_4588_p1;
wire   [63:0] xor_ln398_1_fu_4592_p2;
wire   [63:0] bitcast_ln398_8_fu_4603_p1;
wire   [63:0] xor_ln398_4_fu_4607_p2;
wire   [63:0] bitcast_ln398_10_fu_4619_p1;
wire   [63:0] xor_ln398_5_fu_4623_p2;
wire   [63:0] bitcast_ln398_4_fu_4635_p1;
wire   [63:0] xor_ln398_2_fu_4639_p2;
wire   [63:0] bitcast_ln398_6_fu_4650_p1;
wire   [63:0] xor_ln398_3_fu_4654_p2;
wire   [63:0] bitcast_ln398_12_fu_4665_p1;
wire   [63:0] xor_ln398_6_fu_4669_p2;
wire   [63:0] bitcast_ln398_14_fu_4680_p1;
wire   [63:0] xor_ln398_7_fu_4684_p2;
wire   [8:0] zext_ln405_cast_fu_4705_p3;
wire   [63:0] bitcast_ln398_16_fu_4759_p1;
wire   [63:0] xor_ln398_8_fu_4763_p2;
wire   [63:0] bitcast_ln398_18_fu_4774_p1;
wire   [63:0] xor_ln398_9_fu_4778_p2;
wire   [8:0] zext_ln376_1_fu_4756_p1;
wire   [8:0] add_ln406_fu_4805_p2;
wire  signed [8:0] sext_ln407_fu_4832_p1;
wire  signed [7:0] sext_ln404_fu_4851_p1;
wire  signed [8:0] sext_ln408_fu_4870_p1;
reg   [1:0] grp_fu_1860_opcode;
reg   [1:0] grp_fu_1864_opcode;
reg   [1:0] grp_fu_1868_opcode;
reg   [1:0] grp_fu_1872_opcode;
reg   [1:0] grp_fu_1876_opcode;
reg   [1:0] grp_fu_1880_opcode;
reg   [159:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
reg    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
reg    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
wire    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
wire    ap_ST_fsm_state78_blk;
wire    ap_ST_fsm_state79_blk;
wire    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
wire    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
wire    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
wire    ap_ST_fsm_state86_blk;
wire    ap_ST_fsm_state87_blk;
wire    ap_ST_fsm_state88_blk;
wire    ap_ST_fsm_state89_blk;
wire    ap_ST_fsm_state90_blk;
wire    ap_ST_fsm_state91_blk;
wire    ap_ST_fsm_state92_blk;
wire    ap_ST_fsm_state93_blk;
wire    ap_ST_fsm_state94_blk;
wire    ap_ST_fsm_state95_blk;
wire    ap_ST_fsm_state96_blk;
reg    ap_ST_fsm_state97_blk;
wire    ap_ST_fsm_state98_blk;
wire    ap_ST_fsm_state99_blk;
wire    ap_ST_fsm_state100_blk;
wire    ap_ST_fsm_state101_blk;
wire    ap_ST_fsm_state102_blk;
wire    ap_ST_fsm_state103_blk;
wire    ap_ST_fsm_state104_blk;
wire    ap_ST_fsm_state105_blk;
wire    ap_ST_fsm_state106_blk;
wire    ap_ST_fsm_state107_blk;
wire    ap_ST_fsm_state108_blk;
wire    ap_ST_fsm_state109_blk;
wire    ap_ST_fsm_state110_blk;
wire    ap_ST_fsm_state111_blk;
wire    ap_ST_fsm_state112_blk;
wire    ap_ST_fsm_state113_blk;
wire    ap_ST_fsm_state114_blk;
wire    ap_ST_fsm_state115_blk;
wire    ap_ST_fsm_state116_blk;
wire    ap_ST_fsm_state117_blk;
wire    ap_ST_fsm_state118_blk;
wire    ap_ST_fsm_state119_blk;
wire    ap_ST_fsm_state120_blk;
wire    ap_ST_fsm_state121_blk;
wire    ap_ST_fsm_state122_blk;
wire    ap_ST_fsm_state123_blk;
reg    ap_ST_fsm_state124_blk;
wire    ap_ST_fsm_state125_blk;
wire    ap_ST_fsm_state126_blk;
wire    ap_ST_fsm_state127_blk;
wire    ap_ST_fsm_state128_blk;
wire    ap_ST_fsm_state129_blk;
wire    ap_ST_fsm_state130_blk;
wire    ap_ST_fsm_state131_blk;
wire    ap_ST_fsm_state132_blk;
wire    ap_ST_fsm_state133_blk;
wire    ap_ST_fsm_state134_blk;
wire    ap_ST_fsm_state135_blk;
wire    ap_ST_fsm_state136_blk;
wire    ap_ST_fsm_state137_blk;
wire    ap_ST_fsm_state138_blk;
wire    ap_ST_fsm_state139_blk;
wire    ap_ST_fsm_state140_blk;
wire    ap_ST_fsm_state141_blk;
wire    ap_ST_fsm_state142_blk;
wire    ap_ST_fsm_state143_blk;
wire    ap_ST_fsm_state144_blk;
wire    ap_ST_fsm_state145_blk;
wire    ap_ST_fsm_state146_blk;
wire    ap_ST_fsm_state147_blk;
wire    ap_ST_fsm_state148_blk;
wire    ap_ST_fsm_state149_blk;
wire    ap_ST_fsm_state150_blk;
wire    ap_ST_fsm_state151_blk;
wire    ap_ST_fsm_state152_blk;
wire    ap_ST_fsm_state153_blk;
wire    ap_ST_fsm_state154_blk;
wire    ap_ST_fsm_state155_blk;
wire    ap_ST_fsm_state156_blk;
wire    ap_ST_fsm_state157_blk;
wire    ap_ST_fsm_state158_blk;
wire    ap_ST_fsm_state159_blk;
wire    ap_ST_fsm_state160_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 160'd1;
#0 grp_twiddles8_fu_1829_ap_start_reg = 1'b0;
#0 grp_loady8_fu_1853_ap_start_reg = 1'b0;
#0 tid_fu_186 = 7'd0;
#0 tid_1_fu_210 = 7'd0;
#0 tid_2_fu_214 = 7'd0;
#0 tid_3_fu_218 = 7'd0;
#0 tid_4_fu_222 = 7'd0;
#0 tid_5_fu_226 = 7'd0;
#0 tid_6_fu_230 = 7'd0;
#0 tid_7_fu_234 = 7'd0;
#0 tid_8_fu_238 = 7'd0;
#0 tid_9_fu_242 = 7'd0;
#0 tid_10_fu_246 = 7'd0;
end

fft1D_512_DATA_x_RAM_AUTO_1R1W #(
    .DataWidth( 64 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
DATA_x_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(DATA_x_address0),
    .ce0(DATA_x_ce0),
    .we0(DATA_x_we0),
    .d0(DATA_x_d0),
    .q0(DATA_x_q0),
    .address1(DATA_x_address1),
    .ce1(DATA_x_ce1),
    .we1(DATA_x_we1),
    .d1(DATA_x_d1),
    .q1(DATA_x_q1)
);

fft1D_512_DATA_x_RAM_AUTO_1R1W #(
    .DataWidth( 64 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
DATA_y_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(DATA_y_address0),
    .ce0(DATA_y_ce0),
    .we0(DATA_y_we0),
    .d0(data_y_q0),
    .q0(DATA_y_q0),
    .address1(DATA_y_address1),
    .ce1(DATA_y_ce1),
    .we1(DATA_y_we1),
    .d1(data_y_q1),
    .q1(DATA_y_q1)
);

fft1D_512_data_x_RAM_AUTO_1R1W_x #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
data_x_U_x(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_x_address0),
    .ce0(data_x_ce0),
    .we0(data_x_we0),
    .d0(data_x_d0),
    .q0(data_x_q0),
    .address1(data_x_address1),
    .ce1(data_x_ce1),
    .we1(data_x_we1),
    .d1(grp_fu_1860_p2),
    .q1(data_x_q1)
);

fft1D_512_data_x_RAM_AUTO_1R1W_x #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
data_y_U_x(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_y_address0),
    .ce0(data_y_ce0),
    .we0(data_y_we0),
    .d0(data_y_d0),
    .q0(data_y_q0),
    .address1(data_y_address1),
    .ce1(data_y_ce1),
    .we1(data_y_we1),
    .d1(data_y_d1),
    .q1(data_y_q1)
);

fft1D_512_smem_RAM_AUTO_1R1W #(
    .DataWidth( 64 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
smem_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(smem_address0),
    .ce0(smem_ce0),
    .we0(smem_we0),
    .d0(smem_d0),
    .q0(smem_q0),
    .address1(smem_address1),
    .ce1(smem_ce1),
    .we1(smem_we1),
    .d1(smem_d1),
    .q1(smem_q1)
);

fft1D_512_twiddles8 grp_twiddles8_fu_1829(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_twiddles8_fu_1829_ap_start),
    .ap_done(grp_twiddles8_fu_1829_ap_done),
    .ap_idle(grp_twiddles8_fu_1829_ap_idle),
    .ap_ready(grp_twiddles8_fu_1829_ap_ready),
    .a_x_address0(grp_twiddles8_fu_1829_a_x_address0),
    .a_x_ce0(grp_twiddles8_fu_1829_a_x_ce0),
    .a_x_we0(grp_twiddles8_fu_1829_a_x_we0),
    .a_x_d0(grp_twiddles8_fu_1829_a_x_d0),
    .a_x_q0(data_x_q0),
    .a_y_address0(grp_twiddles8_fu_1829_a_y_address0),
    .a_y_ce0(grp_twiddles8_fu_1829_a_y_ce0),
    .a_y_we0(grp_twiddles8_fu_1829_a_y_we0),
    .a_y_d0(grp_twiddles8_fu_1829_a_y_d0),
    .a_y_q0(data_y_q0),
    .i(grp_twiddles8_fu_1829_i),
    .n(grp_twiddles8_fu_1829_n)
);

fft1D_512_loady8 grp_loady8_fu_1853(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_loady8_fu_1853_ap_start),
    .ap_done(grp_loady8_fu_1853_ap_done),
    .ap_idle(grp_loady8_fu_1853_ap_idle),
    .ap_ready(grp_loady8_fu_1853_ap_ready),
    .a_y_address0(grp_loady8_fu_1853_a_y_address0),
    .a_y_ce0(grp_loady8_fu_1853_a_y_ce0),
    .a_y_we0(grp_loady8_fu_1853_a_y_we0),
    .a_y_d0(grp_loady8_fu_1853_a_y_d0),
    .a_y_address1(grp_loady8_fu_1853_a_y_address1),
    .a_y_ce1(grp_loady8_fu_1853_a_y_ce1),
    .a_y_we1(grp_loady8_fu_1853_a_y_we1),
    .a_y_d1(grp_loady8_fu_1853_a_y_d1),
    .x_address0(grp_loady8_fu_1853_x_address0),
    .x_ce0(grp_loady8_fu_1853_x_ce0),
    .x_q0(smem_q0),
    .x_address1(grp_loady8_fu_1853_x_address1),
    .x_ce1(grp_loady8_fu_1853_x_ce1),
    .x_q1(smem_q1),
    .offset(grp_loady8_fu_1853_offset)
);

fft1D_512_dadddsub_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_4_full_dsp_1_U84(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1860_p0),
    .din1(grp_fu_1860_p1),
    .opcode(grp_fu_1860_opcode),
    .ce(1'b1),
    .dout(grp_fu_1860_p2)
);

fft1D_512_dadddsub_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_4_full_dsp_1_U85(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1864_p0),
    .din1(grp_fu_1864_p1),
    .opcode(grp_fu_1864_opcode),
    .ce(1'b1),
    .dout(grp_fu_1864_p2)
);

fft1D_512_dadddsub_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_4_full_dsp_1_U86(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1868_p0),
    .din1(grp_fu_1868_p1),
    .opcode(grp_fu_1868_opcode),
    .ce(1'b1),
    .dout(grp_fu_1868_p2)
);

fft1D_512_dadddsub_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_4_full_dsp_1_U87(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1872_p0),
    .din1(grp_fu_1872_p1),
    .opcode(grp_fu_1872_opcode),
    .ce(1'b1),
    .dout(grp_fu_1872_p2)
);

fft1D_512_dadddsub_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_4_full_dsp_1_U88(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1876_p0),
    .din1(grp_fu_1876_p1),
    .opcode(grp_fu_1876_opcode),
    .ce(1'b1),
    .dout(grp_fu_1876_p2)
);

fft1D_512_dadddsub_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_4_full_dsp_1_U89(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1880_p0),
    .din1(grp_fu_1880_p1),
    .opcode(grp_fu_1880_opcode),
    .ce(1'b1),
    .dout(grp_fu_1880_p2)
);

fft1D_512_dsub_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsub_64ns_64ns_64_4_full_dsp_1_U90(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1884_p0),
    .din1(grp_fu_1884_p1),
    .ce(1'b1),
    .dout(grp_fu_1884_p2)
);

fft1D_512_dsub_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsub_64ns_64ns_64_4_full_dsp_1_U91(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1888_p0),
    .din1(grp_fu_1888_p1),
    .ce(1'b1),
    .dout(grp_fu_1888_p2)
);

fft1D_512_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U92(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1912_p0),
    .din1(grp_fu_1912_p1),
    .ce(1'b1),
    .dout(grp_fu_1912_p2)
);

fft1D_512_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U93(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1917_p0),
    .din1(grp_fu_1917_p1),
    .ce(1'b1),
    .dout(grp_fu_1917_p2)
);

fft1D_512_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U94(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_1966),
    .din1(64'd4604544271108800512),
    .ce(1'b1),
    .dout(grp_fu_1924_p2)
);

fft1D_512_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U95(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_1975),
    .din1(64'd4604544271108800512),
    .ce(1'b1),
    .dout(grp_fu_1929_p2)
);

fft1D_512_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U96(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_2002),
    .din1(64'd0),
    .ce(1'b1),
    .dout(grp_fu_1934_p2)
);

fft1D_512_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U97(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_2007),
    .din1(64'd0),
    .ce(1'b1),
    .dout(grp_fu_1939_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_loady8_fu_1853_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state123))) begin
            grp_loady8_fu_1853_ap_start_reg <= 1'b1;
        end else if ((grp_loady8_fu_1853_ap_ready == 1'b1)) begin
            grp_loady8_fu_1853_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_twiddles8_fu_1829_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state32))) begin
            grp_twiddles8_fu_1829_ap_start_reg <= 1'b1;
        end else if ((grp_twiddles8_fu_1829_ap_ready == 1'b1)) begin
            grp_twiddles8_fu_1829_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state118) & (icmp_ln350_fu_4326_p2 == 1'd1))) begin
        tid_10_fu_246 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state130) & (icmp_ln376_fu_4460_p2 == 1'd0))) begin
        tid_10_fu_246 <= add_ln376_fu_4466_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln128_fu_2192_p2 == 1'd1))) begin
        tid_1_fu_210 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state39) & (icmp_ln176_fu_2640_p2 == 1'd0))) begin
        tid_1_fu_210 <= add_ln176_fu_2646_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) & (icmp_ln176_fu_2640_p2 == 1'd1))) begin
        tid_2_fu_214 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state44) & (icmp_ln191_fu_2843_p2 == 1'd0))) begin
        tid_2_fu_214 <= add_ln191_fu_2849_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) & (icmp_ln191_fu_2843_p2 == 1'd1))) begin
        tid_3_fu_218 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state49) & (icmp_ln208_fu_3071_p2 == 1'd0))) begin
        tid_3_fu_218 <= add_ln208_fu_3077_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) & (icmp_ln208_fu_3071_p2 == 1'd1))) begin
        tid_4_fu_222 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state54) & (icmp_ln224_fu_3274_p2 == 1'd0))) begin
        tid_4_fu_222 <= add_ln224_fu_3280_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state54) & (icmp_ln224_fu_3274_p2 == 1'd1))) begin
        tid_5_fu_226 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state66) & (icmp_ln250_fu_3425_p2 == 1'd0))) begin
        tid_5_fu_226 <= add_ln250_fu_3431_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state66) & (icmp_ln250_fu_3425_p2 == 1'd1))) begin
        tid_6_fu_230 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state103) & (icmp_ln301_fu_3710_p2 == 1'd0))) begin
        tid_6_fu_230 <= add_ln301_fu_3716_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state103) & (icmp_ln301_fu_3710_p2 == 1'd1))) begin
        tid_7_fu_234 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state108) & (icmp_ln317_fu_3913_p2 == 1'd0))) begin
        tid_7_fu_234 <= add_ln317_fu_3919_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state108) & (icmp_ln317_fu_3913_p2 == 1'd1))) begin
        tid_8_fu_238 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state113) & (icmp_ln334_fu_4123_p2 == 1'd0))) begin
        tid_8_fu_238 <= add_ln334_fu_4129_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state113) & (icmp_ln334_fu_4123_p2 == 1'd1))) begin
        tid_9_fu_242 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state118) & (icmp_ln350_fu_4326_p2 == 1'd0))) begin
        tid_9_fu_242 <= add_ln350_fu_4332_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tid_fu_186 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln128_fu_2192_p2 == 1'd0))) begin
        tid_fu_186 <= add_ln128_fu_2198_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        DATA_x_addr_24_reg_5678[8 : 3] <= zext_ln252_fu_3599_p1[8 : 3];
        DATA_x_addr_28_reg_5683[8 : 3] <= zext_ln256_fu_3609_p1[8 : 3];
        DATA_y_addr_24_reg_5689[8 : 3] <= zext_ln252_fu_3599_p1[8 : 3];
        DATA_y_addr_28_reg_5694[8 : 3] <= zext_ln256_fu_3609_p1[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        DATA_x_addr_25_reg_5578[8 : 3] <= zext_ln253_fu_3455_p1[8 : 3];
        DATA_x_addr_27_reg_5584[8 : 3] <= zext_ln255_fu_3467_p1[8 : 3];
        DATA_y_addr_25_reg_5589[8 : 3] <= zext_ln253_fu_3455_p1[8 : 3];
        DATA_y_addr_27_reg_5595[8 : 3] <= zext_ln255_fu_3467_p1[8 : 3];
        hi_2_reg_5600 <= {{tid_5_fu_226[5:3]}};
        shl_ln5_reg_5568[8 : 3] <= shl_ln5_fu_3441_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        DATA_x_addr_26_reg_5656[8 : 3] <= zext_ln254_fu_3582_p1[8 : 3];
        DATA_x_addr_30_reg_5661[8 : 3] <= zext_ln258_fu_3593_p1[8 : 3];
        DATA_y_addr_26_reg_5667[8 : 3] <= zext_ln254_fu_3582_p1[8 : 3];
        DATA_y_addr_30_reg_5672[8 : 3] <= zext_ln258_fu_3593_p1[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        DATA_x_addr_29_reg_5612[8 : 3] <= zext_ln257_fu_3498_p1[8 : 3];
        DATA_x_addr_31_reg_5618[8 : 3] <= zext_ln259_fu_3509_p1[8 : 3];
        DATA_y_addr_29_reg_5623[8 : 3] <= zext_ln257_fu_3498_p1[8 : 3];
        DATA_y_addr_31_reg_5629[8 : 3] <= zext_ln259_fu_3509_p1[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        DATA_y_addr_16_reg_5502[8 : 3] <= zext_ln226_fu_3298_p1[8 : 3];
        DATA_y_addr_17_reg_5507[8 : 3] <= zext_ln227_fu_3309_p1[8 : 3];
        hi_1_reg_5518 <= {{tid_4_fu_222[5:3]}};
        shl_ln4_reg_5492[8 : 3] <= shl_ln4_fu_3290_p3[8 : 3];
        trunc_ln235_reg_5512 <= trunc_ln235_fu_3314_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        DATA_y_addr_18_reg_5530[8 : 3] <= zext_ln228_fu_3343_p1[8 : 3];
        DATA_y_addr_19_reg_5535[8 : 3] <= zext_ln229_fu_3353_p1[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        DATA_y_addr_20_reg_5540[8 : 3] <= zext_ln230_fu_3363_p1[8 : 3];
        DATA_y_addr_21_reg_5545[8 : 3] <= zext_ln231_fu_3373_p1[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        DATA_y_addr_22_reg_5550[8 : 3] <= zext_ln232_fu_3383_p1[8 : 3];
        DATA_y_addr_23_reg_5555[8 : 3] <= zext_ln233_fu_3393_p1[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state118)) begin
        DATA_y_addr_40_reg_6000[8 : 3] <= zext_ln352_fu_4350_p1[8 : 3];
        DATA_y_addr_41_reg_6005[8 : 3] <= zext_ln353_fu_4361_p1[8 : 3];
        shl_ln9_reg_5990[8 : 3] <= shl_ln9_fu_4342_p3[8 : 3];
        tmp_14_reg_6010 <= {{tid_9_fu_242[5:3]}};
        trunc_ln352_reg_5985 <= trunc_ln352_fu_4338_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        DATA_y_addr_42_reg_6022[8 : 3] <= zext_ln354_fu_4391_p1[8 : 3];
        DATA_y_addr_43_reg_6027[8 : 3] <= zext_ln355_fu_4401_p1[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state120)) begin
        DATA_y_addr_44_reg_6032[8 : 3] <= zext_ln356_fu_4411_p1[8 : 3];
        DATA_y_addr_45_reg_6037[8 : 3] <= zext_ln357_fu_4421_p1[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state121)) begin
        DATA_y_addr_46_reg_6042[8 : 3] <= zext_ln358_fu_4431_p1[8 : 3];
        DATA_y_addr_47_reg_6047[8 : 3] <= zext_ln359_fu_4441_p1[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        add_ln238_reg_5560 <= add_ln238_fu_3415_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        c0_x_1_reg_5020 <= c0_x_1_fu_2239_p1;
        c0_y_1_reg_5041 <= c0_y_1_fu_2264_p1;
        work_x_load_3_reg_5026 <= work_x_q0;
        work_y_load_3_reg_5047 <= work_y_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        offset_1_reg_5337 <= offset_1_fu_2889_p2;
        trunc_ln197_reg_5352 <= trunc_ln197_fu_2900_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        offset_2_reg_5412 <= offset_2_fu_3083_p1;
        shl_ln3_reg_5420[8 : 3] <= shl_ln3_fu_3087_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        offset_3_reg_5750 <= offset_3_fu_3722_p1;
        shl_ln6_reg_5758[8 : 3] <= shl_ln6_fu_3726_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        offset_5_reg_5905 <= offset_5_fu_4135_p1;
        shl_ln8_reg_5913[8 : 3] <= shl_ln8_fu_4139_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        offset_reg_5257 <= offset_fu_2652_p1;
        shl_ln1_reg_5265[8 : 3] <= shl_ln1_fu_2656_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state155) | (1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_1944 <= grp_fu_1860_p2;
        reg_1955 <= grp_fu_1864_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state159) | (1'b1 == ap_CS_fsm_state147) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_1966 <= grp_fu_1868_p2;
        reg_1975 <= grp_fu_1872_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state147) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_1984 <= grp_fu_1876_p2;
        reg_1993 <= grp_fu_1880_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_2002 <= grp_fu_1884_p2;
        reg_2007 <= grp_fu_1888_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state147) | (1'b1 == ap_CS_fsm_state19))) begin
        reg_2012 <= grp_fu_1860_p2;
        reg_2020 <= grp_fu_1864_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_2028 <= grp_fu_1868_p2;
        reg_2037 <= grp_fu_1872_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_2046 <= grp_fu_1860_p2;
        reg_2054 <= grp_fu_1864_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state20))) begin
        reg_2062 <= grp_fu_1868_p2;
        reg_2068 <= grp_fu_1872_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state151))) begin
        reg_2074 <= grp_fu_1912_p2;
        reg_2081 <= grp_fu_1917_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state15))) begin
        reg_2088 <= grp_fu_1912_p2;
        reg_2095 <= grp_fu_1917_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state143) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state79))) begin
        reg_2102 <= grp_fu_1924_p2;
        reg_2108 <= grp_fu_1929_p2;
        reg_2114 <= grp_fu_1934_p2;
        reg_2119 <= grp_fu_1939_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state67))) begin
        reg_2124 <= DATA_x_q1;
        reg_2130 <= DATA_x_q0;
        reg_2138 <= DATA_y_q1;
        reg_2144 <= DATA_y_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state130)) begin
        shl_ln10_reg_6069[8 : 3] <= shl_ln10_fu_4476_p3[8 : 3];
        tid_21_reg_6057 <= tid_10_fu_246;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        shl_ln2_reg_5369[8 : 3] <= shl_ln2_fu_2925_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        shl_ln7_reg_5862[8 : 3] <= shl_ln7_fu_3977_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        shl_ln_reg_5244[8 : 3] <= shl_ln_fu_2546_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        sub33_reg_5726 <= grp_fu_1880_p2;
        tmp_3_reg_5720 <= grp_fu_1876_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tid_11_reg_4976 <= tid_fu_186;
        xor_ln132_reg_4988 <= xor_ln132_fu_2204_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        trunc_ln153_reg_5162 <= trunc_ln153_fu_2367_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        trunc_ln321_reg_5830 <= trunc_ln321_fu_3935_p1;
        zext_ln321_reg_5835[8 : 0] <= zext_ln321_fu_3947_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state152)) begin
        xor_ln402_reg_6264 <= xor_ln402_fu_4789_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        zext_ln174_10_reg_5956[5 : 0] <= zext_ln174_10_fu_4211_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state114)) begin
        zext_ln174_11_reg_5940[5 : 0] <= zext_ln174_11_fu_4173_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        zext_ln174_1_reg_5308[5 : 0] <= zext_ln174_1_fu_2728_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        zext_ln174_2_reg_5292[5 : 0] <= zext_ln174_2_fu_2690_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        zext_ln174_4_reg_5463[5 : 0] <= zext_ln174_4_fu_3159_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        zext_ln174_5_reg_5447[5 : 0] <= zext_ln174_5_fu_3121_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        zext_ln174_7_reg_5801[5 : 0] <= zext_ln174_7_fu_3798_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        zext_ln174_8_reg_5785[5 : 0] <= zext_ln174_8_fu_3760_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        zext_ln274_reg_5742[2 : 0] <= zext_ln274_fu_3703_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state123)) begin
        zext_ln364_reg_6052[8 : 0] <= zext_ln364_fu_4452_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state151)) begin
        zext_ln403_cast_reg_6249[6 : 0] <= zext_ln403_cast_fu_4733_p3[6 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state133)) begin
        DATA_x_address0 = zext_ln383_fu_4567_p1;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        DATA_x_address0 = zext_ln385_fu_4551_p1;
    end else if ((1'b1 == ap_CS_fsm_state131)) begin
        DATA_x_address0 = zext_ln386_fu_4529_p1;
    end else if ((1'b1 == ap_CS_fsm_state130)) begin
        DATA_x_address0 = zext_ln382_fu_4502_p1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        DATA_x_address0 = zext_ln330_1_fu_4115_p1;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        DATA_x_address0 = zext_ln328_1_fu_4075_p1;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        DATA_x_address0 = zext_ln326_1_fu_4035_p1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        DATA_x_address0 = zext_ln324_1_fu_3995_p1;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        DATA_x_address0 = zext_ln313_1_fu_3881_p1;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        DATA_x_address0 = zext_ln311_fu_3837_p1;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        DATA_x_address0 = zext_ln309_1_fu_3793_p1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        DATA_x_address0 = zext_ln307_1_fu_3745_p1;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        DATA_x_address0 = DATA_x_addr_31_reg_5618;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        DATA_x_address0 = DATA_x_addr_29_reg_5612;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        DATA_x_address0 = DATA_x_addr_27_reg_5584;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        DATA_x_address0 = DATA_x_addr_25_reg_5578;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        DATA_x_address0 = zext_ln256_fu_3609_p1;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        DATA_x_address0 = zext_ln258_fu_3593_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        DATA_x_address0 = zext_ln259_fu_3509_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        DATA_x_address0 = zext_ln255_fu_3467_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        DATA_x_address0 = zext_ln204_1_fu_3063_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        DATA_x_address0 = zext_ln202_1_fu_3023_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        DATA_x_address0 = zext_ln200_1_fu_2983_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        DATA_x_address0 = zext_ln198_1_fu_2943_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        DATA_x_address0 = zext_ln188_1_fu_2811_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        DATA_x_address0 = zext_ln186_fu_2767_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        DATA_x_address0 = zext_ln184_1_fu_2723_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        DATA_x_address0 = zext_ln182_1_fu_2675_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        DATA_x_address0 = zext_ln163_fu_2631_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        DATA_x_address0 = zext_ln161_fu_2609_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        DATA_x_address0 = zext_ln159_fu_2587_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        DATA_x_address0 = zext_ln157_fu_2565_p1;
    end else begin
        DATA_x_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state133)) begin
        DATA_x_address1 = zext_ln379_fu_4557_p1;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        DATA_x_address1 = zext_ln381_fu_4540_p1;
    end else if ((1'b1 == ap_CS_fsm_state131)) begin
        DATA_x_address1 = zext_ln384_fu_4518_p1;
    end else if ((1'b1 == ap_CS_fsm_state130)) begin
        DATA_x_address1 = zext_ln380_fu_4490_p1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        DATA_x_address1 = zext_ln329_1_fu_4105_p1;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        DATA_x_address1 = zext_ln327_1_fu_4065_p1;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        DATA_x_address1 = zext_ln325_1_fu_4025_p1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        DATA_x_address1 = zext_ln323_1_fu_3984_p1;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        DATA_x_address1 = zext_ln312_1_fu_3871_p1;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        DATA_x_address1 = zext_ln310_1_fu_3827_p1;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        DATA_x_address1 = zext_ln308_1_fu_3783_p1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        DATA_x_address1 = zext_ln306_1_fu_3734_p1;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        DATA_x_address1 = DATA_x_addr_30_reg_5661;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        DATA_x_address1 = DATA_x_addr_28_reg_5683;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        DATA_x_address1 = DATA_x_addr_26_reg_5656;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        DATA_x_address1 = DATA_x_addr_24_reg_5678;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        DATA_x_address1 = zext_ln252_fu_3599_p1;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        DATA_x_address1 = zext_ln254_fu_3582_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        DATA_x_address1 = zext_ln257_fu_3498_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        DATA_x_address1 = zext_ln253_fu_3455_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        DATA_x_address1 = zext_ln203_1_fu_3053_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        DATA_x_address1 = zext_ln201_1_fu_3013_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        DATA_x_address1 = zext_ln199_1_fu_2973_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        DATA_x_address1 = zext_ln197_1_fu_2932_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        DATA_x_address1 = zext_ln187_1_fu_2801_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        DATA_x_address1 = zext_ln185_1_fu_2757_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        DATA_x_address1 = zext_ln183_1_fu_2713_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        DATA_x_address1 = zext_ln181_1_fu_2664_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        DATA_x_address1 = zext_ln162_fu_2620_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        DATA_x_address1 = zext_ln160_fu_2598_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        DATA_x_address1 = zext_ln158_fu_2576_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        DATA_x_address1 = zext_ln156_fu_2553_p1;
    end else begin
        DATA_x_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state109))) begin
        DATA_x_ce0 = 1'b1;
    end else begin
        DATA_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state109))) begin
        DATA_x_ce1 = 1'b1;
    end else begin
        DATA_x_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state109))) begin
        DATA_x_d0 = smem_q0;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        DATA_x_d0 = data_x_q0;
    end else begin
        DATA_x_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state109))) begin
        DATA_x_d1 = smem_q1;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        DATA_x_d1 = data_x_q1;
    end else begin
        DATA_x_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state109))) begin
        DATA_x_we0 = 1'b1;
    end else begin
        DATA_x_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state109))) begin
        DATA_x_we1 = 1'b1;
    end else begin
        DATA_x_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state133)) begin
        DATA_y_address0 = zext_ln383_fu_4567_p1;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        DATA_y_address0 = zext_ln385_fu_4551_p1;
    end else if ((1'b1 == ap_CS_fsm_state131)) begin
        DATA_y_address0 = zext_ln386_fu_4529_p1;
    end else if ((1'b1 == ap_CS_fsm_state130)) begin
        DATA_y_address0 = zext_ln382_fu_4502_p1;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        DATA_y_address0 = DATA_y_addr_47_reg_6047;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        DATA_y_address0 = DATA_y_addr_45_reg_6037;
    end else if ((1'b1 == ap_CS_fsm_state127)) begin
        DATA_y_address0 = DATA_y_addr_43_reg_6027;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        DATA_y_address0 = DATA_y_addr_41_reg_6005;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        DATA_y_address0 = zext_ln359_fu_4441_p1;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        DATA_y_address0 = zext_ln357_fu_4421_p1;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        DATA_y_address0 = zext_ln355_fu_4401_p1;
    end else if ((1'b1 == ap_CS_fsm_state118)) begin
        DATA_y_address0 = zext_ln353_fu_4361_p1;
    end else if ((1'b1 == ap_CS_fsm_state116)) begin
        DATA_y_address0 = zext_ln347_1_fu_4294_p1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        DATA_y_address0 = zext_ln345_fu_4250_p1;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        DATA_y_address0 = zext_ln343_1_fu_4206_p1;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        DATA_y_address0 = zext_ln341_1_fu_4158_p1;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        DATA_y_address0 = DATA_y_addr_31_reg_5629;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        DATA_y_address0 = DATA_y_addr_29_reg_5623;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        DATA_y_address0 = DATA_y_addr_27_reg_5595;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        DATA_y_address0 = DATA_y_addr_25_reg_5589;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        DATA_y_address0 = zext_ln256_fu_3609_p1;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        DATA_y_address0 = zext_ln258_fu_3593_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        DATA_y_address0 = zext_ln259_fu_3509_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        DATA_y_address0 = zext_ln255_fu_3467_p1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        DATA_y_address0 = DATA_y_addr_23_reg_5555;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        DATA_y_address0 = DATA_y_addr_21_reg_5545;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        DATA_y_address0 = DATA_y_addr_19_reg_5535;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        DATA_y_address0 = DATA_y_addr_17_reg_5507;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        DATA_y_address0 = zext_ln233_fu_3393_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        DATA_y_address0 = zext_ln231_fu_3373_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        DATA_y_address0 = zext_ln229_fu_3353_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        DATA_y_address0 = zext_ln227_fu_3309_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        DATA_y_address0 = zext_ln221_1_fu_3242_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        DATA_y_address0 = zext_ln219_fu_3198_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        DATA_y_address0 = zext_ln217_1_fu_3154_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        DATA_y_address0 = zext_ln215_1_fu_3106_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        DATA_y_address0 = zext_ln163_fu_2631_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        DATA_y_address0 = zext_ln161_fu_2609_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        DATA_y_address0 = zext_ln159_fu_2587_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        DATA_y_address0 = zext_ln157_fu_2565_p1;
    end else begin
        DATA_y_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state133)) begin
        DATA_y_address1 = zext_ln379_fu_4557_p1;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        DATA_y_address1 = zext_ln381_fu_4540_p1;
    end else if ((1'b1 == ap_CS_fsm_state131)) begin
        DATA_y_address1 = zext_ln384_fu_4518_p1;
    end else if ((1'b1 == ap_CS_fsm_state130)) begin
        DATA_y_address1 = zext_ln380_fu_4490_p1;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        DATA_y_address1 = DATA_y_addr_46_reg_6042;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        DATA_y_address1 = DATA_y_addr_44_reg_6032;
    end else if ((1'b1 == ap_CS_fsm_state127)) begin
        DATA_y_address1 = DATA_y_addr_42_reg_6022;
    end else if ((1'b1 == ap_CS_fsm_state126)) begin
        DATA_y_address1 = DATA_y_addr_40_reg_6000;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        DATA_y_address1 = zext_ln358_fu_4431_p1;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        DATA_y_address1 = zext_ln356_fu_4411_p1;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        DATA_y_address1 = zext_ln354_fu_4391_p1;
    end else if ((1'b1 == ap_CS_fsm_state118)) begin
        DATA_y_address1 = zext_ln352_fu_4350_p1;
    end else if ((1'b1 == ap_CS_fsm_state116)) begin
        DATA_y_address1 = zext_ln346_1_fu_4284_p1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        DATA_y_address1 = zext_ln344_1_fu_4240_p1;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        DATA_y_address1 = zext_ln342_1_fu_4196_p1;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        DATA_y_address1 = zext_ln340_1_fu_4147_p1;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        DATA_y_address1 = DATA_y_addr_30_reg_5672;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        DATA_y_address1 = DATA_y_addr_28_reg_5694;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        DATA_y_address1 = DATA_y_addr_26_reg_5667;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        DATA_y_address1 = DATA_y_addr_24_reg_5689;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        DATA_y_address1 = zext_ln252_fu_3599_p1;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        DATA_y_address1 = zext_ln254_fu_3582_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        DATA_y_address1 = zext_ln257_fu_3498_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        DATA_y_address1 = zext_ln253_fu_3455_p1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        DATA_y_address1 = DATA_y_addr_22_reg_5550;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        DATA_y_address1 = DATA_y_addr_20_reg_5540;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        DATA_y_address1 = DATA_y_addr_18_reg_5530;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        DATA_y_address1 = DATA_y_addr_16_reg_5502;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        DATA_y_address1 = zext_ln232_fu_3383_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        DATA_y_address1 = zext_ln230_fu_3363_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        DATA_y_address1 = zext_ln228_fu_3343_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        DATA_y_address1 = zext_ln226_fu_3298_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        DATA_y_address1 = zext_ln220_1_fu_3232_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        DATA_y_address1 = zext_ln218_1_fu_3188_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        DATA_y_address1 = zext_ln216_1_fu_3144_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        DATA_y_address1 = zext_ln214_1_fu_3095_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        DATA_y_address1 = zext_ln162_fu_2620_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        DATA_y_address1 = zext_ln160_fu_2598_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        DATA_y_address1 = zext_ln158_fu_2576_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        DATA_y_address1 = zext_ln156_fu_2553_p1;
    end else begin
        DATA_y_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state120) 
    | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state113))) begin
        DATA_y_ce0 = 1'b1;
    end else begin
        DATA_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state120) 
    | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state113))) begin
        DATA_y_ce1 = 1'b1;
    end else begin
        DATA_y_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        DATA_y_we0 = 1'b1;
    end else begin
        DATA_y_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        DATA_y_we1 = 1'b1;
    end else begin
        DATA_y_we1 = 1'b0;
    end
end

assign ap_ST_fsm_state100_blk = 1'b0;

assign ap_ST_fsm_state101_blk = 1'b0;

assign ap_ST_fsm_state102_blk = 1'b0;

assign ap_ST_fsm_state103_blk = 1'b0;

assign ap_ST_fsm_state104_blk = 1'b0;

assign ap_ST_fsm_state105_blk = 1'b0;

assign ap_ST_fsm_state106_blk = 1'b0;

assign ap_ST_fsm_state107_blk = 1'b0;

assign ap_ST_fsm_state108_blk = 1'b0;

assign ap_ST_fsm_state109_blk = 1'b0;

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state110_blk = 1'b0;

assign ap_ST_fsm_state111_blk = 1'b0;

assign ap_ST_fsm_state112_blk = 1'b0;

assign ap_ST_fsm_state113_blk = 1'b0;

assign ap_ST_fsm_state114_blk = 1'b0;

assign ap_ST_fsm_state115_blk = 1'b0;

assign ap_ST_fsm_state116_blk = 1'b0;

assign ap_ST_fsm_state117_blk = 1'b0;

assign ap_ST_fsm_state118_blk = 1'b0;

assign ap_ST_fsm_state119_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state120_blk = 1'b0;

assign ap_ST_fsm_state121_blk = 1'b0;

assign ap_ST_fsm_state122_blk = 1'b0;

assign ap_ST_fsm_state123_blk = 1'b0;

always @ (*) begin
    if ((grp_loady8_fu_1853_ap_done == 1'b0)) begin
        ap_ST_fsm_state124_blk = 1'b1;
    end else begin
        ap_ST_fsm_state124_blk = 1'b0;
    end
end

assign ap_ST_fsm_state125_blk = 1'b0;

assign ap_ST_fsm_state126_blk = 1'b0;

assign ap_ST_fsm_state127_blk = 1'b0;

assign ap_ST_fsm_state128_blk = 1'b0;

assign ap_ST_fsm_state129_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state130_blk = 1'b0;

assign ap_ST_fsm_state131_blk = 1'b0;

assign ap_ST_fsm_state132_blk = 1'b0;

assign ap_ST_fsm_state133_blk = 1'b0;

assign ap_ST_fsm_state134_blk = 1'b0;

assign ap_ST_fsm_state135_blk = 1'b0;

assign ap_ST_fsm_state136_blk = 1'b0;

assign ap_ST_fsm_state137_blk = 1'b0;

assign ap_ST_fsm_state138_blk = 1'b0;

assign ap_ST_fsm_state139_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state140_blk = 1'b0;

assign ap_ST_fsm_state141_blk = 1'b0;

assign ap_ST_fsm_state142_blk = 1'b0;

assign ap_ST_fsm_state143_blk = 1'b0;

assign ap_ST_fsm_state144_blk = 1'b0;

assign ap_ST_fsm_state145_blk = 1'b0;

assign ap_ST_fsm_state146_blk = 1'b0;

assign ap_ST_fsm_state147_blk = 1'b0;

assign ap_ST_fsm_state148_blk = 1'b0;

assign ap_ST_fsm_state149_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state150_blk = 1'b0;

assign ap_ST_fsm_state151_blk = 1'b0;

assign ap_ST_fsm_state152_blk = 1'b0;

assign ap_ST_fsm_state153_blk = 1'b0;

assign ap_ST_fsm_state154_blk = 1'b0;

assign ap_ST_fsm_state155_blk = 1'b0;

assign ap_ST_fsm_state156_blk = 1'b0;

assign ap_ST_fsm_state157_blk = 1'b0;

assign ap_ST_fsm_state158_blk = 1'b0;

assign ap_ST_fsm_state159_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state160_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

always @ (*) begin
    if ((grp_twiddles8_fu_1829_ap_done == 1'b0)) begin
        ap_ST_fsm_state33_blk = 1'b1;
    end else begin
        ap_ST_fsm_state33_blk = 1'b0;
    end
end

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_loady8_fu_1853_ap_done == 1'b0)) begin
        ap_ST_fsm_state60_blk = 1'b1;
    end else begin
        ap_ST_fsm_state60_blk = 1'b0;
    end
end

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

assign ap_ST_fsm_state76_blk = 1'b0;

assign ap_ST_fsm_state77_blk = 1'b0;

assign ap_ST_fsm_state78_blk = 1'b0;

assign ap_ST_fsm_state79_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state80_blk = 1'b0;

assign ap_ST_fsm_state81_blk = 1'b0;

assign ap_ST_fsm_state82_blk = 1'b0;

assign ap_ST_fsm_state83_blk = 1'b0;

assign ap_ST_fsm_state84_blk = 1'b0;

assign ap_ST_fsm_state85_blk = 1'b0;

assign ap_ST_fsm_state86_blk = 1'b0;

assign ap_ST_fsm_state87_blk = 1'b0;

assign ap_ST_fsm_state88_blk = 1'b0;

assign ap_ST_fsm_state89_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state90_blk = 1'b0;

assign ap_ST_fsm_state91_blk = 1'b0;

assign ap_ST_fsm_state92_blk = 1'b0;

assign ap_ST_fsm_state93_blk = 1'b0;

assign ap_ST_fsm_state94_blk = 1'b0;

assign ap_ST_fsm_state95_blk = 1'b0;

assign ap_ST_fsm_state96_blk = 1'b0;

always @ (*) begin
    if ((grp_twiddles8_fu_1829_ap_done == 1'b0)) begin
        ap_ST_fsm_state97_blk = 1'b1;
    end else begin
        ap_ST_fsm_state97_blk = 1'b0;
    end
end

assign ap_ST_fsm_state98_blk = 1'b0;

assign ap_ST_fsm_state99_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state130) & (icmp_ln376_fu_4460_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state130) & (icmp_ln376_fu_4460_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state37))) begin
        data_x_address0 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state36))) begin
        data_x_address0 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state99))) begin
        data_x_address0 = 64'd3;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state17))) begin
        data_x_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state33))) begin
        data_x_address0 = grp_twiddles8_fu_1829_a_x_address0;
    end else begin
        data_x_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state37))) begin
        data_x_address1 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state36))) begin
        data_x_address1 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state99))) begin
        data_x_address1 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state17))) begin
        data_x_address1 = 64'd0;
    end else begin
        data_x_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        data_x_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state33))) begin
        data_x_ce0 = grp_twiddles8_fu_1829_a_x_ce0;
    end else begin
        data_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        data_x_ce1 = 1'b1;
    end else begin
        data_x_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17))) begin
        data_x_d0 = grp_fu_1868_p2;
    end else if (((1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state33))) begin
        data_x_d0 = grp_twiddles8_fu_1829_a_x_d0;
    end else begin
        data_x_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17))) begin
        data_x_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state33))) begin
        data_x_we0 = grp_twiddles8_fu_1829_a_x_we0;
    end else begin
        data_x_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17))) begin
        data_x_we1 = 1'b1;
    end else begin
        data_x_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state37))) begin
        data_y_address0 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state121))) begin
        data_y_address0 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state120))) begin
        data_y_address0 = 64'd3;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state119))) begin
        data_y_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state60))) begin
        data_y_address0 = grp_loady8_fu_1853_a_y_address0;
    end else if (((1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state33))) begin
        data_y_address0 = grp_twiddles8_fu_1829_a_y_address0;
    end else begin
        data_y_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state37))) begin
        data_y_address1 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state121))) begin
        data_y_address1 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state120))) begin
        data_y_address1 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state119))) begin
        data_y_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state60))) begin
        data_y_address1 = grp_loady8_fu_1853_a_y_address1;
    end else begin
        data_y_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state119))) begin
        data_y_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state60))) begin
        data_y_ce0 = grp_loady8_fu_1853_a_y_ce0;
    end else if (((1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state33))) begin
        data_y_ce0 = grp_twiddles8_fu_1829_a_y_ce0;
    end else begin
        data_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state119))) begin
        data_y_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state60))) begin
        data_y_ce1 = grp_loady8_fu_1853_a_y_ce1;
    end else begin
        data_y_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state119))) begin
        data_y_d0 = DATA_y_q0;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17))) begin
        data_y_d0 = grp_fu_1872_p2;
    end else if (((1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state60))) begin
        data_y_d0 = grp_loady8_fu_1853_a_y_d0;
    end else if (((1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state33))) begin
        data_y_d0 = grp_twiddles8_fu_1829_a_y_d0;
    end else begin
        data_y_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state119))) begin
        data_y_d1 = DATA_y_q1;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17))) begin
        data_y_d1 = grp_fu_1864_p2;
    end else if (((1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state60))) begin
        data_y_d1 = grp_loady8_fu_1853_a_y_d1;
    end else begin
        data_y_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state119))) begin
        data_y_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state60))) begin
        data_y_we0 = grp_loady8_fu_1853_a_y_we0;
    end else if (((1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state33))) begin
        data_y_we0 = grp_twiddles8_fu_1829_a_y_we0;
    end else begin
        data_y_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state119))) begin
        data_y_we1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state60))) begin
        data_y_we1 = grp_loady8_fu_1853_a_y_we1;
    end else begin
        data_y_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state152))) begin
        grp_fu_1860_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state133))) begin
        grp_fu_1860_opcode = 2'd0;
    end else begin
        grp_fu_1860_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        grp_fu_1860_p0 = reg_2088;
    end else if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state133))) begin
        grp_fu_1860_p0 = DATA_x_q1;
    end else if (((1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state68))) begin
        grp_fu_1860_p0 = reg_2124;
    end else if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_1860_p0 = reg_1944;
    end else if (((1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_1860_p0 = reg_2028;
    end else if (((1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state145))) begin
        grp_fu_1860_p0 = reg_2062;
    end else if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_1860_p0 = reg_2114;
    end else if (((1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_1860_p0 = reg_2012;
    end else if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state152))) begin
        grp_fu_1860_p0 = reg_2074;
    end else if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_1860_p0 = reg_2046;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state84))) begin
        grp_fu_1860_p0 = reg_1966;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_1860_p0 = c0_x_fu_2370_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_1860_p0 = c0_x_2_fu_2330_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_1860_p0 = c0_x_1_reg_5020;
    end else begin
        grp_fu_1860_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state152)) begin
        grp_fu_1860_p1 = bitcast_ln398_17_fu_4769_p1;
    end else if ((1'b1 == ap_CS_fsm_state144)) begin
        grp_fu_1860_p1 = bitcast_ln398_13_fu_4675_p1;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        grp_fu_1860_p1 = bitcast_ln398_5_fu_4645_p1;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        grp_fu_1860_p1 = bitcast_ln398_1_fu_4583_p1;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_1860_p1 = reg_2028;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_1860_p1 = bitcast_ln271_17_fu_3684_p1;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        grp_fu_1860_p1 = reg_2046;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        grp_fu_1860_p1 = bitcast_ln271_5_fu_3655_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_fu_1860_p1 = bitcast_ln271_13_fu_3625_p1;
    end else if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state133))) begin
        grp_fu_1860_p1 = DATA_x_q0;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_1860_p1 = bitcast_ln271_1_fu_3525_p1;
    end else if (((1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state68))) begin
        grp_fu_1860_p1 = DATA_x_q1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_1860_p1 = bitcast_ln150_17_fu_2526_p1;
    end else if (((1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_1860_p1 = reg_1966;
    end else if (((1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state145))) begin
        grp_fu_1860_p1 = reg_1944;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1860_p1 = bitcast_ln150_13_fu_2496_p1;
    end else if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_1860_p1 = reg_1984;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_1860_p1 = bitcast_ln150_5_fu_2466_p1;
    end else if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_1860_p1 = reg_2012;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_1860_p1 = bitcast_ln150_1_fu_2404_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_1860_p1 = bitcast_ln135_fu_2376_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_1860_p1 = bitcast_ln137_fu_2349_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_1860_p1 = bitcast_ln136_fu_2286_p1;
    end else begin
        grp_fu_1860_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state152))) begin
        grp_fu_1864_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state133))) begin
        grp_fu_1864_opcode = 2'd0;
    end else begin
        grp_fu_1864_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state152)) begin
        grp_fu_1864_p0 = bitcast_ln398_19_fu_4784_p1;
    end else if ((1'b1 == ap_CS_fsm_state144)) begin
        grp_fu_1864_p0 = bitcast_ln398_15_fu_4690_p1;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        grp_fu_1864_p0 = bitcast_ln398_7_fu_4660_p1;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        grp_fu_1864_p0 = bitcast_ln398_3_fu_4598_p1;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_1864_p0 = bitcast_ln271_19_fu_3698_p1;
    end else if (((1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state84))) begin
        grp_fu_1864_p0 = reg_1975;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        grp_fu_1864_p0 = bitcast_ln271_7_fu_3670_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_fu_1864_p0 = bitcast_ln271_15_fu_3640_p1;
    end else if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state133))) begin
        grp_fu_1864_p0 = DATA_y_q1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_1864_p0 = bitcast_ln271_3_fu_3540_p1;
    end else if (((1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state68))) begin
        grp_fu_1864_p0 = reg_2138;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_1864_p0 = bitcast_ln150_19_fu_2541_p1;
    end else if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_1864_p0 = reg_1955;
    end else if (((1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_1864_p0 = reg_2037;
    end else if (((1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state145))) begin
        grp_fu_1864_p0 = reg_2068;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1864_p0 = bitcast_ln150_15_fu_2511_p1;
    end else if (((1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_1864_p0 = reg_2020;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_1864_p0 = bitcast_ln150_7_fu_2481_p1;
    end else if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_1864_p0 = reg_2054;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_1864_p0 = bitcast_ln150_3_fu_2419_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_1864_p0 = c0_y_fu_2382_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_1864_p0 = c0_y_2_fu_2355_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_1864_p0 = c0_y_1_reg_5041;
    end else begin
        grp_fu_1864_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_1864_p1 = reg_2037;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        grp_fu_1864_p1 = reg_2054;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        grp_fu_1864_p1 = reg_2095;
    end else if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state133))) begin
        grp_fu_1864_p1 = DATA_y_q0;
    end else if (((1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state68))) begin
        grp_fu_1864_p1 = DATA_y_q1;
    end else if (((1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state145))) begin
        grp_fu_1864_p1 = reg_1955;
    end else if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_1864_p1 = reg_2119;
    end else if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_1864_p1 = reg_1993;
    end else if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state152))) begin
        grp_fu_1864_p1 = reg_2081;
    end else if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_1864_p1 = reg_2020;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_1864_p1 = reg_1975;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_1864_p1 = bitcast_ln144_fu_2388_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_1864_p1 = bitcast_ln146_fu_2361_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_1864_p1 = bitcast_ln145_fu_2313_p1;
    end else begin
        grp_fu_1864_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state133))) begin
        grp_fu_1868_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_1868_opcode = 2'd0;
    end else begin
        grp_fu_1868_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        grp_fu_1868_p0 = bitcast_ln398_9_fu_4613_p1;
    end else if (((1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state84))) begin
        grp_fu_1868_p0 = reg_1966;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_fu_1868_p0 = reg_2074;
    end else if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state133))) begin
        grp_fu_1868_p0 = DATA_x_q1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_1868_p0 = bitcast_ln271_9_fu_3555_p1;
    end else if (((1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state68))) begin
        grp_fu_1868_p0 = reg_2124;
    end else if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_1868_p0 = reg_1944;
    end else if (((1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_1868_p0 = reg_2028;
    end else if (((1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state145))) begin
        grp_fu_1868_p0 = reg_2062;
    end else if (((1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_1868_p0 = reg_2088;
    end else if (((1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_1868_p0 = reg_2012;
    end else if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_1868_p0 = reg_2046;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_1868_p0 = bitcast_ln150_9_fu_2434_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_1868_p0 = c0_x_fu_2370_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_1868_p0 = c0_x_2_fu_2330_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_1868_p0 = c0_x_1_reg_5020;
    end else begin
        grp_fu_1868_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        grp_fu_1868_p1 = bitcast_ln398_11_fu_4629_p1;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_1868_p1 = reg_2028;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        grp_fu_1868_p1 = reg_2046;
    end else if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state133))) begin
        grp_fu_1868_p1 = DATA_x_q0;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_1868_p1 = bitcast_ln271_11_fu_3571_p1;
    end else if (((1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state68))) begin
        grp_fu_1868_p1 = DATA_x_q1;
    end else if (((1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_1868_p1 = reg_1966;
    end else if (((1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state145))) begin
        grp_fu_1868_p1 = reg_1944;
    end else if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_1868_p1 = reg_2102;
    end else if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_1868_p1 = reg_1984;
    end else if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_1868_p1 = reg_2012;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_1868_p1 = bitcast_ln150_11_fu_2450_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_1868_p1 = bitcast_ln135_fu_2376_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_1868_p1 = bitcast_ln137_fu_2349_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_1868_p1 = bitcast_ln136_fu_2286_p1;
    end else begin
        grp_fu_1868_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state133))) begin
        grp_fu_1872_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_1872_opcode = 2'd0;
    end else begin
        grp_fu_1872_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        grp_fu_1872_p0 = bitcast_ln398_9_fu_4613_p1;
    end else if (((1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state84))) begin
        grp_fu_1872_p0 = reg_1975;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_fu_1872_p0 = reg_2081;
    end else if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state133))) begin
        grp_fu_1872_p0 = DATA_y_q1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_1872_p0 = bitcast_ln271_9_fu_3555_p1;
    end else if (((1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state68))) begin
        grp_fu_1872_p0 = reg_2138;
    end else if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_1872_p0 = reg_1955;
    end else if (((1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_1872_p0 = reg_2037;
    end else if (((1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state145))) begin
        grp_fu_1872_p0 = reg_2068;
    end else if (((1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_1872_p0 = reg_2095;
    end else if (((1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_1872_p0 = reg_2020;
    end else if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_1872_p0 = reg_2054;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_1872_p0 = bitcast_ln150_9_fu_2434_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_1872_p0 = c0_y_fu_2382_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_1872_p0 = c0_y_2_fu_2355_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_1872_p0 = c0_y_1_reg_5041;
    end else begin
        grp_fu_1872_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        grp_fu_1872_p1 = bitcast_ln398_11_fu_4629_p1;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_1872_p1 = reg_2037;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        grp_fu_1872_p1 = reg_2054;
    end else if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state133))) begin
        grp_fu_1872_p1 = DATA_y_q0;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_1872_p1 = bitcast_ln271_11_fu_3571_p1;
    end else if (((1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state68))) begin
        grp_fu_1872_p1 = DATA_y_q1;
    end else if (((1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_1872_p1 = reg_1975;
    end else if (((1'b1 == ap_CS_fsm_state156) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state145))) begin
        grp_fu_1872_p1 = reg_1955;
    end else if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_1872_p1 = reg_2108;
    end else if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_1872_p1 = reg_1993;
    end else if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_1872_p1 = reg_2020;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_1872_p1 = bitcast_ln150_11_fu_2450_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_1872_p1 = bitcast_ln144_fu_2388_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_1872_p1 = bitcast_ln146_fu_2361_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_1872_p1 = bitcast_ln145_fu_2313_p1;
    end else begin
        grp_fu_1872_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_1876_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_1876_opcode = 2'd0;
    end else begin
        grp_fu_1876_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_fu_1876_p0 = reg_2074;
    end else if (((1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state68))) begin
        grp_fu_1876_p0 = reg_2130;
    end else if (((1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_1876_p0 = reg_2088;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_1876_p0 = reg_1944;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_1876_p0 = c0_x_3_fu_2281_p1;
    end else begin
        grp_fu_1876_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state68))) begin
        grp_fu_1876_p1 = DATA_x_q0;
    end else if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_1876_p1 = reg_2102;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_1876_p1 = reg_1984;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_1876_p1 = bitcast_ln138_fu_2302_p1;
    end else begin
        grp_fu_1876_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_1880_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_1880_opcode = 2'd0;
    end else begin
        grp_fu_1880_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_fu_1880_p0 = reg_2081;
    end else if (((1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state68))) begin
        grp_fu_1880_p0 = reg_2144;
    end else if (((1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_1880_p0 = reg_2095;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_1880_p0 = reg_1955;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_1880_p0 = c0_y_3_fu_2308_p1;
    end else begin
        grp_fu_1880_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state68))) begin
        grp_fu_1880_p1 = DATA_y_q0;
    end else if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_1880_p1 = reg_2108;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_1880_p1 = reg_1993;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_1880_p1 = bitcast_ln147_fu_2319_p1;
    end else begin
        grp_fu_1880_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state68))) begin
        grp_fu_1884_p0 = reg_2130;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_1884_p0 = reg_1944;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_1884_p0 = c0_x_3_fu_2281_p1;
    end else begin
        grp_fu_1884_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state68))) begin
        grp_fu_1884_p1 = DATA_x_q0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_1884_p1 = reg_1984;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_1884_p1 = bitcast_ln138_fu_2302_p1;
    end else begin
        grp_fu_1884_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state68))) begin
        grp_fu_1888_p0 = reg_2144;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_1888_p0 = reg_1955;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_1888_p0 = c0_y_3_fu_2308_p1;
    end else begin
        grp_fu_1888_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state68))) begin
        grp_fu_1888_p1 = DATA_y_q0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_1888_p1 = reg_1993;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_1888_p1 = bitcast_ln147_fu_2319_p1;
    end else begin
        grp_fu_1888_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        grp_fu_1912_p0 = tmp_3_reg_5720;
    end else if (((1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_1912_p0 = reg_1984;
    end else if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state76))) begin
        grp_fu_1912_p0 = reg_1944;
    end else if (((1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_1912_p0 = reg_2028;
    end else begin
        grp_fu_1912_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state76))) begin
        grp_fu_1912_p1 = 64'd4604544271108800512;
    end else if (((1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state84))) begin
        grp_fu_1912_p1 = 64'd0;
    end else begin
        grp_fu_1912_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        grp_fu_1917_p0 = sub33_reg_5726;
    end else if (((1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_1917_p0 = reg_1993;
    end else if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state76))) begin
        grp_fu_1917_p0 = reg_1955;
    end else if (((1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_1917_p0 = reg_2037;
    end else begin
        grp_fu_1917_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state76))) begin
        grp_fu_1917_p1 = 64'd4604544271108800512;
    end else if (((1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state84))) begin
        grp_fu_1917_p1 = 64'd0;
    end else begin
        grp_fu_1917_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state124)) begin
        grp_loady8_fu_1853_offset = zext_ln364_reg_6052;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_loady8_fu_1853_offset = add_ln238_reg_5560;
    end else begin
        grp_loady8_fu_1853_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        grp_twiddles8_fu_1829_i = zext_ln274_reg_5742;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_twiddles8_fu_1829_i = trunc_ln153_reg_5162;
    end else begin
        grp_twiddles8_fu_1829_i = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        grp_twiddles8_fu_1829_n = 10'd64;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_twiddles8_fu_1829_n = 10'd512;
    end else begin
        grp_twiddles8_fu_1829_n = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        smem_address0 = zext_ln347_fu_4318_p1;
    end else if ((1'b1 == ap_CS_fsm_state116)) begin
        smem_address0 = zext_ln345_1_fu_4274_p1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        smem_address0 = zext_ln343_fu_4230_p1;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        smem_address0 = zext_ln341_fu_4186_p1;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        smem_address0 = zext_ln330_fu_4095_p1;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        smem_address0 = zext_ln328_fu_4055_p1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        smem_address0 = zext_ln326_fu_4015_p1;
    end else if ((1'b1 == ap_CS_fsm_state108)) begin
        smem_address0 = zext_ln324_fu_3962_p1;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        smem_address0 = zext_ln313_fu_3905_p1;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        smem_address0 = zext_ln311_1_fu_3861_p1;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        smem_address0 = zext_ln309_fu_3817_p1;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        smem_address0 = zext_ln307_fu_3773_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        smem_address0 = zext_ln221_fu_3266_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        smem_address0 = zext_ln219_1_fu_3222_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        smem_address0 = zext_ln217_fu_3178_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        smem_address0 = zext_ln215_fu_3134_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        smem_address0 = zext_ln204_fu_3043_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        smem_address0 = zext_ln202_fu_3003_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        smem_address0 = zext_ln200_fu_2963_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        smem_address0 = zext_ln198_fu_2910_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        smem_address0 = zext_ln188_fu_2835_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        smem_address0 = zext_ln186_1_fu_2791_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        smem_address0 = zext_ln184_fu_2747_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        smem_address0 = zext_ln182_fu_2703_p1;
    end else if (((1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state60))) begin
        smem_address0 = grp_loady8_fu_1853_x_address0;
    end else begin
        smem_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        smem_address1 = zext_ln346_fu_4307_p1;
    end else if ((1'b1 == ap_CS_fsm_state116)) begin
        smem_address1 = zext_ln344_fu_4260_p1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        smem_address1 = zext_ln342_fu_4220_p1;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        smem_address1 = zext_ln340_fu_4176_p1;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        smem_address1 = zext_ln329_fu_4085_p1;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        smem_address1 = zext_ln327_fu_4045_p1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        smem_address1 = zext_ln325_fu_4005_p1;
    end else if ((1'b1 == ap_CS_fsm_state108)) begin
        smem_address1 = zext_ln323_fu_3951_p1;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        smem_address1 = zext_ln312_fu_3894_p1;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        smem_address1 = zext_ln310_fu_3847_p1;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        smem_address1 = zext_ln308_fu_3807_p1;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        smem_address1 = zext_ln306_fu_3763_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        smem_address1 = zext_ln220_fu_3255_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        smem_address1 = zext_ln218_fu_3208_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        smem_address1 = zext_ln216_fu_3168_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        smem_address1 = zext_ln214_fu_3124_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        smem_address1 = zext_ln203_fu_3033_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        smem_address1 = zext_ln201_fu_2993_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        smem_address1 = zext_ln199_fu_2953_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        smem_address1 = zext_ln197_fu_2895_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        smem_address1 = zext_ln187_fu_2824_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        smem_address1 = zext_ln185_fu_2777_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        smem_address1 = zext_ln183_fu_2737_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        smem_address1 = zext_ln181_fu_2693_p1;
    end else if (((1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state60))) begin
        smem_address1 = grp_loady8_fu_1853_x_address1;
    end else begin
        smem_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state108))) begin
        smem_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state60))) begin
        smem_ce0 = grp_loady8_fu_1853_x_ce0;
    end else begin
        smem_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state108))) begin
        smem_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state60))) begin
        smem_ce1 = grp_loady8_fu_1853_x_ce1;
    end else begin
        smem_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state114))) begin
        smem_d0 = DATA_y_q0;
    end else if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state43))) begin
        smem_d0 = DATA_x_q0;
    end else begin
        smem_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state114))) begin
        smem_d1 = DATA_y_q1;
    end else if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state43))) begin
        smem_d1 = DATA_x_q1;
    end else begin
        smem_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state114))) begin
        smem_we0 = 1'b1;
    end else begin
        smem_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state114))) begin
        smem_we1 = 1'b1;
    end else begin
        smem_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state159)) begin
        work_x_address0 = zext_ln404_fu_4854_p1;
    end else if ((1'b1 == ap_CS_fsm_state152)) begin
        work_x_address0 = zext_ln402_fu_4794_p1;
    end else if ((1'b1 == ap_CS_fsm_state151)) begin
        work_x_address0 = zext_ln403_fu_4740_p1;
    end else if ((1'b1 == ap_CS_fsm_state145)) begin
        work_x_address0 = zext_ln405_fu_4712_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        work_x_address0 = zext_ln135_fu_2343_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        work_x_address0 = zext_ln137_fu_2296_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        work_x_address0 = zext_ln138_fu_2258_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        work_x_address0 = zext_ln134_fu_2220_p1;
    end else begin
        work_x_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state160)) begin
        work_x_address1 = zext_ln408_fu_4873_p1;
    end else if ((1'b1 == ap_CS_fsm_state153)) begin
        work_x_address1 = zext_ln407_fu_4835_p1;
    end else if ((1'b1 == ap_CS_fsm_state152)) begin
        work_x_address1 = zext_ln406_fu_4811_p1;
    end else if ((1'b1 == ap_CS_fsm_state145)) begin
        work_x_address1 = zext_ln376_fu_4695_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        work_x_address1 = zext_ln128_fu_2325_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        work_x_address1 = zext_ln133_fu_2275_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        work_x_address1 = zext_ln136_fu_2249_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        work_x_address1 = zext_ln132_fu_2210_p1;
    end else begin
        work_x_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state159) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state152))) begin
        work_x_ce0 = 1'b1;
    end else begin
        work_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state160) | (1'b1 == ap_CS_fsm_state153) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state152))) begin
        work_x_ce1 = 1'b1;
    end else begin
        work_x_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state159)) begin
        work_x_d0 = bitcast_ln404_fu_4860_p1;
    end else if ((1'b1 == ap_CS_fsm_state152)) begin
        work_x_d0 = bitcast_ln402_fu_4800_p1;
    end else if ((1'b1 == ap_CS_fsm_state151)) begin
        work_x_d0 = bitcast_ln403_fu_4746_p1;
    end else if ((1'b1 == ap_CS_fsm_state145)) begin
        work_x_d0 = bitcast_ln405_fu_4718_p1;
    end else begin
        work_x_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state160)) begin
        work_x_d1 = bitcast_ln408_fu_4879_p1;
    end else if ((1'b1 == ap_CS_fsm_state153)) begin
        work_x_d1 = bitcast_ln407_fu_4841_p1;
    end else if ((1'b1 == ap_CS_fsm_state152)) begin
        work_x_d1 = bitcast_ln406_fu_4817_p1;
    end else if ((1'b1 == ap_CS_fsm_state145)) begin
        work_x_d1 = bitcast_ln401_fu_4700_p1;
    end else begin
        work_x_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state159) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state152))) begin
        work_x_we0 = 1'b1;
    end else begin
        work_x_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state160) | (1'b1 == ap_CS_fsm_state153) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state152))) begin
        work_x_we1 = 1'b1;
    end else begin
        work_x_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state159)) begin
        work_y_address0 = zext_ln404_fu_4854_p1;
    end else if ((1'b1 == ap_CS_fsm_state152)) begin
        work_y_address0 = zext_ln402_fu_4794_p1;
    end else if ((1'b1 == ap_CS_fsm_state151)) begin
        work_y_address0 = zext_ln403_fu_4740_p1;
    end else if ((1'b1 == ap_CS_fsm_state145)) begin
        work_y_address0 = zext_ln405_fu_4712_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        work_y_address0 = zext_ln135_fu_2343_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        work_y_address0 = zext_ln137_fu_2296_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        work_y_address0 = zext_ln138_fu_2258_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        work_y_address0 = zext_ln134_fu_2220_p1;
    end else begin
        work_y_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state160)) begin
        work_y_address1 = zext_ln408_fu_4873_p1;
    end else if ((1'b1 == ap_CS_fsm_state153)) begin
        work_y_address1 = zext_ln407_fu_4835_p1;
    end else if ((1'b1 == ap_CS_fsm_state152)) begin
        work_y_address1 = zext_ln406_fu_4811_p1;
    end else if ((1'b1 == ap_CS_fsm_state145)) begin
        work_y_address1 = zext_ln376_fu_4695_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        work_y_address1 = zext_ln128_fu_2325_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        work_y_address1 = zext_ln133_fu_2275_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        work_y_address1 = zext_ln136_fu_2249_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        work_y_address1 = zext_ln132_fu_2210_p1;
    end else begin
        work_y_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state159) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state152))) begin
        work_y_ce0 = 1'b1;
    end else begin
        work_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state160) | (1'b1 == ap_CS_fsm_state153) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state152))) begin
        work_y_ce1 = 1'b1;
    end else begin
        work_y_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state159)) begin
        work_y_d0 = bitcast_ln413_fu_4865_p1;
    end else if ((1'b1 == ap_CS_fsm_state152)) begin
        work_y_d0 = bitcast_ln411_fu_4822_p1;
    end else if ((1'b1 == ap_CS_fsm_state151)) begin
        work_y_d0 = bitcast_ln412_fu_4751_p1;
    end else if ((1'b1 == ap_CS_fsm_state145)) begin
        work_y_d0 = bitcast_ln414_fu_4728_p1;
    end else begin
        work_y_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state160)) begin
        work_y_d1 = bitcast_ln417_fu_4884_p1;
    end else if ((1'b1 == ap_CS_fsm_state153)) begin
        work_y_d1 = bitcast_ln416_fu_4846_p1;
    end else if ((1'b1 == ap_CS_fsm_state152)) begin
        work_y_d1 = bitcast_ln415_fu_4827_p1;
    end else if ((1'b1 == ap_CS_fsm_state145)) begin
        work_y_d1 = bitcast_ln410_fu_4723_p1;
    end else begin
        work_y_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state159) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state152))) begin
        work_y_we0 = 1'b1;
    end else begin
        work_y_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state160) | (1'b1 == ap_CS_fsm_state153) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state152))) begin
        work_y_we1 = 1'b1;
    end else begin
        work_y_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln128_fu_2192_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if (((1'b1 == ap_CS_fsm_state33) & (grp_twiddles8_fu_1829_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == ap_CS_fsm_state39) & (icmp_ln176_fu_2640_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state44 : begin
            if (((1'b1 == ap_CS_fsm_state44) & (icmp_ln191_fu_2843_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state49 : begin
            if (((1'b1 == ap_CS_fsm_state49) & (icmp_ln208_fu_3071_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state54 : begin
            if (((1'b1 == ap_CS_fsm_state54) & (icmp_ln224_fu_3274_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            if (((1'b1 == ap_CS_fsm_state60) & (grp_loady8_fu_1853_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state66 : begin
            if (((1'b1 == ap_CS_fsm_state66) & (icmp_ln250_fu_3425_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            if (((1'b1 == ap_CS_fsm_state97) & (grp_twiddles8_fu_1829_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state103 : begin
            if (((1'b1 == ap_CS_fsm_state103) & (icmp_ln301_fu_3710_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state108;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state108 : begin
            if (((1'b1 == ap_CS_fsm_state108) & (icmp_ln317_fu_3913_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state109;
            end
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state113 : begin
            if (((1'b1 == ap_CS_fsm_state113) & (icmp_ln334_fu_4123_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state118;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state114;
            end
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state118 : begin
            if (((1'b1 == ap_CS_fsm_state118) & (icmp_ln350_fu_4326_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state130;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state119;
            end
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            if (((1'b1 == ap_CS_fsm_state124) & (grp_loady8_fu_1853_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state125;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state124;
            end
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state130 : begin
            if (((1'b1 == ap_CS_fsm_state130) & (icmp_ln376_fu_4460_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state131;
            end
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln128_fu_2198_p2 = (tid_fu_186 + 7'd1);

assign add_ln136_fu_2243_p2 = ($signed(zext_ln128_1_fu_2236_p1) + $signed(9'd320));

assign add_ln176_fu_2646_p2 = (tid_1_fu_210 + 7'd1);

assign add_ln182_fu_2697_p2 = ($signed(zext_ln174_2_fu_2690_p1) + $signed(9'd264));

assign add_ln183_fu_2731_p2 = (zext_ln174_1_fu_2728_p1 + 8'd66);

assign add_ln184_fu_2742_p2 = ($signed(zext_ln174_2_reg_5292) + $signed(9'd330));

assign add_ln185_fu_2772_p2 = ($signed(zext_ln174_1_reg_5308) + $signed(8'd132));

assign add_ln186_fu_2782_p2 = ($signed(zext_ln174_1_reg_5308) + $signed(8'd140));

assign add_ln187_fu_2819_p2 = (zext_ln174_2_reg_5292 + 9'd198);

assign add_ln188_fu_2829_p2 = (zext_ln174_fu_2816_p1 + 10'd462);

assign add_ln191_fu_2849_p2 = (tid_2_fu_214 + 7'd1);

assign add_ln198_fu_2904_p2 = (offset_1_fu_2889_p2 + 10'd32);

assign add_ln199_fu_2948_p2 = (offset_1_reg_5337 + 10'd8);

assign add_ln200_fu_2958_p2 = (offset_1_reg_5337 + 10'd40);

assign add_ln201_fu_2988_p2 = (offset_1_reg_5337 + 10'd16);

assign add_ln202_fu_2998_p2 = (offset_1_reg_5337 + 10'd48);

assign add_ln203_fu_3028_p2 = (offset_1_reg_5337 + 10'd24);

assign add_ln204_fu_3038_p2 = (offset_1_reg_5337 + 10'd56);

assign add_ln208_fu_3077_p2 = (tid_3_fu_218 + 7'd1);

assign add_ln215_fu_3128_p2 = ($signed(zext_ln174_5_fu_3121_p1) + $signed(9'd264));

assign add_ln216_fu_3162_p2 = (zext_ln174_4_fu_3159_p1 + 8'd66);

assign add_ln217_fu_3173_p2 = ($signed(zext_ln174_5_reg_5447) + $signed(9'd330));

assign add_ln218_fu_3203_p2 = ($signed(zext_ln174_4_reg_5463) + $signed(8'd132));

assign add_ln219_fu_3213_p2 = ($signed(zext_ln174_4_reg_5463) + $signed(8'd140));

assign add_ln220_fu_3250_p2 = (zext_ln174_5_reg_5447 + 9'd198);

assign add_ln221_fu_3260_p2 = (zext_ln174_3_fu_3247_p1 + 10'd462);

assign add_ln224_fu_3280_p2 = (tid_4_fu_222 + 7'd1);

assign add_ln238_fu_3415_p2 = (zext_ln238_fu_3411_p1 + zext_ln115_1_fu_3398_p1);

assign add_ln250_fu_3431_p2 = (tid_5_fu_226 + 7'd1);

assign add_ln301_fu_3716_p2 = (tid_6_fu_230 + 7'd1);

assign add_ln307_fu_3767_p2 = ($signed(zext_ln174_8_fu_3760_p1) + $signed(9'd288));

assign add_ln308_fu_3801_p2 = (zext_ln174_7_fu_3798_p1 + 8'd72);

assign add_ln309_fu_3812_p2 = ($signed(zext_ln174_8_reg_5785) + $signed(9'd360));

assign add_ln310_fu_3842_p2 = ($signed(zext_ln174_7_reg_5801) + $signed(8'd144));

assign add_ln311_fu_3852_p2 = ($signed(zext_ln174_7_reg_5801) + $signed(8'd176));

assign add_ln312_fu_3889_p2 = (zext_ln174_8_reg_5785 + 9'd216);

assign add_ln313_fu_3899_p2 = (zext_ln174_6_fu_3886_p1 + 10'd504);

assign add_ln317_fu_3919_p2 = (tid_7_fu_234 + 7'd1);

assign add_ln324_fu_3956_p2 = (zext_ln321_fu_3947_p1 + 10'd32);

assign add_ln325_fu_4000_p2 = (zext_ln321_reg_5835 + 10'd8);

assign add_ln326_fu_4010_p2 = (zext_ln321_reg_5835 + 10'd40);

assign add_ln327_fu_4040_p2 = (zext_ln321_reg_5835 + 10'd16);

assign add_ln328_fu_4050_p2 = (zext_ln321_reg_5835 + 10'd48);

assign add_ln329_fu_4080_p2 = (zext_ln321_reg_5835 + 10'd24);

assign add_ln330_fu_4090_p2 = (zext_ln321_reg_5835 + 10'd56);

assign add_ln334_fu_4129_p2 = (tid_8_fu_238 + 7'd1);

assign add_ln341_fu_4180_p2 = ($signed(zext_ln174_11_fu_4173_p1) + $signed(9'd288));

assign add_ln342_fu_4214_p2 = (zext_ln174_10_fu_4211_p1 + 8'd72);

assign add_ln343_fu_4225_p2 = ($signed(zext_ln174_11_reg_5940) + $signed(9'd360));

assign add_ln344_fu_4255_p2 = ($signed(zext_ln174_10_reg_5956) + $signed(8'd144));

assign add_ln345_fu_4265_p2 = ($signed(zext_ln174_10_reg_5956) + $signed(8'd176));

assign add_ln346_fu_4302_p2 = (zext_ln174_11_reg_5940 + 9'd216);

assign add_ln347_fu_4312_p2 = (zext_ln174_9_fu_4299_p1 + 10'd504);

assign add_ln350_fu_4332_p2 = (tid_9_fu_242 + 7'd1);

assign add_ln376_fu_4466_p2 = (tid_10_fu_246 + 7'd1);

assign add_ln406_fu_4805_p2 = ($signed(zext_ln376_1_fu_4756_p1) + $signed(9'd320));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd123];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd129];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd130];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd131];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd134];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd136];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state139 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd140];

assign ap_CS_fsm_state142 = ap_CS_fsm[32'd141];

assign ap_CS_fsm_state143 = ap_CS_fsm[32'd142];

assign ap_CS_fsm_state144 = ap_CS_fsm[32'd143];

assign ap_CS_fsm_state145 = ap_CS_fsm[32'd144];

assign ap_CS_fsm_state147 = ap_CS_fsm[32'd146];

assign ap_CS_fsm_state148 = ap_CS_fsm[32'd147];

assign ap_CS_fsm_state149 = ap_CS_fsm[32'd148];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state151 = ap_CS_fsm[32'd150];

assign ap_CS_fsm_state152 = ap_CS_fsm[32'd151];

assign ap_CS_fsm_state153 = ap_CS_fsm[32'd152];

assign ap_CS_fsm_state155 = ap_CS_fsm[32'd154];

assign ap_CS_fsm_state156 = ap_CS_fsm[32'd155];

assign ap_CS_fsm_state159 = ap_CS_fsm[32'd158];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state160 = ap_CS_fsm[32'd159];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign bitcast_ln135_fu_2376_p1 = work_x_q0;

assign bitcast_ln136_fu_2286_p1 = work_x_q1;

assign bitcast_ln137_fu_2349_p1 = work_x_q0;

assign bitcast_ln138_fu_2302_p1 = work_x_q0;

assign bitcast_ln144_fu_2388_p1 = work_y_q0;

assign bitcast_ln145_fu_2313_p1 = work_y_q1;

assign bitcast_ln146_fu_2361_p1 = work_y_q0;

assign bitcast_ln147_fu_2319_p1 = work_y_q0;

assign bitcast_ln150_10_fu_2440_p1 = reg_2007;

assign bitcast_ln150_11_fu_2450_p1 = xor_ln150_5_fu_2444_p2;

assign bitcast_ln150_12_fu_2486_p1 = reg_2007;

assign bitcast_ln150_13_fu_2496_p1 = xor_ln150_6_fu_2490_p2;

assign bitcast_ln150_14_fu_2501_p1 = reg_2002;

assign bitcast_ln150_15_fu_2511_p1 = xor_ln150_7_fu_2505_p2;

assign bitcast_ln150_16_fu_2516_p1 = reg_1993;

assign bitcast_ln150_17_fu_2526_p1 = xor_ln150_8_fu_2520_p2;

assign bitcast_ln150_18_fu_2531_p1 = reg_1984;

assign bitcast_ln150_19_fu_2541_p1 = xor_ln150_9_fu_2535_p2;

assign bitcast_ln150_1_fu_2404_p1 = xor_ln150_fu_2398_p2;

assign bitcast_ln150_2_fu_2409_p1 = reg_1966;

assign bitcast_ln150_3_fu_2419_p1 = xor_ln150_1_fu_2413_p2;

assign bitcast_ln150_4_fu_2456_p1 = reg_2037;

assign bitcast_ln150_5_fu_2466_p1 = xor_ln150_2_fu_2460_p2;

assign bitcast_ln150_6_fu_2471_p1 = reg_2028;

assign bitcast_ln150_7_fu_2481_p1 = xor_ln150_3_fu_2475_p2;

assign bitcast_ln150_8_fu_2424_p1 = reg_2002;

assign bitcast_ln150_9_fu_2434_p1 = xor_ln150_4_fu_2428_p2;

assign bitcast_ln150_fu_2394_p1 = reg_1975;

assign bitcast_ln271_10_fu_3561_p1 = reg_2007;

assign bitcast_ln271_11_fu_3571_p1 = xor_ln271_5_fu_3565_p2;

assign bitcast_ln271_12_fu_3615_p1 = reg_2007;

assign bitcast_ln271_13_fu_3625_p1 = xor_ln271_6_fu_3619_p2;

assign bitcast_ln271_14_fu_3630_p1 = reg_2002;

assign bitcast_ln271_15_fu_3640_p1 = xor_ln271_7_fu_3634_p2;

assign bitcast_ln271_16_fu_3675_p1 = sub33_reg_5726;

assign bitcast_ln271_17_fu_3684_p1 = xor_ln271_8_fu_3678_p2;

assign bitcast_ln271_18_fu_3689_p1 = tmp_3_reg_5720;

assign bitcast_ln271_19_fu_3698_p1 = xor_ln271_9_fu_3692_p2;

assign bitcast_ln271_1_fu_3525_p1 = xor_ln271_fu_3519_p2;

assign bitcast_ln271_2_fu_3530_p1 = reg_1966;

assign bitcast_ln271_3_fu_3540_p1 = xor_ln271_1_fu_3534_p2;

assign bitcast_ln271_4_fu_3645_p1 = reg_2037;

assign bitcast_ln271_5_fu_3655_p1 = xor_ln271_2_fu_3649_p2;

assign bitcast_ln271_6_fu_3660_p1 = reg_2028;

assign bitcast_ln271_7_fu_3670_p1 = xor_ln271_3_fu_3664_p2;

assign bitcast_ln271_8_fu_3545_p1 = reg_2002;

assign bitcast_ln271_9_fu_3555_p1 = xor_ln271_4_fu_3549_p2;

assign bitcast_ln271_fu_3515_p1 = reg_1975;

assign bitcast_ln398_10_fu_4619_p1 = reg_2007;

assign bitcast_ln398_11_fu_4629_p1 = xor_ln398_5_fu_4623_p2;

assign bitcast_ln398_12_fu_4665_p1 = reg_2007;

assign bitcast_ln398_13_fu_4675_p1 = xor_ln398_6_fu_4669_p2;

assign bitcast_ln398_14_fu_4680_p1 = reg_2002;

assign bitcast_ln398_15_fu_4690_p1 = xor_ln398_7_fu_4684_p2;

assign bitcast_ln398_16_fu_4759_p1 = reg_1993;

assign bitcast_ln398_17_fu_4769_p1 = xor_ln398_8_fu_4763_p2;

assign bitcast_ln398_18_fu_4774_p1 = reg_1984;

assign bitcast_ln398_19_fu_4784_p1 = xor_ln398_9_fu_4778_p2;

assign bitcast_ln398_1_fu_4583_p1 = xor_ln398_fu_4577_p2;

assign bitcast_ln398_2_fu_4588_p1 = reg_1966;

assign bitcast_ln398_3_fu_4598_p1 = xor_ln398_1_fu_4592_p2;

assign bitcast_ln398_4_fu_4635_p1 = reg_2037;

assign bitcast_ln398_5_fu_4645_p1 = xor_ln398_2_fu_4639_p2;

assign bitcast_ln398_6_fu_4650_p1 = reg_2028;

assign bitcast_ln398_7_fu_4660_p1 = xor_ln398_3_fu_4654_p2;

assign bitcast_ln398_8_fu_4603_p1 = reg_2002;

assign bitcast_ln398_9_fu_4613_p1 = xor_ln398_4_fu_4607_p2;

assign bitcast_ln398_fu_4573_p1 = reg_1975;

assign bitcast_ln401_fu_4700_p1 = grp_fu_1860_p2;

assign bitcast_ln402_fu_4800_p1 = grp_fu_1860_p2;

assign bitcast_ln403_fu_4746_p1 = grp_fu_1860_p2;

assign bitcast_ln404_fu_4860_p1 = grp_fu_1860_p2;

assign bitcast_ln405_fu_4718_p1 = grp_fu_1868_p2;

assign bitcast_ln406_fu_4817_p1 = grp_fu_1868_p2;

assign bitcast_ln407_fu_4841_p1 = reg_2028;

assign bitcast_ln408_fu_4879_p1 = reg_1966;

assign bitcast_ln410_fu_4723_p1 = grp_fu_1864_p2;

assign bitcast_ln411_fu_4822_p1 = grp_fu_1864_p2;

assign bitcast_ln412_fu_4751_p1 = grp_fu_1864_p2;

assign bitcast_ln413_fu_4865_p1 = grp_fu_1864_p2;

assign bitcast_ln414_fu_4728_p1 = grp_fu_1872_p2;

assign bitcast_ln415_fu_4827_p1 = grp_fu_1872_p2;

assign bitcast_ln416_fu_4846_p1 = reg_2037;

assign bitcast_ln417_fu_4884_p1 = reg_1975;

assign c0_x_1_fu_2239_p1 = work_x_q1;

assign c0_x_2_fu_2330_p1 = work_x_q1;

assign c0_x_3_fu_2281_p1 = work_x_load_3_reg_5026;

assign c0_x_fu_2370_p1 = work_x_q1;

assign c0_y_1_fu_2264_p1 = work_y_q1;

assign c0_y_2_fu_2355_p1 = work_y_q1;

assign c0_y_3_fu_2308_p1 = work_y_load_3_reg_5047;

assign c0_y_fu_2382_p1 = work_y_q1;

assign grp_loady8_fu_1853_ap_start = grp_loady8_fu_1853_ap_start_reg;

assign grp_twiddles8_fu_1829_ap_start = grp_twiddles8_fu_1829_ap_start_reg;

assign hi_fu_2859_p4 = {{tid_2_fu_214[5:3]}};

assign icmp_ln128_fu_2192_p2 = ((tid_fu_186 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln176_fu_2640_p2 = ((tid_1_fu_210 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln191_fu_2843_p2 = ((tid_2_fu_214 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln208_fu_3071_p2 = ((tid_3_fu_218 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln224_fu_3274_p2 = ((tid_4_fu_222 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln250_fu_3425_p2 = ((tid_5_fu_226 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln301_fu_3710_p2 = ((tid_6_fu_230 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln317_fu_3913_p2 = ((tid_7_fu_234 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln334_fu_4123_p2 = ((tid_8_fu_238 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln350_fu_4326_p2 = ((tid_9_fu_242 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln376_fu_4460_p2 = ((tid_10_fu_246 == 7'd64) ? 1'b1 : 1'b0);

assign offset_1_fu_2889_p2 = (zext_ln195_fu_2885_p1 + zext_ln115_fu_2869_p1);

assign offset_2_fu_3083_p1 = tid_3_fu_218[5:0];

assign offset_3_fu_3722_p1 = tid_6_fu_230[5:0];

assign offset_4_fu_3939_p3 = {{tmp_13_fu_3925_p4}, {trunc_ln321_fu_3935_p1}};

assign offset_5_fu_4135_p1 = tid_8_fu_238[5:0];

assign offset_fu_2652_p1 = tid_1_fu_210[5:0];

assign or_ln157_fu_2559_p2 = (shl_ln_fu_2546_p3 | 9'd1);

assign or_ln158_fu_2571_p2 = (shl_ln_reg_5244 | 9'd2);

assign or_ln159_fu_2582_p2 = (shl_ln_reg_5244 | 9'd3);

assign or_ln160_fu_2593_p2 = (shl_ln_reg_5244 | 9'd4);

assign or_ln161_fu_2604_p2 = (shl_ln_reg_5244 | 9'd5);

assign or_ln162_fu_2615_p2 = (shl_ln_reg_5244 | 9'd6);

assign or_ln163_fu_2626_p2 = (shl_ln_reg_5244 | 9'd7);

assign or_ln182_fu_2669_p2 = (shl_ln1_fu_2656_p3 | 9'd1);

assign or_ln183_fu_2708_p2 = (shl_ln1_reg_5265 | 9'd4);

assign or_ln184_fu_2718_p2 = (shl_ln1_reg_5265 | 9'd5);

assign or_ln185_fu_2752_p2 = (shl_ln1_reg_5265 | 9'd2);

assign or_ln186_fu_2762_p2 = (shl_ln1_reg_5265 | 9'd3);

assign or_ln187_fu_2796_p2 = (shl_ln1_reg_5265 | 9'd6);

assign or_ln188_fu_2806_p2 = (shl_ln1_reg_5265 | 9'd7);

assign or_ln198_fu_2937_p2 = (shl_ln2_fu_2925_p3 | 9'd4);

assign or_ln199_fu_2968_p2 = (shl_ln2_reg_5369 | 9'd1);

assign or_ln1_fu_3401_p5 = {{{{trunc_ln235_reg_5512}, {2'd0}}, {trunc_ln235_reg_5512}}, {1'd0}};

assign or_ln200_fu_2978_p2 = (shl_ln2_reg_5369 | 9'd5);

assign or_ln201_fu_3008_p2 = (shl_ln2_reg_5369 | 9'd2);

assign or_ln202_fu_3018_p2 = (shl_ln2_reg_5369 | 9'd6);

assign or_ln203_fu_3048_p2 = (shl_ln2_reg_5369 | 9'd3);

assign or_ln204_fu_3058_p2 = (shl_ln2_reg_5369 | 9'd7);

assign or_ln215_fu_3100_p2 = (shl_ln3_fu_3087_p3 | 9'd1);

assign or_ln216_fu_3139_p2 = (shl_ln3_reg_5420 | 9'd4);

assign or_ln217_fu_3149_p2 = (shl_ln3_reg_5420 | 9'd5);

assign or_ln218_fu_3183_p2 = (shl_ln3_reg_5420 | 9'd2);

assign or_ln219_fu_3193_p2 = (shl_ln3_reg_5420 | 9'd3);

assign or_ln220_fu_3227_p2 = (shl_ln3_reg_5420 | 9'd6);

assign or_ln221_fu_3237_p2 = (shl_ln3_reg_5420 | 9'd7);

assign or_ln227_fu_3303_p2 = (shl_ln4_fu_3290_p3 | 9'd1);

assign or_ln228_fu_3338_p2 = (shl_ln4_reg_5492 | 9'd2);

assign or_ln229_fu_3348_p2 = (shl_ln4_reg_5492 | 9'd3);

assign or_ln230_fu_3358_p2 = (shl_ln4_reg_5492 | 9'd4);

assign or_ln231_fu_3368_p2 = (shl_ln4_reg_5492 | 9'd5);

assign or_ln232_fu_3378_p2 = (shl_ln4_reg_5492 | 9'd6);

assign or_ln233_fu_3388_p2 = (shl_ln4_reg_5492 | 9'd7);

assign or_ln253_fu_3449_p2 = (shl_ln5_fu_3441_p3 | 9'd1);

assign or_ln254_fu_3577_p2 = (shl_ln5_reg_5568 | 9'd2);

assign or_ln255_fu_3461_p2 = (shl_ln5_fu_3441_p3 | 9'd3);

assign or_ln256_fu_3604_p2 = (shl_ln5_reg_5568 | 9'd4);

assign or_ln257_fu_3493_p2 = (shl_ln5_reg_5568 | 9'd5);

assign or_ln258_fu_3588_p2 = (shl_ln5_reg_5568 | 9'd6);

assign or_ln259_fu_3504_p2 = (shl_ln5_reg_5568 | 9'd7);

assign or_ln307_fu_3739_p2 = (shl_ln6_fu_3726_p3 | 9'd1);

assign or_ln308_fu_3778_p2 = (shl_ln6_reg_5758 | 9'd4);

assign or_ln309_fu_3788_p2 = (shl_ln6_reg_5758 | 9'd5);

assign or_ln310_fu_3822_p2 = (shl_ln6_reg_5758 | 9'd2);

assign or_ln311_fu_3832_p2 = (shl_ln6_reg_5758 | 9'd3);

assign or_ln312_fu_3866_p2 = (shl_ln6_reg_5758 | 9'd6);

assign or_ln313_fu_3876_p2 = (shl_ln6_reg_5758 | 9'd7);

assign or_ln324_fu_3989_p2 = (shl_ln7_fu_3977_p3 | 9'd4);

assign or_ln325_fu_4020_p2 = (shl_ln7_reg_5862 | 9'd1);

assign or_ln326_fu_4030_p2 = (shl_ln7_reg_5862 | 9'd5);

assign or_ln327_fu_4060_p2 = (shl_ln7_reg_5862 | 9'd2);

assign or_ln328_fu_4070_p2 = (shl_ln7_reg_5862 | 9'd6);

assign or_ln329_fu_4100_p2 = (shl_ln7_reg_5862 | 9'd3);

assign or_ln330_fu_4110_p2 = (shl_ln7_reg_5862 | 9'd7);

assign or_ln341_fu_4152_p2 = (shl_ln8_fu_4139_p3 | 9'd1);

assign or_ln342_fu_4191_p2 = (shl_ln8_reg_5913 | 9'd4);

assign or_ln343_fu_4201_p2 = (shl_ln8_reg_5913 | 9'd5);

assign or_ln344_fu_4235_p2 = (shl_ln8_reg_5913 | 9'd2);

assign or_ln345_fu_4245_p2 = (shl_ln8_reg_5913 | 9'd3);

assign or_ln346_fu_4279_p2 = (shl_ln8_reg_5913 | 9'd6);

assign or_ln347_fu_4289_p2 = (shl_ln8_reg_5913 | 9'd7);

assign or_ln353_fu_4355_p2 = (shl_ln9_fu_4342_p3 | 9'd1);

assign or_ln354_fu_4386_p2 = (shl_ln9_reg_5990 | 9'd2);

assign or_ln355_fu_4396_p2 = (shl_ln9_reg_5990 | 9'd3);

assign or_ln356_fu_4406_p2 = (shl_ln9_reg_5990 | 9'd4);

assign or_ln357_fu_4416_p2 = (shl_ln9_reg_5990 | 9'd5);

assign or_ln358_fu_4426_p2 = (shl_ln9_reg_5990 | 9'd6);

assign or_ln359_fu_4436_p2 = (shl_ln9_reg_5990 | 9'd7);

assign or_ln380_fu_4484_p2 = (shl_ln10_fu_4476_p3 | 9'd1);

assign or_ln381_fu_4535_p2 = (shl_ln10_reg_6069 | 9'd2);

assign or_ln382_fu_4496_p2 = (shl_ln10_fu_4476_p3 | 9'd3);

assign or_ln383_fu_4562_p2 = (shl_ln10_reg_6069 | 9'd4);

assign or_ln384_fu_4513_p2 = (shl_ln10_reg_6069 | 9'd5);

assign or_ln385_fu_4546_p2 = (shl_ln10_reg_6069 | 9'd6);

assign or_ln386_fu_4524_p2 = (shl_ln10_reg_6069 | 9'd7);

assign or_ln_fu_2873_p5 = {{{{trunc_ln193_fu_2855_p1}, {2'd0}}, {trunc_ln193_fu_2855_p1}}, {1'd0}};

assign sext_ln134_fu_2216_p1 = xor_ln132_fu_2204_p2;

assign sext_ln137_fu_2292_p1 = zext_ln133_cast_fu_2268_p3;

assign sext_ln138_fu_2255_p1 = xor_ln132_reg_4988;

assign sext_ln186_fu_2787_p1 = $signed(add_ln186_fu_2782_p2);

assign sext_ln219_fu_3218_p1 = $signed(add_ln219_fu_3213_p2);

assign sext_ln311_fu_3857_p1 = $signed(add_ln311_fu_3852_p2);

assign sext_ln345_fu_4270_p1 = $signed(add_ln345_fu_4265_p2);

assign sext_ln404_fu_4851_p1 = xor_ln402_reg_6264;

assign sext_ln407_fu_4832_p1 = zext_ln403_cast_reg_6249;

assign sext_ln408_fu_4870_p1 = xor_ln402_reg_6264;

assign shl_ln10_fu_4476_p3 = {{trunc_ln379_fu_4472_p1}, {3'd0}};

assign shl_ln1_fu_2656_p3 = {{offset_fu_2652_p1}, {3'd0}};

assign shl_ln2_fu_2925_p3 = {{trunc_ln197_reg_5352}, {3'd0}};

assign shl_ln3_fu_3087_p3 = {{offset_2_fu_3083_p1}, {3'd0}};

assign shl_ln4_fu_3290_p3 = {{trunc_ln226_fu_3286_p1}, {3'd0}};

assign shl_ln5_fu_3441_p3 = {{trunc_ln252_fu_3437_p1}, {3'd0}};

assign shl_ln6_fu_3726_p3 = {{offset_3_fu_3722_p1}, {3'd0}};

assign shl_ln7_fu_3977_p3 = {{trunc_ln321_reg_5830}, {3'd0}};

assign shl_ln8_fu_4139_p3 = {{offset_5_fu_4135_p1}, {3'd0}};

assign shl_ln9_fu_4342_p3 = {{trunc_ln352_fu_4338_p1}, {3'd0}};

assign shl_ln_fu_2546_p3 = {{trunc_ln153_reg_5162}, {3'd0}};

assign tmp_13_fu_3925_p4 = {{tid_7_fu_234[5:3]}};

assign tmp_s_fu_4446_p3 = {{tmp_14_reg_6010}, {trunc_ln352_reg_5985}};

assign trunc_ln153_fu_2367_p1 = tid_11_reg_4976[5:0];

assign trunc_ln193_fu_2855_p1 = tid_2_fu_214[2:0];

assign trunc_ln197_fu_2900_p1 = tid_2_fu_214[5:0];

assign trunc_ln226_fu_3286_p1 = tid_4_fu_222[5:0];

assign trunc_ln235_fu_3314_p1 = tid_4_fu_222[2:0];

assign trunc_ln252_fu_3437_p1 = tid_5_fu_226[5:0];

assign trunc_ln321_fu_3935_p1 = tid_7_fu_234[5:0];

assign trunc_ln352_fu_4338_p1 = tid_9_fu_242[5:0];

assign trunc_ln379_fu_4472_p1 = tid_10_fu_246[5:0];

assign xor_ln132_fu_2204_p2 = (tid_fu_186 ^ 7'd64);

assign xor_ln150_1_fu_2413_p2 = (bitcast_ln150_2_fu_2409_p1 ^ 64'd9223372036854775808);

assign xor_ln150_2_fu_2460_p2 = (bitcast_ln150_4_fu_2456_p1 ^ 64'd9223372036854775808);

assign xor_ln150_3_fu_2475_p2 = (bitcast_ln150_6_fu_2471_p1 ^ 64'd9223372036854775808);

assign xor_ln150_4_fu_2428_p2 = (bitcast_ln150_8_fu_2424_p1 ^ 64'd9223372036854775808);

assign xor_ln150_5_fu_2444_p2 = (bitcast_ln150_10_fu_2440_p1 ^ 64'd9223372036854775808);

assign xor_ln150_6_fu_2490_p2 = (bitcast_ln150_12_fu_2486_p1 ^ 64'd9223372036854775808);

assign xor_ln150_7_fu_2505_p2 = (bitcast_ln150_14_fu_2501_p1 ^ 64'd9223372036854775808);

assign xor_ln150_8_fu_2520_p2 = (bitcast_ln150_16_fu_2516_p1 ^ 64'd9223372036854775808);

assign xor_ln150_9_fu_2535_p2 = (bitcast_ln150_18_fu_2531_p1 ^ 64'd9223372036854775808);

assign xor_ln150_fu_2398_p2 = (bitcast_ln150_fu_2394_p1 ^ 64'd9223372036854775808);

assign xor_ln271_1_fu_3534_p2 = (bitcast_ln271_2_fu_3530_p1 ^ 64'd9223372036854775808);

assign xor_ln271_2_fu_3649_p2 = (bitcast_ln271_4_fu_3645_p1 ^ 64'd9223372036854775808);

assign xor_ln271_3_fu_3664_p2 = (bitcast_ln271_6_fu_3660_p1 ^ 64'd9223372036854775808);

assign xor_ln271_4_fu_3549_p2 = (bitcast_ln271_8_fu_3545_p1 ^ 64'd9223372036854775808);

assign xor_ln271_5_fu_3565_p2 = (bitcast_ln271_10_fu_3561_p1 ^ 64'd9223372036854775808);

assign xor_ln271_6_fu_3619_p2 = (bitcast_ln271_12_fu_3615_p1 ^ 64'd9223372036854775808);

assign xor_ln271_7_fu_3634_p2 = (bitcast_ln271_14_fu_3630_p1 ^ 64'd9223372036854775808);

assign xor_ln271_8_fu_3678_p2 = (bitcast_ln271_16_fu_3675_p1 ^ 64'd9223372036854775808);

assign xor_ln271_9_fu_3692_p2 = (bitcast_ln271_18_fu_3689_p1 ^ 64'd9223372036854775808);

assign xor_ln271_fu_3519_p2 = (bitcast_ln271_fu_3515_p1 ^ 64'd9223372036854775808);

assign xor_ln398_1_fu_4592_p2 = (bitcast_ln398_2_fu_4588_p1 ^ 64'd9223372036854775808);

assign xor_ln398_2_fu_4639_p2 = (bitcast_ln398_4_fu_4635_p1 ^ 64'd9223372036854775808);

assign xor_ln398_3_fu_4654_p2 = (bitcast_ln398_6_fu_4650_p1 ^ 64'd9223372036854775808);

assign xor_ln398_4_fu_4607_p2 = (bitcast_ln398_8_fu_4603_p1 ^ 64'd9223372036854775808);

assign xor_ln398_5_fu_4623_p2 = (bitcast_ln398_10_fu_4619_p1 ^ 64'd9223372036854775808);

assign xor_ln398_6_fu_4669_p2 = (bitcast_ln398_12_fu_4665_p1 ^ 64'd9223372036854775808);

assign xor_ln398_7_fu_4684_p2 = (bitcast_ln398_14_fu_4680_p1 ^ 64'd9223372036854775808);

assign xor_ln398_8_fu_4763_p2 = (bitcast_ln398_16_fu_4759_p1 ^ 64'd9223372036854775808);

assign xor_ln398_9_fu_4778_p2 = (bitcast_ln398_18_fu_4774_p1 ^ 64'd9223372036854775808);

assign xor_ln398_fu_4577_p2 = (bitcast_ln398_fu_4573_p1 ^ 64'd9223372036854775808);

assign xor_ln402_fu_4789_p2 = (tid_21_reg_6057 ^ 7'd64);

assign zext_ln115_1_fu_3398_p1 = hi_1_reg_5518;

assign zext_ln115_fu_2869_p1 = hi_fu_2859_p4;

assign zext_ln128_1_fu_2236_p1 = tid_11_reg_4976;

assign zext_ln128_fu_2325_p1 = tid_11_reg_4976;

assign zext_ln132_fu_2210_p1 = $unsigned(xor_ln132_fu_2204_p2);

assign zext_ln133_cast_fu_2268_p3 = {{1'd1}, {tid_11_reg_4976}};

assign zext_ln133_fu_2275_p1 = $unsigned(zext_ln133_cast_fu_2268_p3);

assign zext_ln134_fu_2220_p1 = $unsigned(sext_ln134_fu_2216_p1);

assign zext_ln135_cast_fu_2336_p3 = {{2'd2}, {tid_11_reg_4976}};

assign zext_ln135_fu_2343_p1 = zext_ln135_cast_fu_2336_p3;

assign zext_ln136_fu_2249_p1 = add_ln136_fu_2243_p2;

assign zext_ln137_fu_2296_p1 = $unsigned(sext_ln137_fu_2292_p1);

assign zext_ln138_fu_2258_p1 = $unsigned(sext_ln138_fu_2255_p1);

assign zext_ln156_fu_2553_p1 = shl_ln_fu_2546_p3;

assign zext_ln157_fu_2565_p1 = or_ln157_fu_2559_p2;

assign zext_ln158_fu_2576_p1 = or_ln158_fu_2571_p2;

assign zext_ln159_fu_2587_p1 = or_ln159_fu_2582_p2;

assign zext_ln160_fu_2598_p1 = or_ln160_fu_2593_p2;

assign zext_ln161_fu_2609_p1 = or_ln161_fu_2604_p2;

assign zext_ln162_fu_2620_p1 = or_ln162_fu_2615_p2;

assign zext_ln163_fu_2631_p1 = or_ln163_fu_2626_p2;

assign zext_ln174_10_fu_4211_p1 = offset_5_reg_5905;

assign zext_ln174_11_fu_4173_p1 = offset_5_reg_5905;

assign zext_ln174_1_fu_2728_p1 = offset_reg_5257;

assign zext_ln174_2_fu_2690_p1 = offset_reg_5257;

assign zext_ln174_3_fu_3247_p1 = offset_2_reg_5412;

assign zext_ln174_4_fu_3159_p1 = offset_2_reg_5412;

assign zext_ln174_5_fu_3121_p1 = offset_2_reg_5412;

assign zext_ln174_6_fu_3886_p1 = offset_3_reg_5750;

assign zext_ln174_7_fu_3798_p1 = offset_3_reg_5750;

assign zext_ln174_8_fu_3760_p1 = offset_3_reg_5750;

assign zext_ln174_9_fu_4299_p1 = offset_5_reg_5905;

assign zext_ln174_fu_2816_p1 = offset_reg_5257;

assign zext_ln181_1_fu_2664_p1 = shl_ln1_fu_2656_p3;

assign zext_ln181_fu_2693_p1 = offset_reg_5257;

assign zext_ln182_1_fu_2675_p1 = or_ln182_fu_2669_p2;

assign zext_ln182_fu_2703_p1 = add_ln182_fu_2697_p2;

assign zext_ln183_1_fu_2713_p1 = or_ln183_fu_2708_p2;

assign zext_ln183_fu_2737_p1 = add_ln183_fu_2731_p2;

assign zext_ln184_1_fu_2723_p1 = or_ln184_fu_2718_p2;

assign zext_ln184_fu_2747_p1 = add_ln184_fu_2742_p2;

assign zext_ln185_1_fu_2757_p1 = or_ln185_fu_2752_p2;

assign zext_ln185_fu_2777_p1 = add_ln185_fu_2772_p2;

assign zext_ln186_1_fu_2791_p1 = $unsigned(sext_ln186_fu_2787_p1);

assign zext_ln186_fu_2767_p1 = or_ln186_fu_2762_p2;

assign zext_ln187_1_fu_2801_p1 = or_ln187_fu_2796_p2;

assign zext_ln187_fu_2824_p1 = add_ln187_fu_2819_p2;

assign zext_ln188_1_fu_2811_p1 = or_ln188_fu_2806_p2;

assign zext_ln188_fu_2835_p1 = add_ln188_fu_2829_p2;

assign zext_ln195_fu_2885_p1 = or_ln_fu_2873_p5;

assign zext_ln197_1_fu_2932_p1 = shl_ln2_fu_2925_p3;

assign zext_ln197_fu_2895_p1 = offset_1_fu_2889_p2;

assign zext_ln198_1_fu_2943_p1 = or_ln198_fu_2937_p2;

assign zext_ln198_fu_2910_p1 = add_ln198_fu_2904_p2;

assign zext_ln199_1_fu_2973_p1 = or_ln199_fu_2968_p2;

assign zext_ln199_fu_2953_p1 = add_ln199_fu_2948_p2;

assign zext_ln200_1_fu_2983_p1 = or_ln200_fu_2978_p2;

assign zext_ln200_fu_2963_p1 = add_ln200_fu_2958_p2;

assign zext_ln201_1_fu_3013_p1 = or_ln201_fu_3008_p2;

assign zext_ln201_fu_2993_p1 = add_ln201_fu_2988_p2;

assign zext_ln202_1_fu_3023_p1 = or_ln202_fu_3018_p2;

assign zext_ln202_fu_3003_p1 = add_ln202_fu_2998_p2;

assign zext_ln203_1_fu_3053_p1 = or_ln203_fu_3048_p2;

assign zext_ln203_fu_3033_p1 = add_ln203_fu_3028_p2;

assign zext_ln204_1_fu_3063_p1 = or_ln204_fu_3058_p2;

assign zext_ln204_fu_3043_p1 = add_ln204_fu_3038_p2;

assign zext_ln214_1_fu_3095_p1 = shl_ln3_fu_3087_p3;

assign zext_ln214_fu_3124_p1 = offset_2_reg_5412;

assign zext_ln215_1_fu_3106_p1 = or_ln215_fu_3100_p2;

assign zext_ln215_fu_3134_p1 = add_ln215_fu_3128_p2;

assign zext_ln216_1_fu_3144_p1 = or_ln216_fu_3139_p2;

assign zext_ln216_fu_3168_p1 = add_ln216_fu_3162_p2;

assign zext_ln217_1_fu_3154_p1 = or_ln217_fu_3149_p2;

assign zext_ln217_fu_3178_p1 = add_ln217_fu_3173_p2;

assign zext_ln218_1_fu_3188_p1 = or_ln218_fu_3183_p2;

assign zext_ln218_fu_3208_p1 = add_ln218_fu_3203_p2;

assign zext_ln219_1_fu_3222_p1 = $unsigned(sext_ln219_fu_3218_p1);

assign zext_ln219_fu_3198_p1 = or_ln219_fu_3193_p2;

assign zext_ln220_1_fu_3232_p1 = or_ln220_fu_3227_p2;

assign zext_ln220_fu_3255_p1 = add_ln220_fu_3250_p2;

assign zext_ln221_1_fu_3242_p1 = or_ln221_fu_3237_p2;

assign zext_ln221_fu_3266_p1 = add_ln221_fu_3260_p2;

assign zext_ln226_fu_3298_p1 = shl_ln4_fu_3290_p3;

assign zext_ln227_fu_3309_p1 = or_ln227_fu_3303_p2;

assign zext_ln228_fu_3343_p1 = or_ln228_fu_3338_p2;

assign zext_ln229_fu_3353_p1 = or_ln229_fu_3348_p2;

assign zext_ln230_fu_3363_p1 = or_ln230_fu_3358_p2;

assign zext_ln231_fu_3373_p1 = or_ln231_fu_3368_p2;

assign zext_ln232_fu_3383_p1 = or_ln232_fu_3378_p2;

assign zext_ln233_fu_3393_p1 = or_ln233_fu_3388_p2;

assign zext_ln238_fu_3411_p1 = or_ln1_fu_3401_p5;

assign zext_ln252_fu_3599_p1 = shl_ln5_reg_5568;

assign zext_ln253_fu_3455_p1 = or_ln253_fu_3449_p2;

assign zext_ln254_fu_3582_p1 = or_ln254_fu_3577_p2;

assign zext_ln255_fu_3467_p1 = or_ln255_fu_3461_p2;

assign zext_ln256_fu_3609_p1 = or_ln256_fu_3604_p2;

assign zext_ln257_fu_3498_p1 = or_ln257_fu_3493_p2;

assign zext_ln258_fu_3593_p1 = or_ln258_fu_3588_p2;

assign zext_ln259_fu_3509_p1 = or_ln259_fu_3504_p2;

assign zext_ln274_fu_3703_p1 = hi_2_reg_5600;

assign zext_ln306_1_fu_3734_p1 = shl_ln6_fu_3726_p3;

assign zext_ln306_fu_3763_p1 = offset_3_reg_5750;

assign zext_ln307_1_fu_3745_p1 = or_ln307_fu_3739_p2;

assign zext_ln307_fu_3773_p1 = add_ln307_fu_3767_p2;

assign zext_ln308_1_fu_3783_p1 = or_ln308_fu_3778_p2;

assign zext_ln308_fu_3807_p1 = add_ln308_fu_3801_p2;

assign zext_ln309_1_fu_3793_p1 = or_ln309_fu_3788_p2;

assign zext_ln309_fu_3817_p1 = add_ln309_fu_3812_p2;

assign zext_ln310_1_fu_3827_p1 = or_ln310_fu_3822_p2;

assign zext_ln310_fu_3847_p1 = add_ln310_fu_3842_p2;

assign zext_ln311_1_fu_3861_p1 = $unsigned(sext_ln311_fu_3857_p1);

assign zext_ln311_fu_3837_p1 = or_ln311_fu_3832_p2;

assign zext_ln312_1_fu_3871_p1 = or_ln312_fu_3866_p2;

assign zext_ln312_fu_3894_p1 = add_ln312_fu_3889_p2;

assign zext_ln313_1_fu_3881_p1 = or_ln313_fu_3876_p2;

assign zext_ln313_fu_3905_p1 = add_ln313_fu_3899_p2;

assign zext_ln321_fu_3947_p1 = offset_4_fu_3939_p3;

assign zext_ln323_1_fu_3984_p1 = shl_ln7_fu_3977_p3;

assign zext_ln323_fu_3951_p1 = offset_4_fu_3939_p3;

assign zext_ln324_1_fu_3995_p1 = or_ln324_fu_3989_p2;

assign zext_ln324_fu_3962_p1 = add_ln324_fu_3956_p2;

assign zext_ln325_1_fu_4025_p1 = or_ln325_fu_4020_p2;

assign zext_ln325_fu_4005_p1 = add_ln325_fu_4000_p2;

assign zext_ln326_1_fu_4035_p1 = or_ln326_fu_4030_p2;

assign zext_ln326_fu_4015_p1 = add_ln326_fu_4010_p2;

assign zext_ln327_1_fu_4065_p1 = or_ln327_fu_4060_p2;

assign zext_ln327_fu_4045_p1 = add_ln327_fu_4040_p2;

assign zext_ln328_1_fu_4075_p1 = or_ln328_fu_4070_p2;

assign zext_ln328_fu_4055_p1 = add_ln328_fu_4050_p2;

assign zext_ln329_1_fu_4105_p1 = or_ln329_fu_4100_p2;

assign zext_ln329_fu_4085_p1 = add_ln329_fu_4080_p2;

assign zext_ln330_1_fu_4115_p1 = or_ln330_fu_4110_p2;

assign zext_ln330_fu_4095_p1 = add_ln330_fu_4090_p2;

assign zext_ln340_1_fu_4147_p1 = shl_ln8_fu_4139_p3;

assign zext_ln340_fu_4176_p1 = offset_5_reg_5905;

assign zext_ln341_1_fu_4158_p1 = or_ln341_fu_4152_p2;

assign zext_ln341_fu_4186_p1 = add_ln341_fu_4180_p2;

assign zext_ln342_1_fu_4196_p1 = or_ln342_fu_4191_p2;

assign zext_ln342_fu_4220_p1 = add_ln342_fu_4214_p2;

assign zext_ln343_1_fu_4206_p1 = or_ln343_fu_4201_p2;

assign zext_ln343_fu_4230_p1 = add_ln343_fu_4225_p2;

assign zext_ln344_1_fu_4240_p1 = or_ln344_fu_4235_p2;

assign zext_ln344_fu_4260_p1 = add_ln344_fu_4255_p2;

assign zext_ln345_1_fu_4274_p1 = $unsigned(sext_ln345_fu_4270_p1);

assign zext_ln345_fu_4250_p1 = or_ln345_fu_4245_p2;

assign zext_ln346_1_fu_4284_p1 = or_ln346_fu_4279_p2;

assign zext_ln346_fu_4307_p1 = add_ln346_fu_4302_p2;

assign zext_ln347_1_fu_4294_p1 = or_ln347_fu_4289_p2;

assign zext_ln347_fu_4318_p1 = add_ln347_fu_4312_p2;

assign zext_ln352_fu_4350_p1 = shl_ln9_fu_4342_p3;

assign zext_ln353_fu_4361_p1 = or_ln353_fu_4355_p2;

assign zext_ln354_fu_4391_p1 = or_ln354_fu_4386_p2;

assign zext_ln355_fu_4401_p1 = or_ln355_fu_4396_p2;

assign zext_ln356_fu_4411_p1 = or_ln356_fu_4406_p2;

assign zext_ln357_fu_4421_p1 = or_ln357_fu_4416_p2;

assign zext_ln358_fu_4431_p1 = or_ln358_fu_4426_p2;

assign zext_ln359_fu_4441_p1 = or_ln359_fu_4436_p2;

assign zext_ln364_fu_4452_p1 = tmp_s_fu_4446_p3;

assign zext_ln376_1_fu_4756_p1 = tid_21_reg_6057;

assign zext_ln376_fu_4695_p1 = tid_21_reg_6057;

assign zext_ln379_fu_4557_p1 = shl_ln10_reg_6069;

assign zext_ln380_fu_4490_p1 = or_ln380_fu_4484_p2;

assign zext_ln381_fu_4540_p1 = or_ln381_fu_4535_p2;

assign zext_ln382_fu_4502_p1 = or_ln382_fu_4496_p2;

assign zext_ln383_fu_4567_p1 = or_ln383_fu_4562_p2;

assign zext_ln384_fu_4518_p1 = or_ln384_fu_4513_p2;

assign zext_ln385_fu_4551_p1 = or_ln385_fu_4546_p2;

assign zext_ln386_fu_4529_p1 = or_ln386_fu_4524_p2;

assign zext_ln402_fu_4794_p1 = $unsigned(xor_ln402_fu_4789_p2);

assign zext_ln403_cast_fu_4733_p3 = {{1'd1}, {tid_21_reg_6057}};

assign zext_ln403_fu_4740_p1 = $unsigned(zext_ln403_cast_fu_4733_p3);

assign zext_ln404_fu_4854_p1 = $unsigned(sext_ln404_fu_4851_p1);

assign zext_ln405_cast_fu_4705_p3 = {{2'd2}, {tid_21_reg_6057}};

assign zext_ln405_fu_4712_p1 = zext_ln405_cast_fu_4705_p3;

assign zext_ln406_fu_4811_p1 = add_ln406_fu_4805_p2;

assign zext_ln407_fu_4835_p1 = $unsigned(sext_ln407_fu_4832_p1);

assign zext_ln408_fu_4873_p1 = $unsigned(sext_ln408_fu_4870_p1);

always @ (posedge ap_clk) begin
    shl_ln_reg_5244[2:0] <= 3'b000;
    shl_ln1_reg_5265[2:0] <= 3'b000;
    zext_ln174_2_reg_5292[8:6] <= 3'b000;
    zext_ln174_1_reg_5308[7:6] <= 2'b00;
    shl_ln2_reg_5369[2:0] <= 3'b000;
    shl_ln3_reg_5420[2:0] <= 3'b000;
    zext_ln174_5_reg_5447[8:6] <= 3'b000;
    zext_ln174_4_reg_5463[7:6] <= 2'b00;
    shl_ln4_reg_5492[2:0] <= 3'b000;
    DATA_y_addr_16_reg_5502[2:0] <= 3'b000;
    DATA_y_addr_17_reg_5507[2:0] <= 3'b001;
    DATA_y_addr_18_reg_5530[2:0] <= 3'b010;
    DATA_y_addr_19_reg_5535[2:0] <= 3'b011;
    DATA_y_addr_20_reg_5540[2:0] <= 3'b100;
    DATA_y_addr_21_reg_5545[2:0] <= 3'b101;
    DATA_y_addr_22_reg_5550[2:0] <= 3'b110;
    DATA_y_addr_23_reg_5555[2:0] <= 3'b111;
    shl_ln5_reg_5568[2:0] <= 3'b000;
    DATA_x_addr_25_reg_5578[2:0] <= 3'b001;
    DATA_x_addr_27_reg_5584[2:0] <= 3'b011;
    DATA_y_addr_25_reg_5589[2:0] <= 3'b001;
    DATA_y_addr_27_reg_5595[2:0] <= 3'b011;
    DATA_x_addr_29_reg_5612[2:0] <= 3'b101;
    DATA_x_addr_31_reg_5618[2:0] <= 3'b111;
    DATA_y_addr_29_reg_5623[2:0] <= 3'b101;
    DATA_y_addr_31_reg_5629[2:0] <= 3'b111;
    DATA_x_addr_26_reg_5656[2:0] <= 3'b010;
    DATA_x_addr_30_reg_5661[2:0] <= 3'b110;
    DATA_y_addr_26_reg_5667[2:0] <= 3'b010;
    DATA_y_addr_30_reg_5672[2:0] <= 3'b110;
    DATA_x_addr_24_reg_5678[2:0] <= 3'b000;
    DATA_x_addr_28_reg_5683[2:0] <= 3'b100;
    DATA_y_addr_24_reg_5689[2:0] <= 3'b000;
    DATA_y_addr_28_reg_5694[2:0] <= 3'b100;
    zext_ln274_reg_5742[5:3] <= 3'b000;
    shl_ln6_reg_5758[2:0] <= 3'b000;
    zext_ln174_8_reg_5785[8:6] <= 3'b000;
    zext_ln174_7_reg_5801[7:6] <= 2'b00;
    zext_ln321_reg_5835[9] <= 1'b0;
    shl_ln7_reg_5862[2:0] <= 3'b000;
    shl_ln8_reg_5913[2:0] <= 3'b000;
    zext_ln174_11_reg_5940[8:6] <= 3'b000;
    zext_ln174_10_reg_5956[7:6] <= 2'b00;
    shl_ln9_reg_5990[2:0] <= 3'b000;
    DATA_y_addr_40_reg_6000[2:0] <= 3'b000;
    DATA_y_addr_41_reg_6005[2:0] <= 3'b001;
    DATA_y_addr_42_reg_6022[2:0] <= 3'b010;
    DATA_y_addr_43_reg_6027[2:0] <= 3'b011;
    DATA_y_addr_44_reg_6032[2:0] <= 3'b100;
    DATA_y_addr_45_reg_6037[2:0] <= 3'b101;
    DATA_y_addr_46_reg_6042[2:0] <= 3'b110;
    DATA_y_addr_47_reg_6047[2:0] <= 3'b111;
    zext_ln364_reg_6052[9] <= 1'b0;
    shl_ln10_reg_6069[2:0] <= 3'b000;
    zext_ln403_cast_reg_6249[7] <= 1'b1;
end

endmodule //fft1D_512
