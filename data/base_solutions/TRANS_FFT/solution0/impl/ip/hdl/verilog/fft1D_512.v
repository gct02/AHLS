// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fft1D_512_fft1D_512,hls_ip_2023_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu50-fsvh2104-2-e,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.136400,HLS_SYN_LAT=15694,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=17091,HLS_SYN_LUT=29068,HLS_VERSION=2023_2}" *)

module fft1D_512 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        work_x_address0,
        work_x_ce0,
        work_x_we0,
        work_x_d0,
        work_x_q0,
        work_x_address1,
        work_x_ce1,
        work_x_we1,
        work_x_d1,
        work_x_q1,
        work_y_address0,
        work_y_ce0,
        work_y_we0,
        work_y_d0,
        work_y_q0,
        work_y_address1,
        work_y_ce1,
        work_y_we1,
        work_y_d1,
        work_y_q1
);

parameter    ap_ST_fsm_state1 = 149'd1;
parameter    ap_ST_fsm_state2 = 149'd2;
parameter    ap_ST_fsm_state3 = 149'd4;
parameter    ap_ST_fsm_state4 = 149'd8;
parameter    ap_ST_fsm_state5 = 149'd16;
parameter    ap_ST_fsm_state6 = 149'd32;
parameter    ap_ST_fsm_state7 = 149'd64;
parameter    ap_ST_fsm_state8 = 149'd128;
parameter    ap_ST_fsm_state9 = 149'd256;
parameter    ap_ST_fsm_state10 = 149'd512;
parameter    ap_ST_fsm_state11 = 149'd1024;
parameter    ap_ST_fsm_state12 = 149'd2048;
parameter    ap_ST_fsm_state13 = 149'd4096;
parameter    ap_ST_fsm_state14 = 149'd8192;
parameter    ap_ST_fsm_state15 = 149'd16384;
parameter    ap_ST_fsm_state16 = 149'd32768;
parameter    ap_ST_fsm_state17 = 149'd65536;
parameter    ap_ST_fsm_state18 = 149'd131072;
parameter    ap_ST_fsm_state19 = 149'd262144;
parameter    ap_ST_fsm_state20 = 149'd524288;
parameter    ap_ST_fsm_state21 = 149'd1048576;
parameter    ap_ST_fsm_state22 = 149'd2097152;
parameter    ap_ST_fsm_state23 = 149'd4194304;
parameter    ap_ST_fsm_state24 = 149'd8388608;
parameter    ap_ST_fsm_state25 = 149'd16777216;
parameter    ap_ST_fsm_state26 = 149'd33554432;
parameter    ap_ST_fsm_state27 = 149'd67108864;
parameter    ap_ST_fsm_state28 = 149'd134217728;
parameter    ap_ST_fsm_state29 = 149'd268435456;
parameter    ap_ST_fsm_state30 = 149'd536870912;
parameter    ap_ST_fsm_state31 = 149'd1073741824;
parameter    ap_ST_fsm_state32 = 149'd2147483648;
parameter    ap_ST_fsm_state33 = 149'd4294967296;
parameter    ap_ST_fsm_state34 = 149'd8589934592;
parameter    ap_ST_fsm_state35 = 149'd17179869184;
parameter    ap_ST_fsm_state36 = 149'd34359738368;
parameter    ap_ST_fsm_state37 = 149'd68719476736;
parameter    ap_ST_fsm_state38 = 149'd137438953472;
parameter    ap_ST_fsm_state39 = 149'd274877906944;
parameter    ap_ST_fsm_state40 = 149'd549755813888;
parameter    ap_ST_fsm_state41 = 149'd1099511627776;
parameter    ap_ST_fsm_state42 = 149'd2199023255552;
parameter    ap_ST_fsm_state43 = 149'd4398046511104;
parameter    ap_ST_fsm_state44 = 149'd8796093022208;
parameter    ap_ST_fsm_state45 = 149'd17592186044416;
parameter    ap_ST_fsm_state46 = 149'd35184372088832;
parameter    ap_ST_fsm_state47 = 149'd70368744177664;
parameter    ap_ST_fsm_state48 = 149'd140737488355328;
parameter    ap_ST_fsm_state49 = 149'd281474976710656;
parameter    ap_ST_fsm_state50 = 149'd562949953421312;
parameter    ap_ST_fsm_state51 = 149'd1125899906842624;
parameter    ap_ST_fsm_state52 = 149'd2251799813685248;
parameter    ap_ST_fsm_state53 = 149'd4503599627370496;
parameter    ap_ST_fsm_state54 = 149'd9007199254740992;
parameter    ap_ST_fsm_state55 = 149'd18014398509481984;
parameter    ap_ST_fsm_state56 = 149'd36028797018963968;
parameter    ap_ST_fsm_state57 = 149'd72057594037927936;
parameter    ap_ST_fsm_state58 = 149'd144115188075855872;
parameter    ap_ST_fsm_state59 = 149'd288230376151711744;
parameter    ap_ST_fsm_state60 = 149'd576460752303423488;
parameter    ap_ST_fsm_state61 = 149'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 149'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 149'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 149'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 149'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 149'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 149'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 149'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 149'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 149'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 149'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 149'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 149'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 149'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 149'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 149'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 149'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 149'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 149'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 149'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 149'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 149'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 149'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 149'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 149'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 149'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 149'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 149'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 149'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 149'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 149'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 149'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 149'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 149'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 149'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 149'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 149'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 149'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 149'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 149'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 149'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 149'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 149'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 149'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 149'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 149'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 149'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 149'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 149'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 149'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 149'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 149'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 149'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 149'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 149'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 149'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 149'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 149'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 149'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 149'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 149'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 149'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 149'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 149'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 149'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 149'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 149'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 149'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 149'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 149'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 149'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 149'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 149'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 149'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 149'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 149'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 149'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 149'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 149'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 149'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 149'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 149'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 149'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 149'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 149'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 149'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 149'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 149'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 149'd356811923176489970264571492362373784095686656;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] work_x_address0;
output   work_x_ce0;
output   work_x_we0;
output  [63:0] work_x_d0;
input  [63:0] work_x_q0;
output  [8:0] work_x_address1;
output   work_x_ce1;
output   work_x_we1;
output  [63:0] work_x_d1;
input  [63:0] work_x_q1;
output  [8:0] work_y_address0;
output   work_y_ce0;
output   work_y_we0;
output  [63:0] work_y_d0;
input  [63:0] work_y_q0;
output  [8:0] work_y_address1;
output   work_y_ce1;
output   work_y_we1;
output  [63:0] work_y_d1;
input  [63:0] work_y_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] work_x_address0;
reg work_x_ce0;
reg work_x_we0;
reg[63:0] work_x_d0;
reg[8:0] work_x_address1;
reg work_x_ce1;
reg work_x_we1;
reg[63:0] work_x_d1;
reg[8:0] work_y_address0;
reg work_y_ce0;
reg work_y_we0;
reg[63:0] work_y_d0;
reg[8:0] work_y_address1;
reg work_y_ce1;
reg work_y_we1;
reg[63:0] work_y_d1;

(* fsm_encoding = "none" *) reg   [148:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] grp_fu_1995_p2;
reg   [63:0] reg_2079;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state124;
wire    ap_CS_fsm_state128;
wire    ap_CS_fsm_state133;
wire    ap_CS_fsm_state137;
wire    ap_CS_fsm_state144;
wire   [63:0] grp_fu_1999_p2;
reg   [63:0] reg_2090;
wire   [63:0] grp_fu_2003_p2;
reg   [63:0] reg_2101;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state136;
wire    ap_CS_fsm_state148;
wire   [63:0] grp_fu_2007_p2;
reg   [63:0] reg_2110;
wire   [63:0] grp_fu_2011_p2;
reg   [63:0] reg_2119;
wire   [63:0] grp_fu_2015_p2;
reg   [63:0] reg_2128;
wire   [63:0] grp_fu_2019_p2;
reg   [63:0] reg_2137;
wire   [63:0] grp_fu_2023_p2;
reg   [63:0] reg_2142;
reg   [63:0] reg_2147;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state125;
wire    ap_CS_fsm_state130;
reg   [63:0] reg_2155;
reg   [63:0] reg_2163;
wire    ap_CS_fsm_state140;
reg   [63:0] reg_2172;
reg   [63:0] reg_2181;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state126;
reg   [63:0] reg_2189;
reg   [63:0] reg_2197;
reg   [63:0] reg_2203;
wire   [63:0] grp_fu_2047_p2;
reg   [63:0] reg_2209;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state72;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state129;
wire   [63:0] grp_fu_2052_p2;
reg   [63:0] reg_2216;
reg   [63:0] reg_2223;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state132;
reg   [63:0] reg_2230;
wire   [63:0] grp_fu_2059_p2;
reg   [63:0] reg_2237;
wire   [63:0] grp_fu_2064_p2;
reg   [63:0] reg_2243;
wire   [63:0] grp_fu_2069_p2;
reg   [63:0] reg_2249;
wire   [63:0] grp_fu_2074_p2;
reg   [63:0] reg_2254;
wire   [63:0] DATA_x_q1;
reg   [63:0] reg_2259;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state120;
wire   [63:0] DATA_x_q0;
reg   [63:0] reg_2265;
wire   [63:0] DATA_y_q1;
reg   [63:0] reg_2273;
wire   [63:0] DATA_y_q0;
reg   [63:0] reg_2279;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state121;
reg   [6:0] tid_11_reg_5338;
wire    ap_CS_fsm_state2;
wire  signed [6:0] xor_ln132_fu_2339_p2;
reg  signed [6:0] xor_ln132_reg_5350;
reg   [63:0] work_x_load_1_reg_5382;
wire    ap_CS_fsm_state3;
reg   [63:0] work_x_load_3_reg_5387;
reg   [63:0] work_y_load_1_reg_5402;
reg   [63:0] work_y_load_3_reg_5407;
wire   [63:0] c0_x_1_fu_2395_p1;
wire    ap_CS_fsm_state4;
wire   [63:0] c0_x_3_fu_2413_p1;
wire   [63:0] bitcast_ln136_fu_2418_p1;
wire   [63:0] bitcast_ln138_fu_2434_p1;
wire   [63:0] c0_y_1_fu_2440_p1;
wire   [63:0] c0_y_3_fu_2445_p1;
wire   [63:0] bitcast_ln145_fu_2450_p1;
wire   [63:0] bitcast_ln147_fu_2456_p1;
wire    ap_CS_fsm_state5;
wire   [63:0] c0_x_2_fu_2467_p1;
wire   [63:0] bitcast_ln137_fu_2486_p1;
wire   [63:0] c0_y_2_fu_2492_p1;
wire   [63:0] bitcast_ln146_fu_2498_p1;
wire   [5:0] trunc_ln153_fu_2504_p1;
reg   [5:0] trunc_ln153_reg_5534;
wire   [63:0] c0_x_fu_2507_p1;
wire    ap_CS_fsm_state6;
wire   [63:0] bitcast_ln135_fu_2513_p1;
wire   [63:0] c0_y_fu_2519_p1;
wire   [63:0] bitcast_ln144_fu_2525_p1;
wire   [63:0] bitcast_ln150_1_fu_2541_p1;
wire   [63:0] bitcast_ln150_3_fu_2556_p1;
wire   [63:0] bitcast_ln150_9_fu_2571_p1;
wire   [63:0] bitcast_ln150_11_fu_2587_p1;
wire   [63:0] bitcast_ln150_5_fu_2603_p1;
wire   [63:0] bitcast_ln150_7_fu_2618_p1;
wire   [63:0] bitcast_ln150_13_fu_2633_p1;
wire   [63:0] bitcast_ln150_15_fu_2648_p1;
wire   [63:0] bitcast_ln150_17_fu_2663_p1;
wire    ap_CS_fsm_state24;
wire   [63:0] bitcast_ln150_19_fu_2678_p1;
wire   [8:0] shl_ln_fu_2683_p3;
reg   [8:0] shl_ln_reg_5616;
wire    ap_CS_fsm_state35;
wire   [5:0] offset_fu_2789_p1;
reg   [5:0] offset_reg_5629;
wire    ap_CS_fsm_state39;
wire   [8:0] shl_ln1_fu_2793_p3;
reg   [8:0] shl_ln1_reg_5637;
wire   [8:0] zext_ln174_2_fu_2827_p1;
reg   [8:0] zext_ln174_2_reg_5664;
wire    ap_CS_fsm_state40;
wire   [7:0] zext_ln174_1_fu_2865_p1;
reg   [7:0] zext_ln174_1_reg_5680;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state42;
wire   [9:0] offset_1_fu_3026_p2;
reg   [9:0] offset_1_reg_5709;
wire    ap_CS_fsm_state44;
wire   [5:0] trunc_ln197_fu_3037_p1;
reg   [5:0] trunc_ln197_reg_5724;
wire   [8:0] shl_ln2_fu_3062_p3;
reg   [8:0] shl_ln2_reg_5741;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state47;
wire   [5:0] offset_2_fu_3220_p1;
reg   [5:0] offset_2_reg_5784;
wire    ap_CS_fsm_state49;
wire   [8:0] shl_ln3_fu_3224_p3;
reg   [8:0] shl_ln3_reg_5792;
wire   [8:0] zext_ln174_5_fu_3258_p1;
reg   [8:0] zext_ln174_5_reg_5819;
wire    ap_CS_fsm_state50;
wire   [7:0] zext_ln174_4_fu_3296_p1;
reg   [7:0] zext_ln174_4_reg_5835;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state52;
wire   [5:0] trunc_ln226_fu_3423_p1;
reg   [5:0] trunc_ln226_reg_5864;
wire    ap_CS_fsm_state54;
wire   [9:0] add_ln238_fu_3461_p2;
reg   [9:0] add_ln238_reg_5869;
wire   [8:0] shl_ln4_fu_3493_p3;
reg   [8:0] shl_ln4_reg_5896;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state57;
wire   [8:0] shl_ln5_fu_3655_p3;
reg   [8:0] shl_ln5_reg_5939;
wire    ap_CS_fsm_state59;
reg   [8:0] DATA_x_addr_25_reg_5949;
reg   [8:0] DATA_x_addr_27_reg_5955;
reg   [8:0] DATA_y_addr_25_reg_5960;
reg   [8:0] DATA_y_addr_27_reg_5966;
reg   [2:0] hi_2_reg_5971;
reg   [8:0] DATA_x_addr_29_reg_5983;
reg   [8:0] DATA_x_addr_31_reg_5989;
reg   [8:0] DATA_y_addr_29_reg_5994;
reg   [8:0] DATA_y_addr_31_reg_6000;
wire   [63:0] bitcast_ln271_1_fu_3739_p1;
wire    ap_CS_fsm_state65;
wire   [63:0] bitcast_ln271_3_fu_3754_p1;
wire   [63:0] bitcast_ln271_9_fu_3769_p1;
wire   [63:0] bitcast_ln271_11_fu_3785_p1;
reg   [8:0] DATA_x_addr_26_reg_6027;
wire    ap_CS_fsm_state66;
reg   [8:0] DATA_x_addr_30_reg_6032;
reg   [8:0] DATA_y_addr_26_reg_6038;
reg   [8:0] DATA_y_addr_30_reg_6043;
reg   [8:0] DATA_x_addr_24_reg_6049;
reg   [8:0] DATA_x_addr_28_reg_6054;
reg   [8:0] DATA_y_addr_24_reg_6060;
reg   [8:0] DATA_y_addr_28_reg_6065;
wire   [63:0] bitcast_ln271_13_fu_3839_p1;
wire    ap_CS_fsm_state73;
wire   [63:0] bitcast_ln271_15_fu_3854_p1;
wire   [63:0] bitcast_ln271_5_fu_3869_p1;
wire   [63:0] bitcast_ln271_7_fu_3884_p1;
reg   [63:0] tmp_3_reg_6091;
reg   [63:0] sub33_reg_6097;
wire   [63:0] bitcast_ln271_17_fu_3898_p1;
wire    ap_CS_fsm_state81;
wire   [63:0] bitcast_ln271_19_fu_3912_p1;
wire   [5:0] zext_ln274_fu_3917_p1;
reg   [5:0] zext_ln274_reg_6113;
wire    ap_CS_fsm_state89;
wire   [5:0] offset_3_fu_3936_p1;
reg   [5:0] offset_3_reg_6121;
wire    ap_CS_fsm_state96;
wire   [8:0] shl_ln6_fu_3940_p3;
reg   [8:0] shl_ln6_reg_6129;
wire   [8:0] zext_ln174_8_fu_3974_p1;
reg   [8:0] zext_ln174_8_reg_6156;
wire    ap_CS_fsm_state97;
wire   [7:0] zext_ln174_7_fu_4012_p1;
reg   [7:0] zext_ln174_7_reg_6172;
wire    ap_CS_fsm_state98;
wire    ap_CS_fsm_state99;
wire   [5:0] trunc_ln321_fu_4149_p1;
reg   [5:0] trunc_ln321_reg_6201;
wire    ap_CS_fsm_state101;
wire   [9:0] zext_ln321_fu_4161_p1;
reg   [9:0] zext_ln321_reg_6206;
wire   [8:0] shl_ln7_fu_4191_p3;
reg   [8:0] shl_ln7_reg_6233;
wire    ap_CS_fsm_state102;
wire    ap_CS_fsm_state103;
wire    ap_CS_fsm_state104;
wire   [5:0] offset_5_fu_4349_p1;
reg   [5:0] offset_5_reg_6276;
wire    ap_CS_fsm_state106;
wire   [8:0] shl_ln8_fu_4353_p3;
reg   [8:0] shl_ln8_reg_6284;
wire   [8:0] zext_ln174_11_fu_4387_p1;
reg   [8:0] zext_ln174_11_reg_6359;
wire    ap_CS_fsm_state107;
wire   [7:0] zext_ln174_10_fu_4425_p1;
reg   [7:0] zext_ln174_10_reg_6375;
wire    ap_CS_fsm_state108;
wire    ap_CS_fsm_state109;
wire   [5:0] trunc_ln352_fu_4552_p1;
reg   [5:0] trunc_ln352_reg_6404;
wire    ap_CS_fsm_state111;
wire   [9:0] zext_ln364_fu_4574_p1;
reg   [9:0] zext_ln364_reg_6409;
wire   [8:0] shl_ln9_fu_4612_p3;
reg   [8:0] shl_ln9_reg_6436;
wire    ap_CS_fsm_state112;
wire    ap_CS_fsm_state113;
wire    ap_CS_fsm_state114;
reg   [6:0] tid_21_reg_6476;
wire    ap_CS_fsm_state119;
wire   [8:0] shl_ln10_fu_4838_p3;
reg   [8:0] shl_ln10_reg_6488;
wire    ap_CS_fsm_state122;
wire    ap_CS_fsm_state123;
wire   [63:0] bitcast_ln398_1_fu_4945_p1;
wire   [63:0] bitcast_ln398_3_fu_4960_p1;
wire   [63:0] bitcast_ln398_9_fu_4975_p1;
wire   [63:0] bitcast_ln398_11_fu_4991_p1;
wire   [63:0] bitcast_ln398_5_fu_5007_p1;
wire   [63:0] bitcast_ln398_7_fu_5022_p1;
wire   [63:0] bitcast_ln398_13_fu_5037_p1;
wire   [63:0] bitcast_ln398_15_fu_5052_p1;
wire  signed [7:0] zext_ln403_cast_fu_5095_p3;
reg  signed [7:0] zext_ln403_cast_reg_6668;
wire   [63:0] bitcast_ln398_17_fu_5131_p1;
wire    ap_CS_fsm_state141;
wire   [63:0] bitcast_ln398_19_fu_5146_p1;
wire  signed [6:0] xor_ln402_fu_5151_p2;
reg  signed [6:0] xor_ln402_reg_6683;
reg   [8:0] DATA_x_address0;
reg    DATA_x_ce0;
reg    DATA_x_we0;
reg   [63:0] DATA_x_d0;
reg   [8:0] DATA_x_address1;
reg    DATA_x_ce1;
reg    DATA_x_we1;
reg   [63:0] DATA_x_d1;
reg   [8:0] DATA_y_address0;
reg    DATA_y_ce0;
reg    DATA_y_we0;
reg   [63:0] DATA_y_d0;
reg   [8:0] DATA_y_address1;
reg    DATA_y_ce1;
reg    DATA_y_we1;
reg   [63:0] DATA_y_d1;
reg   [2:0] data_x_address0;
reg    data_x_ce0;
reg    data_x_we0;
reg   [63:0] data_x_d0;
wire   [63:0] data_x_q0;
reg   [2:0] data_x_address1;
reg    data_x_ce1;
reg    data_x_we1;
wire   [63:0] data_x_q1;
reg   [2:0] data_y_address0;
reg    data_y_ce0;
reg    data_y_we0;
reg   [63:0] data_y_d0;
wire   [63:0] data_y_q0;
reg   [2:0] data_y_address1;
reg    data_y_ce1;
reg    data_y_we1;
reg   [63:0] data_y_d1;
wire   [63:0] data_y_q1;
reg   [9:0] smem_address0;
reg    smem_ce0;
reg    smem_we0;
reg   [63:0] smem_d0;
wire   [63:0] smem_q0;
reg   [9:0] smem_address1;
reg    smem_ce1;
reg    smem_we1;
reg   [63:0] smem_d1;
wire   [63:0] smem_q1;
wire    grp_twiddles8_fu_1971_ap_start;
wire    grp_twiddles8_fu_1971_ap_done;
wire    grp_twiddles8_fu_1971_ap_idle;
wire    grp_twiddles8_fu_1971_ap_ready;
wire   [2:0] grp_twiddles8_fu_1971_a_x_address0;
wire    grp_twiddles8_fu_1971_a_x_ce0;
wire    grp_twiddles8_fu_1971_a_x_we0;
wire   [63:0] grp_twiddles8_fu_1971_a_x_d0;
wire   [2:0] grp_twiddles8_fu_1971_a_x_address1;
wire    grp_twiddles8_fu_1971_a_x_ce1;
wire   [2:0] grp_twiddles8_fu_1971_a_y_address0;
wire    grp_twiddles8_fu_1971_a_y_ce0;
wire    grp_twiddles8_fu_1971_a_y_we0;
wire   [63:0] grp_twiddles8_fu_1971_a_y_d0;
wire   [2:0] grp_twiddles8_fu_1971_a_y_address1;
wire    grp_twiddles8_fu_1971_a_y_ce1;
reg   [5:0] grp_twiddles8_fu_1971_i;
reg   [9:0] grp_twiddles8_fu_1971_n;
reg    grp_twiddles8_fu_1971_ap_start_reg;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state90;
wire   [63:0] zext_ln132_fu_2345_p1;
wire   [0:0] icmp_ln128_fu_2327_p2;
wire   [63:0] zext_ln134_fu_2355_p1;
wire   [63:0] zext_ln136_fu_2380_p1;
wire   [63:0] zext_ln138_fu_2389_p1;
wire   [63:0] zext_ln133_fu_2407_p1;
wire   [63:0] zext_ln137_fu_2428_p1;
wire   [63:0] zext_ln128_fu_2462_p1;
wire   [63:0] zext_ln135_fu_2480_p1;
wire   [63:0] zext_ln156_fu_2690_p1;
wire   [63:0] zext_ln157_fu_2702_p1;
wire   [63:0] zext_ln158_fu_2713_p1;
wire    ap_CS_fsm_state36;
wire   [63:0] zext_ln159_fu_2724_p1;
wire   [63:0] zext_ln160_fu_2735_p1;
wire    ap_CS_fsm_state37;
wire   [63:0] zext_ln161_fu_2746_p1;
wire   [63:0] zext_ln162_fu_2757_p1;
wire    ap_CS_fsm_state38;
wire   [63:0] zext_ln163_fu_2768_p1;
wire   [63:0] zext_ln181_1_fu_2801_p1;
wire   [0:0] icmp_ln176_fu_2777_p2;
wire   [63:0] zext_ln182_1_fu_2812_p1;
wire   [63:0] zext_ln181_fu_2830_p1;
wire   [63:0] zext_ln182_fu_2840_p1;
wire   [63:0] zext_ln183_1_fu_2850_p1;
wire   [63:0] zext_ln184_1_fu_2860_p1;
wire   [63:0] zext_ln183_fu_2874_p1;
wire   [63:0] zext_ln184_fu_2884_p1;
wire   [63:0] zext_ln185_1_fu_2894_p1;
wire   [63:0] zext_ln186_fu_2904_p1;
wire   [63:0] zext_ln185_fu_2914_p1;
wire   [63:0] zext_ln186_1_fu_2928_p1;
wire   [63:0] zext_ln187_1_fu_2938_p1;
wire   [63:0] zext_ln188_1_fu_2948_p1;
wire   [63:0] zext_ln187_fu_2961_p1;
wire    ap_CS_fsm_state43;
wire   [63:0] zext_ln188_fu_2972_p1;
wire   [63:0] zext_ln197_fu_3032_p1;
wire   [0:0] icmp_ln191_fu_2980_p2;
wire   [63:0] zext_ln198_fu_3047_p1;
wire   [63:0] zext_ln197_1_fu_3069_p1;
wire   [63:0] zext_ln198_1_fu_3080_p1;
wire   [63:0] zext_ln199_fu_3090_p1;
wire   [63:0] zext_ln200_fu_3100_p1;
wire   [63:0] zext_ln199_1_fu_3110_p1;
wire   [63:0] zext_ln200_1_fu_3120_p1;
wire   [63:0] zext_ln201_fu_3130_p1;
wire   [63:0] zext_ln202_fu_3140_p1;
wire   [63:0] zext_ln201_1_fu_3150_p1;
wire   [63:0] zext_ln202_1_fu_3160_p1;
wire   [63:0] zext_ln203_fu_3170_p1;
wire   [63:0] zext_ln204_fu_3180_p1;
wire   [63:0] zext_ln203_1_fu_3190_p1;
wire    ap_CS_fsm_state48;
wire   [63:0] zext_ln204_1_fu_3200_p1;
wire   [63:0] zext_ln214_1_fu_3232_p1;
wire   [0:0] icmp_ln208_fu_3208_p2;
wire   [63:0] zext_ln215_1_fu_3243_p1;
wire   [63:0] zext_ln214_fu_3261_p1;
wire   [63:0] zext_ln215_fu_3271_p1;
wire   [63:0] zext_ln216_1_fu_3281_p1;
wire   [63:0] zext_ln217_1_fu_3291_p1;
wire   [63:0] zext_ln216_fu_3305_p1;
wire   [63:0] zext_ln217_fu_3315_p1;
wire   [63:0] zext_ln218_1_fu_3325_p1;
wire   [63:0] zext_ln219_fu_3335_p1;
wire   [63:0] zext_ln218_fu_3345_p1;
wire   [63:0] zext_ln219_1_fu_3359_p1;
wire   [63:0] zext_ln220_1_fu_3369_p1;
wire   [63:0] zext_ln221_1_fu_3379_p1;
wire   [63:0] zext_ln220_fu_3392_p1;
wire    ap_CS_fsm_state53;
wire   [63:0] zext_ln221_fu_3403_p1;
wire   [63:0] zext_ln104_fu_3467_p1;
wire   [0:0] icmp_ln224_fu_3411_p2;
wire   [63:0] zext_ln105_fu_3478_p1;
wire   [63:0] zext_ln226_fu_3500_p1;
wire   [63:0] zext_ln227_fu_3511_p1;
wire   [63:0] zext_ln106_fu_3521_p1;
wire   [63:0] zext_ln107_fu_3531_p1;
wire   [63:0] zext_ln228_fu_3541_p1;
wire   [63:0] zext_ln229_fu_3551_p1;
wire   [63:0] zext_ln108_fu_3561_p1;
wire   [63:0] zext_ln109_fu_3571_p1;
wire   [63:0] zext_ln230_fu_3581_p1;
wire   [63:0] zext_ln231_fu_3591_p1;
wire   [63:0] zext_ln110_fu_3601_p1;
wire   [63:0] zext_ln111_fu_3611_p1;
wire   [63:0] zext_ln232_fu_3621_p1;
wire    ap_CS_fsm_state58;
wire   [63:0] zext_ln233_fu_3631_p1;
wire   [63:0] zext_ln253_fu_3669_p1;
wire   [0:0] icmp_ln250_fu_3639_p2;
wire   [63:0] zext_ln255_fu_3681_p1;
wire   [63:0] zext_ln257_fu_3712_p1;
wire   [63:0] zext_ln259_fu_3723_p1;
wire   [63:0] zext_ln254_fu_3796_p1;
wire   [63:0] zext_ln258_fu_3807_p1;
wire   [63:0] zext_ln252_fu_3813_p1;
wire   [63:0] zext_ln256_fu_3823_p1;
wire   [63:0] zext_ln306_1_fu_3948_p1;
wire   [0:0] icmp_ln301_fu_3924_p2;
wire   [63:0] zext_ln307_1_fu_3959_p1;
wire   [63:0] zext_ln306_fu_3977_p1;
wire   [63:0] zext_ln307_fu_3987_p1;
wire   [63:0] zext_ln308_1_fu_3997_p1;
wire   [63:0] zext_ln309_1_fu_4007_p1;
wire   [63:0] zext_ln308_fu_4021_p1;
wire   [63:0] zext_ln309_fu_4031_p1;
wire   [63:0] zext_ln310_1_fu_4041_p1;
wire   [63:0] zext_ln311_fu_4051_p1;
wire   [63:0] zext_ln310_fu_4061_p1;
wire   [63:0] zext_ln311_1_fu_4075_p1;
wire   [63:0] zext_ln312_1_fu_4085_p1;
wire   [63:0] zext_ln313_1_fu_4095_p1;
wire   [63:0] zext_ln312_fu_4108_p1;
wire    ap_CS_fsm_state100;
wire   [63:0] zext_ln313_fu_4119_p1;
wire   [63:0] zext_ln323_fu_4165_p1;
wire   [0:0] icmp_ln317_fu_4127_p2;
wire   [63:0] zext_ln324_fu_4176_p1;
wire   [63:0] zext_ln323_1_fu_4198_p1;
wire   [63:0] zext_ln324_1_fu_4209_p1;
wire   [63:0] zext_ln325_fu_4219_p1;
wire   [63:0] zext_ln326_fu_4229_p1;
wire   [63:0] zext_ln325_1_fu_4239_p1;
wire   [63:0] zext_ln326_1_fu_4249_p1;
wire   [63:0] zext_ln327_fu_4259_p1;
wire   [63:0] zext_ln328_fu_4269_p1;
wire   [63:0] zext_ln327_1_fu_4279_p1;
wire   [63:0] zext_ln328_1_fu_4289_p1;
wire   [63:0] zext_ln329_fu_4299_p1;
wire   [63:0] zext_ln330_fu_4309_p1;
wire   [63:0] zext_ln329_1_fu_4319_p1;
wire    ap_CS_fsm_state105;
wire   [63:0] zext_ln330_1_fu_4329_p1;
wire   [63:0] zext_ln340_1_fu_4361_p1;
wire   [0:0] icmp_ln334_fu_4337_p2;
wire   [63:0] zext_ln341_1_fu_4372_p1;
wire   [63:0] zext_ln340_fu_4390_p1;
wire   [63:0] zext_ln341_fu_4400_p1;
wire   [63:0] zext_ln342_1_fu_4410_p1;
wire   [63:0] zext_ln343_1_fu_4420_p1;
wire   [63:0] zext_ln342_fu_4434_p1;
wire   [63:0] zext_ln343_fu_4444_p1;
wire   [63:0] zext_ln344_1_fu_4454_p1;
wire   [63:0] zext_ln345_fu_4464_p1;
wire   [63:0] zext_ln344_fu_4474_p1;
wire   [63:0] zext_ln345_1_fu_4488_p1;
wire   [63:0] zext_ln346_1_fu_4498_p1;
wire   [63:0] zext_ln347_1_fu_4508_p1;
wire   [63:0] zext_ln346_fu_4521_p1;
wire    ap_CS_fsm_state110;
wire   [63:0] zext_ln347_fu_4532_p1;
wire   [63:0] zext_ln104_1_fu_4578_p1;
wire   [0:0] icmp_ln350_fu_4540_p2;
wire   [63:0] zext_ln105_1_fu_4589_p1;
wire   [63:0] zext_ln352_fu_4619_p1;
wire   [63:0] zext_ln353_fu_4630_p1;
wire   [63:0] zext_ln106_1_fu_4640_p1;
wire   [63:0] zext_ln107_1_fu_4650_p1;
wire   [63:0] zext_ln354_fu_4670_p1;
wire   [63:0] zext_ln355_fu_4680_p1;
wire   [63:0] zext_ln108_1_fu_4690_p1;
wire   [63:0] zext_ln109_1_fu_4700_p1;
wire   [63:0] zext_ln356_fu_4720_p1;
wire   [63:0] zext_ln357_fu_4730_p1;
wire   [63:0] zext_ln110_1_fu_4740_p1;
wire   [63:0] zext_ln111_1_fu_4750_p1;
wire   [63:0] zext_ln358_fu_4770_p1;
wire    ap_CS_fsm_state115;
wire   [63:0] zext_ln359_fu_4780_p1;
wire   [63:0] zext_ln380_fu_4852_p1;
wire   [0:0] icmp_ln376_fu_4822_p2;
wire   [63:0] zext_ln382_fu_4864_p1;
wire   [63:0] zext_ln384_fu_4880_p1;
wire   [63:0] zext_ln386_fu_4891_p1;
wire   [63:0] zext_ln381_fu_4902_p1;
wire   [63:0] zext_ln385_fu_4913_p1;
wire   [63:0] zext_ln379_fu_4919_p1;
wire   [63:0] zext_ln383_fu_4929_p1;
wire   [63:0] zext_ln376_fu_5057_p1;
wire    ap_CS_fsm_state134;
wire   [63:0] zext_ln405_fu_5074_p1;
wire   [63:0] zext_ln403_fu_5102_p1;
wire   [63:0] zext_ln402_fu_5156_p1;
wire   [63:0] zext_ln406_fu_5173_p1;
wire   [63:0] zext_ln407_fu_5197_p1;
wire    ap_CS_fsm_state142;
wire   [63:0] zext_ln404_fu_5216_p1;
wire   [63:0] zext_ln408_fu_5235_p1;
wire    ap_CS_fsm_state149;
reg   [6:0] tid_fu_184;
wire   [6:0] add_ln128_fu_2333_p2;
reg   [6:0] tid_1_fu_208;
wire   [6:0] add_ln176_fu_2783_p2;
reg   [6:0] tid_2_fu_212;
wire   [6:0] add_ln191_fu_2986_p2;
reg   [6:0] tid_3_fu_216;
wire   [6:0] add_ln208_fu_3214_p2;
reg   [6:0] tid_4_fu_220;
wire   [6:0] add_ln224_fu_3417_p2;
reg   [6:0] tid_5_fu_224;
wire   [6:0] add_ln250_fu_3645_p2;
reg   [6:0] tid_6_fu_228;
wire   [6:0] add_ln301_fu_3930_p2;
reg   [6:0] tid_7_fu_232;
wire   [6:0] add_ln317_fu_4133_p2;
reg   [6:0] tid_8_fu_236;
wire   [6:0] add_ln334_fu_4343_p2;
reg   [63:0] p_phi24_fu_240;
wire    ap_CS_fsm_state118;
reg   [63:0] p_phi23_fu_244;
reg   [63:0] p_phi22_fu_248;
wire    ap_CS_fsm_state117;
reg   [63:0] p_phi21_fu_252;
reg   [63:0] p_phi20_fu_256;
wire    ap_CS_fsm_state116;
reg   [63:0] p_phi19_fu_260;
reg   [63:0] p_phi18_fu_264;
reg   [63:0] p_phi_fu_268;
reg   [6:0] tid_9_fu_272;
wire   [6:0] add_ln350_fu_4546_p2;
reg   [6:0] tid_10_fu_276;
wire   [6:0] add_ln376_fu_4828_p2;
wire   [63:0] bitcast_ln401_fu_5062_p1;
wire   [63:0] bitcast_ln405_fu_5080_p1;
wire   [63:0] bitcast_ln403_fu_5108_p1;
wire   [63:0] bitcast_ln402_fu_5162_p1;
wire   [63:0] bitcast_ln406_fu_5179_p1;
wire   [63:0] bitcast_ln407_fu_5203_p1;
wire   [63:0] bitcast_ln404_fu_5222_p1;
wire   [63:0] bitcast_ln408_fu_5241_p1;
wire   [63:0] bitcast_ln410_fu_5085_p1;
wire   [63:0] bitcast_ln414_fu_5090_p1;
wire   [63:0] bitcast_ln412_fu_5113_p1;
wire   [63:0] bitcast_ln411_fu_5184_p1;
wire   [63:0] bitcast_ln415_fu_5189_p1;
wire   [63:0] bitcast_ln416_fu_5208_p1;
wire   [63:0] bitcast_ln413_fu_5227_p1;
wire   [63:0] bitcast_ln417_fu_5246_p1;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state91;
wire    ap_CS_fsm_state92;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state95;
reg   [63:0] grp_fu_1995_p0;
reg   [63:0] grp_fu_1995_p1;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state127;
wire    ap_CS_fsm_state131;
wire    ap_CS_fsm_state138;
wire    ap_CS_fsm_state145;
reg   [63:0] grp_fu_1999_p0;
reg   [63:0] grp_fu_1999_p1;
reg   [63:0] grp_fu_2003_p0;
reg   [63:0] grp_fu_2003_p1;
reg   [63:0] grp_fu_2007_p0;
reg   [63:0] grp_fu_2007_p1;
reg   [63:0] grp_fu_2011_p0;
reg   [63:0] grp_fu_2011_p1;
reg   [63:0] grp_fu_2015_p0;
reg   [63:0] grp_fu_2015_p1;
reg   [63:0] grp_fu_2019_p0;
reg   [63:0] grp_fu_2019_p1;
reg   [63:0] grp_fu_2023_p0;
reg   [63:0] grp_fu_2023_p1;
reg   [63:0] grp_fu_2047_p0;
reg   [63:0] grp_fu_2047_p1;
wire    ap_CS_fsm_state69;
reg   [63:0] grp_fu_2052_p0;
reg   [63:0] grp_fu_2052_p1;
wire  signed [7:0] sext_ln134_fu_2351_p1;
wire   [8:0] zext_ln128_1_fu_2371_p1;
wire   [8:0] add_ln136_fu_2374_p2;
wire  signed [8:0] sext_ln138_fu_2386_p1;
wire  signed [7:0] zext_ln133_cast_fu_2400_p3;
wire  signed [8:0] sext_ln137_fu_2424_p1;
wire   [8:0] zext_ln135_cast_fu_2473_p3;
wire   [63:0] bitcast_ln150_fu_2531_p1;
wire   [63:0] xor_ln150_fu_2535_p2;
wire   [63:0] bitcast_ln150_2_fu_2546_p1;
wire   [63:0] xor_ln150_1_fu_2550_p2;
wire   [63:0] bitcast_ln150_8_fu_2561_p1;
wire   [63:0] xor_ln150_4_fu_2565_p2;
wire   [63:0] bitcast_ln150_10_fu_2577_p1;
wire   [63:0] xor_ln150_5_fu_2581_p2;
wire   [63:0] bitcast_ln150_4_fu_2593_p1;
wire   [63:0] xor_ln150_2_fu_2597_p2;
wire   [63:0] bitcast_ln150_6_fu_2608_p1;
wire   [63:0] xor_ln150_3_fu_2612_p2;
wire   [63:0] bitcast_ln150_12_fu_2623_p1;
wire   [63:0] xor_ln150_6_fu_2627_p2;
wire   [63:0] bitcast_ln150_14_fu_2638_p1;
wire   [63:0] xor_ln150_7_fu_2642_p2;
wire   [63:0] bitcast_ln150_16_fu_2653_p1;
wire   [63:0] xor_ln150_8_fu_2657_p2;
wire   [63:0] bitcast_ln150_18_fu_2668_p1;
wire   [63:0] xor_ln150_9_fu_2672_p2;
wire   [8:0] or_ln157_fu_2696_p2;
wire   [8:0] or_ln158_fu_2708_p2;
wire   [8:0] or_ln159_fu_2719_p2;
wire   [8:0] or_ln160_fu_2730_p2;
wire   [8:0] or_ln161_fu_2741_p2;
wire   [8:0] or_ln162_fu_2752_p2;
wire   [8:0] or_ln163_fu_2763_p2;
wire   [8:0] or_ln182_fu_2806_p2;
wire   [8:0] add_ln182_fu_2834_p2;
wire   [8:0] or_ln183_fu_2845_p2;
wire   [8:0] or_ln184_fu_2855_p2;
wire   [7:0] add_ln183_fu_2868_p2;
wire   [8:0] add_ln184_fu_2879_p2;
wire   [8:0] or_ln185_fu_2889_p2;
wire   [8:0] or_ln186_fu_2899_p2;
wire   [7:0] add_ln185_fu_2909_p2;
wire   [7:0] add_ln186_fu_2919_p2;
wire  signed [8:0] sext_ln186_fu_2924_p1;
wire   [8:0] or_ln187_fu_2933_p2;
wire   [8:0] or_ln188_fu_2943_p2;
wire   [8:0] add_ln187_fu_2956_p2;
wire   [9:0] zext_ln174_fu_2953_p1;
wire   [9:0] add_ln188_fu_2966_p2;
wire   [2:0] hi_fu_2996_p4;
wire   [2:0] trunc_ln193_fu_2992_p1;
wire   [8:0] or_ln_fu_3010_p5;
wire   [9:0] zext_ln195_fu_3022_p1;
wire   [9:0] zext_ln115_fu_3006_p1;
wire   [9:0] add_ln198_fu_3041_p2;
wire   [8:0] or_ln198_fu_3074_p2;
wire   [9:0] add_ln199_fu_3085_p2;
wire   [9:0] add_ln200_fu_3095_p2;
wire   [8:0] or_ln199_fu_3105_p2;
wire   [8:0] or_ln200_fu_3115_p2;
wire   [9:0] add_ln201_fu_3125_p2;
wire   [9:0] add_ln202_fu_3135_p2;
wire   [8:0] or_ln201_fu_3145_p2;
wire   [8:0] or_ln202_fu_3155_p2;
wire   [9:0] add_ln203_fu_3165_p2;
wire   [9:0] add_ln204_fu_3175_p2;
wire   [8:0] or_ln203_fu_3185_p2;
wire   [8:0] or_ln204_fu_3195_p2;
wire   [8:0] or_ln215_fu_3237_p2;
wire   [8:0] add_ln215_fu_3265_p2;
wire   [8:0] or_ln216_fu_3276_p2;
wire   [8:0] or_ln217_fu_3286_p2;
wire   [7:0] add_ln216_fu_3299_p2;
wire   [8:0] add_ln217_fu_3310_p2;
wire   [8:0] or_ln218_fu_3320_p2;
wire   [8:0] or_ln219_fu_3330_p2;
wire   [7:0] add_ln218_fu_3340_p2;
wire   [7:0] add_ln219_fu_3350_p2;
wire  signed [8:0] sext_ln219_fu_3355_p1;
wire   [8:0] or_ln220_fu_3364_p2;
wire   [8:0] or_ln221_fu_3374_p2;
wire   [8:0] add_ln220_fu_3387_p2;
wire   [9:0] zext_ln174_3_fu_3384_p1;
wire   [9:0] add_ln221_fu_3397_p2;
wire   [2:0] hi_1_fu_3431_p4;
wire   [2:0] trunc_ln235_fu_3427_p1;
wire   [8:0] or_ln1_fu_3445_p5;
wire   [9:0] zext_ln238_fu_3457_p1;
wire   [9:0] zext_ln115_1_fu_3441_p1;
wire   [9:0] add_ln105_fu_3472_p2;
wire   [8:0] or_ln227_fu_3505_p2;
wire   [9:0] add_ln106_fu_3516_p2;
wire   [9:0] add_ln107_fu_3526_p2;
wire   [8:0] or_ln228_fu_3536_p2;
wire   [8:0] or_ln229_fu_3546_p2;
wire   [9:0] add_ln108_fu_3556_p2;
wire   [9:0] add_ln109_fu_3566_p2;
wire   [8:0] or_ln230_fu_3576_p2;
wire   [8:0] or_ln231_fu_3586_p2;
wire   [9:0] add_ln110_fu_3596_p2;
wire   [9:0] add_ln111_fu_3606_p2;
wire   [8:0] or_ln232_fu_3616_p2;
wire   [8:0] or_ln233_fu_3626_p2;
wire   [5:0] trunc_ln252_fu_3651_p1;
wire   [8:0] or_ln253_fu_3663_p2;
wire   [8:0] or_ln255_fu_3675_p2;
wire   [8:0] or_ln257_fu_3707_p2;
wire   [8:0] or_ln259_fu_3718_p2;
wire   [63:0] bitcast_ln271_fu_3729_p1;
wire   [63:0] xor_ln271_fu_3733_p2;
wire   [63:0] bitcast_ln271_2_fu_3744_p1;
wire   [63:0] xor_ln271_1_fu_3748_p2;
wire   [63:0] bitcast_ln271_8_fu_3759_p1;
wire   [63:0] xor_ln271_4_fu_3763_p2;
wire   [63:0] bitcast_ln271_10_fu_3775_p1;
wire   [63:0] xor_ln271_5_fu_3779_p2;
wire   [8:0] or_ln254_fu_3791_p2;
wire   [8:0] or_ln258_fu_3802_p2;
wire   [8:0] or_ln256_fu_3818_p2;
wire   [63:0] bitcast_ln271_12_fu_3829_p1;
wire   [63:0] xor_ln271_6_fu_3833_p2;
wire   [63:0] bitcast_ln271_14_fu_3844_p1;
wire   [63:0] xor_ln271_7_fu_3848_p2;
wire   [63:0] bitcast_ln271_4_fu_3859_p1;
wire   [63:0] xor_ln271_2_fu_3863_p2;
wire   [63:0] bitcast_ln271_6_fu_3874_p1;
wire   [63:0] xor_ln271_3_fu_3878_p2;
wire   [63:0] bitcast_ln271_16_fu_3889_p1;
wire   [63:0] xor_ln271_8_fu_3892_p2;
wire   [63:0] bitcast_ln271_18_fu_3903_p1;
wire   [63:0] xor_ln271_9_fu_3906_p2;
wire   [8:0] or_ln307_fu_3953_p2;
wire   [8:0] add_ln307_fu_3981_p2;
wire   [8:0] or_ln308_fu_3992_p2;
wire   [8:0] or_ln309_fu_4002_p2;
wire   [7:0] add_ln308_fu_4015_p2;
wire   [8:0] add_ln309_fu_4026_p2;
wire   [8:0] or_ln310_fu_4036_p2;
wire   [8:0] or_ln311_fu_4046_p2;
wire   [7:0] add_ln310_fu_4056_p2;
wire   [7:0] add_ln311_fu_4066_p2;
wire  signed [8:0] sext_ln311_fu_4071_p1;
wire   [8:0] or_ln312_fu_4080_p2;
wire   [8:0] or_ln313_fu_4090_p2;
wire   [8:0] add_ln312_fu_4103_p2;
wire   [9:0] zext_ln174_6_fu_4100_p1;
wire   [9:0] add_ln313_fu_4113_p2;
wire   [2:0] tmp_18_fu_4139_p4;
wire   [8:0] offset_4_fu_4153_p3;
wire   [9:0] add_ln324_fu_4170_p2;
wire   [8:0] or_ln324_fu_4203_p2;
wire   [9:0] add_ln325_fu_4214_p2;
wire   [9:0] add_ln326_fu_4224_p2;
wire   [8:0] or_ln325_fu_4234_p2;
wire   [8:0] or_ln326_fu_4244_p2;
wire   [9:0] add_ln327_fu_4254_p2;
wire   [9:0] add_ln328_fu_4264_p2;
wire   [8:0] or_ln327_fu_4274_p2;
wire   [8:0] or_ln328_fu_4284_p2;
wire   [9:0] add_ln329_fu_4294_p2;
wire   [9:0] add_ln330_fu_4304_p2;
wire   [8:0] or_ln329_fu_4314_p2;
wire   [8:0] or_ln330_fu_4324_p2;
wire   [8:0] or_ln341_fu_4366_p2;
wire   [8:0] add_ln341_fu_4394_p2;
wire   [8:0] or_ln342_fu_4405_p2;
wire   [8:0] or_ln343_fu_4415_p2;
wire   [7:0] add_ln342_fu_4428_p2;
wire   [8:0] add_ln343_fu_4439_p2;
wire   [8:0] or_ln344_fu_4449_p2;
wire   [8:0] or_ln345_fu_4459_p2;
wire   [7:0] add_ln344_fu_4469_p2;
wire   [7:0] add_ln345_fu_4479_p2;
wire  signed [8:0] sext_ln345_fu_4484_p1;
wire   [8:0] or_ln346_fu_4493_p2;
wire   [8:0] or_ln347_fu_4503_p2;
wire   [8:0] add_ln346_fu_4516_p2;
wire   [9:0] zext_ln174_9_fu_4513_p1;
wire   [9:0] add_ln347_fu_4526_p2;
wire   [2:0] tmp_19_fu_4556_p4;
wire   [8:0] tmp_s_fu_4566_p3;
wire   [9:0] add_ln105_1_fu_4583_p2;
wire   [8:0] or_ln353_fu_4624_p2;
wire   [9:0] add_ln106_1_fu_4635_p2;
wire   [9:0] add_ln107_1_fu_4645_p2;
wire   [8:0] or_ln354_fu_4665_p2;
wire   [8:0] or_ln355_fu_4675_p2;
wire   [9:0] add_ln108_1_fu_4685_p2;
wire   [9:0] add_ln109_1_fu_4695_p2;
wire   [8:0] or_ln356_fu_4715_p2;
wire   [8:0] or_ln357_fu_4725_p2;
wire   [9:0] add_ln110_1_fu_4735_p2;
wire   [9:0] add_ln111_1_fu_4745_p2;
wire   [8:0] or_ln358_fu_4765_p2;
wire   [8:0] or_ln359_fu_4775_p2;
wire   [5:0] trunc_ln379_fu_4834_p1;
wire   [8:0] or_ln380_fu_4846_p2;
wire   [8:0] or_ln382_fu_4858_p2;
wire   [8:0] or_ln384_fu_4875_p2;
wire   [8:0] or_ln386_fu_4886_p2;
wire   [8:0] or_ln381_fu_4897_p2;
wire   [8:0] or_ln385_fu_4908_p2;
wire   [8:0] or_ln383_fu_4924_p2;
wire   [63:0] bitcast_ln398_fu_4935_p1;
wire   [63:0] xor_ln398_fu_4939_p2;
wire   [63:0] bitcast_ln398_2_fu_4950_p1;
wire   [63:0] xor_ln398_1_fu_4954_p2;
wire   [63:0] bitcast_ln398_8_fu_4965_p1;
wire   [63:0] xor_ln398_4_fu_4969_p2;
wire   [63:0] bitcast_ln398_10_fu_4981_p1;
wire   [63:0] xor_ln398_5_fu_4985_p2;
wire   [63:0] bitcast_ln398_4_fu_4997_p1;
wire   [63:0] xor_ln398_2_fu_5001_p2;
wire   [63:0] bitcast_ln398_6_fu_5012_p1;
wire   [63:0] xor_ln398_3_fu_5016_p2;
wire   [63:0] bitcast_ln398_12_fu_5027_p1;
wire   [63:0] xor_ln398_6_fu_5031_p2;
wire   [63:0] bitcast_ln398_14_fu_5042_p1;
wire   [63:0] xor_ln398_7_fu_5046_p2;
wire   [8:0] zext_ln405_cast_fu_5067_p3;
wire   [63:0] bitcast_ln398_16_fu_5121_p1;
wire   [63:0] xor_ln398_8_fu_5125_p2;
wire   [63:0] bitcast_ln398_18_fu_5136_p1;
wire   [63:0] xor_ln398_9_fu_5140_p2;
wire   [8:0] zext_ln376_1_fu_5118_p1;
wire   [8:0] add_ln406_fu_5167_p2;
wire  signed [8:0] sext_ln407_fu_5194_p1;
wire  signed [7:0] sext_ln404_fu_5213_p1;
wire  signed [8:0] sext_ln408_fu_5232_p1;
reg   [1:0] grp_fu_1995_opcode;
reg   [1:0] grp_fu_1999_opcode;
reg   [1:0] grp_fu_2003_opcode;
reg   [1:0] grp_fu_2007_opcode;
reg   [1:0] grp_fu_2011_opcode;
reg   [1:0] grp_fu_2015_opcode;
reg   [148:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
reg    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
wire    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
wire    ap_ST_fsm_state78_blk;
wire    ap_ST_fsm_state79_blk;
wire    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
wire    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
wire    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
wire    ap_ST_fsm_state86_blk;
wire    ap_ST_fsm_state87_blk;
wire    ap_ST_fsm_state88_blk;
wire    ap_ST_fsm_state89_blk;
reg    ap_ST_fsm_state90_blk;
wire    ap_ST_fsm_state91_blk;
wire    ap_ST_fsm_state92_blk;
wire    ap_ST_fsm_state93_blk;
wire    ap_ST_fsm_state94_blk;
wire    ap_ST_fsm_state95_blk;
wire    ap_ST_fsm_state96_blk;
wire    ap_ST_fsm_state97_blk;
wire    ap_ST_fsm_state98_blk;
wire    ap_ST_fsm_state99_blk;
wire    ap_ST_fsm_state100_blk;
wire    ap_ST_fsm_state101_blk;
wire    ap_ST_fsm_state102_blk;
wire    ap_ST_fsm_state103_blk;
wire    ap_ST_fsm_state104_blk;
wire    ap_ST_fsm_state105_blk;
wire    ap_ST_fsm_state106_blk;
wire    ap_ST_fsm_state107_blk;
wire    ap_ST_fsm_state108_blk;
wire    ap_ST_fsm_state109_blk;
wire    ap_ST_fsm_state110_blk;
wire    ap_ST_fsm_state111_blk;
wire    ap_ST_fsm_state112_blk;
wire    ap_ST_fsm_state113_blk;
wire    ap_ST_fsm_state114_blk;
wire    ap_ST_fsm_state115_blk;
wire    ap_ST_fsm_state116_blk;
wire    ap_ST_fsm_state117_blk;
wire    ap_ST_fsm_state118_blk;
wire    ap_ST_fsm_state119_blk;
wire    ap_ST_fsm_state120_blk;
wire    ap_ST_fsm_state121_blk;
wire    ap_ST_fsm_state122_blk;
wire    ap_ST_fsm_state123_blk;
wire    ap_ST_fsm_state124_blk;
wire    ap_ST_fsm_state125_blk;
wire    ap_ST_fsm_state126_blk;
wire    ap_ST_fsm_state127_blk;
wire    ap_ST_fsm_state128_blk;
wire    ap_ST_fsm_state129_blk;
wire    ap_ST_fsm_state130_blk;
wire    ap_ST_fsm_state131_blk;
wire    ap_ST_fsm_state132_blk;
wire    ap_ST_fsm_state133_blk;
wire    ap_ST_fsm_state134_blk;
wire    ap_ST_fsm_state135_blk;
wire    ap_ST_fsm_state136_blk;
wire    ap_ST_fsm_state137_blk;
wire    ap_ST_fsm_state138_blk;
wire    ap_ST_fsm_state139_blk;
wire    ap_ST_fsm_state140_blk;
wire    ap_ST_fsm_state141_blk;
wire    ap_ST_fsm_state142_blk;
wire    ap_ST_fsm_state143_blk;
wire    ap_ST_fsm_state144_blk;
wire    ap_ST_fsm_state145_blk;
wire    ap_ST_fsm_state146_blk;
wire    ap_ST_fsm_state147_blk;
wire    ap_ST_fsm_state148_blk;
wire    ap_ST_fsm_state149_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 149'd1;
#0 grp_twiddles8_fu_1971_ap_start_reg = 1'b0;
#0 tid_fu_184 = 7'd0;
#0 tid_1_fu_208 = 7'd0;
#0 tid_2_fu_212 = 7'd0;
#0 tid_3_fu_216 = 7'd0;
#0 tid_4_fu_220 = 7'd0;
#0 tid_5_fu_224 = 7'd0;
#0 tid_6_fu_228 = 7'd0;
#0 tid_7_fu_232 = 7'd0;
#0 tid_8_fu_236 = 7'd0;
#0 p_phi24_fu_240 = 64'd0;
#0 p_phi23_fu_244 = 64'd0;
#0 p_phi22_fu_248 = 64'd0;
#0 p_phi21_fu_252 = 64'd0;
#0 p_phi20_fu_256 = 64'd0;
#0 p_phi19_fu_260 = 64'd0;
#0 p_phi18_fu_264 = 64'd0;
#0 p_phi_fu_268 = 64'd0;
#0 tid_9_fu_272 = 7'd0;
#0 tid_10_fu_276 = 7'd0;
end

fft1D_512_DATA_x_RAM_AUTO_1R1W #(
    .DataWidth( 64 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
DATA_x_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(DATA_x_address0),
    .ce0(DATA_x_ce0),
    .we0(DATA_x_we0),
    .d0(DATA_x_d0),
    .q0(DATA_x_q0),
    .address1(DATA_x_address1),
    .ce1(DATA_x_ce1),
    .we1(DATA_x_we1),
    .d1(DATA_x_d1),
    .q1(DATA_x_q1)
);

fft1D_512_DATA_x_RAM_AUTO_1R1W #(
    .DataWidth( 64 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
DATA_y_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(DATA_y_address0),
    .ce0(DATA_y_ce0),
    .we0(DATA_y_we0),
    .d0(DATA_y_d0),
    .q0(DATA_y_q0),
    .address1(DATA_y_address1),
    .ce1(DATA_y_ce1),
    .we1(DATA_y_we1),
    .d1(DATA_y_d1),
    .q1(DATA_y_q1)
);

fft1D_512_data_x_RAM_AUTO_1R1W_x #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
data_x_U_x(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_x_address0),
    .ce0(data_x_ce0),
    .we0(data_x_we0),
    .d0(data_x_d0),
    .q0(data_x_q0),
    .address1(data_x_address1),
    .ce1(data_x_ce1),
    .we1(data_x_we1),
    .d1(grp_fu_1995_p2),
    .q1(data_x_q1)
);

fft1D_512_data_x_RAM_AUTO_1R1W_x #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
data_y_U_x(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_y_address0),
    .ce0(data_y_ce0),
    .we0(data_y_we0),
    .d0(data_y_d0),
    .q0(data_y_q0),
    .address1(data_y_address1),
    .ce1(data_y_ce1),
    .we1(data_y_we1),
    .d1(data_y_d1),
    .q1(data_y_q1)
);

fft1D_512_smem_RAM_AUTO_1R1W #(
    .DataWidth( 64 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
smem_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(smem_address0),
    .ce0(smem_ce0),
    .we0(smem_we0),
    .d0(smem_d0),
    .q0(smem_q0),
    .address1(smem_address1),
    .ce1(smem_ce1),
    .we1(smem_we1),
    .d1(smem_d1),
    .q1(smem_q1)
);

fft1D_512_twiddles8 grp_twiddles8_fu_1971(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_twiddles8_fu_1971_ap_start),
    .ap_done(grp_twiddles8_fu_1971_ap_done),
    .ap_idle(grp_twiddles8_fu_1971_ap_idle),
    .ap_ready(grp_twiddles8_fu_1971_ap_ready),
    .a_x_address0(grp_twiddles8_fu_1971_a_x_address0),
    .a_x_ce0(grp_twiddles8_fu_1971_a_x_ce0),
    .a_x_we0(grp_twiddles8_fu_1971_a_x_we0),
    .a_x_d0(grp_twiddles8_fu_1971_a_x_d0),
    .a_x_address1(grp_twiddles8_fu_1971_a_x_address1),
    .a_x_ce1(grp_twiddles8_fu_1971_a_x_ce1),
    .a_x_q1(data_x_q1),
    .a_y_address0(grp_twiddles8_fu_1971_a_y_address0),
    .a_y_ce0(grp_twiddles8_fu_1971_a_y_ce0),
    .a_y_we0(grp_twiddles8_fu_1971_a_y_we0),
    .a_y_d0(grp_twiddles8_fu_1971_a_y_d0),
    .a_y_address1(grp_twiddles8_fu_1971_a_y_address1),
    .a_y_ce1(grp_twiddles8_fu_1971_a_y_ce1),
    .a_y_q1(data_y_q1),
    .i(grp_twiddles8_fu_1971_i),
    .n(grp_twiddles8_fu_1971_n)
);

fft1D_512_dadddsub_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_4_full_dsp_1_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1995_p0),
    .din1(grp_fu_1995_p1),
    .opcode(grp_fu_1995_opcode),
    .ce(1'b1),
    .dout(grp_fu_1995_p2)
);

fft1D_512_dadddsub_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_4_full_dsp_1_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1999_p0),
    .din1(grp_fu_1999_p1),
    .opcode(grp_fu_1999_opcode),
    .ce(1'b1),
    .dout(grp_fu_1999_p2)
);

fft1D_512_dadddsub_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_4_full_dsp_1_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2003_p0),
    .din1(grp_fu_2003_p1),
    .opcode(grp_fu_2003_opcode),
    .ce(1'b1),
    .dout(grp_fu_2003_p2)
);

fft1D_512_dadddsub_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_4_full_dsp_1_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2007_p0),
    .din1(grp_fu_2007_p1),
    .opcode(grp_fu_2007_opcode),
    .ce(1'b1),
    .dout(grp_fu_2007_p2)
);

fft1D_512_dadddsub_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_4_full_dsp_1_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2011_p0),
    .din1(grp_fu_2011_p1),
    .opcode(grp_fu_2011_opcode),
    .ce(1'b1),
    .dout(grp_fu_2011_p2)
);

fft1D_512_dadddsub_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_4_full_dsp_1_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2015_p0),
    .din1(grp_fu_2015_p1),
    .opcode(grp_fu_2015_opcode),
    .ce(1'b1),
    .dout(grp_fu_2015_p2)
);

fft1D_512_dsub_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsub_64ns_64ns_64_4_full_dsp_1_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2019_p0),
    .din1(grp_fu_2019_p1),
    .ce(1'b1),
    .dout(grp_fu_2019_p2)
);

fft1D_512_dsub_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsub_64ns_64ns_64_4_full_dsp_1_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2023_p0),
    .din1(grp_fu_2023_p1),
    .ce(1'b1),
    .dout(grp_fu_2023_p2)
);

fft1D_512_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2047_p0),
    .din1(grp_fu_2047_p1),
    .ce(1'b1),
    .dout(grp_fu_2047_p2)
);

fft1D_512_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2052_p0),
    .din1(grp_fu_2052_p1),
    .ce(1'b1),
    .dout(grp_fu_2052_p2)
);

fft1D_512_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_2101),
    .din1(64'd4604544271108800512),
    .ce(1'b1),
    .dout(grp_fu_2059_p2)
);

fft1D_512_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_2110),
    .din1(64'd4604544271108800512),
    .ce(1'b1),
    .dout(grp_fu_2064_p2)
);

fft1D_512_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_2137),
    .din1(64'd0),
    .ce(1'b1),
    .dout(grp_fu_2069_p2)
);

fft1D_512_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_2142),
    .din1(64'd0),
    .ce(1'b1),
    .dout(grp_fu_2074_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_twiddles8_fu_1971_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state32))) begin
            grp_twiddles8_fu_1971_ap_start_reg <= 1'b1;
        end else if ((grp_twiddles8_fu_1971_ap_ready == 1'b1)) begin
            grp_twiddles8_fu_1971_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state111) & (icmp_ln350_fu_4540_p2 == 1'd1))) begin
        tid_10_fu_276 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state119) & (icmp_ln376_fu_4822_p2 == 1'd0))) begin
        tid_10_fu_276 <= add_ln376_fu_4828_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln128_fu_2327_p2 == 1'd1))) begin
        tid_1_fu_208 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state39) & (icmp_ln176_fu_2777_p2 == 1'd0))) begin
        tid_1_fu_208 <= add_ln176_fu_2783_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) & (icmp_ln176_fu_2777_p2 == 1'd1))) begin
        tid_2_fu_212 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state44) & (icmp_ln191_fu_2980_p2 == 1'd0))) begin
        tid_2_fu_212 <= add_ln191_fu_2986_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) & (icmp_ln191_fu_2980_p2 == 1'd1))) begin
        tid_3_fu_216 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state49) & (icmp_ln208_fu_3208_p2 == 1'd0))) begin
        tid_3_fu_216 <= add_ln208_fu_3214_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) & (icmp_ln208_fu_3208_p2 == 1'd1))) begin
        tid_4_fu_220 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state54) & (icmp_ln224_fu_3411_p2 == 1'd0))) begin
        tid_4_fu_220 <= add_ln224_fu_3417_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state54) & (icmp_ln224_fu_3411_p2 == 1'd1))) begin
        tid_5_fu_224 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state59) & (icmp_ln250_fu_3639_p2 == 1'd0))) begin
        tid_5_fu_224 <= add_ln250_fu_3645_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state59) & (icmp_ln250_fu_3639_p2 == 1'd1))) begin
        tid_6_fu_228 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state96) & (icmp_ln301_fu_3924_p2 == 1'd0))) begin
        tid_6_fu_228 <= add_ln301_fu_3930_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state96) & (icmp_ln301_fu_3924_p2 == 1'd1))) begin
        tid_7_fu_232 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state101) & (icmp_ln317_fu_4127_p2 == 1'd0))) begin
        tid_7_fu_232 <= add_ln317_fu_4133_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state101) & (icmp_ln317_fu_4127_p2 == 1'd1))) begin
        tid_8_fu_236 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state106) & (icmp_ln334_fu_4337_p2 == 1'd0))) begin
        tid_8_fu_236 <= add_ln334_fu_4343_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state106) & (icmp_ln334_fu_4337_p2 == 1'd1))) begin
        tid_9_fu_272 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state111) & (icmp_ln350_fu_4540_p2 == 1'd0))) begin
        tid_9_fu_272 <= add_ln350_fu_4546_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tid_fu_184 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln128_fu_2327_p2 == 1'd0))) begin
        tid_fu_184 <= add_ln128_fu_2333_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        DATA_x_addr_24_reg_6049[8 : 3] <= zext_ln252_fu_3813_p1[8 : 3];
        DATA_x_addr_28_reg_6054[8 : 3] <= zext_ln256_fu_3823_p1[8 : 3];
        DATA_y_addr_24_reg_6060[8 : 3] <= zext_ln252_fu_3813_p1[8 : 3];
        DATA_y_addr_28_reg_6065[8 : 3] <= zext_ln256_fu_3823_p1[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        DATA_x_addr_25_reg_5949[8 : 3] <= zext_ln253_fu_3669_p1[8 : 3];
        DATA_x_addr_27_reg_5955[8 : 3] <= zext_ln255_fu_3681_p1[8 : 3];
        DATA_y_addr_25_reg_5960[8 : 3] <= zext_ln253_fu_3669_p1[8 : 3];
        DATA_y_addr_27_reg_5966[8 : 3] <= zext_ln255_fu_3681_p1[8 : 3];
        hi_2_reg_5971 <= {{tid_5_fu_224[5:3]}};
        shl_ln5_reg_5939[8 : 3] <= shl_ln5_fu_3655_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        DATA_x_addr_26_reg_6027[8 : 3] <= zext_ln254_fu_3796_p1[8 : 3];
        DATA_x_addr_30_reg_6032[8 : 3] <= zext_ln258_fu_3807_p1[8 : 3];
        DATA_y_addr_26_reg_6038[8 : 3] <= zext_ln254_fu_3796_p1[8 : 3];
        DATA_y_addr_30_reg_6043[8 : 3] <= zext_ln258_fu_3807_p1[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        DATA_x_addr_29_reg_5983[8 : 3] <= zext_ln257_fu_3712_p1[8 : 3];
        DATA_x_addr_31_reg_5989[8 : 3] <= zext_ln259_fu_3723_p1[8 : 3];
        DATA_y_addr_29_reg_5994[8 : 3] <= zext_ln257_fu_3712_p1[8 : 3];
        DATA_y_addr_31_reg_6000[8 : 3] <= zext_ln259_fu_3723_p1[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        add_ln238_reg_5869 <= add_ln238_fu_3461_p2;
        trunc_ln226_reg_5864 <= trunc_ln226_fu_3423_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        offset_1_reg_5709 <= offset_1_fu_3026_p2;
        trunc_ln197_reg_5724 <= trunc_ln197_fu_3037_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        offset_2_reg_5784 <= offset_2_fu_3220_p1;
        shl_ln3_reg_5792[8 : 3] <= shl_ln3_fu_3224_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        offset_3_reg_6121 <= offset_3_fu_3936_p1;
        shl_ln6_reg_6129[8 : 3] <= shl_ln6_fu_3940_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        offset_5_reg_6276 <= offset_5_fu_4349_p1;
        shl_ln8_reg_6284[8 : 3] <= shl_ln8_fu_4353_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        offset_reg_5629 <= offset_fu_2789_p1;
        shl_ln1_reg_5637[8 : 3] <= shl_ln1_fu_2793_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        p_phi18_fu_264 <= smem_q0;
        p_phi_fu_268 <= smem_q1;
        shl_ln9_reg_6436[8 : 3] <= shl_ln9_fu_4612_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        p_phi19_fu_260 <= smem_q1;
        p_phi20_fu_256 <= smem_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state114)) begin
        p_phi21_fu_252 <= smem_q1;
        p_phi22_fu_248 <= smem_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        p_phi23_fu_244 <= smem_q1;
        p_phi24_fu_240 <= smem_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_2079 <= grp_fu_1995_p2;
        reg_2090 <= grp_fu_1999_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_2101 <= grp_fu_2003_p2;
        reg_2110 <= grp_fu_2007_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_2119 <= grp_fu_2011_p2;
        reg_2128 <= grp_fu_2015_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_2137 <= grp_fu_2019_p2;
        reg_2142 <= grp_fu_2023_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state19))) begin
        reg_2147 <= grp_fu_1995_p2;
        reg_2155 <= grp_fu_1999_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_2163 <= grp_fu_2003_p2;
        reg_2172 <= grp_fu_2007_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_2181 <= grp_fu_1995_p2;
        reg_2189 <= grp_fu_1999_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state20))) begin
        reg_2197 <= grp_fu_2003_p2;
        reg_2203 <= grp_fu_2007_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state140))) begin
        reg_2209 <= grp_fu_2047_p2;
        reg_2216 <= grp_fu_2052_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state15))) begin
        reg_2223 <= grp_fu_2047_p2;
        reg_2230 <= grp_fu_2052_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state72))) begin
        reg_2237 <= grp_fu_2059_p2;
        reg_2243 <= grp_fu_2064_p2;
        reg_2249 <= grp_fu_2069_p2;
        reg_2254 <= grp_fu_2074_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state60))) begin
        reg_2259 <= DATA_x_q1;
        reg_2265 <= DATA_x_q0;
        reg_2273 <= DATA_y_q1;
        reg_2279 <= DATA_y_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        shl_ln10_reg_6488[8 : 3] <= shl_ln10_fu_4838_p3[8 : 3];
        tid_21_reg_6476 <= tid_10_fu_276;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        shl_ln2_reg_5741[8 : 3] <= shl_ln2_fu_3062_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        shl_ln4_reg_5896[8 : 3] <= shl_ln4_fu_3493_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        shl_ln7_reg_6233[8 : 3] <= shl_ln7_fu_4191_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        shl_ln_reg_5616[8 : 3] <= shl_ln_fu_2683_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        sub33_reg_6097 <= grp_fu_2015_p2;
        tmp_3_reg_6091 <= grp_fu_2011_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tid_11_reg_5338 <= tid_fu_184;
        xor_ln132_reg_5350 <= xor_ln132_fu_2339_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        trunc_ln153_reg_5534 <= trunc_ln153_fu_2504_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        trunc_ln321_reg_6201 <= trunc_ln321_fu_4149_p1;
        zext_ln321_reg_6206[8 : 0] <= zext_ln321_fu_4161_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        trunc_ln352_reg_6404 <= trunc_ln352_fu_4552_p1;
        zext_ln364_reg_6409[8 : 0] <= zext_ln364_fu_4574_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        work_x_load_1_reg_5382 <= work_x_q1;
        work_x_load_3_reg_5387 <= work_x_q0;
        work_y_load_1_reg_5402 <= work_y_q1;
        work_y_load_3_reg_5407 <= work_y_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state141)) begin
        xor_ln402_reg_6683 <= xor_ln402_fu_5151_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        zext_ln174_10_reg_6375[5 : 0] <= zext_ln174_10_fu_4425_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        zext_ln174_11_reg_6359[5 : 0] <= zext_ln174_11_fu_4387_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        zext_ln174_1_reg_5680[5 : 0] <= zext_ln174_1_fu_2865_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        zext_ln174_2_reg_5664[5 : 0] <= zext_ln174_2_fu_2827_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        zext_ln174_4_reg_5835[5 : 0] <= zext_ln174_4_fu_3296_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        zext_ln174_5_reg_5819[5 : 0] <= zext_ln174_5_fu_3258_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        zext_ln174_7_reg_6172[5 : 0] <= zext_ln174_7_fu_4012_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        zext_ln174_8_reg_6156[5 : 0] <= zext_ln174_8_fu_3974_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        zext_ln274_reg_6113[2 : 0] <= zext_ln274_fu_3917_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state140)) begin
        zext_ln403_cast_reg_6668[6 : 0] <= zext_ln403_cast_fu_5095_p3[6 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state122)) begin
        DATA_x_address0 = zext_ln383_fu_4929_p1;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        DATA_x_address0 = zext_ln385_fu_4913_p1;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        DATA_x_address0 = zext_ln386_fu_4891_p1;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        DATA_x_address0 = zext_ln382_fu_4864_p1;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        DATA_x_address0 = zext_ln330_1_fu_4329_p1;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        DATA_x_address0 = zext_ln328_1_fu_4289_p1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        DATA_x_address0 = zext_ln326_1_fu_4249_p1;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        DATA_x_address0 = zext_ln324_1_fu_4209_p1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        DATA_x_address0 = zext_ln313_1_fu_4095_p1;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        DATA_x_address0 = zext_ln311_fu_4051_p1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        DATA_x_address0 = zext_ln309_1_fu_4007_p1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        DATA_x_address0 = zext_ln307_1_fu_3959_p1;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        DATA_x_address0 = DATA_x_addr_31_reg_5989;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        DATA_x_address0 = DATA_x_addr_29_reg_5983;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        DATA_x_address0 = DATA_x_addr_27_reg_5955;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        DATA_x_address0 = DATA_x_addr_25_reg_5949;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        DATA_x_address0 = zext_ln256_fu_3823_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        DATA_x_address0 = zext_ln258_fu_3807_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        DATA_x_address0 = zext_ln259_fu_3723_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        DATA_x_address0 = zext_ln255_fu_3681_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        DATA_x_address0 = zext_ln204_1_fu_3200_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        DATA_x_address0 = zext_ln202_1_fu_3160_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        DATA_x_address0 = zext_ln200_1_fu_3120_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        DATA_x_address0 = zext_ln198_1_fu_3080_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        DATA_x_address0 = zext_ln188_1_fu_2948_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        DATA_x_address0 = zext_ln186_fu_2904_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        DATA_x_address0 = zext_ln184_1_fu_2860_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        DATA_x_address0 = zext_ln182_1_fu_2812_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        DATA_x_address0 = zext_ln163_fu_2768_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        DATA_x_address0 = zext_ln161_fu_2746_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        DATA_x_address0 = zext_ln159_fu_2724_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        DATA_x_address0 = zext_ln157_fu_2702_p1;
    end else begin
        DATA_x_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state122)) begin
        DATA_x_address1 = zext_ln379_fu_4919_p1;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        DATA_x_address1 = zext_ln381_fu_4902_p1;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        DATA_x_address1 = zext_ln384_fu_4880_p1;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        DATA_x_address1 = zext_ln380_fu_4852_p1;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        DATA_x_address1 = zext_ln329_1_fu_4319_p1;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        DATA_x_address1 = zext_ln327_1_fu_4279_p1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        DATA_x_address1 = zext_ln325_1_fu_4239_p1;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        DATA_x_address1 = zext_ln323_1_fu_4198_p1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        DATA_x_address1 = zext_ln312_1_fu_4085_p1;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        DATA_x_address1 = zext_ln310_1_fu_4041_p1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        DATA_x_address1 = zext_ln308_1_fu_3997_p1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        DATA_x_address1 = zext_ln306_1_fu_3948_p1;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        DATA_x_address1 = DATA_x_addr_30_reg_6032;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        DATA_x_address1 = DATA_x_addr_28_reg_6054;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        DATA_x_address1 = DATA_x_addr_26_reg_6027;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        DATA_x_address1 = DATA_x_addr_24_reg_6049;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        DATA_x_address1 = zext_ln252_fu_3813_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        DATA_x_address1 = zext_ln254_fu_3796_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        DATA_x_address1 = zext_ln257_fu_3712_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        DATA_x_address1 = zext_ln253_fu_3669_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        DATA_x_address1 = zext_ln203_1_fu_3190_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        DATA_x_address1 = zext_ln201_1_fu_3150_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        DATA_x_address1 = zext_ln199_1_fu_3110_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        DATA_x_address1 = zext_ln197_1_fu_3069_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        DATA_x_address1 = zext_ln187_1_fu_2938_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        DATA_x_address1 = zext_ln185_1_fu_2894_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        DATA_x_address1 = zext_ln183_1_fu_2850_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        DATA_x_address1 = zext_ln181_1_fu_2801_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        DATA_x_address1 = zext_ln162_fu_2757_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        DATA_x_address1 = zext_ln160_fu_2735_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        DATA_x_address1 = zext_ln158_fu_2713_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        DATA_x_address1 = zext_ln156_fu_2690_p1;
    end else begin
        DATA_x_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state102))) begin
        DATA_x_ce0 = 1'b1;
    end else begin
        DATA_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state102))) begin
        DATA_x_ce1 = 1'b1;
    end else begin
        DATA_x_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state102))) begin
        DATA_x_d0 = smem_q0;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        DATA_x_d0 = data_x_q0;
    end else begin
        DATA_x_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state102))) begin
        DATA_x_d1 = smem_q1;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        DATA_x_d1 = data_x_q1;
    end else begin
        DATA_x_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state102))) begin
        DATA_x_we0 = 1'b1;
    end else begin
        DATA_x_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state102))) begin
        DATA_x_we1 = 1'b1;
    end else begin
        DATA_x_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state122)) begin
        DATA_y_address0 = zext_ln383_fu_4929_p1;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        DATA_y_address0 = zext_ln385_fu_4913_p1;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        DATA_y_address0 = zext_ln386_fu_4891_p1;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        DATA_y_address0 = zext_ln382_fu_4864_p1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        DATA_y_address0 = zext_ln359_fu_4780_p1;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        DATA_y_address0 = zext_ln357_fu_4730_p1;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        DATA_y_address0 = zext_ln355_fu_4680_p1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        DATA_y_address0 = zext_ln353_fu_4630_p1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        DATA_y_address0 = zext_ln347_1_fu_4508_p1;
    end else if ((1'b1 == ap_CS_fsm_state108)) begin
        DATA_y_address0 = zext_ln345_fu_4464_p1;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        DATA_y_address0 = zext_ln343_1_fu_4420_p1;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        DATA_y_address0 = zext_ln341_1_fu_4372_p1;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        DATA_y_address0 = DATA_y_addr_31_reg_6000;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        DATA_y_address0 = DATA_y_addr_29_reg_5994;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        DATA_y_address0 = DATA_y_addr_27_reg_5966;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        DATA_y_address0 = DATA_y_addr_25_reg_5960;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        DATA_y_address0 = zext_ln256_fu_3823_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        DATA_y_address0 = zext_ln258_fu_3807_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        DATA_y_address0 = zext_ln259_fu_3723_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        DATA_y_address0 = zext_ln255_fu_3681_p1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        DATA_y_address0 = zext_ln233_fu_3631_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        DATA_y_address0 = zext_ln231_fu_3591_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        DATA_y_address0 = zext_ln229_fu_3551_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        DATA_y_address0 = zext_ln227_fu_3511_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        DATA_y_address0 = zext_ln221_1_fu_3379_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        DATA_y_address0 = zext_ln219_fu_3335_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        DATA_y_address0 = zext_ln217_1_fu_3291_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        DATA_y_address0 = zext_ln215_1_fu_3243_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        DATA_y_address0 = zext_ln163_fu_2768_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        DATA_y_address0 = zext_ln161_fu_2746_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        DATA_y_address0 = zext_ln159_fu_2724_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        DATA_y_address0 = zext_ln157_fu_2702_p1;
    end else begin
        DATA_y_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state122)) begin
        DATA_y_address1 = zext_ln379_fu_4919_p1;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        DATA_y_address1 = zext_ln381_fu_4902_p1;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        DATA_y_address1 = zext_ln384_fu_4880_p1;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        DATA_y_address1 = zext_ln380_fu_4852_p1;
    end else if ((1'b1 == ap_CS_fsm_state115)) begin
        DATA_y_address1 = zext_ln358_fu_4770_p1;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        DATA_y_address1 = zext_ln356_fu_4720_p1;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        DATA_y_address1 = zext_ln354_fu_4670_p1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        DATA_y_address1 = zext_ln352_fu_4619_p1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        DATA_y_address1 = zext_ln346_1_fu_4498_p1;
    end else if ((1'b1 == ap_CS_fsm_state108)) begin
        DATA_y_address1 = zext_ln344_1_fu_4454_p1;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        DATA_y_address1 = zext_ln342_1_fu_4410_p1;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        DATA_y_address1 = zext_ln340_1_fu_4361_p1;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        DATA_y_address1 = DATA_y_addr_30_reg_6043;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        DATA_y_address1 = DATA_y_addr_28_reg_6065;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        DATA_y_address1 = DATA_y_addr_26_reg_6038;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        DATA_y_address1 = DATA_y_addr_24_reg_6060;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        DATA_y_address1 = zext_ln252_fu_3813_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        DATA_y_address1 = zext_ln254_fu_3796_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        DATA_y_address1 = zext_ln257_fu_3712_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        DATA_y_address1 = zext_ln253_fu_3669_p1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        DATA_y_address1 = zext_ln232_fu_3621_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        DATA_y_address1 = zext_ln230_fu_3581_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        DATA_y_address1 = zext_ln228_fu_3541_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        DATA_y_address1 = zext_ln226_fu_3500_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        DATA_y_address1 = zext_ln220_1_fu_3369_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        DATA_y_address1 = zext_ln218_1_fu_3325_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        DATA_y_address1 = zext_ln216_1_fu_3281_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        DATA_y_address1 = zext_ln214_1_fu_3232_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        DATA_y_address1 = zext_ln162_fu_2757_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        DATA_y_address1 = zext_ln160_fu_2735_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        DATA_y_address1 = zext_ln158_fu_2713_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        DATA_y_address1 = zext_ln156_fu_2690_p1;
    end else begin
        DATA_y_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state106))) begin
        DATA_y_ce0 = 1'b1;
    end else begin
        DATA_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state106))) begin
        DATA_y_ce1 = 1'b1;
    end else begin
        DATA_y_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112))) begin
        DATA_y_d0 = smem_q0;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        DATA_y_d0 = data_y_q0;
    end else begin
        DATA_y_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112))) begin
        DATA_y_d1 = smem_q1;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        DATA_y_d1 = data_y_q1;
    end else begin
        DATA_y_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112))) begin
        DATA_y_we0 = 1'b1;
    end else begin
        DATA_y_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112))) begin
        DATA_y_we1 = 1'b1;
    end else begin
        DATA_y_we1 = 1'b0;
    end
end

assign ap_ST_fsm_state100_blk = 1'b0;

assign ap_ST_fsm_state101_blk = 1'b0;

assign ap_ST_fsm_state102_blk = 1'b0;

assign ap_ST_fsm_state103_blk = 1'b0;

assign ap_ST_fsm_state104_blk = 1'b0;

assign ap_ST_fsm_state105_blk = 1'b0;

assign ap_ST_fsm_state106_blk = 1'b0;

assign ap_ST_fsm_state107_blk = 1'b0;

assign ap_ST_fsm_state108_blk = 1'b0;

assign ap_ST_fsm_state109_blk = 1'b0;

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state110_blk = 1'b0;

assign ap_ST_fsm_state111_blk = 1'b0;

assign ap_ST_fsm_state112_blk = 1'b0;

assign ap_ST_fsm_state113_blk = 1'b0;

assign ap_ST_fsm_state114_blk = 1'b0;

assign ap_ST_fsm_state115_blk = 1'b0;

assign ap_ST_fsm_state116_blk = 1'b0;

assign ap_ST_fsm_state117_blk = 1'b0;

assign ap_ST_fsm_state118_blk = 1'b0;

assign ap_ST_fsm_state119_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state120_blk = 1'b0;

assign ap_ST_fsm_state121_blk = 1'b0;

assign ap_ST_fsm_state122_blk = 1'b0;

assign ap_ST_fsm_state123_blk = 1'b0;

assign ap_ST_fsm_state124_blk = 1'b0;

assign ap_ST_fsm_state125_blk = 1'b0;

assign ap_ST_fsm_state126_blk = 1'b0;

assign ap_ST_fsm_state127_blk = 1'b0;

assign ap_ST_fsm_state128_blk = 1'b0;

assign ap_ST_fsm_state129_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state130_blk = 1'b0;

assign ap_ST_fsm_state131_blk = 1'b0;

assign ap_ST_fsm_state132_blk = 1'b0;

assign ap_ST_fsm_state133_blk = 1'b0;

assign ap_ST_fsm_state134_blk = 1'b0;

assign ap_ST_fsm_state135_blk = 1'b0;

assign ap_ST_fsm_state136_blk = 1'b0;

assign ap_ST_fsm_state137_blk = 1'b0;

assign ap_ST_fsm_state138_blk = 1'b0;

assign ap_ST_fsm_state139_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state140_blk = 1'b0;

assign ap_ST_fsm_state141_blk = 1'b0;

assign ap_ST_fsm_state142_blk = 1'b0;

assign ap_ST_fsm_state143_blk = 1'b0;

assign ap_ST_fsm_state144_blk = 1'b0;

assign ap_ST_fsm_state145_blk = 1'b0;

assign ap_ST_fsm_state146_blk = 1'b0;

assign ap_ST_fsm_state147_blk = 1'b0;

assign ap_ST_fsm_state148_blk = 1'b0;

assign ap_ST_fsm_state149_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

always @ (*) begin
    if ((grp_twiddles8_fu_1971_ap_done == 1'b0)) begin
        ap_ST_fsm_state33_blk = 1'b1;
    end else begin
        ap_ST_fsm_state33_blk = 1'b0;
    end
end

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

assign ap_ST_fsm_state76_blk = 1'b0;

assign ap_ST_fsm_state77_blk = 1'b0;

assign ap_ST_fsm_state78_blk = 1'b0;

assign ap_ST_fsm_state79_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state80_blk = 1'b0;

assign ap_ST_fsm_state81_blk = 1'b0;

assign ap_ST_fsm_state82_blk = 1'b0;

assign ap_ST_fsm_state83_blk = 1'b0;

assign ap_ST_fsm_state84_blk = 1'b0;

assign ap_ST_fsm_state85_blk = 1'b0;

assign ap_ST_fsm_state86_blk = 1'b0;

assign ap_ST_fsm_state87_blk = 1'b0;

assign ap_ST_fsm_state88_blk = 1'b0;

assign ap_ST_fsm_state89_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if ((grp_twiddles8_fu_1971_ap_done == 1'b0)) begin
        ap_ST_fsm_state90_blk = 1'b1;
    end else begin
        ap_ST_fsm_state90_blk = 1'b0;
    end
end

assign ap_ST_fsm_state91_blk = 1'b0;

assign ap_ST_fsm_state92_blk = 1'b0;

assign ap_ST_fsm_state93_blk = 1'b0;

assign ap_ST_fsm_state94_blk = 1'b0;

assign ap_ST_fsm_state95_blk = 1'b0;

assign ap_ST_fsm_state96_blk = 1'b0;

assign ap_ST_fsm_state97_blk = 1'b0;

assign ap_ST_fsm_state98_blk = 1'b0;

assign ap_ST_fsm_state99_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state119) & (icmp_ln376_fu_4822_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state119) & (icmp_ln376_fu_4822_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state37))) begin
        data_x_address0 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state36))) begin
        data_x_address0 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state92))) begin
        data_x_address0 = 64'd3;
    end else if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state17))) begin
        data_x_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state33))) begin
        data_x_address0 = grp_twiddles8_fu_1971_a_x_address0;
    end else begin
        data_x_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state37))) begin
        data_x_address1 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state36))) begin
        data_x_address1 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state92))) begin
        data_x_address1 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state17))) begin
        data_x_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state33))) begin
        data_x_address1 = grp_twiddles8_fu_1971_a_x_address1;
    end else begin
        data_x_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        data_x_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state33))) begin
        data_x_ce0 = grp_twiddles8_fu_1971_a_x_ce0;
    end else begin
        data_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36))) begin
        data_x_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state33))) begin
        data_x_ce1 = grp_twiddles8_fu_1971_a_x_ce1;
    end else begin
        data_x_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17))) begin
        data_x_d0 = grp_fu_2003_p2;
    end else if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state33))) begin
        data_x_d0 = grp_twiddles8_fu_1971_a_x_d0;
    end else begin
        data_x_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17))) begin
        data_x_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state33))) begin
        data_x_we0 = grp_twiddles8_fu_1971_a_x_we0;
    end else begin
        data_x_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17))) begin
        data_x_we1 = 1'b1;
    end else begin
        data_x_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state37))) begin
        data_y_address0 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state36))) begin
        data_y_address0 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state116))) begin
        data_y_address0 = 64'd3;
    end else if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state111))) begin
        data_y_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state33))) begin
        data_y_address0 = grp_twiddles8_fu_1971_a_y_address0;
    end else begin
        data_y_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state37))) begin
        data_y_address1 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state36))) begin
        data_y_address1 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state116))) begin
        data_y_address1 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state111))) begin
        data_y_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state33))) begin
        data_y_address1 = grp_twiddles8_fu_1971_a_y_address1;
    end else begin
        data_y_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state111))) begin
        data_y_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state33))) begin
        data_y_ce0 = grp_twiddles8_fu_1971_a_y_ce0;
    end else begin
        data_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state111))) begin
        data_y_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state33))) begin
        data_y_ce1 = grp_twiddles8_fu_1971_a_y_ce1;
    end else begin
        data_y_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state118)) begin
        data_y_d0 = p_phi24_fu_240;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        data_y_d0 = p_phi22_fu_248;
    end else if ((1'b1 == ap_CS_fsm_state116)) begin
        data_y_d0 = p_phi20_fu_256;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        data_y_d0 = p_phi18_fu_264;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17))) begin
        data_y_d0 = grp_fu_2007_p2;
    end else if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state33))) begin
        data_y_d0 = grp_twiddles8_fu_1971_a_y_d0;
    end else begin
        data_y_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state118)) begin
        data_y_d1 = p_phi23_fu_244;
    end else if ((1'b1 == ap_CS_fsm_state117)) begin
        data_y_d1 = p_phi21_fu_252;
    end else if ((1'b1 == ap_CS_fsm_state116)) begin
        data_y_d1 = p_phi19_fu_260;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        data_y_d1 = p_phi_fu_268;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17))) begin
        data_y_d1 = grp_fu_1999_p2;
    end else begin
        data_y_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state118) | ((1'b1 == ap_CS_fsm_state111) & (icmp_ln350_fu_4540_p2 == 1'd1)))) begin
        data_y_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state33))) begin
        data_y_we0 = grp_twiddles8_fu_1971_a_y_we0;
    end else begin
        data_y_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state118) | ((1'b1 == ap_CS_fsm_state111) & (icmp_ln350_fu_4540_p2 == 1'd1)))) begin
        data_y_we1 = 1'b1;
    end else begin
        data_y_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state141))) begin
        grp_fu_1995_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state122))) begin
        grp_fu_1995_opcode = 2'd0;
    end else begin
        grp_fu_1995_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_1995_p0 = reg_2223;
    end else if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state122))) begin
        grp_fu_1995_p0 = DATA_x_q1;
    end else if (((1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state61))) begin
        grp_fu_1995_p0 = reg_2259;
    end else if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_1995_p0 = reg_2079;
    end else if (((1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_1995_p0 = reg_2163;
    end else if (((1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state134))) begin
        grp_fu_1995_p0 = reg_2197;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_1995_p0 = reg_2249;
    end else if (((1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_1995_p0 = reg_2147;
    end else if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state141))) begin
        grp_fu_1995_p0 = reg_2209;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_1995_p0 = reg_2181;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state77))) begin
        grp_fu_1995_p0 = reg_2101;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_1995_p0 = c0_x_fu_2507_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_1995_p0 = c0_x_2_fu_2467_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_1995_p0 = c0_x_1_fu_2395_p1;
    end else begin
        grp_fu_1995_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state141)) begin
        grp_fu_1995_p1 = bitcast_ln398_17_fu_5131_p1;
    end else if ((1'b1 == ap_CS_fsm_state133)) begin
        grp_fu_1995_p1 = bitcast_ln398_13_fu_5037_p1;
    end else if ((1'b1 == ap_CS_fsm_state130)) begin
        grp_fu_1995_p1 = bitcast_ln398_5_fu_5007_p1;
    end else if ((1'b1 == ap_CS_fsm_state125)) begin
        grp_fu_1995_p1 = bitcast_ln398_1_fu_4945_p1;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        grp_fu_1995_p1 = reg_2163;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        grp_fu_1995_p1 = bitcast_ln271_17_fu_3898_p1;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_1995_p1 = reg_2181;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_1995_p1 = bitcast_ln271_5_fu_3869_p1;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        grp_fu_1995_p1 = bitcast_ln271_13_fu_3839_p1;
    end else if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state122))) begin
        grp_fu_1995_p1 = DATA_x_q0;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_1995_p1 = bitcast_ln271_1_fu_3739_p1;
    end else if (((1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state61))) begin
        grp_fu_1995_p1 = DATA_x_q1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_1995_p1 = bitcast_ln150_17_fu_2663_p1;
    end else if (((1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_1995_p1 = reg_2101;
    end else if (((1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state134))) begin
        grp_fu_1995_p1 = reg_2079;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1995_p1 = bitcast_ln150_13_fu_2633_p1;
    end else if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_1995_p1 = reg_2119;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_1995_p1 = bitcast_ln150_5_fu_2603_p1;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_1995_p1 = reg_2147;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_1995_p1 = bitcast_ln150_1_fu_2541_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_1995_p1 = bitcast_ln135_fu_2513_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_1995_p1 = bitcast_ln137_fu_2486_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_1995_p1 = bitcast_ln136_fu_2418_p1;
    end else begin
        grp_fu_1995_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state141))) begin
        grp_fu_1999_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state122))) begin
        grp_fu_1999_opcode = 2'd0;
    end else begin
        grp_fu_1999_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state141)) begin
        grp_fu_1999_p0 = bitcast_ln398_19_fu_5146_p1;
    end else if ((1'b1 == ap_CS_fsm_state133)) begin
        grp_fu_1999_p0 = bitcast_ln398_15_fu_5052_p1;
    end else if ((1'b1 == ap_CS_fsm_state130)) begin
        grp_fu_1999_p0 = bitcast_ln398_7_fu_5022_p1;
    end else if ((1'b1 == ap_CS_fsm_state125)) begin
        grp_fu_1999_p0 = bitcast_ln398_3_fu_4960_p1;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        grp_fu_1999_p0 = bitcast_ln271_19_fu_3912_p1;
    end else if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state77))) begin
        grp_fu_1999_p0 = reg_2110;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_1999_p0 = bitcast_ln271_7_fu_3884_p1;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        grp_fu_1999_p0 = bitcast_ln271_15_fu_3854_p1;
    end else if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state122))) begin
        grp_fu_1999_p0 = DATA_y_q1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_1999_p0 = bitcast_ln271_3_fu_3754_p1;
    end else if (((1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state61))) begin
        grp_fu_1999_p0 = reg_2273;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_1999_p0 = bitcast_ln150_19_fu_2678_p1;
    end else if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_1999_p0 = reg_2090;
    end else if (((1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_1999_p0 = reg_2172;
    end else if (((1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state134))) begin
        grp_fu_1999_p0 = reg_2203;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1999_p0 = bitcast_ln150_15_fu_2648_p1;
    end else if (((1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_1999_p0 = reg_2155;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_1999_p0 = bitcast_ln150_7_fu_2618_p1;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_1999_p0 = reg_2189;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_1999_p0 = bitcast_ln150_3_fu_2556_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_1999_p0 = c0_y_fu_2519_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_1999_p0 = c0_y_2_fu_2492_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_1999_p0 = c0_y_1_fu_2440_p1;
    end else begin
        grp_fu_1999_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        grp_fu_1999_p1 = reg_2172;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_1999_p1 = reg_2189;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_1999_p1 = reg_2230;
    end else if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state122))) begin
        grp_fu_1999_p1 = DATA_y_q0;
    end else if (((1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state61))) begin
        grp_fu_1999_p1 = DATA_y_q1;
    end else if (((1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state134))) begin
        grp_fu_1999_p1 = reg_2090;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_1999_p1 = reg_2254;
    end else if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_1999_p1 = reg_2128;
    end else if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state141))) begin
        grp_fu_1999_p1 = reg_2216;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_1999_p1 = reg_2155;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_1999_p1 = reg_2110;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_1999_p1 = bitcast_ln144_fu_2525_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_1999_p1 = bitcast_ln146_fu_2498_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_1999_p1 = bitcast_ln145_fu_2450_p1;
    end else begin
        grp_fu_1999_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state122))) begin
        grp_fu_2003_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_2003_opcode = 2'd0;
    end else begin
        grp_fu_2003_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        grp_fu_2003_p0 = bitcast_ln398_9_fu_4975_p1;
    end else if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state77))) begin
        grp_fu_2003_p0 = reg_2101;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        grp_fu_2003_p0 = reg_2209;
    end else if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state122))) begin
        grp_fu_2003_p0 = DATA_x_q1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_2003_p0 = bitcast_ln271_9_fu_3769_p1;
    end else if (((1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state61))) begin
        grp_fu_2003_p0 = reg_2259;
    end else if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_2003_p0 = reg_2079;
    end else if (((1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_2003_p0 = reg_2163;
    end else if (((1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state134))) begin
        grp_fu_2003_p0 = reg_2197;
    end else if (((1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_2003_p0 = reg_2223;
    end else if (((1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_2003_p0 = reg_2147;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_2003_p0 = reg_2181;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_2003_p0 = bitcast_ln150_9_fu_2571_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_2003_p0 = c0_x_fu_2507_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_2003_p0 = c0_x_2_fu_2467_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_2003_p0 = c0_x_1_fu_2395_p1;
    end else begin
        grp_fu_2003_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        grp_fu_2003_p1 = bitcast_ln398_11_fu_4991_p1;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        grp_fu_2003_p1 = reg_2163;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_2003_p1 = reg_2181;
    end else if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state122))) begin
        grp_fu_2003_p1 = DATA_x_q0;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_2003_p1 = bitcast_ln271_11_fu_3785_p1;
    end else if (((1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state61))) begin
        grp_fu_2003_p1 = DATA_x_q1;
    end else if (((1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_2003_p1 = reg_2101;
    end else if (((1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state134))) begin
        grp_fu_2003_p1 = reg_2079;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_2003_p1 = reg_2237;
    end else if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_2003_p1 = reg_2119;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_2003_p1 = reg_2147;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_2003_p1 = bitcast_ln150_11_fu_2587_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_2003_p1 = bitcast_ln135_fu_2513_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_2003_p1 = bitcast_ln137_fu_2486_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_2003_p1 = bitcast_ln136_fu_2418_p1;
    end else begin
        grp_fu_2003_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state122))) begin
        grp_fu_2007_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_2007_opcode = 2'd0;
    end else begin
        grp_fu_2007_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        grp_fu_2007_p0 = bitcast_ln398_9_fu_4975_p1;
    end else if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state77))) begin
        grp_fu_2007_p0 = reg_2110;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        grp_fu_2007_p0 = reg_2216;
    end else if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state122))) begin
        grp_fu_2007_p0 = DATA_y_q1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_2007_p0 = bitcast_ln271_9_fu_3769_p1;
    end else if (((1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state61))) begin
        grp_fu_2007_p0 = reg_2273;
    end else if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_2007_p0 = reg_2090;
    end else if (((1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_2007_p0 = reg_2172;
    end else if (((1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state134))) begin
        grp_fu_2007_p0 = reg_2203;
    end else if (((1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_2007_p0 = reg_2230;
    end else if (((1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_2007_p0 = reg_2155;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_2007_p0 = reg_2189;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_2007_p0 = bitcast_ln150_9_fu_2571_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_2007_p0 = c0_y_fu_2519_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_2007_p0 = c0_y_2_fu_2492_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_2007_p0 = c0_y_1_fu_2440_p1;
    end else begin
        grp_fu_2007_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state125)) begin
        grp_fu_2007_p1 = bitcast_ln398_11_fu_4991_p1;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        grp_fu_2007_p1 = reg_2172;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_2007_p1 = reg_2189;
    end else if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state122))) begin
        grp_fu_2007_p1 = DATA_y_q0;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_2007_p1 = bitcast_ln271_11_fu_3785_p1;
    end else if (((1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state61))) begin
        grp_fu_2007_p1 = DATA_y_q1;
    end else if (((1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_2007_p1 = reg_2110;
    end else if (((1'b1 == ap_CS_fsm_state145) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state134))) begin
        grp_fu_2007_p1 = reg_2090;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_2007_p1 = reg_2243;
    end else if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_2007_p1 = reg_2128;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_2007_p1 = reg_2155;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_2007_p1 = bitcast_ln150_11_fu_2587_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_2007_p1 = bitcast_ln144_fu_2525_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_2007_p1 = bitcast_ln146_fu_2498_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_2007_p1 = bitcast_ln145_fu_2450_p1;
    end else begin
        grp_fu_2007_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_2011_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_2011_opcode = 2'd0;
    end else begin
        grp_fu_2011_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        grp_fu_2011_p0 = reg_2209;
    end else if (((1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state61))) begin
        grp_fu_2011_p0 = reg_2265;
    end else if (((1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_2011_p0 = reg_2223;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_2011_p0 = reg_2079;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_2011_p0 = c0_x_3_fu_2413_p1;
    end else begin
        grp_fu_2011_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state61))) begin
        grp_fu_2011_p1 = DATA_x_q0;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_2011_p1 = reg_2237;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_2011_p1 = reg_2119;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_2011_p1 = bitcast_ln138_fu_2434_p1;
    end else begin
        grp_fu_2011_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_2015_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_2015_opcode = 2'd0;
    end else begin
        grp_fu_2015_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        grp_fu_2015_p0 = reg_2216;
    end else if (((1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state61))) begin
        grp_fu_2015_p0 = reg_2279;
    end else if (((1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_2015_p0 = reg_2230;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_2015_p0 = reg_2090;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_2015_p0 = c0_y_3_fu_2445_p1;
    end else begin
        grp_fu_2015_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state61))) begin
        grp_fu_2015_p1 = DATA_y_q0;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_2015_p1 = reg_2243;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_2015_p1 = reg_2128;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_2015_p1 = bitcast_ln147_fu_2456_p1;
    end else begin
        grp_fu_2015_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state61))) begin
        grp_fu_2019_p0 = reg_2265;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_2019_p0 = reg_2079;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_2019_p0 = c0_x_3_fu_2413_p1;
    end else begin
        grp_fu_2019_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state61))) begin
        grp_fu_2019_p1 = DATA_x_q0;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_2019_p1 = reg_2119;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_2019_p1 = bitcast_ln138_fu_2434_p1;
    end else begin
        grp_fu_2019_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state61))) begin
        grp_fu_2023_p0 = reg_2279;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_2023_p0 = reg_2090;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_2023_p0 = c0_y_3_fu_2445_p1;
    end else begin
        grp_fu_2023_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state61))) begin
        grp_fu_2023_p1 = DATA_y_q0;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_2023_p1 = reg_2128;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_2023_p1 = bitcast_ln147_fu_2456_p1;
    end else begin
        grp_fu_2023_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_fu_2047_p0 = tmp_3_reg_6091;
    end else if (((1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_2047_p0 = reg_2119;
    end else if (((1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state69))) begin
        grp_fu_2047_p0 = reg_2079;
    end else if (((1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_2047_p0 = reg_2163;
    end else begin
        grp_fu_2047_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state69))) begin
        grp_fu_2047_p1 = 64'd4604544271108800512;
    end else if (((1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_2047_p1 = 64'd0;
    end else begin
        grp_fu_2047_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_fu_2052_p0 = sub33_reg_6097;
    end else if (((1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_2052_p0 = reg_2128;
    end else if (((1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state69))) begin
        grp_fu_2052_p0 = reg_2090;
    end else if (((1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_2052_p0 = reg_2172;
    end else begin
        grp_fu_2052_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state69))) begin
        grp_fu_2052_p1 = 64'd4604544271108800512;
    end else if (((1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_2052_p1 = 64'd0;
    end else begin
        grp_fu_2052_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_twiddles8_fu_1971_i = zext_ln274_reg_6113;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_twiddles8_fu_1971_i = trunc_ln153_reg_5534;
    end else begin
        grp_twiddles8_fu_1971_i = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_twiddles8_fu_1971_n = 10'd64;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_twiddles8_fu_1971_n = 10'd512;
    end else begin
        grp_twiddles8_fu_1971_n = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state114)) begin
        smem_address0 = zext_ln111_1_fu_4750_p1;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        smem_address0 = zext_ln109_1_fu_4700_p1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        smem_address0 = zext_ln107_1_fu_4650_p1;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        smem_address0 = zext_ln105_1_fu_4589_p1;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        smem_address0 = zext_ln347_fu_4532_p1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        smem_address0 = zext_ln345_1_fu_4488_p1;
    end else if ((1'b1 == ap_CS_fsm_state108)) begin
        smem_address0 = zext_ln343_fu_4444_p1;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        smem_address0 = zext_ln341_fu_4400_p1;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        smem_address0 = zext_ln330_fu_4309_p1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        smem_address0 = zext_ln328_fu_4269_p1;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        smem_address0 = zext_ln326_fu_4229_p1;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        smem_address0 = zext_ln324_fu_4176_p1;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        smem_address0 = zext_ln313_fu_4119_p1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        smem_address0 = zext_ln311_1_fu_4075_p1;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        smem_address0 = zext_ln309_fu_4031_p1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        smem_address0 = zext_ln307_fu_3987_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        smem_address0 = zext_ln111_fu_3611_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        smem_address0 = zext_ln109_fu_3571_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        smem_address0 = zext_ln107_fu_3531_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        smem_address0 = zext_ln105_fu_3478_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        smem_address0 = zext_ln221_fu_3403_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        smem_address0 = zext_ln219_1_fu_3359_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        smem_address0 = zext_ln217_fu_3315_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        smem_address0 = zext_ln215_fu_3271_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        smem_address0 = zext_ln204_fu_3180_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        smem_address0 = zext_ln202_fu_3140_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        smem_address0 = zext_ln200_fu_3100_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        smem_address0 = zext_ln198_fu_3047_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        smem_address0 = zext_ln188_fu_2972_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        smem_address0 = zext_ln186_1_fu_2928_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        smem_address0 = zext_ln184_fu_2884_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        smem_address0 = zext_ln182_fu_2840_p1;
    end else begin
        smem_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state114)) begin
        smem_address1 = zext_ln110_1_fu_4740_p1;
    end else if ((1'b1 == ap_CS_fsm_state113)) begin
        smem_address1 = zext_ln108_1_fu_4690_p1;
    end else if ((1'b1 == ap_CS_fsm_state112)) begin
        smem_address1 = zext_ln106_1_fu_4640_p1;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        smem_address1 = zext_ln104_1_fu_4578_p1;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        smem_address1 = zext_ln346_fu_4521_p1;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        smem_address1 = zext_ln344_fu_4474_p1;
    end else if ((1'b1 == ap_CS_fsm_state108)) begin
        smem_address1 = zext_ln342_fu_4434_p1;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        smem_address1 = zext_ln340_fu_4390_p1;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        smem_address1 = zext_ln329_fu_4299_p1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        smem_address1 = zext_ln327_fu_4259_p1;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        smem_address1 = zext_ln325_fu_4219_p1;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        smem_address1 = zext_ln323_fu_4165_p1;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        smem_address1 = zext_ln312_fu_4108_p1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        smem_address1 = zext_ln310_fu_4061_p1;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        smem_address1 = zext_ln308_fu_4021_p1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        smem_address1 = zext_ln306_fu_3977_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        smem_address1 = zext_ln110_fu_3601_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        smem_address1 = zext_ln108_fu_3561_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        smem_address1 = zext_ln106_fu_3521_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        smem_address1 = zext_ln104_fu_3467_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        smem_address1 = zext_ln220_fu_3392_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        smem_address1 = zext_ln218_fu_3345_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        smem_address1 = zext_ln216_fu_3305_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        smem_address1 = zext_ln214_fu_3261_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        smem_address1 = zext_ln203_fu_3170_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        smem_address1 = zext_ln201_fu_3130_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        smem_address1 = zext_ln199_fu_3090_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        smem_address1 = zext_ln197_fu_3032_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        smem_address1 = zext_ln187_fu_2961_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        smem_address1 = zext_ln185_fu_2914_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        smem_address1 = zext_ln183_fu_2874_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        smem_address1 = zext_ln181_fu_2830_p1;
    end else begin
        smem_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state102))) begin
        smem_ce0 = 1'b1;
    end else begin
        smem_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state102))) begin
        smem_ce1 = 1'b1;
    end else begin
        smem_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state107))) begin
        smem_d0 = DATA_y_q0;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state43))) begin
        smem_d0 = DATA_x_q0;
    end else begin
        smem_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state107))) begin
        smem_d1 = DATA_y_q1;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state43))) begin
        smem_d1 = DATA_x_q1;
    end else begin
        smem_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state107))) begin
        smem_we0 = 1'b1;
    end else begin
        smem_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state107))) begin
        smem_we1 = 1'b1;
    end else begin
        smem_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        work_x_address0 = zext_ln404_fu_5216_p1;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        work_x_address0 = zext_ln402_fu_5156_p1;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        work_x_address0 = zext_ln403_fu_5102_p1;
    end else if ((1'b1 == ap_CS_fsm_state134)) begin
        work_x_address0 = zext_ln405_fu_5074_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        work_x_address0 = zext_ln135_fu_2480_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        work_x_address0 = zext_ln137_fu_2428_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        work_x_address0 = zext_ln138_fu_2389_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        work_x_address0 = zext_ln134_fu_2355_p1;
    end else begin
        work_x_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state149)) begin
        work_x_address1 = zext_ln408_fu_5235_p1;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        work_x_address1 = zext_ln407_fu_5197_p1;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        work_x_address1 = zext_ln406_fu_5173_p1;
    end else if ((1'b1 == ap_CS_fsm_state134)) begin
        work_x_address1 = zext_ln376_fu_5057_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        work_x_address1 = zext_ln128_fu_2462_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        work_x_address1 = zext_ln133_fu_2407_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        work_x_address1 = zext_ln136_fu_2380_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        work_x_address1 = zext_ln132_fu_2345_p1;
    end else begin
        work_x_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state141))) begin
        work_x_ce0 = 1'b1;
    end else begin
        work_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state141))) begin
        work_x_ce1 = 1'b1;
    end else begin
        work_x_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        work_x_d0 = bitcast_ln404_fu_5222_p1;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        work_x_d0 = bitcast_ln402_fu_5162_p1;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        work_x_d0 = bitcast_ln403_fu_5108_p1;
    end else if ((1'b1 == ap_CS_fsm_state134)) begin
        work_x_d0 = bitcast_ln405_fu_5080_p1;
    end else begin
        work_x_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state149)) begin
        work_x_d1 = bitcast_ln408_fu_5241_p1;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        work_x_d1 = bitcast_ln407_fu_5203_p1;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        work_x_d1 = bitcast_ln406_fu_5179_p1;
    end else if ((1'b1 == ap_CS_fsm_state134)) begin
        work_x_d1 = bitcast_ln401_fu_5062_p1;
    end else begin
        work_x_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state141))) begin
        work_x_we0 = 1'b1;
    end else begin
        work_x_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state141))) begin
        work_x_we1 = 1'b1;
    end else begin
        work_x_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        work_y_address0 = zext_ln404_fu_5216_p1;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        work_y_address0 = zext_ln402_fu_5156_p1;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        work_y_address0 = zext_ln403_fu_5102_p1;
    end else if ((1'b1 == ap_CS_fsm_state134)) begin
        work_y_address0 = zext_ln405_fu_5074_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        work_y_address0 = zext_ln135_fu_2480_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        work_y_address0 = zext_ln137_fu_2428_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        work_y_address0 = zext_ln138_fu_2389_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        work_y_address0 = zext_ln134_fu_2355_p1;
    end else begin
        work_y_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state149)) begin
        work_y_address1 = zext_ln408_fu_5235_p1;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        work_y_address1 = zext_ln407_fu_5197_p1;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        work_y_address1 = zext_ln406_fu_5173_p1;
    end else if ((1'b1 == ap_CS_fsm_state134)) begin
        work_y_address1 = zext_ln376_fu_5057_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        work_y_address1 = zext_ln128_fu_2462_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        work_y_address1 = zext_ln133_fu_2407_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        work_y_address1 = zext_ln136_fu_2380_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        work_y_address1 = zext_ln132_fu_2345_p1;
    end else begin
        work_y_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state141))) begin
        work_y_ce0 = 1'b1;
    end else begin
        work_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state141))) begin
        work_y_ce1 = 1'b1;
    end else begin
        work_y_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state148)) begin
        work_y_d0 = bitcast_ln413_fu_5227_p1;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        work_y_d0 = bitcast_ln411_fu_5184_p1;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        work_y_d0 = bitcast_ln412_fu_5113_p1;
    end else if ((1'b1 == ap_CS_fsm_state134)) begin
        work_y_d0 = bitcast_ln414_fu_5090_p1;
    end else begin
        work_y_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state149)) begin
        work_y_d1 = bitcast_ln417_fu_5246_p1;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        work_y_d1 = bitcast_ln416_fu_5208_p1;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        work_y_d1 = bitcast_ln415_fu_5189_p1;
    end else if ((1'b1 == ap_CS_fsm_state134)) begin
        work_y_d1 = bitcast_ln410_fu_5085_p1;
    end else begin
        work_y_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state140) | (1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state141))) begin
        work_y_we0 = 1'b1;
    end else begin
        work_y_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state149) | (1'b1 == ap_CS_fsm_state142) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state141))) begin
        work_y_we1 = 1'b1;
    end else begin
        work_y_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln128_fu_2327_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if (((1'b1 == ap_CS_fsm_state33) & (grp_twiddles8_fu_1971_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == ap_CS_fsm_state39) & (icmp_ln176_fu_2777_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state44 : begin
            if (((1'b1 == ap_CS_fsm_state44) & (icmp_ln191_fu_2980_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state49 : begin
            if (((1'b1 == ap_CS_fsm_state49) & (icmp_ln208_fu_3208_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state54 : begin
            if (((1'b1 == ap_CS_fsm_state54) & (icmp_ln224_fu_3411_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state59 : begin
            if (((1'b1 == ap_CS_fsm_state59) & (icmp_ln250_fu_3639_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            if (((1'b1 == ap_CS_fsm_state90) & (grp_twiddles8_fu_1971_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state90;
            end
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state96 : begin
            if (((1'b1 == ap_CS_fsm_state96) & (icmp_ln301_fu_3924_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state101 : begin
            if (((1'b1 == ap_CS_fsm_state101) & (icmp_ln317_fu_4127_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state106 : begin
            if (((1'b1 == ap_CS_fsm_state106) & (icmp_ln334_fu_4337_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state111;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state111 : begin
            if (((1'b1 == ap_CS_fsm_state111) & (icmp_ln350_fu_4540_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state116;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            if (((1'b1 == ap_CS_fsm_state119) & (icmp_ln376_fu_4822_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state120;
            end
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln105_1_fu_4583_p2 = (zext_ln364_fu_4574_p1 + 10'd8);

assign add_ln105_fu_3472_p2 = (add_ln238_fu_3461_p2 + 10'd8);

assign add_ln106_1_fu_4635_p2 = (zext_ln364_reg_6409 + 10'd16);

assign add_ln106_fu_3516_p2 = (add_ln238_reg_5869 + 10'd16);

assign add_ln107_1_fu_4645_p2 = (zext_ln364_reg_6409 + 10'd24);

assign add_ln107_fu_3526_p2 = (add_ln238_reg_5869 + 10'd24);

assign add_ln108_1_fu_4685_p2 = (zext_ln364_reg_6409 + 10'd32);

assign add_ln108_fu_3556_p2 = (add_ln238_reg_5869 + 10'd32);

assign add_ln109_1_fu_4695_p2 = (zext_ln364_reg_6409 + 10'd40);

assign add_ln109_fu_3566_p2 = (add_ln238_reg_5869 + 10'd40);

assign add_ln110_1_fu_4735_p2 = (zext_ln364_reg_6409 + 10'd48);

assign add_ln110_fu_3596_p2 = (add_ln238_reg_5869 + 10'd48);

assign add_ln111_1_fu_4745_p2 = (zext_ln364_reg_6409 + 10'd56);

assign add_ln111_fu_3606_p2 = (add_ln238_reg_5869 + 10'd56);

assign add_ln128_fu_2333_p2 = (tid_fu_184 + 7'd1);

assign add_ln136_fu_2374_p2 = ($signed(zext_ln128_1_fu_2371_p1) + $signed(9'd320));

assign add_ln176_fu_2783_p2 = (tid_1_fu_208 + 7'd1);

assign add_ln182_fu_2834_p2 = ($signed(zext_ln174_2_fu_2827_p1) + $signed(9'd264));

assign add_ln183_fu_2868_p2 = (zext_ln174_1_fu_2865_p1 + 8'd66);

assign add_ln184_fu_2879_p2 = ($signed(zext_ln174_2_reg_5664) + $signed(9'd330));

assign add_ln185_fu_2909_p2 = ($signed(zext_ln174_1_reg_5680) + $signed(8'd132));

assign add_ln186_fu_2919_p2 = ($signed(zext_ln174_1_reg_5680) + $signed(8'd140));

assign add_ln187_fu_2956_p2 = (zext_ln174_2_reg_5664 + 9'd198);

assign add_ln188_fu_2966_p2 = (zext_ln174_fu_2953_p1 + 10'd462);

assign add_ln191_fu_2986_p2 = (tid_2_fu_212 + 7'd1);

assign add_ln198_fu_3041_p2 = (offset_1_fu_3026_p2 + 10'd32);

assign add_ln199_fu_3085_p2 = (offset_1_reg_5709 + 10'd8);

assign add_ln200_fu_3095_p2 = (offset_1_reg_5709 + 10'd40);

assign add_ln201_fu_3125_p2 = (offset_1_reg_5709 + 10'd16);

assign add_ln202_fu_3135_p2 = (offset_1_reg_5709 + 10'd48);

assign add_ln203_fu_3165_p2 = (offset_1_reg_5709 + 10'd24);

assign add_ln204_fu_3175_p2 = (offset_1_reg_5709 + 10'd56);

assign add_ln208_fu_3214_p2 = (tid_3_fu_216 + 7'd1);

assign add_ln215_fu_3265_p2 = ($signed(zext_ln174_5_fu_3258_p1) + $signed(9'd264));

assign add_ln216_fu_3299_p2 = (zext_ln174_4_fu_3296_p1 + 8'd66);

assign add_ln217_fu_3310_p2 = ($signed(zext_ln174_5_reg_5819) + $signed(9'd330));

assign add_ln218_fu_3340_p2 = ($signed(zext_ln174_4_reg_5835) + $signed(8'd132));

assign add_ln219_fu_3350_p2 = ($signed(zext_ln174_4_reg_5835) + $signed(8'd140));

assign add_ln220_fu_3387_p2 = (zext_ln174_5_reg_5819 + 9'd198);

assign add_ln221_fu_3397_p2 = (zext_ln174_3_fu_3384_p1 + 10'd462);

assign add_ln224_fu_3417_p2 = (tid_4_fu_220 + 7'd1);

assign add_ln238_fu_3461_p2 = (zext_ln238_fu_3457_p1 + zext_ln115_1_fu_3441_p1);

assign add_ln250_fu_3645_p2 = (tid_5_fu_224 + 7'd1);

assign add_ln301_fu_3930_p2 = (tid_6_fu_228 + 7'd1);

assign add_ln307_fu_3981_p2 = ($signed(zext_ln174_8_fu_3974_p1) + $signed(9'd288));

assign add_ln308_fu_4015_p2 = (zext_ln174_7_fu_4012_p1 + 8'd72);

assign add_ln309_fu_4026_p2 = ($signed(zext_ln174_8_reg_6156) + $signed(9'd360));

assign add_ln310_fu_4056_p2 = ($signed(zext_ln174_7_reg_6172) + $signed(8'd144));

assign add_ln311_fu_4066_p2 = ($signed(zext_ln174_7_reg_6172) + $signed(8'd176));

assign add_ln312_fu_4103_p2 = (zext_ln174_8_reg_6156 + 9'd216);

assign add_ln313_fu_4113_p2 = (zext_ln174_6_fu_4100_p1 + 10'd504);

assign add_ln317_fu_4133_p2 = (tid_7_fu_232 + 7'd1);

assign add_ln324_fu_4170_p2 = (zext_ln321_fu_4161_p1 + 10'd32);

assign add_ln325_fu_4214_p2 = (zext_ln321_reg_6206 + 10'd8);

assign add_ln326_fu_4224_p2 = (zext_ln321_reg_6206 + 10'd40);

assign add_ln327_fu_4254_p2 = (zext_ln321_reg_6206 + 10'd16);

assign add_ln328_fu_4264_p2 = (zext_ln321_reg_6206 + 10'd48);

assign add_ln329_fu_4294_p2 = (zext_ln321_reg_6206 + 10'd24);

assign add_ln330_fu_4304_p2 = (zext_ln321_reg_6206 + 10'd56);

assign add_ln334_fu_4343_p2 = (tid_8_fu_236 + 7'd1);

assign add_ln341_fu_4394_p2 = ($signed(zext_ln174_11_fu_4387_p1) + $signed(9'd288));

assign add_ln342_fu_4428_p2 = (zext_ln174_10_fu_4425_p1 + 8'd72);

assign add_ln343_fu_4439_p2 = ($signed(zext_ln174_11_reg_6359) + $signed(9'd360));

assign add_ln344_fu_4469_p2 = ($signed(zext_ln174_10_reg_6375) + $signed(8'd144));

assign add_ln345_fu_4479_p2 = ($signed(zext_ln174_10_reg_6375) + $signed(8'd176));

assign add_ln346_fu_4516_p2 = (zext_ln174_11_reg_6359 + 9'd216);

assign add_ln347_fu_4526_p2 = (zext_ln174_9_fu_4513_p1 + 10'd504);

assign add_ln350_fu_4546_p2 = (tid_9_fu_272 + 7'd1);

assign add_ln376_fu_4828_p2 = (tid_10_fu_276 + 7'd1);

assign add_ln406_fu_5167_p2 = ($signed(zext_ln376_1_fu_5118_p1) + $signed(9'd320));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd123];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd129];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd130];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd131];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd136];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd140];

assign ap_CS_fsm_state142 = ap_CS_fsm[32'd141];

assign ap_CS_fsm_state144 = ap_CS_fsm[32'd143];

assign ap_CS_fsm_state145 = ap_CS_fsm[32'd144];

assign ap_CS_fsm_state148 = ap_CS_fsm[32'd147];

assign ap_CS_fsm_state149 = ap_CS_fsm[32'd148];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign bitcast_ln135_fu_2513_p1 = work_x_q0;

assign bitcast_ln136_fu_2418_p1 = work_x_q1;

assign bitcast_ln137_fu_2486_p1 = work_x_q0;

assign bitcast_ln138_fu_2434_p1 = work_x_q0;

assign bitcast_ln144_fu_2525_p1 = work_y_q0;

assign bitcast_ln145_fu_2450_p1 = work_y_q1;

assign bitcast_ln146_fu_2498_p1 = work_y_q0;

assign bitcast_ln147_fu_2456_p1 = work_y_q0;

assign bitcast_ln150_10_fu_2577_p1 = reg_2142;

assign bitcast_ln150_11_fu_2587_p1 = xor_ln150_5_fu_2581_p2;

assign bitcast_ln150_12_fu_2623_p1 = reg_2142;

assign bitcast_ln150_13_fu_2633_p1 = xor_ln150_6_fu_2627_p2;

assign bitcast_ln150_14_fu_2638_p1 = reg_2137;

assign bitcast_ln150_15_fu_2648_p1 = xor_ln150_7_fu_2642_p2;

assign bitcast_ln150_16_fu_2653_p1 = reg_2128;

assign bitcast_ln150_17_fu_2663_p1 = xor_ln150_8_fu_2657_p2;

assign bitcast_ln150_18_fu_2668_p1 = reg_2119;

assign bitcast_ln150_19_fu_2678_p1 = xor_ln150_9_fu_2672_p2;

assign bitcast_ln150_1_fu_2541_p1 = xor_ln150_fu_2535_p2;

assign bitcast_ln150_2_fu_2546_p1 = reg_2101;

assign bitcast_ln150_3_fu_2556_p1 = xor_ln150_1_fu_2550_p2;

assign bitcast_ln150_4_fu_2593_p1 = reg_2172;

assign bitcast_ln150_5_fu_2603_p1 = xor_ln150_2_fu_2597_p2;

assign bitcast_ln150_6_fu_2608_p1 = reg_2163;

assign bitcast_ln150_7_fu_2618_p1 = xor_ln150_3_fu_2612_p2;

assign bitcast_ln150_8_fu_2561_p1 = reg_2137;

assign bitcast_ln150_9_fu_2571_p1 = xor_ln150_4_fu_2565_p2;

assign bitcast_ln150_fu_2531_p1 = reg_2110;

assign bitcast_ln271_10_fu_3775_p1 = reg_2142;

assign bitcast_ln271_11_fu_3785_p1 = xor_ln271_5_fu_3779_p2;

assign bitcast_ln271_12_fu_3829_p1 = reg_2142;

assign bitcast_ln271_13_fu_3839_p1 = xor_ln271_6_fu_3833_p2;

assign bitcast_ln271_14_fu_3844_p1 = reg_2137;

assign bitcast_ln271_15_fu_3854_p1 = xor_ln271_7_fu_3848_p2;

assign bitcast_ln271_16_fu_3889_p1 = sub33_reg_6097;

assign bitcast_ln271_17_fu_3898_p1 = xor_ln271_8_fu_3892_p2;

assign bitcast_ln271_18_fu_3903_p1 = tmp_3_reg_6091;

assign bitcast_ln271_19_fu_3912_p1 = xor_ln271_9_fu_3906_p2;

assign bitcast_ln271_1_fu_3739_p1 = xor_ln271_fu_3733_p2;

assign bitcast_ln271_2_fu_3744_p1 = reg_2101;

assign bitcast_ln271_3_fu_3754_p1 = xor_ln271_1_fu_3748_p2;

assign bitcast_ln271_4_fu_3859_p1 = reg_2172;

assign bitcast_ln271_5_fu_3869_p1 = xor_ln271_2_fu_3863_p2;

assign bitcast_ln271_6_fu_3874_p1 = reg_2163;

assign bitcast_ln271_7_fu_3884_p1 = xor_ln271_3_fu_3878_p2;

assign bitcast_ln271_8_fu_3759_p1 = reg_2137;

assign bitcast_ln271_9_fu_3769_p1 = xor_ln271_4_fu_3763_p2;

assign bitcast_ln271_fu_3729_p1 = reg_2110;

assign bitcast_ln398_10_fu_4981_p1 = reg_2142;

assign bitcast_ln398_11_fu_4991_p1 = xor_ln398_5_fu_4985_p2;

assign bitcast_ln398_12_fu_5027_p1 = reg_2142;

assign bitcast_ln398_13_fu_5037_p1 = xor_ln398_6_fu_5031_p2;

assign bitcast_ln398_14_fu_5042_p1 = reg_2137;

assign bitcast_ln398_15_fu_5052_p1 = xor_ln398_7_fu_5046_p2;

assign bitcast_ln398_16_fu_5121_p1 = reg_2128;

assign bitcast_ln398_17_fu_5131_p1 = xor_ln398_8_fu_5125_p2;

assign bitcast_ln398_18_fu_5136_p1 = reg_2119;

assign bitcast_ln398_19_fu_5146_p1 = xor_ln398_9_fu_5140_p2;

assign bitcast_ln398_1_fu_4945_p1 = xor_ln398_fu_4939_p2;

assign bitcast_ln398_2_fu_4950_p1 = reg_2101;

assign bitcast_ln398_3_fu_4960_p1 = xor_ln398_1_fu_4954_p2;

assign bitcast_ln398_4_fu_4997_p1 = reg_2172;

assign bitcast_ln398_5_fu_5007_p1 = xor_ln398_2_fu_5001_p2;

assign bitcast_ln398_6_fu_5012_p1 = reg_2163;

assign bitcast_ln398_7_fu_5022_p1 = xor_ln398_3_fu_5016_p2;

assign bitcast_ln398_8_fu_4965_p1 = reg_2137;

assign bitcast_ln398_9_fu_4975_p1 = xor_ln398_4_fu_4969_p2;

assign bitcast_ln398_fu_4935_p1 = reg_2110;

assign bitcast_ln401_fu_5062_p1 = grp_fu_1995_p2;

assign bitcast_ln402_fu_5162_p1 = grp_fu_1995_p2;

assign bitcast_ln403_fu_5108_p1 = grp_fu_1995_p2;

assign bitcast_ln404_fu_5222_p1 = grp_fu_1995_p2;

assign bitcast_ln405_fu_5080_p1 = grp_fu_2003_p2;

assign bitcast_ln406_fu_5179_p1 = grp_fu_2003_p2;

assign bitcast_ln407_fu_5203_p1 = reg_2163;

assign bitcast_ln408_fu_5241_p1 = reg_2101;

assign bitcast_ln410_fu_5085_p1 = grp_fu_1999_p2;

assign bitcast_ln411_fu_5184_p1 = grp_fu_1999_p2;

assign bitcast_ln412_fu_5113_p1 = grp_fu_1999_p2;

assign bitcast_ln413_fu_5227_p1 = grp_fu_1999_p2;

assign bitcast_ln414_fu_5090_p1 = grp_fu_2007_p2;

assign bitcast_ln415_fu_5189_p1 = grp_fu_2007_p2;

assign bitcast_ln416_fu_5208_p1 = reg_2172;

assign bitcast_ln417_fu_5246_p1 = reg_2110;

assign c0_x_1_fu_2395_p1 = work_x_load_1_reg_5382;

assign c0_x_2_fu_2467_p1 = work_x_q1;

assign c0_x_3_fu_2413_p1 = work_x_load_3_reg_5387;

assign c0_x_fu_2507_p1 = work_x_q1;

assign c0_y_1_fu_2440_p1 = work_y_load_1_reg_5402;

assign c0_y_2_fu_2492_p1 = work_y_q1;

assign c0_y_3_fu_2445_p1 = work_y_load_3_reg_5407;

assign c0_y_fu_2519_p1 = work_y_q1;

assign grp_twiddles8_fu_1971_ap_start = grp_twiddles8_fu_1971_ap_start_reg;

assign hi_1_fu_3431_p4 = {{tid_4_fu_220[5:3]}};

assign hi_fu_2996_p4 = {{tid_2_fu_212[5:3]}};

assign icmp_ln128_fu_2327_p2 = ((tid_fu_184 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln176_fu_2777_p2 = ((tid_1_fu_208 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln191_fu_2980_p2 = ((tid_2_fu_212 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln208_fu_3208_p2 = ((tid_3_fu_216 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln224_fu_3411_p2 = ((tid_4_fu_220 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln250_fu_3639_p2 = ((tid_5_fu_224 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln301_fu_3924_p2 = ((tid_6_fu_228 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln317_fu_4127_p2 = ((tid_7_fu_232 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln334_fu_4337_p2 = ((tid_8_fu_236 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln350_fu_4540_p2 = ((tid_9_fu_272 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln376_fu_4822_p2 = ((tid_10_fu_276 == 7'd64) ? 1'b1 : 1'b0);

assign offset_1_fu_3026_p2 = (zext_ln195_fu_3022_p1 + zext_ln115_fu_3006_p1);

assign offset_2_fu_3220_p1 = tid_3_fu_216[5:0];

assign offset_3_fu_3936_p1 = tid_6_fu_228[5:0];

assign offset_4_fu_4153_p3 = {{tmp_18_fu_4139_p4}, {trunc_ln321_fu_4149_p1}};

assign offset_5_fu_4349_p1 = tid_8_fu_236[5:0];

assign offset_fu_2789_p1 = tid_1_fu_208[5:0];

assign or_ln157_fu_2696_p2 = (shl_ln_fu_2683_p3 | 9'd1);

assign or_ln158_fu_2708_p2 = (shl_ln_reg_5616 | 9'd2);

assign or_ln159_fu_2719_p2 = (shl_ln_reg_5616 | 9'd3);

assign or_ln160_fu_2730_p2 = (shl_ln_reg_5616 | 9'd4);

assign or_ln161_fu_2741_p2 = (shl_ln_reg_5616 | 9'd5);

assign or_ln162_fu_2752_p2 = (shl_ln_reg_5616 | 9'd6);

assign or_ln163_fu_2763_p2 = (shl_ln_reg_5616 | 9'd7);

assign or_ln182_fu_2806_p2 = (shl_ln1_fu_2793_p3 | 9'd1);

assign or_ln183_fu_2845_p2 = (shl_ln1_reg_5637 | 9'd4);

assign or_ln184_fu_2855_p2 = (shl_ln1_reg_5637 | 9'd5);

assign or_ln185_fu_2889_p2 = (shl_ln1_reg_5637 | 9'd2);

assign or_ln186_fu_2899_p2 = (shl_ln1_reg_5637 | 9'd3);

assign or_ln187_fu_2933_p2 = (shl_ln1_reg_5637 | 9'd6);

assign or_ln188_fu_2943_p2 = (shl_ln1_reg_5637 | 9'd7);

assign or_ln198_fu_3074_p2 = (shl_ln2_fu_3062_p3 | 9'd4);

assign or_ln199_fu_3105_p2 = (shl_ln2_reg_5741 | 9'd1);

assign or_ln1_fu_3445_p5 = {{{{trunc_ln235_fu_3427_p1}, {2'd0}}, {trunc_ln235_fu_3427_p1}}, {1'd0}};

assign or_ln200_fu_3115_p2 = (shl_ln2_reg_5741 | 9'd5);

assign or_ln201_fu_3145_p2 = (shl_ln2_reg_5741 | 9'd2);

assign or_ln202_fu_3155_p2 = (shl_ln2_reg_5741 | 9'd6);

assign or_ln203_fu_3185_p2 = (shl_ln2_reg_5741 | 9'd3);

assign or_ln204_fu_3195_p2 = (shl_ln2_reg_5741 | 9'd7);

assign or_ln215_fu_3237_p2 = (shl_ln3_fu_3224_p3 | 9'd1);

assign or_ln216_fu_3276_p2 = (shl_ln3_reg_5792 | 9'd4);

assign or_ln217_fu_3286_p2 = (shl_ln3_reg_5792 | 9'd5);

assign or_ln218_fu_3320_p2 = (shl_ln3_reg_5792 | 9'd2);

assign or_ln219_fu_3330_p2 = (shl_ln3_reg_5792 | 9'd3);

assign or_ln220_fu_3364_p2 = (shl_ln3_reg_5792 | 9'd6);

assign or_ln221_fu_3374_p2 = (shl_ln3_reg_5792 | 9'd7);

assign or_ln227_fu_3505_p2 = (shl_ln4_fu_3493_p3 | 9'd1);

assign or_ln228_fu_3536_p2 = (shl_ln4_reg_5896 | 9'd2);

assign or_ln229_fu_3546_p2 = (shl_ln4_reg_5896 | 9'd3);

assign or_ln230_fu_3576_p2 = (shl_ln4_reg_5896 | 9'd4);

assign or_ln231_fu_3586_p2 = (shl_ln4_reg_5896 | 9'd5);

assign or_ln232_fu_3616_p2 = (shl_ln4_reg_5896 | 9'd6);

assign or_ln233_fu_3626_p2 = (shl_ln4_reg_5896 | 9'd7);

assign or_ln253_fu_3663_p2 = (shl_ln5_fu_3655_p3 | 9'd1);

assign or_ln254_fu_3791_p2 = (shl_ln5_reg_5939 | 9'd2);

assign or_ln255_fu_3675_p2 = (shl_ln5_fu_3655_p3 | 9'd3);

assign or_ln256_fu_3818_p2 = (shl_ln5_reg_5939 | 9'd4);

assign or_ln257_fu_3707_p2 = (shl_ln5_reg_5939 | 9'd5);

assign or_ln258_fu_3802_p2 = (shl_ln5_reg_5939 | 9'd6);

assign or_ln259_fu_3718_p2 = (shl_ln5_reg_5939 | 9'd7);

assign or_ln307_fu_3953_p2 = (shl_ln6_fu_3940_p3 | 9'd1);

assign or_ln308_fu_3992_p2 = (shl_ln6_reg_6129 | 9'd4);

assign or_ln309_fu_4002_p2 = (shl_ln6_reg_6129 | 9'd5);

assign or_ln310_fu_4036_p2 = (shl_ln6_reg_6129 | 9'd2);

assign or_ln311_fu_4046_p2 = (shl_ln6_reg_6129 | 9'd3);

assign or_ln312_fu_4080_p2 = (shl_ln6_reg_6129 | 9'd6);

assign or_ln313_fu_4090_p2 = (shl_ln6_reg_6129 | 9'd7);

assign or_ln324_fu_4203_p2 = (shl_ln7_fu_4191_p3 | 9'd4);

assign or_ln325_fu_4234_p2 = (shl_ln7_reg_6233 | 9'd1);

assign or_ln326_fu_4244_p2 = (shl_ln7_reg_6233 | 9'd5);

assign or_ln327_fu_4274_p2 = (shl_ln7_reg_6233 | 9'd2);

assign or_ln328_fu_4284_p2 = (shl_ln7_reg_6233 | 9'd6);

assign or_ln329_fu_4314_p2 = (shl_ln7_reg_6233 | 9'd3);

assign or_ln330_fu_4324_p2 = (shl_ln7_reg_6233 | 9'd7);

assign or_ln341_fu_4366_p2 = (shl_ln8_fu_4353_p3 | 9'd1);

assign or_ln342_fu_4405_p2 = (shl_ln8_reg_6284 | 9'd4);

assign or_ln343_fu_4415_p2 = (shl_ln8_reg_6284 | 9'd5);

assign or_ln344_fu_4449_p2 = (shl_ln8_reg_6284 | 9'd2);

assign or_ln345_fu_4459_p2 = (shl_ln8_reg_6284 | 9'd3);

assign or_ln346_fu_4493_p2 = (shl_ln8_reg_6284 | 9'd6);

assign or_ln347_fu_4503_p2 = (shl_ln8_reg_6284 | 9'd7);

assign or_ln353_fu_4624_p2 = (shl_ln9_fu_4612_p3 | 9'd1);

assign or_ln354_fu_4665_p2 = (shl_ln9_reg_6436 | 9'd2);

assign or_ln355_fu_4675_p2 = (shl_ln9_reg_6436 | 9'd3);

assign or_ln356_fu_4715_p2 = (shl_ln9_reg_6436 | 9'd4);

assign or_ln357_fu_4725_p2 = (shl_ln9_reg_6436 | 9'd5);

assign or_ln358_fu_4765_p2 = (shl_ln9_reg_6436 | 9'd6);

assign or_ln359_fu_4775_p2 = (shl_ln9_reg_6436 | 9'd7);

assign or_ln380_fu_4846_p2 = (shl_ln10_fu_4838_p3 | 9'd1);

assign or_ln381_fu_4897_p2 = (shl_ln10_reg_6488 | 9'd2);

assign or_ln382_fu_4858_p2 = (shl_ln10_fu_4838_p3 | 9'd3);

assign or_ln383_fu_4924_p2 = (shl_ln10_reg_6488 | 9'd4);

assign or_ln384_fu_4875_p2 = (shl_ln10_reg_6488 | 9'd5);

assign or_ln385_fu_4908_p2 = (shl_ln10_reg_6488 | 9'd6);

assign or_ln386_fu_4886_p2 = (shl_ln10_reg_6488 | 9'd7);

assign or_ln_fu_3010_p5 = {{{{trunc_ln193_fu_2992_p1}, {2'd0}}, {trunc_ln193_fu_2992_p1}}, {1'd0}};

assign sext_ln134_fu_2351_p1 = xor_ln132_fu_2339_p2;

assign sext_ln137_fu_2424_p1 = zext_ln133_cast_fu_2400_p3;

assign sext_ln138_fu_2386_p1 = xor_ln132_reg_5350;

assign sext_ln186_fu_2924_p1 = $signed(add_ln186_fu_2919_p2);

assign sext_ln219_fu_3355_p1 = $signed(add_ln219_fu_3350_p2);

assign sext_ln311_fu_4071_p1 = $signed(add_ln311_fu_4066_p2);

assign sext_ln345_fu_4484_p1 = $signed(add_ln345_fu_4479_p2);

assign sext_ln404_fu_5213_p1 = xor_ln402_reg_6683;

assign sext_ln407_fu_5194_p1 = zext_ln403_cast_reg_6668;

assign sext_ln408_fu_5232_p1 = xor_ln402_reg_6683;

assign shl_ln10_fu_4838_p3 = {{trunc_ln379_fu_4834_p1}, {3'd0}};

assign shl_ln1_fu_2793_p3 = {{offset_fu_2789_p1}, {3'd0}};

assign shl_ln2_fu_3062_p3 = {{trunc_ln197_reg_5724}, {3'd0}};

assign shl_ln3_fu_3224_p3 = {{offset_2_fu_3220_p1}, {3'd0}};

assign shl_ln4_fu_3493_p3 = {{trunc_ln226_reg_5864}, {3'd0}};

assign shl_ln5_fu_3655_p3 = {{trunc_ln252_fu_3651_p1}, {3'd0}};

assign shl_ln6_fu_3940_p3 = {{offset_3_fu_3936_p1}, {3'd0}};

assign shl_ln7_fu_4191_p3 = {{trunc_ln321_reg_6201}, {3'd0}};

assign shl_ln8_fu_4353_p3 = {{offset_5_fu_4349_p1}, {3'd0}};

assign shl_ln9_fu_4612_p3 = {{trunc_ln352_reg_6404}, {3'd0}};

assign shl_ln_fu_2683_p3 = {{trunc_ln153_reg_5534}, {3'd0}};

assign tmp_18_fu_4139_p4 = {{tid_7_fu_232[5:3]}};

assign tmp_19_fu_4556_p4 = {{tid_9_fu_272[5:3]}};

assign tmp_s_fu_4566_p3 = {{tmp_19_fu_4556_p4}, {trunc_ln352_fu_4552_p1}};

assign trunc_ln153_fu_2504_p1 = tid_11_reg_5338[5:0];

assign trunc_ln193_fu_2992_p1 = tid_2_fu_212[2:0];

assign trunc_ln197_fu_3037_p1 = tid_2_fu_212[5:0];

assign trunc_ln226_fu_3423_p1 = tid_4_fu_220[5:0];

assign trunc_ln235_fu_3427_p1 = tid_4_fu_220[2:0];

assign trunc_ln252_fu_3651_p1 = tid_5_fu_224[5:0];

assign trunc_ln321_fu_4149_p1 = tid_7_fu_232[5:0];

assign trunc_ln352_fu_4552_p1 = tid_9_fu_272[5:0];

assign trunc_ln379_fu_4834_p1 = tid_10_fu_276[5:0];

assign xor_ln132_fu_2339_p2 = (tid_fu_184 ^ 7'd64);

assign xor_ln150_1_fu_2550_p2 = (bitcast_ln150_2_fu_2546_p1 ^ 64'd9223372036854775808);

assign xor_ln150_2_fu_2597_p2 = (bitcast_ln150_4_fu_2593_p1 ^ 64'd9223372036854775808);

assign xor_ln150_3_fu_2612_p2 = (bitcast_ln150_6_fu_2608_p1 ^ 64'd9223372036854775808);

assign xor_ln150_4_fu_2565_p2 = (bitcast_ln150_8_fu_2561_p1 ^ 64'd9223372036854775808);

assign xor_ln150_5_fu_2581_p2 = (bitcast_ln150_10_fu_2577_p1 ^ 64'd9223372036854775808);

assign xor_ln150_6_fu_2627_p2 = (bitcast_ln150_12_fu_2623_p1 ^ 64'd9223372036854775808);

assign xor_ln150_7_fu_2642_p2 = (bitcast_ln150_14_fu_2638_p1 ^ 64'd9223372036854775808);

assign xor_ln150_8_fu_2657_p2 = (bitcast_ln150_16_fu_2653_p1 ^ 64'd9223372036854775808);

assign xor_ln150_9_fu_2672_p2 = (bitcast_ln150_18_fu_2668_p1 ^ 64'd9223372036854775808);

assign xor_ln150_fu_2535_p2 = (bitcast_ln150_fu_2531_p1 ^ 64'd9223372036854775808);

assign xor_ln271_1_fu_3748_p2 = (bitcast_ln271_2_fu_3744_p1 ^ 64'd9223372036854775808);

assign xor_ln271_2_fu_3863_p2 = (bitcast_ln271_4_fu_3859_p1 ^ 64'd9223372036854775808);

assign xor_ln271_3_fu_3878_p2 = (bitcast_ln271_6_fu_3874_p1 ^ 64'd9223372036854775808);

assign xor_ln271_4_fu_3763_p2 = (bitcast_ln271_8_fu_3759_p1 ^ 64'd9223372036854775808);

assign xor_ln271_5_fu_3779_p2 = (bitcast_ln271_10_fu_3775_p1 ^ 64'd9223372036854775808);

assign xor_ln271_6_fu_3833_p2 = (bitcast_ln271_12_fu_3829_p1 ^ 64'd9223372036854775808);

assign xor_ln271_7_fu_3848_p2 = (bitcast_ln271_14_fu_3844_p1 ^ 64'd9223372036854775808);

assign xor_ln271_8_fu_3892_p2 = (bitcast_ln271_16_fu_3889_p1 ^ 64'd9223372036854775808);

assign xor_ln271_9_fu_3906_p2 = (bitcast_ln271_18_fu_3903_p1 ^ 64'd9223372036854775808);

assign xor_ln271_fu_3733_p2 = (bitcast_ln271_fu_3729_p1 ^ 64'd9223372036854775808);

assign xor_ln398_1_fu_4954_p2 = (bitcast_ln398_2_fu_4950_p1 ^ 64'd9223372036854775808);

assign xor_ln398_2_fu_5001_p2 = (bitcast_ln398_4_fu_4997_p1 ^ 64'd9223372036854775808);

assign xor_ln398_3_fu_5016_p2 = (bitcast_ln398_6_fu_5012_p1 ^ 64'd9223372036854775808);

assign xor_ln398_4_fu_4969_p2 = (bitcast_ln398_8_fu_4965_p1 ^ 64'd9223372036854775808);

assign xor_ln398_5_fu_4985_p2 = (bitcast_ln398_10_fu_4981_p1 ^ 64'd9223372036854775808);

assign xor_ln398_6_fu_5031_p2 = (bitcast_ln398_12_fu_5027_p1 ^ 64'd9223372036854775808);

assign xor_ln398_7_fu_5046_p2 = (bitcast_ln398_14_fu_5042_p1 ^ 64'd9223372036854775808);

assign xor_ln398_8_fu_5125_p2 = (bitcast_ln398_16_fu_5121_p1 ^ 64'd9223372036854775808);

assign xor_ln398_9_fu_5140_p2 = (bitcast_ln398_18_fu_5136_p1 ^ 64'd9223372036854775808);

assign xor_ln398_fu_4939_p2 = (bitcast_ln398_fu_4935_p1 ^ 64'd9223372036854775808);

assign xor_ln402_fu_5151_p2 = (tid_21_reg_6476 ^ 7'd64);

assign zext_ln104_1_fu_4578_p1 = tmp_s_fu_4566_p3;

assign zext_ln104_fu_3467_p1 = add_ln238_fu_3461_p2;

assign zext_ln105_1_fu_4589_p1 = add_ln105_1_fu_4583_p2;

assign zext_ln105_fu_3478_p1 = add_ln105_fu_3472_p2;

assign zext_ln106_1_fu_4640_p1 = add_ln106_1_fu_4635_p2;

assign zext_ln106_fu_3521_p1 = add_ln106_fu_3516_p2;

assign zext_ln107_1_fu_4650_p1 = add_ln107_1_fu_4645_p2;

assign zext_ln107_fu_3531_p1 = add_ln107_fu_3526_p2;

assign zext_ln108_1_fu_4690_p1 = add_ln108_1_fu_4685_p2;

assign zext_ln108_fu_3561_p1 = add_ln108_fu_3556_p2;

assign zext_ln109_1_fu_4700_p1 = add_ln109_1_fu_4695_p2;

assign zext_ln109_fu_3571_p1 = add_ln109_fu_3566_p2;

assign zext_ln110_1_fu_4740_p1 = add_ln110_1_fu_4735_p2;

assign zext_ln110_fu_3601_p1 = add_ln110_fu_3596_p2;

assign zext_ln111_1_fu_4750_p1 = add_ln111_1_fu_4745_p2;

assign zext_ln111_fu_3611_p1 = add_ln111_fu_3606_p2;

assign zext_ln115_1_fu_3441_p1 = hi_1_fu_3431_p4;

assign zext_ln115_fu_3006_p1 = hi_fu_2996_p4;

assign zext_ln128_1_fu_2371_p1 = tid_11_reg_5338;

assign zext_ln128_fu_2462_p1 = tid_11_reg_5338;

assign zext_ln132_fu_2345_p1 = $unsigned(xor_ln132_fu_2339_p2);

assign zext_ln133_cast_fu_2400_p3 = {{1'd1}, {tid_11_reg_5338}};

assign zext_ln133_fu_2407_p1 = $unsigned(zext_ln133_cast_fu_2400_p3);

assign zext_ln134_fu_2355_p1 = $unsigned(sext_ln134_fu_2351_p1);

assign zext_ln135_cast_fu_2473_p3 = {{2'd2}, {tid_11_reg_5338}};

assign zext_ln135_fu_2480_p1 = zext_ln135_cast_fu_2473_p3;

assign zext_ln136_fu_2380_p1 = add_ln136_fu_2374_p2;

assign zext_ln137_fu_2428_p1 = $unsigned(sext_ln137_fu_2424_p1);

assign zext_ln138_fu_2389_p1 = $unsigned(sext_ln138_fu_2386_p1);

assign zext_ln156_fu_2690_p1 = shl_ln_fu_2683_p3;

assign zext_ln157_fu_2702_p1 = or_ln157_fu_2696_p2;

assign zext_ln158_fu_2713_p1 = or_ln158_fu_2708_p2;

assign zext_ln159_fu_2724_p1 = or_ln159_fu_2719_p2;

assign zext_ln160_fu_2735_p1 = or_ln160_fu_2730_p2;

assign zext_ln161_fu_2746_p1 = or_ln161_fu_2741_p2;

assign zext_ln162_fu_2757_p1 = or_ln162_fu_2752_p2;

assign zext_ln163_fu_2768_p1 = or_ln163_fu_2763_p2;

assign zext_ln174_10_fu_4425_p1 = offset_5_reg_6276;

assign zext_ln174_11_fu_4387_p1 = offset_5_reg_6276;

assign zext_ln174_1_fu_2865_p1 = offset_reg_5629;

assign zext_ln174_2_fu_2827_p1 = offset_reg_5629;

assign zext_ln174_3_fu_3384_p1 = offset_2_reg_5784;

assign zext_ln174_4_fu_3296_p1 = offset_2_reg_5784;

assign zext_ln174_5_fu_3258_p1 = offset_2_reg_5784;

assign zext_ln174_6_fu_4100_p1 = offset_3_reg_6121;

assign zext_ln174_7_fu_4012_p1 = offset_3_reg_6121;

assign zext_ln174_8_fu_3974_p1 = offset_3_reg_6121;

assign zext_ln174_9_fu_4513_p1 = offset_5_reg_6276;

assign zext_ln174_fu_2953_p1 = offset_reg_5629;

assign zext_ln181_1_fu_2801_p1 = shl_ln1_fu_2793_p3;

assign zext_ln181_fu_2830_p1 = offset_reg_5629;

assign zext_ln182_1_fu_2812_p1 = or_ln182_fu_2806_p2;

assign zext_ln182_fu_2840_p1 = add_ln182_fu_2834_p2;

assign zext_ln183_1_fu_2850_p1 = or_ln183_fu_2845_p2;

assign zext_ln183_fu_2874_p1 = add_ln183_fu_2868_p2;

assign zext_ln184_1_fu_2860_p1 = or_ln184_fu_2855_p2;

assign zext_ln184_fu_2884_p1 = add_ln184_fu_2879_p2;

assign zext_ln185_1_fu_2894_p1 = or_ln185_fu_2889_p2;

assign zext_ln185_fu_2914_p1 = add_ln185_fu_2909_p2;

assign zext_ln186_1_fu_2928_p1 = $unsigned(sext_ln186_fu_2924_p1);

assign zext_ln186_fu_2904_p1 = or_ln186_fu_2899_p2;

assign zext_ln187_1_fu_2938_p1 = or_ln187_fu_2933_p2;

assign zext_ln187_fu_2961_p1 = add_ln187_fu_2956_p2;

assign zext_ln188_1_fu_2948_p1 = or_ln188_fu_2943_p2;

assign zext_ln188_fu_2972_p1 = add_ln188_fu_2966_p2;

assign zext_ln195_fu_3022_p1 = or_ln_fu_3010_p5;

assign zext_ln197_1_fu_3069_p1 = shl_ln2_fu_3062_p3;

assign zext_ln197_fu_3032_p1 = offset_1_fu_3026_p2;

assign zext_ln198_1_fu_3080_p1 = or_ln198_fu_3074_p2;

assign zext_ln198_fu_3047_p1 = add_ln198_fu_3041_p2;

assign zext_ln199_1_fu_3110_p1 = or_ln199_fu_3105_p2;

assign zext_ln199_fu_3090_p1 = add_ln199_fu_3085_p2;

assign zext_ln200_1_fu_3120_p1 = or_ln200_fu_3115_p2;

assign zext_ln200_fu_3100_p1 = add_ln200_fu_3095_p2;

assign zext_ln201_1_fu_3150_p1 = or_ln201_fu_3145_p2;

assign zext_ln201_fu_3130_p1 = add_ln201_fu_3125_p2;

assign zext_ln202_1_fu_3160_p1 = or_ln202_fu_3155_p2;

assign zext_ln202_fu_3140_p1 = add_ln202_fu_3135_p2;

assign zext_ln203_1_fu_3190_p1 = or_ln203_fu_3185_p2;

assign zext_ln203_fu_3170_p1 = add_ln203_fu_3165_p2;

assign zext_ln204_1_fu_3200_p1 = or_ln204_fu_3195_p2;

assign zext_ln204_fu_3180_p1 = add_ln204_fu_3175_p2;

assign zext_ln214_1_fu_3232_p1 = shl_ln3_fu_3224_p3;

assign zext_ln214_fu_3261_p1 = offset_2_reg_5784;

assign zext_ln215_1_fu_3243_p1 = or_ln215_fu_3237_p2;

assign zext_ln215_fu_3271_p1 = add_ln215_fu_3265_p2;

assign zext_ln216_1_fu_3281_p1 = or_ln216_fu_3276_p2;

assign zext_ln216_fu_3305_p1 = add_ln216_fu_3299_p2;

assign zext_ln217_1_fu_3291_p1 = or_ln217_fu_3286_p2;

assign zext_ln217_fu_3315_p1 = add_ln217_fu_3310_p2;

assign zext_ln218_1_fu_3325_p1 = or_ln218_fu_3320_p2;

assign zext_ln218_fu_3345_p1 = add_ln218_fu_3340_p2;

assign zext_ln219_1_fu_3359_p1 = $unsigned(sext_ln219_fu_3355_p1);

assign zext_ln219_fu_3335_p1 = or_ln219_fu_3330_p2;

assign zext_ln220_1_fu_3369_p1 = or_ln220_fu_3364_p2;

assign zext_ln220_fu_3392_p1 = add_ln220_fu_3387_p2;

assign zext_ln221_1_fu_3379_p1 = or_ln221_fu_3374_p2;

assign zext_ln221_fu_3403_p1 = add_ln221_fu_3397_p2;

assign zext_ln226_fu_3500_p1 = shl_ln4_fu_3493_p3;

assign zext_ln227_fu_3511_p1 = or_ln227_fu_3505_p2;

assign zext_ln228_fu_3541_p1 = or_ln228_fu_3536_p2;

assign zext_ln229_fu_3551_p1 = or_ln229_fu_3546_p2;

assign zext_ln230_fu_3581_p1 = or_ln230_fu_3576_p2;

assign zext_ln231_fu_3591_p1 = or_ln231_fu_3586_p2;

assign zext_ln232_fu_3621_p1 = or_ln232_fu_3616_p2;

assign zext_ln233_fu_3631_p1 = or_ln233_fu_3626_p2;

assign zext_ln238_fu_3457_p1 = or_ln1_fu_3445_p5;

assign zext_ln252_fu_3813_p1 = shl_ln5_reg_5939;

assign zext_ln253_fu_3669_p1 = or_ln253_fu_3663_p2;

assign zext_ln254_fu_3796_p1 = or_ln254_fu_3791_p2;

assign zext_ln255_fu_3681_p1 = or_ln255_fu_3675_p2;

assign zext_ln256_fu_3823_p1 = or_ln256_fu_3818_p2;

assign zext_ln257_fu_3712_p1 = or_ln257_fu_3707_p2;

assign zext_ln258_fu_3807_p1 = or_ln258_fu_3802_p2;

assign zext_ln259_fu_3723_p1 = or_ln259_fu_3718_p2;

assign zext_ln274_fu_3917_p1 = hi_2_reg_5971;

assign zext_ln306_1_fu_3948_p1 = shl_ln6_fu_3940_p3;

assign zext_ln306_fu_3977_p1 = offset_3_reg_6121;

assign zext_ln307_1_fu_3959_p1 = or_ln307_fu_3953_p2;

assign zext_ln307_fu_3987_p1 = add_ln307_fu_3981_p2;

assign zext_ln308_1_fu_3997_p1 = or_ln308_fu_3992_p2;

assign zext_ln308_fu_4021_p1 = add_ln308_fu_4015_p2;

assign zext_ln309_1_fu_4007_p1 = or_ln309_fu_4002_p2;

assign zext_ln309_fu_4031_p1 = add_ln309_fu_4026_p2;

assign zext_ln310_1_fu_4041_p1 = or_ln310_fu_4036_p2;

assign zext_ln310_fu_4061_p1 = add_ln310_fu_4056_p2;

assign zext_ln311_1_fu_4075_p1 = $unsigned(sext_ln311_fu_4071_p1);

assign zext_ln311_fu_4051_p1 = or_ln311_fu_4046_p2;

assign zext_ln312_1_fu_4085_p1 = or_ln312_fu_4080_p2;

assign zext_ln312_fu_4108_p1 = add_ln312_fu_4103_p2;

assign zext_ln313_1_fu_4095_p1 = or_ln313_fu_4090_p2;

assign zext_ln313_fu_4119_p1 = add_ln313_fu_4113_p2;

assign zext_ln321_fu_4161_p1 = offset_4_fu_4153_p3;

assign zext_ln323_1_fu_4198_p1 = shl_ln7_fu_4191_p3;

assign zext_ln323_fu_4165_p1 = offset_4_fu_4153_p3;

assign zext_ln324_1_fu_4209_p1 = or_ln324_fu_4203_p2;

assign zext_ln324_fu_4176_p1 = add_ln324_fu_4170_p2;

assign zext_ln325_1_fu_4239_p1 = or_ln325_fu_4234_p2;

assign zext_ln325_fu_4219_p1 = add_ln325_fu_4214_p2;

assign zext_ln326_1_fu_4249_p1 = or_ln326_fu_4244_p2;

assign zext_ln326_fu_4229_p1 = add_ln326_fu_4224_p2;

assign zext_ln327_1_fu_4279_p1 = or_ln327_fu_4274_p2;

assign zext_ln327_fu_4259_p1 = add_ln327_fu_4254_p2;

assign zext_ln328_1_fu_4289_p1 = or_ln328_fu_4284_p2;

assign zext_ln328_fu_4269_p1 = add_ln328_fu_4264_p2;

assign zext_ln329_1_fu_4319_p1 = or_ln329_fu_4314_p2;

assign zext_ln329_fu_4299_p1 = add_ln329_fu_4294_p2;

assign zext_ln330_1_fu_4329_p1 = or_ln330_fu_4324_p2;

assign zext_ln330_fu_4309_p1 = add_ln330_fu_4304_p2;

assign zext_ln340_1_fu_4361_p1 = shl_ln8_fu_4353_p3;

assign zext_ln340_fu_4390_p1 = offset_5_reg_6276;

assign zext_ln341_1_fu_4372_p1 = or_ln341_fu_4366_p2;

assign zext_ln341_fu_4400_p1 = add_ln341_fu_4394_p2;

assign zext_ln342_1_fu_4410_p1 = or_ln342_fu_4405_p2;

assign zext_ln342_fu_4434_p1 = add_ln342_fu_4428_p2;

assign zext_ln343_1_fu_4420_p1 = or_ln343_fu_4415_p2;

assign zext_ln343_fu_4444_p1 = add_ln343_fu_4439_p2;

assign zext_ln344_1_fu_4454_p1 = or_ln344_fu_4449_p2;

assign zext_ln344_fu_4474_p1 = add_ln344_fu_4469_p2;

assign zext_ln345_1_fu_4488_p1 = $unsigned(sext_ln345_fu_4484_p1);

assign zext_ln345_fu_4464_p1 = or_ln345_fu_4459_p2;

assign zext_ln346_1_fu_4498_p1 = or_ln346_fu_4493_p2;

assign zext_ln346_fu_4521_p1 = add_ln346_fu_4516_p2;

assign zext_ln347_1_fu_4508_p1 = or_ln347_fu_4503_p2;

assign zext_ln347_fu_4532_p1 = add_ln347_fu_4526_p2;

assign zext_ln352_fu_4619_p1 = shl_ln9_fu_4612_p3;

assign zext_ln353_fu_4630_p1 = or_ln353_fu_4624_p2;

assign zext_ln354_fu_4670_p1 = or_ln354_fu_4665_p2;

assign zext_ln355_fu_4680_p1 = or_ln355_fu_4675_p2;

assign zext_ln356_fu_4720_p1 = or_ln356_fu_4715_p2;

assign zext_ln357_fu_4730_p1 = or_ln357_fu_4725_p2;

assign zext_ln358_fu_4770_p1 = or_ln358_fu_4765_p2;

assign zext_ln359_fu_4780_p1 = or_ln359_fu_4775_p2;

assign zext_ln364_fu_4574_p1 = tmp_s_fu_4566_p3;

assign zext_ln376_1_fu_5118_p1 = tid_21_reg_6476;

assign zext_ln376_fu_5057_p1 = tid_21_reg_6476;

assign zext_ln379_fu_4919_p1 = shl_ln10_reg_6488;

assign zext_ln380_fu_4852_p1 = or_ln380_fu_4846_p2;

assign zext_ln381_fu_4902_p1 = or_ln381_fu_4897_p2;

assign zext_ln382_fu_4864_p1 = or_ln382_fu_4858_p2;

assign zext_ln383_fu_4929_p1 = or_ln383_fu_4924_p2;

assign zext_ln384_fu_4880_p1 = or_ln384_fu_4875_p2;

assign zext_ln385_fu_4913_p1 = or_ln385_fu_4908_p2;

assign zext_ln386_fu_4891_p1 = or_ln386_fu_4886_p2;

assign zext_ln402_fu_5156_p1 = $unsigned(xor_ln402_fu_5151_p2);

assign zext_ln403_cast_fu_5095_p3 = {{1'd1}, {tid_21_reg_6476}};

assign zext_ln403_fu_5102_p1 = $unsigned(zext_ln403_cast_fu_5095_p3);

assign zext_ln404_fu_5216_p1 = $unsigned(sext_ln404_fu_5213_p1);

assign zext_ln405_cast_fu_5067_p3 = {{2'd2}, {tid_21_reg_6476}};

assign zext_ln405_fu_5074_p1 = zext_ln405_cast_fu_5067_p3;

assign zext_ln406_fu_5173_p1 = add_ln406_fu_5167_p2;

assign zext_ln407_fu_5197_p1 = $unsigned(sext_ln407_fu_5194_p1);

assign zext_ln408_fu_5235_p1 = $unsigned(sext_ln408_fu_5232_p1);

always @ (posedge ap_clk) begin
    shl_ln_reg_5616[2:0] <= 3'b000;
    shl_ln1_reg_5637[2:0] <= 3'b000;
    zext_ln174_2_reg_5664[8:6] <= 3'b000;
    zext_ln174_1_reg_5680[7:6] <= 2'b00;
    shl_ln2_reg_5741[2:0] <= 3'b000;
    shl_ln3_reg_5792[2:0] <= 3'b000;
    zext_ln174_5_reg_5819[8:6] <= 3'b000;
    zext_ln174_4_reg_5835[7:6] <= 2'b00;
    shl_ln4_reg_5896[2:0] <= 3'b000;
    shl_ln5_reg_5939[2:0] <= 3'b000;
    DATA_x_addr_25_reg_5949[2:0] <= 3'b001;
    DATA_x_addr_27_reg_5955[2:0] <= 3'b011;
    DATA_y_addr_25_reg_5960[2:0] <= 3'b001;
    DATA_y_addr_27_reg_5966[2:0] <= 3'b011;
    DATA_x_addr_29_reg_5983[2:0] <= 3'b101;
    DATA_x_addr_31_reg_5989[2:0] <= 3'b111;
    DATA_y_addr_29_reg_5994[2:0] <= 3'b101;
    DATA_y_addr_31_reg_6000[2:0] <= 3'b111;
    DATA_x_addr_26_reg_6027[2:0] <= 3'b010;
    DATA_x_addr_30_reg_6032[2:0] <= 3'b110;
    DATA_y_addr_26_reg_6038[2:0] <= 3'b010;
    DATA_y_addr_30_reg_6043[2:0] <= 3'b110;
    DATA_x_addr_24_reg_6049[2:0] <= 3'b000;
    DATA_x_addr_28_reg_6054[2:0] <= 3'b100;
    DATA_y_addr_24_reg_6060[2:0] <= 3'b000;
    DATA_y_addr_28_reg_6065[2:0] <= 3'b100;
    zext_ln274_reg_6113[5:3] <= 3'b000;
    shl_ln6_reg_6129[2:0] <= 3'b000;
    zext_ln174_8_reg_6156[8:6] <= 3'b000;
    zext_ln174_7_reg_6172[7:6] <= 2'b00;
    zext_ln321_reg_6206[9] <= 1'b0;
    shl_ln7_reg_6233[2:0] <= 3'b000;
    shl_ln8_reg_6284[2:0] <= 3'b000;
    zext_ln174_11_reg_6359[8:6] <= 3'b000;
    zext_ln174_10_reg_6375[7:6] <= 2'b00;
    zext_ln364_reg_6409[9] <= 1'b0;
    shl_ln9_reg_6436[2:0] <= 3'b000;
    shl_ln10_reg_6488[2:0] <= 3'b000;
    zext_ln403_cast_reg_6668[7] <= 1'b1;
end

endmodule //fft1D_512
