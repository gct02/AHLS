-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fft1D_512_scaled_fixed2ieee_63_1_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_val : IN STD_LOGIC_VECTOR (62 downto 0);
    prescale : IN STD_LOGIC_VECTOR (11 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of fft1D_512_scaled_fixed2ieee_63_1_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv17_10000 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_3FF : STD_LOGIC_VECTOR (11 downto 0) := "001111111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal trunc_ln408_fu_168_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln408_reg_422 : STD_LOGIC_VECTOR (14 downto 0);
    signal out_bits_3_fu_184_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_bits_3_reg_436 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln433_fu_208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln433_reg_453 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal targetBlock_reg_458 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_ap_start : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_ap_done : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_ap_idle : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_ap_ready : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_out_bits_2_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_out_bits_2_1_out_ap_vld : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_out_bits_1_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_out_bits_1_1_out_ap_vld : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_out_bits_0_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_out_bits_0_1_out_ap_vld : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_ap_start : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_ap_done : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_ap_idle : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_ap_ready : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_out_bits_2_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_out_bits_2_2_out_ap_vld : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_out_bits_1_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_out_bits_1_2_out_ap_vld : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_out_bits_0_21_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_out_bits_0_21_out_ap_vld : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_ap_start : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_ap_done : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_ap_idle : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_ap_ready : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_c_2_05_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_c_2_05_out_ap_vld : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_c_1_04_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_c_1_04_out_ap_vld : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_c_0_03_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_c_0_03_out_ap_vld : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_c_3_02_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_c_3_02_out_ap_vld : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_ap_start : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_ap_done : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_ap_idle : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_ap_ready : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_shift_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_shift_out_ap_vld : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_in_shift_out : STD_LOGIC_VECTOR (61 downto 0);
    signal grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_in_shift_out_ap_vld : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_shift_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_shift_1_out_ap_vld : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_in_shift_1_out : STD_LOGIC_VECTOR (61 downto 0);
    signal grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_in_shift_1_out_ap_vld : STD_LOGIC;
    signal grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_ap_start_reg : STD_LOGIC := '0';
    signal out_bits_2_1_loc_fu_96 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal out_bits_1_1_loc_fu_92 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_bits_0_1_loc_fu_88 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_ap_start_reg : STD_LOGIC := '0';
    signal shift_loc_fu_56 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_shift_loc_fu_52 : STD_LOGIC_VECTOR (61 downto 0);
    signal shift_1_loc_fu_48 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_shift_1_loc_fu_44 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal sub_ln432_fu_232_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln432_fu_238_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln421_fu_225_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newexp_fu_242_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_248_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_261_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_15_fu_271_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal or_ln433_fu_256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln421_1_fu_281_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal empty_fu_288_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal out_exp_fu_300_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal significand_fu_292_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal t_fu_308_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln497_fu_318_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component fft1D_512_scaled_fixed2ieee_63_1_Pipeline_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_bits_2_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_bits_2_1_out_ap_vld : OUT STD_LOGIC;
        out_bits_1_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_bits_1_1_out_ap_vld : OUT STD_LOGIC;
        out_bits_0_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_bits_0_1_out_ap_vld : OUT STD_LOGIC );
    end component;


    component fft1D_512_scaled_fixed2ieee_63_1_Pipeline_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_bits_2_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        out_bits_1_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        out_bits_0_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        in_val : IN STD_LOGIC_VECTOR (62 downto 0);
        out_bits_2_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_bits_2_2_out_ap_vld : OUT STD_LOGIC;
        out_bits_1_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_bits_1_2_out_ap_vld : OUT STD_LOGIC;
        out_bits_0_21_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_bits_0_21_out_ap_vld : OUT STD_LOGIC );
    end component;


    component fft1D_512_scaled_fixed2ieee_63_1_Pipeline_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_bits_0_21_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        out_bits_1_2_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        out_bits_2_2_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        out_bits_3 : IN STD_LOGIC_VECTOR (31 downto 0);
        c_2_05_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        c_2_05_out_ap_vld : OUT STD_LOGIC;
        c_1_04_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        c_1_04_out_ap_vld : OUT STD_LOGIC;
        c_0_03_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        c_0_03_out_ap_vld : OUT STD_LOGIC;
        c_3_02_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        c_3_02_out_ap_vld : OUT STD_LOGIC );
    end component;


    component fft1D_512_scaled_fixed2ieee_63_1_Pipeline_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_val : IN STD_LOGIC_VECTOR (62 downto 0);
        c_0_03_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        c_1_04_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        c_2_05_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        c_3_02_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        shift_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        shift_out_ap_vld : OUT STD_LOGIC;
        in_shift_out : OUT STD_LOGIC_VECTOR (61 downto 0);
        in_shift_out_ap_vld : OUT STD_LOGIC;
        shift_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        shift_1_out_ap_vld : OUT STD_LOGIC;
        in_shift_1_out : OUT STD_LOGIC_VECTOR (61 downto 0);
        in_shift_1_out_ap_vld : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112 : component fft1D_512_scaled_fixed2ieee_63_1_Pipeline_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_ap_start,
        ap_done => grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_ap_done,
        ap_idle => grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_ap_idle,
        ap_ready => grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_ap_ready,
        out_bits_2_1_out => grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_out_bits_2_1_out,
        out_bits_2_1_out_ap_vld => grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_out_bits_2_1_out_ap_vld,
        out_bits_1_1_out => grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_out_bits_1_1_out,
        out_bits_1_1_out_ap_vld => grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_out_bits_1_1_out_ap_vld,
        out_bits_0_1_out => grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_out_bits_0_1_out,
        out_bits_0_1_out_ap_vld => grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_out_bits_0_1_out_ap_vld);

    grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119 : component fft1D_512_scaled_fixed2ieee_63_1_Pipeline_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_ap_start,
        ap_done => grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_ap_done,
        ap_idle => grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_ap_idle,
        ap_ready => grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_ap_ready,
        out_bits_2_1_reload => out_bits_2_1_loc_fu_96,
        out_bits_1_1_reload => out_bits_1_1_loc_fu_92,
        out_bits_0_1_reload => out_bits_0_1_loc_fu_88,
        in_val => in_val,
        out_bits_2_2_out => grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_out_bits_2_2_out,
        out_bits_2_2_out_ap_vld => grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_out_bits_2_2_out_ap_vld,
        out_bits_1_2_out => grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_out_bits_1_2_out,
        out_bits_1_2_out_ap_vld => grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_out_bits_1_2_out_ap_vld,
        out_bits_0_21_out => grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_out_bits_0_21_out,
        out_bits_0_21_out_ap_vld => grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_out_bits_0_21_out_ap_vld);

    grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131 : component fft1D_512_scaled_fixed2ieee_63_1_Pipeline_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_ap_start,
        ap_done => grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_ap_done,
        ap_idle => grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_ap_idle,
        ap_ready => grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_ap_ready,
        out_bits_0_21_reload => grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_out_bits_0_21_out,
        out_bits_1_2_reload => grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_out_bits_1_2_out,
        out_bits_2_2_reload => grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_out_bits_2_2_out,
        out_bits_3 => out_bits_3_reg_436,
        c_2_05_out => grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_c_2_05_out,
        c_2_05_out_ap_vld => grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_c_2_05_out_ap_vld,
        c_1_04_out => grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_c_1_04_out,
        c_1_04_out_ap_vld => grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_c_1_04_out_ap_vld,
        c_0_03_out => grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_c_0_03_out,
        c_0_03_out_ap_vld => grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_c_0_03_out_ap_vld,
        c_3_02_out => grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_c_3_02_out,
        c_3_02_out_ap_vld => grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_c_3_02_out_ap_vld);

    grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143 : component fft1D_512_scaled_fixed2ieee_63_1_Pipeline_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_ap_start,
        ap_done => grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_ap_done,
        ap_idle => grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_ap_idle,
        ap_ready => grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_ap_ready,
        in_val => in_val,
        c_0_03_reload => grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_c_0_03_out,
        c_1_04_reload => grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_c_1_04_out,
        c_2_05_reload => grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_c_2_05_out,
        c_3_02_reload => grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_c_3_02_out,
        shift_out => grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_shift_out,
        shift_out_ap_vld => grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_shift_out_ap_vld,
        in_shift_out => grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_in_shift_out,
        in_shift_out_ap_vld => grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_in_shift_out_ap_vld,
        shift_1_out => grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_shift_1_out,
        shift_1_out_ap_vld => grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_shift_1_out_ap_vld,
        in_shift_1_out => grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_in_shift_1_out,
        in_shift_1_out_ap_vld => grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_in_shift_1_out_ap_vld,
        ap_return => grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg(0) <= '0';
                ap_return_preg(1) <= '0';
                ap_return_preg(2) <= '0';
                ap_return_preg(3) <= '0';
                ap_return_preg(4) <= '0';
                ap_return_preg(5) <= '0';
                ap_return_preg(6) <= '0';
                ap_return_preg(7) <= '0';
                ap_return_preg(8) <= '0';
                ap_return_preg(9) <= '0';
                ap_return_preg(10) <= '0';
                ap_return_preg(11) <= '0';
                ap_return_preg(12) <= '0';
                ap_return_preg(13) <= '0';
                ap_return_preg(14) <= '0';
                ap_return_preg(15) <= '0';
                ap_return_preg(16) <= '0';
                ap_return_preg(17) <= '0';
                ap_return_preg(18) <= '0';
                ap_return_preg(19) <= '0';
                ap_return_preg(20) <= '0';
                ap_return_preg(21) <= '0';
                ap_return_preg(22) <= '0';
                ap_return_preg(23) <= '0';
                ap_return_preg(24) <= '0';
                ap_return_preg(25) <= '0';
                ap_return_preg(26) <= '0';
                ap_return_preg(27) <= '0';
                ap_return_preg(28) <= '0';
                ap_return_preg(29) <= '0';
                ap_return_preg(30) <= '0';
                ap_return_preg(31) <= '0';
                ap_return_preg(32) <= '0';
                ap_return_preg(33) <= '0';
                ap_return_preg(34) <= '0';
                ap_return_preg(35) <= '0';
                ap_return_preg(36) <= '0';
                ap_return_preg(37) <= '0';
                ap_return_preg(38) <= '0';
                ap_return_preg(39) <= '0';
                ap_return_preg(40) <= '0';
                ap_return_preg(41) <= '0';
                ap_return_preg(42) <= '0';
                ap_return_preg(43) <= '0';
                ap_return_preg(44) <= '0';
                ap_return_preg(45) <= '0';
                ap_return_preg(46) <= '0';
                ap_return_preg(47) <= '0';
                ap_return_preg(48) <= '0';
                ap_return_preg(49) <= '0';
                ap_return_preg(50) <= '0';
                ap_return_preg(51) <= '0';
                ap_return_preg(52) <= '0';
                ap_return_preg(53) <= '0';
                ap_return_preg(54) <= '0';
                ap_return_preg(55) <= '0';
                ap_return_preg(56) <= '0';
                ap_return_preg(57) <= '0';
                ap_return_preg(58) <= '0';
                ap_return_preg(59) <= '0';
                ap_return_preg(60) <= '0';
                ap_return_preg(61) <= '0';
                ap_return_preg(62) <= '0';
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                                        ap_return_preg(62 downto 0) <= bitcast_ln497_fu_318_p1(62 downto 0);
                end if; 
            end if;
        end if;
    end process;


    grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_ap_ready = ap_const_logic_1)) then 
                    grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_ap_ready = ap_const_logic_1)) then 
                    grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_ap_ready = ap_const_logic_1)) then 
                    grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_ap_ready = ap_const_logic_1)) then 
                    grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                icmp_ln433_reg_453 <= icmp_ln433_fu_208_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_in_shift_1_out_ap_vld = ap_const_logic_1))) then
                in_shift_1_loc_fu_44 <= grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_in_shift_1_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_in_shift_out_ap_vld = ap_const_logic_1))) then
                in_shift_loc_fu_52 <= grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_in_shift_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_out_bits_0_1_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                out_bits_0_1_loc_fu_88 <= grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_out_bits_0_1_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_out_bits_1_1_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                out_bits_1_1_loc_fu_92 <= grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_out_bits_1_1_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_out_bits_2_1_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                out_bits_2_1_loc_fu_96 <= grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_out_bits_2_1_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                    out_bits_3_reg_436(31 downto 17) <= out_bits_3_fu_184_p3(31 downto 17);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_shift_1_out_ap_vld = ap_const_logic_1))) then
                shift_1_loc_fu_48 <= grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_shift_1_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_shift_out_ap_vld = ap_const_logic_1))) then
                shift_loc_fu_56 <= grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_shift_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                targetBlock_reg_458 <= grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                trunc_ln408_reg_422 <= trunc_ln408_fu_168_p1;
            end if;
        end if;
    end process;
    out_bits_3_reg_436(16 downto 0) <= "10000000000000000";
    ap_return_preg(63) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state8, grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_ap_done, grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_ap_done, grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_ap_done, grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_ap_done)
    begin
        if ((grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_ap_done)
    begin
        if ((grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_ap_done)
    begin
        if ((grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_ap_done)
    begin
        if ((grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_CS_fsm_state9, bitcast_ln497_fu_318_p1, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_return <= bitcast_ln497_fu_318_p1;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    bitcast_ln497_fu_318_p1 <= t_fu_308_p4;
    empty_fu_288_p1 <= newexp_fu_242_p2(11 - 1 downto 0);
    grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_ap_start <= grp_scaled_fixed2ieee_63_1_Pipeline_1_fu_112_ap_start_reg;
    grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_ap_start <= grp_scaled_fixed2ieee_63_1_Pipeline_2_fu_119_ap_start_reg;
    grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_ap_start <= grp_scaled_fixed2ieee_63_1_Pipeline_3_fu_131_ap_start_reg;
    grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_ap_start <= grp_scaled_fixed2ieee_63_1_Pipeline_4_fu_143_ap_start_reg;
    icmp_ln433_fu_208_p2 <= "1" when (in_val = ap_const_lv63_0) else "0";
    newexp_fu_242_p2 <= std_logic_vector(signed(sext_ln432_fu_238_p1) - signed(select_ln421_fu_225_p3));
    or_ln433_fu_256_p2 <= (tmp_fu_248_p3 or icmp_ln433_reg_453);
    out_bits_3_fu_184_p3 <= (trunc_ln408_reg_422 & ap_const_lv17_10000);
    out_exp_fu_300_p3 <= 
        ap_const_lv11_0 when (or_ln433_fu_256_p2(0) = '1') else 
        empty_fu_288_p1;
    select_ln421_1_fu_281_p3 <= 
        tmp_14_fu_261_p4 when (targetBlock_reg_458(0) = '1') else 
        tmp_15_fu_271_p4;
    select_ln421_fu_225_p3 <= 
        shift_loc_fu_56 when (targetBlock_reg_458(0) = '1') else 
        shift_1_loc_fu_48;
        sext_ln432_fu_238_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln432_fu_232_p2),32));

    significand_fu_292_p3 <= 
        ap_const_lv52_0 when (or_ln433_fu_256_p2(0) = '1') else 
        select_ln421_1_fu_281_p3;
    sub_ln432_fu_232_p2 <= std_logic_vector(unsigned(ap_const_lv12_3FF) - unsigned(prescale));
    t_fu_308_p4 <= ((ap_const_lv1_0 & out_exp_fu_300_p3) & significand_fu_292_p3);
    tmp_14_fu_261_p4 <= in_shift_loc_fu_52(61 downto 10);
    tmp_15_fu_271_p4 <= in_shift_1_loc_fu_44(61 downto 10);
    tmp_fu_248_p3 <= newexp_fu_242_p2(31 downto 31);
    trunc_ln408_fu_168_p1 <= in_val(15 - 1 downto 0);
end behav;
