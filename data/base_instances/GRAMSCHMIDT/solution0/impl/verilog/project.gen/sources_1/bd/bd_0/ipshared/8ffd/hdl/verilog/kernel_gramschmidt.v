// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="kernel_gramschmidt_kernel_gramschmidt,hls_ip_2023_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu50-fsvh2104-2-e,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.473000,HLS_SYN_LAT=1416765441,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1787,HLS_SYN_LUT=1985,HLS_VERSION=2023_2}" *)

module kernel_gramschmidt (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ni,
        nj,
        A_address0,
        A_ce0,
        A_we0,
        A_d0,
        A_q0,
        R_address0,
        R_ce0,
        R_we0,
        R_d0,
        Q_address0,
        Q_ce0,
        Q_we0,
        Q_d0,
        Q_q0
);

parameter    ap_ST_fsm_state1 = 63'd1;
parameter    ap_ST_fsm_state2 = 63'd2;
parameter    ap_ST_fsm_state3 = 63'd4;
parameter    ap_ST_fsm_state4 = 63'd8;
parameter    ap_ST_fsm_state5 = 63'd16;
parameter    ap_ST_fsm_state6 = 63'd32;
parameter    ap_ST_fsm_state7 = 63'd64;
parameter    ap_ST_fsm_state8 = 63'd128;
parameter    ap_ST_fsm_state9 = 63'd256;
parameter    ap_ST_fsm_state10 = 63'd512;
parameter    ap_ST_fsm_state11 = 63'd1024;
parameter    ap_ST_fsm_state12 = 63'd2048;
parameter    ap_ST_fsm_state13 = 63'd4096;
parameter    ap_ST_fsm_state14 = 63'd8192;
parameter    ap_ST_fsm_state15 = 63'd16384;
parameter    ap_ST_fsm_state16 = 63'd32768;
parameter    ap_ST_fsm_state17 = 63'd65536;
parameter    ap_ST_fsm_state18 = 63'd131072;
parameter    ap_ST_fsm_state19 = 63'd262144;
parameter    ap_ST_fsm_state20 = 63'd524288;
parameter    ap_ST_fsm_state21 = 63'd1048576;
parameter    ap_ST_fsm_state22 = 63'd2097152;
parameter    ap_ST_fsm_state23 = 63'd4194304;
parameter    ap_ST_fsm_state24 = 63'd8388608;
parameter    ap_ST_fsm_state25 = 63'd16777216;
parameter    ap_ST_fsm_state26 = 63'd33554432;
parameter    ap_ST_fsm_state27 = 63'd67108864;
parameter    ap_ST_fsm_state28 = 63'd134217728;
parameter    ap_ST_fsm_state29 = 63'd268435456;
parameter    ap_ST_fsm_state30 = 63'd536870912;
parameter    ap_ST_fsm_state31 = 63'd1073741824;
parameter    ap_ST_fsm_state32 = 63'd2147483648;
parameter    ap_ST_fsm_state33 = 63'd4294967296;
parameter    ap_ST_fsm_state34 = 63'd8589934592;
parameter    ap_ST_fsm_state35 = 63'd17179869184;
parameter    ap_ST_fsm_state36 = 63'd34359738368;
parameter    ap_ST_fsm_state37 = 63'd68719476736;
parameter    ap_ST_fsm_state38 = 63'd137438953472;
parameter    ap_ST_fsm_state39 = 63'd274877906944;
parameter    ap_ST_fsm_state40 = 63'd549755813888;
parameter    ap_ST_fsm_state41 = 63'd1099511627776;
parameter    ap_ST_fsm_state42 = 63'd2199023255552;
parameter    ap_ST_fsm_state43 = 63'd4398046511104;
parameter    ap_ST_fsm_state44 = 63'd8796093022208;
parameter    ap_ST_fsm_state45 = 63'd17592186044416;
parameter    ap_ST_fsm_state46 = 63'd35184372088832;
parameter    ap_ST_fsm_state47 = 63'd70368744177664;
parameter    ap_ST_fsm_state48 = 63'd140737488355328;
parameter    ap_ST_fsm_state49 = 63'd281474976710656;
parameter    ap_ST_fsm_state50 = 63'd562949953421312;
parameter    ap_ST_fsm_state51 = 63'd1125899906842624;
parameter    ap_ST_fsm_state52 = 63'd2251799813685248;
parameter    ap_ST_fsm_state53 = 63'd4503599627370496;
parameter    ap_ST_fsm_state54 = 63'd9007199254740992;
parameter    ap_ST_fsm_state55 = 63'd18014398509481984;
parameter    ap_ST_fsm_state56 = 63'd36028797018963968;
parameter    ap_ST_fsm_state57 = 63'd72057594037927936;
parameter    ap_ST_fsm_state58 = 63'd144115188075855872;
parameter    ap_ST_fsm_state59 = 63'd288230376151711744;
parameter    ap_ST_fsm_state60 = 63'd576460752303423488;
parameter    ap_ST_fsm_state61 = 63'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 63'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 63'd4611686018427387904;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] ni;
input  [31:0] nj;
output  [17:0] A_address0;
output   A_ce0;
output   A_we0;
output  [63:0] A_d0;
input  [63:0] A_q0;
output  [17:0] R_address0;
output   R_ce0;
output   R_we0;
output  [63:0] R_d0;
output  [17:0] Q_address0;
output   Q_ce0;
output   Q_we0;
output  [63:0] Q_d0;
input  [63:0] Q_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[17:0] A_address0;
reg A_ce0;
reg A_we0;
reg[17:0] R_address0;
reg R_ce0;
reg R_we0;
reg[63:0] R_d0;
reg[17:0] Q_address0;
reg Q_ce0;
reg Q_we0;

(* fsm_encoding = "none" *) reg   [62:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] reg_293;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state58;
wire   [63:0] grp_fu_275_p2;
reg   [63:0] reg_297;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state48;
reg   [63:0] reg_302;
wire    ap_CS_fsm_state54;
wire   [18:0] add_ln100_fu_332_p2;
reg   [18:0] add_ln100_reg_654;
wire    ap_CS_fsm_state2;
wire   [17:0] trunc_ln94_fu_338_p1;
reg   [17:0] trunc_ln94_reg_659;
wire   [17:0] tmp_1_fu_342_p3;
reg   [17:0] tmp_1_reg_667;
reg   [17:0] R_addr_reg_672;
wire   [30:0] trunc_ln100_1_fu_361_p1;
reg   [30:0] trunc_ln100_1_reg_677;
wire   [30:0] add_ln89_fu_378_p2;
reg   [30:0] add_ln89_reg_685;
wire    ap_CS_fsm_state3;
wire   [63:0] bitcast_ln92_fu_402_p1;
wire    ap_CS_fsm_state5;
wire   [63:0] grp_fu_269_p2;
wire    ap_CS_fsm_state12;
wire   [63:0] grp_fu_284_p2;
reg   [63:0] tmp_reg_706;
wire    ap_CS_fsm_state23;
wire   [18:0] add_ln95_fu_425_p2;
reg   [18:0] add_ln95_reg_715;
wire    ap_CS_fsm_state25;
wire   [63:0] zext_ln98_fu_444_p1;
reg   [63:0] zext_ln98_reg_720;
wire    ap_CS_fsm_state27;
wire   [63:0] grp_fu_280_p2;
reg   [63:0] div_reg_735;
wire    ap_CS_fsm_state40;
wire   [17:0] trunc_ln103_fu_467_p1;
reg   [17:0] trunc_ln103_reg_743;
wire    ap_CS_fsm_state42;
reg   [17:0] R_addr_1_reg_749;
wire   [18:0] add_ln104_fu_509_p2;
reg   [18:0] add_ln104_reg_757;
wire    ap_CS_fsm_state43;
wire   [63:0] bitcast_ln107_fu_543_p1;
wire    ap_CS_fsm_state45;
wire   [63:0] bitcast_ln107_1_fu_548_p1;
wire    ap_CS_fsm_state52;
wire   [63:0] bitcast_ln107_2_fu_553_p1;
wire   [18:0] add_ln109_fu_570_p2;
reg   [18:0] add_ln109_reg_795;
wire    ap_CS_fsm_state53;
wire   [17:0] add_ln112_fu_584_p2;
reg   [17:0] add_ln112_reg_800;
wire   [30:0] add_ln100_1_fu_599_p2;
wire   [63:0] bitcast_ln112_1_fu_605_p1;
wire    ap_CS_fsm_state55;
reg   [17:0] A_addr_3_reg_820;
wire    ap_CS_fsm_state57;
wire   [63:0] bitcast_ln112_fu_614_p1;
wire    ap_CS_fsm_state59;
reg   [63:0] sub_reg_830;
wire    ap_CS_fsm_state62;
reg   [30:0] i_reg_179;
wire   [0:0] icmp_ln100_fu_327_p2;
reg   [63:0] nrm_reg_190;
reg   [18:0] i_1_reg_202;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state24;
reg   [30:0] j_reg_213;
wire   [0:0] icmp_ln109_fu_565_p2;
wire   [0:0] icmp_ln95_fu_420_p2;
reg   [63:0] storemerge_reg_223;
wire   [0:0] icmp_ln100_1_fu_462_p2;
reg   [18:0] i_2_reg_235;
reg   [63:0] empty_reg_246;
reg   [18:0] i_3_reg_258;
wire    ap_CS_fsm_state63;
wire   [0:0] icmp_ln104_fu_504_p2;
wire   [63:0] zext_ln94_fu_356_p1;
wire   [63:0] zext_ln92_fu_397_p1;
wire   [0:0] icmp_ln89_fu_373_p2;
wire   [63:0] zext_ln103_fu_476_p1;
wire   [63:0] zext_ln107_fu_528_p1;
wire   [63:0] zext_ln107_1_fu_538_p1;
wire   [63:0] zext_ln112_1_fu_594_p1;
wire   [63:0] zext_ln112_fu_610_p1;
reg   [31:0] indvars_iv40_fu_74;
wire   [31:0] add_ln85_fu_481_p2;
reg   [18:0] k_fu_78;
wire   [63:0] bitcast_ln94_fu_408_p1;
reg   [63:0] grp_fu_269_p0;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state49;
reg   [63:0] grp_fu_275_p0;
reg   [63:0] grp_fu_275_p1;
wire   [63:0] grp_fu_280_p0;
wire   [31:0] zext_ln100_fu_323_p1;
wire   [8:0] trunc_ln100_fu_319_p1;
wire   [17:0] add_ln94_fu_350_p2;
wire   [31:0] zext_ln89_fu_369_p1;
wire   [8:0] trunc_ln89_fu_365_p1;
wire   [17:0] tmp_2_fu_384_p3;
wire   [17:0] add_ln92_fu_392_p2;
wire   [31:0] zext_ln95_fu_416_p1;
wire   [8:0] trunc_ln95_fu_412_p1;
wire   [17:0] tmp_3_fu_431_p3;
wire   [17:0] add_ln98_fu_439_p2;
wire   [31:0] zext_ln100_1_fu_458_p1;
wire   [17:0] add_ln103_fu_471_p2;
wire   [31:0] zext_ln104_fu_500_p1;
wire   [8:0] trunc_ln104_fu_496_p1;
wire   [17:0] tmp_4_fu_515_p3;
wire   [17:0] add_ln107_fu_523_p2;
wire   [17:0] add_ln107_1_fu_533_p2;
wire   [31:0] zext_ln109_fu_561_p1;
wire   [8:0] trunc_ln109_fu_557_p1;
wire   [17:0] tmp_5_fu_576_p3;
wire   [17:0] add_ln112_1_fu_589_p2;
reg   [1:0] grp_fu_269_opcode;
reg   [62:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 63'd1;
#0 indvars_iv40_fu_74 = 32'd0;
#0 k_fu_78 = 19'd0;
end

kernel_gramschmidt_dadddsub_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_4_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_269_p0),
    .din1(reg_297),
    .opcode(grp_fu_269_opcode),
    .ce(1'b1),
    .dout(grp_fu_269_p2)
);

kernel_gramschmidt_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_275_p0),
    .din1(grp_fu_275_p1),
    .ce(1'b1),
    .dout(grp_fu_275_p2)
);

kernel_gramschmidt_ddiv_64ns_64ns_64_14_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_14_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_280_p0),
    .din1(tmp_reg_706),
    .ce(1'b1),
    .dout(grp_fu_280_p2)
);

kernel_gramschmidt_dsqrt_64ns_64ns_64_12_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsqrt_64ns_64ns_64_12_no_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd0),
    .din1(nrm_reg_190),
    .ce(1'b1),
    .dout(grp_fu_284_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        empty_reg_246 <= grp_fu_269_p2;
    end else if (((icmp_ln100_1_fu_462_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
        empty_reg_246 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        i_1_reg_202 <= 19'd0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        i_1_reg_202 <= add_ln95_reg_715;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        i_2_reg_235 <= add_ln104_reg_757;
    end else if (((icmp_ln100_1_fu_462_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
        i_2_reg_235 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_504_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
        i_3_reg_258 <= 19'd0;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        i_3_reg_258 <= add_ln109_reg_795;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln100_fu_327_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_179 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        i_reg_179 <= add_ln89_reg_685;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvars_iv40_fu_74 <= 32'd1;
    end else if (((icmp_ln100_1_fu_462_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
        indvars_iv40_fu_74 <= add_ln85_fu_481_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln95_fu_420_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        j_reg_213 <= trunc_ln100_1_reg_677;
    end else if (((icmp_ln109_fu_565_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state53))) begin
        j_reg_213 <= add_ln100_1_fu_599_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        k_fu_78 <= 19'd0;
    end else if (((icmp_ln100_1_fu_462_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
        k_fu_78 <= add_ln100_reg_654;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln100_fu_327_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        nrm_reg_190 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        nrm_reg_190 <= grp_fu_269_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        storemerge_reg_223 <= bitcast_ln107_2_fu_553_p1;
    end else if (((icmp_ln100_1_fu_462_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
        storemerge_reg_223 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        A_addr_3_reg_820 <= zext_ln112_fu_610_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        R_addr_1_reg_749 <= zext_ln103_fu_476_p1;
        trunc_ln103_reg_743 <= trunc_ln103_fu_467_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        R_addr_reg_672 <= zext_ln94_fu_356_p1;
        add_ln100_reg_654 <= add_ln100_fu_332_p2;
        tmp_1_reg_667[17 : 9] <= tmp_1_fu_342_p3[17 : 9];
        trunc_ln100_1_reg_677 <= trunc_ln100_1_fu_361_p1;
        trunc_ln94_reg_659 <= trunc_ln94_fu_338_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        add_ln104_reg_757 <= add_ln104_fu_509_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        add_ln109_reg_795 <= add_ln109_fu_570_p2;
        add_ln112_reg_800 <= add_ln112_fu_584_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln89_reg_685 <= add_ln89_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        add_ln95_reg_715 <= add_ln95_fu_425_p2;
        zext_ln98_reg_720[17 : 0] <= zext_ln98_fu_444_p1[17 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        div_reg_735 <= grp_fu_280_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_293 <= A_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state58))) begin
        reg_297 <= grp_fu_275_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state44))) begin
        reg_302 <= Q_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        sub_reg_830 <= grp_fu_269_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        tmp_reg_706 <= grp_fu_284_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        A_address0 = A_addr_3_reg_820;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        A_address0 = zext_ln112_fu_610_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        A_address0 = zext_ln107_fu_528_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        A_address0 = zext_ln98_fu_444_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        A_address0 = zext_ln92_fu_397_p1;
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state3))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        A_we0 = 1'b1;
    end else begin
        A_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        Q_address0 = zext_ln112_1_fu_594_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        Q_address0 = zext_ln107_1_fu_538_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        Q_address0 = zext_ln98_reg_720;
    end else begin
        Q_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state43))) begin
        Q_ce0 = 1'b1;
    end else begin
        Q_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        Q_we0 = 1'b1;
    end else begin
        Q_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        R_address0 = R_addr_1_reg_749;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        R_address0 = R_addr_reg_672;
    end else begin
        R_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state43))) begin
        R_ce0 = 1'b1;
    end else begin
        R_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        R_d0 = storemerge_reg_223;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        R_d0 = bitcast_ln94_fu_408_p1;
    end else begin
        R_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | ((icmp_ln104_fu_504_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state43)))) begin
        R_we0 = 1'b1;
    end else begin
        R_we0 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln100_fu_327_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln100_fu_327_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_269_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_269_opcode = 2'd0;
    end else begin
        grp_fu_269_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_269_p0 = bitcast_ln112_fu_614_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_269_p0 = empty_reg_246;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_269_p0 = nrm_reg_190;
    end else begin
        grp_fu_269_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_275_p0 = bitcast_ln112_1_fu_605_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_275_p0 = bitcast_ln107_fu_543_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_275_p0 = bitcast_ln92_fu_402_p1;
    end else begin
        grp_fu_275_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_275_p1 = empty_reg_246;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_275_p1 = bitcast_ln107_1_fu_548_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_275_p1 = bitcast_ln92_fu_402_p1;
    end else begin
        grp_fu_275_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln100_fu_327_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln89_fu_373_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((icmp_ln95_fu_420_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state42 : begin
            if (((icmp_ln100_1_fu_462_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state43 : begin
            if (((icmp_ln104_fu_504_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state53 : begin
            if (((icmp_ln109_fu_565_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_d0 = sub_reg_830;

assign Q_d0 = div_reg_735;

assign add_ln100_1_fu_599_p2 = (j_reg_213 + 31'd1);

assign add_ln100_fu_332_p2 = (k_fu_78 + 19'd1);

assign add_ln103_fu_471_p2 = (tmp_1_reg_667 + trunc_ln103_fu_467_p1);

assign add_ln104_fu_509_p2 = (i_2_reg_235 + 19'd1);

assign add_ln107_1_fu_533_p2 = (tmp_4_fu_515_p3 + trunc_ln94_reg_659);

assign add_ln107_fu_523_p2 = (tmp_4_fu_515_p3 + trunc_ln103_reg_743);

assign add_ln109_fu_570_p2 = (i_3_reg_258 + 19'd1);

assign add_ln112_1_fu_589_p2 = (tmp_5_fu_576_p3 + trunc_ln94_reg_659);

assign add_ln112_fu_584_p2 = (tmp_5_fu_576_p3 + trunc_ln103_reg_743);

assign add_ln85_fu_481_p2 = (indvars_iv40_fu_74 + 32'd1);

assign add_ln89_fu_378_p2 = (i_reg_179 + 31'd1);

assign add_ln92_fu_392_p2 = (tmp_2_fu_384_p3 + trunc_ln94_reg_659);

assign add_ln94_fu_350_p2 = (tmp_1_fu_342_p3 + trunc_ln94_fu_338_p1);

assign add_ln95_fu_425_p2 = (i_1_reg_202 + 19'd1);

assign add_ln98_fu_439_p2 = (tmp_3_fu_431_p3 + trunc_ln94_reg_659);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bitcast_ln107_1_fu_548_p1 = reg_293;

assign bitcast_ln107_2_fu_553_p1 = grp_fu_269_p2;

assign bitcast_ln107_fu_543_p1 = reg_302;

assign bitcast_ln112_1_fu_605_p1 = reg_302;

assign bitcast_ln112_fu_614_p1 = reg_293;

assign bitcast_ln92_fu_402_p1 = reg_293;

assign bitcast_ln94_fu_408_p1 = tmp_reg_706;

assign grp_fu_280_p0 = reg_293;

assign icmp_ln100_1_fu_462_p2 = ((zext_ln100_1_fu_458_p1 == nj) ? 1'b1 : 1'b0);

assign icmp_ln100_fu_327_p2 = (($signed(zext_ln100_fu_323_p1) < $signed(nj)) ? 1'b1 : 1'b0);

assign icmp_ln104_fu_504_p2 = (($signed(zext_ln104_fu_500_p1) < $signed(ni)) ? 1'b1 : 1'b0);

assign icmp_ln109_fu_565_p2 = (($signed(zext_ln109_fu_561_p1) < $signed(ni)) ? 1'b1 : 1'b0);

assign icmp_ln89_fu_373_p2 = (($signed(zext_ln89_fu_369_p1) < $signed(ni)) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_420_p2 = (($signed(zext_ln95_fu_416_p1) < $signed(ni)) ? 1'b1 : 1'b0);

assign tmp_1_fu_342_p3 = {{trunc_ln100_fu_319_p1}, {9'd0}};

assign tmp_2_fu_384_p3 = {{trunc_ln89_fu_365_p1}, {9'd0}};

assign tmp_3_fu_431_p3 = {{trunc_ln95_fu_412_p1}, {9'd0}};

assign tmp_4_fu_515_p3 = {{trunc_ln104_fu_496_p1}, {9'd0}};

assign tmp_5_fu_576_p3 = {{trunc_ln109_fu_557_p1}, {9'd0}};

assign trunc_ln100_1_fu_361_p1 = indvars_iv40_fu_74[30:0];

assign trunc_ln100_fu_319_p1 = k_fu_78[8:0];

assign trunc_ln103_fu_467_p1 = j_reg_213[17:0];

assign trunc_ln104_fu_496_p1 = i_2_reg_235[8:0];

assign trunc_ln109_fu_557_p1 = i_3_reg_258[8:0];

assign trunc_ln89_fu_365_p1 = i_reg_179[8:0];

assign trunc_ln94_fu_338_p1 = k_fu_78[17:0];

assign trunc_ln95_fu_412_p1 = i_1_reg_202[8:0];

assign zext_ln100_1_fu_458_p1 = j_reg_213;

assign zext_ln100_fu_323_p1 = k_fu_78;

assign zext_ln103_fu_476_p1 = add_ln103_fu_471_p2;

assign zext_ln104_fu_500_p1 = i_2_reg_235;

assign zext_ln107_1_fu_538_p1 = add_ln107_1_fu_533_p2;

assign zext_ln107_fu_528_p1 = add_ln107_fu_523_p2;

assign zext_ln109_fu_561_p1 = i_3_reg_258;

assign zext_ln112_1_fu_594_p1 = add_ln112_1_fu_589_p2;

assign zext_ln112_fu_610_p1 = add_ln112_reg_800;

assign zext_ln89_fu_369_p1 = i_reg_179;

assign zext_ln92_fu_397_p1 = add_ln92_fu_392_p2;

assign zext_ln94_fu_356_p1 = add_ln94_fu_350_p2;

assign zext_ln95_fu_416_p1 = i_1_reg_202;

assign zext_ln98_fu_444_p1 = add_ln98_fu_439_p2;

always @ (posedge ap_clk) begin
    tmp_1_reg_667[8:0] <= 9'b000000000;
    zext_ln98_reg_720[63:18] <= 46'b0000000000000000000000000000000000000000000000;
end

endmodule //kernel_gramschmidt
