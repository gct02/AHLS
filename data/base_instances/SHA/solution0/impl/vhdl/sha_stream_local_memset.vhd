-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sha_stream_local_memset is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    n : IN STD_LOGIC_VECTOR (6 downto 0);
    e : IN STD_LOGIC_VECTOR (3 downto 0);
    sha_info_data_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sha_info_data_ce0 : OUT STD_LOGIC;
    sha_info_data_we0 : OUT STD_LOGIC;
    sha_info_data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of sha_stream_local_memset is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal m_fu_101_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal m_reg_115 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_local_memset_Pipeline_local_memset_label1_fu_36_ap_start : STD_LOGIC;
    signal grp_local_memset_Pipeline_local_memset_label1_fu_36_ap_done : STD_LOGIC;
    signal grp_local_memset_Pipeline_local_memset_label1_fu_36_ap_idle : STD_LOGIC;
    signal grp_local_memset_Pipeline_local_memset_label1_fu_36_ap_ready : STD_LOGIC;
    signal grp_local_memset_Pipeline_local_memset_label1_fu_36_sha_info_data_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_local_memset_Pipeline_local_memset_label1_fu_36_sha_info_data_ce0 : STD_LOGIC;
    signal grp_local_memset_Pipeline_local_memset_label1_fu_36_sha_info_data_we0 : STD_LOGIC;
    signal grp_local_memset_Pipeline_local_memset_label1_fu_36_sha_info_data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_local_memset_Pipeline_local_memset_label1_fu_36_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal sub_ln58_fu_53_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln58_1_fu_59_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln58_fu_69_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln58_fu_73_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln58_2_fu_83_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln58_1_fu_93_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_fu_45_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln58_1_fu_77_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln58_1_fu_97_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component sha_stream_local_memset_Pipeline_local_memset_label1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m : IN STD_LOGIC_VECTOR (30 downto 0);
        empty : IN STD_LOGIC_VECTOR (3 downto 0);
        sha_info_data_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        sha_info_data_ce0 : OUT STD_LOGIC;
        sha_info_data_we0 : OUT STD_LOGIC;
        sha_info_data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_local_memset_Pipeline_local_memset_label1_fu_36 : component sha_stream_local_memset_Pipeline_local_memset_label1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_local_memset_Pipeline_local_memset_label1_fu_36_ap_start,
        ap_done => grp_local_memset_Pipeline_local_memset_label1_fu_36_ap_done,
        ap_idle => grp_local_memset_Pipeline_local_memset_label1_fu_36_ap_idle,
        ap_ready => grp_local_memset_Pipeline_local_memset_label1_fu_36_ap_ready,
        m => m_reg_115,
        empty => e,
        sha_info_data_address0 => grp_local_memset_Pipeline_local_memset_label1_fu_36_sha_info_data_address0,
        sha_info_data_ce0 => grp_local_memset_Pipeline_local_memset_label1_fu_36_sha_info_data_ce0,
        sha_info_data_we0 => grp_local_memset_Pipeline_local_memset_label1_fu_36_sha_info_data_we0,
        sha_info_data_d0 => grp_local_memset_Pipeline_local_memset_label1_fu_36_sha_info_data_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_local_memset_Pipeline_local_memset_label1_fu_36_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_local_memset_Pipeline_local_memset_label1_fu_36_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_local_memset_Pipeline_local_memset_label1_fu_36_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_local_memset_Pipeline_local_memset_label1_fu_36_ap_ready = ap_const_logic_1)) then 
                    grp_local_memset_Pipeline_local_memset_label1_fu_36_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                m_reg_115 <= m_fu_101_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_local_memset_Pipeline_local_memset_label1_fu_36_ap_done, ap_CS_fsm_state2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_local_memset_Pipeline_local_memset_label1_fu_36_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_local_memset_Pipeline_local_memset_label1_fu_36_ap_done)
    begin
        if ((grp_local_memset_Pipeline_local_memset_label1_fu_36_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_local_memset_Pipeline_local_memset_label1_fu_36_ap_done, ap_CS_fsm_state2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((grp_local_memset_Pipeline_local_memset_label1_fu_36_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_local_memset_Pipeline_local_memset_label1_fu_36_ap_done, ap_CS_fsm_state2)
    begin
        if (((grp_local_memset_Pipeline_local_memset_label1_fu_36_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_local_memset_Pipeline_local_memset_label1_fu_36_ap_start <= grp_local_memset_Pipeline_local_memset_label1_fu_36_ap_start_reg;
    m_fu_101_p3 <= 
        sub_ln58_1_fu_77_p2 when (tmp_fu_45_p3(0) = '1') else 
        zext_ln58_1_fu_97_p1;
        sext_ln58_1_fu_93_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln58_2_fu_83_p4),30));

        sext_ln58_fu_69_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln58_1_fu_59_p4),30));

    sha_info_data_address0 <= grp_local_memset_Pipeline_local_memset_label1_fu_36_sha_info_data_address0;
    sha_info_data_ce0 <= grp_local_memset_Pipeline_local_memset_label1_fu_36_sha_info_data_ce0;
    sha_info_data_d0 <= grp_local_memset_Pipeline_local_memset_label1_fu_36_sha_info_data_d0;
    sha_info_data_we0 <= grp_local_memset_Pipeline_local_memset_label1_fu_36_sha_info_data_we0;
    sub_ln58_1_fu_77_p2 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(zext_ln58_fu_73_p1));
    sub_ln58_fu_53_p2 <= std_logic_vector(unsigned(ap_const_lv7_0) - unsigned(n));
    tmp_fu_45_p3 <= n(6 downto 6);
    trunc_ln58_1_fu_59_p4 <= sub_ln58_fu_53_p2(6 downto 2);
    trunc_ln58_2_fu_83_p4 <= n(6 downto 2);
    zext_ln58_1_fu_97_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln58_1_fu_93_p1),31));
    zext_ln58_fu_73_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln58_fu_69_p1),31));
end behav;
