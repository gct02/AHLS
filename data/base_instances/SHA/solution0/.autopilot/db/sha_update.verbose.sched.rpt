

================================================================
== Vitis HLS Report for 'sha_update'
================================================================
* Date:           Thu Apr  3 20:46:15 2025

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        SHA
* Solution:       solution0 (Vivado IP Flow Target)
* Product family: virtexuplusHBM
* Target device:  xcu50-fsvh2104-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  8.00 ns|  2.844 ns|     2.16 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-------+-------+---------+
    |  Latency (cycles) |  Latency (absolute) |    Interval   | Pipeline|
    |   min   |   max   |    min   |    max   |  min  |  max  |   Type  |
    +---------+---------+----------+----------+-------+-------+---------+
    |    50803|    57395|  0.406 ms|  0.459 ms|  50803|  57395|       no|
    +---------+---------+----------+----------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+---------+---------+-----------+-----------+-----------+-----------+----------+
        |                     |  Latency (cycles) | Iteration |  Initiation Interval  |    Trip   |          |
        |      Loop Name      |   min   |   max   |  Latency  |  achieved |   target  |   Count   | Pipelined|
        +---------------------+---------+---------+-----------+-----------+-----------+-----------+----------+
        |- sha_update_label4  |    50800|    57344|  400 ~ 448|          -|          -|  127 ~ 128|        no|
        +---------------------+---------+---------+-----------+-----------+-----------+-----------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 6 
3 --> 4 
4 --> 5 
5 --> 2 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.64>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%idx = alloca i32 1"   --->   Operation 7 'alloca' 'idx' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%count_addr_02 = alloca i32 1"   --->   Operation 8 'alloca' 'count_addr_02' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specpipeline_ln17 = specpipeline void @_ssdm_op_SpecPipeline, i32 0, i32 0, i32 1, i32 0, void @empty_1" [/home/gabriel/Documents/UFRGS/RAISE/AHLS/AHLS/data/base_directives/sha.tcl:17]   --->   Operation 9 'specpipeline' 'specpipeline_ln17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%count_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %count" [data/benchmarks/sha/sha.c:156]   --->   Operation 10 'read' 'count_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%buffer_offset_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %buffer_offset" [data/benchmarks/sha/sha.c:156]   --->   Operation 11 'read' 'buffer_offset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%sha_info_count_lo_load = load i32 %sha_info_count_lo" [data/benchmarks/sha/sha.c:156]   --->   Operation 12 'load' 'sha_info_count_lo_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns) (grouped into LUT with out node add_ln156)   --->   "%shl_ln156 = shl i32 %count_read, i32 3" [data/benchmarks/sha/sha.c:156]   --->   Operation 13 'shl' 'shl_ln156' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.88ns) (out node of the LUT)   --->   "%add_ln156 = add i32 %sha_info_count_lo_load, i32 %shl_ln156" [data/benchmarks/sha/sha.c:156]   --->   Operation 14 'add' 'add_ln156' <Predicate = true> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.88ns)   --->   "%icmp_ln156 = icmp_ult  i32 %add_ln156, i32 %sha_info_count_lo_load" [data/benchmarks/sha/sha.c:156]   --->   Operation 15 'icmp' 'icmp_ln156' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%sha_info_count_hi_load = load i32 %sha_info_count_hi" [data/benchmarks/sha/sha.c:157]   --->   Operation 16 'load' 'sha_info_count_hi_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.88ns)   --->   "%add_ln157 = add i32 %sha_info_count_hi_load, i32 1" [data/benchmarks/sha/sha.c:157]   --->   Operation 17 'add' 'add_ln157' <Predicate = true> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.00ns) (grouped into LUT with out node add_ln160)   --->   "%select_ln156 = select i1 %icmp_ln156, i32 %add_ln157, i32 %sha_info_count_hi_load" [data/benchmarks/sha/sha.c:156]   --->   Operation 18 'select' 'select_ln156' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%store_ln159 = store i32 %add_ln156, i32 %sha_info_count_lo" [data/benchmarks/sha/sha.c:159]   --->   Operation 19 'store' 'store_ln159' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns) (grouped into LUT with out node add_ln160)   --->   "%lshr_ln = partselect i3 @_ssdm_op_PartSelect.i3.i32.i32.i32, i32 %count_read, i32 29, i32 31" [data/benchmarks/sha/sha.c:160]   --->   Operation 20 'partselect' 'lshr_ln' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns) (grouped into LUT with out node add_ln160)   --->   "%zext_ln160 = zext i3 %lshr_ln" [data/benchmarks/sha/sha.c:160]   --->   Operation 21 'zext' 'zext_ln160' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.88ns) (out node of the LUT)   --->   "%add_ln160 = add i32 %select_ln156, i32 %zext_ln160" [data/benchmarks/sha/sha.c:160]   --->   Operation 22 'add' 'add_ln160' <Predicate = true> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%tmp = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %count_read, i32 6, i32 31" [data/benchmarks/sha/sha.c:163]   --->   Operation 23 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.84ns)   --->   "%icmp_ln163 = icmp_sgt  i26 %tmp, i26 0" [data/benchmarks/sha/sha.c:163]   --->   Operation 24 'icmp' 'icmp_ln163' <Predicate = true> <Delay = 0.84> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%store_ln157 = store i32 %add_ln160, i32 %sha_info_count_hi" [data/benchmarks/sha/sha.c:157]   --->   Operation 25 'store' 'store_ln157' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.38ns)   --->   "%store_ln156 = store i32 %count_read, i32 %count_addr_02" [data/benchmarks/sha/sha.c:156]   --->   Operation 26 'store' 'store_ln156' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 27 [1/1] (0.38ns)   --->   "%store_ln0 = store i32 0, i32 %idx"   --->   Operation 27 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%br_ln163 = br void %while.body" [data/benchmarks/sha/sha.c:163]   --->   Operation 28 'br' 'br_ln163' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 2.84>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%count_load = load i32 %count_addr_02" [data/benchmarks/sha/sha.c:168]   --->   Operation 29 'load' 'count_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%tmp_2 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %count_load, i32 6, i32 31" [data/benchmarks/sha/sha.c:163]   --->   Operation 30 'partselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.84ns)   --->   "%icmp_ln163_1 = icmp_sgt  i26 %tmp_2, i26 0" [data/benchmarks/sha/sha.c:163]   --->   Operation 31 'icmp' 'icmp_ln163_1' <Predicate = true> <Delay = 0.84> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%br_ln163 = br i1 %icmp_ln163_1, void %while.end.loopexit, void %while.body.split" [data/benchmarks/sha/sha.c:163]   --->   Operation 32 'br' 'br_ln163' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%idx_load = load i32 %idx" [data/benchmarks/sha/sha.c:163]   --->   Operation 33 'load' 'idx_load' <Predicate = (icmp_ln163_1)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%trunc_ln163 = trunc i32 %idx_load" [data/benchmarks/sha/sha.c:163]   --->   Operation 34 'trunc' 'trunc_ln163' <Predicate = (icmp_ln163_1)> <Delay = 0.00>
ST_2 : Operation 35 [2/2] (1.99ns)   --->   "%call_ln165 = call void @local_memcpy, i8 %buffer_r, i1 %buffer_offset_read, i32 64, i14 %trunc_ln163, i32 %sha_info_data" [data/benchmarks/sha/sha.c:165]   --->   Operation 35 'call' 'call_ln165' <Predicate = (icmp_ln163_1)> <Delay = 1.99> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 36 [1/1] (0.88ns)   --->   "%add_ln168 = add i32 %count_load, i32 4294967232" [data/benchmarks/sha/sha.c:168]   --->   Operation 36 'add' 'add_ln168' <Predicate = (icmp_ln163_1)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.88ns)   --->   "%add_ln163 = add i32 %idx_load, i32 64" [data/benchmarks/sha/sha.c:163]   --->   Operation 37 'add' 'add_ln163' <Predicate = (icmp_ln163_1)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.38ns)   --->   "%store_ln168 = store i32 %add_ln168, i32 %count_addr_02" [data/benchmarks/sha/sha.c:168]   --->   Operation 38 'store' 'store_ln168' <Predicate = (icmp_ln163_1)> <Delay = 0.38>
ST_2 : Operation 39 [1/1] (0.38ns)   --->   "%store_ln163 = store i32 %add_ln163, i32 %idx" [data/benchmarks/sha/sha.c:163]   --->   Operation 39 'store' 'store_ln163' <Predicate = (icmp_ln163_1)> <Delay = 0.38>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%trunc_ln163_1 = trunc i32 %count_read" [data/benchmarks/sha/sha.c:163]   --->   Operation 40 'trunc' 'trunc_ln163_1' <Predicate = (!icmp_ln163_1 & icmp_ln163)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %count_read, i32 6, i32 13" [data/benchmarks/sha/sha.c:163]   --->   Operation 41 'partselect' 'tmp_1' <Predicate = (!icmp_ln163_1 & icmp_ln163)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%and_ln = bitconcatenate i14 @_ssdm_op_BitConcatenate.i14.i8.i6, i8 %tmp_1, i6 0" [data/benchmarks/sha/sha.c:163]   --->   Operation 42 'bitconcatenate' 'and_ln' <Predicate = (!icmp_ln163_1 & icmp_ln163)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln170 = zext i6 %trunc_ln163_1" [data/benchmarks/sha/sha.c:170]   --->   Operation 43 'zext' 'zext_ln170' <Predicate = (!icmp_ln163_1 & icmp_ln163)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.22ns)   --->   "%select_ln170 = select i1 %icmp_ln163, i32 %zext_ln170, i32 %count_read" [data/benchmarks/sha/sha.c:170]   --->   Operation 44 'select' 'select_ln170' <Predicate = (!icmp_ln163_1)> <Delay = 0.22> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.34ns)   --->   "%select_ln170_1 = select i1 %icmp_ln163, i14 %and_ln, i14 0" [data/benchmarks/sha/sha.c:170]   --->   Operation 45 'select' 'select_ln170_1' <Predicate = (!icmp_ln163_1)> <Delay = 0.34> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 46 [2/2] (1.99ns)   --->   "%call_ln170 = call void @local_memcpy, i8 %buffer_r, i1 %buffer_offset_read, i32 %select_ln170, i14 %select_ln170_1, i32 %sha_info_data" [data/benchmarks/sha/sha.c:170]   --->   Operation 46 'call' 'call_ln170' <Predicate = (!icmp_ln163_1)> <Delay = 1.99> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 47 [1/2] (0.00ns)   --->   "%call_ln165 = call void @local_memcpy, i8 %buffer_r, i1 %buffer_offset_read, i32 64, i14 %trunc_ln163, i32 %sha_info_data" [data/benchmarks/sha/sha.c:165]   --->   Operation 47 'call' 'call_ln165' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 48 [2/2] (0.00ns)   --->   "%call_ln166 = call void @sha_transform, i32 %sha_info_data, i32 %sha_info_digest" [data/benchmarks/sha/sha.c:166]   --->   Operation 48 'call' 'call_ln166' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 0.00>
ST_5 : Operation 49 [1/1] (0.00ns)   --->   "%speclooptripcount_ln164 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 127, i64 128, i64 127" [data/benchmarks/sha/sha.c:164]   --->   Operation 49 'speclooptripcount' 'speclooptripcount_ln164' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 50 [1/1] (0.00ns)   --->   "%specloopname_ln169 = specloopname void @_ssdm_op_SpecLoopName, void @empty_5" [data/benchmarks/sha/sha.c:169]   --->   Operation 50 'specloopname' 'specloopname_ln169' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 51 [1/2] (0.00ns)   --->   "%call_ln166 = call void @sha_transform, i32 %sha_info_data, i32 %sha_info_digest" [data/benchmarks/sha/sha.c:166]   --->   Operation 51 'call' 'call_ln166' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 52 [1/1] (0.00ns)   --->   "%br_ln163 = br void %while.body" [data/benchmarks/sha/sha.c:163]   --->   Operation 52 'br' 'br_ln163' <Predicate = true> <Delay = 0.00>

State 6 <SV = 2> <Delay = 0.00>
ST_6 : Operation 53 [1/2] (0.00ns)   --->   "%call_ln170 = call void @local_memcpy, i8 %buffer_r, i1 %buffer_offset_read, i32 %select_ln170, i14 %select_ln170_1, i32 %sha_info_data" [data/benchmarks/sha/sha.c:170]   --->   Operation 53 'call' 'call_ln170' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 54 [1/1] (0.00ns)   --->   "%ret_ln171 = ret" [data/benchmarks/sha/sha.c:171]   --->   Operation 54 'ret' 'ret_ln171' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8.000ns, clock uncertainty: 2.160ns.

 <State 1>: 2.640ns
The critical path consists of the following:
	wire read operation ('count_read', data/benchmarks/sha/sha.c:156) on port 'count' (data/benchmarks/sha/sha.c:156) [11]  (0.000 ns)
	'shl' operation 32 bit ('shl_ln156', data/benchmarks/sha/sha.c:156) [14]  (0.000 ns)
	'add' operation 32 bit ('add_ln156', data/benchmarks/sha/sha.c:156) [15]  (0.880 ns)
	'icmp' operation 1 bit ('icmp_ln156', data/benchmarks/sha/sha.c:156) [16]  (0.880 ns)
	'select' operation 32 bit ('select_ln156', data/benchmarks/sha/sha.c:156) [19]  (0.000 ns)
	'add' operation 32 bit ('add_ln160', data/benchmarks/sha/sha.c:160) [23]  (0.880 ns)

 <State 2>: 2.844ns
The critical path consists of the following:
	'load' operation 32 bit ('count_load', data/benchmarks/sha/sha.c:168) on local variable 'count_addr_02' [31]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln163_1', data/benchmarks/sha/sha.c:163) [33]  (0.844 ns)
	'call' operation 0 bit ('call_ln165', data/benchmarks/sha/sha.c:165) to 'local_memcpy' [40]  (1.999 ns)

 <State 3>: 0.000ns
The critical path consists of the following:

 <State 4>: 0.000ns
The critical path consists of the following:

 <State 5>: 0.000ns
The critical path consists of the following:

 <State 6>: 0.000ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
