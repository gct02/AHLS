-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity adpcm_main_decode is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_r : IN STD_LOGIC_VECTOR (7 downto 0);
    dec_del_bpl_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dec_del_bpl_ce0 : OUT STD_LOGIC;
    dec_del_bpl_we0 : OUT STD_LOGIC;
    dec_del_bpl_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_del_bpl_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_del_dltx_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dec_del_dltx_ce0 : OUT STD_LOGIC;
    dec_del_dltx_we0 : OUT STD_LOGIC;
    dec_del_dltx_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    dec_del_dltx_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    dec_del_dltx_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dec_del_dltx_ce1 : OUT STD_LOGIC;
    dec_del_dltx_we1 : OUT STD_LOGIC;
    dec_del_dltx_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    dec_del_dltx_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    dec_rlt1_i : IN STD_LOGIC_VECTOR (30 downto 0);
    dec_rlt1_o : OUT STD_LOGIC_VECTOR (30 downto 0);
    dec_rlt1_o_ap_vld : OUT STD_LOGIC;
    dec_al1_i : IN STD_LOGIC_VECTOR (15 downto 0);
    dec_al1_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    dec_al1_o_ap_vld : OUT STD_LOGIC;
    dec_rlt2_i : IN STD_LOGIC_VECTOR (30 downto 0);
    dec_rlt2_o : OUT STD_LOGIC_VECTOR (30 downto 0);
    dec_rlt2_o_ap_vld : OUT STD_LOGIC;
    dec_al2_i : IN STD_LOGIC_VECTOR (14 downto 0);
    dec_al2_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    dec_al2_o_ap_vld : OUT STD_LOGIC;
    dec_detl_i : IN STD_LOGIC_VECTOR (14 downto 0);
    dec_detl_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    dec_detl_o_ap_vld : OUT STD_LOGIC;
    qq4_code4_table_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    qq4_code4_table_ce0 : OUT STD_LOGIC;
    qq4_code4_table_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    il : IN STD_LOGIC_VECTOR (5 downto 0);
    dec_nbl_i : IN STD_LOGIC_VECTOR (14 downto 0);
    dec_nbl_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    dec_nbl_o_ap_vld : OUT STD_LOGIC;
    wl_code_table_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    wl_code_table_ce0 : OUT STD_LOGIC;
    wl_code_table_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
    ilb_table_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    ilb_table_ce0 : OUT STD_LOGIC;
    ilb_table_q0 : IN STD_LOGIC_VECTOR (11 downto 0);
    dec_plt1_i : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_plt1_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_plt1_o_ap_vld : OUT STD_LOGIC;
    dec_plt2_i : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_plt2_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_plt2_o_ap_vld : OUT STD_LOGIC;
    dec_del_bph_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dec_del_bph_ce0 : OUT STD_LOGIC;
    dec_del_bph_we0 : OUT STD_LOGIC;
    dec_del_bph_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_del_bph_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_del_dhx_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dec_del_dhx_ce0 : OUT STD_LOGIC;
    dec_del_dhx_we0 : OUT STD_LOGIC;
    dec_del_dhx_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    dec_del_dhx_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    dec_del_dhx_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dec_del_dhx_ce1 : OUT STD_LOGIC;
    dec_del_dhx_we1 : OUT STD_LOGIC;
    dec_del_dhx_d1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    dec_del_dhx_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
    dec_rh1_i : IN STD_LOGIC_VECTOR (30 downto 0);
    dec_rh1_o : OUT STD_LOGIC_VECTOR (30 downto 0);
    dec_rh1_o_ap_vld : OUT STD_LOGIC;
    dec_ah1_i : IN STD_LOGIC_VECTOR (15 downto 0);
    dec_ah1_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    dec_ah1_o_ap_vld : OUT STD_LOGIC;
    dec_rh2_i : IN STD_LOGIC_VECTOR (30 downto 0);
    dec_rh2_o : OUT STD_LOGIC_VECTOR (30 downto 0);
    dec_rh2_o_ap_vld : OUT STD_LOGIC;
    dec_ah2_i : IN STD_LOGIC_VECTOR (14 downto 0);
    dec_ah2_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    dec_ah2_o_ap_vld : OUT STD_LOGIC;
    dec_deth_i : IN STD_LOGIC_VECTOR (14 downto 0);
    dec_deth_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    dec_deth_o_ap_vld : OUT STD_LOGIC;
    dec_nbh_i : IN STD_LOGIC_VECTOR (14 downto 0);
    dec_nbh_o : OUT STD_LOGIC_VECTOR (14 downto 0);
    dec_nbh_o_ap_vld : OUT STD_LOGIC;
    dec_ph1_i : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_ph1_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_ph1_o_ap_vld : OUT STD_LOGIC;
    dec_ph2_i : IN STD_LOGIC_VECTOR (31 downto 0);
    dec_ph2_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    dec_ph2_o_ap_vld : OUT STD_LOGIC;
    accumc_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    accumc_ce0 : OUT STD_LOGIC;
    accumc_we0 : OUT STD_LOGIC;
    accumc_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    accumc_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    h_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    h_ce0 : OUT STD_LOGIC;
    h_q0 : IN STD_LOGIC_VECTOR (14 downto 0);
    h_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    h_ce1 : OUT STD_LOGIC;
    h_q1 : IN STD_LOGIC_VECTOR (14 downto 0);
    accumd_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    accumd_ce0 : OUT STD_LOGIC;
    accumd_we0 : OUT STD_LOGIC;
    accumd_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    accumd_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    xout1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    xout1_ap_vld : OUT STD_LOGIC;
    xout2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    xout2_ap_vld : OUT STD_LOGIC );
end;


architecture behav of adpcm_main_decode is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (27 downto 0) := "0000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (27 downto 0) := "0000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (27 downto 0) := "0000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (27 downto 0) := "0000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (27 downto 0) := "0000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (27 downto 0) := "0000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (27 downto 0) := "0001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (27 downto 0) := "0010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (27 downto 0) := "0100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (27 downto 0) := "1000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv39_7FFFFFFFD4 : STD_LOGIC_VECTOR (38 downto 0) := "111111111111111111111111111111111010100";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv17_1FF80 : STD_LOGIC_VECTOR (16 downto 0) := "11111111110000000";
    constant ap_const_lv17_80 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv17_4800 : STD_LOGIC_VECTOR (16 downto 0) := "00100100000000000";
    constant ap_const_lv15_4800 : STD_LOGIC_VECTOR (14 downto 0) := "100100000000000";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv18_3FF40 : STD_LOGIC_VECTOR (17 downto 0) := "111111111101000000";
    constant ap_const_lv18_C0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000011000000";
    constant ap_const_lv32_FFFFFF80 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111110000000";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv17_3000 : STD_LOGIC_VECTOR (16 downto 0) := "00011000000000000";
    constant ap_const_lv17_1D000 : STD_LOGIC_VECTOR (16 downto 0) := "11101000000000000";
    constant ap_const_lv15_5000 : STD_LOGIC_VECTOR (14 downto 0) := "101000000000000";
    constant ap_const_lv15_3C00 : STD_LOGIC_VECTOR (14 downto 0) := "011110000000000";
    constant ap_const_lv11_31E : STD_LOGIC_VECTOR (10 downto 0) := "01100011110";
    constant ap_const_lv11_72A : STD_LOGIC_VECTOR (10 downto 0) := "11100101010";
    constant ap_const_lv17_5800 : STD_LOGIC_VECTOR (16 downto 0) := "00101100000000000";
    constant ap_const_lv15_5800 : STD_LOGIC_VECTOR (14 downto 0) := "101100000000000";
    constant ap_const_lv14_2310 : STD_LOGIC_VECTOR (13 downto 0) := "10001100010000";
    constant ap_const_lv14_39B0 : STD_LOGIC_VECTOR (13 downto 0) := "11100110110000";
    constant ap_const_lv14_1CF0 : STD_LOGIC_VECTOR (13 downto 0) := "01110011110000";
    constant ap_const_lv14_650 : STD_LOGIC_VECTOR (13 downto 0) := "00011001010000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal qq6_code6_table_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal qq6_code6_table_ce0 : STD_LOGIC;
    signal qq6_code6_table_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_754 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal reg_761 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal reg_765 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal lshr_ln_reg_2785 : STD_LOGIC_VECTOR (1 downto 0);
    signal qq4_code4_table_load_reg_2818 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln15_reg_2828 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln477_fu_1085_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln477_reg_2838 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal sext_ln479_fu_1088_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln479_reg_2843 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln345_fu_1097_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln345_reg_2848 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln345_2_fu_1118_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln345_2_reg_2853 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln345_1_fu_1128_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln345_1_reg_2858 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln346_1_fu_1132_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln346_1_reg_2863 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln347_fu_1160_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln347_reg_2868 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln350_fu_1195_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln350_reg_2874 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln535_fu_1201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln535_reg_2880 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal dec_del_bpl_addr_1_reg_2892 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_bpl_addr_reg_2900 : STD_LOGIC_VECTOR (2 downto 0);
    signal apl2_fu_1339_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal apl2_reg_2926 : STD_LOGIC_VECTOR (16 downto 0);
    signal apl1_fu_1383_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal apl1_reg_2932 : STD_LOGIC_VECTOR (17 downto 0);
    signal dec_del_dltx_load_3_reg_2938 : STD_LOGIC_VECTOR (15 downto 0);
    signal dec_del_dltx_load_5_reg_2943 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal trunc_ln522_2_reg_2961 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln477_2_fu_1869_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln477_2_reg_2989 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln479_5_fu_1891_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln479_5_reg_2994 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln364_1_fu_1931_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln364_1_reg_2999 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln367_fu_1974_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln367_reg_3004 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln535_2_fu_1980_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln535_2_reg_3011 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln543_fu_1986_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln543_reg_3015 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal dec_del_bph_addr_1_reg_3028 : STD_LOGIC_VECTOR (2 downto 0);
    signal dec_del_bph_addr_reg_3036 : STD_LOGIC_VECTOR (2 downto 0);
    signal apl2_8_fu_2132_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal apl2_8_reg_3069 : STD_LOGIC_VECTOR (16 downto 0);
    signal apl1_11_fu_2176_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal apl1_11_reg_3075 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln371_fu_2182_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln371_reg_3081 : STD_LOGIC_VECTOR (31 downto 0);
    signal dec_del_dhx_load_3_reg_3087 : STD_LOGIC_VECTOR (13 downto 0);
    signal dec_del_dhx_load_5_reg_3092 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln378_fu_2412_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln378_reg_3097 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal add_ln379_fu_2416_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln379_reg_3102 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal trunc_ln405_fu_2702_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln405_reg_3147 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal zext_ln460_fu_813_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln464_fu_804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln345_fu_859_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln346_fu_951_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln525_fu_1070_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln543_fu_1207_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_694_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln537_fu_1218_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln460_2_fu_1645_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln464_2_fu_1636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln525_2_fu_1800_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln543_2_fu_2000_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln537_2_fu_2011_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln389_fu_2491_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln389_fu_2476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln335_fu_2503_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln391_fu_2514_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln335_2_fu_2712_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln405_fu_2687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln335_1_fu_2739_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal add_ln354_fu_1389_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal apl1_10_fu_1600_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal apl2_7_fu_1540_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln9_fu_1181_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln515_fu_1036_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln372_fu_2187_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal apl1_14_fu_2398_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal apl2_10_fu_2338_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln526_2_fu_1960_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln624_fu_1766_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal idx_fu_298 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal add_ln464_fu_825_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zl_6_fu_302 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000000000000";
    signal zl_11_fu_884_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal sext_ln460_fu_792_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal i_fu_306 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal i_23_fu_819_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_13_fu_310 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal grp_fu_700_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal idx198_fu_314 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal add_ln464_4_fu_1657_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zl_9_fu_318 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000000";
    signal zl_13_fu_1819_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln460_2_fu_1624_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal i_16_fu_322 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal i_27_fu_1651_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_18_fu_326 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal grp_fu_742_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal idx204_fu_330 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal add_ln335_fu_2497_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal xa2_2_fu_334 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000000000000";
    signal xa2_5_fu_2573_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal sext_ln333_1_fu_2459_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal xa1_2_fu_338 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000000000000";
    signal xa1_5_fu_2553_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal sext_ln333_fu_2450_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal i_012_fu_342 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal i_31_fu_2482_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal idx213_fu_346 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal add_ln405_fu_2718_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_15_fu_350 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal i_33_fu_2693_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal add_ln550_fu_1482_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal add_ln550_2_fu_2280_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_fu_639_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln461_6_fu_1619_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln466_9_fu_1810_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_639_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln461_5_fu_1614_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln466_8_fu_1805_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_643_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln479_4_fu_942_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln479_6_fu_1895_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln391_1_fu_2544_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_643_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln475_7_fu_937_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln475_10_fu_1886_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln391_fu_2539_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_651_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln475_6_fu_924_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln475_9_fu_1873_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_651_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln475_fu_919_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln475_8_fu_1864_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_655_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln461_4_fu_787_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln466_6_fu_875_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal grp_fu_655_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln461_fu_782_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln466_fu_870_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal grp_fu_659_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln570_4_fu_1252_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln570_6_fu_2045_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_659_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln570_fu_1247_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln570_5_fu_2040_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_663_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln574_fu_1298_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln574_2_fu_2091_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_663_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_667_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln386_fu_2454_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal sext_ln395_fu_2597_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal grp_fu_667_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_643_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_651_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_675_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_659_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_663_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_714_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln461_4_fu_787_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_655_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal trunc_ln345_1_fu_850_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln466_7_fu_880_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal pl_fu_911_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln475_6_fu_924_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal pl2_fu_929_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln479_4_fu_942_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln_fu_964_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln511_2_fu_972_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln511_fu_960_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln511_fu_976_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln14_fu_982_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln512_2_fu_996_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln512_fu_992_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln512_fu_1000_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln509_fu_1006_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_1010_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln513_fu_1018_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln515_fu_1030_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln509_fu_1026_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal wd1_fu_1050_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln477_fu_1085_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln479_fu_1088_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln_fu_1075_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln344_fu_1091_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln345_fu_1112_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln345_1_fu_1105_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln345_fu_1112_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln346_fu_1140_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln346_fu_1140_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln13_fu_1146_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln346_2_fu_1156_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln525_fu_1166_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln525cast_fu_1171_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal wd3_fu_1175_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal wd2_fu_1236_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal wd2_fu_1236_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln570_4_fu_1252_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln566_fu_1243_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_9_fu_1263_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_fu_1263_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln571_fu_1257_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_706_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln572_fu_1272_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_fu_1276_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln570_fu_1286_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln574_fu_1298_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln3_fu_1303_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln3_fu_1303_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln580_fu_1310_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln580_fu_1314_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln17_fu_1319_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln580_4_fu_1329_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_722_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln580_fu_1333_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln574_4_fu_1294_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln4_fu_1345_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln4_fu_1345_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln597_fu_1352_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sub_ln597_fu_1356_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln18_fu_1361_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln599_fu_1375_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln599_fu_1371_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln545_fu_1429_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln545_fu_1429_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln545_4_fu_1434_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_1438_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln549_fu_1454_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln2_fu_1458_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln2_fu_1458_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln549_fu_1454_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln549_fu_1466_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal wd3_6_fu_1472_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln549_fu_1446_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln539_fu_1489_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln1_fu_1493_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln1_fu_1493_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln539_fu_1489_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln539_fu_1501_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal icmp_ln583_fu_1518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal apl2_6_fu_1523_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln585_fu_1534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln567_fu_1530_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal wd3_7_fu_1554_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln595_fu_1560_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln607_fu_1568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal apl1_8_fu_1573_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln595_4_fu_1564_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal apl1_9_fu_1584_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln609_fu_1590_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln609_fu_1594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln595_fu_1580_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln461_6_fu_1619_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_639_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal shl_ln5_fu_1681_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln620_2_fu_1689_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln620_fu_1677_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln620_fu_1693_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal wd_fu_1699_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_1713_p6 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln618_fu_1709_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln621_fu_1726_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln621_fu_1730_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln617_fu_1736_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_1740_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln622_fu_1748_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln624_fu_1760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln617_fu_1756_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal wd1_2_fu_1780_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln466_10_fu_1815_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal pl_5_fu_1856_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln477_2_fu_1869_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln475_9_fu_1873_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal pl2_2_fu_1878_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln479_5_fu_1891_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln479_6_fu_1895_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_fu_1908_p6 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln364_fu_1925_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln364_fu_1925_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal sub_ln525_2_fu_1945_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln525_2cast_fu_1950_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal wd3_8_fu_1954_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln364_1_fu_1941_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln469_2_fu_1830_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal wd2_2_fu_2029_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal wd2_2_fu_2029_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln570_6_fu_2045_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln566_2_fu_2036_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_1_fu_2056_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_fu_2056_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln571_2_fu_2050_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln572_2_fu_2065_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_3_fu_2069_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln570_2_fu_2079_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln574_2_fu_2091_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln580_2_fu_2096_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln580_2_fu_2096_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln580_5_fu_2103_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln580_2_fu_2107_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln580_2_fu_2112_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln580_6_fu_2122_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln580_5_fu_2126_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln574_5_fu_2087_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln597_2_fu_2138_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln597_2_fu_2138_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln597_2_fu_2145_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sub_ln597_2_fu_2149_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln597_2_fu_2154_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln599_2_fu_2168_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln599_2_fu_2164_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln545_2_fu_2227_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln545_2_fu_2227_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln545_6_fu_2232_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_2236_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln549_2_fu_2252_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln549_2_fu_2256_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln549_2_fu_2256_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln549_2_fu_2252_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln549_2_fu_2264_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal wd3_9_fu_2270_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln549_2_fu_2244_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln539_2_fu_2287_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln539_2_fu_2291_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln539_2_fu_2291_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln539_2_fu_2287_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln539_2_fu_2299_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal icmp_ln583_2_fu_2316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal apl2_9_fu_2321_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln585_2_fu_2332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln567_2_fu_2328_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal wd3_10_fu_2352_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln595_5_fu_2358_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln607_2_fu_2366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal apl1_12_fu_2371_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln595_6_fu_2362_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal apl1_13_fu_2382_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln609_2_fu_2388_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln609_2_fu_2392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln595_2_fu_2378_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln6_fu_2420_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal shl_ln385_1_fu_2432_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln385_fu_2428_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal sext_ln385_1_fu_2440_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal xa1_fu_2444_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal grp_fu_667_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal add_ln391_fu_2508_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln391_2_fu_2549_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal mul_ln392_fu_647_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln392_2_fu_2569_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal sext_ln395_1_fu_2602_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal trunc_ln389_1_fu_2593_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal shl_ln7_fu_2612_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal shl_ln396_1_fu_2624_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln396_fu_2620_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal sext_ln396_1_fu_2632_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal sub_ln396_fu_2636_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal sext_ln396_2_fu_2642_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal trunc_ln389_fu_2589_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal xa1_4_fu_2606_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal xa2_4_fu_2646_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln335_2_fu_2706_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln335_1_fu_2734_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal mul_ln364_fu_1925_p10 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component adpcm_main_mul_14s_32s_46_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (45 downto 0) );
    end component;


    component adpcm_main_mul_15s_32s_47_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component adpcm_main_mul_16s_32s_47_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component adpcm_main_mul_16s_32s_48_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component adpcm_main_mul_32s_32s_64_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component adpcm_main_mul_32s_7s_39_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (38 downto 0) );
    end component;


    component adpcm_main_mul_16s_15ns_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component adpcm_main_mul_16s_16s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component adpcm_main_mux_4_2_11_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        din3 : IN STD_LOGIC_VECTOR (10 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component adpcm_main_mux_4_2_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        din3 : IN STD_LOGIC_VECTOR (13 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component adpcm_main_mul_14s_15ns_29_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component adpcm_main_mul_14s_14s_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component adpcm_main_decode_qq6_code6_table_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    qq6_code6_table_U : component adpcm_main_decode_qq6_code6_table_ROM_AUTO_1R
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => qq6_code6_table_address0,
        ce0 => qq6_code6_table_ce0,
        q0 => qq6_code6_table_q0);

    mul_14s_32s_46_1_1_U62 : component adpcm_main_mul_14s_32s_46_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 32,
        dout_WIDTH => 46)
    port map (
        din0 => grp_fu_639_p0,
        din1 => grp_fu_639_p1,
        dout => grp_fu_639_p2);

    mul_15s_32s_47_1_1_U63 : component adpcm_main_mul_15s_32s_47_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        din0 => grp_fu_643_p0,
        din1 => grp_fu_643_p1,
        dout => grp_fu_643_p2);

    mul_15s_32s_47_1_1_U64 : component adpcm_main_mul_15s_32s_47_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        din0 => h_q0,
        din1 => accumd_q0,
        dout => mul_ln392_fu_647_p2);

    mul_16s_32s_47_1_1_U65 : component adpcm_main_mul_16s_32s_47_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 32,
        dout_WIDTH => 47)
    port map (
        din0 => grp_fu_651_p0,
        din1 => grp_fu_651_p1,
        dout => grp_fu_651_p2);

    mul_16s_32s_48_1_1_U66 : component adpcm_main_mul_16s_32s_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 32,
        dout_WIDTH => 48)
    port map (
        din0 => grp_fu_655_p0,
        din1 => grp_fu_655_p1,
        dout => grp_fu_655_p2);

    mul_32s_32s_64_1_1_U67 : component adpcm_main_mul_32s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => grp_fu_659_p0,
        din1 => grp_fu_659_p1,
        dout => grp_fu_659_p2);

    mul_32s_32s_64_1_1_U68 : component adpcm_main_mul_32s_32s_64_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => grp_fu_663_p0,
        din1 => grp_fu_663_p1,
        dout => grp_fu_663_p2);

    mul_32s_7s_39_1_1_U69 : component adpcm_main_mul_32s_7s_39_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 7,
        dout_WIDTH => 39)
    port map (
        din0 => grp_fu_667_p0,
        din1 => grp_fu_667_p1,
        dout => grp_fu_667_p2);

    mul_16s_15ns_31_1_1_U70 : component adpcm_main_mul_16s_15ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        dout_WIDTH => 31)
    port map (
        din0 => qq4_code4_table_load_reg_2818,
        din1 => mul_ln345_fu_1112_p1,
        dout => mul_ln345_fu_1112_p2);

    mul_16s_15ns_31_1_1_U71 : component adpcm_main_mul_16s_15ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        dout_WIDTH => 31)
    port map (
        din0 => qq6_code6_table_q0,
        din1 => mul_ln346_fu_1140_p1,
        dout => mul_ln346_fu_1140_p2);

    mul_16s_16s_32_1_1_U72 : component adpcm_main_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => dec_del_dltx_q0,
        din1 => mul_ln545_fu_1429_p1,
        dout => mul_ln545_fu_1429_p2);

    mux_4_2_11_1_1_U73 : component adpcm_main_mux_4_2_11_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        din2_WIDTH => 11,
        din3_WIDTH => 11,
        din4_WIDTH => 2,
        dout_WIDTH => 11)
    port map (
        din0 => ap_const_lv11_31E,
        din1 => ap_const_lv11_72A,
        din2 => ap_const_lv11_31E,
        din3 => ap_const_lv11_72A,
        din4 => lshr_ln_reg_2785,
        dout => tmp_2_fu_1713_p6);

    mux_4_2_14_1_1_U74 : component adpcm_main_mux_4_2_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        din2_WIDTH => 14,
        din3_WIDTH => 14,
        din4_WIDTH => 2,
        dout_WIDTH => 14)
    port map (
        din0 => ap_const_lv14_2310,
        din1 => ap_const_lv14_39B0,
        din2 => ap_const_lv14_1CF0,
        din3 => ap_const_lv14_650,
        din4 => lshr_ln_reg_2785,
        dout => tmp_fu_1908_p6);

    mul_14s_15ns_29_1_1_U75 : component adpcm_main_mul_14s_15ns_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 15,
        dout_WIDTH => 29)
    port map (
        din0 => tmp_fu_1908_p6,
        din1 => mul_ln364_fu_1925_p1,
        dout => mul_ln364_fu_1925_p2);

    mul_14s_14s_28_1_1_U76 : component adpcm_main_mul_14s_14s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        din0 => dec_del_dhx_q0,
        din1 => mul_ln545_2_fu_2227_p1,
        dout => mul_ln545_2_fu_2227_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    i_012_fu_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_1)) or ((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_0))))) then 
                i_012_fu_342 <= ap_const_lv4_0;
            elsif (((icmp_ln389_fu_2476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                i_012_fu_342 <= i_31_fu_2482_p2;
            end if; 
        end if;
    end process;

    i_13_fu_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln464_fu_804_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_13_fu_310 <= ap_const_lv3_0;
            elsif ((((grp_fu_694_p2 = ap_const_lv1_0) and (icmp_ln535_reg_2880 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((grp_fu_694_p2 = ap_const_lv1_0) and (icmp_ln535_reg_2880 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
                i_13_fu_310 <= grp_fu_700_p2;
            end if; 
        end if;
    end process;

    i_15_fu_350_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln389_fu_2476_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                i_15_fu_350 <= ap_const_lv4_0;
            elsif (((icmp_ln405_fu_2687_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                i_15_fu_350 <= i_33_fu_2693_p2;
            end if; 
        end if;
    end process;

    i_16_fu_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_1)) or ((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_0))))) then 
                i_16_fu_322 <= ap_const_lv3_1;
            elsif (((icmp_ln464_2_fu_1636_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                i_16_fu_322 <= i_27_fu_1651_p2;
            end if; 
        end if;
    end process;

    i_18_fu_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln535_2_fu_1980_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((icmp_ln535_2_fu_1980_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
                i_18_fu_326 <= ap_const_lv3_0;
            elsif ((((grp_fu_736_p2 = ap_const_lv1_0) and (icmp_ln535_2_reg_3011 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((grp_fu_736_p2 = ap_const_lv1_0) and (icmp_ln535_2_reg_3011 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
                i_18_fu_326 <= grp_fu_742_p2;
            end if; 
        end if;
    end process;

    i_fu_306_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_fu_306 <= ap_const_lv3_1;
            elsif (((icmp_ln464_fu_804_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_fu_306 <= i_23_fu_819_p2;
            end if; 
        end if;
    end process;

    idx198_fu_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_1)) or ((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_0))))) then 
                idx198_fu_314 <= ap_const_lv3_1;
            elsif (((icmp_ln464_2_fu_1636_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                idx198_fu_314 <= add_ln464_4_fu_1657_p2;
            end if; 
        end if;
    end process;

    idx204_fu_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_1)) or ((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_0))))) then 
                idx204_fu_330 <= ap_const_lv5_0;
            elsif (((icmp_ln389_fu_2476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                idx204_fu_330 <= add_ln335_fu_2497_p2;
            end if; 
        end if;
    end process;

    idx213_fu_346_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln389_fu_2476_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                idx213_fu_346 <= ap_const_lv5_0;
            elsif (((icmp_ln405_fu_2687_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                idx213_fu_346 <= add_ln405_fu_2718_p2;
            end if; 
        end if;
    end process;

    idx_fu_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                idx_fu_298 <= ap_const_lv3_1;
            elsif (((icmp_ln464_fu_804_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                idx_fu_298 <= add_ln464_fu_825_p2;
            end if; 
        end if;
    end process;

    reg_754_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                reg_754 <= dec_del_dltx_q1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                reg_754 <= dec_del_dltx_q0;
            end if; 
        end if;
    end process;

    reg_765_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                reg_765 <= dec_del_dhx_q1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                reg_765 <= dec_del_dhx_q0;
            end if; 
        end if;
    end process;

    xa1_2_fu_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                xa1_2_fu_338 <= sext_ln333_fu_2450_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                xa1_2_fu_338 <= xa1_5_fu_2553_p2;
            end if; 
        end if;
    end process;

    xa2_2_fu_334_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                xa2_2_fu_334 <= sext_ln333_1_fu_2459_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                xa2_2_fu_334 <= xa2_5_fu_2573_p2;
            end if; 
        end if;
    end process;

    zl_6_fu_302_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                zl_6_fu_302 <= sext_ln460_fu_792_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                zl_6_fu_302 <= zl_11_fu_884_p2;
            end if; 
        end if;
    end process;

    zl_9_fu_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                zl_9_fu_318 <= sext_ln460_2_fu_1624_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                zl_9_fu_318 <= zl_13_fu_1819_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                add_ln347_reg_2868 <= add_ln347_fu_1160_p2;
                add_ln350_reg_2874 <= add_ln350_fu_1195_p2;
                icmp_ln535_reg_2880 <= icmp_ln535_fu_1201_p2;
                sext_ln345_1_reg_2858 <= sext_ln345_1_fu_1128_p1;
                sext_ln346_1_reg_2863 <= sext_ln346_1_fu_1132_p1;
                sext_ln477_reg_2838 <= sext_ln477_fu_1085_p1;
                sext_ln479_reg_2843 <= sext_ln479_fu_1088_p1;
                trunc_ln345_2_reg_2853 <= mul_ln345_fu_1112_p2(30 downto 15);
                trunc_ln345_reg_2848 <= trunc_ln345_fu_1097_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                add_ln367_reg_3004 <= add_ln367_fu_1974_p2;
                icmp_ln535_2_reg_3011 <= icmp_ln535_2_fu_1980_p2;
                sext_ln477_2_reg_2989 <= sext_ln477_2_fu_1869_p1;
                sext_ln479_5_reg_2994 <= sext_ln479_5_fu_1891_p1;
                sext_ln543_reg_3015 <= sext_ln543_fu_1986_p1;
                trunc_ln364_1_reg_2999 <= mul_ln364_fu_1925_p2(28 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                add_ln371_reg_3081 <= add_ln371_fu_2182_p2;
                apl1_11_reg_3075 <= apl1_11_fu_2176_p2;
                apl2_8_reg_3069 <= apl2_8_fu_2132_p2;
                dec_del_bph_addr_1_reg_3028 <= zext_ln543_2_fu_2000_p1(3 - 1 downto 0);
                dec_del_bph_addr_reg_3036 <= zext_ln537_2_fu_2011_p1(3 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                add_ln379_reg_3102 <= add_ln379_fu_2416_p2;
                sub_ln378_reg_3097 <= sub_ln378_fu_2412_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                apl1_reg_2932 <= apl1_fu_1383_p2;
                apl2_reg_2926 <= apl2_fu_1339_p2;
                dec_del_bpl_addr_1_reg_2892 <= zext_ln543_fu_1207_p1(3 - 1 downto 0);
                dec_del_bpl_addr_reg_2900 <= zext_ln537_fu_1218_p1(3 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                dec_del_dhx_load_3_reg_3087 <= dec_del_dhx_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                dec_del_dhx_load_5_reg_3092 <= dec_del_dhx_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                dec_del_dltx_load_3_reg_2938 <= dec_del_dltx_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                dec_del_dltx_load_5_reg_2943 <= dec_del_dltx_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                lshr_ln_reg_2785 <= input_r(7 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                qq4_code4_table_load_reg_2818 <= qq4_code4_table_q0;
                trunc_ln15_reg_2828 <= select_ln515_fu_1036_p3(14 downto 11);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state5))) then
                reg_761 <= grp_fu_675_p2(46 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                trunc_ln405_reg_3147 <= trunc_ln405_fu_2702_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                trunc_ln522_2_reg_2961 <= select_ln624_fu_1766_p3(14 downto 11);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, icmp_ln535_reg_2880, ap_CS_fsm_state7, ap_CS_fsm_state14, icmp_ln535_2_reg_3011, ap_CS_fsm_state17, ap_CS_fsm_state24, ap_CS_fsm_state27, icmp_ln464_fu_804_p2, grp_fu_694_p2, icmp_ln464_2_fu_1636_p2, grp_fu_736_p2, icmp_ln389_fu_2476_p2, icmp_ln405_fu_2687_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln464_fu_804_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((grp_fu_694_p2 = ap_const_lv1_0) and (icmp_ln535_reg_2880 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_1)) or ((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((icmp_ln464_2_fu_1636_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((grp_fu_736_p2 = ap_const_lv1_0) and (icmp_ln535_2_reg_3011 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_1)) or ((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((icmp_ln389_fu_2476_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((icmp_ln405_fu_2687_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    accumc_address0_assign_proc : process(ap_CS_fsm_state24, ap_CS_fsm_state27, zext_ln389_fu_2491_p1, icmp_ln389_fu_2476_p2, zext_ln335_2_fu_2712_p1, icmp_ln405_fu_2687_p2, zext_ln335_1_fu_2739_p1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            accumc_address0 <= zext_ln335_1_fu_2739_p1(4 - 1 downto 0);
        elsif (((icmp_ln405_fu_2687_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            accumc_address0 <= ap_const_lv4_0;
        elsif (((icmp_ln405_fu_2687_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            accumc_address0 <= zext_ln335_2_fu_2712_p1(4 - 1 downto 0);
        elsif (((icmp_ln389_fu_2476_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            accumc_address0 <= ap_const_lv4_A;
        elsif (((icmp_ln389_fu_2476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            accumc_address0 <= zext_ln389_fu_2491_p1(4 - 1 downto 0);
        else 
            accumc_address0 <= "XXXX";
        end if; 
    end process;


    accumc_ce0_assign_proc : process(ap_CS_fsm_state24, ap_CS_fsm_state27, icmp_ln389_fu_2476_p2, icmp_ln405_fu_2687_p2, ap_CS_fsm_state28)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or ((icmp_ln405_fu_2687_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((icmp_ln389_fu_2476_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((icmp_ln405_fu_2687_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((icmp_ln389_fu_2476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
            accumc_ce0 <= ap_const_logic_1;
        else 
            accumc_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    accumc_d0_assign_proc : process(accumc_q0, sub_ln378_reg_3097, ap_CS_fsm_state27, icmp_ln405_fu_2687_p2, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            accumc_d0 <= accumc_q0;
        elsif (((icmp_ln405_fu_2687_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            accumc_d0 <= sub_ln378_reg_3097;
        else 
            accumc_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accumc_we0_assign_proc : process(ap_CS_fsm_state27, icmp_ln405_fu_2687_p2, ap_CS_fsm_state28)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or ((icmp_ln405_fu_2687_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27)))) then 
            accumc_we0 <= ap_const_logic_1;
        else 
            accumc_we0 <= ap_const_logic_0;
        end if; 
    end process;


    accumd_address0_assign_proc : process(ap_CS_fsm_state24, ap_CS_fsm_state27, zext_ln389_fu_2491_p1, icmp_ln389_fu_2476_p2, zext_ln335_2_fu_2712_p1, icmp_ln405_fu_2687_p2, zext_ln335_1_fu_2739_p1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            accumd_address0 <= zext_ln335_1_fu_2739_p1(4 - 1 downto 0);
        elsif (((icmp_ln405_fu_2687_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            accumd_address0 <= ap_const_lv4_0;
        elsif (((icmp_ln405_fu_2687_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            accumd_address0 <= zext_ln335_2_fu_2712_p1(4 - 1 downto 0);
        elsif (((icmp_ln389_fu_2476_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            accumd_address0 <= ap_const_lv4_A;
        elsif (((icmp_ln389_fu_2476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            accumd_address0 <= zext_ln389_fu_2491_p1(4 - 1 downto 0);
        else 
            accumd_address0 <= "XXXX";
        end if; 
    end process;


    accumd_ce0_assign_proc : process(ap_CS_fsm_state24, ap_CS_fsm_state27, icmp_ln389_fu_2476_p2, icmp_ln405_fu_2687_p2, ap_CS_fsm_state28)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or ((icmp_ln405_fu_2687_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((icmp_ln389_fu_2476_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((icmp_ln405_fu_2687_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((icmp_ln389_fu_2476_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
            accumd_ce0 <= ap_const_logic_1;
        else 
            accumd_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    accumd_d0_assign_proc : process(accumd_q0, add_ln379_reg_3102, ap_CS_fsm_state27, icmp_ln405_fu_2687_p2, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            accumd_d0 <= accumd_q0;
        elsif (((icmp_ln405_fu_2687_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            accumd_d0 <= add_ln379_reg_3102;
        else 
            accumd_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accumd_we0_assign_proc : process(ap_CS_fsm_state27, icmp_ln405_fu_2687_p2, ap_CS_fsm_state28)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or ((icmp_ln405_fu_2687_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27)))) then 
            accumd_we0 <= ap_const_logic_1;
        else 
            accumd_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln335_1_fu_2734_p2 <= std_logic_vector(unsigned(trunc_ln405_reg_3147) + unsigned(ap_const_lv4_A));
    add_ln335_2_fu_2706_p2 <= std_logic_vector(unsigned(trunc_ln405_fu_2702_p1) + unsigned(ap_const_lv4_9));
    add_ln335_fu_2497_p2 <= std_logic_vector(unsigned(idx204_fu_330) + unsigned(ap_const_lv5_2));
    add_ln344_fu_1091_p2 <= std_logic_vector(unsigned(reg_761) + unsigned(trunc_ln_fu_1075_p4));
    add_ln347_fu_1160_p2 <= std_logic_vector(signed(sext_ln346_2_fu_1156_p1) + signed(add_ln344_fu_1091_p2));
    add_ln350_fu_1195_p2 <= std_logic_vector(signed(sext_ln345_1_fu_1128_p1) + signed(trunc_ln_fu_1075_p4));
    add_ln354_fu_1389_p2 <= std_logic_vector(unsigned(trunc_ln345_reg_2848) + unsigned(sext_ln346_1_reg_2863));
    add_ln367_fu_1974_p2 <= std_logic_vector(signed(sext_ln364_1_fu_1941_p1) + signed(trunc_ln469_2_fu_1830_p4));
    add_ln371_fu_2182_p2 <= std_logic_vector(signed(add_ln367_reg_3004) + signed(reg_761));
    add_ln379_fu_2416_p2 <= std_logic_vector(unsigned(add_ln371_reg_3081) + unsigned(add_ln347_reg_2868));
    add_ln391_fu_2508_p2 <= std_logic_vector(unsigned(idx204_fu_330) + unsigned(ap_const_lv5_3));
    add_ln405_fu_2718_p2 <= std_logic_vector(unsigned(idx213_fu_346) + unsigned(ap_const_lv5_1F));
    add_ln464_4_fu_1657_p2 <= std_logic_vector(unsigned(idx198_fu_314) + unsigned(ap_const_lv3_1));
    add_ln464_fu_825_p2 <= std_logic_vector(unsigned(idx_fu_298) + unsigned(ap_const_lv3_1));
    add_ln512_fu_1000_p2 <= std_logic_vector(signed(sext_ln512_2_fu_996_p1) + signed(sext_ln512_fu_992_p1));
    add_ln550_2_fu_2280_p2 <= std_logic_vector(unsigned(wd3_9_fu_2270_p4) + unsigned(select_ln549_2_fu_2244_p3));
    add_ln550_fu_1482_p2 <= std_logic_vector(unsigned(wd3_6_fu_1472_p4) + unsigned(select_ln549_fu_1446_p3));
    add_ln580_5_fu_2126_p2 <= std_logic_vector(signed(sext_ln580_6_fu_2122_p1) + signed(grp_fu_722_p3));
    add_ln580_fu_1333_p2 <= std_logic_vector(signed(sext_ln580_4_fu_1329_p1) + signed(grp_fu_722_p3));
    add_ln621_fu_1730_p2 <= std_logic_vector(signed(sext_ln618_fu_1709_p1) + signed(sext_ln621_fu_1726_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state27, icmp_ln405_fu_2687_p2)
    begin
        if ((((icmp_ln405_fu_2687_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state27, icmp_ln405_fu_2687_p2)
    begin
        if (((icmp_ln405_fu_2687_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    apl1_10_fu_1600_p3 <= 
        apl1_9_fu_1584_p2 when (icmp_ln609_fu_1594_p2(0) = '1') else 
        trunc_ln595_fu_1580_p1;
    apl1_11_fu_2176_p2 <= std_logic_vector(unsigned(select_ln599_2_fu_2168_p3) + unsigned(sext_ln599_2_fu_2164_p1));
    apl1_12_fu_2371_p3 <= 
        zext_ln595_5_fu_2358_p1 when (icmp_ln607_2_fu_2366_p2(0) = '1') else 
        apl1_11_reg_3075;
    apl1_13_fu_2382_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(zext_ln595_6_fu_2362_p1));
    apl1_14_fu_2398_p3 <= 
        apl1_13_fu_2382_p2 when (icmp_ln609_2_fu_2392_p2(0) = '1') else 
        trunc_ln595_2_fu_2378_p1;
    apl1_8_fu_1573_p3 <= 
        zext_ln595_fu_1560_p1 when (icmp_ln607_fu_1568_p2(0) = '1') else 
        apl1_reg_2932;
    apl1_9_fu_1584_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(zext_ln595_4_fu_1564_p1));
    apl1_fu_1383_p2 <= std_logic_vector(unsigned(select_ln599_fu_1375_p3) + unsigned(sext_ln599_fu_1371_p1));
    apl2_10_fu_2338_p3 <= 
        ap_const_lv15_5000 when (icmp_ln585_2_fu_2332_p2(0) = '1') else 
        trunc_ln567_2_fu_2328_p1;
    apl2_6_fu_1523_p3 <= 
        ap_const_lv17_3000 when (icmp_ln583_fu_1518_p2(0) = '1') else 
        apl2_reg_2926;
    apl2_7_fu_1540_p3 <= 
        ap_const_lv15_5000 when (icmp_ln585_fu_1534_p2(0) = '1') else 
        trunc_ln567_fu_1530_p1;
    apl2_8_fu_2132_p2 <= std_logic_vector(unsigned(add_ln580_5_fu_2126_p2) + unsigned(sext_ln574_5_fu_2087_p1));
    apl2_9_fu_2321_p3 <= 
        ap_const_lv17_3000 when (icmp_ln583_2_fu_2316_p2(0) = '1') else 
        apl2_8_reg_3069;
    apl2_fu_1339_p2 <= std_logic_vector(unsigned(add_ln580_fu_1333_p2) + unsigned(sext_ln574_4_fu_1294_p1));

    dec_ah1_o_assign_proc : process(dec_ah1_i, ap_CS_fsm_state20, apl1_14_fu_2398_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            dec_ah1_o <= apl1_14_fu_2398_p3;
        else 
            dec_ah1_o <= dec_ah1_i;
        end if; 
    end process;


    dec_ah1_o_ap_vld_assign_proc : process(ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            dec_ah1_o_ap_vld <= ap_const_logic_1;
        else 
            dec_ah1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_ah2_o_assign_proc : process(dec_ah2_i, ap_CS_fsm_state20, apl2_10_fu_2338_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            dec_ah2_o <= apl2_10_fu_2338_p3;
        else 
            dec_ah2_o <= dec_ah2_i;
        end if; 
    end process;


    dec_ah2_o_ap_vld_assign_proc : process(ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            dec_ah2_o_ap_vld <= ap_const_logic_1;
        else 
            dec_ah2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_al1_o_assign_proc : process(dec_al1_i, ap_CS_fsm_state10, apl1_10_fu_1600_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dec_al1_o <= apl1_10_fu_1600_p3;
        else 
            dec_al1_o <= dec_al1_i;
        end if; 
    end process;


    dec_al1_o_ap_vld_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dec_al1_o_ap_vld <= ap_const_logic_1;
        else 
            dec_al1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_al2_o_assign_proc : process(dec_al2_i, ap_CS_fsm_state10, apl2_7_fu_1540_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dec_al2_o <= apl2_7_fu_1540_p3;
        else 
            dec_al2_o <= dec_al2_i;
        end if; 
    end process;


    dec_al2_o_ap_vld_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dec_al2_o_ap_vld <= ap_const_logic_1;
        else 
            dec_al2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bph_address0_assign_proc : process(ap_CS_fsm_state14, icmp_ln535_2_reg_3011, ap_CS_fsm_state17, dec_del_bph_addr_1_reg_3028, dec_del_bph_addr_reg_3036, zext_ln460_2_fu_1645_p1, zext_ln543_2_fu_2000_p1, grp_fu_736_p2, zext_ln537_2_fu_2011_p1, ap_CS_fsm_state12, ap_CS_fsm_state18, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            dec_del_bph_address0 <= dec_del_bph_addr_reg_3036;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            dec_del_bph_address0 <= dec_del_bph_addr_1_reg_3028;
        elsif (((grp_fu_736_p2 = ap_const_lv1_0) and (icmp_ln535_2_reg_3011 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            dec_del_bph_address0 <= zext_ln537_2_fu_2011_p1(3 - 1 downto 0);
        elsif (((grp_fu_736_p2 = ap_const_lv1_0) and (icmp_ln535_2_reg_3011 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            dec_del_bph_address0 <= zext_ln543_2_fu_2000_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            dec_del_bph_address0 <= zext_ln460_2_fu_1645_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dec_del_bph_address0 <= ap_const_lv3_0;
        else 
            dec_del_bph_address0 <= "XXX";
        end if; 
    end process;


    dec_del_bph_ce0_assign_proc : process(ap_CS_fsm_state14, icmp_ln535_2_reg_3011, ap_CS_fsm_state17, grp_fu_736_p2, ap_CS_fsm_state12, ap_CS_fsm_state18, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14) or ((grp_fu_736_p2 = ap_const_lv1_0) and (icmp_ln535_2_reg_3011 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((grp_fu_736_p2 = ap_const_lv1_0) and (icmp_ln535_2_reg_3011 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            dec_del_bph_ce0 <= ap_const_logic_1;
        else 
            dec_del_bph_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bph_d0_assign_proc : process(ap_CS_fsm_state18, add_ln550_2_fu_2280_p2, ap_CS_fsm_state19, sub_ln539_2_fu_2299_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            dec_del_bph_d0 <= sub_ln539_2_fu_2299_p2(39 downto 8);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            dec_del_bph_d0 <= add_ln550_2_fu_2280_p2;
        else 
            dec_del_bph_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_del_bph_we0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            dec_del_bph_we0 <= ap_const_logic_1;
        else 
            dec_del_bph_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bpl_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, icmp_ln535_reg_2880, ap_CS_fsm_state7, dec_del_bpl_addr_1_reg_2892, dec_del_bpl_addr_reg_2900, zext_ln460_fu_813_p1, zext_ln543_fu_1207_p1, grp_fu_694_p2, zext_ln537_fu_1218_p1, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            dec_del_bpl_address0 <= dec_del_bpl_addr_reg_2900;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dec_del_bpl_address0 <= dec_del_bpl_addr_1_reg_2892;
        elsif (((grp_fu_694_p2 = ap_const_lv1_0) and (icmp_ln535_reg_2880 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            dec_del_bpl_address0 <= zext_ln537_fu_1218_p1(3 - 1 downto 0);
        elsif (((grp_fu_694_p2 = ap_const_lv1_0) and (icmp_ln535_reg_2880 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            dec_del_bpl_address0 <= zext_ln543_fu_1207_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            dec_del_bpl_address0 <= zext_ln460_fu_813_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            dec_del_bpl_address0 <= ap_const_lv3_0;
        else 
            dec_del_bpl_address0 <= "XXX";
        end if; 
    end process;


    dec_del_bpl_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3, icmp_ln535_reg_2880, ap_CS_fsm_state7, grp_fu_694_p2, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((grp_fu_694_p2 = ap_const_lv1_0) and (icmp_ln535_reg_2880 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((grp_fu_694_p2 = ap_const_lv1_0) and (icmp_ln535_reg_2880 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            dec_del_bpl_ce0 <= ap_const_logic_1;
        else 
            dec_del_bpl_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_bpl_d0_assign_proc : process(ap_CS_fsm_state8, add_ln550_fu_1482_p2, ap_CS_fsm_state9, sub_ln539_fu_1501_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            dec_del_bpl_d0 <= sub_ln539_fu_1501_p2(39 downto 8);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dec_del_bpl_d0 <= add_ln550_fu_1482_p2;
        else 
            dec_del_bpl_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_del_bpl_we0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            dec_del_bpl_we0 <= ap_const_logic_1;
        else 
            dec_del_bpl_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_address0_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state14, icmp_ln535_2_reg_3011, ap_CS_fsm_state17, zext_ln460_2_fu_1645_p1, zext_ln543_2_fu_2000_p1, grp_fu_736_p2, ap_CS_fsm_state12, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            dec_del_dhx_address0 <= ap_const_lv3_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            dec_del_dhx_address0 <= ap_const_lv3_5;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            dec_del_dhx_address0 <= ap_const_lv3_2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_1)) or ((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_0))))) then 
            dec_del_dhx_address0 <= ap_const_lv3_3;
        elsif (((grp_fu_736_p2 = ap_const_lv1_0) and (icmp_ln535_2_reg_3011 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            dec_del_dhx_address0 <= zext_ln543_2_fu_2000_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            dec_del_dhx_address0 <= zext_ln460_2_fu_1645_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dec_del_dhx_address0 <= ap_const_lv3_0;
        else 
            dec_del_dhx_address0 <= "XXX";
        end if; 
    end process;


    dec_del_dhx_address1_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state17, ap_CS_fsm_state23, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            dec_del_dhx_address1 <= ap_const_lv3_2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            dec_del_dhx_address1 <= ap_const_lv3_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            dec_del_dhx_address1 <= ap_const_lv3_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            dec_del_dhx_address1 <= ap_const_lv3_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            dec_del_dhx_address1 <= ap_const_lv3_4;
        else 
            dec_del_dhx_address1 <= "XXX";
        end if; 
    end process;


    dec_del_dhx_ce0_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state14, icmp_ln535_2_reg_3011, ap_CS_fsm_state17, grp_fu_736_p2, ap_CS_fsm_state12, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or ((grp_fu_736_p2 = ap_const_lv1_0) and (icmp_ln535_2_reg_3011 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_1)) or ((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_0)))))) then 
            dec_del_dhx_ce0 <= ap_const_logic_1;
        else 
            dec_del_dhx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_ce1_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state17, ap_CS_fsm_state23, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            dec_del_dhx_ce1 <= ap_const_logic_1;
        else 
            dec_del_dhx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_d0_assign_proc : process(reg_765, ap_CS_fsm_state21, dec_del_dhx_load_3_reg_3087, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            dec_del_dhx_d0 <= dec_del_dhx_load_3_reg_3087;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            dec_del_dhx_d0 <= reg_765;
        else 
            dec_del_dhx_d0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_del_dhx_d1_assign_proc : process(reg_765, ap_CS_fsm_state20, ap_CS_fsm_state21, trunc_ln364_1_reg_2999, dec_del_dhx_load_5_reg_3092, ap_CS_fsm_state23, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            dec_del_dhx_d1 <= dec_del_dhx_load_5_reg_3092;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            dec_del_dhx_d1 <= trunc_ln364_1_reg_2999;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            dec_del_dhx_d1 <= reg_765;
        else 
            dec_del_dhx_d1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_del_dhx_we0_assign_proc : process(ap_CS_fsm_state21, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            dec_del_dhx_we0 <= ap_const_logic_1;
        else 
            dec_del_dhx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dhx_we1_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            dec_del_dhx_we1 <= ap_const_logic_1;
        else 
            dec_del_dhx_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state3, icmp_ln535_reg_2880, ap_CS_fsm_state7, zext_ln460_fu_813_p1, zext_ln543_fu_1207_p1, grp_fu_694_p2, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dec_del_dltx_address0 <= ap_const_lv3_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            dec_del_dltx_address0 <= ap_const_lv3_5;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dec_del_dltx_address0 <= ap_const_lv3_2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_1)) or ((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_0))))) then 
            dec_del_dltx_address0 <= ap_const_lv3_3;
        elsif (((grp_fu_694_p2 = ap_const_lv1_0) and (icmp_ln535_reg_2880 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            dec_del_dltx_address0 <= zext_ln543_fu_1207_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            dec_del_dltx_address0 <= zext_ln460_fu_813_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            dec_del_dltx_address0 <= ap_const_lv3_0;
        else 
            dec_del_dltx_address0 <= "XXX";
        end if; 
    end process;


    dec_del_dltx_address1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            dec_del_dltx_address1 <= ap_const_lv3_2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dec_del_dltx_address1 <= ap_const_lv3_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            dec_del_dltx_address1 <= ap_const_lv3_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dec_del_dltx_address1 <= ap_const_lv3_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            dec_del_dltx_address1 <= ap_const_lv3_4;
        else 
            dec_del_dltx_address1 <= "XXX";
        end if; 
    end process;


    dec_del_dltx_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state3, icmp_ln535_reg_2880, ap_CS_fsm_state7, grp_fu_694_p2, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((grp_fu_694_p2 = ap_const_lv1_0) and (icmp_ln535_reg_2880 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_1)) or ((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_0)))))) then 
            dec_del_dltx_ce0 <= ap_const_logic_1;
        else 
            dec_del_dltx_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_ce1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            dec_del_dltx_ce1 <= ap_const_logic_1;
        else 
            dec_del_dltx_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_d0_assign_proc : process(reg_754, ap_CS_fsm_state11, dec_del_dltx_load_3_reg_2938, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dec_del_dltx_d0 <= dec_del_dltx_load_3_reg_2938;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            dec_del_dltx_d0 <= reg_754;
        else 
            dec_del_dltx_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_del_dltx_d1_assign_proc : process(reg_754, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, trunc_ln345_2_reg_2853, dec_del_dltx_load_5_reg_2943, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            dec_del_dltx_d1 <= dec_del_dltx_load_5_reg_2943;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            dec_del_dltx_d1 <= trunc_ln345_2_reg_2853;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            dec_del_dltx_d1 <= reg_754;
        else 
            dec_del_dltx_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dec_del_dltx_we0_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            dec_del_dltx_we0 <= ap_const_logic_1;
        else 
            dec_del_dltx_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dec_del_dltx_we1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            dec_del_dltx_we1 <= ap_const_logic_1;
        else 
            dec_del_dltx_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dec_deth_o_assign_proc : process(dec_deth_i, ap_CS_fsm_state16, shl_ln526_2_fu_1960_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            dec_deth_o <= shl_ln526_2_fu_1960_p3;
        else 
            dec_deth_o <= dec_deth_i;
        end if; 
    end process;


    dec_deth_o_ap_vld_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            dec_deth_o_ap_vld <= ap_const_logic_1;
        else 
            dec_deth_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_detl_o_assign_proc : process(dec_detl_i, ap_CS_fsm_state6, shl_ln9_fu_1181_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dec_detl_o <= shl_ln9_fu_1181_p3;
        else 
            dec_detl_o <= dec_detl_i;
        end if; 
    end process;


    dec_detl_o_ap_vld_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dec_detl_o_ap_vld <= ap_const_logic_1;
        else 
            dec_detl_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_nbh_o_assign_proc : process(dec_nbh_i, ap_CS_fsm_state14, icmp_ln464_2_fu_1636_p2, select_ln624_fu_1766_p3)
    begin
        if (((icmp_ln464_2_fu_1636_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            dec_nbh_o <= select_ln624_fu_1766_p3;
        else 
            dec_nbh_o <= dec_nbh_i;
        end if; 
    end process;


    dec_nbh_o_ap_vld_assign_proc : process(ap_CS_fsm_state14, icmp_ln464_2_fu_1636_p2)
    begin
        if (((icmp_ln464_2_fu_1636_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            dec_nbh_o_ap_vld <= ap_const_logic_1;
        else 
            dec_nbh_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_nbl_o_assign_proc : process(dec_nbl_i, ap_CS_fsm_state5, select_ln515_fu_1036_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dec_nbl_o <= select_ln515_fu_1036_p3;
        else 
            dec_nbl_o <= dec_nbl_i;
        end if; 
    end process;


    dec_nbl_o_ap_vld_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dec_nbl_o_ap_vld <= ap_const_logic_1;
        else 
            dec_nbl_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_ph1_o_assign_proc : process(dec_ph1_i, add_ln367_reg_3004, icmp_ln535_2_reg_3011, ap_CS_fsm_state17, grp_fu_736_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_1)) or ((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_0))))) then 
            dec_ph1_o <= add_ln367_reg_3004;
        else 
            dec_ph1_o <= dec_ph1_i;
        end if; 
    end process;


    dec_ph1_o_ap_vld_assign_proc : process(icmp_ln535_2_reg_3011, ap_CS_fsm_state17, grp_fu_736_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_1)) or ((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_0))))) then 
            dec_ph1_o_ap_vld <= ap_const_logic_1;
        else 
            dec_ph1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_ph2_o_assign_proc : process(dec_ph1_i, dec_ph2_i, icmp_ln535_2_reg_3011, ap_CS_fsm_state17, grp_fu_736_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_1)) or ((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_0))))) then 
            dec_ph2_o <= dec_ph1_i;
        else 
            dec_ph2_o <= dec_ph2_i;
        end if; 
    end process;


    dec_ph2_o_ap_vld_assign_proc : process(icmp_ln535_2_reg_3011, ap_CS_fsm_state17, grp_fu_736_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_1)) or ((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_0))))) then 
            dec_ph2_o_ap_vld <= ap_const_logic_1;
        else 
            dec_ph2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_plt1_o_assign_proc : process(dec_plt1_i, add_ln350_reg_2874, icmp_ln535_reg_2880, ap_CS_fsm_state7, grp_fu_694_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_1)) or ((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_0))))) then 
            dec_plt1_o <= add_ln350_reg_2874;
        else 
            dec_plt1_o <= dec_plt1_i;
        end if; 
    end process;


    dec_plt1_o_ap_vld_assign_proc : process(icmp_ln535_reg_2880, ap_CS_fsm_state7, grp_fu_694_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_1)) or ((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_0))))) then 
            dec_plt1_o_ap_vld <= ap_const_logic_1;
        else 
            dec_plt1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_plt2_o_assign_proc : process(dec_plt1_i, dec_plt2_i, icmp_ln535_reg_2880, ap_CS_fsm_state7, grp_fu_694_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_1)) or ((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_0))))) then 
            dec_plt2_o <= dec_plt1_i;
        else 
            dec_plt2_o <= dec_plt2_i;
        end if; 
    end process;


    dec_plt2_o_ap_vld_assign_proc : process(icmp_ln535_reg_2880, ap_CS_fsm_state7, grp_fu_694_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_1)) or ((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_0))))) then 
            dec_plt2_o_ap_vld <= ap_const_logic_1;
        else 
            dec_plt2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_rh1_o_assign_proc : process(dec_rh1_i, icmp_ln535_2_reg_3011, ap_CS_fsm_state17, grp_fu_736_p2, trunc_ln372_fu_2187_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_1)) or ((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_0))))) then 
            dec_rh1_o <= trunc_ln372_fu_2187_p1;
        else 
            dec_rh1_o <= dec_rh1_i;
        end if; 
    end process;


    dec_rh1_o_ap_vld_assign_proc : process(icmp_ln535_2_reg_3011, ap_CS_fsm_state17, grp_fu_736_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_1)) or ((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_0))))) then 
            dec_rh1_o_ap_vld <= ap_const_logic_1;
        else 
            dec_rh1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_rh2_o_assign_proc : process(dec_rh1_i, dec_rh2_i, icmp_ln535_2_reg_3011, ap_CS_fsm_state17, grp_fu_736_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_1)) or ((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_0))))) then 
            dec_rh2_o <= dec_rh1_i;
        else 
            dec_rh2_o <= dec_rh2_i;
        end if; 
    end process;


    dec_rh2_o_ap_vld_assign_proc : process(icmp_ln535_2_reg_3011, ap_CS_fsm_state17, grp_fu_736_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_1)) or ((grp_fu_736_p2 = ap_const_lv1_1) and (icmp_ln535_2_reg_3011 = ap_const_lv1_0))))) then 
            dec_rh2_o_ap_vld <= ap_const_logic_1;
        else 
            dec_rh2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_rlt1_o_assign_proc : process(dec_rlt1_i, icmp_ln535_reg_2880, ap_CS_fsm_state7, grp_fu_694_p2, add_ln354_fu_1389_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_1)) or ((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_0))))) then 
            dec_rlt1_o <= add_ln354_fu_1389_p2;
        else 
            dec_rlt1_o <= dec_rlt1_i;
        end if; 
    end process;


    dec_rlt1_o_ap_vld_assign_proc : process(icmp_ln535_reg_2880, ap_CS_fsm_state7, grp_fu_694_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_1)) or ((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_0))))) then 
            dec_rlt1_o_ap_vld <= ap_const_logic_1;
        else 
            dec_rlt1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    dec_rlt2_o_assign_proc : process(dec_rlt1_i, dec_rlt2_i, icmp_ln535_reg_2880, ap_CS_fsm_state7, grp_fu_694_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_1)) or ((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_0))))) then 
            dec_rlt2_o <= dec_rlt1_i;
        else 
            dec_rlt2_o <= dec_rlt2_i;
        end if; 
    end process;


    dec_rlt2_o_ap_vld_assign_proc : process(icmp_ln535_reg_2880, ap_CS_fsm_state7, grp_fu_694_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_1)) or ((grp_fu_694_p2 = ap_const_lv1_1) and (icmp_ln535_reg_2880 = ap_const_lv1_0))))) then 
            dec_rlt2_o_ap_vld <= ap_const_logic_1;
        else 
            dec_rlt2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_639_p0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, sext_ln461_6_fu_1619_p1, sext_ln466_9_fu_1810_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_639_p0 <= sext_ln466_9_fu_1810_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_639_p0 <= sext_ln461_6_fu_1619_p1(14 - 1 downto 0);
        else 
            grp_fu_639_p0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_639_p1_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, sext_ln461_5_fu_1614_p1, sext_ln466_8_fu_1805_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_639_p1 <= sext_ln466_8_fu_1805_p1(32 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_639_p1 <= sext_ln461_5_fu_1614_p1(32 - 1 downto 0);
        else 
            grp_fu_639_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_643_p0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state16, ap_CS_fsm_state25, sext_ln479_4_fu_942_p1, sext_ln479_6_fu_1895_p1, sext_ln391_1_fu_2544_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fu_643_p0 <= sext_ln391_1_fu_2544_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_643_p0 <= sext_ln479_6_fu_1895_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_643_p0 <= sext_ln479_4_fu_942_p1(15 - 1 downto 0);
        else 
            grp_fu_643_p0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_643_p1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state16, ap_CS_fsm_state25, sext_ln475_7_fu_937_p1, sext_ln475_10_fu_1886_p1, sext_ln391_fu_2539_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fu_643_p1 <= sext_ln391_fu_2539_p1(32 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_643_p1 <= sext_ln475_10_fu_1886_p1(32 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_643_p1 <= sext_ln475_7_fu_937_p1(32 - 1 downto 0);
        else 
            grp_fu_643_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_651_p0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state16, sext_ln475_6_fu_924_p1, sext_ln475_9_fu_1873_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_651_p0 <= sext_ln475_9_fu_1873_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_651_p0 <= sext_ln475_6_fu_924_p1(16 - 1 downto 0);
        else 
            grp_fu_651_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_651_p1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state16, sext_ln475_fu_919_p1, sext_ln475_8_fu_1864_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_651_p1 <= sext_ln475_8_fu_1864_p1(32 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_651_p1 <= sext_ln475_fu_919_p1(32 - 1 downto 0);
        else 
            grp_fu_651_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_655_p0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, sext_ln461_4_fu_787_p1, sext_ln466_6_fu_875_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_655_p0 <= sext_ln466_6_fu_875_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_655_p0 <= sext_ln461_4_fu_787_p1(16 - 1 downto 0);
        else 
            grp_fu_655_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_655_p1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, sext_ln461_fu_782_p1, sext_ln466_fu_870_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_655_p1 <= sext_ln466_fu_870_p1(32 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_655_p1 <= sext_ln461_fu_782_p1(32 - 1 downto 0);
        else 
            grp_fu_655_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_659_p0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state17, sext_ln570_4_fu_1252_p1, sext_ln570_6_fu_2045_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_659_p0 <= sext_ln570_6_fu_2045_p1(32 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_659_p0 <= sext_ln570_4_fu_1252_p1(32 - 1 downto 0);
        else 
            grp_fu_659_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_659_p1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state17, sext_ln570_fu_1247_p1, sext_ln570_5_fu_2040_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_659_p1 <= sext_ln570_5_fu_2040_p1(32 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_659_p1 <= sext_ln570_fu_1247_p1(32 - 1 downto 0);
        else 
            grp_fu_659_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_663_p0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state17, sext_ln574_fu_1298_p1, sext_ln574_2_fu_2091_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_663_p0 <= sext_ln574_2_fu_2091_p1(32 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_663_p0 <= sext_ln574_fu_1298_p1(32 - 1 downto 0);
        else 
            grp_fu_663_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_663_p1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state17, sext_ln570_fu_1247_p1, sext_ln570_5_fu_2040_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_663_p1 <= sext_ln570_5_fu_2040_p1(32 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_663_p1 <= sext_ln570_fu_1247_p1(32 - 1 downto 0);
        else 
            grp_fu_663_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_667_p0_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state26, sext_ln386_fu_2454_p1, sext_ln395_fu_2597_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_667_p0 <= sext_ln395_fu_2597_p1(32 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            grp_fu_667_p0 <= sext_ln386_fu_2454_p1(32 - 1 downto 0);
        else 
            grp_fu_667_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_667_p1 <= ap_const_lv39_7FFFFFFFD4(7 - 1 downto 0);
    grp_fu_675_p2 <= std_logic_vector(unsigned(grp_fu_643_p2) + unsigned(grp_fu_651_p2));
    grp_fu_694_p2 <= "1" when (i_13_fu_310 = ap_const_lv3_6) else "0";
    grp_fu_700_p2 <= std_logic_vector(unsigned(i_13_fu_310) + unsigned(ap_const_lv3_1));
    grp_fu_706_p3 <= grp_fu_659_p2(63 downto 63);
    grp_fu_714_p3 <= grp_fu_663_p2(63 downto 63);
    grp_fu_722_p3 <= 
        ap_const_lv17_1FF80 when (grp_fu_714_p3(0) = '1') else 
        ap_const_lv17_80;
    grp_fu_736_p2 <= "1" when (i_18_fu_326 = ap_const_lv3_6) else "0";
    grp_fu_742_p2 <= std_logic_vector(unsigned(i_18_fu_326) + unsigned(ap_const_lv3_1));
    h_address0 <= zext_ln391_fu_2514_p1(5 - 1 downto 0);
    h_address1 <= zext_ln335_fu_2503_p1(5 - 1 downto 0);

    h_ce0_assign_proc : process(ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            h_ce0 <= ap_const_logic_1;
        else 
            h_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    h_ce1_assign_proc : process(ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            h_ce1 <= ap_const_logic_1;
        else 
            h_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    i_23_fu_819_p2 <= std_logic_vector(unsigned(i_fu_306) + unsigned(ap_const_lv3_1));
    i_27_fu_1651_p2 <= std_logic_vector(unsigned(i_16_fu_322) + unsigned(ap_const_lv3_1));
    i_31_fu_2482_p2 <= std_logic_vector(unsigned(i_012_fu_342) + unsigned(ap_const_lv4_1));
    i_33_fu_2693_p2 <= std_logic_vector(unsigned(i_15_fu_350) + unsigned(ap_const_lv4_1));
    icmp_ln389_fu_2476_p2 <= "1" when (i_012_fu_342 = ap_const_lv4_A) else "0";
    icmp_ln405_fu_2687_p2 <= "1" when (i_15_fu_350 = ap_const_lv4_A) else "0";
    icmp_ln464_2_fu_1636_p2 <= "1" when (i_16_fu_322 = ap_const_lv3_6) else "0";
    icmp_ln464_fu_804_p2 <= "1" when (i_fu_306 = ap_const_lv3_6) else "0";
    icmp_ln515_fu_1030_p2 <= "1" when (unsigned(select_ln513_fu_1018_p3) > unsigned(ap_const_lv17_4800)) else "0";
    icmp_ln535_2_fu_1980_p2 <= "1" when (trunc_ln364_1_fu_1931_p4 = ap_const_lv14_0) else "0";
    icmp_ln535_fu_1201_p2 <= "1" when (trunc_ln345_2_fu_1118_p4 = ap_const_lv16_0) else "0";
    icmp_ln583_2_fu_2316_p2 <= "1" when (signed(apl2_8_reg_3069) > signed(ap_const_lv17_3000)) else "0";
    icmp_ln583_fu_1518_p2 <= "1" when (signed(apl2_reg_2926) > signed(ap_const_lv17_3000)) else "0";
    icmp_ln585_2_fu_2332_p2 <= "1" when (signed(apl2_9_fu_2321_p3) < signed(ap_const_lv17_1D000)) else "0";
    icmp_ln585_fu_1534_p2 <= "1" when (signed(apl2_6_fu_1523_p3) < signed(ap_const_lv17_1D000)) else "0";
    icmp_ln607_2_fu_2366_p2 <= "1" when (signed(apl1_11_reg_3075) > signed(zext_ln595_5_fu_2358_p1)) else "0";
    icmp_ln607_fu_1568_p2 <= "1" when (signed(apl1_reg_2932) > signed(zext_ln595_fu_1560_p1)) else "0";
    icmp_ln609_2_fu_2392_p2 <= "1" when (signed(apl1_12_fu_2371_p3) < signed(sext_ln609_2_fu_2388_p1)) else "0";
    icmp_ln609_fu_1594_p2 <= "1" when (signed(apl1_8_fu_1573_p3) < signed(sext_ln609_fu_1590_p1)) else "0";
    icmp_ln624_fu_1760_p2 <= "1" when (unsigned(select_ln622_fu_1748_p3) > unsigned(ap_const_lv17_5800)) else "0";

    ilb_table_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state14, zext_ln525_fu_1070_p1, zext_ln525_2_fu_1800_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ilb_table_address0 <= zext_ln525_2_fu_1800_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ilb_table_address0 <= zext_ln525_fu_1070_p1(5 - 1 downto 0);
        else 
            ilb_table_address0 <= "XXXXX";
        end if; 
    end process;


    ilb_table_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ilb_table_ce0 <= ap_const_logic_1;
        else 
            ilb_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln345_fu_1112_p1 <= zext_ln345_1_fu_1105_p1(15 - 1 downto 0);
    mul_ln346_fu_1140_p1 <= zext_ln345_1_fu_1105_p1(15 - 1 downto 0);
    mul_ln364_fu_1925_p1 <= mul_ln364_fu_1925_p10(15 - 1 downto 0);
    mul_ln364_fu_1925_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dec_deth_i),29));
    mul_ln545_2_fu_2227_p1 <= sext_ln543_reg_3015(14 - 1 downto 0);
    mul_ln545_fu_1429_p1 <= sext_ln345_1_reg_2858(16 - 1 downto 0);
    pl2_2_fu_1878_p3 <= (dec_rh2_i & ap_const_lv1_0);
    pl2_fu_929_p3 <= (dec_rlt2_i & ap_const_lv1_0);
    pl_5_fu_1856_p3 <= (dec_rh1_i & ap_const_lv1_0);
    pl_fu_911_p3 <= (dec_rlt1_i & ap_const_lv1_0);
    qq4_code4_table_address0 <= zext_ln345_fu_859_p1(4 - 1 downto 0);

    qq4_code4_table_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            qq4_code4_table_ce0 <= ap_const_logic_1;
        else 
            qq4_code4_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    qq6_code6_table_address0 <= zext_ln346_fu_951_p1(6 - 1 downto 0);

    qq6_code6_table_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            qq6_code6_table_ce0 <= ap_const_logic_1;
        else 
            qq6_code6_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln513_fu_1018_p3 <= 
        ap_const_lv17_0 when (tmp_16_fu_1010_p3(0) = '1') else 
        add_ln512_fu_1000_p2;
    select_ln515_fu_1036_p3 <= 
        ap_const_lv15_4800 when (icmp_ln515_fu_1030_p2(0) = '1') else 
        trunc_ln509_fu_1026_p1;
    select_ln549_2_fu_2244_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_21_fu_2236_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln549_fu_1446_p3 <= 
        ap_const_lv32_FFFFFF80 when (tmp_17_fu_1438_p3(0) = '1') else 
        ap_const_lv32_80;
    select_ln570_2_fu_2079_p3 <= 
        sext_ln572_2_fu_2065_p1 when (grp_fu_706_p3(0) = '1') else 
        tmp_3_fu_2069_p4;
    select_ln570_fu_1286_p3 <= 
        sext_ln572_fu_1272_p1 when (grp_fu_706_p3(0) = '1') else 
        tmp_s_fu_1276_p4;
    select_ln599_2_fu_2168_p3 <= 
        ap_const_lv18_3FF40 when (grp_fu_706_p3(0) = '1') else 
        ap_const_lv18_C0;
    select_ln599_fu_1375_p3 <= 
        ap_const_lv18_3FF40 when (grp_fu_706_p3(0) = '1') else 
        ap_const_lv18_C0;
    select_ln622_fu_1748_p3 <= 
        ap_const_lv17_0 when (tmp_20_fu_1740_p3(0) = '1') else 
        add_ln621_fu_1730_p2;
    select_ln624_fu_1766_p3 <= 
        ap_const_lv15_5800 when (icmp_ln624_fu_1760_p2(0) = '1') else 
        trunc_ln617_fu_1756_p1;
        sext_ln333_1_fu_2459_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_667_p2),50));

        sext_ln333_fu_2450_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xa1_fu_2444_p2),50));

        sext_ln345_1_fu_1128_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln345_2_fu_1118_p4),32));

        sext_ln346_1_fu_1132_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln345_2_fu_1118_p4),31));

        sext_ln346_2_fu_1156_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln13_fu_1146_p4),32));

        sext_ln364_1_fu_1941_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln364_1_fu_1931_p4),32));

        sext_ln385_1_fu_2440_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln385_1_fu_2432_p3),37));

        sext_ln385_fu_2428_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln6_fu_2420_p3),37));

        sext_ln386_fu_2454_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln379_fu_2416_p2),39));

        sext_ln391_1_fu_2544_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(h_q1),47));

        sext_ln391_2_fu_2549_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_643_p2),50));

        sext_ln391_fu_2539_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(accumc_q0),47));

        sext_ln392_2_fu_2569_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln392_fu_647_p2),50));

        sext_ln395_1_fu_2602_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_667_p2),46));

        sext_ln395_fu_2597_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(accumc_q0),39));

        sext_ln396_1_fu_2632_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln396_1_fu_2624_p3),37));

        sext_ln396_2_fu_2642_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln396_fu_2636_p2),46));

        sext_ln396_fu_2620_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln7_fu_2612_p3),37));

        sext_ln460_2_fu_1624_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_639_p2),48));

        sext_ln460_fu_792_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_655_p2),50));

    sext_ln461_4_fu_787_p0 <= dec_del_dltx_q0;
        sext_ln461_4_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln461_4_fu_787_p0),48));

        sext_ln461_5_fu_1614_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_del_bph_q0),46));

    sext_ln461_6_fu_1619_p0 <= dec_del_dhx_q0;
        sext_ln461_6_fu_1619_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln461_6_fu_1619_p0),46));

        sext_ln461_fu_782_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_del_bpl_q0),48));

        sext_ln466_10_fu_1815_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_639_p2),48));

        sext_ln466_6_fu_875_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_del_dltx_q0),48));

        sext_ln466_7_fu_880_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_655_p2),50));

        sext_ln466_8_fu_1805_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_del_bph_q0),46));

        sext_ln466_9_fu_1810_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_del_dhx_q0),46));

        sext_ln466_fu_870_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dec_del_bpl_q0),48));

        sext_ln475_10_fu_1886_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pl2_2_fu_1878_p3),47));

    sext_ln475_6_fu_924_p0 <= dec_al1_i;
        sext_ln475_6_fu_924_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln475_6_fu_924_p0),47));

        sext_ln475_7_fu_937_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pl2_fu_929_p3),47));

        sext_ln475_8_fu_1864_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pl_5_fu_1856_p3),47));

    sext_ln475_9_fu_1873_p0 <= dec_ah1_i;
        sext_ln475_9_fu_1873_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln475_9_fu_1873_p0),47));

        sext_ln475_fu_919_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pl_fu_911_p3),47));

    sext_ln477_2_fu_1869_p0 <= dec_ah1_i;
        sext_ln477_2_fu_1869_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln477_2_fu_1869_p0),25));

    sext_ln477_fu_1085_p0 <= dec_al1_i;
        sext_ln477_fu_1085_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln477_fu_1085_p0),25));

    sext_ln479_4_fu_942_p0 <= dec_al2_i;
        sext_ln479_4_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln479_4_fu_942_p0),47));

    sext_ln479_5_fu_1891_p0 <= dec_ah2_i;
        sext_ln479_5_fu_1891_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln479_5_fu_1891_p0),23));

    sext_ln479_6_fu_1895_p0 <= dec_ah2_i;
        sext_ln479_6_fu_1895_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln479_6_fu_1895_p0),47));

    sext_ln479_fu_1088_p0 <= dec_al2_i;
        sext_ln479_fu_1088_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln479_fu_1088_p0),23));

        sext_ln509_fu_1006_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln512_fu_1000_p2),32));

        sext_ln512_2_fu_996_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(wl_code_table_q0),17));

        sext_ln512_fu_992_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln14_fu_982_p4),17));

    sext_ln539_2_fu_2287_p0 <= dec_del_bph_q0;
        sext_ln539_2_fu_2287_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln539_2_fu_2287_p0),40));

    sext_ln539_fu_1489_p0 <= dec_del_bpl_q0;
        sext_ln539_fu_1489_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln539_fu_1489_p0),40));

        sext_ln543_fu_1986_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln364_1_fu_1931_p4),28));

        sext_ln545_4_fu_1434_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln545_fu_1429_p2),64));

        sext_ln545_6_fu_2232_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln545_2_fu_2227_p2),64));

    sext_ln549_2_fu_2252_p0 <= dec_del_bph_q0;
        sext_ln549_2_fu_2252_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln549_2_fu_2252_p0),40));

    sext_ln549_fu_1454_p0 <= dec_del_bpl_q0;
        sext_ln549_fu_1454_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln549_fu_1454_p0),40));

        sext_ln566_2_fu_2036_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(wd2_2_fu_2029_p3),19));

        sext_ln566_fu_1243_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(wd2_fu_1236_p3),19));

    sext_ln570_4_fu_1252_p0 <= dec_plt1_i;
        sext_ln570_4_fu_1252_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln570_4_fu_1252_p0),64));

        sext_ln570_5_fu_2040_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln367_reg_3004),64));

    sext_ln570_6_fu_2045_p0 <= dec_ph1_i;
        sext_ln570_6_fu_2045_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln570_6_fu_2045_p0),64));

        sext_ln570_fu_1247_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln350_reg_2874),64));

        sext_ln572_2_fu_2065_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_2056_p4),12));

        sext_ln572_fu_1272_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_9_fu_1263_p4),12));

    sext_ln574_2_fu_2091_p0 <= dec_ph2_i;
        sext_ln574_2_fu_2091_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln574_2_fu_2091_p0),64));

        sext_ln574_4_fu_1294_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln570_fu_1286_p3),17));

        sext_ln574_5_fu_2087_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln570_2_fu_2079_p3),17));

    sext_ln574_fu_1298_p0 <= dec_plt2_i;
        sext_ln574_fu_1298_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln574_fu_1298_p0),64));

        sext_ln580_4_fu_1329_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln17_fu_1319_p4),17));

        sext_ln580_5_fu_2103_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln580_2_fu_2096_p3),23));

        sext_ln580_6_fu_2122_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln580_2_fu_2112_p4),17));

        sext_ln580_fu_1310_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln3_fu_1303_p3),23));

        sext_ln597_2_fu_2145_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln597_2_fu_2138_p3),25));

        sext_ln597_fu_1352_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln4_fu_1345_p3),25));

        sext_ln599_2_fu_2164_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln597_2_fu_2154_p4),18));

        sext_ln599_fu_1371_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln18_fu_1361_p4),18));

        sext_ln609_2_fu_2388_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(apl1_13_fu_2382_p2),18));

        sext_ln609_fu_1590_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(apl1_9_fu_1584_p2),18));

        sext_ln617_fu_1736_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln621_fu_1730_p2),32));

        sext_ln618_fu_1709_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(wd_fu_1699_p4),17));

        sext_ln621_fu_1726_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_1713_p6),17));

    shl_ln1_fu_1493_p1 <= dec_del_bpl_q0;
    shl_ln1_fu_1493_p3 <= (shl_ln1_fu_1493_p1 & ap_const_lv8_0);
    shl_ln2_fu_1458_p1 <= dec_del_bpl_q0;
    shl_ln2_fu_1458_p3 <= (shl_ln2_fu_1458_p1 & ap_const_lv8_0);
    shl_ln385_1_fu_2432_p3 <= (sub_ln378_fu_2412_p2 & ap_const_lv2_0);
    shl_ln396_1_fu_2624_p3 <= (accumd_q0 & ap_const_lv2_0);
    shl_ln3_fu_1303_p1 <= dec_al2_i;
    shl_ln3_fu_1303_p3 <= (shl_ln3_fu_1303_p1 & ap_const_lv7_0);
    shl_ln4_fu_1345_p1 <= dec_al1_i;
    shl_ln4_fu_1345_p3 <= (shl_ln4_fu_1345_p1 & ap_const_lv8_0);
    shl_ln526_2_fu_1960_p3 <= (wd3_8_fu_1954_p2 & ap_const_lv3_0);
    shl_ln539_2_fu_2291_p1 <= dec_del_bph_q0;
    shl_ln539_2_fu_2291_p3 <= (shl_ln539_2_fu_2291_p1 & ap_const_lv8_0);
    shl_ln549_2_fu_2256_p1 <= dec_del_bph_q0;
    shl_ln549_2_fu_2256_p3 <= (shl_ln549_2_fu_2256_p1 & ap_const_lv8_0);
    shl_ln580_2_fu_2096_p1 <= dec_ah2_i;
    shl_ln580_2_fu_2096_p3 <= (shl_ln580_2_fu_2096_p1 & ap_const_lv7_0);
    shl_ln597_2_fu_2138_p1 <= dec_ah1_i;
    shl_ln597_2_fu_2138_p3 <= (shl_ln597_2_fu_2138_p1 & ap_const_lv8_0);
    shl_ln5_fu_1681_p3 <= (dec_nbh_i & ap_const_lv7_0);
    shl_ln6_fu_2420_p3 <= (sub_ln378_fu_2412_p2 & ap_const_lv4_0);
    shl_ln7_fu_2612_p3 <= (accumd_q0 & ap_const_lv4_0);
    shl_ln9_fu_1181_p3 <= (wd3_fu_1175_p2 & ap_const_lv3_0);
    shl_ln_fu_964_p3 <= (dec_nbl_i & ap_const_lv7_0);
    sub_ln378_fu_2412_p2 <= std_logic_vector(unsigned(add_ln347_reg_2868) - unsigned(add_ln371_reg_3081));
    sub_ln396_fu_2636_p2 <= std_logic_vector(signed(sext_ln396_fu_2620_p1) - signed(sext_ln396_1_fu_2632_p1));
    sub_ln511_fu_976_p2 <= std_logic_vector(unsigned(zext_ln511_2_fu_972_p1) - unsigned(zext_ln511_fu_960_p1));
    sub_ln525_2_fu_1945_p2 <= std_logic_vector(signed(ap_const_lv4_B) - signed(trunc_ln522_2_reg_2961));
    sub_ln525_2cast_fu_1950_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln525_2_fu_1945_p2),12));
    sub_ln525_fu_1166_p2 <= std_logic_vector(signed(ap_const_lv4_9) - signed(trunc_ln15_reg_2828));
    sub_ln525cast_fu_1171_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln525_fu_1166_p2),12));
    sub_ln539_2_fu_2299_p2 <= std_logic_vector(unsigned(shl_ln539_2_fu_2291_p3) - unsigned(sext_ln539_2_fu_2287_p1));
    sub_ln539_fu_1501_p2 <= std_logic_vector(unsigned(shl_ln1_fu_1493_p3) - unsigned(sext_ln539_fu_1489_p1));
    sub_ln549_2_fu_2264_p2 <= std_logic_vector(unsigned(shl_ln549_2_fu_2256_p3) - unsigned(sext_ln549_2_fu_2252_p1));
    sub_ln549_fu_1466_p2 <= std_logic_vector(unsigned(shl_ln2_fu_1458_p3) - unsigned(sext_ln549_fu_1454_p1));
    sub_ln571_2_fu_2050_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(sext_ln566_2_fu_2036_p1));
    sub_ln571_fu_1257_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(sext_ln566_fu_1243_p1));
    sub_ln580_2_fu_2107_p2 <= std_logic_vector(signed(sext_ln580_5_fu_2103_p1) - signed(sext_ln479_5_reg_2994));
    sub_ln580_fu_1314_p2 <= std_logic_vector(signed(sext_ln580_fu_1310_p1) - signed(sext_ln479_reg_2843));
    sub_ln597_2_fu_2149_p2 <= std_logic_vector(signed(sext_ln597_2_fu_2145_p1) - signed(sext_ln477_2_reg_2989));
    sub_ln597_fu_1356_p2 <= std_logic_vector(signed(sext_ln597_fu_1352_p1) - signed(sext_ln477_reg_2838));
    sub_ln620_fu_1693_p2 <= std_logic_vector(unsigned(zext_ln620_2_fu_1689_p1) - unsigned(zext_ln620_fu_1677_p1));
    tmp_16_fu_1010_p3 <= sext_ln509_fu_1006_p1(31 downto 31);
    tmp_17_fu_1438_p3 <= sext_ln545_4_fu_1434_p1(63 downto 63);
    tmp_1_fu_2056_p1 <= dec_ah1_i;
    tmp_1_fu_2056_p4 <= tmp_1_fu_2056_p1(15 downto 5);
    tmp_20_fu_1740_p3 <= sext_ln617_fu_1736_p1(31 downto 31);
    tmp_21_fu_2236_p3 <= sext_ln545_6_fu_2232_p1(63 downto 63);
    tmp_3_fu_2069_p4 <= sub_ln571_2_fu_2050_p2(18 downto 7);
    tmp_9_fu_1263_p1 <= dec_al1_i;
    tmp_9_fu_1263_p4 <= tmp_9_fu_1263_p1(15 downto 5);
    tmp_s_fu_1276_p4 <= sub_ln571_fu_1257_p2(18 downto 7);
    trunc_ln13_fu_1146_p4 <= mul_ln346_fu_1140_p2(30 downto 15);
    trunc_ln14_fu_982_p4 <= sub_ln511_fu_976_p2(22 downto 7);
    trunc_ln17_fu_1319_p4 <= sub_ln580_fu_1314_p2(22 downto 7);
    trunc_ln18_fu_1361_p4 <= sub_ln597_fu_1356_p2(24 downto 8);
    trunc_ln345_1_fu_850_p4 <= input_r(5 downto 2);
    trunc_ln345_2_fu_1118_p4 <= mul_ln345_fu_1112_p2(30 downto 15);
    trunc_ln345_fu_1097_p1 <= add_ln344_fu_1091_p2(31 - 1 downto 0);
    trunc_ln364_1_fu_1931_p4 <= mul_ln364_fu_1925_p2(28 downto 15);
    trunc_ln372_fu_2187_p1 <= add_ln371_fu_2182_p2(31 - 1 downto 0);
    trunc_ln389_1_fu_2593_p1 <= xa1_2_fu_338(46 - 1 downto 0);
    trunc_ln389_fu_2589_p1 <= xa2_2_fu_334(46 - 1 downto 0);
    trunc_ln405_fu_2702_p1 <= idx213_fu_346(4 - 1 downto 0);
    trunc_ln469_2_fu_1830_p4 <= zl_9_fu_318(45 downto 14);
    trunc_ln509_fu_1026_p1 <= select_ln513_fu_1018_p3(15 - 1 downto 0);
    trunc_ln567_2_fu_2328_p1 <= apl2_9_fu_2321_p3(15 - 1 downto 0);
    trunc_ln567_fu_1530_p1 <= apl2_6_fu_1523_p3(15 - 1 downto 0);
    trunc_ln580_2_fu_2112_p4 <= sub_ln580_2_fu_2107_p2(22 downto 7);
    trunc_ln595_2_fu_2378_p1 <= apl1_12_fu_2371_p3(16 - 1 downto 0);
    trunc_ln595_fu_1580_p1 <= apl1_8_fu_1573_p3(16 - 1 downto 0);
    trunc_ln597_2_fu_2154_p4 <= sub_ln597_2_fu_2149_p2(24 downto 8);
    trunc_ln617_fu_1756_p1 <= select_ln622_fu_1748_p3(15 - 1 downto 0);
    trunc_ln_fu_1075_p4 <= zl_6_fu_302(45 downto 14);
    wd1_2_fu_1780_p4 <= select_ln624_fu_1766_p3(10 downto 6);
    wd1_fu_1050_p4 <= select_ln515_fu_1036_p3(10 downto 6);
    wd2_2_fu_2029_p1 <= dec_ah1_i;
    wd2_2_fu_2029_p3 <= (wd2_2_fu_2029_p1 & ap_const_lv2_0);
    wd2_fu_1236_p1 <= dec_al1_i;
    wd2_fu_1236_p3 <= (wd2_fu_1236_p1 & ap_const_lv2_0);
    wd3_10_fu_2352_p2 <= std_logic_vector(unsigned(ap_const_lv15_3C00) - unsigned(apl2_10_fu_2338_p3));
    wd3_6_fu_1472_p4 <= sub_ln549_fu_1466_p2(39 downto 8);
    wd3_7_fu_1554_p2 <= std_logic_vector(unsigned(ap_const_lv15_3C00) - unsigned(apl2_7_fu_1540_p3));
    wd3_8_fu_1954_p2 <= std_logic_vector(shift_right(unsigned(ilb_table_q0),to_integer(unsigned('0' & sub_ln525_2cast_fu_1950_p1(12-1 downto 0)))));
    wd3_9_fu_2270_p4 <= sub_ln549_2_fu_2264_p2(39 downto 8);
    wd3_fu_1175_p2 <= std_logic_vector(shift_right(unsigned(ilb_table_q0),to_integer(unsigned('0' & sub_ln525cast_fu_1171_p1(12-1 downto 0)))));
    wd_fu_1699_p4 <= sub_ln620_fu_1693_p2(22 downto 7);
    wl_code_table_address0 <= zext_ln345_fu_859_p1(4 - 1 downto 0);

    wl_code_table_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            wl_code_table_ce0 <= ap_const_logic_1;
        else 
            wl_code_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    xa1_4_fu_2606_p2 <= std_logic_vector(signed(sext_ln395_1_fu_2602_p1) + signed(trunc_ln389_1_fu_2593_p1));
    xa1_5_fu_2553_p2 <= std_logic_vector(signed(sext_ln391_2_fu_2549_p1) + signed(xa1_2_fu_338));
    xa1_fu_2444_p2 <= std_logic_vector(signed(sext_ln385_fu_2428_p1) - signed(sext_ln385_1_fu_2440_p1));
    xa2_4_fu_2646_p2 <= std_logic_vector(signed(sext_ln396_2_fu_2642_p1) + signed(trunc_ln389_fu_2589_p1));
    xa2_5_fu_2573_p2 <= std_logic_vector(signed(sext_ln392_2_fu_2569_p1) + signed(xa2_2_fu_334));
    xout1 <= xa1_4_fu_2606_p2(45 downto 14);

    xout1_ap_vld_assign_proc : process(ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            xout1_ap_vld <= ap_const_logic_1;
        else 
            xout1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xout2 <= xa2_4_fu_2646_p2(45 downto 14);

    xout2_ap_vld_assign_proc : process(ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            xout2_ap_vld <= ap_const_logic_1;
        else 
            xout2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln335_1_fu_2739_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln335_1_fu_2734_p2),64));
    zext_ln335_2_fu_2712_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln335_2_fu_2706_p2),64));
    zext_ln335_fu_2503_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln335_fu_2497_p2),64));
    zext_ln345_1_fu_1105_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dec_detl_i),31));
    zext_ln345_fu_859_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln345_1_fu_850_p4),64));
    zext_ln346_fu_951_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(il),64));
    zext_ln389_fu_2491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_012_fu_342),64));
    zext_ln391_fu_2514_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln391_fu_2508_p2),64));
    zext_ln460_2_fu_1645_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx198_fu_314),64));
    zext_ln460_fu_813_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_fu_298),64));
    zext_ln511_2_fu_972_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_964_p3),23));
    zext_ln511_fu_960_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dec_nbl_i),23));
    zext_ln525_2_fu_1800_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd1_2_fu_1780_p4),64));
    zext_ln525_fu_1070_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd1_fu_1050_p4),64));
    zext_ln537_2_fu_2011_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_18_fu_326),64));
    zext_ln537_fu_1218_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_13_fu_310),64));
    zext_ln543_2_fu_2000_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_18_fu_326),64));
    zext_ln543_fu_1207_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_13_fu_310),64));
    zext_ln595_4_fu_1564_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd3_7_fu_1554_p2),16));
    zext_ln595_5_fu_2358_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd3_10_fu_2352_p2),18));
    zext_ln595_6_fu_2362_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd3_10_fu_2352_p2),16));
    zext_ln595_fu_1560_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(wd3_7_fu_1554_p2),18));
    zext_ln620_2_fu_1689_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln5_fu_1681_p3),23));
    zext_ln620_fu_1677_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dec_nbh_i),23));
    zl_11_fu_884_p2 <= std_logic_vector(signed(sext_ln466_7_fu_880_p1) + signed(zl_6_fu_302));
    zl_13_fu_1819_p2 <= std_logic_vector(signed(sext_ln466_10_fu_1815_p1) + signed(zl_9_fu_318));
end behav;
