-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Gsm_LPC_Analysis_Quantization_and_coding is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    LARc_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    LARc_ce0 : OUT STD_LOGIC;
    LARc_we0 : OUT STD_LOGIC;
    LARc_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    LARc_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    LARc_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    LARc_ce1 : OUT STD_LOGIC;
    LARc_we1 : OUT STD_LOGIC;
    LARc_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    LARc_q1 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of Gsm_LPC_Analysis_Quantization_and_coding is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv17_100 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv7_3F : STD_LOGIC_VECTOR (6 downto 0) := "0111111";
    constant ap_const_lv7_60 : STD_LOGIC_VECTOR (6 downto 0) := "1100000";
    constant ap_const_lv7_20 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv17_800 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_const_lv16_7FFF : STD_LOGIC_VECTOR (15 downto 0) := "0111111111111111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_70 : STD_LOGIC_VECTOR (6 downto 0) := "1110000";
    constant ap_const_lv7_10 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_const_lv7_1F : STD_LOGIC_VECTOR (6 downto 0) := "0011111";
    constant ap_const_lv17_1F600 : STD_LOGIC_VECTOR (16 downto 0) := "11111011000000000";
    constant ap_const_lv17_18000 : STD_LOGIC_VECTOR (16 downto 0) := "11000000000000000";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv31_368C : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000011011010001100";
    constant ap_const_lv17_5E : STD_LOGIC_VECTOR (16 downto 0) := "00000000001011110";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv17_1F900 : STD_LOGIC_VECTOR (16 downto 0) := "11111100100000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv7_F : STD_LOGIC_VECTOR (6 downto 0) := "0001111";
    constant ap_const_lv31_2156 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000010000101010110";
    constant ap_const_lv17_1FEAB : STD_LOGIC_VECTOR (16 downto 0) := "11111111010101011";
    constant ap_const_lv31_234C : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000010001101001100";
    constant ap_const_lv17_1FB88 : STD_LOGIC_VECTOR (16 downto 0) := "11111101110001000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv7_7C : STD_LOGIC_VECTOR (6 downto 0) := "1111100";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv7_7 : STD_LOGIC_VECTOR (6 downto 0) := "0000111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal LARc_addr_reg_1443 : STD_LOGIC_VECTOR (2 downto 0);
    signal LARc_addr_3_reg_1448 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln289_1_fu_343_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln289_1_reg_1453 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal select_ln290_1_fu_477_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln290_1_reg_1458 : STD_LOGIC_VECTOR (6 downto 0);
    signal LARc_addr_4_reg_1463 : STD_LOGIC_VECTOR (2 downto 0);
    signal LARc_addr_5_reg_1468 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln291_1_fu_649_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln291_1_reg_1473 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal select_ln292_1_fu_811_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln292_1_reg_1478 : STD_LOGIC_VECTOR (6 downto 0);
    signal LARc_addr_6_reg_1483 : STD_LOGIC_VECTOR (2 downto 0);
    signal LARc_addr_7_reg_1488 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln40_12_fu_897_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_12_reg_1493 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_4_reg_1498 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln295_1_fu_1067_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln295_1_reg_1503 : STD_LOGIC_VECTOR (6 downto 0);
    signal LARc_addr_8_reg_1508 : STD_LOGIC_VECTOR (2 downto 0);
    signal LARc_addr_9_reg_1513 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln294_1_fu_1131_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln294_1_reg_1518 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln40_16_fu_1207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_16_reg_1523 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1528 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln40_18_fu_1291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_18_reg_1533 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_1538 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln296_1_fu_1363_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln296_1_reg_1543 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal select_ln297_1_fu_1419_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln297_1_reg_1548 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln289_fu_1075_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln290_fu_1079_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln291_fu_1307_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln292_fu_1311_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal zext_ln294_fu_1427_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln295_fu_1431_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal zext_ln296_fu_1435_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln297_fu_1439_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_217_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal shl_ln48_1_fu_229_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln48_fu_225_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln48_1_fu_237_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln48_fu_241_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal temp_fu_247_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_fu_257_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_fu_261_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_8_fu_267_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln40_fu_277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_283_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_13_fu_293_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_9_fu_301_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln289_fu_311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_1_fu_317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln289_fu_337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln289_fu_329_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln289_fu_323_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln48_2_fu_351_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal shl_ln48_3_fu_363_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln48_2_fu_359_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln48_3_fu_371_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln48_1_fu_375_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal temp_14_fu_381_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_4_fu_391_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_3_fu_395_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_10_fu_401_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln40_6_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_417_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_15_fu_427_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_11_fu_435_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln290_fu_445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln290_1_fu_451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln290_fu_471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln290_fu_463_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln290_fu_457_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln48_4_fu_485_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal shl_ln48_5_fu_497_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln48_4_fu_493_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln48_5_fu_505_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln48_2_fu_509_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal temp_16_fu_515_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_5_fu_525_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_4_fu_529_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_12_fu_535_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln40_7_fu_545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln40_fu_551_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_17_fu_555_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_6_fu_563_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_5_fu_567_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_13_fu_573_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln40_8_fu_583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_589_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_18_fu_599_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_14_fu_607_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln291_fu_617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln291_1_fu_623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln291_fu_643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln291_fu_635_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln291_fu_629_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln48_6_fu_657_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal shl_ln48_7_fu_669_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln48_6_fu_665_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln48_7_fu_677_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln48_3_fu_681_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal temp_19_fu_687_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_7_fu_697_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_6_fu_701_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln40_9_fu_707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln40_1_fu_713_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_20_fu_717_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_8_fu_725_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_7_fu_729_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_15_fu_735_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln40_10_fu_745_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_751_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_21_fu_761_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_16_fu_769_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln292_fu_779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln292_1_fu_785_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln292_fu_805_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln292_fu_797_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln292_fu_791_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln48_fu_823_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln48_fu_823_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal temp_22_fu_829_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_9_fu_839_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_8_fu_843_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_17_fu_849_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln40_11_fu_859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln40_2_fu_865_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_23_fu_869_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_10_fu_877_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_9_fu_881_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_18_fu_887_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal shl_ln48_8_fu_913_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal shl_ln48_9_fu_925_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln48_9_fu_921_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln48_10_fu_933_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln48_fu_937_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal temp_25_fu_943_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_11_fu_953_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_10_fu_957_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln40_13_fu_963_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln40_3_fu_969_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_26_fu_973_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_12_fu_981_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_11_fu_985_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_20_fu_991_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln40_14_fu_1001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_1007_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_27_fu_1017_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_21_fu_1025_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln295_fu_1035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln295_1_fu_1041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln295_fu_1061_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln295_fu_1053_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln295_fu_1047_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_24_fu_1083_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_19_fu_1089_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln294_fu_1099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln294_1_fu_1105_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln294_fu_1125_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln294_fu_1117_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln294_fu_1111_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln48_1_fu_1143_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln48_1_fu_1143_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal temp_28_fu_1149_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_13_fu_1159_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_12_fu_1163_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln40_15_fu_1169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln40_4_fu_1175_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_29_fu_1179_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_14_fu_1187_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_13_fu_1191_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_22_fu_1197_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln48_2_fu_1227_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln48_2_fu_1227_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal temp_31_fu_1233_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_15_fu_1243_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_14_fu_1247_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln40_17_fu_1253_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln40_5_fu_1259_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_32_fu_1263_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_16_fu_1271_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_15_fu_1275_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_24_fu_1281_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal temp_30_fu_1315_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_23_fu_1321_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln296_fu_1331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln296_1_fu_1337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln296_fu_1357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln296_fu_1349_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln296_fu_1343_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_33_fu_1371_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_25_fu_1377_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln297_fu_1387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln297_1_fu_1393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln297_fu_1413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln297_fu_1405_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln297_fu_1399_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component Gsm_LPC_Analysis_mul_16s_15ns_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;



begin
    mul_16s_15ns_31_1_1_U61 : component Gsm_LPC_Analysis_mul_16s_15ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        dout_WIDTH => 31)
    port map (
        din0 => LARc_q1,
        din1 => mul_ln48_fu_823_p1,
        dout => mul_ln48_fu_823_p2);

    mul_16s_15ns_31_1_1_U62 : component Gsm_LPC_Analysis_mul_16s_15ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        dout_WIDTH => 31)
    port map (
        din0 => LARc_q1,
        din1 => mul_ln48_1_fu_1143_p1,
        dout => mul_ln48_1_fu_1143_p2);

    mul_16s_15ns_31_1_1_U63 : component Gsm_LPC_Analysis_mul_16s_15ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        dout_WIDTH => 31)
    port map (
        din0 => LARc_q0,
        din1 => mul_ln48_2_fu_1227_p1,
        dout => mul_ln48_2_fu_1227_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                icmp_ln40_12_reg_1493 <= icmp_ln40_12_fu_897_p2;
                select_ln295_1_reg_1503 <= select_ln295_1_fu_1067_p3;
                tmp_4_reg_1498 <= sum_9_fu_881_p2(15 downto 9);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                icmp_ln40_16_reg_1523 <= icmp_ln40_16_fu_1207_p2;
                icmp_ln40_18_reg_1533 <= icmp_ln40_18_fu_1291_p2;
                select_ln294_1_reg_1518 <= select_ln294_1_fu_1131_p3;
                tmp_6_reg_1528 <= sum_13_fu_1191_p2(15 downto 9);
                tmp_7_reg_1538 <= sum_15_fu_1275_p2(15 downto 9);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                select_ln289_1_reg_1453 <= select_ln289_1_fu_343_p3;
                select_ln290_1_reg_1458 <= select_ln290_1_fu_477_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                select_ln291_1_reg_1473 <= select_ln291_1_fu_649_p3;
                select_ln292_1_reg_1478 <= select_ln292_1_fu_811_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                select_ln296_1_reg_1543 <= select_ln296_1_fu_1363_p3;
                select_ln297_1_reg_1548 <= select_ln297_1_fu_1419_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    LARc_addr_3_reg_1448 <= ap_const_lv64_1(3 - 1 downto 0);
    LARc_addr_4_reg_1463 <= ap_const_lv64_2(3 - 1 downto 0);
    LARc_addr_5_reg_1468 <= ap_const_lv64_3(3 - 1 downto 0);
    LARc_addr_6_reg_1483 <= ap_const_lv64_4(3 - 1 downto 0);
    LARc_addr_7_reg_1488 <= ap_const_lv64_5(3 - 1 downto 0);
    LARc_addr_8_reg_1508 <= ap_const_lv64_6(3 - 1 downto 0);
    LARc_addr_9_reg_1513 <= ap_const_lv64_7(3 - 1 downto 0);
    LARc_addr_reg_1443 <= ap_const_lv64_0(3 - 1 downto 0);

    LARc_address0_assign_proc : process(ap_CS_fsm_state1, LARc_addr_3_reg_1448, ap_CS_fsm_state2, LARc_addr_5_reg_1468, ap_CS_fsm_state3, LARc_addr_7_reg_1488, ap_CS_fsm_state4, LARc_addr_9_reg_1513, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            LARc_address0 <= LARc_addr_9_reg_1513;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            LARc_address0 <= LARc_addr_7_reg_1488;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            LARc_address0 <= LARc_addr_5_reg_1468;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            LARc_address0 <= LARc_addr_3_reg_1448;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            LARc_address0 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            LARc_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            LARc_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            LARc_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            LARc_address0 <= "XXX";
        end if; 
    end process;


    LARc_address1_assign_proc : process(ap_CS_fsm_state1, LARc_addr_reg_1443, ap_CS_fsm_state2, LARc_addr_4_reg_1463, ap_CS_fsm_state3, LARc_addr_6_reg_1483, ap_CS_fsm_state4, LARc_addr_8_reg_1508, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            LARc_address1 <= LARc_addr_8_reg_1508;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            LARc_address1 <= LARc_addr_6_reg_1483;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            LARc_address1 <= LARc_addr_4_reg_1463;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            LARc_address1 <= LARc_addr_reg_1443;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            LARc_address1 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            LARc_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            LARc_address1 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            LARc_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            LARc_address1 <= "XXX";
        end if; 
    end process;


    LARc_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            LARc_ce0 <= ap_const_logic_1;
        else 
            LARc_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    LARc_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            LARc_ce1 <= ap_const_logic_1;
        else 
            LARc_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    LARc_d0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, zext_ln290_fu_1079_p1, zext_ln292_fu_1311_p1, ap_CS_fsm_state7, zext_ln295_fu_1431_p1, ap_CS_fsm_state8, zext_ln297_fu_1439_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            LARc_d0 <= zext_ln297_fu_1439_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            LARc_d0 <= zext_ln295_fu_1431_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            LARc_d0 <= zext_ln292_fu_1311_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            LARc_d0 <= zext_ln290_fu_1079_p1;
        else 
            LARc_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    LARc_d1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, zext_ln289_fu_1075_p1, zext_ln291_fu_1307_p1, ap_CS_fsm_state7, zext_ln294_fu_1427_p1, ap_CS_fsm_state8, zext_ln296_fu_1435_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            LARc_d1 <= zext_ln296_fu_1435_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            LARc_d1 <= zext_ln294_fu_1427_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            LARc_d1 <= zext_ln291_fu_1307_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            LARc_d1 <= zext_ln289_fu_1075_p1;
        else 
            LARc_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    LARc_we0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            LARc_we0 <= ap_const_logic_1;
        else 
            LARc_we0 <= ap_const_logic_0;
        end if; 
    end process;


    LARc_we1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            LARc_we1 <= ap_const_logic_1;
        else 
            LARc_we1 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln289_fu_323_p2 <= std_logic_vector(unsigned(temp_13_fu_293_p3) + unsigned(ap_const_lv7_20));
    add_ln290_fu_457_p2 <= std_logic_vector(unsigned(temp_15_fu_427_p3) + unsigned(ap_const_lv7_20));
    add_ln291_fu_629_p2 <= std_logic_vector(unsigned(temp_18_fu_599_p3) + unsigned(ap_const_lv7_10));
    add_ln292_fu_791_p2 <= std_logic_vector(unsigned(temp_21_fu_761_p3) + unsigned(ap_const_lv7_10));
    add_ln294_fu_1111_p2 <= std_logic_vector(unsigned(temp_24_fu_1083_p3) + unsigned(ap_const_lv7_8));
    add_ln295_fu_1047_p2 <= std_logic_vector(unsigned(temp_27_fu_1017_p3) + unsigned(ap_const_lv7_8));
    add_ln296_fu_1343_p2 <= std_logic_vector(unsigned(temp_30_fu_1315_p3) + unsigned(ap_const_lv7_4));
    add_ln297_fu_1399_p2 <= std_logic_vector(unsigned(temp_33_fu_1371_p3) + unsigned(ap_const_lv7_4));
    add_ln48_1_fu_375_p2 <= std_logic_vector(signed(sext_ln48_2_fu_359_p1) + signed(sext_ln48_3_fu_371_p1));
    add_ln48_2_fu_509_p2 <= std_logic_vector(signed(sext_ln48_4_fu_493_p1) + signed(sext_ln48_5_fu_505_p1));
    add_ln48_3_fu_681_p2 <= std_logic_vector(signed(sext_ln48_6_fu_665_p1) + signed(sext_ln48_7_fu_677_p1));
    add_ln48_fu_241_p2 <= std_logic_vector(signed(sext_ln48_fu_225_p1) + signed(sext_ln48_1_fu_237_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln289_1_fu_317_p2 <= "1" when (signed(temp_13_fu_293_p3) < signed(ap_const_lv7_60)) else "0";
    icmp_ln289_fu_311_p2 <= "1" when (tmp_9_fu_301_p4 = ap_const_lv2_1) else "0";
    icmp_ln290_1_fu_451_p2 <= "1" when (signed(temp_15_fu_427_p3) < signed(ap_const_lv7_60)) else "0";
    icmp_ln290_fu_445_p2 <= "1" when (tmp_11_fu_435_p4 = ap_const_lv2_1) else "0";
    icmp_ln291_1_fu_623_p2 <= "1" when (signed(temp_18_fu_599_p3) < signed(ap_const_lv7_70)) else "0";
    icmp_ln291_fu_617_p2 <= "1" when (signed(tmp_14_fu_607_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln292_1_fu_785_p2 <= "1" when (signed(temp_21_fu_761_p3) < signed(ap_const_lv7_70)) else "0";
    icmp_ln292_fu_779_p2 <= "1" when (signed(tmp_16_fu_769_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln294_1_fu_1105_p2 <= "1" when (signed(temp_24_fu_1083_p3) < signed(ap_const_lv7_78)) else "0";
    icmp_ln294_fu_1099_p2 <= "1" when (signed(tmp_19_fu_1089_p4) > signed(ap_const_lv4_0)) else "0";
    icmp_ln295_1_fu_1041_p2 <= "1" when (signed(temp_27_fu_1017_p3) < signed(ap_const_lv7_78)) else "0";
    icmp_ln295_fu_1035_p2 <= "1" when (signed(tmp_21_fu_1025_p4) > signed(ap_const_lv4_0)) else "0";
    icmp_ln296_1_fu_1337_p2 <= "1" when (signed(temp_30_fu_1315_p3) < signed(ap_const_lv7_7C)) else "0";
    icmp_ln296_fu_1331_p2 <= "1" when (signed(tmp_23_fu_1321_p4) > signed(ap_const_lv5_0)) else "0";
    icmp_ln297_1_fu_1393_p2 <= "1" when (signed(temp_33_fu_1371_p3) < signed(ap_const_lv7_7C)) else "0";
    icmp_ln297_fu_1387_p2 <= "1" when (signed(tmp_25_fu_1377_p4) > signed(ap_const_lv5_0)) else "0";
    icmp_ln40_10_fu_745_p2 <= "1" when (tmp_15_fu_735_p4 = ap_const_lv2_1) else "0";
    icmp_ln40_11_fu_859_p2 <= "1" when (tmp_17_fu_849_p4 = ap_const_lv2_1) else "0";
    icmp_ln40_12_fu_897_p2 <= "1" when (tmp_18_fu_887_p4 = ap_const_lv2_1) else "0";
    icmp_ln40_13_fu_963_p2 <= "1" when (signed(sum_10_fu_957_p2) < signed(ap_const_lv17_18000)) else "0";
    icmp_ln40_14_fu_1001_p2 <= "1" when (tmp_20_fu_991_p4 = ap_const_lv2_1) else "0";
    icmp_ln40_15_fu_1169_p2 <= "1" when (signed(sum_12_fu_1163_p2) < signed(ap_const_lv17_18000)) else "0";
    icmp_ln40_16_fu_1207_p2 <= "1" when (tmp_22_fu_1197_p4 = ap_const_lv2_1) else "0";
    icmp_ln40_17_fu_1253_p2 <= "1" when (signed(sum_14_fu_1247_p2) < signed(ap_const_lv17_18000)) else "0";
    icmp_ln40_18_fu_1291_p2 <= "1" when (tmp_24_fu_1281_p4 = ap_const_lv2_1) else "0";
    icmp_ln40_6_fu_411_p2 <= "1" when (tmp_10_fu_401_p4 = ap_const_lv2_1) else "0";
    icmp_ln40_7_fu_545_p2 <= "1" when (tmp_12_fu_535_p4 = ap_const_lv2_1) else "0";
    icmp_ln40_8_fu_583_p2 <= "1" when (tmp_13_fu_573_p4 = ap_const_lv2_1) else "0";
    icmp_ln40_9_fu_707_p2 <= "1" when (signed(sum_6_fu_701_p2) < signed(ap_const_lv17_18000)) else "0";
    icmp_ln40_fu_277_p2 <= "1" when (tmp_8_fu_267_p4 = ap_const_lv2_1) else "0";
    mul_ln48_1_fu_1143_p1 <= ap_const_lv31_2156(15 - 1 downto 0);
    mul_ln48_2_fu_1227_p1 <= ap_const_lv31_234C(15 - 1 downto 0);
    mul_ln48_fu_823_p1 <= ap_const_lv31_368C(15 - 1 downto 0);
    or_ln289_fu_337_p2 <= (icmp_ln289_fu_311_p2 or icmp_ln289_1_fu_317_p2);
    or_ln290_fu_471_p2 <= (icmp_ln290_fu_445_p2 or icmp_ln290_1_fu_451_p2);
    or_ln291_fu_643_p2 <= (icmp_ln291_fu_617_p2 or icmp_ln291_1_fu_623_p2);
    or_ln292_fu_805_p2 <= (icmp_ln292_fu_779_p2 or icmp_ln292_1_fu_785_p2);
    or_ln294_fu_1125_p2 <= (icmp_ln294_fu_1099_p2 or icmp_ln294_1_fu_1105_p2);
    or_ln295_fu_1061_p2 <= (icmp_ln295_fu_1035_p2 or icmp_ln295_1_fu_1041_p2);
    or_ln296_fu_1357_p2 <= (icmp_ln296_fu_1331_p2 or icmp_ln296_1_fu_1337_p2);
    or_ln297_fu_1413_p2 <= (icmp_ln297_fu_1387_p2 or icmp_ln297_1_fu_1393_p2);
    select_ln289_1_fu_343_p3 <= 
        select_ln289_fu_329_p3 when (or_ln289_fu_337_p2(0) = '1') else 
        add_ln289_fu_323_p2;
    select_ln289_fu_329_p3 <= 
        ap_const_lv7_3F when (icmp_ln289_fu_311_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln290_1_fu_477_p3 <= 
        select_ln290_fu_463_p3 when (or_ln290_fu_471_p2(0) = '1') else 
        add_ln290_fu_457_p2;
    select_ln290_fu_463_p3 <= 
        ap_const_lv7_3F when (icmp_ln290_fu_445_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln291_1_fu_649_p3 <= 
        select_ln291_fu_635_p3 when (or_ln291_fu_643_p2(0) = '1') else 
        add_ln291_fu_629_p2;
    select_ln291_fu_635_p3 <= 
        ap_const_lv7_1F when (icmp_ln291_fu_617_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln292_1_fu_811_p3 <= 
        select_ln292_fu_797_p3 when (or_ln292_fu_805_p2(0) = '1') else 
        add_ln292_fu_791_p2;
    select_ln292_fu_797_p3 <= 
        ap_const_lv7_1F when (icmp_ln292_fu_779_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln294_1_fu_1131_p3 <= 
        select_ln294_fu_1117_p3 when (or_ln294_fu_1125_p2(0) = '1') else 
        add_ln294_fu_1111_p2;
    select_ln294_fu_1117_p3 <= 
        ap_const_lv7_F when (icmp_ln294_fu_1099_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln295_1_fu_1067_p3 <= 
        select_ln295_fu_1053_p3 when (or_ln295_fu_1061_p2(0) = '1') else 
        add_ln295_fu_1047_p2;
    select_ln295_fu_1053_p3 <= 
        ap_const_lv7_F when (icmp_ln295_fu_1035_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln296_1_fu_1363_p3 <= 
        select_ln296_fu_1349_p3 when (or_ln296_fu_1357_p2(0) = '1') else 
        add_ln296_fu_1343_p2;
    select_ln296_fu_1349_p3 <= 
        ap_const_lv7_7 when (icmp_ln296_fu_1331_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln297_1_fu_1419_p3 <= 
        select_ln297_fu_1405_p3 when (or_ln297_fu_1413_p2(0) = '1') else 
        add_ln297_fu_1399_p2;
    select_ln297_fu_1405_p3 <= 
        ap_const_lv7_7 when (icmp_ln297_fu_1387_p2(0) = '1') else 
        ap_const_lv7_0;
        sext_ln39_10_fu_877_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_23_fu_869_p3),17));

        sext_ln39_11_fu_953_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_25_fu_943_p4),17));

        sext_ln39_12_fu_981_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_26_fu_973_p3),17));

        sext_ln39_13_fu_1159_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_28_fu_1149_p4),17));

        sext_ln39_14_fu_1187_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_29_fu_1179_p3),17));

        sext_ln39_15_fu_1243_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_31_fu_1233_p4),17));

        sext_ln39_16_fu_1271_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_32_fu_1263_p3),17));

        sext_ln39_4_fu_391_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_14_fu_381_p4),17));

        sext_ln39_5_fu_525_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_16_fu_515_p4),17));

        sext_ln39_6_fu_563_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_17_fu_555_p3),17));

        sext_ln39_7_fu_697_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_19_fu_687_p4),17));

        sext_ln39_8_fu_725_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_20_fu_717_p3),17));

        sext_ln39_9_fu_839_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_22_fu_829_p4),17));

        sext_ln39_fu_257_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_fu_247_p4),17));

        sext_ln48_10_fu_933_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln48_9_fu_925_p3),31));

        sext_ln48_1_fu_237_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln48_1_fu_229_p3),31));

        sext_ln48_2_fu_359_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln48_2_fu_351_p3),31));

        sext_ln48_3_fu_371_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln48_3_fu_363_p3),31));

        sext_ln48_4_fu_493_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln48_4_fu_485_p3),31));

        sext_ln48_5_fu_505_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln48_5_fu_497_p3),31));

        sext_ln48_6_fu_665_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln48_6_fu_657_p3),31));

        sext_ln48_7_fu_677_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln48_7_fu_669_p3),31));

        sext_ln48_9_fu_921_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln48_8_fu_913_p3),31));

        sext_ln48_fu_225_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_217_p3),31));

    shl_ln48_1_fu_229_p3 <= (LARc_q1 & ap_const_lv12_0);
    shl_ln48_2_fu_351_p3 <= (LARc_q0 & ap_const_lv14_0);
    shl_ln48_3_fu_363_p3 <= (LARc_q0 & ap_const_lv12_0);
    shl_ln48_4_fu_485_p3 <= (LARc_q1 & ap_const_lv14_0);
    shl_ln48_5_fu_497_p3 <= (LARc_q1 & ap_const_lv12_0);
    shl_ln48_6_fu_657_p3 <= (LARc_q0 & ap_const_lv14_0);
    shl_ln48_7_fu_669_p3 <= (LARc_q0 & ap_const_lv12_0);
    shl_ln48_8_fu_913_p3 <= (LARc_q0 & ap_const_lv14_0);
    shl_ln48_9_fu_925_p3 <= (LARc_q0 & ap_const_lv10_0);
    shl_ln_fu_217_p3 <= (LARc_q1 & ap_const_lv14_0);
    sub_ln48_fu_937_p2 <= std_logic_vector(signed(sext_ln48_9_fu_921_p1) - signed(sext_ln48_10_fu_933_p1));
    sum_10_fu_957_p2 <= std_logic_vector(signed(sext_ln39_11_fu_953_p1) + signed(ap_const_lv17_1F900));
    sum_11_fu_985_p2 <= std_logic_vector(signed(sext_ln39_12_fu_981_p1) + signed(ap_const_lv17_100));
    sum_12_fu_1163_p2 <= std_logic_vector(signed(sext_ln39_13_fu_1159_p1) + signed(ap_const_lv17_1FEAB));
    sum_13_fu_1191_p2 <= std_logic_vector(signed(sext_ln39_14_fu_1187_p1) + signed(ap_const_lv17_100));
    sum_14_fu_1247_p2 <= std_logic_vector(signed(sext_ln39_15_fu_1243_p1) + signed(ap_const_lv17_1FB88));
    sum_15_fu_1275_p2 <= std_logic_vector(signed(sext_ln39_16_fu_1271_p1) + signed(ap_const_lv17_100));
    sum_3_fu_395_p2 <= std_logic_vector(signed(sext_ln39_4_fu_391_p1) + signed(ap_const_lv17_100));
    sum_4_fu_529_p2 <= std_logic_vector(signed(sext_ln39_5_fu_525_p1) + signed(ap_const_lv17_800));
    sum_5_fu_567_p2 <= std_logic_vector(signed(sext_ln39_6_fu_563_p1) + signed(ap_const_lv17_100));
    sum_6_fu_701_p2 <= std_logic_vector(signed(sext_ln39_7_fu_697_p1) + signed(ap_const_lv17_1F600));
    sum_7_fu_729_p2 <= std_logic_vector(signed(sext_ln39_8_fu_725_p1) + signed(ap_const_lv17_100));
    sum_8_fu_843_p2 <= std_logic_vector(signed(sext_ln39_9_fu_839_p1) + signed(ap_const_lv17_5E));
    sum_9_fu_881_p2 <= std_logic_vector(signed(sext_ln39_10_fu_877_p1) + signed(ap_const_lv17_100));
    sum_fu_261_p2 <= std_logic_vector(signed(sext_ln39_fu_257_p1) + signed(ap_const_lv17_100));
    temp_13_fu_293_p3 <= 
        ap_const_lv7_3F when (icmp_ln40_fu_277_p2(0) = '1') else 
        tmp_fu_283_p4;
    temp_14_fu_381_p4 <= add_ln48_1_fu_375_p2(30 downto 15);
    temp_15_fu_427_p3 <= 
        ap_const_lv7_3F when (icmp_ln40_6_fu_411_p2(0) = '1') else 
        tmp_1_fu_417_p4;
    temp_16_fu_515_p4 <= add_ln48_2_fu_509_p2(30 downto 15);
    temp_17_fu_555_p3 <= 
        ap_const_lv16_7FFF when (icmp_ln40_7_fu_545_p2(0) = '1') else 
        trunc_ln40_fu_551_p1;
    temp_18_fu_599_p3 <= 
        ap_const_lv7_3F when (icmp_ln40_8_fu_583_p2(0) = '1') else 
        tmp_2_fu_589_p4;
    temp_19_fu_687_p4 <= add_ln48_3_fu_681_p2(30 downto 15);
    temp_20_fu_717_p3 <= 
        ap_const_lv16_8000 when (icmp_ln40_9_fu_707_p2(0) = '1') else 
        trunc_ln40_1_fu_713_p1;
    temp_21_fu_761_p3 <= 
        ap_const_lv7_3F when (icmp_ln40_10_fu_745_p2(0) = '1') else 
        tmp_3_fu_751_p4;
    temp_22_fu_829_p4 <= mul_ln48_fu_823_p2(30 downto 15);
    temp_23_fu_869_p3 <= 
        ap_const_lv16_7FFF when (icmp_ln40_11_fu_859_p2(0) = '1') else 
        trunc_ln40_2_fu_865_p1;
    temp_24_fu_1083_p3 <= 
        ap_const_lv7_3F when (icmp_ln40_12_reg_1493(0) = '1') else 
        tmp_4_reg_1498;
    temp_25_fu_943_p4 <= sub_ln48_fu_937_p2(30 downto 15);
    temp_26_fu_973_p3 <= 
        ap_const_lv16_8000 when (icmp_ln40_13_fu_963_p2(0) = '1') else 
        trunc_ln40_3_fu_969_p1;
    temp_27_fu_1017_p3 <= 
        ap_const_lv7_3F when (icmp_ln40_14_fu_1001_p2(0) = '1') else 
        tmp_5_fu_1007_p4;
    temp_28_fu_1149_p4 <= mul_ln48_1_fu_1143_p2(30 downto 15);
    temp_29_fu_1179_p3 <= 
        ap_const_lv16_8000 when (icmp_ln40_15_fu_1169_p2(0) = '1') else 
        trunc_ln40_4_fu_1175_p1;
    temp_30_fu_1315_p3 <= 
        ap_const_lv7_3F when (icmp_ln40_16_reg_1523(0) = '1') else 
        tmp_6_reg_1528;
    temp_31_fu_1233_p4 <= mul_ln48_2_fu_1227_p2(30 downto 15);
    temp_32_fu_1263_p3 <= 
        ap_const_lv16_8000 when (icmp_ln40_17_fu_1253_p2(0) = '1') else 
        trunc_ln40_5_fu_1259_p1;
    temp_33_fu_1371_p3 <= 
        ap_const_lv7_3F when (icmp_ln40_18_reg_1533(0) = '1') else 
        tmp_7_reg_1538;
    temp_fu_247_p4 <= add_ln48_fu_241_p2(30 downto 15);
    tmp_10_fu_401_p4 <= sum_3_fu_395_p2(16 downto 15);
    tmp_11_fu_435_p4 <= temp_15_fu_427_p3(6 downto 5);
    tmp_12_fu_535_p4 <= sum_4_fu_529_p2(16 downto 15);
    tmp_13_fu_573_p4 <= sum_5_fu_567_p2(16 downto 15);
    tmp_14_fu_607_p4 <= temp_18_fu_599_p3(6 downto 4);
    tmp_15_fu_735_p4 <= sum_7_fu_729_p2(16 downto 15);
    tmp_16_fu_769_p4 <= temp_21_fu_761_p3(6 downto 4);
    tmp_17_fu_849_p4 <= sum_8_fu_843_p2(16 downto 15);
    tmp_18_fu_887_p4 <= sum_9_fu_881_p2(16 downto 15);
    tmp_19_fu_1089_p4 <= temp_24_fu_1083_p3(6 downto 3);
    tmp_1_fu_417_p4 <= sum_3_fu_395_p2(15 downto 9);
    tmp_20_fu_991_p4 <= sum_11_fu_985_p2(16 downto 15);
    tmp_21_fu_1025_p4 <= temp_27_fu_1017_p3(6 downto 3);
    tmp_22_fu_1197_p4 <= sum_13_fu_1191_p2(16 downto 15);
    tmp_23_fu_1321_p4 <= temp_30_fu_1315_p3(6 downto 2);
    tmp_24_fu_1281_p4 <= sum_15_fu_1275_p2(16 downto 15);
    tmp_25_fu_1377_p4 <= temp_33_fu_1371_p3(6 downto 2);
    tmp_2_fu_589_p4 <= sum_5_fu_567_p2(15 downto 9);
    tmp_3_fu_751_p4 <= sum_7_fu_729_p2(15 downto 9);
    tmp_5_fu_1007_p4 <= sum_11_fu_985_p2(15 downto 9);
    tmp_8_fu_267_p4 <= sum_fu_261_p2(16 downto 15);
    tmp_9_fu_301_p4 <= temp_13_fu_293_p3(6 downto 5);
    tmp_fu_283_p4 <= sum_fu_261_p2(15 downto 9);
    trunc_ln40_1_fu_713_p1 <= sum_6_fu_701_p2(16 - 1 downto 0);
    trunc_ln40_2_fu_865_p1 <= sum_8_fu_843_p2(16 - 1 downto 0);
    trunc_ln40_3_fu_969_p1 <= sum_10_fu_957_p2(16 - 1 downto 0);
    trunc_ln40_4_fu_1175_p1 <= sum_12_fu_1163_p2(16 - 1 downto 0);
    trunc_ln40_5_fu_1259_p1 <= sum_14_fu_1247_p2(16 - 1 downto 0);
    trunc_ln40_fu_551_p1 <= sum_4_fu_529_p2(16 - 1 downto 0);
    zext_ln289_fu_1075_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln289_1_reg_1453),16));
    zext_ln290_fu_1079_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln290_1_reg_1458),16));
    zext_ln291_fu_1307_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln291_1_reg_1473),16));
    zext_ln292_fu_1311_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln292_1_reg_1478),16));
    zext_ln294_fu_1427_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln294_1_reg_1518),16));
    zext_ln295_fu_1431_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln295_1_reg_1503),16));
    zext_ln296_fu_1435_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln296_1_reg_1543),16));
    zext_ln297_fu_1439_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln297_1_reg_1548),16));
end behav;
