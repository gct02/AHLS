-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Gsm_LPC_Analysis_Quantization_and_coding is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    LARc_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    LARc_ce0 : OUT STD_LOGIC;
    LARc_we0 : OUT STD_LOGIC;
    LARc_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    LARc_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    LARc_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    LARc_ce1 : OUT STD_LOGIC;
    LARc_we1 : OUT STD_LOGIC;
    LARc_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    LARc_q1 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of Gsm_LPC_Analysis_Quantization_and_coding is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv17_100 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv7_3F : STD_LOGIC_VECTOR (6 downto 0) := "0111111";
    constant ap_const_lv7_60 : STD_LOGIC_VECTOR (6 downto 0) := "1100000";
    constant ap_const_lv7_20 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv17_800 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_const_lv16_7FFF : STD_LOGIC_VECTOR (15 downto 0) := "0111111111111111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_70 : STD_LOGIC_VECTOR (6 downto 0) := "1110000";
    constant ap_const_lv7_10 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_const_lv7_1F : STD_LOGIC_VECTOR (6 downto 0) := "0011111";
    constant ap_const_lv17_1F600 : STD_LOGIC_VECTOR (16 downto 0) := "11111011000000000";
    constant ap_const_lv17_18000 : STD_LOGIC_VECTOR (16 downto 0) := "11000000000000000";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv31_368C : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000011011010001100";
    constant ap_const_lv17_5E : STD_LOGIC_VECTOR (16 downto 0) := "00000000001011110";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv17_1F900 : STD_LOGIC_VECTOR (16 downto 0) := "11111100100000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv7_F : STD_LOGIC_VECTOR (6 downto 0) := "0001111";
    constant ap_const_lv31_2156 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000010000101010110";
    constant ap_const_lv17_1FEAB : STD_LOGIC_VECTOR (16 downto 0) := "11111111010101011";
    constant ap_const_lv31_234C : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000010001101001100";
    constant ap_const_lv17_1FB88 : STD_LOGIC_VECTOR (16 downto 0) := "11111101110001000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv7_7C : STD_LOGIC_VECTOR (6 downto 0) := "1111100";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv7_7 : STD_LOGIC_VECTOR (6 downto 0) := "0000111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal LARc_addr_reg_1439 : STD_LOGIC_VECTOR (2 downto 0);
    signal LARc_addr_3_reg_1444 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln277_1_fu_339_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln277_1_reg_1449 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal select_ln278_1_fu_473_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln278_1_reg_1454 : STD_LOGIC_VECTOR (6 downto 0);
    signal LARc_addr_4_reg_1459 : STD_LOGIC_VECTOR (2 downto 0);
    signal LARc_addr_5_reg_1464 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln279_1_fu_645_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln279_1_reg_1469 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal select_ln280_1_fu_807_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln280_1_reg_1474 : STD_LOGIC_VECTOR (6 downto 0);
    signal LARc_addr_6_reg_1479 : STD_LOGIC_VECTOR (2 downto 0);
    signal LARc_addr_7_reg_1484 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln40_12_fu_893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_12_reg_1489 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_4_reg_1494 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln283_1_fu_1063_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln283_1_reg_1499 : STD_LOGIC_VECTOR (6 downto 0);
    signal LARc_addr_8_reg_1504 : STD_LOGIC_VECTOR (2 downto 0);
    signal LARc_addr_9_reg_1509 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln282_1_fu_1127_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln282_1_reg_1514 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln40_16_fu_1203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_16_reg_1519 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1524 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln40_18_fu_1287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_18_reg_1529 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_1534 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln284_1_fu_1359_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln284_1_reg_1539 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal select_ln285_1_fu_1415_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln285_1_reg_1544 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln277_fu_1071_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln278_fu_1075_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln279_fu_1303_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln280_fu_1307_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal zext_ln282_fu_1423_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln283_fu_1427_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal zext_ln284_fu_1431_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln285_fu_1435_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_213_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal shl_ln48_1_fu_225_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln48_fu_221_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln48_1_fu_233_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln48_fu_237_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal temp_fu_243_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_fu_253_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_fu_257_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_8_fu_263_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln40_fu_273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_279_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_7_fu_289_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_9_fu_297_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln277_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln277_1_fu_313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln277_fu_333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln277_fu_325_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln277_fu_319_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln48_2_fu_347_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal shl_ln48_3_fu_359_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln48_2_fu_355_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln48_3_fu_367_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln48_1_fu_371_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal temp_8_fu_377_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_4_fu_387_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_3_fu_391_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_10_fu_397_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln40_6_fu_407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_413_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_9_fu_423_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_11_fu_431_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln278_fu_441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln278_1_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln278_fu_467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln278_fu_459_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln278_fu_453_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln48_4_fu_481_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal shl_ln48_5_fu_493_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln48_4_fu_489_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln48_5_fu_501_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln48_2_fu_505_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal temp_10_fu_511_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_5_fu_521_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_4_fu_525_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_12_fu_531_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln40_7_fu_541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln40_fu_547_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_11_fu_551_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_6_fu_559_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_5_fu_563_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_13_fu_569_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln40_8_fu_579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_585_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_12_fu_595_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_14_fu_603_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln279_fu_613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln279_1_fu_619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln279_fu_639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln279_fu_631_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln279_fu_625_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln48_6_fu_653_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal shl_ln48_7_fu_665_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln48_6_fu_661_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln48_7_fu_673_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln48_3_fu_677_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal temp_13_fu_683_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_7_fu_693_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_6_fu_697_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln40_9_fu_703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln40_1_fu_709_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_14_fu_713_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_8_fu_721_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_7_fu_725_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_15_fu_731_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln40_10_fu_741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_747_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_15_fu_757_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_16_fu_765_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln280_fu_775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln280_1_fu_781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln280_fu_801_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln280_fu_793_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln280_fu_787_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln48_fu_819_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln48_fu_819_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal temp_16_fu_825_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_9_fu_835_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_8_fu_839_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_17_fu_845_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln40_11_fu_855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln40_2_fu_861_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_17_fu_865_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_10_fu_873_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_9_fu_877_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_18_fu_883_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal shl_ln48_8_fu_909_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal shl_ln48_9_fu_921_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln48_9_fu_917_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln48_10_fu_929_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln48_fu_933_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal temp_19_fu_939_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_11_fu_949_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_10_fu_953_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln40_13_fu_959_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln40_3_fu_965_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_20_fu_969_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_12_fu_977_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_11_fu_981_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_20_fu_987_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln40_14_fu_997_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_1003_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_21_fu_1013_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_21_fu_1021_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln283_fu_1031_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln283_1_fu_1037_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln283_fu_1057_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln283_fu_1049_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln283_fu_1043_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_18_fu_1079_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_19_fu_1085_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln282_fu_1095_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln282_1_fu_1101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln282_fu_1121_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln282_fu_1113_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln282_fu_1107_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln48_1_fu_1139_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln48_1_fu_1139_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal temp_22_fu_1145_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_13_fu_1155_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_12_fu_1159_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln40_15_fu_1165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln40_4_fu_1171_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_23_fu_1175_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_14_fu_1183_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_13_fu_1187_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_22_fu_1193_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln48_2_fu_1223_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln48_2_fu_1223_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal temp_25_fu_1229_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_15_fu_1239_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_14_fu_1243_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln40_17_fu_1249_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln40_5_fu_1255_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_26_fu_1259_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln39_16_fu_1267_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_15_fu_1271_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_24_fu_1277_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal temp_24_fu_1311_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_23_fu_1317_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln284_fu_1327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln284_1_fu_1333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln284_fu_1353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln284_fu_1345_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln284_fu_1339_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal temp_27_fu_1367_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_25_fu_1373_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln285_fu_1383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln285_1_fu_1389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln285_fu_1409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln285_fu_1401_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln285_fu_1395_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component Gsm_LPC_Analysis_mul_16s_15ns_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;



begin
    mul_16s_15ns_31_1_1_U89 : component Gsm_LPC_Analysis_mul_16s_15ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        dout_WIDTH => 31)
    port map (
        din0 => LARc_q1,
        din1 => mul_ln48_fu_819_p1,
        dout => mul_ln48_fu_819_p2);

    mul_16s_15ns_31_1_1_U90 : component Gsm_LPC_Analysis_mul_16s_15ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        dout_WIDTH => 31)
    port map (
        din0 => LARc_q1,
        din1 => mul_ln48_1_fu_1139_p1,
        dout => mul_ln48_1_fu_1139_p2);

    mul_16s_15ns_31_1_1_U91 : component Gsm_LPC_Analysis_mul_16s_15ns_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        dout_WIDTH => 31)
    port map (
        din0 => LARc_q0,
        din1 => mul_ln48_2_fu_1223_p1,
        dout => mul_ln48_2_fu_1223_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                icmp_ln40_12_reg_1489 <= icmp_ln40_12_fu_893_p2;
                select_ln283_1_reg_1499 <= select_ln283_1_fu_1063_p3;
                tmp_4_reg_1494 <= sum_9_fu_877_p2(15 downto 9);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                icmp_ln40_16_reg_1519 <= icmp_ln40_16_fu_1203_p2;
                icmp_ln40_18_reg_1529 <= icmp_ln40_18_fu_1287_p2;
                select_ln282_1_reg_1514 <= select_ln282_1_fu_1127_p3;
                tmp_6_reg_1524 <= sum_13_fu_1187_p2(15 downto 9);
                tmp_7_reg_1534 <= sum_15_fu_1271_p2(15 downto 9);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                select_ln277_1_reg_1449 <= select_ln277_1_fu_339_p3;
                select_ln278_1_reg_1454 <= select_ln278_1_fu_473_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                select_ln279_1_reg_1469 <= select_ln279_1_fu_645_p3;
                select_ln280_1_reg_1474 <= select_ln280_1_fu_807_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                select_ln284_1_reg_1539 <= select_ln284_1_fu_1359_p3;
                select_ln285_1_reg_1544 <= select_ln285_1_fu_1415_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    LARc_addr_3_reg_1444 <= ap_const_lv64_1(3 - 1 downto 0);
    LARc_addr_4_reg_1459 <= ap_const_lv64_2(3 - 1 downto 0);
    LARc_addr_5_reg_1464 <= ap_const_lv64_3(3 - 1 downto 0);
    LARc_addr_6_reg_1479 <= ap_const_lv64_4(3 - 1 downto 0);
    LARc_addr_7_reg_1484 <= ap_const_lv64_5(3 - 1 downto 0);
    LARc_addr_8_reg_1504 <= ap_const_lv64_6(3 - 1 downto 0);
    LARc_addr_9_reg_1509 <= ap_const_lv64_7(3 - 1 downto 0);
    LARc_addr_reg_1439 <= ap_const_lv64_0(3 - 1 downto 0);

    LARc_address0_assign_proc : process(ap_CS_fsm_state1, LARc_addr_3_reg_1444, ap_CS_fsm_state2, LARc_addr_5_reg_1464, ap_CS_fsm_state3, LARc_addr_7_reg_1484, ap_CS_fsm_state4, LARc_addr_9_reg_1509, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            LARc_address0 <= LARc_addr_9_reg_1509;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            LARc_address0 <= LARc_addr_7_reg_1484;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            LARc_address0 <= LARc_addr_5_reg_1464;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            LARc_address0 <= LARc_addr_3_reg_1444;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            LARc_address0 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            LARc_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            LARc_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            LARc_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        else 
            LARc_address0 <= "XXX";
        end if; 
    end process;


    LARc_address1_assign_proc : process(ap_CS_fsm_state1, LARc_addr_reg_1439, ap_CS_fsm_state2, LARc_addr_4_reg_1459, ap_CS_fsm_state3, LARc_addr_6_reg_1479, ap_CS_fsm_state4, LARc_addr_8_reg_1504, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            LARc_address1 <= LARc_addr_8_reg_1504;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            LARc_address1 <= LARc_addr_6_reg_1479;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            LARc_address1 <= LARc_addr_4_reg_1459;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            LARc_address1 <= LARc_addr_reg_1439;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            LARc_address1 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            LARc_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            LARc_address1 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            LARc_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            LARc_address1 <= "XXX";
        end if; 
    end process;


    LARc_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            LARc_ce0 <= ap_const_logic_1;
        else 
            LARc_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    LARc_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            LARc_ce1 <= ap_const_logic_1;
        else 
            LARc_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    LARc_d0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, zext_ln278_fu_1075_p1, zext_ln280_fu_1307_p1, ap_CS_fsm_state7, zext_ln283_fu_1427_p1, ap_CS_fsm_state8, zext_ln285_fu_1435_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            LARc_d0 <= zext_ln285_fu_1435_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            LARc_d0 <= zext_ln283_fu_1427_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            LARc_d0 <= zext_ln280_fu_1307_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            LARc_d0 <= zext_ln278_fu_1075_p1;
        else 
            LARc_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    LARc_d1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, zext_ln277_fu_1071_p1, zext_ln279_fu_1303_p1, ap_CS_fsm_state7, zext_ln282_fu_1423_p1, ap_CS_fsm_state8, zext_ln284_fu_1431_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            LARc_d1 <= zext_ln284_fu_1431_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            LARc_d1 <= zext_ln282_fu_1423_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            LARc_d1 <= zext_ln279_fu_1303_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            LARc_d1 <= zext_ln277_fu_1071_p1;
        else 
            LARc_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    LARc_we0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            LARc_we0 <= ap_const_logic_1;
        else 
            LARc_we0 <= ap_const_logic_0;
        end if; 
    end process;


    LARc_we1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            LARc_we1 <= ap_const_logic_1;
        else 
            LARc_we1 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln277_fu_319_p2 <= std_logic_vector(unsigned(temp_7_fu_289_p3) + unsigned(ap_const_lv7_20));
    add_ln278_fu_453_p2 <= std_logic_vector(unsigned(temp_9_fu_423_p3) + unsigned(ap_const_lv7_20));
    add_ln279_fu_625_p2 <= std_logic_vector(unsigned(temp_12_fu_595_p3) + unsigned(ap_const_lv7_10));
    add_ln280_fu_787_p2 <= std_logic_vector(unsigned(temp_15_fu_757_p3) + unsigned(ap_const_lv7_10));
    add_ln282_fu_1107_p2 <= std_logic_vector(unsigned(temp_18_fu_1079_p3) + unsigned(ap_const_lv7_8));
    add_ln283_fu_1043_p2 <= std_logic_vector(unsigned(temp_21_fu_1013_p3) + unsigned(ap_const_lv7_8));
    add_ln284_fu_1339_p2 <= std_logic_vector(unsigned(temp_24_fu_1311_p3) + unsigned(ap_const_lv7_4));
    add_ln285_fu_1395_p2 <= std_logic_vector(unsigned(temp_27_fu_1367_p3) + unsigned(ap_const_lv7_4));
    add_ln48_1_fu_371_p2 <= std_logic_vector(signed(sext_ln48_2_fu_355_p1) + signed(sext_ln48_3_fu_367_p1));
    add_ln48_2_fu_505_p2 <= std_logic_vector(signed(sext_ln48_4_fu_489_p1) + signed(sext_ln48_5_fu_501_p1));
    add_ln48_3_fu_677_p2 <= std_logic_vector(signed(sext_ln48_6_fu_661_p1) + signed(sext_ln48_7_fu_673_p1));
    add_ln48_fu_237_p2 <= std_logic_vector(signed(sext_ln48_fu_221_p1) + signed(sext_ln48_1_fu_233_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln277_1_fu_313_p2 <= "1" when (signed(temp_7_fu_289_p3) < signed(ap_const_lv7_60)) else "0";
    icmp_ln277_fu_307_p2 <= "1" when (tmp_9_fu_297_p4 = ap_const_lv2_1) else "0";
    icmp_ln278_1_fu_447_p2 <= "1" when (signed(temp_9_fu_423_p3) < signed(ap_const_lv7_60)) else "0";
    icmp_ln278_fu_441_p2 <= "1" when (tmp_11_fu_431_p4 = ap_const_lv2_1) else "0";
    icmp_ln279_1_fu_619_p2 <= "1" when (signed(temp_12_fu_595_p3) < signed(ap_const_lv7_70)) else "0";
    icmp_ln279_fu_613_p2 <= "1" when (signed(tmp_14_fu_603_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln280_1_fu_781_p2 <= "1" when (signed(temp_15_fu_757_p3) < signed(ap_const_lv7_70)) else "0";
    icmp_ln280_fu_775_p2 <= "1" when (signed(tmp_16_fu_765_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln282_1_fu_1101_p2 <= "1" when (signed(temp_18_fu_1079_p3) < signed(ap_const_lv7_78)) else "0";
    icmp_ln282_fu_1095_p2 <= "1" when (signed(tmp_19_fu_1085_p4) > signed(ap_const_lv4_0)) else "0";
    icmp_ln283_1_fu_1037_p2 <= "1" when (signed(temp_21_fu_1013_p3) < signed(ap_const_lv7_78)) else "0";
    icmp_ln283_fu_1031_p2 <= "1" when (signed(tmp_21_fu_1021_p4) > signed(ap_const_lv4_0)) else "0";
    icmp_ln284_1_fu_1333_p2 <= "1" when (signed(temp_24_fu_1311_p3) < signed(ap_const_lv7_7C)) else "0";
    icmp_ln284_fu_1327_p2 <= "1" when (signed(tmp_23_fu_1317_p4) > signed(ap_const_lv5_0)) else "0";
    icmp_ln285_1_fu_1389_p2 <= "1" when (signed(temp_27_fu_1367_p3) < signed(ap_const_lv7_7C)) else "0";
    icmp_ln285_fu_1383_p2 <= "1" when (signed(tmp_25_fu_1373_p4) > signed(ap_const_lv5_0)) else "0";
    icmp_ln40_10_fu_741_p2 <= "1" when (tmp_15_fu_731_p4 = ap_const_lv2_1) else "0";
    icmp_ln40_11_fu_855_p2 <= "1" when (tmp_17_fu_845_p4 = ap_const_lv2_1) else "0";
    icmp_ln40_12_fu_893_p2 <= "1" when (tmp_18_fu_883_p4 = ap_const_lv2_1) else "0";
    icmp_ln40_13_fu_959_p2 <= "1" when (signed(sum_10_fu_953_p2) < signed(ap_const_lv17_18000)) else "0";
    icmp_ln40_14_fu_997_p2 <= "1" when (tmp_20_fu_987_p4 = ap_const_lv2_1) else "0";
    icmp_ln40_15_fu_1165_p2 <= "1" when (signed(sum_12_fu_1159_p2) < signed(ap_const_lv17_18000)) else "0";
    icmp_ln40_16_fu_1203_p2 <= "1" when (tmp_22_fu_1193_p4 = ap_const_lv2_1) else "0";
    icmp_ln40_17_fu_1249_p2 <= "1" when (signed(sum_14_fu_1243_p2) < signed(ap_const_lv17_18000)) else "0";
    icmp_ln40_18_fu_1287_p2 <= "1" when (tmp_24_fu_1277_p4 = ap_const_lv2_1) else "0";
    icmp_ln40_6_fu_407_p2 <= "1" when (tmp_10_fu_397_p4 = ap_const_lv2_1) else "0";
    icmp_ln40_7_fu_541_p2 <= "1" when (tmp_12_fu_531_p4 = ap_const_lv2_1) else "0";
    icmp_ln40_8_fu_579_p2 <= "1" when (tmp_13_fu_569_p4 = ap_const_lv2_1) else "0";
    icmp_ln40_9_fu_703_p2 <= "1" when (signed(sum_6_fu_697_p2) < signed(ap_const_lv17_18000)) else "0";
    icmp_ln40_fu_273_p2 <= "1" when (tmp_8_fu_263_p4 = ap_const_lv2_1) else "0";
    mul_ln48_1_fu_1139_p1 <= ap_const_lv31_2156(15 - 1 downto 0);
    mul_ln48_2_fu_1223_p1 <= ap_const_lv31_234C(15 - 1 downto 0);
    mul_ln48_fu_819_p1 <= ap_const_lv31_368C(15 - 1 downto 0);
    or_ln277_fu_333_p2 <= (icmp_ln277_fu_307_p2 or icmp_ln277_1_fu_313_p2);
    or_ln278_fu_467_p2 <= (icmp_ln278_fu_441_p2 or icmp_ln278_1_fu_447_p2);
    or_ln279_fu_639_p2 <= (icmp_ln279_fu_613_p2 or icmp_ln279_1_fu_619_p2);
    or_ln280_fu_801_p2 <= (icmp_ln280_fu_775_p2 or icmp_ln280_1_fu_781_p2);
    or_ln282_fu_1121_p2 <= (icmp_ln282_fu_1095_p2 or icmp_ln282_1_fu_1101_p2);
    or_ln283_fu_1057_p2 <= (icmp_ln283_fu_1031_p2 or icmp_ln283_1_fu_1037_p2);
    or_ln284_fu_1353_p2 <= (icmp_ln284_fu_1327_p2 or icmp_ln284_1_fu_1333_p2);
    or_ln285_fu_1409_p2 <= (icmp_ln285_fu_1383_p2 or icmp_ln285_1_fu_1389_p2);
    select_ln277_1_fu_339_p3 <= 
        select_ln277_fu_325_p3 when (or_ln277_fu_333_p2(0) = '1') else 
        add_ln277_fu_319_p2;
    select_ln277_fu_325_p3 <= 
        ap_const_lv7_3F when (icmp_ln277_fu_307_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln278_1_fu_473_p3 <= 
        select_ln278_fu_459_p3 when (or_ln278_fu_467_p2(0) = '1') else 
        add_ln278_fu_453_p2;
    select_ln278_fu_459_p3 <= 
        ap_const_lv7_3F when (icmp_ln278_fu_441_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln279_1_fu_645_p3 <= 
        select_ln279_fu_631_p3 when (or_ln279_fu_639_p2(0) = '1') else 
        add_ln279_fu_625_p2;
    select_ln279_fu_631_p3 <= 
        ap_const_lv7_1F when (icmp_ln279_fu_613_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln280_1_fu_807_p3 <= 
        select_ln280_fu_793_p3 when (or_ln280_fu_801_p2(0) = '1') else 
        add_ln280_fu_787_p2;
    select_ln280_fu_793_p3 <= 
        ap_const_lv7_1F when (icmp_ln280_fu_775_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln282_1_fu_1127_p3 <= 
        select_ln282_fu_1113_p3 when (or_ln282_fu_1121_p2(0) = '1') else 
        add_ln282_fu_1107_p2;
    select_ln282_fu_1113_p3 <= 
        ap_const_lv7_F when (icmp_ln282_fu_1095_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln283_1_fu_1063_p3 <= 
        select_ln283_fu_1049_p3 when (or_ln283_fu_1057_p2(0) = '1') else 
        add_ln283_fu_1043_p2;
    select_ln283_fu_1049_p3 <= 
        ap_const_lv7_F when (icmp_ln283_fu_1031_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln284_1_fu_1359_p3 <= 
        select_ln284_fu_1345_p3 when (or_ln284_fu_1353_p2(0) = '1') else 
        add_ln284_fu_1339_p2;
    select_ln284_fu_1345_p3 <= 
        ap_const_lv7_7 when (icmp_ln284_fu_1327_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln285_1_fu_1415_p3 <= 
        select_ln285_fu_1401_p3 when (or_ln285_fu_1409_p2(0) = '1') else 
        add_ln285_fu_1395_p2;
    select_ln285_fu_1401_p3 <= 
        ap_const_lv7_7 when (icmp_ln285_fu_1383_p2(0) = '1') else 
        ap_const_lv7_0;
        sext_ln39_10_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_17_fu_865_p3),17));

        sext_ln39_11_fu_949_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_19_fu_939_p4),17));

        sext_ln39_12_fu_977_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_20_fu_969_p3),17));

        sext_ln39_13_fu_1155_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_22_fu_1145_p4),17));

        sext_ln39_14_fu_1183_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_23_fu_1175_p3),17));

        sext_ln39_15_fu_1239_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_25_fu_1229_p4),17));

        sext_ln39_16_fu_1267_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_26_fu_1259_p3),17));

        sext_ln39_4_fu_387_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_8_fu_377_p4),17));

        sext_ln39_5_fu_521_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_10_fu_511_p4),17));

        sext_ln39_6_fu_559_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_11_fu_551_p3),17));

        sext_ln39_7_fu_693_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_13_fu_683_p4),17));

        sext_ln39_8_fu_721_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_14_fu_713_p3),17));

        sext_ln39_9_fu_835_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_16_fu_825_p4),17));

        sext_ln39_fu_253_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_fu_243_p4),17));

        sext_ln48_10_fu_929_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln48_9_fu_921_p3),31));

        sext_ln48_1_fu_233_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln48_1_fu_225_p3),31));

        sext_ln48_2_fu_355_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln48_2_fu_347_p3),31));

        sext_ln48_3_fu_367_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln48_3_fu_359_p3),31));

        sext_ln48_4_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln48_4_fu_481_p3),31));

        sext_ln48_5_fu_501_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln48_5_fu_493_p3),31));

        sext_ln48_6_fu_661_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln48_6_fu_653_p3),31));

        sext_ln48_7_fu_673_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln48_7_fu_665_p3),31));

        sext_ln48_9_fu_917_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln48_8_fu_909_p3),31));

        sext_ln48_fu_221_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_213_p3),31));

    shl_ln48_1_fu_225_p3 <= (LARc_q1 & ap_const_lv12_0);
    shl_ln48_2_fu_347_p3 <= (LARc_q0 & ap_const_lv14_0);
    shl_ln48_3_fu_359_p3 <= (LARc_q0 & ap_const_lv12_0);
    shl_ln48_4_fu_481_p3 <= (LARc_q1 & ap_const_lv14_0);
    shl_ln48_5_fu_493_p3 <= (LARc_q1 & ap_const_lv12_0);
    shl_ln48_6_fu_653_p3 <= (LARc_q0 & ap_const_lv14_0);
    shl_ln48_7_fu_665_p3 <= (LARc_q0 & ap_const_lv12_0);
    shl_ln48_8_fu_909_p3 <= (LARc_q0 & ap_const_lv14_0);
    shl_ln48_9_fu_921_p3 <= (LARc_q0 & ap_const_lv10_0);
    shl_ln_fu_213_p3 <= (LARc_q1 & ap_const_lv14_0);
    sub_ln48_fu_933_p2 <= std_logic_vector(signed(sext_ln48_9_fu_917_p1) - signed(sext_ln48_10_fu_929_p1));
    sum_10_fu_953_p2 <= std_logic_vector(signed(sext_ln39_11_fu_949_p1) + signed(ap_const_lv17_1F900));
    sum_11_fu_981_p2 <= std_logic_vector(signed(sext_ln39_12_fu_977_p1) + signed(ap_const_lv17_100));
    sum_12_fu_1159_p2 <= std_logic_vector(signed(sext_ln39_13_fu_1155_p1) + signed(ap_const_lv17_1FEAB));
    sum_13_fu_1187_p2 <= std_logic_vector(signed(sext_ln39_14_fu_1183_p1) + signed(ap_const_lv17_100));
    sum_14_fu_1243_p2 <= std_logic_vector(signed(sext_ln39_15_fu_1239_p1) + signed(ap_const_lv17_1FB88));
    sum_15_fu_1271_p2 <= std_logic_vector(signed(sext_ln39_16_fu_1267_p1) + signed(ap_const_lv17_100));
    sum_3_fu_391_p2 <= std_logic_vector(signed(sext_ln39_4_fu_387_p1) + signed(ap_const_lv17_100));
    sum_4_fu_525_p2 <= std_logic_vector(signed(sext_ln39_5_fu_521_p1) + signed(ap_const_lv17_800));
    sum_5_fu_563_p2 <= std_logic_vector(signed(sext_ln39_6_fu_559_p1) + signed(ap_const_lv17_100));
    sum_6_fu_697_p2 <= std_logic_vector(signed(sext_ln39_7_fu_693_p1) + signed(ap_const_lv17_1F600));
    sum_7_fu_725_p2 <= std_logic_vector(signed(sext_ln39_8_fu_721_p1) + signed(ap_const_lv17_100));
    sum_8_fu_839_p2 <= std_logic_vector(signed(sext_ln39_9_fu_835_p1) + signed(ap_const_lv17_5E));
    sum_9_fu_877_p2 <= std_logic_vector(signed(sext_ln39_10_fu_873_p1) + signed(ap_const_lv17_100));
    sum_fu_257_p2 <= std_logic_vector(signed(sext_ln39_fu_253_p1) + signed(ap_const_lv17_100));
    temp_10_fu_511_p4 <= add_ln48_2_fu_505_p2(30 downto 15);
    temp_11_fu_551_p3 <= 
        ap_const_lv16_7FFF when (icmp_ln40_7_fu_541_p2(0) = '1') else 
        trunc_ln40_fu_547_p1;
    temp_12_fu_595_p3 <= 
        ap_const_lv7_3F when (icmp_ln40_8_fu_579_p2(0) = '1') else 
        tmp_2_fu_585_p4;
    temp_13_fu_683_p4 <= add_ln48_3_fu_677_p2(30 downto 15);
    temp_14_fu_713_p3 <= 
        ap_const_lv16_8000 when (icmp_ln40_9_fu_703_p2(0) = '1') else 
        trunc_ln40_1_fu_709_p1;
    temp_15_fu_757_p3 <= 
        ap_const_lv7_3F when (icmp_ln40_10_fu_741_p2(0) = '1') else 
        tmp_3_fu_747_p4;
    temp_16_fu_825_p4 <= mul_ln48_fu_819_p2(30 downto 15);
    temp_17_fu_865_p3 <= 
        ap_const_lv16_7FFF when (icmp_ln40_11_fu_855_p2(0) = '1') else 
        trunc_ln40_2_fu_861_p1;
    temp_18_fu_1079_p3 <= 
        ap_const_lv7_3F when (icmp_ln40_12_reg_1489(0) = '1') else 
        tmp_4_reg_1494;
    temp_19_fu_939_p4 <= sub_ln48_fu_933_p2(30 downto 15);
    temp_20_fu_969_p3 <= 
        ap_const_lv16_8000 when (icmp_ln40_13_fu_959_p2(0) = '1') else 
        trunc_ln40_3_fu_965_p1;
    temp_21_fu_1013_p3 <= 
        ap_const_lv7_3F when (icmp_ln40_14_fu_997_p2(0) = '1') else 
        tmp_5_fu_1003_p4;
    temp_22_fu_1145_p4 <= mul_ln48_1_fu_1139_p2(30 downto 15);
    temp_23_fu_1175_p3 <= 
        ap_const_lv16_8000 when (icmp_ln40_15_fu_1165_p2(0) = '1') else 
        trunc_ln40_4_fu_1171_p1;
    temp_24_fu_1311_p3 <= 
        ap_const_lv7_3F when (icmp_ln40_16_reg_1519(0) = '1') else 
        tmp_6_reg_1524;
    temp_25_fu_1229_p4 <= mul_ln48_2_fu_1223_p2(30 downto 15);
    temp_26_fu_1259_p3 <= 
        ap_const_lv16_8000 when (icmp_ln40_17_fu_1249_p2(0) = '1') else 
        trunc_ln40_5_fu_1255_p1;
    temp_27_fu_1367_p3 <= 
        ap_const_lv7_3F when (icmp_ln40_18_reg_1529(0) = '1') else 
        tmp_7_reg_1534;
    temp_7_fu_289_p3 <= 
        ap_const_lv7_3F when (icmp_ln40_fu_273_p2(0) = '1') else 
        tmp_fu_279_p4;
    temp_8_fu_377_p4 <= add_ln48_1_fu_371_p2(30 downto 15);
    temp_9_fu_423_p3 <= 
        ap_const_lv7_3F when (icmp_ln40_6_fu_407_p2(0) = '1') else 
        tmp_1_fu_413_p4;
    temp_fu_243_p4 <= add_ln48_fu_237_p2(30 downto 15);
    tmp_10_fu_397_p4 <= sum_3_fu_391_p2(16 downto 15);
    tmp_11_fu_431_p4 <= temp_9_fu_423_p3(6 downto 5);
    tmp_12_fu_531_p4 <= sum_4_fu_525_p2(16 downto 15);
    tmp_13_fu_569_p4 <= sum_5_fu_563_p2(16 downto 15);
    tmp_14_fu_603_p4 <= temp_12_fu_595_p3(6 downto 4);
    tmp_15_fu_731_p4 <= sum_7_fu_725_p2(16 downto 15);
    tmp_16_fu_765_p4 <= temp_15_fu_757_p3(6 downto 4);
    tmp_17_fu_845_p4 <= sum_8_fu_839_p2(16 downto 15);
    tmp_18_fu_883_p4 <= sum_9_fu_877_p2(16 downto 15);
    tmp_19_fu_1085_p4 <= temp_18_fu_1079_p3(6 downto 3);
    tmp_1_fu_413_p4 <= sum_3_fu_391_p2(15 downto 9);
    tmp_20_fu_987_p4 <= sum_11_fu_981_p2(16 downto 15);
    tmp_21_fu_1021_p4 <= temp_21_fu_1013_p3(6 downto 3);
    tmp_22_fu_1193_p4 <= sum_13_fu_1187_p2(16 downto 15);
    tmp_23_fu_1317_p4 <= temp_24_fu_1311_p3(6 downto 2);
    tmp_24_fu_1277_p4 <= sum_15_fu_1271_p2(16 downto 15);
    tmp_25_fu_1373_p4 <= temp_27_fu_1367_p3(6 downto 2);
    tmp_2_fu_585_p4 <= sum_5_fu_563_p2(15 downto 9);
    tmp_3_fu_747_p4 <= sum_7_fu_725_p2(15 downto 9);
    tmp_5_fu_1003_p4 <= sum_11_fu_981_p2(15 downto 9);
    tmp_8_fu_263_p4 <= sum_fu_257_p2(16 downto 15);
    tmp_9_fu_297_p4 <= temp_7_fu_289_p3(6 downto 5);
    tmp_fu_279_p4 <= sum_fu_257_p2(15 downto 9);
    trunc_ln40_1_fu_709_p1 <= sum_6_fu_697_p2(16 - 1 downto 0);
    trunc_ln40_2_fu_861_p1 <= sum_8_fu_839_p2(16 - 1 downto 0);
    trunc_ln40_3_fu_965_p1 <= sum_10_fu_953_p2(16 - 1 downto 0);
    trunc_ln40_4_fu_1171_p1 <= sum_12_fu_1159_p2(16 - 1 downto 0);
    trunc_ln40_5_fu_1255_p1 <= sum_14_fu_1243_p2(16 - 1 downto 0);
    trunc_ln40_fu_547_p1 <= sum_4_fu_525_p2(16 - 1 downto 0);
    zext_ln277_fu_1071_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln277_1_reg_1449),16));
    zext_ln278_fu_1075_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln278_1_reg_1454),16));
    zext_ln279_fu_1303_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln279_1_reg_1469),16));
    zext_ln280_fu_1307_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln280_1_reg_1474),16));
    zext_ln282_fu_1423_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln282_1_reg_1514),16));
    zext_ln283_fu_1427_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln283_1_reg_1499),16));
    zext_ln284_fu_1431_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln284_1_reg_1539),16));
    zext_ln285_fu_1435_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln285_1_reg_1544),16));
end behav;
