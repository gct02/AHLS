// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module Gsm_LPC_Analysis_Reflection_coefficients (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        L_ACF_address0,
        L_ACF_ce0,
        L_ACF_q0,
        LARc_address0,
        LARc_ce0,
        LARc_we0,
        LARc_d0,
        bitoff_address0,
        bitoff_ce0,
        bitoff_q0,
        bitoff_address1,
        bitoff_ce1,
        bitoff_q1,
        bitoff_address2,
        bitoff_ce2,
        bitoff_q2,
        bitoff_address3,
        bitoff_ce3,
        bitoff_q3
);

parameter    ap_ST_fsm_state1 = 22'd1;
parameter    ap_ST_fsm_state2 = 22'd2;
parameter    ap_ST_fsm_state3 = 22'd4;
parameter    ap_ST_fsm_state4 = 22'd8;
parameter    ap_ST_fsm_state5 = 22'd16;
parameter    ap_ST_fsm_state6 = 22'd32;
parameter    ap_ST_fsm_state7 = 22'd64;
parameter    ap_ST_fsm_state8 = 22'd128;
parameter    ap_ST_fsm_state9 = 22'd256;
parameter    ap_ST_fsm_state10 = 22'd512;
parameter    ap_ST_fsm_state11 = 22'd1024;
parameter    ap_ST_fsm_state12 = 22'd2048;
parameter    ap_ST_fsm_state13 = 22'd4096;
parameter    ap_ST_fsm_state14 = 22'd8192;
parameter    ap_ST_fsm_state15 = 22'd16384;
parameter    ap_ST_fsm_state16 = 22'd32768;
parameter    ap_ST_fsm_state17 = 22'd65536;
parameter    ap_ST_fsm_state18 = 22'd131072;
parameter    ap_ST_fsm_state19 = 22'd262144;
parameter    ap_ST_fsm_state20 = 22'd524288;
parameter    ap_ST_fsm_state21 = 22'd1048576;
parameter    ap_ST_fsm_state22 = 22'd2097152;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] L_ACF_address0;
output   L_ACF_ce0;
input  [63:0] L_ACF_q0;
output  [2:0] LARc_address0;
output   LARc_ce0;
output   LARc_we0;
output  [15:0] LARc_d0;
output  [7:0] bitoff_address0;
output   bitoff_ce0;
input  [3:0] bitoff_q0;
output  [7:0] bitoff_address1;
output   bitoff_ce1;
input  [3:0] bitoff_q1;
output  [7:0] bitoff_address2;
output   bitoff_ce2;
input  [3:0] bitoff_q2;
output  [7:0] bitoff_address3;
output   bitoff_ce3;
input  [3:0] bitoff_q3;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] L_ACF_address0;
reg L_ACF_ce0;
reg[2:0] LARc_address0;
reg LARc_ce0;
reg LARc_we0;
reg[15:0] LARc_d0;
reg bitoff_ce0;
reg bitoff_ce1;
reg bitoff_ce2;
reg bitoff_ce3;

(* fsm_encoding = "none" *) reg   [21:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln172_fu_460_p2;
reg   [0:0] icmp_ln172_reg_1533;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln107_fu_466_p2;
reg   [0:0] icmp_ln107_reg_1537;
wire   [0:0] and_ln107_fu_642_p2;
reg   [0:0] and_ln107_reg_1562;
wire   [0:0] and_ln107_4_fu_678_p2;
reg   [0:0] and_ln107_4_reg_1568;
wire   [0:0] or_ln107_fu_684_p2;
reg   [0:0] or_ln107_reg_1573;
wire   [63:0] sh_prom_cast_cast_cast_cast_fu_786_p1;
reg   [63:0] sh_prom_cast_cast_cast_cast_reg_1579;
wire    ap_CS_fsm_state3;
wire   [63:0] zext_ln184_fu_796_p1;
reg   [63:0] zext_ln184_reg_1587;
wire    ap_CS_fsm_state4;
wire   [63:0] zext_ln191_fu_836_p1;
reg   [63:0] zext_ln191_reg_1607;
wire    ap_CS_fsm_state6;
wire   [63:0] zext_ln197_fu_872_p1;
reg   [63:0] zext_ln197_reg_1627;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln204_fu_908_p2;
reg   [0:0] icmp_ln204_reg_1681;
wire    ap_CS_fsm_state10;
wire   [3:0] add_ln204_1_fu_914_p2;
reg   [3:0] add_ln204_1_reg_1685;
wire   [63:0] zext_ln204_fu_920_p1;
reg   [63:0] zext_ln204_reg_1690;
wire    ap_CS_fsm_state11;
wire  signed [15:0] P_q0;
reg  signed [15:0] temp_7_reg_1695;
wire   [15:0] zext_ln67_fu_955_p1;
reg  signed [15:0] L_denum_reg_1711;
wire    ap_CS_fsm_state12;
wire   [0:0] icmp_ln208_fu_959_p2;
reg   [0:0] icmp_ln208_reg_1716;
wire  signed [62:0] sext_ln120_fu_965_p1;
wire  signed [63:0] sext_ln126_fu_969_p1;
reg  signed [63:0] sext_ln126_reg_1725;
wire  signed [16:0] sext_ln121_fu_973_p1;
reg  signed [16:0] sext_ln121_reg_1730;
wire  signed [62:0] sext_ln121_1_fu_977_p1;
reg  signed [62:0] sext_ln121_1_reg_1735;
wire   [0:0] icmp_ln134_fu_981_p2;
reg   [0:0] icmp_ln134_reg_1740;
wire   [2:0] trunc_ln204_fu_987_p1;
reg   [2:0] trunc_ln204_reg_1751;
wire   [14:0] trunc_ln144_fu_1048_p1;
wire    ap_CS_fsm_state13;
wire   [62:0] L_num_4_fu_1052_p3;
wire   [3:0] k_1_fu_1060_p2;
wire   [0:0] icmp_ln55_fu_1097_p2;
reg   [0:0] icmp_ln55_reg_1777;
wire   [0:0] icmp_ln55_1_fu_1103_p2;
reg   [0:0] icmp_ln55_1_reg_1784;
wire  signed [30:0] sext_ln59_fu_1108_p1;
reg  signed [30:0] sext_ln59_reg_1789;
wire   [63:0] zext_ln229_fu_1238_p1;
reg   [63:0] zext_ln229_reg_1807;
wire    ap_CS_fsm_state17;
reg   [3:0] K_addr_1_reg_1812;
wire   [3:0] add_ln232_fu_1243_p2;
reg   [3:0] add_ln232_reg_1817;
wire  signed [15:0] K_q0;
reg  signed [15:0] K_load_reg_1827;
wire    ap_CS_fsm_state18;
reg  signed [15:0] P_load_reg_1839;
reg   [3:0] ACF_address0;
reg    ACF_ce0;
reg    ACF_we0;
wire   [15:0] ACF_d0;
wire   [15:0] ACF_q0;
reg   [3:0] P_address0;
reg    P_ce0;
reg    P_we0;
reg   [15:0] P_d0;
reg   [3:0] K_address0;
reg    K_ce0;
reg    K_we0;
reg   [15:0] K_d0;
reg  signed [15:0] temp_12_reg_382;
wire   [0:0] tmp_4_fu_927_p3;
reg   [3:0] k_reg_391;
wire   [0:0] icmp_ln138_fu_1066_p2;
reg   [62:0] L_num_1_reg_402;
reg   [14:0] div_reg_411;
reg   [15:0] ap_phi_mux_retval_0_i43_phi_fu_426_p4;
reg   [15:0] retval_0_i43_reg_422;
wire   [15:0] div_3_fu_1039_p3;
reg   [3:0] m_reg_433;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state16;
wire   [63:0] zext_ln115_fu_580_p1;
wire   [63:0] zext_ln115_1_fu_595_p1;
wire   [63:0] zext_ln114_fu_610_p1;
wire   [63:0] zext_ln113_1_fu_615_p1;
wire   [0:0] icmp_ln184_fu_790_p2;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln191_fu_830_p2;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln197_fu_860_p2;
wire    ap_CS_fsm_state9;
wire   [63:0] zext_ln165_fu_1139_p1;
wire   [0:0] icmp_ln210_fu_1118_p2;
wire   [0:0] icmp_ln229_fu_1232_p2;
wire   [63:0] zext_ln232_fu_1249_p1;
wire   [63:0] zext_ln174_fu_1484_p1;
wire    ap_CS_fsm_state22;
wire   [0:0] icmp_ln174_fu_1478_p2;
reg   [3:0] i_fu_162;
wire   [3:0] grp_fu_447_p2;
reg   [3:0] i_2_fu_166;
wire   [3:0] add_ln191_fu_841_p2;
reg   [3:0] i_3_fu_170;
wire   [3:0] add_ln197_fu_866_p2;
reg   [3:0] idx_fu_174;
reg   [3:0] i_6_fu_178;
wire   [3:0] add_ln204_fu_1254_p2;
reg   [3:0] indvars_iv_fu_182;
wire   [3:0] add_ln204_2_fu_1259_p2;
reg   [3:0] indvars_iv3_fu_186;
wire   [3:0] add_ln204_3_fu_1265_p2;
reg   [3:0] idx107_fu_190;
wire   [3:0] add_ln210_fu_1124_p2;
wire   [15:0] select_ln40_5_fu_1469_p3;
wire   [15:0] select_ln40_1_fu_1220_p3;
wire   [15:0] select_ln40_3_fu_1382_p3;
wire  signed [15:0] select_ln219_fu_1083_p3;
wire   [0:0] tmp_fu_472_p3;
wire   [31:0] trunc_ln172_fu_456_p1;
wire   [31:0] select_ln105_fu_480_p3;
wire   [23:0] trunc_ln105_2_fu_520_p1;
wire   [23:0] select_ln105_3_fu_512_p3;
wire   [7:0] trunc_ln105_1_fu_508_p1;
wire   [7:0] select_ln105_2_fu_500_p3;
wire   [15:0] trunc_ln105_fu_496_p1;
wire   [15:0] select_ln105_1_fu_488_p3;
wire   [31:0] xor_ln105_fu_524_p2;
wire   [15:0] tmp_1_fu_548_p4;
wire   [7:0] tmp_2_fu_564_p4;
wire   [7:0] xor_ln70_1_fu_536_p2;
wire   [15:0] xor_ln70_2_fu_542_p2;
wire   [7:0] trunc_ln2_fu_585_p4;
wire   [23:0] xor_ln70_fu_530_p2;
wire   [7:0] trunc_ln3_fu_600_p4;
wire   [23:0] tmp_3_fu_626_p4;
wire   [0:0] icmp_ln115_fu_636_p2;
wire   [0:0] xor_ln107_fu_620_p2;
wire   [0:0] icmp_ln115_1_fu_648_p2;
wire   [0:0] and_ln107_1_fu_654_p2;
wire   [0:0] icmp_ln112_fu_558_p2;
wire   [0:0] xor_ln112_fu_666_p2;
wire   [0:0] and_ln107_3_fu_672_p2;
wire   [0:0] icmp_ln113_fu_574_p2;
wire   [0:0] and_ln107_2_fu_660_p2;
wire   [4:0] zext_ln112_fu_700_p1;
wire   [4:0] zext_ln112_1_fu_710_p1;
wire   [3:0] add_ln112_2_fu_720_p2;
wire   [3:0] add_ln112_3_fu_730_p2;
wire   [4:0] zext_ln113_fu_726_p1;
wire   [4:0] add_ln112_1_fu_714_p2;
wire   [4:0] add_ln112_fu_704_p2;
wire   [4:0] select_ln107_fu_740_p3;
wire   [4:0] select_ln107_1_fu_747_p3;
wire   [4:0] select_ln107_2_fu_758_p3;
wire   [0:0] or_ln107_1_fu_754_p2;
wire   [0:0] or_ln107_2_fu_769_p2;
wire   [5:0] zext_ln107_fu_765_p1;
wire  signed [5:0] sext_ln107_fu_736_p1;
wire   [5:0] temp_fu_774_p3;
wire  signed [31:0] sh_prom_cast_cast_cast_fu_782_p1;
wire   [63:0] shl_ln186_fu_811_p2;
wire  signed [15:0] trunc_ln166_fu_923_p0;
wire  signed [15:0] tmp_4_fu_927_p1;
wire  signed [15:0] icmp_ln67_fu_935_p0;
wire   [14:0] trunc_ln166_fu_923_p1;
wire   [0:0] icmp_ln67_fu_935_p2;
wire   [14:0] sub_ln67_fu_941_p2;
wire   [14:0] select_ln67_fu_947_p3;
wire  signed [15:0] icmp_ln208_fu_959_p0;
wire  signed [15:0] sext_ln126_fu_969_p0;
wire  signed [15:0] sext_ln121_fu_973_p0;
wire  signed [15:0] sext_ln121_1_fu_977_p0;
wire   [63:0] L_num_2_fu_1003_p3;
wire   [0:0] icmp_ln144_fu_1017_p2;
wire   [62:0] shl_ln120_fu_1011_p2;
wire   [15:0] div_1_fu_995_p3;
wire   [0:0] xor_ln144_fu_1022_p2;
wire   [15:0] div_2_fu_1033_p2;
wire   [62:0] L_num_3_fu_1028_p2;
wire   [0:0] icmp_ln219_fu_1072_p2;
wire   [15:0] sub_ln220_fu_1077_p2;
wire   [2:0] trunc_ln210_fu_1130_p1;
wire   [2:0] add_ln165_fu_1134_p2;
wire  signed [30:0] trunc_ln_fu_1153_p1;
wire   [30:0] grp_fu_1494_p3;
wire   [0:0] and_ln55_fu_1149_p2;
wire   [15:0] trunc_ln_fu_1153_p4;
wire  signed [15:0] temp_9_fu_1162_p3;
wire  signed [16:0] sext_ln39_fu_1170_p1;
wire   [16:0] sum_fu_1179_p2;
wire   [1:0] tmp_5_fu_1190_p4;
wire   [0:0] icmp_ln40_fu_1184_p2;
wire   [0:0] icmp_ln40_1_fu_1200_p2;
wire   [0:0] or_ln40_fu_1214_p2;
wire   [15:0] select_ln40_fu_1206_p3;
wire   [15:0] add_ln39_fu_1174_p2;
wire   [0:0] icmp_ln55_2_fu_1298_p2;
wire  signed [30:0] trunc_ln61_1_fu_1311_p1;
wire   [30:0] grp_fu_1503_p3;
wire   [0:0] and_ln55_1_fu_1303_p2;
wire   [15:0] trunc_ln61_1_fu_1311_p4;
wire  signed [15:0] temp_10_fu_1320_p3;
wire  signed [16:0] sext_ln39_2_fu_1331_p1;
wire  signed [16:0] sext_ln39_1_fu_1328_p1;
wire   [16:0] sum_1_fu_1340_p2;
wire   [1:0] tmp_6_fu_1352_p4;
wire   [0:0] icmp_ln40_2_fu_1346_p2;
wire   [0:0] icmp_ln40_3_fu_1362_p2;
wire   [0:0] or_ln40_1_fu_1376_p2;
wire   [15:0] select_ln40_2_fu_1368_p3;
wire   [15:0] add_ln39_2_fu_1335_p2;
wire   [0:0] icmp_ln55_3_fu_1391_p2;
wire  signed [30:0] trunc_ln61_2_fu_1401_p1;
wire   [30:0] grp_fu_1511_p3;
wire   [0:0] and_ln55_2_fu_1396_p2;
wire   [15:0] trunc_ln61_2_fu_1401_p4;
wire  signed [15:0] temp_11_fu_1410_p3;
wire  signed [16:0] sext_ln39_3_fu_1418_p1;
wire  signed [16:0] sext_ln59_2_fu_1308_p1;
wire   [16:0] sum_2_fu_1427_p2;
wire   [1:0] tmp_7_fu_1439_p4;
wire   [0:0] icmp_ln40_4_fu_1433_p2;
wire   [0:0] icmp_ln40_5_fu_1449_p2;
wire   [0:0] or_ln40_2_fu_1463_p2;
wire   [15:0] select_ln40_4_fu_1455_p3;
wire   [15:0] add_ln39_4_fu_1422_p2;
wire   [14:0] grp_fu_1494_p2;
wire    ap_CS_fsm_state15;
wire  signed [15:0] grp_fu_1503_p1;
wire   [14:0] grp_fu_1503_p2;
wire    ap_CS_fsm_state20;
wire  signed [15:0] grp_fu_1511_p1;
wire   [14:0] grp_fu_1511_p2;
wire   [0:0] icmp_ln221_fu_1092_p2;
reg   [21:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 22'd1;
#0 i_fu_162 = 4'd0;
#0 i_2_fu_166 = 4'd0;
#0 i_3_fu_170 = 4'd0;
#0 idx_fu_174 = 4'd0;
#0 i_6_fu_178 = 4'd0;
#0 indvars_iv_fu_182 = 4'd0;
#0 indvars_iv3_fu_186 = 4'd0;
#0 idx107_fu_190 = 4'd0;
end

Gsm_LPC_Analysis_Reflection_coefficients_ACF_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
ACF_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ACF_address0),
    .ce0(ACF_ce0),
    .we0(ACF_we0),
    .d0(ACF_d0),
    .q0(ACF_q0)
);

Gsm_LPC_Analysis_Reflection_coefficients_ACF_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
P_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(P_address0),
    .ce0(P_ce0),
    .we0(P_we0),
    .d0(P_d0),
    .q0(P_q0)
);

Gsm_LPC_Analysis_Reflection_coefficients_ACF_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
K_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(K_address0),
    .ce0(K_ce0),
    .we0(K_we0),
    .d0(K_d0),
    .q0(K_q0)
);

Gsm_LPC_Analysis_mac_muladd_16s_16s_15ns_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 15 ),
    .dout_WIDTH( 31 ))
mac_muladd_16s_16s_15ns_31_4_1_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln219_fu_1083_p3),
    .din1(temp_7_reg_1695),
    .din2(grp_fu_1494_p2),
    .ce(1'b1),
    .dout(grp_fu_1494_p3)
);

Gsm_LPC_Analysis_mac_muladd_16s_16s_15ns_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 15 ),
    .dout_WIDTH( 31 ))
mac_muladd_16s_16s_15ns_31_4_1_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(K_q0),
    .din1(grp_fu_1503_p1),
    .din2(grp_fu_1503_p2),
    .ce(1'b1),
    .dout(grp_fu_1503_p3)
);

Gsm_LPC_Analysis_mac_muladd_16s_16s_15ns_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 15 ),
    .dout_WIDTH( 31 ))
mac_muladd_16s_16s_15ns_31_4_1_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(P_q0),
    .din1(grp_fu_1511_p1),
    .din2(grp_fu_1511_p2),
    .ce(1'b1),
    .dout(grp_fu_1511_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln134_fu_981_p2 == 1'd0) & (icmp_ln208_fu_959_p2 == 1'd0))) begin
        L_num_1_reg_402 <= sext_ln120_fu_965_p1;
    end else if (((icmp_ln172_reg_1533 == 1'd0) & (icmp_ln138_fu_1066_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln134_reg_1740 == 1'd0) & (icmp_ln208_reg_1716 == 1'd0) & (icmp_ln204_reg_1681 == 1'd1))) begin
        L_num_1_reg_402 <= L_num_4_fu_1052_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln134_fu_981_p2 == 1'd0) & (icmp_ln208_fu_959_p2 == 1'd0))) begin
        div_reg_411 <= 15'd0;
    end else if (((icmp_ln172_reg_1533 == 1'd0) & (icmp_ln138_fu_1066_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln134_reg_1740 == 1'd0) & (icmp_ln208_reg_1716 == 1'd0) & (icmp_ln204_reg_1681 == 1'd1))) begin
        div_reg_411 <= trunc_ln144_fu_1048_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln184_fu_790_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i_2_fu_166 <= 4'd1;
    end else if (((icmp_ln191_fu_830_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        i_2_fu_166 <= add_ln191_fu_841_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln191_fu_830_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        i_3_fu_170 <= 4'd0;
    end else if (((icmp_ln197_fu_860_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        i_3_fu_170 <= add_ln197_fu_866_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln197_fu_860_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        i_6_fu_178 <= 4'd1;
    end else if (((icmp_ln229_fu_1232_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        i_6_fu_178 <= add_ln204_fu_1254_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln172_fu_460_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln172_fu_460_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        i_fu_162 <= 4'd0;
    end else if ((((icmp_ln174_fu_1478_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22)) | ((icmp_ln184_fu_790_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        i_fu_162 <= grp_fu_447_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln208_fu_959_p2 == 1'd1))) begin
        idx107_fu_190 <= 4'd0;
    end else if (((icmp_ln172_reg_1533 == 1'd0) & (icmp_ln210_fu_1118_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln208_reg_1716 == 1'd1) & (icmp_ln204_reg_1681 == 1'd1))) begin
        idx107_fu_190 <= add_ln210_fu_1124_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln197_fu_860_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        idx_fu_174 <= 4'd0;
    end else if (((icmp_ln229_fu_1232_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        idx_fu_174 <= add_ln204_1_reg_1685;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln197_fu_860_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        indvars_iv3_fu_186 <= 4'd8;
    end else if (((icmp_ln229_fu_1232_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        indvars_iv3_fu_186 <= add_ln204_3_fu_1265_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln197_fu_860_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        indvars_iv_fu_182 <= 4'd8;
    end else if (((icmp_ln229_fu_1232_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        indvars_iv_fu_182 <= add_ln204_2_fu_1259_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln134_fu_981_p2 == 1'd0) & (icmp_ln208_fu_959_p2 == 1'd0))) begin
        k_reg_391 <= 4'd14;
    end else if (((icmp_ln172_reg_1533 == 1'd0) & (icmp_ln138_fu_1066_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln134_reg_1740 == 1'd0) & (icmp_ln208_reg_1716 == 1'd0) & (icmp_ln204_reg_1681 == 1'd1))) begin
        k_reg_391 <= k_1_fu_1060_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        m_reg_433 <= 4'd1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        m_reg_433 <= add_ln232_reg_1817;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln172_reg_1533 == 1'd0) & (icmp_ln138_fu_1066_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln134_reg_1740 == 1'd0) & (icmp_ln208_reg_1716 == 1'd0) & (icmp_ln204_reg_1681 == 1'd1))) begin
        retval_0_i43_reg_422 <= div_3_fu_1039_p3;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln134_fu_981_p2 == 1'd1) & (icmp_ln208_fu_959_p2 == 1'd0))) begin
        retval_0_i43_reg_422 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        if ((tmp_4_fu_927_p3 == 1'd0)) begin
            temp_12_reg_382 <= P_q0;
        end else if ((tmp_4_fu_927_p3 == 1'd1)) begin
            temp_12_reg_382 <= zext_ln67_fu_955_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        K_addr_1_reg_1812 <= zext_ln229_fu_1238_p1;
        add_ln232_reg_1817 <= add_ln232_fu_1243_p2;
        zext_ln229_reg_1807[3 : 0] <= zext_ln229_fu_1238_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        K_load_reg_1827 <= K_q0;
        P_load_reg_1839 <= P_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        L_denum_reg_1711 <= P_q0;
        icmp_ln134_reg_1740 <= icmp_ln134_fu_981_p2;
        icmp_ln208_reg_1716 <= icmp_ln208_fu_959_p2;
        sext_ln121_1_reg_1735 <= sext_ln121_1_fu_977_p1;
        sext_ln121_reg_1730 <= sext_ln121_fu_973_p1;
        sext_ln126_reg_1725 <= sext_ln126_fu_969_p1;
        trunc_ln204_reg_1751 <= trunc_ln204_fu_987_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln204_1_reg_1685 <= add_ln204_1_fu_914_p2;
        icmp_ln204_reg_1681 <= icmp_ln204_fu_908_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        and_ln107_4_reg_1568 <= and_ln107_4_fu_678_p2;
        and_ln107_reg_1562 <= and_ln107_fu_642_p2;
        icmp_ln107_reg_1537 <= icmp_ln107_fu_466_p2;
        icmp_ln172_reg_1533 <= icmp_ln172_fu_460_p2;
        or_ln107_reg_1573 <= or_ln107_fu_684_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        icmp_ln55_1_reg_1784 <= icmp_ln55_1_fu_1103_p2;
        icmp_ln55_reg_1777 <= icmp_ln55_fu_1097_p2;
        sext_ln59_reg_1789 <= sext_ln59_fu_1108_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        sh_prom_cast_cast_cast_cast_reg_1579[31 : 0] <= sh_prom_cast_cast_cast_cast_fu_786_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        temp_7_reg_1695 <= P_q0;
        zext_ln204_reg_1690[3 : 0] <= zext_ln204_fu_920_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        zext_ln184_reg_1587[3 : 0] <= zext_ln184_fu_796_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        zext_ln191_reg_1607[3 : 0] <= zext_ln191_fu_836_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        zext_ln197_reg_1627[3 : 0] <= zext_ln197_fu_872_p1[3 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ACF_address0 = zext_ln197_fu_872_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ACF_address0 = zext_ln191_fu_836_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        ACF_address0 = zext_ln184_reg_1587;
    end else begin
        ACF_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        ACF_ce0 = 1'b1;
    end else begin
        ACF_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ACF_we0 = 1'b1;
    end else begin
        ACF_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        K_address0 = K_addr_1_reg_1812;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        K_address0 = zext_ln229_fu_1238_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        K_address0 = zext_ln191_reg_1607;
    end else begin
        K_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state17))) begin
        K_ce0 = 1'b1;
    end else begin
        K_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        K_d0 = select_ln40_5_fu_1469_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        K_d0 = ACF_q0;
    end else begin
        K_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state21))) begin
        K_we0 = 1'b1;
    end else begin
        K_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        LARc_address0 = zext_ln174_fu_1484_p1;
    end else if (((icmp_ln172_reg_1533 == 1'd0) & (icmp_ln210_fu_1118_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln208_reg_1716 == 1'd1) & (icmp_ln204_reg_1681 == 1'd1))) begin
        LARc_address0 = zext_ln165_fu_1139_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) & (((icmp_ln172_reg_1533 == 1'd0) & (icmp_ln134_reg_1740 == 1'd1) & (icmp_ln208_reg_1716 == 1'd0) & (icmp_ln204_reg_1681 == 1'd1)) | ((icmp_ln172_reg_1533 == 1'd0) & (icmp_ln138_fu_1066_p2 == 1'd1) & (icmp_ln208_reg_1716 == 1'd0) & (icmp_ln204_reg_1681 == 1'd1))))) begin
        LARc_address0 = zext_ln204_reg_1690;
    end else begin
        LARc_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((icmp_ln172_reg_1533 == 1'd0) & (icmp_ln210_fu_1118_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln208_reg_1716 == 1'd1) & (icmp_ln204_reg_1681 == 1'd1)) | ((1'b1 == ap_CS_fsm_state13) & (((icmp_ln172_reg_1533 == 1'd0) & (icmp_ln134_reg_1740 == 1'd1) & (icmp_ln208_reg_1716 == 1'd0) & (icmp_ln204_reg_1681 == 1'd1)) | ((icmp_ln172_reg_1533 == 1'd0) & (icmp_ln138_fu_1066_p2 == 1'd1) & (icmp_ln208_reg_1716 == 1'd0) & (icmp_ln204_reg_1681 == 1'd1)))))) begin
        LARc_ce0 = 1'b1;
    end else begin
        LARc_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((icmp_ln172_reg_1533 == 1'd0) & (icmp_ln210_fu_1118_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln208_reg_1716 == 1'd1) & (icmp_ln204_reg_1681 == 1'd1)))) begin
        LARc_d0 = 16'd0;
    end else if (((1'b1 == ap_CS_fsm_state13) & (((icmp_ln172_reg_1533 == 1'd0) & (icmp_ln134_reg_1740 == 1'd1) & (icmp_ln208_reg_1716 == 1'd0) & (icmp_ln204_reg_1681 == 1'd1)) | ((icmp_ln172_reg_1533 == 1'd0) & (icmp_ln138_fu_1066_p2 == 1'd1) & (icmp_ln208_reg_1716 == 1'd0) & (icmp_ln204_reg_1681 == 1'd1))))) begin
        LARc_d0 = select_ln219_fu_1083_p3;
    end else begin
        LARc_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln174_fu_1478_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22)) | ((icmp_ln172_reg_1533 == 1'd0) & (icmp_ln210_fu_1118_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln208_reg_1716 == 1'd1) & (icmp_ln204_reg_1681 == 1'd1)) | ((1'b1 == ap_CS_fsm_state13) & (((icmp_ln172_reg_1533 == 1'd0) & (icmp_ln134_reg_1740 == 1'd1) & (icmp_ln208_reg_1716 == 1'd0) & (icmp_ln204_reg_1681 == 1'd1)) | ((icmp_ln172_reg_1533 == 1'd0) & (icmp_ln138_fu_1066_p2 == 1'd1) & (icmp_ln208_reg_1716 == 1'd0) & (icmp_ln204_reg_1681 == 1'd1)))))) begin
        LARc_we0 = 1'b1;
    end else begin
        LARc_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        L_ACF_address0 = zext_ln184_fu_796_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        L_ACF_address0 = 64'd0;
    end else begin
        L_ACF_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        L_ACF_ce0 = 1'b1;
    end else begin
        L_ACF_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        P_address0 = zext_ln229_reg_1807;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        P_address0 = zext_ln232_fu_1249_p1;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state11))) begin
        P_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        P_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        P_address0 = zext_ln197_reg_1627;
    end else begin
        P_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        P_ce0 = 1'b1;
    end else begin
        P_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        P_d0 = select_ln40_3_fu_1382_p3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        P_d0 = select_ln40_1_fu_1220_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        P_d0 = ACF_q0;
    end else begin
        P_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state21))) begin
        P_we0 = 1'b1;
    end else begin
        P_we0 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state13) & ((icmp_ln172_reg_1533 == 1'd1) | ((icmp_ln204_reg_1681 == 1'd0) | ((((icmp_ln221_fu_1092_p2 == 1'd1) & (icmp_ln138_fu_1066_p2 == 1'd1) & (icmp_ln208_reg_1716 == 1'd0)) | ((icmp_ln210_fu_1118_p2 == 1'd1) & (icmp_ln208_reg_1716 == 1'd1))) | ((icmp_ln221_fu_1092_p2 == 1'd1) & (icmp_ln134_reg_1740 == 1'd1) & (icmp_ln208_reg_1716 == 1'd0)))))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln172_reg_1533 == 1'd0) & (icmp_ln138_fu_1066_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln134_reg_1740 == 1'd0) & (icmp_ln208_reg_1716 == 1'd0) & (icmp_ln204_reg_1681 == 1'd1))) begin
        ap_phi_mux_retval_0_i43_phi_fu_426_p4 = div_3_fu_1039_p3;
    end else begin
        ap_phi_mux_retval_0_i43_phi_fu_426_p4 = retval_0_i43_reg_422;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & ((icmp_ln172_reg_1533 == 1'd1) | ((icmp_ln204_reg_1681 == 1'd0) | ((((icmp_ln221_fu_1092_p2 == 1'd1) & (icmp_ln138_fu_1066_p2 == 1'd1) & (icmp_ln208_reg_1716 == 1'd0)) | ((icmp_ln210_fu_1118_p2 == 1'd1) & (icmp_ln208_reg_1716 == 1'd1))) | ((icmp_ln221_fu_1092_p2 == 1'd1) & (icmp_ln134_reg_1740 == 1'd1) & (icmp_ln208_reg_1716 == 1'd0))))))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bitoff_ce0 = 1'b1;
    end else begin
        bitoff_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bitoff_ce1 = 1'b1;
    end else begin
        bitoff_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bitoff_ce2 = 1'b1;
    end else begin
        bitoff_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bitoff_ce3 = 1'b1;
    end else begin
        bitoff_ce3 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln172_fu_460_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln184_fu_790_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln191_fu_830_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln197_fu_860_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln204_fu_908_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & ((icmp_ln172_reg_1533 == 1'd1) | ((icmp_ln204_reg_1681 == 1'd0) | ((((icmp_ln221_fu_1092_p2 == 1'd1) & (icmp_ln138_fu_1066_p2 == 1'd1) & (icmp_ln208_reg_1716 == 1'd0)) | ((icmp_ln210_fu_1118_p2 == 1'd1) & (icmp_ln208_reg_1716 == 1'd1))) | ((icmp_ln221_fu_1092_p2 == 1'd1) & (icmp_ln134_reg_1740 == 1'd1) & (icmp_ln208_reg_1716 == 1'd0))))))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b1 == ap_CS_fsm_state13) & (((icmp_ln221_fu_1092_p2 == 1'd0) & (icmp_ln172_reg_1533 == 1'd0) & (icmp_ln134_reg_1740 == 1'd1) & (icmp_ln208_reg_1716 == 1'd0) & (icmp_ln204_reg_1681 == 1'd1)) | ((icmp_ln221_fu_1092_p2 == 1'd0) & (icmp_ln172_reg_1533 == 1'd0) & (icmp_ln138_fu_1066_p2 == 1'd1) & (icmp_ln208_reg_1716 == 1'd0) & (icmp_ln204_reg_1681 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln229_fu_1232_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_ln174_fu_1478_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ACF_d0 = {{shl_ln186_fu_811_p2[31:16]}};

assign L_num_2_fu_1003_p3 = {{L_num_1_reg_402}, {1'd0}};

assign L_num_3_fu_1028_p2 = ($signed(shl_ln120_fu_1011_p2) - $signed(sext_ln121_1_reg_1735));

assign L_num_4_fu_1052_p3 = ((xor_ln144_fu_1022_p2[0:0] == 1'b1) ? L_num_3_fu_1028_p2 : shl_ln120_fu_1011_p2);

assign add_ln112_1_fu_714_p2 = (zext_ln112_1_fu_710_p1 + 5'd15);

assign add_ln112_2_fu_720_p2 = (bitoff_q1 + 4'd7);

assign add_ln112_3_fu_730_p2 = ($signed(bitoff_q0) + $signed(4'd15));

assign add_ln112_fu_704_p2 = ($signed(zext_ln112_fu_700_p1) + $signed(5'd23));

assign add_ln165_fu_1134_p2 = (trunc_ln210_fu_1130_p1 + trunc_ln204_reg_1751);

assign add_ln191_fu_841_p2 = (i_2_fu_166 + 4'd1);

assign add_ln197_fu_866_p2 = (i_3_fu_170 + 4'd1);

assign add_ln204_1_fu_914_p2 = (idx_fu_174 + 4'd1);

assign add_ln204_2_fu_1259_p2 = ($signed(indvars_iv_fu_182) + $signed(4'd15));

assign add_ln204_3_fu_1265_p2 = ($signed(indvars_iv3_fu_186) + $signed(4'd15));

assign add_ln204_fu_1254_p2 = (i_6_fu_178 + 4'd1);

assign add_ln210_fu_1124_p2 = (idx107_fu_190 + 4'd1);

assign add_ln232_fu_1243_p2 = (m_reg_433 + 4'd1);

assign add_ln39_2_fu_1335_p2 = ($signed(temp_10_fu_1320_p3) + $signed(P_load_reg_1839));

assign add_ln39_4_fu_1422_p2 = ($signed(temp_11_fu_1410_p3) + $signed(K_load_reg_1827));

assign add_ln39_fu_1174_p2 = ($signed(temp_9_fu_1162_p3) + $signed(L_denum_reg_1711));

assign and_ln107_1_fu_654_p2 = (xor_ln107_fu_620_p2 & icmp_ln115_1_fu_648_p2);

assign and_ln107_2_fu_660_p2 = (icmp_ln112_fu_558_p2 & and_ln107_1_fu_654_p2);

assign and_ln107_3_fu_672_p2 = (xor_ln112_fu_666_p2 & xor_ln107_fu_620_p2);

assign and_ln107_4_fu_678_p2 = (icmp_ln113_fu_574_p2 & and_ln107_3_fu_672_p2);

assign and_ln107_fu_642_p2 = (xor_ln107_fu_620_p2 & icmp_ln115_fu_636_p2);

assign and_ln55_1_fu_1303_p2 = (icmp_ln55_reg_1777 & icmp_ln55_2_fu_1298_p2);

assign and_ln55_2_fu_1396_p2 = (icmp_ln55_reg_1777 & icmp_ln55_3_fu_1391_p2);

assign and_ln55_fu_1149_p2 = (icmp_ln55_reg_1777 & icmp_ln55_1_reg_1784);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bitoff_address0 = zext_ln113_1_fu_615_p1;

assign bitoff_address1 = zext_ln114_fu_610_p1;

assign bitoff_address2 = zext_ln115_1_fu_595_p1;

assign bitoff_address3 = zext_ln115_fu_580_p1;

assign div_1_fu_995_p3 = {{div_reg_411}, {1'd0}};

assign div_2_fu_1033_p2 = (div_1_fu_995_p3 | 16'd1);

assign div_3_fu_1039_p3 = ((xor_ln144_fu_1022_p2[0:0] == 1'b1) ? div_2_fu_1033_p2 : div_1_fu_995_p3);

assign grp_fu_1494_p2 = 31'd16384;

assign grp_fu_1503_p1 = sext_ln59_reg_1789;

assign grp_fu_1503_p2 = 31'd16384;

assign grp_fu_1511_p1 = sext_ln59_reg_1789;

assign grp_fu_1511_p2 = 31'd16384;

assign grp_fu_447_p2 = (i_fu_162 + 4'd1);

assign icmp_ln107_fu_466_p2 = (($signed(L_ACF_q0) < $signed(64'd18446744072635809793)) ? 1'b1 : 1'b0);

assign icmp_ln112_fu_558_p2 = ((tmp_1_fu_548_p4 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln113_fu_574_p2 = ((tmp_2_fu_564_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln115_1_fu_648_p2 = ((trunc_ln2_fu_585_p4 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln115_fu_636_p2 = ((tmp_3_fu_626_p4 == 24'd0) ? 1'b1 : 1'b0);

assign icmp_ln134_fu_981_p2 = ((temp_12_reg_382 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln138_fu_1066_p2 = ((k_reg_391 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln144_fu_1017_p2 = (($signed(L_num_2_fu_1003_p3) < $signed(sext_ln126_reg_1725)) ? 1'b1 : 1'b0);

assign icmp_ln172_fu_460_p2 = ((L_ACF_q0 == 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln174_fu_1478_p2 = ((i_fu_162 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln184_fu_790_p2 = ((i_fu_162 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln191_fu_830_p2 = ((i_2_fu_166 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln197_fu_860_p2 = ((i_3_fu_170 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln204_fu_908_p2 = ((i_6_fu_178 < 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln208_fu_959_p0 = P_q0;

assign icmp_ln208_fu_959_p2 = (($signed(icmp_ln208_fu_959_p0) < $signed(temp_12_reg_382)) ? 1'b1 : 1'b0);

assign icmp_ln210_fu_1118_p2 = ((idx107_fu_190 == indvars_iv3_fu_186) ? 1'b1 : 1'b0);

assign icmp_ln219_fu_1072_p2 = (($signed(temp_7_reg_1695) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln221_fu_1092_p2 = ((i_6_fu_178 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln229_fu_1232_p2 = ((m_reg_433 == indvars_iv_fu_182) ? 1'b1 : 1'b0);

assign icmp_ln40_1_fu_1200_p2 = ((tmp_5_fu_1190_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln40_2_fu_1346_p2 = (($signed(sum_1_fu_1340_p2) < $signed(17'd98304)) ? 1'b1 : 1'b0);

assign icmp_ln40_3_fu_1362_p2 = ((tmp_6_fu_1352_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln40_4_fu_1433_p2 = (($signed(sum_2_fu_1427_p2) < $signed(17'd98304)) ? 1'b1 : 1'b0);

assign icmp_ln40_5_fu_1449_p2 = ((tmp_7_fu_1439_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_1184_p2 = (($signed(sum_fu_1179_p2) < $signed(17'd98304)) ? 1'b1 : 1'b0);

assign icmp_ln55_1_fu_1103_p2 = ((temp_7_reg_1695 == 16'd32768) ? 1'b1 : 1'b0);

assign icmp_ln55_2_fu_1298_p2 = ((K_load_reg_1827 == 16'd32768) ? 1'b1 : 1'b0);

assign icmp_ln55_3_fu_1391_p2 = ((P_load_reg_1839 == 16'd32768) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_1097_p2 = ((select_ln219_fu_1083_p3 == 16'd32768) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_935_p0 = P_q0;

assign icmp_ln67_fu_935_p2 = ((icmp_ln67_fu_935_p0 == 16'd32768) ? 1'b1 : 1'b0);

assign k_1_fu_1060_p2 = ($signed(k_reg_391) + $signed(4'd15));

assign or_ln107_1_fu_754_p2 = (icmp_ln107_reg_1537 | and_ln107_reg_1562);

assign or_ln107_2_fu_769_p2 = (or_ln107_reg_1573 | or_ln107_1_fu_754_p2);

assign or_ln107_fu_684_p2 = (and_ln107_4_fu_678_p2 | and_ln107_2_fu_660_p2);

assign or_ln40_1_fu_1376_p2 = (icmp_ln40_3_fu_1362_p2 | icmp_ln40_2_fu_1346_p2);

assign or_ln40_2_fu_1463_p2 = (icmp_ln40_5_fu_1449_p2 | icmp_ln40_4_fu_1433_p2);

assign or_ln40_fu_1214_p2 = (icmp_ln40_fu_1184_p2 | icmp_ln40_1_fu_1200_p2);

assign select_ln105_1_fu_488_p3 = ((tmp_fu_472_p3[0:0] == 1'b1) ? 16'd65535 : 16'd0);

assign select_ln105_2_fu_500_p3 = ((tmp_fu_472_p3[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign select_ln105_3_fu_512_p3 = ((tmp_fu_472_p3[0:0] == 1'b1) ? 24'd16777215 : 24'd0);

assign select_ln105_fu_480_p3 = ((tmp_fu_472_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln107_1_fu_747_p3 = ((and_ln107_reg_1562[0:0] == 1'b1) ? add_ln112_fu_704_p2 : 5'd0);

assign select_ln107_2_fu_758_p3 = ((or_ln107_reg_1573[0:0] == 1'b1) ? select_ln107_fu_740_p3 : select_ln107_1_fu_747_p3);

assign select_ln107_fu_740_p3 = ((and_ln107_4_reg_1568[0:0] == 1'b1) ? zext_ln113_fu_726_p1 : add_ln112_1_fu_714_p2);

assign select_ln219_fu_1083_p3 = ((icmp_ln219_fu_1072_p2[0:0] == 1'b1) ? sub_ln220_fu_1077_p2 : ap_phi_mux_retval_0_i43_phi_fu_426_p4);

assign select_ln40_1_fu_1220_p3 = ((or_ln40_fu_1214_p2[0:0] == 1'b1) ? select_ln40_fu_1206_p3 : add_ln39_fu_1174_p2);

assign select_ln40_2_fu_1368_p3 = ((icmp_ln40_2_fu_1346_p2[0:0] == 1'b1) ? 16'd32768 : 16'd32767);

assign select_ln40_3_fu_1382_p3 = ((or_ln40_1_fu_1376_p2[0:0] == 1'b1) ? select_ln40_2_fu_1368_p3 : add_ln39_2_fu_1335_p2);

assign select_ln40_4_fu_1455_p3 = ((icmp_ln40_4_fu_1433_p2[0:0] == 1'b1) ? 16'd32768 : 16'd32767);

assign select_ln40_5_fu_1469_p3 = ((or_ln40_2_fu_1463_p2[0:0] == 1'b1) ? select_ln40_4_fu_1455_p3 : add_ln39_4_fu_1422_p2);

assign select_ln40_fu_1206_p3 = ((icmp_ln40_fu_1184_p2[0:0] == 1'b1) ? 16'd32768 : 16'd32767);

assign select_ln67_fu_947_p3 = ((icmp_ln67_fu_935_p2[0:0] == 1'b1) ? 15'd32767 : sub_ln67_fu_941_p2);

assign sext_ln107_fu_736_p1 = $signed(add_ln112_3_fu_730_p2);

assign sext_ln120_fu_965_p1 = temp_12_reg_382;

assign sext_ln121_1_fu_977_p0 = P_q0;

assign sext_ln121_1_fu_977_p1 = sext_ln121_1_fu_977_p0;

assign sext_ln121_fu_973_p0 = P_q0;

assign sext_ln121_fu_973_p1 = sext_ln121_fu_973_p0;

assign sext_ln126_fu_969_p0 = P_q0;

assign sext_ln126_fu_969_p1 = sext_ln126_fu_969_p0;

assign sext_ln39_1_fu_1328_p1 = P_load_reg_1839;

assign sext_ln39_2_fu_1331_p1 = temp_10_fu_1320_p3;

assign sext_ln39_3_fu_1418_p1 = temp_11_fu_1410_p3;

assign sext_ln39_fu_1170_p1 = temp_9_fu_1162_p3;

assign sext_ln59_2_fu_1308_p1 = K_load_reg_1827;

assign sext_ln59_fu_1108_p1 = select_ln219_fu_1083_p3;

assign sh_prom_cast_cast_cast_cast_fu_786_p1 = $unsigned(sh_prom_cast_cast_cast_fu_782_p1);

assign sh_prom_cast_cast_cast_fu_782_p1 = $signed(temp_fu_774_p3);

assign shl_ln120_fu_1011_p2 = L_num_1_reg_402 << 63'd1;

assign shl_ln186_fu_811_p2 = L_ACF_q0 << sh_prom_cast_cast_cast_cast_reg_1579;

assign sub_ln220_fu_1077_p2 = (16'd0 - ap_phi_mux_retval_0_i43_phi_fu_426_p4);

assign sub_ln67_fu_941_p2 = (15'd0 - trunc_ln166_fu_923_p1);

assign sum_1_fu_1340_p2 = ($signed(sext_ln39_2_fu_1331_p1) + $signed(sext_ln39_1_fu_1328_p1));

assign sum_2_fu_1427_p2 = ($signed(sext_ln39_3_fu_1418_p1) + $signed(sext_ln59_2_fu_1308_p1));

assign sum_fu_1179_p2 = ($signed(sext_ln39_fu_1170_p1) + $signed(sext_ln121_reg_1730));

assign temp_10_fu_1320_p3 = ((and_ln55_1_fu_1303_p2[0:0] == 1'b1) ? 16'd32767 : trunc_ln61_1_fu_1311_p4);

assign temp_11_fu_1410_p3 = ((and_ln55_2_fu_1396_p2[0:0] == 1'b1) ? 16'd32767 : trunc_ln61_2_fu_1401_p4);

assign temp_9_fu_1162_p3 = ((and_ln55_fu_1149_p2[0:0] == 1'b1) ? 16'd32767 : trunc_ln_fu_1153_p4);

assign temp_fu_774_p3 = ((or_ln107_2_fu_769_p2[0:0] == 1'b1) ? zext_ln107_fu_765_p1 : sext_ln107_fu_736_p1);

assign tmp_1_fu_548_p4 = {{xor_ln105_fu_524_p2[31:16]}};

assign tmp_2_fu_564_p4 = {{xor_ln105_fu_524_p2[31:24]}};

assign tmp_3_fu_626_p4 = {{xor_ln105_fu_524_p2[31:8]}};

assign tmp_4_fu_927_p1 = P_q0;

assign tmp_4_fu_927_p3 = tmp_4_fu_927_p1[32'd15];

assign tmp_5_fu_1190_p4 = {{sum_fu_1179_p2[16:15]}};

assign tmp_6_fu_1352_p4 = {{sum_1_fu_1340_p2[16:15]}};

assign tmp_7_fu_1439_p4 = {{sum_2_fu_1427_p2[16:15]}};

assign tmp_fu_472_p3 = L_ACF_q0[32'd63];

assign trunc_ln105_1_fu_508_p1 = L_ACF_q0[7:0];

assign trunc_ln105_2_fu_520_p1 = L_ACF_q0[23:0];

assign trunc_ln105_fu_496_p1 = L_ACF_q0[15:0];

assign trunc_ln144_fu_1048_p1 = div_3_fu_1039_p3[14:0];

assign trunc_ln166_fu_923_p0 = P_q0;

assign trunc_ln166_fu_923_p1 = trunc_ln166_fu_923_p0[14:0];

assign trunc_ln172_fu_456_p1 = L_ACF_q0[31:0];

assign trunc_ln204_fu_987_p1 = idx_fu_174[2:0];

assign trunc_ln210_fu_1130_p1 = idx107_fu_190[2:0];

assign trunc_ln2_fu_585_p4 = {{xor_ln70_2_fu_542_p2[15:8]}};

assign trunc_ln3_fu_600_p4 = {{xor_ln70_fu_530_p2[23:16]}};

assign trunc_ln61_1_fu_1311_p1 = grp_fu_1503_p3;

assign trunc_ln61_1_fu_1311_p4 = {{trunc_ln61_1_fu_1311_p1[30:15]}};

assign trunc_ln61_2_fu_1401_p1 = grp_fu_1511_p3;

assign trunc_ln61_2_fu_1401_p4 = {{trunc_ln61_2_fu_1401_p1[30:15]}};

assign trunc_ln_fu_1153_p1 = grp_fu_1494_p3;

assign trunc_ln_fu_1153_p4 = {{trunc_ln_fu_1153_p1[30:15]}};

assign xor_ln105_fu_524_p2 = (trunc_ln172_fu_456_p1 ^ select_ln105_fu_480_p3);

assign xor_ln107_fu_620_p2 = (icmp_ln107_fu_466_p2 ^ 1'd1);

assign xor_ln112_fu_666_p2 = (icmp_ln112_fu_558_p2 ^ 1'd1);

assign xor_ln144_fu_1022_p2 = (icmp_ln144_fu_1017_p2 ^ 1'd1);

assign xor_ln70_1_fu_536_p2 = (trunc_ln105_1_fu_508_p1 ^ select_ln105_2_fu_500_p3);

assign xor_ln70_2_fu_542_p2 = (trunc_ln105_fu_496_p1 ^ select_ln105_1_fu_488_p3);

assign xor_ln70_fu_530_p2 = (trunc_ln105_2_fu_520_p1 ^ select_ln105_3_fu_512_p3);

assign zext_ln107_fu_765_p1 = select_ln107_2_fu_758_p3;

assign zext_ln112_1_fu_710_p1 = bitoff_q2;

assign zext_ln112_fu_700_p1 = bitoff_q3;

assign zext_ln113_1_fu_615_p1 = tmp_2_fu_564_p4;

assign zext_ln113_fu_726_p1 = add_ln112_2_fu_720_p2;

assign zext_ln114_fu_610_p1 = trunc_ln3_fu_600_p4;

assign zext_ln115_1_fu_595_p1 = trunc_ln2_fu_585_p4;

assign zext_ln115_fu_580_p1 = xor_ln70_1_fu_536_p2;

assign zext_ln165_fu_1139_p1 = add_ln165_fu_1134_p2;

assign zext_ln174_fu_1484_p1 = i_fu_162;

assign zext_ln184_fu_796_p1 = i_fu_162;

assign zext_ln191_fu_836_p1 = i_2_fu_166;

assign zext_ln197_fu_872_p1 = i_3_fu_170;

assign zext_ln204_fu_920_p1 = idx_fu_174;

assign zext_ln229_fu_1238_p1 = m_reg_433;

assign zext_ln232_fu_1249_p1 = add_ln232_fu_1243_p2;

assign zext_ln67_fu_955_p1 = select_ln67_fu_947_p3;

always @ (posedge ap_clk) begin
    sh_prom_cast_cast_cast_cast_reg_1579[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln184_reg_1587[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln191_reg_1607[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln197_reg_1627[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln204_reg_1690[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln229_reg_1807[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //Gsm_LPC_Analysis_Reflection_coefficients
