// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module Gsm_LPC_Analysis_Quantization_and_coding (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        LARc_address0,
        LARc_ce0,
        LARc_we0,
        LARc_d0,
        LARc_q0,
        LARc_address1,
        LARc_ce1,
        LARc_we1,
        LARc_d1,
        LARc_q1
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] LARc_address0;
output   LARc_ce0;
output   LARc_we0;
output  [15:0] LARc_d0;
input  [15:0] LARc_q0;
output  [2:0] LARc_address1;
output   LARc_ce1;
output   LARc_we1;
output  [15:0] LARc_d1;
input  [15:0] LARc_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] LARc_address0;
reg LARc_ce0;
reg LARc_we0;
reg[15:0] LARc_d0;
reg[2:0] LARc_address1;
reg LARc_ce1;
reg LARc_we1;
reg[15:0] LARc_d1;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] LARc_addr_reg_1443;
wire   [2:0] LARc_addr_3_reg_1448;
wire   [6:0] select_ln289_1_fu_343_p3;
reg   [6:0] select_ln289_1_reg_1453;
wire    ap_CS_fsm_state2;
wire   [6:0] select_ln290_1_fu_477_p3;
reg   [6:0] select_ln290_1_reg_1458;
wire   [2:0] LARc_addr_4_reg_1463;
wire   [2:0] LARc_addr_5_reg_1468;
wire   [6:0] select_ln291_1_fu_649_p3;
reg   [6:0] select_ln291_1_reg_1473;
wire    ap_CS_fsm_state3;
wire   [6:0] select_ln292_1_fu_811_p3;
reg   [6:0] select_ln292_1_reg_1478;
wire   [2:0] LARc_addr_6_reg_1483;
wire   [2:0] LARc_addr_7_reg_1488;
wire   [0:0] icmp_ln40_12_fu_897_p2;
reg   [0:0] icmp_ln40_12_reg_1493;
wire    ap_CS_fsm_state4;
reg   [6:0] tmp_4_reg_1498;
wire   [6:0] select_ln295_1_fu_1067_p3;
reg   [6:0] select_ln295_1_reg_1503;
wire   [2:0] LARc_addr_8_reg_1508;
wire   [2:0] LARc_addr_9_reg_1513;
wire   [6:0] select_ln294_1_fu_1131_p3;
reg   [6:0] select_ln294_1_reg_1518;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln40_16_fu_1207_p2;
reg   [0:0] icmp_ln40_16_reg_1523;
reg   [6:0] tmp_6_reg_1528;
wire   [0:0] icmp_ln40_18_fu_1291_p2;
reg   [0:0] icmp_ln40_18_reg_1533;
reg   [6:0] tmp_7_reg_1538;
wire   [6:0] select_ln296_1_fu_1363_p3;
reg   [6:0] select_ln296_1_reg_1543;
wire    ap_CS_fsm_state6;
wire   [6:0] select_ln297_1_fu_1419_p3;
reg   [6:0] select_ln297_1_reg_1548;
wire   [15:0] zext_ln289_fu_1075_p1;
wire   [15:0] zext_ln290_fu_1079_p1;
wire   [15:0] zext_ln291_fu_1307_p1;
wire   [15:0] zext_ln292_fu_1311_p1;
wire    ap_CS_fsm_state7;
wire   [15:0] zext_ln294_fu_1427_p1;
wire   [15:0] zext_ln295_fu_1431_p1;
wire    ap_CS_fsm_state8;
wire   [15:0] zext_ln296_fu_1435_p1;
wire   [15:0] zext_ln297_fu_1439_p1;
wire   [29:0] shl_ln_fu_217_p3;
wire   [27:0] shl_ln48_1_fu_229_p3;
wire  signed [30:0] sext_ln48_fu_225_p1;
wire  signed [30:0] sext_ln48_1_fu_237_p1;
wire   [30:0] add_ln48_fu_241_p2;
wire   [15:0] temp_fu_247_p4;
wire  signed [16:0] sext_ln39_fu_257_p1;
wire   [16:0] sum_fu_261_p2;
wire   [1:0] tmp_8_fu_267_p4;
wire   [0:0] icmp_ln40_fu_277_p2;
wire   [6:0] tmp_fu_283_p4;
wire   [6:0] temp_13_fu_293_p3;
wire   [1:0] tmp_9_fu_301_p4;
wire   [0:0] icmp_ln289_fu_311_p2;
wire   [0:0] icmp_ln289_1_fu_317_p2;
wire   [0:0] or_ln289_fu_337_p2;
wire   [6:0] select_ln289_fu_329_p3;
wire   [6:0] add_ln289_fu_323_p2;
wire   [29:0] shl_ln48_2_fu_351_p3;
wire   [27:0] shl_ln48_3_fu_363_p3;
wire  signed [30:0] sext_ln48_2_fu_359_p1;
wire  signed [30:0] sext_ln48_3_fu_371_p1;
wire   [30:0] add_ln48_1_fu_375_p2;
wire   [15:0] temp_14_fu_381_p4;
wire  signed [16:0] sext_ln39_4_fu_391_p1;
wire   [16:0] sum_3_fu_395_p2;
wire   [1:0] tmp_10_fu_401_p4;
wire   [0:0] icmp_ln40_6_fu_411_p2;
wire   [6:0] tmp_1_fu_417_p4;
wire   [6:0] temp_15_fu_427_p3;
wire   [1:0] tmp_11_fu_435_p4;
wire   [0:0] icmp_ln290_fu_445_p2;
wire   [0:0] icmp_ln290_1_fu_451_p2;
wire   [0:0] or_ln290_fu_471_p2;
wire   [6:0] select_ln290_fu_463_p3;
wire   [6:0] add_ln290_fu_457_p2;
wire   [29:0] shl_ln48_4_fu_485_p3;
wire   [27:0] shl_ln48_5_fu_497_p3;
wire  signed [30:0] sext_ln48_4_fu_493_p1;
wire  signed [30:0] sext_ln48_5_fu_505_p1;
wire   [30:0] add_ln48_2_fu_509_p2;
wire   [15:0] temp_16_fu_515_p4;
wire  signed [16:0] sext_ln39_5_fu_525_p1;
wire   [16:0] sum_4_fu_529_p2;
wire   [1:0] tmp_12_fu_535_p4;
wire   [0:0] icmp_ln40_7_fu_545_p2;
wire   [15:0] trunc_ln40_fu_551_p1;
wire   [15:0] temp_17_fu_555_p3;
wire  signed [16:0] sext_ln39_6_fu_563_p1;
wire   [16:0] sum_5_fu_567_p2;
wire   [1:0] tmp_13_fu_573_p4;
wire   [0:0] icmp_ln40_8_fu_583_p2;
wire   [6:0] tmp_2_fu_589_p4;
wire   [6:0] temp_18_fu_599_p3;
wire   [2:0] tmp_14_fu_607_p4;
wire   [0:0] icmp_ln291_fu_617_p2;
wire   [0:0] icmp_ln291_1_fu_623_p2;
wire   [0:0] or_ln291_fu_643_p2;
wire   [6:0] select_ln291_fu_635_p3;
wire   [6:0] add_ln291_fu_629_p2;
wire   [29:0] shl_ln48_6_fu_657_p3;
wire   [27:0] shl_ln48_7_fu_669_p3;
wire  signed [30:0] sext_ln48_6_fu_665_p1;
wire  signed [30:0] sext_ln48_7_fu_677_p1;
wire   [30:0] add_ln48_3_fu_681_p2;
wire   [15:0] temp_19_fu_687_p4;
wire  signed [16:0] sext_ln39_7_fu_697_p1;
wire   [16:0] sum_6_fu_701_p2;
wire   [0:0] icmp_ln40_9_fu_707_p2;
wire   [15:0] trunc_ln40_1_fu_713_p1;
wire   [15:0] temp_20_fu_717_p3;
wire  signed [16:0] sext_ln39_8_fu_725_p1;
wire   [16:0] sum_7_fu_729_p2;
wire   [1:0] tmp_15_fu_735_p4;
wire   [0:0] icmp_ln40_10_fu_745_p2;
wire   [6:0] tmp_3_fu_751_p4;
wire   [6:0] temp_21_fu_761_p3;
wire   [2:0] tmp_16_fu_769_p4;
wire   [0:0] icmp_ln292_fu_779_p2;
wire   [0:0] icmp_ln292_1_fu_785_p2;
wire   [0:0] or_ln292_fu_805_p2;
wire   [6:0] select_ln292_fu_797_p3;
wire   [6:0] add_ln292_fu_791_p2;
wire   [14:0] mul_ln48_fu_823_p1;
wire   [30:0] mul_ln48_fu_823_p2;
wire   [15:0] temp_22_fu_829_p4;
wire  signed [16:0] sext_ln39_9_fu_839_p1;
wire   [16:0] sum_8_fu_843_p2;
wire   [1:0] tmp_17_fu_849_p4;
wire   [0:0] icmp_ln40_11_fu_859_p2;
wire   [15:0] trunc_ln40_2_fu_865_p1;
wire   [15:0] temp_23_fu_869_p3;
wire  signed [16:0] sext_ln39_10_fu_877_p1;
wire   [16:0] sum_9_fu_881_p2;
wire   [1:0] tmp_18_fu_887_p4;
wire   [29:0] shl_ln48_8_fu_913_p3;
wire   [25:0] shl_ln48_9_fu_925_p3;
wire  signed [30:0] sext_ln48_9_fu_921_p1;
wire  signed [30:0] sext_ln48_10_fu_933_p1;
wire   [30:0] sub_ln48_fu_937_p2;
wire   [15:0] temp_25_fu_943_p4;
wire  signed [16:0] sext_ln39_11_fu_953_p1;
wire   [16:0] sum_10_fu_957_p2;
wire   [0:0] icmp_ln40_13_fu_963_p2;
wire   [15:0] trunc_ln40_3_fu_969_p1;
wire   [15:0] temp_26_fu_973_p3;
wire  signed [16:0] sext_ln39_12_fu_981_p1;
wire   [16:0] sum_11_fu_985_p2;
wire   [1:0] tmp_20_fu_991_p4;
wire   [0:0] icmp_ln40_14_fu_1001_p2;
wire   [6:0] tmp_5_fu_1007_p4;
wire   [6:0] temp_27_fu_1017_p3;
wire   [3:0] tmp_21_fu_1025_p4;
wire   [0:0] icmp_ln295_fu_1035_p2;
wire   [0:0] icmp_ln295_1_fu_1041_p2;
wire   [0:0] or_ln295_fu_1061_p2;
wire   [6:0] select_ln295_fu_1053_p3;
wire   [6:0] add_ln295_fu_1047_p2;
wire   [6:0] temp_24_fu_1083_p3;
wire   [3:0] tmp_19_fu_1089_p4;
wire   [0:0] icmp_ln294_fu_1099_p2;
wire   [0:0] icmp_ln294_1_fu_1105_p2;
wire   [0:0] or_ln294_fu_1125_p2;
wire   [6:0] select_ln294_fu_1117_p3;
wire   [6:0] add_ln294_fu_1111_p2;
wire   [14:0] mul_ln48_1_fu_1143_p1;
wire   [30:0] mul_ln48_1_fu_1143_p2;
wire   [15:0] temp_28_fu_1149_p4;
wire  signed [16:0] sext_ln39_13_fu_1159_p1;
wire   [16:0] sum_12_fu_1163_p2;
wire   [0:0] icmp_ln40_15_fu_1169_p2;
wire   [15:0] trunc_ln40_4_fu_1175_p1;
wire   [15:0] temp_29_fu_1179_p3;
wire  signed [16:0] sext_ln39_14_fu_1187_p1;
wire   [16:0] sum_13_fu_1191_p2;
wire   [1:0] tmp_22_fu_1197_p4;
wire   [14:0] mul_ln48_2_fu_1227_p1;
wire   [30:0] mul_ln48_2_fu_1227_p2;
wire   [15:0] temp_31_fu_1233_p4;
wire  signed [16:0] sext_ln39_15_fu_1243_p1;
wire   [16:0] sum_14_fu_1247_p2;
wire   [0:0] icmp_ln40_17_fu_1253_p2;
wire   [15:0] trunc_ln40_5_fu_1259_p1;
wire   [15:0] temp_32_fu_1263_p3;
wire  signed [16:0] sext_ln39_16_fu_1271_p1;
wire   [16:0] sum_15_fu_1275_p2;
wire   [1:0] tmp_24_fu_1281_p4;
wire   [6:0] temp_30_fu_1315_p3;
wire   [4:0] tmp_23_fu_1321_p4;
wire   [0:0] icmp_ln296_fu_1331_p2;
wire   [0:0] icmp_ln296_1_fu_1337_p2;
wire   [0:0] or_ln296_fu_1357_p2;
wire   [6:0] select_ln296_fu_1349_p3;
wire   [6:0] add_ln296_fu_1343_p2;
wire   [6:0] temp_33_fu_1371_p3;
wire   [4:0] tmp_25_fu_1377_p4;
wire   [0:0] icmp_ln297_fu_1387_p2;
wire   [0:0] icmp_ln297_1_fu_1393_p2;
wire   [0:0] or_ln297_fu_1413_p2;
wire   [6:0] select_ln297_fu_1405_p3;
wire   [6:0] add_ln297_fu_1399_p2;
reg   [7:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
end

Gsm_LPC_Analysis_mul_16s_15ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 31 ))
mul_16s_15ns_31_1_1_U61(
    .din0(LARc_q1),
    .din1(mul_ln48_fu_823_p1),
    .dout(mul_ln48_fu_823_p2)
);

Gsm_LPC_Analysis_mul_16s_15ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 31 ))
mul_16s_15ns_31_1_1_U62(
    .din0(LARc_q1),
    .din1(mul_ln48_1_fu_1143_p1),
    .dout(mul_ln48_1_fu_1143_p2)
);

Gsm_LPC_Analysis_mul_16s_15ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 31 ))
mul_16s_15ns_31_1_1_U63(
    .din0(LARc_q0),
    .din1(mul_ln48_2_fu_1227_p1),
    .dout(mul_ln48_2_fu_1227_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        icmp_ln40_12_reg_1493 <= icmp_ln40_12_fu_897_p2;
        select_ln295_1_reg_1503 <= select_ln295_1_fu_1067_p3;
        tmp_4_reg_1498 <= {{sum_9_fu_881_p2[15:9]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        icmp_ln40_16_reg_1523 <= icmp_ln40_16_fu_1207_p2;
        icmp_ln40_18_reg_1533 <= icmp_ln40_18_fu_1291_p2;
        select_ln294_1_reg_1518 <= select_ln294_1_fu_1131_p3;
        tmp_6_reg_1528 <= {{sum_13_fu_1191_p2[15:9]}};
        tmp_7_reg_1538 <= {{sum_15_fu_1275_p2[15:9]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        select_ln289_1_reg_1453 <= select_ln289_1_fu_343_p3;
        select_ln290_1_reg_1458 <= select_ln290_1_fu_477_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        select_ln291_1_reg_1473 <= select_ln291_1_fu_649_p3;
        select_ln292_1_reg_1478 <= select_ln292_1_fu_811_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        select_ln296_1_reg_1543 <= select_ln296_1_fu_1363_p3;
        select_ln297_1_reg_1548 <= select_ln297_1_fu_1419_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        LARc_address0 = LARc_addr_9_reg_1513;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        LARc_address0 = LARc_addr_7_reg_1488;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        LARc_address0 = LARc_addr_5_reg_1468;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        LARc_address0 = LARc_addr_3_reg_1448;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        LARc_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        LARc_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        LARc_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        LARc_address0 = 64'd1;
    end else begin
        LARc_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        LARc_address1 = LARc_addr_8_reg_1508;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        LARc_address1 = LARc_addr_6_reg_1483;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        LARc_address1 = LARc_addr_4_reg_1463;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        LARc_address1 = LARc_addr_reg_1443;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        LARc_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        LARc_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        LARc_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        LARc_address1 = 64'd0;
    end else begin
        LARc_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        LARc_ce0 = 1'b1;
    end else begin
        LARc_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        LARc_ce1 = 1'b1;
    end else begin
        LARc_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        LARc_d0 = zext_ln297_fu_1439_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        LARc_d0 = zext_ln295_fu_1431_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        LARc_d0 = zext_ln292_fu_1311_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        LARc_d0 = zext_ln290_fu_1079_p1;
    end else begin
        LARc_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        LARc_d1 = zext_ln296_fu_1435_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        LARc_d1 = zext_ln294_fu_1427_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        LARc_d1 = zext_ln291_fu_1307_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        LARc_d1 = zext_ln289_fu_1075_p1;
    end else begin
        LARc_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        LARc_we0 = 1'b1;
    end else begin
        LARc_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        LARc_we1 = 1'b1;
    end else begin
        LARc_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LARc_addr_3_reg_1448 = 64'd1;

assign LARc_addr_4_reg_1463 = 64'd2;

assign LARc_addr_5_reg_1468 = 64'd3;

assign LARc_addr_6_reg_1483 = 64'd4;

assign LARc_addr_7_reg_1488 = 64'd5;

assign LARc_addr_8_reg_1508 = 64'd6;

assign LARc_addr_9_reg_1513 = 64'd7;

assign LARc_addr_reg_1443 = 64'd0;

assign add_ln289_fu_323_p2 = (temp_13_fu_293_p3 + 7'd32);

assign add_ln290_fu_457_p2 = (temp_15_fu_427_p3 + 7'd32);

assign add_ln291_fu_629_p2 = (temp_18_fu_599_p3 + 7'd16);

assign add_ln292_fu_791_p2 = (temp_21_fu_761_p3 + 7'd16);

assign add_ln294_fu_1111_p2 = (temp_24_fu_1083_p3 + 7'd8);

assign add_ln295_fu_1047_p2 = (temp_27_fu_1017_p3 + 7'd8);

assign add_ln296_fu_1343_p2 = (temp_30_fu_1315_p3 + 7'd4);

assign add_ln297_fu_1399_p2 = (temp_33_fu_1371_p3 + 7'd4);

assign add_ln48_1_fu_375_p2 = ($signed(sext_ln48_2_fu_359_p1) + $signed(sext_ln48_3_fu_371_p1));

assign add_ln48_2_fu_509_p2 = ($signed(sext_ln48_4_fu_493_p1) + $signed(sext_ln48_5_fu_505_p1));

assign add_ln48_3_fu_681_p2 = ($signed(sext_ln48_6_fu_665_p1) + $signed(sext_ln48_7_fu_677_p1));

assign add_ln48_fu_241_p2 = ($signed(sext_ln48_fu_225_p1) + $signed(sext_ln48_1_fu_237_p1));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign icmp_ln289_1_fu_317_p2 = (($signed(temp_13_fu_293_p3) < $signed(7'd96)) ? 1'b1 : 1'b0);

assign icmp_ln289_fu_311_p2 = ((tmp_9_fu_301_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln290_1_fu_451_p2 = (($signed(temp_15_fu_427_p3) < $signed(7'd96)) ? 1'b1 : 1'b0);

assign icmp_ln290_fu_445_p2 = ((tmp_11_fu_435_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln291_1_fu_623_p2 = (($signed(temp_18_fu_599_p3) < $signed(7'd112)) ? 1'b1 : 1'b0);

assign icmp_ln291_fu_617_p2 = (($signed(tmp_14_fu_607_p4) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign icmp_ln292_1_fu_785_p2 = (($signed(temp_21_fu_761_p3) < $signed(7'd112)) ? 1'b1 : 1'b0);

assign icmp_ln292_fu_779_p2 = (($signed(tmp_16_fu_769_p4) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign icmp_ln294_1_fu_1105_p2 = (($signed(temp_24_fu_1083_p3) < $signed(7'd120)) ? 1'b1 : 1'b0);

assign icmp_ln294_fu_1099_p2 = (($signed(tmp_19_fu_1089_p4) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign icmp_ln295_1_fu_1041_p2 = (($signed(temp_27_fu_1017_p3) < $signed(7'd120)) ? 1'b1 : 1'b0);

assign icmp_ln295_fu_1035_p2 = (($signed(tmp_21_fu_1025_p4) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign icmp_ln296_1_fu_1337_p2 = (($signed(temp_30_fu_1315_p3) < $signed(7'd124)) ? 1'b1 : 1'b0);

assign icmp_ln296_fu_1331_p2 = (($signed(tmp_23_fu_1321_p4) > $signed(5'd0)) ? 1'b1 : 1'b0);

assign icmp_ln297_1_fu_1393_p2 = (($signed(temp_33_fu_1371_p3) < $signed(7'd124)) ? 1'b1 : 1'b0);

assign icmp_ln297_fu_1387_p2 = (($signed(tmp_25_fu_1377_p4) > $signed(5'd0)) ? 1'b1 : 1'b0);

assign icmp_ln40_10_fu_745_p2 = ((tmp_15_fu_735_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln40_11_fu_859_p2 = ((tmp_17_fu_849_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln40_12_fu_897_p2 = ((tmp_18_fu_887_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln40_13_fu_963_p2 = (($signed(sum_10_fu_957_p2) < $signed(17'd98304)) ? 1'b1 : 1'b0);

assign icmp_ln40_14_fu_1001_p2 = ((tmp_20_fu_991_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln40_15_fu_1169_p2 = (($signed(sum_12_fu_1163_p2) < $signed(17'd98304)) ? 1'b1 : 1'b0);

assign icmp_ln40_16_fu_1207_p2 = ((tmp_22_fu_1197_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln40_17_fu_1253_p2 = (($signed(sum_14_fu_1247_p2) < $signed(17'd98304)) ? 1'b1 : 1'b0);

assign icmp_ln40_18_fu_1291_p2 = ((tmp_24_fu_1281_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln40_6_fu_411_p2 = ((tmp_10_fu_401_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln40_7_fu_545_p2 = ((tmp_12_fu_535_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln40_8_fu_583_p2 = ((tmp_13_fu_573_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln40_9_fu_707_p2 = (($signed(sum_6_fu_701_p2) < $signed(17'd98304)) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_277_p2 = ((tmp_8_fu_267_p4 == 2'd1) ? 1'b1 : 1'b0);

assign mul_ln48_1_fu_1143_p1 = 31'd8534;

assign mul_ln48_2_fu_1227_p1 = 31'd9036;

assign mul_ln48_fu_823_p1 = 31'd13964;

assign or_ln289_fu_337_p2 = (icmp_ln289_fu_311_p2 | icmp_ln289_1_fu_317_p2);

assign or_ln290_fu_471_p2 = (icmp_ln290_fu_445_p2 | icmp_ln290_1_fu_451_p2);

assign or_ln291_fu_643_p2 = (icmp_ln291_fu_617_p2 | icmp_ln291_1_fu_623_p2);

assign or_ln292_fu_805_p2 = (icmp_ln292_fu_779_p2 | icmp_ln292_1_fu_785_p2);

assign or_ln294_fu_1125_p2 = (icmp_ln294_fu_1099_p2 | icmp_ln294_1_fu_1105_p2);

assign or_ln295_fu_1061_p2 = (icmp_ln295_fu_1035_p2 | icmp_ln295_1_fu_1041_p2);

assign or_ln296_fu_1357_p2 = (icmp_ln296_fu_1331_p2 | icmp_ln296_1_fu_1337_p2);

assign or_ln297_fu_1413_p2 = (icmp_ln297_fu_1387_p2 | icmp_ln297_1_fu_1393_p2);

assign select_ln289_1_fu_343_p3 = ((or_ln289_fu_337_p2[0:0] == 1'b1) ? select_ln289_fu_329_p3 : add_ln289_fu_323_p2);

assign select_ln289_fu_329_p3 = ((icmp_ln289_fu_311_p2[0:0] == 1'b1) ? 7'd63 : 7'd0);

assign select_ln290_1_fu_477_p3 = ((or_ln290_fu_471_p2[0:0] == 1'b1) ? select_ln290_fu_463_p3 : add_ln290_fu_457_p2);

assign select_ln290_fu_463_p3 = ((icmp_ln290_fu_445_p2[0:0] == 1'b1) ? 7'd63 : 7'd0);

assign select_ln291_1_fu_649_p3 = ((or_ln291_fu_643_p2[0:0] == 1'b1) ? select_ln291_fu_635_p3 : add_ln291_fu_629_p2);

assign select_ln291_fu_635_p3 = ((icmp_ln291_fu_617_p2[0:0] == 1'b1) ? 7'd31 : 7'd0);

assign select_ln292_1_fu_811_p3 = ((or_ln292_fu_805_p2[0:0] == 1'b1) ? select_ln292_fu_797_p3 : add_ln292_fu_791_p2);

assign select_ln292_fu_797_p3 = ((icmp_ln292_fu_779_p2[0:0] == 1'b1) ? 7'd31 : 7'd0);

assign select_ln294_1_fu_1131_p3 = ((or_ln294_fu_1125_p2[0:0] == 1'b1) ? select_ln294_fu_1117_p3 : add_ln294_fu_1111_p2);

assign select_ln294_fu_1117_p3 = ((icmp_ln294_fu_1099_p2[0:0] == 1'b1) ? 7'd15 : 7'd0);

assign select_ln295_1_fu_1067_p3 = ((or_ln295_fu_1061_p2[0:0] == 1'b1) ? select_ln295_fu_1053_p3 : add_ln295_fu_1047_p2);

assign select_ln295_fu_1053_p3 = ((icmp_ln295_fu_1035_p2[0:0] == 1'b1) ? 7'd15 : 7'd0);

assign select_ln296_1_fu_1363_p3 = ((or_ln296_fu_1357_p2[0:0] == 1'b1) ? select_ln296_fu_1349_p3 : add_ln296_fu_1343_p2);

assign select_ln296_fu_1349_p3 = ((icmp_ln296_fu_1331_p2[0:0] == 1'b1) ? 7'd7 : 7'd0);

assign select_ln297_1_fu_1419_p3 = ((or_ln297_fu_1413_p2[0:0] == 1'b1) ? select_ln297_fu_1405_p3 : add_ln297_fu_1399_p2);

assign select_ln297_fu_1405_p3 = ((icmp_ln297_fu_1387_p2[0:0] == 1'b1) ? 7'd7 : 7'd0);

assign sext_ln39_10_fu_877_p1 = $signed(temp_23_fu_869_p3);

assign sext_ln39_11_fu_953_p1 = $signed(temp_25_fu_943_p4);

assign sext_ln39_12_fu_981_p1 = $signed(temp_26_fu_973_p3);

assign sext_ln39_13_fu_1159_p1 = $signed(temp_28_fu_1149_p4);

assign sext_ln39_14_fu_1187_p1 = $signed(temp_29_fu_1179_p3);

assign sext_ln39_15_fu_1243_p1 = $signed(temp_31_fu_1233_p4);

assign sext_ln39_16_fu_1271_p1 = $signed(temp_32_fu_1263_p3);

assign sext_ln39_4_fu_391_p1 = $signed(temp_14_fu_381_p4);

assign sext_ln39_5_fu_525_p1 = $signed(temp_16_fu_515_p4);

assign sext_ln39_6_fu_563_p1 = $signed(temp_17_fu_555_p3);

assign sext_ln39_7_fu_697_p1 = $signed(temp_19_fu_687_p4);

assign sext_ln39_8_fu_725_p1 = $signed(temp_20_fu_717_p3);

assign sext_ln39_9_fu_839_p1 = $signed(temp_22_fu_829_p4);

assign sext_ln39_fu_257_p1 = $signed(temp_fu_247_p4);

assign sext_ln48_10_fu_933_p1 = $signed(shl_ln48_9_fu_925_p3);

assign sext_ln48_1_fu_237_p1 = $signed(shl_ln48_1_fu_229_p3);

assign sext_ln48_2_fu_359_p1 = $signed(shl_ln48_2_fu_351_p3);

assign sext_ln48_3_fu_371_p1 = $signed(shl_ln48_3_fu_363_p3);

assign sext_ln48_4_fu_493_p1 = $signed(shl_ln48_4_fu_485_p3);

assign sext_ln48_5_fu_505_p1 = $signed(shl_ln48_5_fu_497_p3);

assign sext_ln48_6_fu_665_p1 = $signed(shl_ln48_6_fu_657_p3);

assign sext_ln48_7_fu_677_p1 = $signed(shl_ln48_7_fu_669_p3);

assign sext_ln48_9_fu_921_p1 = $signed(shl_ln48_8_fu_913_p3);

assign sext_ln48_fu_225_p1 = $signed(shl_ln_fu_217_p3);

assign shl_ln48_1_fu_229_p3 = {{LARc_q1}, {12'd0}};

assign shl_ln48_2_fu_351_p3 = {{LARc_q0}, {14'd0}};

assign shl_ln48_3_fu_363_p3 = {{LARc_q0}, {12'd0}};

assign shl_ln48_4_fu_485_p3 = {{LARc_q1}, {14'd0}};

assign shl_ln48_5_fu_497_p3 = {{LARc_q1}, {12'd0}};

assign shl_ln48_6_fu_657_p3 = {{LARc_q0}, {14'd0}};

assign shl_ln48_7_fu_669_p3 = {{LARc_q0}, {12'd0}};

assign shl_ln48_8_fu_913_p3 = {{LARc_q0}, {14'd0}};

assign shl_ln48_9_fu_925_p3 = {{LARc_q0}, {10'd0}};

assign shl_ln_fu_217_p3 = {{LARc_q1}, {14'd0}};

assign sub_ln48_fu_937_p2 = ($signed(sext_ln48_9_fu_921_p1) - $signed(sext_ln48_10_fu_933_p1));

assign sum_10_fu_957_p2 = ($signed(sext_ln39_11_fu_953_p1) + $signed(17'd129280));

assign sum_11_fu_985_p2 = ($signed(sext_ln39_12_fu_981_p1) + $signed(17'd256));

assign sum_12_fu_1163_p2 = ($signed(sext_ln39_13_fu_1159_p1) + $signed(17'd130731));

assign sum_13_fu_1191_p2 = ($signed(sext_ln39_14_fu_1187_p1) + $signed(17'd256));

assign sum_14_fu_1247_p2 = ($signed(sext_ln39_15_fu_1243_p1) + $signed(17'd129928));

assign sum_15_fu_1275_p2 = ($signed(sext_ln39_16_fu_1271_p1) + $signed(17'd256));

assign sum_3_fu_395_p2 = ($signed(sext_ln39_4_fu_391_p1) + $signed(17'd256));

assign sum_4_fu_529_p2 = ($signed(sext_ln39_5_fu_525_p1) + $signed(17'd2048));

assign sum_5_fu_567_p2 = ($signed(sext_ln39_6_fu_563_p1) + $signed(17'd256));

assign sum_6_fu_701_p2 = ($signed(sext_ln39_7_fu_697_p1) + $signed(17'd128512));

assign sum_7_fu_729_p2 = ($signed(sext_ln39_8_fu_725_p1) + $signed(17'd256));

assign sum_8_fu_843_p2 = ($signed(sext_ln39_9_fu_839_p1) + $signed(17'd94));

assign sum_9_fu_881_p2 = ($signed(sext_ln39_10_fu_877_p1) + $signed(17'd256));

assign sum_fu_261_p2 = ($signed(sext_ln39_fu_257_p1) + $signed(17'd256));

assign temp_13_fu_293_p3 = ((icmp_ln40_fu_277_p2[0:0] == 1'b1) ? 7'd63 : tmp_fu_283_p4);

assign temp_14_fu_381_p4 = {{add_ln48_1_fu_375_p2[30:15]}};

assign temp_15_fu_427_p3 = ((icmp_ln40_6_fu_411_p2[0:0] == 1'b1) ? 7'd63 : tmp_1_fu_417_p4);

assign temp_16_fu_515_p4 = {{add_ln48_2_fu_509_p2[30:15]}};

assign temp_17_fu_555_p3 = ((icmp_ln40_7_fu_545_p2[0:0] == 1'b1) ? 16'd32767 : trunc_ln40_fu_551_p1);

assign temp_18_fu_599_p3 = ((icmp_ln40_8_fu_583_p2[0:0] == 1'b1) ? 7'd63 : tmp_2_fu_589_p4);

assign temp_19_fu_687_p4 = {{add_ln48_3_fu_681_p2[30:15]}};

assign temp_20_fu_717_p3 = ((icmp_ln40_9_fu_707_p2[0:0] == 1'b1) ? 16'd32768 : trunc_ln40_1_fu_713_p1);

assign temp_21_fu_761_p3 = ((icmp_ln40_10_fu_745_p2[0:0] == 1'b1) ? 7'd63 : tmp_3_fu_751_p4);

assign temp_22_fu_829_p4 = {{mul_ln48_fu_823_p2[30:15]}};

assign temp_23_fu_869_p3 = ((icmp_ln40_11_fu_859_p2[0:0] == 1'b1) ? 16'd32767 : trunc_ln40_2_fu_865_p1);

assign temp_24_fu_1083_p3 = ((icmp_ln40_12_reg_1493[0:0] == 1'b1) ? 7'd63 : tmp_4_reg_1498);

assign temp_25_fu_943_p4 = {{sub_ln48_fu_937_p2[30:15]}};

assign temp_26_fu_973_p3 = ((icmp_ln40_13_fu_963_p2[0:0] == 1'b1) ? 16'd32768 : trunc_ln40_3_fu_969_p1);

assign temp_27_fu_1017_p3 = ((icmp_ln40_14_fu_1001_p2[0:0] == 1'b1) ? 7'd63 : tmp_5_fu_1007_p4);

assign temp_28_fu_1149_p4 = {{mul_ln48_1_fu_1143_p2[30:15]}};

assign temp_29_fu_1179_p3 = ((icmp_ln40_15_fu_1169_p2[0:0] == 1'b1) ? 16'd32768 : trunc_ln40_4_fu_1175_p1);

assign temp_30_fu_1315_p3 = ((icmp_ln40_16_reg_1523[0:0] == 1'b1) ? 7'd63 : tmp_6_reg_1528);

assign temp_31_fu_1233_p4 = {{mul_ln48_2_fu_1227_p2[30:15]}};

assign temp_32_fu_1263_p3 = ((icmp_ln40_17_fu_1253_p2[0:0] == 1'b1) ? 16'd32768 : trunc_ln40_5_fu_1259_p1);

assign temp_33_fu_1371_p3 = ((icmp_ln40_18_reg_1533[0:0] == 1'b1) ? 7'd63 : tmp_7_reg_1538);

assign temp_fu_247_p4 = {{add_ln48_fu_241_p2[30:15]}};

assign tmp_10_fu_401_p4 = {{sum_3_fu_395_p2[16:15]}};

assign tmp_11_fu_435_p4 = {{temp_15_fu_427_p3[6:5]}};

assign tmp_12_fu_535_p4 = {{sum_4_fu_529_p2[16:15]}};

assign tmp_13_fu_573_p4 = {{sum_5_fu_567_p2[16:15]}};

assign tmp_14_fu_607_p4 = {{temp_18_fu_599_p3[6:4]}};

assign tmp_15_fu_735_p4 = {{sum_7_fu_729_p2[16:15]}};

assign tmp_16_fu_769_p4 = {{temp_21_fu_761_p3[6:4]}};

assign tmp_17_fu_849_p4 = {{sum_8_fu_843_p2[16:15]}};

assign tmp_18_fu_887_p4 = {{sum_9_fu_881_p2[16:15]}};

assign tmp_19_fu_1089_p4 = {{temp_24_fu_1083_p3[6:3]}};

assign tmp_1_fu_417_p4 = {{sum_3_fu_395_p2[15:9]}};

assign tmp_20_fu_991_p4 = {{sum_11_fu_985_p2[16:15]}};

assign tmp_21_fu_1025_p4 = {{temp_27_fu_1017_p3[6:3]}};

assign tmp_22_fu_1197_p4 = {{sum_13_fu_1191_p2[16:15]}};

assign tmp_23_fu_1321_p4 = {{temp_30_fu_1315_p3[6:2]}};

assign tmp_24_fu_1281_p4 = {{sum_15_fu_1275_p2[16:15]}};

assign tmp_25_fu_1377_p4 = {{temp_33_fu_1371_p3[6:2]}};

assign tmp_2_fu_589_p4 = {{sum_5_fu_567_p2[15:9]}};

assign tmp_3_fu_751_p4 = {{sum_7_fu_729_p2[15:9]}};

assign tmp_5_fu_1007_p4 = {{sum_11_fu_985_p2[15:9]}};

assign tmp_8_fu_267_p4 = {{sum_fu_261_p2[16:15]}};

assign tmp_9_fu_301_p4 = {{temp_13_fu_293_p3[6:5]}};

assign tmp_fu_283_p4 = {{sum_fu_261_p2[15:9]}};

assign trunc_ln40_1_fu_713_p1 = sum_6_fu_701_p2[15:0];

assign trunc_ln40_2_fu_865_p1 = sum_8_fu_843_p2[15:0];

assign trunc_ln40_3_fu_969_p1 = sum_10_fu_957_p2[15:0];

assign trunc_ln40_4_fu_1175_p1 = sum_12_fu_1163_p2[15:0];

assign trunc_ln40_5_fu_1259_p1 = sum_14_fu_1247_p2[15:0];

assign trunc_ln40_fu_551_p1 = sum_4_fu_529_p2[15:0];

assign zext_ln289_fu_1075_p1 = select_ln289_1_reg_1453;

assign zext_ln290_fu_1079_p1 = select_ln290_1_reg_1458;

assign zext_ln291_fu_1307_p1 = select_ln291_1_reg_1473;

assign zext_ln292_fu_1311_p1 = select_ln292_1_reg_1478;

assign zext_ln294_fu_1427_p1 = select_ln294_1_reg_1518;

assign zext_ln295_fu_1431_p1 = select_ln295_1_reg_1503;

assign zext_ln296_fu_1435_p1 = select_ln296_1_reg_1543;

assign zext_ln297_fu_1439_p1 = select_ln297_1_reg_1548;

endmodule //Gsm_LPC_Analysis_Quantization_and_coding
