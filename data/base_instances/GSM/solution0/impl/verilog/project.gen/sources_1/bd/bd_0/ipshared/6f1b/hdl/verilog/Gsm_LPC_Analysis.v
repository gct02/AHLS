// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Gsm_LPC_Analysis_Gsm_LPC_Analysis,hls_ip_2023_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu50-fsvh2104-2-e,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.672063,HLS_SYN_LAT=1691,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2514,HLS_SYN_LUT=7727,HLS_VERSION=2023_2}" *)

module Gsm_LPC_Analysis (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        indata_address0,
        indata_ce0,
        indata_we0,
        indata_d0,
        indata_q0,
        indata_address1,
        indata_ce1,
        indata_we1,
        indata_d1,
        indata_q1,
        LARc_address0,
        LARc_ce0,
        LARc_we0,
        LARc_d0,
        LARc_q0,
        LARc_address1,
        LARc_ce1,
        LARc_we1,
        LARc_d1,
        LARc_q1
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] indata_address0;
output   indata_ce0;
output   indata_we0;
output  [15:0] indata_d0;
input  [15:0] indata_q0;
output  [7:0] indata_address1;
output   indata_ce1;
output   indata_we1;
output  [15:0] indata_d1;
input  [15:0] indata_q1;
output  [2:0] LARc_address0;
output   LARc_ce0;
output   LARc_we0;
output  [15:0] LARc_d0;
input  [15:0] LARc_q0;
output  [2:0] LARc_address1;
output   LARc_ce1;
output   LARc_we1;
output  [15:0] LARc_d1;
input  [15:0] LARc_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] LARc_address0;
reg LARc_ce0;
reg LARc_we0;
reg[15:0] LARc_d0;
reg LARc_ce1;
reg LARc_we1;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] bitoff_address0;
reg    bitoff_ce0;
wire   [3:0] bitoff_q0;
reg   [7:0] bitoff_address1;
reg    bitoff_ce1;
wire   [3:0] bitoff_q1;
reg   [7:0] bitoff_address2;
reg    bitoff_ce2;
wire   [3:0] bitoff_q2;
reg    bitoff_ce3;
wire   [3:0] bitoff_q3;
reg   [3:0] L_ACF_address0;
reg    L_ACF_ce0;
reg    L_ACF_we0;
wire   [63:0] L_ACF_q0;
reg    L_ACF_ce1;
reg    L_ACF_we1;
wire   [63:0] L_ACF_q1;
wire    grp_Autocorrelation_fu_40_ap_start;
wire    grp_Autocorrelation_fu_40_ap_done;
wire    grp_Autocorrelation_fu_40_ap_idle;
wire    grp_Autocorrelation_fu_40_ap_ready;
wire   [7:0] grp_Autocorrelation_fu_40_indata_address0;
wire    grp_Autocorrelation_fu_40_indata_ce0;
wire    grp_Autocorrelation_fu_40_indata_we0;
wire   [15:0] grp_Autocorrelation_fu_40_indata_d0;
wire   [7:0] grp_Autocorrelation_fu_40_indata_address1;
wire    grp_Autocorrelation_fu_40_indata_ce1;
wire    grp_Autocorrelation_fu_40_indata_we1;
wire   [15:0] grp_Autocorrelation_fu_40_indata_d1;
wire   [3:0] grp_Autocorrelation_fu_40_L_ACF_address0;
wire    grp_Autocorrelation_fu_40_L_ACF_ce0;
wire    grp_Autocorrelation_fu_40_L_ACF_we0;
wire   [63:0] grp_Autocorrelation_fu_40_L_ACF_d0;
wire   [3:0] grp_Autocorrelation_fu_40_L_ACF_address1;
wire    grp_Autocorrelation_fu_40_L_ACF_ce1;
wire    grp_Autocorrelation_fu_40_L_ACF_we1;
wire   [63:0] grp_Autocorrelation_fu_40_L_ACF_d1;
wire   [7:0] grp_Autocorrelation_fu_40_bitoff_address0;
wire    grp_Autocorrelation_fu_40_bitoff_ce0;
wire   [7:0] grp_Autocorrelation_fu_40_bitoff_address1;
wire    grp_Autocorrelation_fu_40_bitoff_ce1;
wire   [7:0] grp_Autocorrelation_fu_40_bitoff_address2;
wire    grp_Autocorrelation_fu_40_bitoff_ce2;
wire    grp_Reflection_coefficients_fu_50_ap_start;
wire    grp_Reflection_coefficients_fu_50_ap_done;
wire    grp_Reflection_coefficients_fu_50_ap_idle;
wire    grp_Reflection_coefficients_fu_50_ap_ready;
wire   [3:0] grp_Reflection_coefficients_fu_50_L_ACF_address0;
wire    grp_Reflection_coefficients_fu_50_L_ACF_ce0;
wire   [2:0] grp_Reflection_coefficients_fu_50_LARc_address0;
wire    grp_Reflection_coefficients_fu_50_LARc_ce0;
wire    grp_Reflection_coefficients_fu_50_LARc_we0;
wire   [15:0] grp_Reflection_coefficients_fu_50_LARc_d0;
wire   [7:0] grp_Reflection_coefficients_fu_50_bitoff_address0;
wire    grp_Reflection_coefficients_fu_50_bitoff_ce0;
wire   [7:0] grp_Reflection_coefficients_fu_50_bitoff_address1;
wire    grp_Reflection_coefficients_fu_50_bitoff_ce1;
wire   [7:0] grp_Reflection_coefficients_fu_50_bitoff_address2;
wire    grp_Reflection_coefficients_fu_50_bitoff_ce2;
wire   [7:0] grp_Reflection_coefficients_fu_50_bitoff_address3;
wire    grp_Reflection_coefficients_fu_50_bitoff_ce3;
wire    grp_Transformation_to_Log_Area_Ratios_fu_59_ap_start;
wire    grp_Transformation_to_Log_Area_Ratios_fu_59_ap_done;
wire    grp_Transformation_to_Log_Area_Ratios_fu_59_ap_idle;
wire    grp_Transformation_to_Log_Area_Ratios_fu_59_ap_ready;
wire   [2:0] grp_Transformation_to_Log_Area_Ratios_fu_59_LARc_address0;
wire    grp_Transformation_to_Log_Area_Ratios_fu_59_LARc_ce0;
wire    grp_Transformation_to_Log_Area_Ratios_fu_59_LARc_we0;
wire   [15:0] grp_Transformation_to_Log_Area_Ratios_fu_59_LARc_d0;
wire    grp_Quantization_and_coding_fu_65_ap_start;
wire    grp_Quantization_and_coding_fu_65_ap_done;
wire    grp_Quantization_and_coding_fu_65_ap_idle;
wire    grp_Quantization_and_coding_fu_65_ap_ready;
wire   [2:0] grp_Quantization_and_coding_fu_65_LARc_address0;
wire    grp_Quantization_and_coding_fu_65_LARc_ce0;
wire    grp_Quantization_and_coding_fu_65_LARc_we0;
wire   [15:0] grp_Quantization_and_coding_fu_65_LARc_d0;
wire   [2:0] grp_Quantization_and_coding_fu_65_LARc_address1;
wire    grp_Quantization_and_coding_fu_65_LARc_ce1;
wire    grp_Quantization_and_coding_fu_65_LARc_we1;
wire   [15:0] grp_Quantization_and_coding_fu_65_LARc_d1;
reg    grp_Autocorrelation_fu_40_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_Reflection_coefficients_fu_50_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg    grp_Transformation_to_Log_Area_Ratios_fu_59_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg    grp_Quantization_and_coding_fu_65_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg   [7:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 grp_Autocorrelation_fu_40_ap_start_reg = 1'b0;
#0 grp_Reflection_coefficients_fu_50_ap_start_reg = 1'b0;
#0 grp_Transformation_to_Log_Area_Ratios_fu_59_ap_start_reg = 1'b0;
#0 grp_Quantization_and_coding_fu_65_ap_start_reg = 1'b0;
end

Gsm_LPC_Analysis_bitoff_ROM_AUTO_1R #(
    .DataWidth( 4 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
bitoff_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bitoff_address0),
    .ce0(bitoff_ce0),
    .q0(bitoff_q0),
    .address1(bitoff_address1),
    .ce1(bitoff_ce1),
    .q1(bitoff_q1),
    .address2(bitoff_address2),
    .ce2(bitoff_ce2),
    .q2(bitoff_q2),
    .address3(grp_Reflection_coefficients_fu_50_bitoff_address3),
    .ce3(bitoff_ce3),
    .q3(bitoff_q3)
);

Gsm_LPC_Analysis_L_ACF_RAM_AUTO_1R1W #(
    .DataWidth( 64 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
L_ACF_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(L_ACF_address0),
    .ce0(L_ACF_ce0),
    .we0(L_ACF_we0),
    .d0(grp_Autocorrelation_fu_40_L_ACF_d0),
    .q0(L_ACF_q0),
    .address1(grp_Autocorrelation_fu_40_L_ACF_address1),
    .ce1(L_ACF_ce1),
    .we1(L_ACF_we1),
    .d1(grp_Autocorrelation_fu_40_L_ACF_d1),
    .q1(L_ACF_q1)
);

Gsm_LPC_Analysis_Autocorrelation grp_Autocorrelation_fu_40(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Autocorrelation_fu_40_ap_start),
    .ap_done(grp_Autocorrelation_fu_40_ap_done),
    .ap_idle(grp_Autocorrelation_fu_40_ap_idle),
    .ap_ready(grp_Autocorrelation_fu_40_ap_ready),
    .indata_address0(grp_Autocorrelation_fu_40_indata_address0),
    .indata_ce0(grp_Autocorrelation_fu_40_indata_ce0),
    .indata_we0(grp_Autocorrelation_fu_40_indata_we0),
    .indata_d0(grp_Autocorrelation_fu_40_indata_d0),
    .indata_q0(indata_q0),
    .indata_address1(grp_Autocorrelation_fu_40_indata_address1),
    .indata_ce1(grp_Autocorrelation_fu_40_indata_ce1),
    .indata_we1(grp_Autocorrelation_fu_40_indata_we1),
    .indata_d1(grp_Autocorrelation_fu_40_indata_d1),
    .indata_q1(indata_q1),
    .L_ACF_address0(grp_Autocorrelation_fu_40_L_ACF_address0),
    .L_ACF_ce0(grp_Autocorrelation_fu_40_L_ACF_ce0),
    .L_ACF_we0(grp_Autocorrelation_fu_40_L_ACF_we0),
    .L_ACF_d0(grp_Autocorrelation_fu_40_L_ACF_d0),
    .L_ACF_q0(L_ACF_q0),
    .L_ACF_address1(grp_Autocorrelation_fu_40_L_ACF_address1),
    .L_ACF_ce1(grp_Autocorrelation_fu_40_L_ACF_ce1),
    .L_ACF_we1(grp_Autocorrelation_fu_40_L_ACF_we1),
    .L_ACF_d1(grp_Autocorrelation_fu_40_L_ACF_d1),
    .L_ACF_q1(L_ACF_q1),
    .bitoff_address0(grp_Autocorrelation_fu_40_bitoff_address0),
    .bitoff_ce0(grp_Autocorrelation_fu_40_bitoff_ce0),
    .bitoff_q0(bitoff_q0),
    .bitoff_address1(grp_Autocorrelation_fu_40_bitoff_address1),
    .bitoff_ce1(grp_Autocorrelation_fu_40_bitoff_ce1),
    .bitoff_q1(bitoff_q1),
    .bitoff_address2(grp_Autocorrelation_fu_40_bitoff_address2),
    .bitoff_ce2(grp_Autocorrelation_fu_40_bitoff_ce2),
    .bitoff_q2(bitoff_q2)
);

Gsm_LPC_Analysis_Reflection_coefficients grp_Reflection_coefficients_fu_50(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Reflection_coefficients_fu_50_ap_start),
    .ap_done(grp_Reflection_coefficients_fu_50_ap_done),
    .ap_idle(grp_Reflection_coefficients_fu_50_ap_idle),
    .ap_ready(grp_Reflection_coefficients_fu_50_ap_ready),
    .L_ACF_address0(grp_Reflection_coefficients_fu_50_L_ACF_address0),
    .L_ACF_ce0(grp_Reflection_coefficients_fu_50_L_ACF_ce0),
    .L_ACF_q0(L_ACF_q0),
    .LARc_address0(grp_Reflection_coefficients_fu_50_LARc_address0),
    .LARc_ce0(grp_Reflection_coefficients_fu_50_LARc_ce0),
    .LARc_we0(grp_Reflection_coefficients_fu_50_LARc_we0),
    .LARc_d0(grp_Reflection_coefficients_fu_50_LARc_d0),
    .bitoff_address0(grp_Reflection_coefficients_fu_50_bitoff_address0),
    .bitoff_ce0(grp_Reflection_coefficients_fu_50_bitoff_ce0),
    .bitoff_q0(bitoff_q0),
    .bitoff_address1(grp_Reflection_coefficients_fu_50_bitoff_address1),
    .bitoff_ce1(grp_Reflection_coefficients_fu_50_bitoff_ce1),
    .bitoff_q1(bitoff_q1),
    .bitoff_address2(grp_Reflection_coefficients_fu_50_bitoff_address2),
    .bitoff_ce2(grp_Reflection_coefficients_fu_50_bitoff_ce2),
    .bitoff_q2(bitoff_q2),
    .bitoff_address3(grp_Reflection_coefficients_fu_50_bitoff_address3),
    .bitoff_ce3(grp_Reflection_coefficients_fu_50_bitoff_ce3),
    .bitoff_q3(bitoff_q3)
);

Gsm_LPC_Analysis_Transformation_to_Log_Area_Ratios grp_Transformation_to_Log_Area_Ratios_fu_59(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Transformation_to_Log_Area_Ratios_fu_59_ap_start),
    .ap_done(grp_Transformation_to_Log_Area_Ratios_fu_59_ap_done),
    .ap_idle(grp_Transformation_to_Log_Area_Ratios_fu_59_ap_idle),
    .ap_ready(grp_Transformation_to_Log_Area_Ratios_fu_59_ap_ready),
    .LARc_address0(grp_Transformation_to_Log_Area_Ratios_fu_59_LARc_address0),
    .LARc_ce0(grp_Transformation_to_Log_Area_Ratios_fu_59_LARc_ce0),
    .LARc_we0(grp_Transformation_to_Log_Area_Ratios_fu_59_LARc_we0),
    .LARc_d0(grp_Transformation_to_Log_Area_Ratios_fu_59_LARc_d0),
    .LARc_q0(LARc_q0)
);

Gsm_LPC_Analysis_Quantization_and_coding grp_Quantization_and_coding_fu_65(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Quantization_and_coding_fu_65_ap_start),
    .ap_done(grp_Quantization_and_coding_fu_65_ap_done),
    .ap_idle(grp_Quantization_and_coding_fu_65_ap_idle),
    .ap_ready(grp_Quantization_and_coding_fu_65_ap_ready),
    .LARc_address0(grp_Quantization_and_coding_fu_65_LARc_address0),
    .LARc_ce0(grp_Quantization_and_coding_fu_65_LARc_ce0),
    .LARc_we0(grp_Quantization_and_coding_fu_65_LARc_we0),
    .LARc_d0(grp_Quantization_and_coding_fu_65_LARc_d0),
    .LARc_q0(LARc_q0),
    .LARc_address1(grp_Quantization_and_coding_fu_65_LARc_address1),
    .LARc_ce1(grp_Quantization_and_coding_fu_65_LARc_ce1),
    .LARc_we1(grp_Quantization_and_coding_fu_65_LARc_we1),
    .LARc_d1(grp_Quantization_and_coding_fu_65_LARc_d1),
    .LARc_q1(LARc_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Autocorrelation_fu_40_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_Autocorrelation_fu_40_ap_start_reg <= 1'b1;
        end else if ((grp_Autocorrelation_fu_40_ap_ready == 1'b1)) begin
            grp_Autocorrelation_fu_40_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Quantization_and_coding_fu_65_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_Quantization_and_coding_fu_65_ap_start_reg <= 1'b1;
        end else if ((grp_Quantization_and_coding_fu_65_ap_ready == 1'b1)) begin
            grp_Quantization_and_coding_fu_65_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Reflection_coefficients_fu_50_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_Reflection_coefficients_fu_50_ap_start_reg <= 1'b1;
        end else if ((grp_Reflection_coefficients_fu_50_ap_ready == 1'b1)) begin
            grp_Reflection_coefficients_fu_50_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Transformation_to_Log_Area_Ratios_fu_59_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_Transformation_to_Log_Area_Ratios_fu_59_ap_start_reg <= 1'b1;
        end else if ((grp_Transformation_to_Log_Area_Ratios_fu_59_ap_ready == 1'b1)) begin
            grp_Transformation_to_Log_Area_Ratios_fu_59_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        LARc_address0 = grp_Quantization_and_coding_fu_65_LARc_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        LARc_address0 = grp_Transformation_to_Log_Area_Ratios_fu_59_LARc_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        LARc_address0 = grp_Reflection_coefficients_fu_50_LARc_address0;
    end else begin
        LARc_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        LARc_ce0 = grp_Quantization_and_coding_fu_65_LARc_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        LARc_ce0 = grp_Transformation_to_Log_Area_Ratios_fu_59_LARc_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        LARc_ce0 = grp_Reflection_coefficients_fu_50_LARc_ce0;
    end else begin
        LARc_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        LARc_ce1 = grp_Quantization_and_coding_fu_65_LARc_ce1;
    end else begin
        LARc_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        LARc_d0 = grp_Quantization_and_coding_fu_65_LARc_d0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        LARc_d0 = grp_Transformation_to_Log_Area_Ratios_fu_59_LARc_d0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        LARc_d0 = grp_Reflection_coefficients_fu_50_LARc_d0;
    end else begin
        LARc_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        LARc_we0 = grp_Quantization_and_coding_fu_65_LARc_we0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        LARc_we0 = grp_Transformation_to_Log_Area_Ratios_fu_59_LARc_we0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        LARc_we0 = grp_Reflection_coefficients_fu_50_LARc_we0;
    end else begin
        LARc_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        LARc_we1 = grp_Quantization_and_coding_fu_65_LARc_we1;
    end else begin
        LARc_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        L_ACF_address0 = grp_Reflection_coefficients_fu_50_L_ACF_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        L_ACF_address0 = grp_Autocorrelation_fu_40_L_ACF_address0;
    end else begin
        L_ACF_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        L_ACF_ce0 = grp_Reflection_coefficients_fu_50_L_ACF_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        L_ACF_ce0 = grp_Autocorrelation_fu_40_L_ACF_ce0;
    end else begin
        L_ACF_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        L_ACF_ce1 = grp_Autocorrelation_fu_40_L_ACF_ce1;
    end else begin
        L_ACF_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        L_ACF_we0 = grp_Autocorrelation_fu_40_L_ACF_we0;
    end else begin
        L_ACF_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        L_ACF_we1 = grp_Autocorrelation_fu_40_L_ACF_we1;
    end else begin
        L_ACF_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_Autocorrelation_fu_40_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_Reflection_coefficients_fu_50_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_Transformation_to_Log_Area_Ratios_fu_59_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((grp_Quantization_and_coding_fu_65_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (grp_Quantization_and_coding_fu_65_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (grp_Quantization_and_coding_fu_65_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bitoff_address0 = grp_Reflection_coefficients_fu_50_bitoff_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        bitoff_address0 = grp_Autocorrelation_fu_40_bitoff_address0;
    end else begin
        bitoff_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bitoff_address1 = grp_Reflection_coefficients_fu_50_bitoff_address1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        bitoff_address1 = grp_Autocorrelation_fu_40_bitoff_address1;
    end else begin
        bitoff_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bitoff_address2 = grp_Reflection_coefficients_fu_50_bitoff_address2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        bitoff_address2 = grp_Autocorrelation_fu_40_bitoff_address2;
    end else begin
        bitoff_address2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bitoff_ce0 = grp_Reflection_coefficients_fu_50_bitoff_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        bitoff_ce0 = grp_Autocorrelation_fu_40_bitoff_ce0;
    end else begin
        bitoff_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bitoff_ce1 = grp_Reflection_coefficients_fu_50_bitoff_ce1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        bitoff_ce1 = grp_Autocorrelation_fu_40_bitoff_ce1;
    end else begin
        bitoff_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bitoff_ce2 = grp_Reflection_coefficients_fu_50_bitoff_ce2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        bitoff_ce2 = grp_Autocorrelation_fu_40_bitoff_ce2;
    end else begin
        bitoff_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bitoff_ce3 = grp_Reflection_coefficients_fu_50_bitoff_ce3;
    end else begin
        bitoff_ce3 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_Autocorrelation_fu_40_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_Reflection_coefficients_fu_50_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_Transformation_to_Log_Area_Ratios_fu_59_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_Quantization_and_coding_fu_65_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LARc_address1 = grp_Quantization_and_coding_fu_65_LARc_address1;

assign LARc_d1 = grp_Quantization_and_coding_fu_65_LARc_d1;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign grp_Autocorrelation_fu_40_ap_start = grp_Autocorrelation_fu_40_ap_start_reg;

assign grp_Quantization_and_coding_fu_65_ap_start = grp_Quantization_and_coding_fu_65_ap_start_reg;

assign grp_Reflection_coefficients_fu_50_ap_start = grp_Reflection_coefficients_fu_50_ap_start_reg;

assign grp_Transformation_to_Log_Area_Ratios_fu_59_ap_start = grp_Transformation_to_Log_Area_Ratios_fu_59_ap_start_reg;

assign indata_address0 = grp_Autocorrelation_fu_40_indata_address0;

assign indata_address1 = grp_Autocorrelation_fu_40_indata_address1;

assign indata_ce0 = grp_Autocorrelation_fu_40_indata_ce0;

assign indata_ce1 = grp_Autocorrelation_fu_40_indata_ce1;

assign indata_d0 = grp_Autocorrelation_fu_40_indata_d0;

assign indata_d1 = grp_Autocorrelation_fu_40_indata_d1;

assign indata_we0 = grp_Autocorrelation_fu_40_indata_we0;

assign indata_we1 = grp_Autocorrelation_fu_40_indata_we1;

endmodule //Gsm_LPC_Analysis
