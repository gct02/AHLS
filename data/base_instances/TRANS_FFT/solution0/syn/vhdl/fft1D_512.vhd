-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fft1D_512 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    work_x_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    work_x_ce0 : OUT STD_LOGIC;
    work_x_we0 : OUT STD_LOGIC;
    work_x_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    work_x_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    work_x_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    work_x_ce1 : OUT STD_LOGIC;
    work_x_we1 : OUT STD_LOGIC;
    work_x_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    work_x_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    work_y_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    work_y_ce0 : OUT STD_LOGIC;
    work_y_we0 : OUT STD_LOGIC;
    work_y_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    work_y_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    work_y_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    work_y_ce1 : OUT STD_LOGIC;
    work_y_we1 : OUT STD_LOGIC;
    work_y_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    work_y_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of fft1D_512 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "fft1D_512_fft1D_512,hls_ip_2023_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu50-fsvh2104-2-e,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.054000,HLS_SYN_LAT=19856,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=19390,HLS_SYN_LUT=24401,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (80 downto 0) := "000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (80 downto 0) := "000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (80 downto 0) := "000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (80 downto 0) := "000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (80 downto 0) := "000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (80 downto 0) := "000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (80 downto 0) := "000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (80 downto 0) := "000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (80 downto 0) := "000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (80 downto 0) := "000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (80 downto 0) := "001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (80 downto 0) := "010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (80 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv64_3FE6A09E60000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111100110101000001001111001100000000000000000000000000000";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_108 : STD_LOGIC_VECTOR (8 downto 0) := "100001000";
    constant ap_const_lv9_4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_const_lv9_5 : STD_LOGIC_VECTOR (8 downto 0) := "000000101";
    constant ap_const_lv8_42 : STD_LOGIC_VECTOR (7 downto 0) := "01000010";
    constant ap_const_lv9_14A : STD_LOGIC_VECTOR (8 downto 0) := "101001010";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv9_3 : STD_LOGIC_VECTOR (8 downto 0) := "000000011";
    constant ap_const_lv8_84 : STD_LOGIC_VECTOR (7 downto 0) := "10000100";
    constant ap_const_lv8_8C : STD_LOGIC_VECTOR (7 downto 0) := "10001100";
    constant ap_const_lv9_6 : STD_LOGIC_VECTOR (8 downto 0) := "000000110";
    constant ap_const_lv9_7 : STD_LOGIC_VECTOR (8 downto 0) := "000000111";
    constant ap_const_lv9_C6 : STD_LOGIC_VECTOR (8 downto 0) := "011000110";
    constant ap_const_lv10_1CE : STD_LOGIC_VECTOR (9 downto 0) := "0111001110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv10_20 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_const_lv10_8 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_const_lv10_28 : STD_LOGIC_VECTOR (9 downto 0) := "0000101000";
    constant ap_const_lv10_10 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_const_lv10_30 : STD_LOGIC_VECTOR (9 downto 0) := "0000110000";
    constant ap_const_lv10_18 : STD_LOGIC_VECTOR (9 downto 0) := "0000011000";
    constant ap_const_lv10_38 : STD_LOGIC_VECTOR (9 downto 0) := "0000111000";
    constant ap_const_lv9_120 : STD_LOGIC_VECTOR (8 downto 0) := "100100000";
    constant ap_const_lv8_48 : STD_LOGIC_VECTOR (7 downto 0) := "01001000";
    constant ap_const_lv9_168 : STD_LOGIC_VECTOR (8 downto 0) := "101101000";
    constant ap_const_lv8_90 : STD_LOGIC_VECTOR (7 downto 0) := "10010000";
    constant ap_const_lv8_B0 : STD_LOGIC_VECTOR (7 downto 0) := "10110000";
    constant ap_const_lv9_D8 : STD_LOGIC_VECTOR (8 downto 0) := "011011000";
    constant ap_const_lv10_1F8 : STD_LOGIC_VECTOR (9 downto 0) := "0111111000";
    constant ap_const_lv64_8000000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv9_140 : STD_LOGIC_VECTOR (8 downto 0) := "101000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (80 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal twiddles8_reversed8_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal twiddles8_reversed8_ce0 : STD_LOGIC;
    signal twiddles8_reversed8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1602_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1682 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal grp_fu_1607_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1693 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1612_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1704 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal grp_fu_1617_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1712 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1622_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1719 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1627_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1728 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1632_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1737 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1637_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1742 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1747 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal reg_1755 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1763 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal reg_1770 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1777 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal reg_1783 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1650_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1789 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal grp_fu_1655_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1794 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal offset_fu_1819_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal offset_reg_4118 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal shl_ln1_fu_1823_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln1_reg_4126 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln174_2_fu_1857_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln174_2_reg_4153 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal zext_ln174_1_fu_1895_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln174_1_reg_4169 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal offset_1_fu_2056_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal offset_1_reg_4198 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal trunc_ln197_fu_2067_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln197_reg_4213 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln2_fu_2092_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln2_reg_4230 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal offset_2_fu_2250_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal offset_2_reg_4273 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal shl_ln3_fu_2254_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln3_reg_4281 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln174_5_fu_2288_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln174_5_reg_4356 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal zext_ln174_4_fu_2326_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln174_4_reg_4372 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal trunc_ln226_fu_2453_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln226_reg_4401 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal add_ln238_fu_2491_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln238_reg_4406 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln4_fu_2531_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln4_reg_4433 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal offset_3_fu_2753_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal offset_3_reg_4476 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal shl_ln6_fu_2757_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln6_reg_4484 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln174_8_fu_2791_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln174_8_reg_4511 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal zext_ln174_7_fu_2829_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln174_7_reg_4527 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal trunc_ln321_fu_2966_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln321_reg_4556 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal zext_ln321_fu_2978_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln321_reg_4561 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln7_fu_3008_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln7_reg_4588 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal offset_5_fu_3166_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal offset_5_reg_4631 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal shl_ln8_fu_3170_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln8_reg_4639 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln174_11_fu_3204_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln174_11_reg_4714 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal zext_ln174_10_fu_3242_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln174_10_reg_4730 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal trunc_ln352_fu_3369_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln352_reg_4759 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal zext_ln364_fu_3391_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln364_reg_4764 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln9_fu_3429_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln9_reg_4791 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal tid_17_reg_4831 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal shl_ln_fu_3655_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln_reg_4843 : STD_LOGIC_VECTOR (8 downto 0);
    signal DATA_y_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal c0_y_17_reg_4873 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal DATA_y_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal c0_y_19_reg_4879 : STD_LOGIC_VECTOR (63 downto 0);
    signal DATA_x_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal c0_x_17_reg_4895 : STD_LOGIC_VECTOR (63 downto 0);
    signal DATA_x_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal c0_x_19_reg_4901 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal bitcast_ln398_1_fu_3762_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln398_3_fu_3777_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln398_9_fu_3792_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln398_11_fu_3808_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal c0_x_20_reg_5051 : STD_LOGIC_VECTOR (63 downto 0);
    signal c0_y_20_reg_5057 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln398_5_fu_3824_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln398_7_fu_3839_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal c0_x_3_reg_5073 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal c0_y_3_reg_5079 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1662_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul7_reg_5085 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1667_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul8_reg_5091 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1672_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul9_reg_5097 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1677_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul10_reg_5102 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln398_13_fu_3854_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln398_15_fu_3869_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln403_cast_fu_3912_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln403_cast_reg_5117 : STD_LOGIC_VECTOR (7 downto 0);
    signal bitcast_ln398_17_fu_3948_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal bitcast_ln398_19_fu_3963_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln402_fu_3968_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal xor_ln402_reg_5132 : STD_LOGIC_VECTOR (6 downto 0);
    signal DATA_x_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal DATA_x_ce0 : STD_LOGIC;
    signal DATA_x_we0 : STD_LOGIC;
    signal DATA_x_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal DATA_x_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal DATA_x_ce1 : STD_LOGIC;
    signal DATA_x_we1 : STD_LOGIC;
    signal DATA_x_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal DATA_y_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal DATA_y_ce0 : STD_LOGIC;
    signal DATA_y_we0 : STD_LOGIC;
    signal DATA_y_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal DATA_y_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal DATA_y_ce1 : STD_LOGIC;
    signal DATA_y_we1 : STD_LOGIC;
    signal DATA_y_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_x_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal data_x_ce0 : STD_LOGIC;
    signal data_x_we0 : STD_LOGIC;
    signal data_x_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_x_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_x_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal data_x_ce1 : STD_LOGIC;
    signal data_x_we1 : STD_LOGIC;
    signal data_x_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_x_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_y_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal data_y_ce0 : STD_LOGIC;
    signal data_y_we0 : STD_LOGIC;
    signal data_y_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_y_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_y_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal data_y_ce1 : STD_LOGIC;
    signal data_y_we1 : STD_LOGIC;
    signal data_y_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_y_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal smem_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal smem_ce0 : STD_LOGIC;
    signal smem_we0 : STD_LOGIC;
    signal smem_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal smem_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal smem_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal smem_ce1 : STD_LOGIC;
    signal smem_we1 : STD_LOGIC;
    signal smem_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal smem_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_ap_start : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_ap_done : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_ap_idle : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_ap_ready : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_ce0 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_we0 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_ce1 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_we1 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_ce0 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_we0 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_ce1 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_we1 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_ce0 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_we0 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_ce1 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_we1 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_ce0 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_we0 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_ce1 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_we1 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_x_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_x_ce0 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_x_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_x_ce1 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_y_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_y_ce0 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_y_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_y_ce1 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_twiddles8_reversed8_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_twiddles8_reversed8_ce0 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1602_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1602_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1602_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1602_p_ce : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1607_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1607_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1607_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1607_p_ce : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1612_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1612_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1612_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1612_p_ce : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1617_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1617_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1617_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1617_p_ce : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1622_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1622_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1622_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1622_p_ce : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1627_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1627_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1627_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1627_p_ce : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1650_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1650_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1650_p_ce : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1655_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1655_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1655_p_ce : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1662_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1662_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1662_p_ce : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1667_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1667_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1667_p_ce : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_sin_or_cos_double_s_fu_5138_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_sin_or_cos_double_s_fu_5138_p_din2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_sin_or_cos_double_s_fu_5138_p_ce : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_sin_or_cos_double_s_fu_5138_p_start : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_ap_start : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_ap_done : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_ap_idle : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_ap_ready : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_ce0 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_we0 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_ce1 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_we1 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_ce0 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_we0 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_ce1 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_we1 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_ce0 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_we0 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_ce1 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_we1 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_ce0 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_we0 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_ce1 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_we1 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_twiddles8_reversed8_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_twiddles8_reversed8_ce0 : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1602_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1602_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1602_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1602_p_ce : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1607_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1607_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1607_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1607_p_ce : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1612_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1612_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1612_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1612_p_ce : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1617_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1617_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1617_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1617_p_ce : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1622_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1622_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1622_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1622_p_ce : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1627_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1627_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1627_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1627_p_ce : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1650_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1650_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1650_p_ce : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1655_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1655_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1655_p_ce : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1662_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1662_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1662_p_ce : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1667_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1667_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1667_p_ce : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_sin_or_cos_double_s_fu_5138_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_sin_or_cos_double_s_fu_5138_p_din2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_sin_or_cos_double_s_fu_5138_p_ce : STD_LOGIC;
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_sin_or_cos_double_s_fu_5138_p_start : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_5138_ap_start : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_5138_ap_done : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_5138_ap_idle : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_5138_ap_ready : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_5138_ap_ce : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_5138_t_in : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_sin_or_cos_double_s_fu_5138_do_cos : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sin_or_cos_double_s_fu_5138_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_ap_start_reg : STD_LOGIC := '0';
    signal grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal zext_ln181_1_fu_1831_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln176_fu_1807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln182_1_fu_1842_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln181_fu_1860_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln182_fu_1870_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln183_1_fu_1880_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln184_1_fu_1890_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln183_fu_1904_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln184_fu_1914_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln185_1_fu_1924_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln186_fu_1934_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln185_fu_1944_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln186_1_fu_1958_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln187_1_fu_1968_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln188_1_fu_1978_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln187_fu_1991_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal zext_ln188_fu_2002_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_fu_2062_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln191_fu_2010_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln198_fu_2077_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_1_fu_2099_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln198_1_fu_2110_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln199_fu_2120_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln200_fu_2130_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln199_1_fu_2140_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln200_1_fu_2150_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln201_fu_2160_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln202_fu_2170_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln201_1_fu_2180_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln202_1_fu_2190_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln203_fu_2200_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln204_fu_2210_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln203_1_fu_2220_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal zext_ln204_1_fu_2230_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln214_1_fu_2262_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln208_fu_2238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln215_1_fu_2273_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln214_fu_2291_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln215_fu_2301_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln216_1_fu_2311_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln217_1_fu_2321_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln216_fu_2335_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln217_fu_2345_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln218_1_fu_2355_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln219_fu_2365_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln218_fu_2375_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln219_1_fu_2389_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln220_1_fu_2399_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln221_1_fu_2409_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln220_fu_2422_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal zext_ln221_fu_2433_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln104_fu_2497_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln224_fu_2441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln105_fu_2508_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln226_fu_2538_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln227_fu_2549_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln106_fu_2559_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln107_fu_2569_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln228_fu_2589_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln229_fu_2599_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln108_fu_2609_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_fu_2619_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln230_fu_2639_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln231_fu_2649_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln110_fu_2659_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln111_fu_2669_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln232_fu_2689_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal zext_ln233_fu_2699_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_1_fu_2765_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln301_fu_2741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln307_1_fu_2776_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_fu_2794_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln307_fu_2804_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln308_1_fu_2814_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln309_1_fu_2824_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln308_fu_2838_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln309_fu_2848_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln310_1_fu_2858_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln311_fu_2868_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln310_fu_2878_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln311_1_fu_2892_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln312_1_fu_2902_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln313_1_fu_2912_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln312_fu_2925_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal zext_ln313_fu_2936_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln323_fu_2982_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln317_fu_2944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln324_fu_2993_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln323_1_fu_3015_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln324_1_fu_3026_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln325_fu_3036_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln326_fu_3046_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln325_1_fu_3056_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln326_1_fu_3066_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln327_fu_3076_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln328_fu_3086_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln327_1_fu_3096_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln328_1_fu_3106_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln329_fu_3116_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln330_fu_3126_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln329_1_fu_3136_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal zext_ln330_1_fu_3146_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln340_1_fu_3178_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln334_fu_3154_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln341_1_fu_3189_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln340_fu_3207_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln341_fu_3217_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln342_1_fu_3227_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln343_1_fu_3237_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln342_fu_3251_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln343_fu_3261_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln344_1_fu_3271_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln345_fu_3281_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln344_fu_3291_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln345_1_fu_3305_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln346_1_fu_3315_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln347_1_fu_3325_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln346_fu_3338_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal zext_ln347_fu_3349_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln104_1_fu_3395_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln350_fu_3357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln105_1_fu_3406_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln352_fu_3436_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln353_fu_3447_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln106_1_fu_3457_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln107_1_fu_3467_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln354_fu_3487_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln355_fu_3497_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln108_1_fu_3507_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_1_fu_3517_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln356_fu_3537_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln357_fu_3547_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln110_1_fu_3557_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln111_1_fu_3567_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln358_fu_3587_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal zext_ln359_fu_3597_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln380_fu_3669_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln376_fu_3639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln382_fu_3681_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln384_fu_3697_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln386_fu_3708_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln381_fu_3719_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln385_fu_3730_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln379_fu_3736_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln383_fu_3746_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln376_fu_3874_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal zext_ln405_fu_3891_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln403_fu_3919_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln402_fu_3973_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln406_fu_3990_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln407_fu_4014_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal zext_ln404_fu_4033_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln408_fu_4052_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal tid_fu_176 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal add_ln176_fu_1813_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tid_1_fu_200 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal add_ln191_fu_2016_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tid_3_fu_204 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal add_ln208_fu_2244_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_phi38_fu_208 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal p_phi37_fu_212 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_phi36_fu_216 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal p_phi35_fu_220 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_phi34_fu_224 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal p_phi33_fu_228 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_phi32_fu_232 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_phi31_fu_236 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal tid_4_fu_240 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal add_ln224_fu_2447_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tid_6_fu_244 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal add_ln301_fu_2747_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tid_7_fu_248 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal add_ln317_fu_2950_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tid_8_fu_252 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal add_ln334_fu_3160_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_phi24_fu_256 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal p_phi23_fu_260 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_phi22_fu_264 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal p_phi21_fu_268 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_phi20_fu_272 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal p_phi19_fu_276 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_phi18_fu_280 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_phi_fu_284 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal tid_9_fu_288 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal add_ln350_fu_3363_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tid_10_fu_292 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal add_ln376_fu_3645_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal bitcast_ln401_fu_3879_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln405_fu_3897_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln403_fu_3925_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln402_fu_3979_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln406_fu_3996_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln407_fu_4020_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln404_fu_4039_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln408_fu_4058_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln410_fu_3902_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln414_fu_3907_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln412_fu_3930_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln411_fu_4001_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln415_fu_4006_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln416_fu_4025_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln413_fu_4044_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln417_fu_4063_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1602_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1602_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal grp_fu_1607_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1607_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1612_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1612_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1617_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1617_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1622_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1622_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1627_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1627_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1632_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1632_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1637_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1637_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1650_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1650_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1655_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1655_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1662_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1662_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1667_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1667_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln182_fu_1836_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln182_fu_1864_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln183_fu_1875_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln184_fu_1885_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln183_fu_1898_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln184_fu_1909_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln185_fu_1919_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln186_fu_1929_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln185_fu_1939_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln186_fu_1949_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln186_fu_1954_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln187_fu_1963_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln188_fu_1973_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln187_fu_1986_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln174_fu_1983_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln188_fu_1996_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal hi_fu_2026_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln193_fu_2022_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln_fu_2040_p5 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln195_fu_2052_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln115_fu_2036_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln198_fu_2071_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln198_fu_2104_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln199_fu_2115_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln200_fu_2125_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln199_fu_2135_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln200_fu_2145_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln201_fu_2155_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln202_fu_2165_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln201_fu_2175_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln202_fu_2185_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln203_fu_2195_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln204_fu_2205_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln203_fu_2215_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln204_fu_2225_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln215_fu_2267_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln215_fu_2295_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln216_fu_2306_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln217_fu_2316_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln216_fu_2329_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln217_fu_2340_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln218_fu_2350_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln219_fu_2360_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln218_fu_2370_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln219_fu_2380_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln219_fu_2385_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln220_fu_2394_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln221_fu_2404_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln220_fu_2417_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln174_3_fu_2414_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln221_fu_2427_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal hi_1_fu_2461_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln235_fu_2457_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln1_fu_2475_p5 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln238_fu_2487_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln115_1_fu_2471_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln105_fu_2502_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln227_fu_2543_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln106_fu_2554_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln107_fu_2564_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln228_fu_2584_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln229_fu_2594_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln108_fu_2604_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln109_fu_2614_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln230_fu_2634_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln231_fu_2644_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln110_fu_2654_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln111_fu_2664_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln232_fu_2684_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln233_fu_2694_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln307_fu_2770_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln307_fu_2798_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln308_fu_2809_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln309_fu_2819_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln308_fu_2832_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln309_fu_2843_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln310_fu_2853_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln311_fu_2863_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln310_fu_2873_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln311_fu_2883_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln311_fu_2888_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln312_fu_2897_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln313_fu_2907_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln312_fu_2920_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln174_6_fu_2917_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln313_fu_2930_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_18_fu_2956_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal offset_4_fu_2970_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln324_fu_2987_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln324_fu_3020_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln325_fu_3031_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln326_fu_3041_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln325_fu_3051_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln326_fu_3061_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln327_fu_3071_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln328_fu_3081_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln327_fu_3091_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln328_fu_3101_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln329_fu_3111_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln330_fu_3121_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln329_fu_3131_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln330_fu_3141_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln341_fu_3183_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln341_fu_3211_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln342_fu_3222_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln343_fu_3232_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln342_fu_3245_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln343_fu_3256_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln344_fu_3266_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln345_fu_3276_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln344_fu_3286_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln345_fu_3296_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln345_fu_3301_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln346_fu_3310_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln347_fu_3320_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_fu_3333_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln174_9_fu_3330_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln347_fu_3343_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_fu_3373_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_fu_3383_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln105_1_fu_3400_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln353_fu_3441_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln106_1_fu_3452_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln107_1_fu_3462_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln354_fu_3482_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln355_fu_3492_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln108_1_fu_3502_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln109_1_fu_3512_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln356_fu_3532_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln357_fu_3542_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln110_1_fu_3552_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln111_1_fu_3562_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln358_fu_3582_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln359_fu_3592_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln379_fu_3651_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln380_fu_3663_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln382_fu_3675_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln384_fu_3692_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln386_fu_3703_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln381_fu_3714_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln385_fu_3725_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln383_fu_3741_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal bitcast_ln398_fu_3752_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln398_fu_3756_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln398_2_fu_3767_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln398_1_fu_3771_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln398_8_fu_3782_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln398_4_fu_3786_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln398_10_fu_3798_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln398_5_fu_3802_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln398_4_fu_3814_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln398_2_fu_3818_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln398_6_fu_3829_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln398_3_fu_3833_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln398_12_fu_3844_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln398_6_fu_3848_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln398_14_fu_3859_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln398_7_fu_3863_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln405_cast_fu_3884_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal bitcast_ln398_16_fu_3938_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln398_8_fu_3942_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln398_18_fu_3953_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln398_9_fu_3957_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln376_1_fu_3935_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln406_fu_3984_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln407_fu_4011_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln404_fu_4030_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln408_fu_4049_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1602_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1602_ce : STD_LOGIC;
    signal grp_fu_1607_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1607_ce : STD_LOGIC;
    signal grp_fu_1612_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1612_ce : STD_LOGIC;
    signal grp_fu_1617_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1617_ce : STD_LOGIC;
    signal grp_fu_1622_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1622_ce : STD_LOGIC;
    signal grp_fu_1627_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1627_ce : STD_LOGIC;
    signal grp_fu_1650_ce : STD_LOGIC;
    signal grp_fu_1655_ce : STD_LOGIC;
    signal grp_fu_1662_ce : STD_LOGIC;
    signal grp_fu_1667_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (80 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_fsm_state69_blk : STD_LOGIC;
    signal ap_ST_fsm_state70_blk : STD_LOGIC;
    signal ap_ST_fsm_state71_blk : STD_LOGIC;
    signal ap_ST_fsm_state72_blk : STD_LOGIC;
    signal ap_ST_fsm_state73_blk : STD_LOGIC;
    signal ap_ST_fsm_state74_blk : STD_LOGIC;
    signal ap_ST_fsm_state75_blk : STD_LOGIC;
    signal ap_ST_fsm_state76_blk : STD_LOGIC;
    signal ap_ST_fsm_state77_blk : STD_LOGIC;
    signal ap_ST_fsm_state78_blk : STD_LOGIC;
    signal ap_ST_fsm_state79_blk : STD_LOGIC;
    signal ap_ST_fsm_state80_blk : STD_LOGIC;
    signal ap_ST_fsm_state81_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component fft1D_512_fft1D_512_Pipeline_loop1_twiddles IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_x_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        data_x_ce0 : OUT STD_LOGIC;
        data_x_we0 : OUT STD_LOGIC;
        data_x_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        data_x_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        data_x_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        data_x_ce1 : OUT STD_LOGIC;
        data_x_we1 : OUT STD_LOGIC;
        data_x_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        data_x_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        data_y_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        data_y_ce0 : OUT STD_LOGIC;
        data_y_we0 : OUT STD_LOGIC;
        data_y_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        data_y_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        data_y_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        data_y_ce1 : OUT STD_LOGIC;
        data_y_we1 : OUT STD_LOGIC;
        data_y_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        data_y_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        DATA_x_r_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        DATA_x_r_ce0 : OUT STD_LOGIC;
        DATA_x_r_we0 : OUT STD_LOGIC;
        DATA_x_r_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        DATA_x_r_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        DATA_x_r_ce1 : OUT STD_LOGIC;
        DATA_x_r_we1 : OUT STD_LOGIC;
        DATA_x_r_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        DATA_y_r_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        DATA_y_r_ce0 : OUT STD_LOGIC;
        DATA_y_r_we0 : OUT STD_LOGIC;
        DATA_y_r_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        DATA_y_r_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        DATA_y_r_ce1 : OUT STD_LOGIC;
        DATA_y_r_we1 : OUT STD_LOGIC;
        DATA_y_r_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        work_x_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        work_x_ce0 : OUT STD_LOGIC;
        work_x_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        work_x_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        work_x_ce1 : OUT STD_LOGIC;
        work_x_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        work_y_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        work_y_ce0 : OUT STD_LOGIC;
        work_y_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        work_y_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        work_y_ce1 : OUT STD_LOGIC;
        work_y_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        twiddles8_reversed8_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        twiddles8_reversed8_ce0 : OUT STD_LOGIC;
        twiddles8_reversed8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1602_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1602_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1602_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1602_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1602_p_ce : OUT STD_LOGIC;
        grp_fu_1607_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1607_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1607_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1607_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1607_p_ce : OUT STD_LOGIC;
        grp_fu_1612_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1612_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1612_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1612_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1612_p_ce : OUT STD_LOGIC;
        grp_fu_1617_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1617_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1617_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1617_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1617_p_ce : OUT STD_LOGIC;
        grp_fu_1622_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1622_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1622_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1622_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1622_p_ce : OUT STD_LOGIC;
        grp_fu_1627_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1627_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1627_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1627_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1627_p_ce : OUT STD_LOGIC;
        grp_fu_1650_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1650_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1650_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1650_p_ce : OUT STD_LOGIC;
        grp_fu_1655_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1655_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1655_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1655_p_ce : OUT STD_LOGIC;
        grp_fu_1662_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1662_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1662_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1662_p_ce : OUT STD_LOGIC;
        grp_fu_1667_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1667_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1667_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1667_p_ce : OUT STD_LOGIC;
        grp_sin_or_cos_double_s_fu_5138_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_sin_or_cos_double_s_fu_5138_p_din2 : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_sin_or_cos_double_s_fu_5138_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_sin_or_cos_double_s_fu_5138_p_ce : OUT STD_LOGIC;
        grp_sin_or_cos_double_s_fu_5138_p_start : OUT STD_LOGIC;
        grp_sin_or_cos_double_s_fu_5138_p_ready : IN STD_LOGIC;
        grp_sin_or_cos_double_s_fu_5138_p_done : IN STD_LOGIC;
        grp_sin_or_cos_double_s_fu_5138_p_idle : IN STD_LOGIC );
    end component;


    component fft1D_512_fft1D_512_Pipeline_loop6_twiddles IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_x_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        data_x_ce0 : OUT STD_LOGIC;
        data_x_we0 : OUT STD_LOGIC;
        data_x_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        data_x_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        data_x_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        data_x_ce1 : OUT STD_LOGIC;
        data_x_we1 : OUT STD_LOGIC;
        data_x_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        data_x_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        data_y_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        data_y_ce0 : OUT STD_LOGIC;
        data_y_we0 : OUT STD_LOGIC;
        data_y_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        data_y_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        data_y_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        data_y_ce1 : OUT STD_LOGIC;
        data_y_we1 : OUT STD_LOGIC;
        data_y_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        data_y_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        DATA_x_r_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        DATA_x_r_ce0 : OUT STD_LOGIC;
        DATA_x_r_we0 : OUT STD_LOGIC;
        DATA_x_r_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        DATA_x_r_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        DATA_x_r_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        DATA_x_r_ce1 : OUT STD_LOGIC;
        DATA_x_r_we1 : OUT STD_LOGIC;
        DATA_x_r_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        DATA_x_r_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        DATA_y_r_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        DATA_y_r_ce0 : OUT STD_LOGIC;
        DATA_y_r_we0 : OUT STD_LOGIC;
        DATA_y_r_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        DATA_y_r_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        DATA_y_r_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        DATA_y_r_ce1 : OUT STD_LOGIC;
        DATA_y_r_we1 : OUT STD_LOGIC;
        DATA_y_r_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        DATA_y_r_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        twiddles8_reversed8_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        twiddles8_reversed8_ce0 : OUT STD_LOGIC;
        twiddles8_reversed8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1602_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1602_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1602_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1602_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1602_p_ce : OUT STD_LOGIC;
        grp_fu_1607_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1607_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1607_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1607_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1607_p_ce : OUT STD_LOGIC;
        grp_fu_1612_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1612_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1612_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1612_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1612_p_ce : OUT STD_LOGIC;
        grp_fu_1617_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1617_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1617_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1617_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1617_p_ce : OUT STD_LOGIC;
        grp_fu_1622_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1622_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1622_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1622_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1622_p_ce : OUT STD_LOGIC;
        grp_fu_1627_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1627_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1627_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1627_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1627_p_ce : OUT STD_LOGIC;
        grp_fu_1650_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1650_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1650_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1650_p_ce : OUT STD_LOGIC;
        grp_fu_1655_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1655_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1655_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1655_p_ce : OUT STD_LOGIC;
        grp_fu_1662_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1662_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1662_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1662_p_ce : OUT STD_LOGIC;
        grp_fu_1667_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1667_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1667_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1667_p_ce : OUT STD_LOGIC;
        grp_sin_or_cos_double_s_fu_5138_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_sin_or_cos_double_s_fu_5138_p_din2 : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_sin_or_cos_double_s_fu_5138_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_sin_or_cos_double_s_fu_5138_p_ce : OUT STD_LOGIC;
        grp_sin_or_cos_double_s_fu_5138_p_start : OUT STD_LOGIC;
        grp_sin_or_cos_double_s_fu_5138_p_ready : IN STD_LOGIC;
        grp_sin_or_cos_double_s_fu_5138_p_done : IN STD_LOGIC;
        grp_sin_or_cos_double_s_fu_5138_p_idle : IN STD_LOGIC );
    end component;


    component fft1D_512_sin_or_cos_double_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        t_in : IN STD_LOGIC_VECTOR (63 downto 0);
        do_cos : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fft1D_512_dadddsub_64ns_64ns_64_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fft1D_512_dsub_64ns_64ns_64_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fft1D_512_dmul_64ns_64ns_64_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fft1D_512_twiddles8_reversed8_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fft1D_512_DATA_x_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fft1D_512_data_x_RAM_AUTO_1R1W_x IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fft1D_512_smem_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    twiddles8_reversed8_U : component fft1D_512_twiddles8_reversed8_ROM_AUTO_1R
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => twiddles8_reversed8_address0,
        ce0 => twiddles8_reversed8_ce0,
        q0 => twiddles8_reversed8_q0);

    DATA_x_U : component fft1D_512_DATA_x_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DATA_x_address0,
        ce0 => DATA_x_ce0,
        we0 => DATA_x_we0,
        d0 => DATA_x_d0,
        q0 => DATA_x_q0,
        address1 => DATA_x_address1,
        ce1 => DATA_x_ce1,
        we1 => DATA_x_we1,
        d1 => DATA_x_d1,
        q1 => DATA_x_q1);

    DATA_y_U : component fft1D_512_DATA_x_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DATA_y_address0,
        ce0 => DATA_y_ce0,
        we0 => DATA_y_we0,
        d0 => DATA_y_d0,
        q0 => DATA_y_q0,
        address1 => DATA_y_address1,
        ce1 => DATA_y_ce1,
        we1 => DATA_y_we1,
        d1 => DATA_y_d1,
        q1 => DATA_y_q1);

    data_x_U_x : component fft1D_512_data_x_RAM_AUTO_1R1W_x
    generic map (
        DataWidth => 64,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => data_x_address0,
        ce0 => data_x_ce0,
        we0 => data_x_we0,
        d0 => data_x_d0,
        q0 => data_x_q0,
        address1 => data_x_address1,
        ce1 => data_x_ce1,
        we1 => data_x_we1,
        d1 => data_x_d1,
        q1 => data_x_q1);

    data_y_U_x : component fft1D_512_data_x_RAM_AUTO_1R1W_x
    generic map (
        DataWidth => 64,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => data_y_address0,
        ce0 => data_y_ce0,
        we0 => data_y_we0,
        d0 => data_y_d0,
        q0 => data_y_q0,
        address1 => data_y_address1,
        ce1 => data_y_ce1,
        we1 => data_y_we1,
        d1 => data_y_d1,
        q1 => data_y_q1);

    smem_U : component fft1D_512_smem_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 576,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => smem_address0,
        ce0 => smem_ce0,
        we0 => smem_we0,
        d0 => smem_d0,
        q0 => smem_q0,
        address1 => smem_address1,
        ce1 => smem_ce1,
        we1 => smem_we1,
        d1 => smem_d1,
        q1 => smem_q1);

    grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550 : component fft1D_512_fft1D_512_Pipeline_loop1_twiddles
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_ap_start,
        ap_done => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_ap_done,
        ap_idle => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_ap_idle,
        ap_ready => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_ap_ready,
        data_x_address0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_address0,
        data_x_ce0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_ce0,
        data_x_we0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_we0,
        data_x_d0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_d0,
        data_x_q0 => data_x_q0,
        data_x_address1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_address1,
        data_x_ce1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_ce1,
        data_x_we1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_we1,
        data_x_d1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_d1,
        data_x_q1 => data_x_q1,
        data_y_address0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_address0,
        data_y_ce0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_ce0,
        data_y_we0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_we0,
        data_y_d0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_d0,
        data_y_q0 => data_y_q0,
        data_y_address1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_address1,
        data_y_ce1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_ce1,
        data_y_we1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_we1,
        data_y_d1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_d1,
        data_y_q1 => data_y_q1,
        DATA_x_r_address0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_address0,
        DATA_x_r_ce0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_ce0,
        DATA_x_r_we0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_we0,
        DATA_x_r_d0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_d0,
        DATA_x_r_address1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_address1,
        DATA_x_r_ce1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_ce1,
        DATA_x_r_we1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_we1,
        DATA_x_r_d1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_d1,
        DATA_y_r_address0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_address0,
        DATA_y_r_ce0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_ce0,
        DATA_y_r_we0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_we0,
        DATA_y_r_d0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_d0,
        DATA_y_r_address1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_address1,
        DATA_y_r_ce1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_ce1,
        DATA_y_r_we1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_we1,
        DATA_y_r_d1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_d1,
        work_x_address0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_x_address0,
        work_x_ce0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_x_ce0,
        work_x_q0 => work_x_q0,
        work_x_address1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_x_address1,
        work_x_ce1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_x_ce1,
        work_x_q1 => work_x_q1,
        work_y_address0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_y_address0,
        work_y_ce0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_y_ce0,
        work_y_q0 => work_y_q0,
        work_y_address1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_y_address1,
        work_y_ce1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_y_ce1,
        work_y_q1 => work_y_q1,
        twiddles8_reversed8_address0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_twiddles8_reversed8_address0,
        twiddles8_reversed8_ce0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_twiddles8_reversed8_ce0,
        twiddles8_reversed8_q0 => twiddles8_reversed8_q0,
        grp_fu_1602_p_din0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1602_p_din0,
        grp_fu_1602_p_din1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1602_p_din1,
        grp_fu_1602_p_opcode => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1602_p_opcode,
        grp_fu_1602_p_dout0 => grp_fu_1602_p2,
        grp_fu_1602_p_ce => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1602_p_ce,
        grp_fu_1607_p_din0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1607_p_din0,
        grp_fu_1607_p_din1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1607_p_din1,
        grp_fu_1607_p_opcode => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1607_p_opcode,
        grp_fu_1607_p_dout0 => grp_fu_1607_p2,
        grp_fu_1607_p_ce => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1607_p_ce,
        grp_fu_1612_p_din0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1612_p_din0,
        grp_fu_1612_p_din1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1612_p_din1,
        grp_fu_1612_p_opcode => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1612_p_opcode,
        grp_fu_1612_p_dout0 => grp_fu_1612_p2,
        grp_fu_1612_p_ce => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1612_p_ce,
        grp_fu_1617_p_din0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1617_p_din0,
        grp_fu_1617_p_din1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1617_p_din1,
        grp_fu_1617_p_opcode => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1617_p_opcode,
        grp_fu_1617_p_dout0 => grp_fu_1617_p2,
        grp_fu_1617_p_ce => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1617_p_ce,
        grp_fu_1622_p_din0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1622_p_din0,
        grp_fu_1622_p_din1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1622_p_din1,
        grp_fu_1622_p_opcode => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1622_p_opcode,
        grp_fu_1622_p_dout0 => grp_fu_1622_p2,
        grp_fu_1622_p_ce => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1622_p_ce,
        grp_fu_1627_p_din0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1627_p_din0,
        grp_fu_1627_p_din1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1627_p_din1,
        grp_fu_1627_p_opcode => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1627_p_opcode,
        grp_fu_1627_p_dout0 => grp_fu_1627_p2,
        grp_fu_1627_p_ce => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1627_p_ce,
        grp_fu_1650_p_din0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1650_p_din0,
        grp_fu_1650_p_din1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1650_p_din1,
        grp_fu_1650_p_dout0 => grp_fu_1650_p2,
        grp_fu_1650_p_ce => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1650_p_ce,
        grp_fu_1655_p_din0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1655_p_din0,
        grp_fu_1655_p_din1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1655_p_din1,
        grp_fu_1655_p_dout0 => grp_fu_1655_p2,
        grp_fu_1655_p_ce => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1655_p_ce,
        grp_fu_1662_p_din0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1662_p_din0,
        grp_fu_1662_p_din1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1662_p_din1,
        grp_fu_1662_p_dout0 => grp_fu_1662_p2,
        grp_fu_1662_p_ce => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1662_p_ce,
        grp_fu_1667_p_din0 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1667_p_din0,
        grp_fu_1667_p_din1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1667_p_din1,
        grp_fu_1667_p_dout0 => grp_fu_1667_p2,
        grp_fu_1667_p_ce => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1667_p_ce,
        grp_sin_or_cos_double_s_fu_5138_p_din1 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_sin_or_cos_double_s_fu_5138_p_din1,
        grp_sin_or_cos_double_s_fu_5138_p_din2 => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_sin_or_cos_double_s_fu_5138_p_din2,
        grp_sin_or_cos_double_s_fu_5138_p_dout0 => grp_sin_or_cos_double_s_fu_5138_ap_return,
        grp_sin_or_cos_double_s_fu_5138_p_ce => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_sin_or_cos_double_s_fu_5138_p_ce,
        grp_sin_or_cos_double_s_fu_5138_p_start => grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_sin_or_cos_double_s_fu_5138_p_start,
        grp_sin_or_cos_double_s_fu_5138_p_ready => grp_sin_or_cos_double_s_fu_5138_ap_ready,
        grp_sin_or_cos_double_s_fu_5138_p_done => grp_sin_or_cos_double_s_fu_5138_ap_done,
        grp_sin_or_cos_double_s_fu_5138_p_idle => grp_sin_or_cos_double_s_fu_5138_ap_idle);

    grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580 : component fft1D_512_fft1D_512_Pipeline_loop6_twiddles
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_ap_start,
        ap_done => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_ap_done,
        ap_idle => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_ap_idle,
        ap_ready => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_ap_ready,
        data_x_address0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_address0,
        data_x_ce0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_ce0,
        data_x_we0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_we0,
        data_x_d0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_d0,
        data_x_q0 => data_x_q0,
        data_x_address1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_address1,
        data_x_ce1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_ce1,
        data_x_we1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_we1,
        data_x_d1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_d1,
        data_x_q1 => data_x_q1,
        data_y_address0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_address0,
        data_y_ce0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_ce0,
        data_y_we0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_we0,
        data_y_d0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_d0,
        data_y_q0 => data_y_q0,
        data_y_address1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_address1,
        data_y_ce1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_ce1,
        data_y_we1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_we1,
        data_y_d1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_d1,
        data_y_q1 => data_y_q1,
        DATA_x_r_address0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_address0,
        DATA_x_r_ce0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_ce0,
        DATA_x_r_we0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_we0,
        DATA_x_r_d0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_d0,
        DATA_x_r_q0 => DATA_x_q0,
        DATA_x_r_address1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_address1,
        DATA_x_r_ce1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_ce1,
        DATA_x_r_we1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_we1,
        DATA_x_r_d1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_d1,
        DATA_x_r_q1 => DATA_x_q1,
        DATA_y_r_address0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_address0,
        DATA_y_r_ce0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_ce0,
        DATA_y_r_we0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_we0,
        DATA_y_r_d0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_d0,
        DATA_y_r_q0 => DATA_y_q0,
        DATA_y_r_address1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_address1,
        DATA_y_r_ce1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_ce1,
        DATA_y_r_we1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_we1,
        DATA_y_r_d1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_d1,
        DATA_y_r_q1 => DATA_y_q1,
        twiddles8_reversed8_address0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_twiddles8_reversed8_address0,
        twiddles8_reversed8_ce0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_twiddles8_reversed8_ce0,
        twiddles8_reversed8_q0 => twiddles8_reversed8_q0,
        grp_fu_1602_p_din0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1602_p_din0,
        grp_fu_1602_p_din1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1602_p_din1,
        grp_fu_1602_p_opcode => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1602_p_opcode,
        grp_fu_1602_p_dout0 => grp_fu_1602_p2,
        grp_fu_1602_p_ce => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1602_p_ce,
        grp_fu_1607_p_din0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1607_p_din0,
        grp_fu_1607_p_din1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1607_p_din1,
        grp_fu_1607_p_opcode => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1607_p_opcode,
        grp_fu_1607_p_dout0 => grp_fu_1607_p2,
        grp_fu_1607_p_ce => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1607_p_ce,
        grp_fu_1612_p_din0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1612_p_din0,
        grp_fu_1612_p_din1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1612_p_din1,
        grp_fu_1612_p_opcode => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1612_p_opcode,
        grp_fu_1612_p_dout0 => grp_fu_1612_p2,
        grp_fu_1612_p_ce => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1612_p_ce,
        grp_fu_1617_p_din0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1617_p_din0,
        grp_fu_1617_p_din1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1617_p_din1,
        grp_fu_1617_p_opcode => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1617_p_opcode,
        grp_fu_1617_p_dout0 => grp_fu_1617_p2,
        grp_fu_1617_p_ce => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1617_p_ce,
        grp_fu_1622_p_din0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1622_p_din0,
        grp_fu_1622_p_din1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1622_p_din1,
        grp_fu_1622_p_opcode => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1622_p_opcode,
        grp_fu_1622_p_dout0 => grp_fu_1622_p2,
        grp_fu_1622_p_ce => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1622_p_ce,
        grp_fu_1627_p_din0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1627_p_din0,
        grp_fu_1627_p_din1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1627_p_din1,
        grp_fu_1627_p_opcode => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1627_p_opcode,
        grp_fu_1627_p_dout0 => grp_fu_1627_p2,
        grp_fu_1627_p_ce => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1627_p_ce,
        grp_fu_1650_p_din0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1650_p_din0,
        grp_fu_1650_p_din1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1650_p_din1,
        grp_fu_1650_p_dout0 => grp_fu_1650_p2,
        grp_fu_1650_p_ce => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1650_p_ce,
        grp_fu_1655_p_din0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1655_p_din0,
        grp_fu_1655_p_din1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1655_p_din1,
        grp_fu_1655_p_dout0 => grp_fu_1655_p2,
        grp_fu_1655_p_ce => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1655_p_ce,
        grp_fu_1662_p_din0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1662_p_din0,
        grp_fu_1662_p_din1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1662_p_din1,
        grp_fu_1662_p_dout0 => grp_fu_1662_p2,
        grp_fu_1662_p_ce => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1662_p_ce,
        grp_fu_1667_p_din0 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1667_p_din0,
        grp_fu_1667_p_din1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1667_p_din1,
        grp_fu_1667_p_dout0 => grp_fu_1667_p2,
        grp_fu_1667_p_ce => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1667_p_ce,
        grp_sin_or_cos_double_s_fu_5138_p_din1 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_sin_or_cos_double_s_fu_5138_p_din1,
        grp_sin_or_cos_double_s_fu_5138_p_din2 => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_sin_or_cos_double_s_fu_5138_p_din2,
        grp_sin_or_cos_double_s_fu_5138_p_dout0 => grp_sin_or_cos_double_s_fu_5138_ap_return,
        grp_sin_or_cos_double_s_fu_5138_p_ce => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_sin_or_cos_double_s_fu_5138_p_ce,
        grp_sin_or_cos_double_s_fu_5138_p_start => grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_sin_or_cos_double_s_fu_5138_p_start,
        grp_sin_or_cos_double_s_fu_5138_p_ready => grp_sin_or_cos_double_s_fu_5138_ap_ready,
        grp_sin_or_cos_double_s_fu_5138_p_done => grp_sin_or_cos_double_s_fu_5138_ap_done,
        grp_sin_or_cos_double_s_fu_5138_p_idle => grp_sin_or_cos_double_s_fu_5138_ap_idle);

    grp_sin_or_cos_double_s_fu_5138 : component fft1D_512_sin_or_cos_double_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_or_cos_double_s_fu_5138_ap_start,
        ap_done => grp_sin_or_cos_double_s_fu_5138_ap_done,
        ap_idle => grp_sin_or_cos_double_s_fu_5138_ap_idle,
        ap_ready => grp_sin_or_cos_double_s_fu_5138_ap_ready,
        ap_ce => grp_sin_or_cos_double_s_fu_5138_ap_ce,
        t_in => grp_sin_or_cos_double_s_fu_5138_t_in,
        do_cos => grp_sin_or_cos_double_s_fu_5138_do_cos,
        ap_return => grp_sin_or_cos_double_s_fu_5138_ap_return);

    dadddsub_64ns_64ns_64_4_full_dsp_1_U66 : component fft1D_512_dadddsub_64ns_64ns_64_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1602_p0,
        din1 => grp_fu_1602_p1,
        opcode => grp_fu_1602_opcode,
        ce => grp_fu_1602_ce,
        dout => grp_fu_1602_p2);

    dadddsub_64ns_64ns_64_4_full_dsp_1_U67 : component fft1D_512_dadddsub_64ns_64ns_64_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1607_p0,
        din1 => grp_fu_1607_p1,
        opcode => grp_fu_1607_opcode,
        ce => grp_fu_1607_ce,
        dout => grp_fu_1607_p2);

    dadddsub_64ns_64ns_64_4_full_dsp_1_U68 : component fft1D_512_dadddsub_64ns_64ns_64_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1612_p0,
        din1 => grp_fu_1612_p1,
        opcode => grp_fu_1612_opcode,
        ce => grp_fu_1612_ce,
        dout => grp_fu_1612_p2);

    dadddsub_64ns_64ns_64_4_full_dsp_1_U69 : component fft1D_512_dadddsub_64ns_64ns_64_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1617_p0,
        din1 => grp_fu_1617_p1,
        opcode => grp_fu_1617_opcode,
        ce => grp_fu_1617_ce,
        dout => grp_fu_1617_p2);

    dadddsub_64ns_64ns_64_4_full_dsp_1_U70 : component fft1D_512_dadddsub_64ns_64ns_64_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1622_p0,
        din1 => grp_fu_1622_p1,
        opcode => grp_fu_1622_opcode,
        ce => grp_fu_1622_ce,
        dout => grp_fu_1622_p2);

    dadddsub_64ns_64ns_64_4_full_dsp_1_U71 : component fft1D_512_dadddsub_64ns_64ns_64_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1627_p0,
        din1 => grp_fu_1627_p1,
        opcode => grp_fu_1627_opcode,
        ce => grp_fu_1627_ce,
        dout => grp_fu_1627_p2);

    dsub_64ns_64ns_64_4_full_dsp_1_U72 : component fft1D_512_dsub_64ns_64ns_64_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1632_p0,
        din1 => grp_fu_1632_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1632_p2);

    dsub_64ns_64ns_64_4_full_dsp_1_U73 : component fft1D_512_dsub_64ns_64ns_64_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1637_p0,
        din1 => grp_fu_1637_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1637_p2);

    dmul_64ns_64ns_64_4_max_dsp_1_U74 : component fft1D_512_dmul_64ns_64ns_64_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1650_p0,
        din1 => grp_fu_1650_p1,
        ce => grp_fu_1650_ce,
        dout => grp_fu_1650_p2);

    dmul_64ns_64ns_64_4_max_dsp_1_U75 : component fft1D_512_dmul_64ns_64ns_64_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1655_p0,
        din1 => grp_fu_1655_p1,
        ce => grp_fu_1655_ce,
        dout => grp_fu_1655_p2);

    dmul_64ns_64ns_64_4_max_dsp_1_U76 : component fft1D_512_dmul_64ns_64ns_64_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1662_p0,
        din1 => grp_fu_1662_p1,
        ce => grp_fu_1662_ce,
        dout => grp_fu_1662_p2);

    dmul_64ns_64ns_64_4_max_dsp_1_U77 : component fft1D_512_dmul_64ns_64ns_64_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1667_p0,
        din1 => grp_fu_1667_p1,
        ce => grp_fu_1667_ce,
        dout => grp_fu_1667_p2);

    dmul_64ns_64ns_64_4_max_dsp_1_U78 : component fft1D_512_dmul_64ns_64ns_64_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_1737,
        din1 => ap_const_lv64_0,
        ce => ap_const_logic_1,
        dout => grp_fu_1672_p2);

    dmul_64ns_64ns_64_4_max_dsp_1_U79 : component fft1D_512_dmul_64ns_64ns_64_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_1742,
        din1 => ap_const_lv64_0,
        ce => ap_const_logic_1,
        dout => grp_fu_1677_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_ap_ready = ap_const_logic_1)) then 
                    grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                    grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_ap_ready = ap_const_logic_1)) then 
                    grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    tid_10_fu_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state43) and (icmp_ln350_fu_3357_p2 = ap_const_lv1_1))) then 
                tid_10_fu_292 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state51) and (icmp_ln376_fu_3639_p2 = ap_const_lv1_0))) then 
                tid_10_fu_292 <= add_ln376_fu_3645_p2;
            end if; 
        end if;
    end process;

    tid_1_fu_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln176_fu_1807_p2 = ap_const_lv1_1))) then 
                tid_1_fu_200 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln191_fu_2010_p2 = ap_const_lv1_0))) then 
                tid_1_fu_200 <= add_ln191_fu_2016_p2;
            end if; 
        end if;
    end process;

    tid_3_fu_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln191_fu_2010_p2 = ap_const_lv1_1))) then 
                tid_3_fu_204 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln208_fu_2238_p2 = ap_const_lv1_0))) then 
                tid_3_fu_204 <= add_ln208_fu_2244_p2;
            end if; 
        end if;
    end process;

    tid_4_fu_240_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln208_fu_2238_p2 = ap_const_lv1_1))) then 
                tid_4_fu_240 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state18) and (icmp_ln224_fu_2441_p2 = ap_const_lv1_0))) then 
                tid_4_fu_240 <= add_ln224_fu_2447_p2;
            end if; 
        end if;
    end process;

    tid_6_fu_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (icmp_ln224_fu_2441_p2 = ap_const_lv1_1))) then 
                tid_6_fu_244 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state28) and (icmp_ln301_fu_2741_p2 = ap_const_lv1_0))) then 
                tid_6_fu_244 <= add_ln301_fu_2747_p2;
            end if; 
        end if;
    end process;

    tid_7_fu_248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state28) and (icmp_ln301_fu_2741_p2 = ap_const_lv1_1))) then 
                tid_7_fu_248 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln317_fu_2944_p2 = ap_const_lv1_0))) then 
                tid_7_fu_248 <= add_ln317_fu_2950_p2;
            end if; 
        end if;
    end process;

    tid_8_fu_252_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln317_fu_2944_p2 = ap_const_lv1_1))) then 
                tid_8_fu_252 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state38) and (icmp_ln334_fu_3154_p2 = ap_const_lv1_0))) then 
                tid_8_fu_252 <= add_ln334_fu_3160_p2;
            end if; 
        end if;
    end process;

    tid_9_fu_288_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state38) and (icmp_ln334_fu_3154_p2 = ap_const_lv1_1))) then 
                tid_9_fu_288 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state43) and (icmp_ln350_fu_3357_p2 = ap_const_lv1_0))) then 
                tid_9_fu_288 <= add_ln350_fu_3363_p2;
            end if; 
        end if;
    end process;

    tid_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                tid_fu_176 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln176_fu_1807_p2 = ap_const_lv1_0))) then 
                tid_fu_176 <= add_ln176_fu_1813_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                add_ln238_reg_4406 <= add_ln238_fu_2491_p2;
                trunc_ln226_reg_4401 <= trunc_ln226_fu_2453_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                c0_x_17_reg_4895 <= DATA_x_q1;
                c0_x_19_reg_4901 <= DATA_x_q0;
                c0_y_17_reg_4873 <= DATA_y_q1;
                c0_y_19_reg_4879 <= DATA_y_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state58)) then
                c0_x_20_reg_5051 <= grp_fu_1602_p2;
                c0_y_20_reg_5057 <= grp_fu_1607_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state64)) then
                c0_x_3_reg_5073 <= grp_fu_1650_p2;
                c0_y_3_reg_5079 <= grp_fu_1655_p2;
                mul10_reg_5102 <= grp_fu_1677_p2;
                mul7_reg_5085 <= grp_fu_1662_p2;
                mul8_reg_5091 <= grp_fu_1667_p2;
                mul9_reg_5097 <= grp_fu_1672_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                offset_1_reg_4198 <= offset_1_fu_2056_p2;
                trunc_ln197_reg_4213 <= trunc_ln197_fu_2067_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                offset_2_reg_4273 <= offset_2_fu_2250_p1;
                    shl_ln3_reg_4281(8 downto 3) <= shl_ln3_fu_2254_p3(8 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                offset_3_reg_4476 <= offset_3_fu_2753_p1;
                    shl_ln6_reg_4484(8 downto 3) <= shl_ln6_fu_2757_p3(8 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                offset_5_reg_4631 <= offset_5_fu_3166_p1;
                    shl_ln8_reg_4639(8 downto 3) <= shl_ln8_fu_3170_p3(8 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                offset_reg_4118 <= offset_fu_1819_p1;
                    shl_ln1_reg_4126(8 downto 3) <= shl_ln1_fu_1823_p3(8 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then
                p_phi18_fu_280 <= smem_q0;
                p_phi_fu_284 <= smem_q1;
                    shl_ln9_reg_4791(8 downto 3) <= shl_ln9_fu_3429_p3(8 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then
                p_phi19_fu_276 <= smem_q1;
                p_phi20_fu_272 <= smem_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state46)) then
                p_phi21_fu_268 <= smem_q1;
                p_phi22_fu_264 <= smem_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state47)) then
                p_phi23_fu_260 <= smem_q1;
                p_phi24_fu_256 <= smem_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                p_phi31_fu_236 <= smem_q1;
                p_phi32_fu_232 <= smem_q0;
                    shl_ln4_reg_4433(8 downto 3) <= shl_ln4_fu_2531_p3(8 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                p_phi33_fu_228 <= smem_q1;
                p_phi34_fu_224 <= smem_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                p_phi35_fu_220 <= smem_q1;
                p_phi36_fu_216 <= smem_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                p_phi37_fu_212 <= smem_q1;
                p_phi38_fu_208 <= smem_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state56))) then
                reg_1682 <= grp_fu_1602_p2;
                reg_1693 <= grp_fu_1607_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state56))) then
                reg_1704 <= grp_fu_1612_p2;
                reg_1712 <= grp_fu_1617_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state56))) then
                reg_1719 <= grp_fu_1622_p2;
                reg_1728 <= grp_fu_1627_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state56))) then
                reg_1737 <= grp_fu_1632_p2;
                reg_1742 <= grp_fu_1637_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state68))) then
                reg_1747 <= grp_fu_1602_p2;
                reg_1755 <= grp_fu_1607_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state57))) then
                reg_1763 <= grp_fu_1612_p2;
                reg_1770 <= grp_fu_1617_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state69))) then
                reg_1777 <= grp_fu_1612_p2;
                reg_1783 <= grp_fu_1617_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state72))) then
                reg_1789 <= grp_fu_1650_p2;
                reg_1794 <= grp_fu_1655_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                    shl_ln2_reg_4230(8 downto 3) <= shl_ln2_fu_2092_p3(8 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                    shl_ln7_reg_4588(8 downto 3) <= shl_ln7_fu_3008_p3(8 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then
                    shl_ln_reg_4843(8 downto 3) <= shl_ln_fu_3655_p3(8 downto 3);
                tid_17_reg_4831 <= tid_10_fu_292;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                trunc_ln321_reg_4556 <= trunc_ln321_fu_2966_p1;
                    zext_ln321_reg_4561(8 downto 0) <= zext_ln321_fu_2978_p1(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then
                trunc_ln352_reg_4759 <= trunc_ln352_fu_3369_p1;
                    zext_ln364_reg_4764(8 downto 0) <= zext_ln364_fu_3391_p1(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state73)) then
                xor_ln402_reg_5132 <= xor_ln402_fu_3968_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then
                    zext_ln174_10_reg_4730(5 downto 0) <= zext_ln174_10_fu_3242_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then
                    zext_ln174_11_reg_4714(5 downto 0) <= zext_ln174_11_fu_3204_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                    zext_ln174_1_reg_4169(5 downto 0) <= zext_ln174_1_fu_1895_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    zext_ln174_2_reg_4153(5 downto 0) <= zext_ln174_2_fu_1857_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                    zext_ln174_4_reg_4372(5 downto 0) <= zext_ln174_4_fu_2326_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                    zext_ln174_5_reg_4356(5 downto 0) <= zext_ln174_5_fu_2288_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                    zext_ln174_7_reg_4527(5 downto 0) <= zext_ln174_7_fu_2829_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                    zext_ln174_8_reg_4511(5 downto 0) <= zext_ln174_8_fu_2791_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state72)) then
                    zext_ln403_cast_reg_5117(6 downto 0) <= zext_ln403_cast_fu_3912_p3(6 downto 0);
            end if;
        end if;
    end process;
    shl_ln1_reg_4126(2 downto 0) <= "000";
    zext_ln174_2_reg_4153(8 downto 6) <= "000";
    zext_ln174_1_reg_4169(7 downto 6) <= "00";
    shl_ln2_reg_4230(2 downto 0) <= "000";
    shl_ln3_reg_4281(2 downto 0) <= "000";
    zext_ln174_5_reg_4356(8 downto 6) <= "000";
    zext_ln174_4_reg_4372(7 downto 6) <= "00";
    shl_ln4_reg_4433(2 downto 0) <= "000";
    shl_ln6_reg_4484(2 downto 0) <= "000";
    zext_ln174_8_reg_4511(8 downto 6) <= "000";
    zext_ln174_7_reg_4527(7 downto 6) <= "00";
    zext_ln321_reg_4561(9) <= '0';
    shl_ln7_reg_4588(2 downto 0) <= "000";
    shl_ln8_reg_4639(2 downto 0) <= "000";
    zext_ln174_11_reg_4714(8 downto 6) <= "000";
    zext_ln174_10_reg_4730(7 downto 6) <= "00";
    zext_ln364_reg_4764(9) <= '0';
    shl_ln9_reg_4791(2 downto 0) <= "000";
    shl_ln_reg_4843(2 downto 0) <= "000";
    zext_ln403_cast_reg_5117(7) <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state8, ap_CS_fsm_state13, ap_CS_fsm_state18, ap_CS_fsm_state28, ap_CS_fsm_state33, ap_CS_fsm_state38, ap_CS_fsm_state43, ap_CS_fsm_state51, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_ap_done, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_ap_done, ap_CS_fsm_state27, icmp_ln176_fu_1807_p2, icmp_ln191_fu_2010_p2, icmp_ln208_fu_2238_p2, icmp_ln224_fu_2441_p2, icmp_ln301_fu_2741_p2, icmp_ln317_fu_2944_p2, icmp_ln334_fu_3154_p2, icmp_ln350_fu_3357_p2, icmp_ln376_fu_3639_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln176_fu_1807_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln191_fu_2010_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln208_fu_2238_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state18 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state18) and (icmp_ln224_fu_2441_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state28) and (icmp_ln301_fu_2741_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state33 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln317_fu_2944_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state38 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state38) and (icmp_ln334_fu_3154_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state43 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state43) and (icmp_ln350_fu_3357_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state48;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state51) and (icmp_ln376_fu_3639_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    DATA_x_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_address0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_address0, ap_CS_fsm_state27, zext_ln182_1_fu_1842_p1, zext_ln184_1_fu_1890_p1, zext_ln186_fu_1934_p1, zext_ln188_1_fu_1978_p1, zext_ln198_1_fu_2110_p1, zext_ln200_1_fu_2150_p1, zext_ln202_1_fu_2190_p1, ap_CS_fsm_state12, zext_ln204_1_fu_2230_p1, zext_ln307_1_fu_2776_p1, zext_ln309_1_fu_2824_p1, zext_ln311_fu_2868_p1, zext_ln313_1_fu_2912_p1, zext_ln324_1_fu_3026_p1, zext_ln326_1_fu_3066_p1, zext_ln328_1_fu_3106_p1, ap_CS_fsm_state37, zext_ln330_1_fu_3146_p1, zext_ln382_fu_3681_p1, zext_ln386_fu_3708_p1, zext_ln385_fu_3730_p1, zext_ln383_fu_3746_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            DATA_x_address0 <= zext_ln383_fu_3746_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            DATA_x_address0 <= zext_ln385_fu_3730_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            DATA_x_address0 <= zext_ln386_fu_3708_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            DATA_x_address0 <= zext_ln382_fu_3681_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            DATA_x_address0 <= zext_ln330_1_fu_3146_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            DATA_x_address0 <= zext_ln328_1_fu_3106_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            DATA_x_address0 <= zext_ln326_1_fu_3066_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            DATA_x_address0 <= zext_ln324_1_fu_3026_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            DATA_x_address0 <= zext_ln313_1_fu_2912_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            DATA_x_address0 <= zext_ln311_fu_2868_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            DATA_x_address0 <= zext_ln309_1_fu_2824_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            DATA_x_address0 <= zext_ln307_1_fu_2776_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            DATA_x_address0 <= zext_ln204_1_fu_2230_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            DATA_x_address0 <= zext_ln202_1_fu_2190_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            DATA_x_address0 <= zext_ln200_1_fu_2150_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            DATA_x_address0 <= zext_ln198_1_fu_2110_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            DATA_x_address0 <= zext_ln188_1_fu_1978_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            DATA_x_address0 <= zext_ln186_fu_1934_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            DATA_x_address0 <= zext_ln184_1_fu_1890_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            DATA_x_address0 <= zext_ln182_1_fu_1842_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            DATA_x_address0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            DATA_x_address0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_address0;
        else 
            DATA_x_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    DATA_x_address1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_address1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_address1, ap_CS_fsm_state27, zext_ln181_1_fu_1831_p1, zext_ln183_1_fu_1880_p1, zext_ln185_1_fu_1924_p1, zext_ln187_1_fu_1968_p1, zext_ln197_1_fu_2099_p1, zext_ln199_1_fu_2140_p1, zext_ln201_1_fu_2180_p1, zext_ln203_1_fu_2220_p1, ap_CS_fsm_state12, zext_ln306_1_fu_2765_p1, zext_ln308_1_fu_2814_p1, zext_ln310_1_fu_2858_p1, zext_ln312_1_fu_2902_p1, zext_ln323_1_fu_3015_p1, zext_ln325_1_fu_3056_p1, zext_ln327_1_fu_3096_p1, zext_ln329_1_fu_3136_p1, ap_CS_fsm_state37, zext_ln380_fu_3669_p1, zext_ln384_fu_3697_p1, zext_ln381_fu_3719_p1, zext_ln379_fu_3736_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            DATA_x_address1 <= zext_ln379_fu_3736_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            DATA_x_address1 <= zext_ln381_fu_3719_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            DATA_x_address1 <= zext_ln384_fu_3697_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            DATA_x_address1 <= zext_ln380_fu_3669_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            DATA_x_address1 <= zext_ln329_1_fu_3136_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            DATA_x_address1 <= zext_ln327_1_fu_3096_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            DATA_x_address1 <= zext_ln325_1_fu_3056_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            DATA_x_address1 <= zext_ln323_1_fu_3015_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            DATA_x_address1 <= zext_ln312_1_fu_2902_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            DATA_x_address1 <= zext_ln310_1_fu_2858_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            DATA_x_address1 <= zext_ln308_1_fu_2814_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            DATA_x_address1 <= zext_ln306_1_fu_2765_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            DATA_x_address1 <= zext_ln203_1_fu_2220_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            DATA_x_address1 <= zext_ln201_1_fu_2180_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            DATA_x_address1 <= zext_ln199_1_fu_2140_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            DATA_x_address1 <= zext_ln197_1_fu_2099_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            DATA_x_address1 <= zext_ln187_1_fu_1968_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            DATA_x_address1 <= zext_ln185_1_fu_1924_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            DATA_x_address1 <= zext_ln183_1_fu_1880_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            DATA_x_address1 <= zext_ln181_1_fu_1831_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            DATA_x_address1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            DATA_x_address1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_address1;
        else 
            DATA_x_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    DATA_x_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_ce0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_ce0, ap_CS_fsm_state27, ap_CS_fsm_state12, ap_CS_fsm_state37)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            DATA_x_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            DATA_x_ce0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            DATA_x_ce0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_ce0;
        else 
            DATA_x_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    DATA_x_ce1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_ce1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_ce1, ap_CS_fsm_state27, ap_CS_fsm_state12, ap_CS_fsm_state37)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            DATA_x_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            DATA_x_ce1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            DATA_x_ce1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_ce1;
        else 
            DATA_x_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    DATA_x_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, smem_q0, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_d0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_d0, ap_CS_fsm_state27, ap_CS_fsm_state12, ap_CS_fsm_state37)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            DATA_x_d0 <= smem_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            DATA_x_d0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            DATA_x_d0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_d0;
        else 
            DATA_x_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    DATA_x_d1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, smem_q1, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_d1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_d1, ap_CS_fsm_state27, ap_CS_fsm_state12, ap_CS_fsm_state37)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            DATA_x_d1 <= smem_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            DATA_x_d1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            DATA_x_d1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_d1;
        else 
            DATA_x_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    DATA_x_we0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_we0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_we0, ap_CS_fsm_state27, ap_CS_fsm_state12, ap_CS_fsm_state37)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            DATA_x_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            DATA_x_we0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            DATA_x_we0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_we0;
        else 
            DATA_x_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DATA_x_we1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_we1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_we1, ap_CS_fsm_state27, ap_CS_fsm_state12, ap_CS_fsm_state37)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            DATA_x_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            DATA_x_we1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_x_r_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            DATA_x_we1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_x_r_we1;
        else 
            DATA_x_we1 <= ap_const_logic_0;
        end if; 
    end process;


    DATA_y_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_address0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_address0, ap_CS_fsm_state27, zext_ln215_1_fu_2273_p1, zext_ln217_1_fu_2321_p1, zext_ln219_fu_2365_p1, zext_ln221_1_fu_2409_p1, zext_ln227_fu_2549_p1, zext_ln229_fu_2599_p1, zext_ln231_fu_2649_p1, ap_CS_fsm_state22, zext_ln233_fu_2699_p1, zext_ln341_1_fu_3189_p1, zext_ln343_1_fu_3237_p1, zext_ln345_fu_3281_p1, zext_ln347_1_fu_3325_p1, zext_ln353_fu_3447_p1, zext_ln355_fu_3497_p1, zext_ln357_fu_3547_p1, ap_CS_fsm_state47, zext_ln359_fu_3597_p1, zext_ln382_fu_3681_p1, zext_ln386_fu_3708_p1, zext_ln385_fu_3730_p1, zext_ln383_fu_3746_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            DATA_y_address0 <= zext_ln383_fu_3746_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            DATA_y_address0 <= zext_ln385_fu_3730_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            DATA_y_address0 <= zext_ln386_fu_3708_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            DATA_y_address0 <= zext_ln382_fu_3681_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            DATA_y_address0 <= zext_ln359_fu_3597_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            DATA_y_address0 <= zext_ln357_fu_3547_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            DATA_y_address0 <= zext_ln355_fu_3497_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            DATA_y_address0 <= zext_ln353_fu_3447_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            DATA_y_address0 <= zext_ln347_1_fu_3325_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            DATA_y_address0 <= zext_ln345_fu_3281_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            DATA_y_address0 <= zext_ln343_1_fu_3237_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            DATA_y_address0 <= zext_ln341_1_fu_3189_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            DATA_y_address0 <= zext_ln233_fu_2699_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            DATA_y_address0 <= zext_ln231_fu_2649_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            DATA_y_address0 <= zext_ln229_fu_2599_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            DATA_y_address0 <= zext_ln227_fu_2549_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            DATA_y_address0 <= zext_ln221_1_fu_2409_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            DATA_y_address0 <= zext_ln219_fu_2365_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            DATA_y_address0 <= zext_ln217_1_fu_2321_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            DATA_y_address0 <= zext_ln215_1_fu_2273_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            DATA_y_address0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            DATA_y_address0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_address0;
        else 
            DATA_y_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    DATA_y_address1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_address1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_address1, ap_CS_fsm_state27, zext_ln214_1_fu_2262_p1, zext_ln216_1_fu_2311_p1, zext_ln218_1_fu_2355_p1, zext_ln220_1_fu_2399_p1, zext_ln226_fu_2538_p1, zext_ln228_fu_2589_p1, zext_ln230_fu_2639_p1, zext_ln232_fu_2689_p1, ap_CS_fsm_state22, zext_ln340_1_fu_3178_p1, zext_ln342_1_fu_3227_p1, zext_ln344_1_fu_3271_p1, zext_ln346_1_fu_3315_p1, zext_ln352_fu_3436_p1, zext_ln354_fu_3487_p1, zext_ln356_fu_3537_p1, zext_ln358_fu_3587_p1, ap_CS_fsm_state47, zext_ln380_fu_3669_p1, zext_ln384_fu_3697_p1, zext_ln381_fu_3719_p1, zext_ln379_fu_3736_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            DATA_y_address1 <= zext_ln379_fu_3736_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            DATA_y_address1 <= zext_ln381_fu_3719_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            DATA_y_address1 <= zext_ln384_fu_3697_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            DATA_y_address1 <= zext_ln380_fu_3669_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            DATA_y_address1 <= zext_ln358_fu_3587_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            DATA_y_address1 <= zext_ln356_fu_3537_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            DATA_y_address1 <= zext_ln354_fu_3487_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            DATA_y_address1 <= zext_ln352_fu_3436_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            DATA_y_address1 <= zext_ln346_1_fu_3315_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            DATA_y_address1 <= zext_ln344_1_fu_3271_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            DATA_y_address1 <= zext_ln342_1_fu_3227_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            DATA_y_address1 <= zext_ln340_1_fu_3178_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            DATA_y_address1 <= zext_ln232_fu_2689_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            DATA_y_address1 <= zext_ln230_fu_2639_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            DATA_y_address1 <= zext_ln228_fu_2589_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            DATA_y_address1 <= zext_ln226_fu_2538_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            DATA_y_address1 <= zext_ln220_1_fu_2399_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            DATA_y_address1 <= zext_ln218_1_fu_2355_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            DATA_y_address1 <= zext_ln216_1_fu_2311_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            DATA_y_address1 <= zext_ln214_1_fu_2262_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            DATA_y_address1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            DATA_y_address1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_address1;
        else 
            DATA_y_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    DATA_y_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_ce0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_ce0, ap_CS_fsm_state27, ap_CS_fsm_state22, ap_CS_fsm_state47)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            DATA_y_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            DATA_y_ce0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            DATA_y_ce0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_ce0;
        else 
            DATA_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    DATA_y_ce1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_ce1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_ce1, ap_CS_fsm_state27, ap_CS_fsm_state22, ap_CS_fsm_state47)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            DATA_y_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            DATA_y_ce1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            DATA_y_ce1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_ce1;
        else 
            DATA_y_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    DATA_y_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, smem_q0, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_d0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_d0, ap_CS_fsm_state27, ap_CS_fsm_state22, ap_CS_fsm_state47)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            DATA_y_d0 <= smem_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            DATA_y_d0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            DATA_y_d0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_d0;
        else 
            DATA_y_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    DATA_y_d1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, smem_q1, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_d1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_d1, ap_CS_fsm_state27, ap_CS_fsm_state22, ap_CS_fsm_state47)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            DATA_y_d1 <= smem_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            DATA_y_d1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            DATA_y_d1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_d1;
        else 
            DATA_y_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    DATA_y_we0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_we0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_we0, ap_CS_fsm_state27, ap_CS_fsm_state22, ap_CS_fsm_state47)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            DATA_y_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            DATA_y_we0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            DATA_y_we0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_we0;
        else 
            DATA_y_we0 <= ap_const_logic_0;
        end if; 
    end process;


    DATA_y_we1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_we1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_we1, ap_CS_fsm_state27, ap_CS_fsm_state22, ap_CS_fsm_state47)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            DATA_y_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            DATA_y_we1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_DATA_y_r_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            DATA_y_we1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_DATA_y_r_we1;
        else 
            DATA_y_we1 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln105_1_fu_3400_p2 <= std_logic_vector(unsigned(zext_ln364_fu_3391_p1) + unsigned(ap_const_lv10_8));
    add_ln105_fu_2502_p2 <= std_logic_vector(unsigned(add_ln238_fu_2491_p2) + unsigned(ap_const_lv10_8));
    add_ln106_1_fu_3452_p2 <= std_logic_vector(unsigned(zext_ln364_reg_4764) + unsigned(ap_const_lv10_10));
    add_ln106_fu_2554_p2 <= std_logic_vector(unsigned(add_ln238_reg_4406) + unsigned(ap_const_lv10_10));
    add_ln107_1_fu_3462_p2 <= std_logic_vector(unsigned(zext_ln364_reg_4764) + unsigned(ap_const_lv10_18));
    add_ln107_fu_2564_p2 <= std_logic_vector(unsigned(add_ln238_reg_4406) + unsigned(ap_const_lv10_18));
    add_ln108_1_fu_3502_p2 <= std_logic_vector(unsigned(zext_ln364_reg_4764) + unsigned(ap_const_lv10_20));
    add_ln108_fu_2604_p2 <= std_logic_vector(unsigned(add_ln238_reg_4406) + unsigned(ap_const_lv10_20));
    add_ln109_1_fu_3512_p2 <= std_logic_vector(unsigned(zext_ln364_reg_4764) + unsigned(ap_const_lv10_28));
    add_ln109_fu_2614_p2 <= std_logic_vector(unsigned(add_ln238_reg_4406) + unsigned(ap_const_lv10_28));
    add_ln110_1_fu_3552_p2 <= std_logic_vector(unsigned(zext_ln364_reg_4764) + unsigned(ap_const_lv10_30));
    add_ln110_fu_2654_p2 <= std_logic_vector(unsigned(add_ln238_reg_4406) + unsigned(ap_const_lv10_30));
    add_ln111_1_fu_3562_p2 <= std_logic_vector(unsigned(zext_ln364_reg_4764) + unsigned(ap_const_lv10_38));
    add_ln111_fu_2664_p2 <= std_logic_vector(unsigned(add_ln238_reg_4406) + unsigned(ap_const_lv10_38));
    add_ln176_fu_1813_p2 <= std_logic_vector(unsigned(tid_fu_176) + unsigned(ap_const_lv7_1));
    add_ln182_fu_1864_p2 <= std_logic_vector(unsigned(zext_ln174_2_fu_1857_p1) + unsigned(ap_const_lv9_108));
    add_ln183_fu_1898_p2 <= std_logic_vector(unsigned(zext_ln174_1_fu_1895_p1) + unsigned(ap_const_lv8_42));
    add_ln184_fu_1909_p2 <= std_logic_vector(unsigned(zext_ln174_2_reg_4153) + unsigned(ap_const_lv9_14A));
    add_ln185_fu_1939_p2 <= std_logic_vector(unsigned(zext_ln174_1_reg_4169) + unsigned(ap_const_lv8_84));
    add_ln186_fu_1949_p2 <= std_logic_vector(unsigned(zext_ln174_1_reg_4169) + unsigned(ap_const_lv8_8C));
    add_ln187_fu_1986_p2 <= std_logic_vector(unsigned(zext_ln174_2_reg_4153) + unsigned(ap_const_lv9_C6));
    add_ln188_fu_1996_p2 <= std_logic_vector(unsigned(zext_ln174_fu_1983_p1) + unsigned(ap_const_lv10_1CE));
    add_ln191_fu_2016_p2 <= std_logic_vector(unsigned(tid_1_fu_200) + unsigned(ap_const_lv7_1));
    add_ln198_fu_2071_p2 <= std_logic_vector(unsigned(offset_1_fu_2056_p2) + unsigned(ap_const_lv10_20));
    add_ln199_fu_2115_p2 <= std_logic_vector(unsigned(offset_1_reg_4198) + unsigned(ap_const_lv10_8));
    add_ln200_fu_2125_p2 <= std_logic_vector(unsigned(offset_1_reg_4198) + unsigned(ap_const_lv10_28));
    add_ln201_fu_2155_p2 <= std_logic_vector(unsigned(offset_1_reg_4198) + unsigned(ap_const_lv10_10));
    add_ln202_fu_2165_p2 <= std_logic_vector(unsigned(offset_1_reg_4198) + unsigned(ap_const_lv10_30));
    add_ln203_fu_2195_p2 <= std_logic_vector(unsigned(offset_1_reg_4198) + unsigned(ap_const_lv10_18));
    add_ln204_fu_2205_p2 <= std_logic_vector(unsigned(offset_1_reg_4198) + unsigned(ap_const_lv10_38));
    add_ln208_fu_2244_p2 <= std_logic_vector(unsigned(tid_3_fu_204) + unsigned(ap_const_lv7_1));
    add_ln215_fu_2295_p2 <= std_logic_vector(unsigned(zext_ln174_5_fu_2288_p1) + unsigned(ap_const_lv9_108));
    add_ln216_fu_2329_p2 <= std_logic_vector(unsigned(zext_ln174_4_fu_2326_p1) + unsigned(ap_const_lv8_42));
    add_ln217_fu_2340_p2 <= std_logic_vector(unsigned(zext_ln174_5_reg_4356) + unsigned(ap_const_lv9_14A));
    add_ln218_fu_2370_p2 <= std_logic_vector(unsigned(zext_ln174_4_reg_4372) + unsigned(ap_const_lv8_84));
    add_ln219_fu_2380_p2 <= std_logic_vector(unsigned(zext_ln174_4_reg_4372) + unsigned(ap_const_lv8_8C));
    add_ln220_fu_2417_p2 <= std_logic_vector(unsigned(zext_ln174_5_reg_4356) + unsigned(ap_const_lv9_C6));
    add_ln221_fu_2427_p2 <= std_logic_vector(unsigned(zext_ln174_3_fu_2414_p1) + unsigned(ap_const_lv10_1CE));
    add_ln224_fu_2447_p2 <= std_logic_vector(unsigned(tid_4_fu_240) + unsigned(ap_const_lv7_1));
    add_ln238_fu_2491_p2 <= std_logic_vector(unsigned(zext_ln238_fu_2487_p1) + unsigned(zext_ln115_1_fu_2471_p1));
    add_ln301_fu_2747_p2 <= std_logic_vector(unsigned(tid_6_fu_244) + unsigned(ap_const_lv7_1));
    add_ln307_fu_2798_p2 <= std_logic_vector(unsigned(zext_ln174_8_fu_2791_p1) + unsigned(ap_const_lv9_120));
    add_ln308_fu_2832_p2 <= std_logic_vector(unsigned(zext_ln174_7_fu_2829_p1) + unsigned(ap_const_lv8_48));
    add_ln309_fu_2843_p2 <= std_logic_vector(unsigned(zext_ln174_8_reg_4511) + unsigned(ap_const_lv9_168));
    add_ln310_fu_2873_p2 <= std_logic_vector(unsigned(zext_ln174_7_reg_4527) + unsigned(ap_const_lv8_90));
    add_ln311_fu_2883_p2 <= std_logic_vector(unsigned(zext_ln174_7_reg_4527) + unsigned(ap_const_lv8_B0));
    add_ln312_fu_2920_p2 <= std_logic_vector(unsigned(zext_ln174_8_reg_4511) + unsigned(ap_const_lv9_D8));
    add_ln313_fu_2930_p2 <= std_logic_vector(unsigned(zext_ln174_6_fu_2917_p1) + unsigned(ap_const_lv10_1F8));
    add_ln317_fu_2950_p2 <= std_logic_vector(unsigned(tid_7_fu_248) + unsigned(ap_const_lv7_1));
    add_ln324_fu_2987_p2 <= std_logic_vector(unsigned(zext_ln321_fu_2978_p1) + unsigned(ap_const_lv10_20));
    add_ln325_fu_3031_p2 <= std_logic_vector(unsigned(zext_ln321_reg_4561) + unsigned(ap_const_lv10_8));
    add_ln326_fu_3041_p2 <= std_logic_vector(unsigned(zext_ln321_reg_4561) + unsigned(ap_const_lv10_28));
    add_ln327_fu_3071_p2 <= std_logic_vector(unsigned(zext_ln321_reg_4561) + unsigned(ap_const_lv10_10));
    add_ln328_fu_3081_p2 <= std_logic_vector(unsigned(zext_ln321_reg_4561) + unsigned(ap_const_lv10_30));
    add_ln329_fu_3111_p2 <= std_logic_vector(unsigned(zext_ln321_reg_4561) + unsigned(ap_const_lv10_18));
    add_ln330_fu_3121_p2 <= std_logic_vector(unsigned(zext_ln321_reg_4561) + unsigned(ap_const_lv10_38));
    add_ln334_fu_3160_p2 <= std_logic_vector(unsigned(tid_8_fu_252) + unsigned(ap_const_lv7_1));
    add_ln341_fu_3211_p2 <= std_logic_vector(unsigned(zext_ln174_11_fu_3204_p1) + unsigned(ap_const_lv9_120));
    add_ln342_fu_3245_p2 <= std_logic_vector(unsigned(zext_ln174_10_fu_3242_p1) + unsigned(ap_const_lv8_48));
    add_ln343_fu_3256_p2 <= std_logic_vector(unsigned(zext_ln174_11_reg_4714) + unsigned(ap_const_lv9_168));
    add_ln344_fu_3286_p2 <= std_logic_vector(unsigned(zext_ln174_10_reg_4730) + unsigned(ap_const_lv8_90));
    add_ln345_fu_3296_p2 <= std_logic_vector(unsigned(zext_ln174_10_reg_4730) + unsigned(ap_const_lv8_B0));
    add_ln346_fu_3333_p2 <= std_logic_vector(unsigned(zext_ln174_11_reg_4714) + unsigned(ap_const_lv9_D8));
    add_ln347_fu_3343_p2 <= std_logic_vector(unsigned(zext_ln174_9_fu_3330_p1) + unsigned(ap_const_lv10_1F8));
    add_ln350_fu_3363_p2 <= std_logic_vector(unsigned(tid_9_fu_288) + unsigned(ap_const_lv7_1));
    add_ln376_fu_3645_p2 <= std_logic_vector(unsigned(tid_10_fu_292) + unsigned(ap_const_lv7_1));
    add_ln406_fu_3984_p2 <= std_logic_vector(unsigned(zext_ln376_1_fu_3935_p1) + unsigned(ap_const_lv9_140));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state81 <= ap_CS_fsm(80);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;

    ap_ST_fsm_state27_blk_assign_proc : process(grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_ap_done)
    begin
        if ((grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state27_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state27_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_ap_done)
    begin
        if ((grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_fsm_state59_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state60_blk <= ap_const_logic_0;
    ap_ST_fsm_state61_blk <= ap_const_logic_0;
    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;
    ap_ST_fsm_state64_blk <= ap_const_logic_0;
    ap_ST_fsm_state65_blk <= ap_const_logic_0;
    ap_ST_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_fsm_state67_blk <= ap_const_logic_0;
    ap_ST_fsm_state68_blk <= ap_const_logic_0;
    ap_ST_fsm_state69_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state70_blk <= ap_const_logic_0;
    ap_ST_fsm_state71_blk <= ap_const_logic_0;
    ap_ST_fsm_state72_blk <= ap_const_logic_0;
    ap_ST_fsm_state73_blk <= ap_const_logic_0;
    ap_ST_fsm_state74_blk <= ap_const_logic_0;
    ap_ST_fsm_state75_blk <= ap_const_logic_0;
    ap_ST_fsm_state76_blk <= ap_const_logic_0;
    ap_ST_fsm_state77_blk <= ap_const_logic_0;
    ap_ST_fsm_state78_blk <= ap_const_logic_0;
    ap_ST_fsm_state79_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state80_blk <= ap_const_logic_0;
    ap_ST_fsm_state81_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state51, icmp_ln376_fu_3639_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state51) and (icmp_ln376_fu_3639_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state51, icmp_ln376_fu_3639_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state51) and (icmp_ln376_fu_3639_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln398_10_fu_3798_p1 <= reg_1742;
    bitcast_ln398_11_fu_3808_p1 <= xor_ln398_5_fu_3802_p2;
    bitcast_ln398_12_fu_3844_p1 <= reg_1742;
    bitcast_ln398_13_fu_3854_p1 <= xor_ln398_6_fu_3848_p2;
    bitcast_ln398_14_fu_3859_p1 <= reg_1737;
    bitcast_ln398_15_fu_3869_p1 <= xor_ln398_7_fu_3863_p2;
    bitcast_ln398_16_fu_3938_p1 <= reg_1728;
    bitcast_ln398_17_fu_3948_p1 <= xor_ln398_8_fu_3942_p2;
    bitcast_ln398_18_fu_3953_p1 <= reg_1719;
    bitcast_ln398_19_fu_3963_p1 <= xor_ln398_9_fu_3957_p2;
    bitcast_ln398_1_fu_3762_p1 <= xor_ln398_fu_3756_p2;
    bitcast_ln398_2_fu_3767_p1 <= reg_1704;
    bitcast_ln398_3_fu_3777_p1 <= xor_ln398_1_fu_3771_p2;
    bitcast_ln398_4_fu_3814_p1 <= reg_1770;
    bitcast_ln398_5_fu_3824_p1 <= xor_ln398_2_fu_3818_p2;
    bitcast_ln398_6_fu_3829_p1 <= reg_1763;
    bitcast_ln398_7_fu_3839_p1 <= xor_ln398_3_fu_3833_p2;
    bitcast_ln398_8_fu_3782_p1 <= reg_1737;
    bitcast_ln398_9_fu_3792_p1 <= xor_ln398_4_fu_3786_p2;
    bitcast_ln398_fu_3752_p1 <= reg_1712;
    bitcast_ln401_fu_3879_p1 <= grp_fu_1602_p2;
    bitcast_ln402_fu_3979_p1 <= grp_fu_1602_p2;
    bitcast_ln403_fu_3925_p1 <= grp_fu_1602_p2;
    bitcast_ln404_fu_4039_p1 <= grp_fu_1602_p2;
    bitcast_ln405_fu_3897_p1 <= grp_fu_1612_p2;
    bitcast_ln406_fu_3996_p1 <= grp_fu_1612_p2;
    bitcast_ln407_fu_4020_p1 <= reg_1763;
    bitcast_ln408_fu_4058_p1 <= reg_1704;
    bitcast_ln410_fu_3902_p1 <= grp_fu_1607_p2;
    bitcast_ln411_fu_4001_p1 <= grp_fu_1607_p2;
    bitcast_ln412_fu_3930_p1 <= grp_fu_1607_p2;
    bitcast_ln413_fu_4044_p1 <= grp_fu_1607_p2;
    bitcast_ln414_fu_3907_p1 <= grp_fu_1617_p2;
    bitcast_ln415_fu_4006_p1 <= grp_fu_1617_p2;
    bitcast_ln416_fu_4025_p1 <= reg_1770;
    bitcast_ln417_fu_4063_p1 <= reg_1712;

    data_x_address0_assign_proc : process(ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_address0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_address0, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            data_x_address0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_x_address0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_address0;
        else 
            data_x_address0 <= "XXX";
        end if; 
    end process;


    data_x_address1_assign_proc : process(ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_address1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_address1, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            data_x_address1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_x_address1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_address1;
        else 
            data_x_address1 <= "XXX";
        end if; 
    end process;


    data_x_ce0_assign_proc : process(ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_ce0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_ce0, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            data_x_ce0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_x_ce0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_ce0;
        else 
            data_x_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    data_x_ce1_assign_proc : process(ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_ce1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_ce1, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            data_x_ce1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_x_ce1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_ce1;
        else 
            data_x_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    data_x_d0_assign_proc : process(ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_d0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_d0, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            data_x_d0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_x_d0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_d0;
        else 
            data_x_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_x_d1_assign_proc : process(ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_d1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_d1, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            data_x_d1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_x_d1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_d1;
        else 
            data_x_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_x_we0_assign_proc : process(ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_we0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_we0, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            data_x_we0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_x_we0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_we0;
        else 
            data_x_we0 <= ap_const_logic_0;
        end if; 
    end process;


    data_x_we1_assign_proc : process(ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_we1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_we1, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            data_x_we1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_x_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_x_we1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_x_we1;
        else 
            data_x_we1 <= ap_const_logic_0;
        end if; 
    end process;


    data_y_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state18, ap_CS_fsm_state43, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_address0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_address0, ap_CS_fsm_state27, ap_CS_fsm_state25, ap_CS_fsm_state24, ap_CS_fsm_state23, ap_CS_fsm_state50, ap_CS_fsm_state49, ap_CS_fsm_state48)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            data_y_address0 <= ap_const_lv64_7(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            data_y_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            data_y_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            data_y_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            data_y_address0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_y_address0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_address0;
        else 
            data_y_address0 <= "XXX";
        end if; 
    end process;


    data_y_address1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state18, ap_CS_fsm_state43, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_address1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_address1, ap_CS_fsm_state27, ap_CS_fsm_state25, ap_CS_fsm_state24, ap_CS_fsm_state23, ap_CS_fsm_state50, ap_CS_fsm_state49, ap_CS_fsm_state48)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            data_y_address1 <= ap_const_lv64_6(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            data_y_address1 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            data_y_address1 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            data_y_address1 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            data_y_address1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_y_address1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_address1;
        else 
            data_y_address1 <= "XXX";
        end if; 
    end process;


    data_y_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state18, ap_CS_fsm_state43, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_ce0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_ce0, ap_CS_fsm_state27, ap_CS_fsm_state25, ap_CS_fsm_state24, ap_CS_fsm_state23, ap_CS_fsm_state50, ap_CS_fsm_state49, ap_CS_fsm_state48)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            data_y_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            data_y_ce0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_y_ce0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_ce0;
        else 
            data_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    data_y_ce1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state18, ap_CS_fsm_state43, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_ce1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_ce1, ap_CS_fsm_state27, ap_CS_fsm_state25, ap_CS_fsm_state24, ap_CS_fsm_state23, ap_CS_fsm_state50, ap_CS_fsm_state49, ap_CS_fsm_state48)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            data_y_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            data_y_ce1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_y_ce1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_ce1;
        else 
            data_y_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    data_y_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state18, ap_CS_fsm_state43, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_d0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_d0, ap_CS_fsm_state27, p_phi38_fu_208, ap_CS_fsm_state25, p_phi36_fu_216, ap_CS_fsm_state24, p_phi34_fu_224, ap_CS_fsm_state23, p_phi32_fu_232, p_phi24_fu_256, ap_CS_fsm_state50, p_phi22_fu_264, ap_CS_fsm_state49, p_phi20_fu_272, ap_CS_fsm_state48, p_phi18_fu_280)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            data_y_d0 <= p_phi24_fu_256;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            data_y_d0 <= p_phi22_fu_264;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            data_y_d0 <= p_phi20_fu_272;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            data_y_d0 <= p_phi18_fu_280;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            data_y_d0 <= p_phi38_fu_208;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            data_y_d0 <= p_phi36_fu_216;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            data_y_d0 <= p_phi34_fu_224;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            data_y_d0 <= p_phi32_fu_232;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            data_y_d0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_y_d0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_d0;
        else 
            data_y_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_y_d1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state18, ap_CS_fsm_state43, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_d1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_d1, ap_CS_fsm_state27, ap_CS_fsm_state25, p_phi37_fu_212, ap_CS_fsm_state24, p_phi35_fu_220, ap_CS_fsm_state23, p_phi33_fu_228, p_phi31_fu_236, ap_CS_fsm_state50, p_phi23_fu_260, ap_CS_fsm_state49, p_phi21_fu_268, ap_CS_fsm_state48, p_phi19_fu_276, p_phi_fu_284)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            data_y_d1 <= p_phi23_fu_260;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            data_y_d1 <= p_phi21_fu_268;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            data_y_d1 <= p_phi19_fu_276;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            data_y_d1 <= p_phi_fu_284;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            data_y_d1 <= p_phi37_fu_212;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            data_y_d1 <= p_phi35_fu_220;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            data_y_d1 <= p_phi33_fu_228;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            data_y_d1 <= p_phi31_fu_236;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            data_y_d1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_y_d1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_d1;
        else 
            data_y_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_y_we0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state18, ap_CS_fsm_state43, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_we0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_we0, ap_CS_fsm_state27, icmp_ln224_fu_2441_p2, icmp_ln350_fu_3357_p2, ap_CS_fsm_state25, ap_CS_fsm_state24, ap_CS_fsm_state23, ap_CS_fsm_state50, ap_CS_fsm_state49, ap_CS_fsm_state48)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_logic_1 = ap_CS_fsm_state43) and (icmp_ln350_fu_3357_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state18) and (icmp_ln224_fu_2441_p2 = ap_const_lv1_1)))) then 
            data_y_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            data_y_we0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_y_we0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_we0;
        else 
            data_y_we0 <= ap_const_logic_0;
        end if; 
    end process;


    data_y_we1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state18, ap_CS_fsm_state43, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_we1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_we1, ap_CS_fsm_state27, icmp_ln224_fu_2441_p2, icmp_ln350_fu_3357_p2, ap_CS_fsm_state25, ap_CS_fsm_state24, ap_CS_fsm_state23, ap_CS_fsm_state50, ap_CS_fsm_state49, ap_CS_fsm_state48)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_logic_1 = ap_CS_fsm_state43) and (icmp_ln350_fu_3357_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state18) and (icmp_ln224_fu_2441_p2 = ap_const_lv1_1)))) then 
            data_y_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            data_y_we1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_data_y_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_y_we1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_data_y_we1;
        else 
            data_y_we1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_ap_start <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_ap_start_reg;
    grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_ap_start <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_ap_start_reg;

    grp_fu_1602_ce_assign_proc : process(ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1602_p_ce, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1602_p_ce, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1602_ce <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1602_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1602_ce <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1602_p_ce;
        else 
            grp_fu_1602_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1602_opcode_assign_proc : process(ap_CS_fsm_state65, ap_CS_fsm_state69, ap_CS_fsm_state57, ap_CS_fsm_state62, ap_CS_fsm_state2, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state73, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1602_p_opcode, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1602_p_opcode, ap_CS_fsm_state27, ap_CS_fsm_state66, ap_CS_fsm_state59, ap_CS_fsm_state63, ap_CS_fsm_state70, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1602_opcode <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1602_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1602_opcode <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1602_p_opcode;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state65))) then 
            grp_fu_1602_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            grp_fu_1602_opcode <= ap_const_lv2_0;
        else 
            grp_fu_1602_opcode <= "XX";
        end if; 
    end process;


    grp_fu_1602_p0_assign_proc : process(reg_1682, ap_CS_fsm_state65, ap_CS_fsm_state69, reg_1704, reg_1747, ap_CS_fsm_state57, ap_CS_fsm_state62, reg_1763, reg_1777, reg_1789, ap_CS_fsm_state2, DATA_x_q1, c0_x_17_reg_4895, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, c0_x_20_reg_5051, mul9_reg_5097, ap_CS_fsm_state73, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1602_p_din0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1602_p_din0, ap_CS_fsm_state27, ap_CS_fsm_state66, ap_CS_fsm_state59, ap_CS_fsm_state63, ap_CS_fsm_state70, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1602_p0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1602_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1602_p0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1602_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            grp_fu_1602_p0 <= reg_1682;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            grp_fu_1602_p0 <= reg_1763;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            grp_fu_1602_p0 <= reg_1777;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            grp_fu_1602_p0 <= mul9_reg_5097;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            grp_fu_1602_p0 <= reg_1747;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state62))) then 
            grp_fu_1602_p0 <= reg_1789;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            grp_fu_1602_p0 <= c0_x_20_reg_5051;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            grp_fu_1602_p0 <= reg_1704;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            grp_fu_1602_p0 <= DATA_x_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_fu_1602_p0 <= c0_x_17_reg_4895;
        else 
            grp_fu_1602_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1602_p1_assign_proc : process(reg_1682, ap_CS_fsm_state65, ap_CS_fsm_state69, reg_1704, reg_1719, reg_1747, ap_CS_fsm_state57, ap_CS_fsm_state62, ap_CS_fsm_state2, DATA_x_q1, DATA_x_q0, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, bitcast_ln398_1_fu_3762_p1, bitcast_ln398_5_fu_3824_p1, bitcast_ln398_13_fu_3854_p1, bitcast_ln398_17_fu_3948_p1, ap_CS_fsm_state73, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1602_p_din1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1602_p_din1, ap_CS_fsm_state27, ap_CS_fsm_state66, ap_CS_fsm_state59, ap_CS_fsm_state63, ap_CS_fsm_state70, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1602_p1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1602_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1602_p1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1602_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            grp_fu_1602_p1 <= bitcast_ln398_17_fu_3948_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            grp_fu_1602_p1 <= reg_1704;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            grp_fu_1602_p1 <= reg_1682;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            grp_fu_1602_p1 <= bitcast_ln398_13_fu_3854_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            grp_fu_1602_p1 <= reg_1719;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            grp_fu_1602_p1 <= bitcast_ln398_5_fu_3824_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state69))) then 
            grp_fu_1602_p1 <= reg_1747;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            grp_fu_1602_p1 <= bitcast_ln398_1_fu_3762_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            grp_fu_1602_p1 <= DATA_x_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_fu_1602_p1 <= DATA_x_q1;
        else 
            grp_fu_1602_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1607_ce_assign_proc : process(ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1607_p_ce, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1607_p_ce, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1607_ce <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1607_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1607_ce <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1607_p_ce;
        else 
            grp_fu_1607_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1607_opcode_assign_proc : process(ap_CS_fsm_state65, ap_CS_fsm_state69, ap_CS_fsm_state57, ap_CS_fsm_state62, ap_CS_fsm_state2, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state73, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1607_p_opcode, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1607_p_opcode, ap_CS_fsm_state27, ap_CS_fsm_state66, ap_CS_fsm_state59, ap_CS_fsm_state63, ap_CS_fsm_state70, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1607_opcode <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1607_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1607_opcode <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1607_p_opcode;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state65))) then 
            grp_fu_1607_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            grp_fu_1607_opcode <= ap_const_lv2_0;
        else 
            grp_fu_1607_opcode <= "XX";
        end if; 
    end process;


    grp_fu_1607_p0_assign_proc : process(ap_CS_fsm_state65, ap_CS_fsm_state69, reg_1693, ap_CS_fsm_state57, ap_CS_fsm_state62, reg_1755, reg_1770, reg_1783, ap_CS_fsm_state2, DATA_y_q1, c0_y_17_reg_4873, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, bitcast_ln398_3_fu_3777_p1, c0_y_20_reg_5057, bitcast_ln398_7_fu_3839_p1, bitcast_ln398_15_fu_3869_p1, ap_CS_fsm_state73, bitcast_ln398_19_fu_3963_p1, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1607_p_din0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1607_p_din0, ap_CS_fsm_state27, ap_CS_fsm_state66, ap_CS_fsm_state59, ap_CS_fsm_state63, ap_CS_fsm_state70, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1607_p0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1607_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1607_p0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1607_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            grp_fu_1607_p0 <= bitcast_ln398_19_fu_3963_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            grp_fu_1607_p0 <= reg_1693;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            grp_fu_1607_p0 <= reg_1770;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            grp_fu_1607_p0 <= reg_1783;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            grp_fu_1607_p0 <= bitcast_ln398_15_fu_3869_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            grp_fu_1607_p0 <= reg_1755;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            grp_fu_1607_p0 <= bitcast_ln398_7_fu_3839_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            grp_fu_1607_p0 <= c0_y_20_reg_5057;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            grp_fu_1607_p0 <= bitcast_ln398_3_fu_3777_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            grp_fu_1607_p0 <= DATA_y_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_fu_1607_p0 <= c0_y_17_reg_4873;
        else 
            grp_fu_1607_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1607_p1_assign_proc : process(ap_CS_fsm_state65, ap_CS_fsm_state69, reg_1693, reg_1712, reg_1728, ap_CS_fsm_state57, ap_CS_fsm_state62, reg_1755, reg_1794, ap_CS_fsm_state2, DATA_y_q1, DATA_y_q0, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, mul10_reg_5102, ap_CS_fsm_state73, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1607_p_din1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1607_p_din1, ap_CS_fsm_state27, ap_CS_fsm_state66, ap_CS_fsm_state59, ap_CS_fsm_state63, ap_CS_fsm_state70, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1607_p1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1607_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1607_p1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1607_p_din1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            grp_fu_1607_p1 <= reg_1693;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            grp_fu_1607_p1 <= mul10_reg_5102;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            grp_fu_1607_p1 <= reg_1728;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state62))) then 
            grp_fu_1607_p1 <= reg_1794;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state69))) then 
            grp_fu_1607_p1 <= reg_1755;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state70))) then 
            grp_fu_1607_p1 <= reg_1712;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            grp_fu_1607_p1 <= DATA_y_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_fu_1607_p1 <= DATA_y_q1;
        else 
            grp_fu_1607_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1612_ce_assign_proc : process(ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1612_p_ce, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1612_p_ce, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1612_ce <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1612_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1612_ce <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1612_p_ce;
        else 
            grp_fu_1612_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1612_opcode_assign_proc : process(ap_CS_fsm_state65, ap_CS_fsm_state69, ap_CS_fsm_state57, ap_CS_fsm_state2, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1612_p_opcode, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1612_p_opcode, ap_CS_fsm_state27, ap_CS_fsm_state66, ap_CS_fsm_state59, ap_CS_fsm_state63, ap_CS_fsm_state70, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1612_opcode <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1612_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1612_opcode <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1612_p_opcode;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            grp_fu_1612_opcode <= ap_const_lv2_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            grp_fu_1612_opcode <= ap_const_lv2_0;
        else 
            grp_fu_1612_opcode <= "XX";
        end if; 
    end process;


    grp_fu_1612_p0_assign_proc : process(reg_1682, ap_CS_fsm_state65, ap_CS_fsm_state69, reg_1747, ap_CS_fsm_state57, reg_1763, reg_1777, ap_CS_fsm_state2, DATA_x_q1, c0_x_17_reg_4895, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, bitcast_ln398_9_fu_3792_p1, c0_x_20_reg_5051, c0_x_3_reg_5073, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1612_p_din0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1612_p_din0, ap_CS_fsm_state27, ap_CS_fsm_state66, ap_CS_fsm_state59, ap_CS_fsm_state63, ap_CS_fsm_state70, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1612_p0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1612_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1612_p0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1612_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            grp_fu_1612_p0 <= reg_1682;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            grp_fu_1612_p0 <= reg_1763;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            grp_fu_1612_p0 <= reg_1777;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            grp_fu_1612_p0 <= c0_x_3_reg_5073;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            grp_fu_1612_p0 <= reg_1747;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            grp_fu_1612_p0 <= c0_x_20_reg_5051;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            grp_fu_1612_p0 <= bitcast_ln398_9_fu_3792_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            grp_fu_1612_p0 <= DATA_x_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_fu_1612_p0 <= c0_x_17_reg_4895;
        else 
            grp_fu_1612_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1612_p1_assign_proc : process(reg_1682, ap_CS_fsm_state65, ap_CS_fsm_state69, reg_1704, reg_1719, reg_1747, ap_CS_fsm_state57, ap_CS_fsm_state2, DATA_x_q1, DATA_x_q0, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, bitcast_ln398_11_fu_3808_p1, mul7_reg_5085, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1612_p_din1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1612_p_din1, ap_CS_fsm_state27, ap_CS_fsm_state66, ap_CS_fsm_state59, ap_CS_fsm_state63, ap_CS_fsm_state70, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1612_p1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1612_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1612_p1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1612_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            grp_fu_1612_p1 <= reg_1704;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            grp_fu_1612_p1 <= reg_1682;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            grp_fu_1612_p1 <= mul7_reg_5085;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            grp_fu_1612_p1 <= reg_1719;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state69))) then 
            grp_fu_1612_p1 <= reg_1747;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            grp_fu_1612_p1 <= bitcast_ln398_11_fu_3808_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            grp_fu_1612_p1 <= DATA_x_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_fu_1612_p1 <= DATA_x_q1;
        else 
            grp_fu_1612_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1617_ce_assign_proc : process(ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1617_p_ce, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1617_p_ce, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1617_ce <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1617_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1617_ce <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1617_p_ce;
        else 
            grp_fu_1617_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1617_opcode_assign_proc : process(ap_CS_fsm_state65, ap_CS_fsm_state69, ap_CS_fsm_state57, ap_CS_fsm_state2, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1617_p_opcode, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1617_p_opcode, ap_CS_fsm_state27, ap_CS_fsm_state66, ap_CS_fsm_state59, ap_CS_fsm_state63, ap_CS_fsm_state70, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1617_opcode <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1617_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1617_opcode <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1617_p_opcode;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            grp_fu_1617_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state65))) then 
            grp_fu_1617_opcode <= ap_const_lv2_0;
        else 
            grp_fu_1617_opcode <= "XX";
        end if; 
    end process;


    grp_fu_1617_p0_assign_proc : process(ap_CS_fsm_state65, ap_CS_fsm_state69, reg_1693, ap_CS_fsm_state57, reg_1755, reg_1770, reg_1783, ap_CS_fsm_state2, DATA_y_q1, c0_y_17_reg_4873, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, bitcast_ln398_9_fu_3792_p1, c0_y_20_reg_5057, c0_y_3_reg_5079, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1617_p_din0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1617_p_din0, ap_CS_fsm_state27, ap_CS_fsm_state66, ap_CS_fsm_state59, ap_CS_fsm_state63, ap_CS_fsm_state70, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1617_p0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1617_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1617_p0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1617_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            grp_fu_1617_p0 <= reg_1693;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            grp_fu_1617_p0 <= reg_1770;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            grp_fu_1617_p0 <= reg_1783;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            grp_fu_1617_p0 <= c0_y_3_reg_5079;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            grp_fu_1617_p0 <= reg_1755;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            grp_fu_1617_p0 <= c0_y_20_reg_5057;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            grp_fu_1617_p0 <= bitcast_ln398_9_fu_3792_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            grp_fu_1617_p0 <= DATA_y_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_fu_1617_p0 <= c0_y_17_reg_4873;
        else 
            grp_fu_1617_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1617_p1_assign_proc : process(ap_CS_fsm_state65, ap_CS_fsm_state69, reg_1693, reg_1712, reg_1728, ap_CS_fsm_state57, reg_1755, ap_CS_fsm_state2, DATA_y_q1, DATA_y_q0, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, bitcast_ln398_11_fu_3808_p1, mul8_reg_5091, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1617_p_din1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1617_p_din1, ap_CS_fsm_state27, ap_CS_fsm_state66, ap_CS_fsm_state59, ap_CS_fsm_state63, ap_CS_fsm_state70, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1617_p1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1617_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1617_p1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1617_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            grp_fu_1617_p1 <= reg_1712;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            grp_fu_1617_p1 <= reg_1693;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            grp_fu_1617_p1 <= mul8_reg_5091;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            grp_fu_1617_p1 <= reg_1728;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state69))) then 
            grp_fu_1617_p1 <= reg_1755;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            grp_fu_1617_p1 <= bitcast_ln398_11_fu_3808_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            grp_fu_1617_p1 <= DATA_y_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_fu_1617_p1 <= DATA_y_q1;
        else 
            grp_fu_1617_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1622_ce_assign_proc : process(ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1622_p_ce, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1622_p_ce, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1622_ce <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1622_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1622_ce <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1622_p_ce;
        else 
            grp_fu_1622_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1622_opcode_assign_proc : process(ap_CS_fsm_state65, ap_CS_fsm_state57, ap_CS_fsm_state2, ap_CS_fsm_state53, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1622_p_opcode, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1622_p_opcode, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1622_opcode <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1622_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1622_opcode <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1622_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            grp_fu_1622_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            grp_fu_1622_opcode <= ap_const_lv2_0;
        else 
            grp_fu_1622_opcode <= "XX";
        end if; 
    end process;


    grp_fu_1622_p0_assign_proc : process(reg_1682, ap_CS_fsm_state65, ap_CS_fsm_state57, ap_CS_fsm_state2, c0_x_19_reg_4901, ap_CS_fsm_state53, c0_x_3_reg_5073, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1622_p_din0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1622_p_din0, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1622_p0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1622_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1622_p0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1622_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            grp_fu_1622_p0 <= c0_x_3_reg_5073;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            grp_fu_1622_p0 <= reg_1682;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_fu_1622_p0 <= c0_x_19_reg_4901;
        else 
            grp_fu_1622_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1622_p1_assign_proc : process(ap_CS_fsm_state65, reg_1719, ap_CS_fsm_state57, ap_CS_fsm_state2, DATA_x_q0, ap_CS_fsm_state53, mul7_reg_5085, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1622_p_din1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1622_p_din1, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1622_p1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1622_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1622_p1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1622_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            grp_fu_1622_p1 <= mul7_reg_5085;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            grp_fu_1622_p1 <= reg_1719;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_fu_1622_p1 <= DATA_x_q0;
        else 
            grp_fu_1622_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1627_ce_assign_proc : process(ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1627_p_ce, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1627_p_ce, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1627_ce <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1627_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1627_ce <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1627_p_ce;
        else 
            grp_fu_1627_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1627_opcode_assign_proc : process(ap_CS_fsm_state65, ap_CS_fsm_state57, ap_CS_fsm_state2, ap_CS_fsm_state53, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1627_p_opcode, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1627_p_opcode, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1627_opcode <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1627_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1627_opcode <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1627_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            grp_fu_1627_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            grp_fu_1627_opcode <= ap_const_lv2_0;
        else 
            grp_fu_1627_opcode <= "XX";
        end if; 
    end process;


    grp_fu_1627_p0_assign_proc : process(ap_CS_fsm_state65, reg_1693, ap_CS_fsm_state57, ap_CS_fsm_state2, c0_y_19_reg_4879, ap_CS_fsm_state53, c0_y_3_reg_5079, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1627_p_din0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1627_p_din0, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1627_p0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1627_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1627_p0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1627_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            grp_fu_1627_p0 <= c0_y_3_reg_5079;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            grp_fu_1627_p0 <= reg_1693;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_fu_1627_p0 <= c0_y_19_reg_4879;
        else 
            grp_fu_1627_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1627_p1_assign_proc : process(ap_CS_fsm_state65, reg_1728, ap_CS_fsm_state57, ap_CS_fsm_state2, DATA_y_q0, ap_CS_fsm_state53, mul8_reg_5091, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1627_p_din1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1627_p_din1, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1627_p1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1627_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1627_p1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1627_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            grp_fu_1627_p1 <= mul8_reg_5091;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            grp_fu_1627_p1 <= reg_1728;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_fu_1627_p1 <= DATA_y_q0;
        else 
            grp_fu_1627_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1632_p0_assign_proc : process(reg_1682, ap_CS_fsm_state57, c0_x_19_reg_4901, ap_CS_fsm_state53)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            grp_fu_1632_p0 <= reg_1682;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_fu_1632_p0 <= c0_x_19_reg_4901;
        else 
            grp_fu_1632_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1632_p1_assign_proc : process(reg_1719, ap_CS_fsm_state57, DATA_x_q0, ap_CS_fsm_state53)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            grp_fu_1632_p1 <= reg_1719;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_fu_1632_p1 <= DATA_x_q0;
        else 
            grp_fu_1632_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1637_p0_assign_proc : process(reg_1693, ap_CS_fsm_state57, c0_y_19_reg_4879, ap_CS_fsm_state53)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            grp_fu_1637_p0 <= reg_1693;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_fu_1637_p0 <= c0_y_19_reg_4879;
        else 
            grp_fu_1637_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1637_p1_assign_proc : process(reg_1728, ap_CS_fsm_state57, DATA_y_q0, ap_CS_fsm_state53)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            grp_fu_1637_p1 <= reg_1728;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_fu_1637_p1 <= DATA_y_q0;
        else 
            grp_fu_1637_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1650_ce_assign_proc : process(ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1650_p_ce, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1650_p_ce, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1650_ce <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1650_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1650_ce <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1650_p_ce;
        else 
            grp_fu_1650_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1650_p0_assign_proc : process(reg_1682, ap_CS_fsm_state69, reg_1719, reg_1763, ap_CS_fsm_state58, ap_CS_fsm_state61, ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1650_p_din0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1650_p_din0, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1650_p0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1650_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1650_p0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1650_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            grp_fu_1650_p0 <= reg_1719;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            grp_fu_1650_p0 <= reg_1682;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            grp_fu_1650_p0 <= reg_1763;
        else 
            grp_fu_1650_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1650_p1_assign_proc : process(ap_CS_fsm_state69, ap_CS_fsm_state58, ap_CS_fsm_state61, ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1650_p_din1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1650_p_din1, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1650_p1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1650_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1650_p1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1650_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            grp_fu_1650_p1 <= ap_const_lv64_3FE6A09E60000000;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state69))) then 
            grp_fu_1650_p1 <= ap_const_lv64_0;
        else 
            grp_fu_1650_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1655_ce_assign_proc : process(ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1655_p_ce, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1655_p_ce, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1655_ce <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1655_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1655_ce <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1655_p_ce;
        else 
            grp_fu_1655_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1655_p0_assign_proc : process(ap_CS_fsm_state69, reg_1693, reg_1728, reg_1770, ap_CS_fsm_state58, ap_CS_fsm_state61, ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1655_p_din0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1655_p_din0, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1655_p0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1655_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1655_p0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1655_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            grp_fu_1655_p0 <= reg_1728;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            grp_fu_1655_p0 <= reg_1693;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            grp_fu_1655_p0 <= reg_1770;
        else 
            grp_fu_1655_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1655_p1_assign_proc : process(ap_CS_fsm_state69, ap_CS_fsm_state58, ap_CS_fsm_state61, ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1655_p_din1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1655_p_din1, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1655_p1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1655_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1655_p1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1655_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            grp_fu_1655_p1 <= ap_const_lv64_3FE6A09E60000000;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state69))) then 
            grp_fu_1655_p1 <= ap_const_lv64_0;
        else 
            grp_fu_1655_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1662_ce_assign_proc : process(ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1662_p_ce, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1662_p_ce, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1662_ce <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1662_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1662_ce <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1662_p_ce;
        else 
            grp_fu_1662_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1662_p0_assign_proc : process(reg_1704, ap_CS_fsm_state61, ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1662_p_din0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1662_p_din0, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1662_p0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1662_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1662_p0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1662_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            grp_fu_1662_p0 <= reg_1704;
        else 
            grp_fu_1662_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1662_p1_assign_proc : process(ap_CS_fsm_state61, ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1662_p_din1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1662_p_din1, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1662_p1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1662_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1662_p1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1662_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            grp_fu_1662_p1 <= ap_const_lv64_3FE6A09E60000000;
        else 
            grp_fu_1662_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1667_ce_assign_proc : process(ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1667_p_ce, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1667_p_ce, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1667_ce <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1667_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1667_ce <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1667_p_ce;
        else 
            grp_fu_1667_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1667_p0_assign_proc : process(reg_1712, ap_CS_fsm_state61, ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1667_p_din0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1667_p_din0, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1667_p0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1667_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1667_p0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1667_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            grp_fu_1667_p0 <= reg_1712;
        else 
            grp_fu_1667_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1667_p1_assign_proc : process(ap_CS_fsm_state61, ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1667_p_din1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1667_p_din1, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1667_p1 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_fu_1667_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1667_p1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_fu_1667_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            grp_fu_1667_p1 <= ap_const_lv64_3FE6A09E60000000;
        else 
            grp_fu_1667_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_sin_or_cos_double_s_fu_5138_ap_ce_assign_proc : process(ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_sin_or_cos_double_s_fu_5138_p_ce, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_sin_or_cos_double_s_fu_5138_p_ce, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_sin_or_cos_double_s_fu_5138_ap_ce <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_sin_or_cos_double_s_fu_5138_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_sin_or_cos_double_s_fu_5138_ap_ce <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_sin_or_cos_double_s_fu_5138_p_ce;
        else 
            grp_sin_or_cos_double_s_fu_5138_ap_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_sin_or_cos_double_s_fu_5138_ap_start_assign_proc : process(ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_sin_or_cos_double_s_fu_5138_p_start, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_sin_or_cos_double_s_fu_5138_p_start, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_sin_or_cos_double_s_fu_5138_ap_start <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_sin_or_cos_double_s_fu_5138_p_start;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_sin_or_cos_double_s_fu_5138_ap_start <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_sin_or_cos_double_s_fu_5138_p_start;
        else 
            grp_sin_or_cos_double_s_fu_5138_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_or_cos_double_s_fu_5138_do_cos_assign_proc : process(ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_sin_or_cos_double_s_fu_5138_p_din2, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_sin_or_cos_double_s_fu_5138_p_din2, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_sin_or_cos_double_s_fu_5138_do_cos <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_sin_or_cos_double_s_fu_5138_p_din2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_sin_or_cos_double_s_fu_5138_do_cos <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_sin_or_cos_double_s_fu_5138_p_din2;
        else 
            grp_sin_or_cos_double_s_fu_5138_do_cos <= "X";
        end if; 
    end process;


    grp_sin_or_cos_double_s_fu_5138_t_in_assign_proc : process(ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_sin_or_cos_double_s_fu_5138_p_din1, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_sin_or_cos_double_s_fu_5138_p_din1, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_sin_or_cos_double_s_fu_5138_t_in <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_grp_sin_or_cos_double_s_fu_5138_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_sin_or_cos_double_s_fu_5138_t_in <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_grp_sin_or_cos_double_s_fu_5138_p_din1;
        else 
            grp_sin_or_cos_double_s_fu_5138_t_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    hi_1_fu_2461_p4 <= tid_4_fu_240(5 downto 3);
    hi_fu_2026_p4 <= tid_1_fu_200(5 downto 3);
    icmp_ln176_fu_1807_p2 <= "1" when (tid_fu_176 = ap_const_lv7_40) else "0";
    icmp_ln191_fu_2010_p2 <= "1" when (tid_1_fu_200 = ap_const_lv7_40) else "0";
    icmp_ln208_fu_2238_p2 <= "1" when (tid_3_fu_204 = ap_const_lv7_40) else "0";
    icmp_ln224_fu_2441_p2 <= "1" when (tid_4_fu_240 = ap_const_lv7_40) else "0";
    icmp_ln301_fu_2741_p2 <= "1" when (tid_6_fu_244 = ap_const_lv7_40) else "0";
    icmp_ln317_fu_2944_p2 <= "1" when (tid_7_fu_248 = ap_const_lv7_40) else "0";
    icmp_ln334_fu_3154_p2 <= "1" when (tid_8_fu_252 = ap_const_lv7_40) else "0";
    icmp_ln350_fu_3357_p2 <= "1" when (tid_9_fu_288 = ap_const_lv7_40) else "0";
    icmp_ln376_fu_3639_p2 <= "1" when (tid_10_fu_292 = ap_const_lv7_40) else "0";
    offset_1_fu_2056_p2 <= std_logic_vector(unsigned(zext_ln195_fu_2052_p1) + unsigned(zext_ln115_fu_2036_p1));
    offset_2_fu_2250_p1 <= tid_3_fu_204(6 - 1 downto 0);
    offset_3_fu_2753_p1 <= tid_6_fu_244(6 - 1 downto 0);
    offset_4_fu_2970_p3 <= (tmp_18_fu_2956_p4 & trunc_ln321_fu_2966_p1);
    offset_5_fu_3166_p1 <= tid_8_fu_252(6 - 1 downto 0);
    offset_fu_1819_p1 <= tid_fu_176(6 - 1 downto 0);
    or_ln182_fu_1836_p2 <= (shl_ln1_fu_1823_p3 or ap_const_lv9_1);
    or_ln183_fu_1875_p2 <= (shl_ln1_reg_4126 or ap_const_lv9_4);
    or_ln184_fu_1885_p2 <= (shl_ln1_reg_4126 or ap_const_lv9_5);
    or_ln185_fu_1919_p2 <= (shl_ln1_reg_4126 or ap_const_lv9_2);
    or_ln186_fu_1929_p2 <= (shl_ln1_reg_4126 or ap_const_lv9_3);
    or_ln187_fu_1963_p2 <= (shl_ln1_reg_4126 or ap_const_lv9_6);
    or_ln188_fu_1973_p2 <= (shl_ln1_reg_4126 or ap_const_lv9_7);
    or_ln198_fu_2104_p2 <= (shl_ln2_fu_2092_p3 or ap_const_lv9_4);
    or_ln199_fu_2135_p2 <= (shl_ln2_reg_4230 or ap_const_lv9_1);
    or_ln1_fu_2475_p5 <= (((trunc_ln235_fu_2457_p1 & ap_const_lv2_0) & trunc_ln235_fu_2457_p1) & ap_const_lv1_0);
    or_ln200_fu_2145_p2 <= (shl_ln2_reg_4230 or ap_const_lv9_5);
    or_ln201_fu_2175_p2 <= (shl_ln2_reg_4230 or ap_const_lv9_2);
    or_ln202_fu_2185_p2 <= (shl_ln2_reg_4230 or ap_const_lv9_6);
    or_ln203_fu_2215_p2 <= (shl_ln2_reg_4230 or ap_const_lv9_3);
    or_ln204_fu_2225_p2 <= (shl_ln2_reg_4230 or ap_const_lv9_7);
    or_ln215_fu_2267_p2 <= (shl_ln3_fu_2254_p3 or ap_const_lv9_1);
    or_ln216_fu_2306_p2 <= (shl_ln3_reg_4281 or ap_const_lv9_4);
    or_ln217_fu_2316_p2 <= (shl_ln3_reg_4281 or ap_const_lv9_5);
    or_ln218_fu_2350_p2 <= (shl_ln3_reg_4281 or ap_const_lv9_2);
    or_ln219_fu_2360_p2 <= (shl_ln3_reg_4281 or ap_const_lv9_3);
    or_ln220_fu_2394_p2 <= (shl_ln3_reg_4281 or ap_const_lv9_6);
    or_ln221_fu_2404_p2 <= (shl_ln3_reg_4281 or ap_const_lv9_7);
    or_ln227_fu_2543_p2 <= (shl_ln4_fu_2531_p3 or ap_const_lv9_1);
    or_ln228_fu_2584_p2 <= (shl_ln4_reg_4433 or ap_const_lv9_2);
    or_ln229_fu_2594_p2 <= (shl_ln4_reg_4433 or ap_const_lv9_3);
    or_ln230_fu_2634_p2 <= (shl_ln4_reg_4433 or ap_const_lv9_4);
    or_ln231_fu_2644_p2 <= (shl_ln4_reg_4433 or ap_const_lv9_5);
    or_ln232_fu_2684_p2 <= (shl_ln4_reg_4433 or ap_const_lv9_6);
    or_ln233_fu_2694_p2 <= (shl_ln4_reg_4433 or ap_const_lv9_7);
    or_ln307_fu_2770_p2 <= (shl_ln6_fu_2757_p3 or ap_const_lv9_1);
    or_ln308_fu_2809_p2 <= (shl_ln6_reg_4484 or ap_const_lv9_4);
    or_ln309_fu_2819_p2 <= (shl_ln6_reg_4484 or ap_const_lv9_5);
    or_ln310_fu_2853_p2 <= (shl_ln6_reg_4484 or ap_const_lv9_2);
    or_ln311_fu_2863_p2 <= (shl_ln6_reg_4484 or ap_const_lv9_3);
    or_ln312_fu_2897_p2 <= (shl_ln6_reg_4484 or ap_const_lv9_6);
    or_ln313_fu_2907_p2 <= (shl_ln6_reg_4484 or ap_const_lv9_7);
    or_ln324_fu_3020_p2 <= (shl_ln7_fu_3008_p3 or ap_const_lv9_4);
    or_ln325_fu_3051_p2 <= (shl_ln7_reg_4588 or ap_const_lv9_1);
    or_ln326_fu_3061_p2 <= (shl_ln7_reg_4588 or ap_const_lv9_5);
    or_ln327_fu_3091_p2 <= (shl_ln7_reg_4588 or ap_const_lv9_2);
    or_ln328_fu_3101_p2 <= (shl_ln7_reg_4588 or ap_const_lv9_6);
    or_ln329_fu_3131_p2 <= (shl_ln7_reg_4588 or ap_const_lv9_3);
    or_ln330_fu_3141_p2 <= (shl_ln7_reg_4588 or ap_const_lv9_7);
    or_ln341_fu_3183_p2 <= (shl_ln8_fu_3170_p3 or ap_const_lv9_1);
    or_ln342_fu_3222_p2 <= (shl_ln8_reg_4639 or ap_const_lv9_4);
    or_ln343_fu_3232_p2 <= (shl_ln8_reg_4639 or ap_const_lv9_5);
    or_ln344_fu_3266_p2 <= (shl_ln8_reg_4639 or ap_const_lv9_2);
    or_ln345_fu_3276_p2 <= (shl_ln8_reg_4639 or ap_const_lv9_3);
    or_ln346_fu_3310_p2 <= (shl_ln8_reg_4639 or ap_const_lv9_6);
    or_ln347_fu_3320_p2 <= (shl_ln8_reg_4639 or ap_const_lv9_7);
    or_ln353_fu_3441_p2 <= (shl_ln9_fu_3429_p3 or ap_const_lv9_1);
    or_ln354_fu_3482_p2 <= (shl_ln9_reg_4791 or ap_const_lv9_2);
    or_ln355_fu_3492_p2 <= (shl_ln9_reg_4791 or ap_const_lv9_3);
    or_ln356_fu_3532_p2 <= (shl_ln9_reg_4791 or ap_const_lv9_4);
    or_ln357_fu_3542_p2 <= (shl_ln9_reg_4791 or ap_const_lv9_5);
    or_ln358_fu_3582_p2 <= (shl_ln9_reg_4791 or ap_const_lv9_6);
    or_ln359_fu_3592_p2 <= (shl_ln9_reg_4791 or ap_const_lv9_7);
    or_ln380_fu_3663_p2 <= (shl_ln_fu_3655_p3 or ap_const_lv9_1);
    or_ln381_fu_3714_p2 <= (shl_ln_reg_4843 or ap_const_lv9_2);
    or_ln382_fu_3675_p2 <= (shl_ln_fu_3655_p3 or ap_const_lv9_3);
    or_ln383_fu_3741_p2 <= (shl_ln_reg_4843 or ap_const_lv9_4);
    or_ln384_fu_3692_p2 <= (shl_ln_reg_4843 or ap_const_lv9_5);
    or_ln385_fu_3725_p2 <= (shl_ln_reg_4843 or ap_const_lv9_6);
    or_ln386_fu_3703_p2 <= (shl_ln_reg_4843 or ap_const_lv9_7);
    or_ln_fu_2040_p5 <= (((trunc_ln193_fu_2022_p1 & ap_const_lv2_0) & trunc_ln193_fu_2022_p1) & ap_const_lv1_0);
        sext_ln186_fu_1954_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln186_fu_1949_p2),9));

        sext_ln219_fu_2385_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln219_fu_2380_p2),9));

        sext_ln311_fu_2888_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln311_fu_2883_p2),9));

        sext_ln345_fu_3301_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln345_fu_3296_p2),9));

        sext_ln404_fu_4030_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xor_ln402_reg_5132),8));

        sext_ln407_fu_4011_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(zext_ln403_cast_reg_5117),9));

        sext_ln408_fu_4049_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xor_ln402_reg_5132),9));

    shl_ln1_fu_1823_p3 <= (offset_fu_1819_p1 & ap_const_lv3_0);
    shl_ln2_fu_2092_p3 <= (trunc_ln197_reg_4213 & ap_const_lv3_0);
    shl_ln3_fu_2254_p3 <= (offset_2_fu_2250_p1 & ap_const_lv3_0);
    shl_ln4_fu_2531_p3 <= (trunc_ln226_reg_4401 & ap_const_lv3_0);
    shl_ln6_fu_2757_p3 <= (offset_3_fu_2753_p1 & ap_const_lv3_0);
    shl_ln7_fu_3008_p3 <= (trunc_ln321_reg_4556 & ap_const_lv3_0);
    shl_ln8_fu_3170_p3 <= (offset_5_fu_3166_p1 & ap_const_lv3_0);
    shl_ln9_fu_3429_p3 <= (trunc_ln352_reg_4759 & ap_const_lv3_0);
    shl_ln_fu_3655_p3 <= (trunc_ln379_fu_3651_p1 & ap_const_lv3_0);

    smem_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, zext_ln182_fu_1870_p1, zext_ln184_fu_1914_p1, zext_ln186_1_fu_1958_p1, ap_CS_fsm_state7, zext_ln188_fu_2002_p1, zext_ln198_fu_2077_p1, zext_ln200_fu_2130_p1, zext_ln202_fu_2170_p1, zext_ln204_fu_2210_p1, zext_ln215_fu_2301_p1, zext_ln217_fu_2345_p1, zext_ln219_1_fu_2389_p1, ap_CS_fsm_state17, zext_ln221_fu_2433_p1, zext_ln105_fu_2508_p1, zext_ln107_fu_2569_p1, zext_ln109_fu_2619_p1, zext_ln111_fu_2669_p1, zext_ln307_fu_2804_p1, zext_ln309_fu_2848_p1, zext_ln311_1_fu_2892_p1, ap_CS_fsm_state32, zext_ln313_fu_2936_p1, zext_ln324_fu_2993_p1, zext_ln326_fu_3046_p1, zext_ln328_fu_3086_p1, zext_ln330_fu_3126_p1, zext_ln341_fu_3217_p1, zext_ln343_fu_3261_p1, zext_ln345_1_fu_3305_p1, ap_CS_fsm_state42, zext_ln347_fu_3349_p1, zext_ln105_1_fu_3406_p1, zext_ln107_1_fu_3467_p1, zext_ln109_1_fu_3517_p1, zext_ln111_1_fu_3567_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            smem_address0 <= zext_ln111_1_fu_3567_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            smem_address0 <= zext_ln109_1_fu_3517_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            smem_address0 <= zext_ln107_1_fu_3467_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            smem_address0 <= zext_ln105_1_fu_3406_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            smem_address0 <= zext_ln347_fu_3349_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            smem_address0 <= zext_ln345_1_fu_3305_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            smem_address0 <= zext_ln343_fu_3261_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            smem_address0 <= zext_ln341_fu_3217_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            smem_address0 <= zext_ln330_fu_3126_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            smem_address0 <= zext_ln328_fu_3086_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            smem_address0 <= zext_ln326_fu_3046_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            smem_address0 <= zext_ln324_fu_2993_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            smem_address0 <= zext_ln313_fu_2936_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            smem_address0 <= zext_ln311_1_fu_2892_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            smem_address0 <= zext_ln309_fu_2848_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            smem_address0 <= zext_ln307_fu_2804_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            smem_address0 <= zext_ln111_fu_2669_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            smem_address0 <= zext_ln109_fu_2619_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            smem_address0 <= zext_ln107_fu_2569_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            smem_address0 <= zext_ln105_fu_2508_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            smem_address0 <= zext_ln221_fu_2433_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            smem_address0 <= zext_ln219_1_fu_2389_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            smem_address0 <= zext_ln217_fu_2345_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            smem_address0 <= zext_ln215_fu_2301_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            smem_address0 <= zext_ln204_fu_2210_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            smem_address0 <= zext_ln202_fu_2170_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            smem_address0 <= zext_ln200_fu_2130_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            smem_address0 <= zext_ln198_fu_2077_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            smem_address0 <= zext_ln188_fu_2002_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            smem_address0 <= zext_ln186_1_fu_1958_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            smem_address0 <= zext_ln184_fu_1914_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            smem_address0 <= zext_ln182_fu_1870_p1(10 - 1 downto 0);
        else 
            smem_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    smem_address1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, zext_ln181_fu_1860_p1, zext_ln183_fu_1904_p1, zext_ln185_fu_1944_p1, zext_ln187_fu_1991_p1, ap_CS_fsm_state7, zext_ln197_fu_2062_p1, zext_ln199_fu_2120_p1, zext_ln201_fu_2160_p1, zext_ln203_fu_2200_p1, zext_ln214_fu_2291_p1, zext_ln216_fu_2335_p1, zext_ln218_fu_2375_p1, zext_ln220_fu_2422_p1, ap_CS_fsm_state17, zext_ln104_fu_2497_p1, zext_ln106_fu_2559_p1, zext_ln108_fu_2609_p1, zext_ln110_fu_2659_p1, zext_ln306_fu_2794_p1, zext_ln308_fu_2838_p1, zext_ln310_fu_2878_p1, zext_ln312_fu_2925_p1, ap_CS_fsm_state32, zext_ln323_fu_2982_p1, zext_ln325_fu_3036_p1, zext_ln327_fu_3076_p1, zext_ln329_fu_3116_p1, zext_ln340_fu_3207_p1, zext_ln342_fu_3251_p1, zext_ln344_fu_3291_p1, zext_ln346_fu_3338_p1, ap_CS_fsm_state42, zext_ln104_1_fu_3395_p1, zext_ln106_1_fu_3457_p1, zext_ln108_1_fu_3507_p1, zext_ln110_1_fu_3557_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            smem_address1 <= zext_ln110_1_fu_3557_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            smem_address1 <= zext_ln108_1_fu_3507_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            smem_address1 <= zext_ln106_1_fu_3457_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            smem_address1 <= zext_ln104_1_fu_3395_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            smem_address1 <= zext_ln346_fu_3338_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            smem_address1 <= zext_ln344_fu_3291_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            smem_address1 <= zext_ln342_fu_3251_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            smem_address1 <= zext_ln340_fu_3207_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            smem_address1 <= zext_ln329_fu_3116_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            smem_address1 <= zext_ln327_fu_3076_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            smem_address1 <= zext_ln325_fu_3036_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            smem_address1 <= zext_ln323_fu_2982_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            smem_address1 <= zext_ln312_fu_2925_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            smem_address1 <= zext_ln310_fu_2878_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            smem_address1 <= zext_ln308_fu_2838_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            smem_address1 <= zext_ln306_fu_2794_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            smem_address1 <= zext_ln110_fu_2659_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            smem_address1 <= zext_ln108_fu_2609_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            smem_address1 <= zext_ln106_fu_2559_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            smem_address1 <= zext_ln104_fu_2497_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            smem_address1 <= zext_ln220_fu_2422_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            smem_address1 <= zext_ln218_fu_2375_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            smem_address1 <= zext_ln216_fu_2335_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            smem_address1 <= zext_ln214_fu_2291_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            smem_address1 <= zext_ln203_fu_2200_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            smem_address1 <= zext_ln201_fu_2160_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            smem_address1 <= zext_ln199_fu_2120_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            smem_address1 <= zext_ln197_fu_2062_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            smem_address1 <= zext_ln187_fu_1991_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            smem_address1 <= zext_ln185_fu_1944_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            smem_address1 <= zext_ln183_fu_1904_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            smem_address1 <= zext_ln181_fu_1860_p1(10 - 1 downto 0);
        else 
            smem_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    smem_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state7, ap_CS_fsm_state17, ap_CS_fsm_state32, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 
    = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            smem_ce0 <= ap_const_logic_1;
        else 
            smem_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    smem_ce1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state7, ap_CS_fsm_state17, ap_CS_fsm_state32, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 
    = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            smem_ce1 <= ap_const_logic_1;
        else 
            smem_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    smem_d0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, DATA_y_q0, DATA_x_q0, ap_CS_fsm_state7, ap_CS_fsm_state17, ap_CS_fsm_state32, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            smem_d0 <= DATA_y_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            smem_d0 <= DATA_x_q0;
        else 
            smem_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    smem_d1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, DATA_y_q1, DATA_x_q1, ap_CS_fsm_state7, ap_CS_fsm_state17, ap_CS_fsm_state32, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            smem_d1 <= DATA_y_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            smem_d1 <= DATA_x_q1;
        else 
            smem_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    smem_we0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state7, ap_CS_fsm_state17, ap_CS_fsm_state32, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            smem_we0 <= ap_const_logic_1;
        else 
            smem_we0 <= ap_const_logic_0;
        end if; 
    end process;


    smem_we1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state7, ap_CS_fsm_state17, ap_CS_fsm_state32, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            smem_we1 <= ap_const_logic_1;
        else 
            smem_we1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_18_fu_2956_p4 <= tid_7_fu_248(5 downto 3);
    tmp_2_fu_3383_p3 <= (tmp_s_fu_3373_p4 & trunc_ln352_fu_3369_p1);
    tmp_s_fu_3373_p4 <= tid_9_fu_288(5 downto 3);
    trunc_ln193_fu_2022_p1 <= tid_1_fu_200(3 - 1 downto 0);
    trunc_ln197_fu_2067_p1 <= tid_1_fu_200(6 - 1 downto 0);
    trunc_ln226_fu_2453_p1 <= tid_4_fu_240(6 - 1 downto 0);
    trunc_ln235_fu_2457_p1 <= tid_4_fu_240(3 - 1 downto 0);
    trunc_ln321_fu_2966_p1 <= tid_7_fu_248(6 - 1 downto 0);
    trunc_ln352_fu_3369_p1 <= tid_9_fu_288(6 - 1 downto 0);
    trunc_ln379_fu_3651_p1 <= tid_10_fu_292(6 - 1 downto 0);

    twiddles8_reversed8_address0_assign_proc : process(ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_twiddles8_reversed8_address0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_twiddles8_reversed8_address0, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            twiddles8_reversed8_address0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_twiddles8_reversed8_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            twiddles8_reversed8_address0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_twiddles8_reversed8_address0;
        else 
            twiddles8_reversed8_address0 <= "XXX";
        end if; 
    end process;


    twiddles8_reversed8_ce0_assign_proc : process(ap_CS_fsm_state2, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_twiddles8_reversed8_ce0, grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_twiddles8_reversed8_ce0, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            twiddles8_reversed8_ce0 <= grp_fft1D_512_Pipeline_loop6_twiddles_fu_1580_twiddles8_reversed8_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            twiddles8_reversed8_ce0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_twiddles8_reversed8_ce0;
        else 
            twiddles8_reversed8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    work_x_address0_assign_proc : process(ap_CS_fsm_state80, ap_CS_fsm_state72, ap_CS_fsm_state2, ap_CS_fsm_state73, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_x_address0, ap_CS_fsm_state66, zext_ln405_fu_3891_p1, zext_ln403_fu_3919_p1, zext_ln402_fu_3973_p1, zext_ln404_fu_4033_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            work_x_address0 <= zext_ln404_fu_4033_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            work_x_address0 <= zext_ln402_fu_3973_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            work_x_address0 <= zext_ln403_fu_3919_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            work_x_address0 <= zext_ln405_fu_3891_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            work_x_address0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_x_address0;
        else 
            work_x_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    work_x_address1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state73, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_x_address1, zext_ln376_fu_3874_p1, ap_CS_fsm_state66, zext_ln406_fu_3990_p1, zext_ln407_fu_4014_p1, ap_CS_fsm_state74, zext_ln408_fu_4052_p1, ap_CS_fsm_state81)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            work_x_address1 <= zext_ln408_fu_4052_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            work_x_address1 <= zext_ln407_fu_4014_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            work_x_address1 <= zext_ln406_fu_3990_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            work_x_address1 <= zext_ln376_fu_3874_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            work_x_address1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_x_address1;
        else 
            work_x_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    work_x_ce0_assign_proc : process(ap_CS_fsm_state80, ap_CS_fsm_state72, ap_CS_fsm_state2, ap_CS_fsm_state73, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_x_ce0, ap_CS_fsm_state66)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            work_x_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            work_x_ce0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_x_ce0;
        else 
            work_x_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    work_x_ce1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state73, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_x_ce1, ap_CS_fsm_state66, ap_CS_fsm_state74, ap_CS_fsm_state81)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            work_x_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            work_x_ce1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_x_ce1;
        else 
            work_x_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    work_x_d0_assign_proc : process(ap_CS_fsm_state80, ap_CS_fsm_state72, ap_CS_fsm_state73, ap_CS_fsm_state66, bitcast_ln405_fu_3897_p1, bitcast_ln403_fu_3925_p1, bitcast_ln402_fu_3979_p1, bitcast_ln404_fu_4039_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            work_x_d0 <= bitcast_ln404_fu_4039_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            work_x_d0 <= bitcast_ln402_fu_3979_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            work_x_d0 <= bitcast_ln403_fu_3925_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            work_x_d0 <= bitcast_ln405_fu_3897_p1;
        else 
            work_x_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    work_x_d1_assign_proc : process(ap_CS_fsm_state73, ap_CS_fsm_state66, ap_CS_fsm_state74, ap_CS_fsm_state81, bitcast_ln401_fu_3879_p1, bitcast_ln406_fu_3996_p1, bitcast_ln407_fu_4020_p1, bitcast_ln408_fu_4058_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            work_x_d1 <= bitcast_ln408_fu_4058_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            work_x_d1 <= bitcast_ln407_fu_4020_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            work_x_d1 <= bitcast_ln406_fu_3996_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            work_x_d1 <= bitcast_ln401_fu_3879_p1;
        else 
            work_x_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    work_x_we0_assign_proc : process(ap_CS_fsm_state80, ap_CS_fsm_state72, ap_CS_fsm_state73, ap_CS_fsm_state66)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            work_x_we0 <= ap_const_logic_1;
        else 
            work_x_we0 <= ap_const_logic_0;
        end if; 
    end process;


    work_x_we1_assign_proc : process(ap_CS_fsm_state73, ap_CS_fsm_state66, ap_CS_fsm_state74, ap_CS_fsm_state81)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            work_x_we1 <= ap_const_logic_1;
        else 
            work_x_we1 <= ap_const_logic_0;
        end if; 
    end process;


    work_y_address0_assign_proc : process(ap_CS_fsm_state80, ap_CS_fsm_state72, ap_CS_fsm_state2, ap_CS_fsm_state73, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_y_address0, ap_CS_fsm_state66, zext_ln405_fu_3891_p1, zext_ln403_fu_3919_p1, zext_ln402_fu_3973_p1, zext_ln404_fu_4033_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            work_y_address0 <= zext_ln404_fu_4033_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            work_y_address0 <= zext_ln402_fu_3973_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            work_y_address0 <= zext_ln403_fu_3919_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            work_y_address0 <= zext_ln405_fu_3891_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            work_y_address0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_y_address0;
        else 
            work_y_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    work_y_address1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state73, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_y_address1, zext_ln376_fu_3874_p1, ap_CS_fsm_state66, zext_ln406_fu_3990_p1, zext_ln407_fu_4014_p1, ap_CS_fsm_state74, zext_ln408_fu_4052_p1, ap_CS_fsm_state81)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            work_y_address1 <= zext_ln408_fu_4052_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            work_y_address1 <= zext_ln407_fu_4014_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            work_y_address1 <= zext_ln406_fu_3990_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            work_y_address1 <= zext_ln376_fu_3874_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            work_y_address1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_y_address1;
        else 
            work_y_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    work_y_ce0_assign_proc : process(ap_CS_fsm_state80, ap_CS_fsm_state72, ap_CS_fsm_state2, ap_CS_fsm_state73, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_y_ce0, ap_CS_fsm_state66)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            work_y_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            work_y_ce0 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_y_ce0;
        else 
            work_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    work_y_ce1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state73, grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_y_ce1, ap_CS_fsm_state66, ap_CS_fsm_state74, ap_CS_fsm_state81)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            work_y_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            work_y_ce1 <= grp_fft1D_512_Pipeline_loop1_twiddles_fu_1550_work_y_ce1;
        else 
            work_y_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    work_y_d0_assign_proc : process(ap_CS_fsm_state80, ap_CS_fsm_state72, ap_CS_fsm_state73, ap_CS_fsm_state66, bitcast_ln414_fu_3907_p1, bitcast_ln412_fu_3930_p1, bitcast_ln411_fu_4001_p1, bitcast_ln413_fu_4044_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            work_y_d0 <= bitcast_ln413_fu_4044_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            work_y_d0 <= bitcast_ln411_fu_4001_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            work_y_d0 <= bitcast_ln412_fu_3930_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            work_y_d0 <= bitcast_ln414_fu_3907_p1;
        else 
            work_y_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    work_y_d1_assign_proc : process(ap_CS_fsm_state73, ap_CS_fsm_state66, ap_CS_fsm_state74, ap_CS_fsm_state81, bitcast_ln410_fu_3902_p1, bitcast_ln415_fu_4006_p1, bitcast_ln416_fu_4025_p1, bitcast_ln417_fu_4063_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
            work_y_d1 <= bitcast_ln417_fu_4063_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            work_y_d1 <= bitcast_ln416_fu_4025_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            work_y_d1 <= bitcast_ln415_fu_4006_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            work_y_d1 <= bitcast_ln410_fu_3902_p1;
        else 
            work_y_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    work_y_we0_assign_proc : process(ap_CS_fsm_state80, ap_CS_fsm_state72, ap_CS_fsm_state73, ap_CS_fsm_state66)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            work_y_we0 <= ap_const_logic_1;
        else 
            work_y_we0 <= ap_const_logic_0;
        end if; 
    end process;


    work_y_we1_assign_proc : process(ap_CS_fsm_state73, ap_CS_fsm_state66, ap_CS_fsm_state74, ap_CS_fsm_state81)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            work_y_we1 <= ap_const_logic_1;
        else 
            work_y_we1 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln398_1_fu_3771_p2 <= (bitcast_ln398_2_fu_3767_p1 xor ap_const_lv64_8000000000000000);
    xor_ln398_2_fu_3818_p2 <= (bitcast_ln398_4_fu_3814_p1 xor ap_const_lv64_8000000000000000);
    xor_ln398_3_fu_3833_p2 <= (bitcast_ln398_6_fu_3829_p1 xor ap_const_lv64_8000000000000000);
    xor_ln398_4_fu_3786_p2 <= (bitcast_ln398_8_fu_3782_p1 xor ap_const_lv64_8000000000000000);
    xor_ln398_5_fu_3802_p2 <= (bitcast_ln398_10_fu_3798_p1 xor ap_const_lv64_8000000000000000);
    xor_ln398_6_fu_3848_p2 <= (bitcast_ln398_12_fu_3844_p1 xor ap_const_lv64_8000000000000000);
    xor_ln398_7_fu_3863_p2 <= (bitcast_ln398_14_fu_3859_p1 xor ap_const_lv64_8000000000000000);
    xor_ln398_8_fu_3942_p2 <= (bitcast_ln398_16_fu_3938_p1 xor ap_const_lv64_8000000000000000);
    xor_ln398_9_fu_3957_p2 <= (bitcast_ln398_18_fu_3953_p1 xor ap_const_lv64_8000000000000000);
    xor_ln398_fu_3756_p2 <= (bitcast_ln398_fu_3752_p1 xor ap_const_lv64_8000000000000000);
    xor_ln402_fu_3968_p2 <= (tid_17_reg_4831 xor ap_const_lv7_40);
    zext_ln104_1_fu_3395_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_3383_p3),64));
    zext_ln104_fu_2497_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln238_fu_2491_p2),64));
    zext_ln105_1_fu_3406_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln105_1_fu_3400_p2),64));
    zext_ln105_fu_2508_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln105_fu_2502_p2),64));
    zext_ln106_1_fu_3457_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln106_1_fu_3452_p2),64));
    zext_ln106_fu_2559_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln106_fu_2554_p2),64));
    zext_ln107_1_fu_3467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln107_1_fu_3462_p2),64));
    zext_ln107_fu_2569_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln107_fu_2564_p2),64));
    zext_ln108_1_fu_3507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln108_1_fu_3502_p2),64));
    zext_ln108_fu_2609_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln108_fu_2604_p2),64));
    zext_ln109_1_fu_3517_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln109_1_fu_3512_p2),64));
    zext_ln109_fu_2619_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln109_fu_2614_p2),64));
    zext_ln110_1_fu_3557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln110_1_fu_3552_p2),64));
    zext_ln110_fu_2659_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln110_fu_2654_p2),64));
    zext_ln111_1_fu_3567_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln111_1_fu_3562_p2),64));
    zext_ln111_fu_2669_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln111_fu_2664_p2),64));
    zext_ln115_1_fu_2471_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hi_1_fu_2461_p4),10));
    zext_ln115_fu_2036_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hi_fu_2026_p4),10));
    zext_ln174_10_fu_3242_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_5_reg_4631),8));
    zext_ln174_11_fu_3204_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_5_reg_4631),9));
    zext_ln174_1_fu_1895_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_reg_4118),8));
    zext_ln174_2_fu_1857_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_reg_4118),9));
    zext_ln174_3_fu_2414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_2_reg_4273),10));
    zext_ln174_4_fu_2326_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_2_reg_4273),8));
    zext_ln174_5_fu_2288_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_2_reg_4273),9));
    zext_ln174_6_fu_2917_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_3_reg_4476),10));
    zext_ln174_7_fu_2829_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_3_reg_4476),8));
    zext_ln174_8_fu_2791_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_3_reg_4476),9));
    zext_ln174_9_fu_3330_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_5_reg_4631),10));
    zext_ln174_fu_1983_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_reg_4118),10));
    zext_ln181_1_fu_1831_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_1823_p3),64));
    zext_ln181_fu_1860_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_reg_4118),64));
    zext_ln182_1_fu_1842_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln182_fu_1836_p2),64));
    zext_ln182_fu_1870_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln182_fu_1864_p2),64));
    zext_ln183_1_fu_1880_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln183_fu_1875_p2),64));
    zext_ln183_fu_1904_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln183_fu_1898_p2),64));
    zext_ln184_1_fu_1890_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln184_fu_1885_p2),64));
    zext_ln184_fu_1914_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln184_fu_1909_p2),64));
    zext_ln185_1_fu_1924_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln185_fu_1919_p2),64));
    zext_ln185_fu_1944_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln185_fu_1939_p2),64));
    zext_ln186_1_fu_1958_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln186_fu_1954_p1),64));
    zext_ln186_fu_1934_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln186_fu_1929_p2),64));
    zext_ln187_1_fu_1968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln187_fu_1963_p2),64));
    zext_ln187_fu_1991_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln187_fu_1986_p2),64));
    zext_ln188_1_fu_1978_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln188_fu_1973_p2),64));
    zext_ln188_fu_2002_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln188_fu_1996_p2),64));
    zext_ln195_fu_2052_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_fu_2040_p5),10));
    zext_ln197_1_fu_2099_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln2_fu_2092_p3),64));
    zext_ln197_fu_2062_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_1_fu_2056_p2),64));
    zext_ln198_1_fu_2110_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln198_fu_2104_p2),64));
    zext_ln198_fu_2077_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln198_fu_2071_p2),64));
    zext_ln199_1_fu_2140_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln199_fu_2135_p2),64));
    zext_ln199_fu_2120_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln199_fu_2115_p2),64));
    zext_ln200_1_fu_2150_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln200_fu_2145_p2),64));
    zext_ln200_fu_2130_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln200_fu_2125_p2),64));
    zext_ln201_1_fu_2180_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln201_fu_2175_p2),64));
    zext_ln201_fu_2160_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln201_fu_2155_p2),64));
    zext_ln202_1_fu_2190_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln202_fu_2185_p2),64));
    zext_ln202_fu_2170_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln202_fu_2165_p2),64));
    zext_ln203_1_fu_2220_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln203_fu_2215_p2),64));
    zext_ln203_fu_2200_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln203_fu_2195_p2),64));
    zext_ln204_1_fu_2230_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln204_fu_2225_p2),64));
    zext_ln204_fu_2210_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln204_fu_2205_p2),64));
    zext_ln214_1_fu_2262_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln3_fu_2254_p3),64));
    zext_ln214_fu_2291_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_2_reg_4273),64));
    zext_ln215_1_fu_2273_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln215_fu_2267_p2),64));
    zext_ln215_fu_2301_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_fu_2295_p2),64));
    zext_ln216_1_fu_2311_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln216_fu_2306_p2),64));
    zext_ln216_fu_2335_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln216_fu_2329_p2),64));
    zext_ln217_1_fu_2321_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln217_fu_2316_p2),64));
    zext_ln217_fu_2345_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln217_fu_2340_p2),64));
    zext_ln218_1_fu_2355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln218_fu_2350_p2),64));
    zext_ln218_fu_2375_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln218_fu_2370_p2),64));
    zext_ln219_1_fu_2389_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln219_fu_2385_p1),64));
    zext_ln219_fu_2365_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln219_fu_2360_p2),64));
    zext_ln220_1_fu_2399_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln220_fu_2394_p2),64));
    zext_ln220_fu_2422_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln220_fu_2417_p2),64));
    zext_ln221_1_fu_2409_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln221_fu_2404_p2),64));
    zext_ln221_fu_2433_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln221_fu_2427_p2),64));
    zext_ln226_fu_2538_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln4_fu_2531_p3),64));
    zext_ln227_fu_2549_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln227_fu_2543_p2),64));
    zext_ln228_fu_2589_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln228_fu_2584_p2),64));
    zext_ln229_fu_2599_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln229_fu_2594_p2),64));
    zext_ln230_fu_2639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln230_fu_2634_p2),64));
    zext_ln231_fu_2649_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln231_fu_2644_p2),64));
    zext_ln232_fu_2689_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln232_fu_2684_p2),64));
    zext_ln233_fu_2699_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln233_fu_2694_p2),64));
    zext_ln238_fu_2487_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1_fu_2475_p5),10));
    zext_ln306_1_fu_2765_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln6_fu_2757_p3),64));
    zext_ln306_fu_2794_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_3_reg_4476),64));
    zext_ln307_1_fu_2776_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln307_fu_2770_p2),64));
    zext_ln307_fu_2804_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln307_fu_2798_p2),64));
    zext_ln308_1_fu_2814_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln308_fu_2809_p2),64));
    zext_ln308_fu_2838_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln308_fu_2832_p2),64));
    zext_ln309_1_fu_2824_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln309_fu_2819_p2),64));
    zext_ln309_fu_2848_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln309_fu_2843_p2),64));
    zext_ln310_1_fu_2858_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln310_fu_2853_p2),64));
    zext_ln310_fu_2878_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln310_fu_2873_p2),64));
    zext_ln311_1_fu_2892_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln311_fu_2888_p1),64));
    zext_ln311_fu_2868_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln311_fu_2863_p2),64));
    zext_ln312_1_fu_2902_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln312_fu_2897_p2),64));
    zext_ln312_fu_2925_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln312_fu_2920_p2),64));
    zext_ln313_1_fu_2912_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln313_fu_2907_p2),64));
    zext_ln313_fu_2936_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln313_fu_2930_p2),64));
    zext_ln321_fu_2978_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_4_fu_2970_p3),10));
    zext_ln323_1_fu_3015_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln7_fu_3008_p3),64));
    zext_ln323_fu_2982_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_4_fu_2970_p3),64));
    zext_ln324_1_fu_3026_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln324_fu_3020_p2),64));
    zext_ln324_fu_2993_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln324_fu_2987_p2),64));
    zext_ln325_1_fu_3056_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln325_fu_3051_p2),64));
    zext_ln325_fu_3036_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln325_fu_3031_p2),64));
    zext_ln326_1_fu_3066_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln326_fu_3061_p2),64));
    zext_ln326_fu_3046_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln326_fu_3041_p2),64));
    zext_ln327_1_fu_3096_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln327_fu_3091_p2),64));
    zext_ln327_fu_3076_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln327_fu_3071_p2),64));
    zext_ln328_1_fu_3106_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln328_fu_3101_p2),64));
    zext_ln328_fu_3086_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln328_fu_3081_p2),64));
    zext_ln329_1_fu_3136_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln329_fu_3131_p2),64));
    zext_ln329_fu_3116_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln329_fu_3111_p2),64));
    zext_ln330_1_fu_3146_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln330_fu_3141_p2),64));
    zext_ln330_fu_3126_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln330_fu_3121_p2),64));
    zext_ln340_1_fu_3178_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln8_fu_3170_p3),64));
    zext_ln340_fu_3207_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(offset_5_reg_4631),64));
    zext_ln341_1_fu_3189_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln341_fu_3183_p2),64));
    zext_ln341_fu_3217_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln341_fu_3211_p2),64));
    zext_ln342_1_fu_3227_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln342_fu_3222_p2),64));
    zext_ln342_fu_3251_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln342_fu_3245_p2),64));
    zext_ln343_1_fu_3237_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln343_fu_3232_p2),64));
    zext_ln343_fu_3261_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln343_fu_3256_p2),64));
    zext_ln344_1_fu_3271_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln344_fu_3266_p2),64));
    zext_ln344_fu_3291_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln344_fu_3286_p2),64));
    zext_ln345_1_fu_3305_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln345_fu_3301_p1),64));
    zext_ln345_fu_3281_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln345_fu_3276_p2),64));
    zext_ln346_1_fu_3315_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln346_fu_3310_p2),64));
    zext_ln346_fu_3338_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln346_fu_3333_p2),64));
    zext_ln347_1_fu_3325_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln347_fu_3320_p2),64));
    zext_ln347_fu_3349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln347_fu_3343_p2),64));
    zext_ln352_fu_3436_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln9_fu_3429_p3),64));
    zext_ln353_fu_3447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln353_fu_3441_p2),64));
    zext_ln354_fu_3487_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln354_fu_3482_p2),64));
    zext_ln355_fu_3497_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln355_fu_3492_p2),64));
    zext_ln356_fu_3537_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln356_fu_3532_p2),64));
    zext_ln357_fu_3547_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln357_fu_3542_p2),64));
    zext_ln358_fu_3587_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln358_fu_3582_p2),64));
    zext_ln359_fu_3597_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln359_fu_3592_p2),64));
    zext_ln364_fu_3391_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_3383_p3),10));
    zext_ln376_1_fu_3935_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tid_17_reg_4831),9));
    zext_ln376_fu_3874_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tid_17_reg_4831),64));
    zext_ln379_fu_3736_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_reg_4843),64));
    zext_ln380_fu_3669_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln380_fu_3663_p2),64));
    zext_ln381_fu_3719_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln381_fu_3714_p2),64));
    zext_ln382_fu_3681_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln382_fu_3675_p2),64));
    zext_ln383_fu_3746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln383_fu_3741_p2),64));
    zext_ln384_fu_3697_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln384_fu_3692_p2),64));
    zext_ln385_fu_3730_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln385_fu_3725_p2),64));
    zext_ln386_fu_3708_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln386_fu_3703_p2),64));
    zext_ln402_fu_3973_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln402_fu_3968_p2),64));
    zext_ln403_cast_fu_3912_p3 <= (ap_const_lv1_1 & tid_17_reg_4831);
    zext_ln403_fu_3919_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln403_cast_fu_3912_p3),64));
    zext_ln404_fu_4033_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln404_fu_4030_p1),64));
    zext_ln405_cast_fu_3884_p3 <= (ap_const_lv2_2 & tid_17_reg_4831);
    zext_ln405_fu_3891_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln405_cast_fu_3884_p3),64));
    zext_ln406_fu_3990_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln406_fu_3984_p2),64));
    zext_ln407_fu_4014_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln407_fu_4011_p1),64));
    zext_ln408_fu_4052_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln408_fu_4049_p1),64));
end behav;
