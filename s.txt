Args: /home/gabriel/Documents/hls-llvm-project/hls-build/bin/opt -load /home/gabriel/Documents/hls-llvm-project/hls-build/lib/libDSE.so -extract-md -out md.json -debug 
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end7
	discovered a new reachable node %cond.false
	discovered a new reachable node %cond.true5
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false6
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then
	discovered a new reachable node %cleanup
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.true5
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.end9
	discovered a new reachable node %cond.false
	discovered a new reachable node %cond.false7
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then2
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end3
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.true6
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.end29
	discovered a new reachable node %cond.false
	discovered a new reachable node %cond.false13
	discovered a new reachable node %cond.true16
	discovered a new reachable node %cond.end27
	discovered a new reachable node %cond.false22
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %cleanup
	discovered a new reachable node %if.end
	discovered a new reachable node %gsm_div_label0
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then7
	discovered a new reachable node %if.end8
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %Autocorrelation_label0
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then5
	discovered a new reachable node %if.end10
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then17
	discovered a new reachable node %VITIS_LOOP_64_1
	discovered a new reachable node %for.cond18
	discovered a new reachable node %for.body20
	discovered a new reachable node %for.inc29
	discovered a new reachable node %for.end31
	discovered a new reachable node %if.end32
	discovered a new reachable node %VITIS_LOOP_76_2
	discovered a new reachable node %for.cond33
	discovered a new reachable node %for.body35
	discovered a new reachable node %for.inc38
	discovered a new reachable node %for.end39
	discovered a new reachable node %VITIS_LOOP_124_3
	discovered a new reachable node %for.cond260
	discovered a new reachable node %for.body262
	discovered a new reachable node %for.inc318
	discovered a new reachable node %for.end320
	discovered a new reachable node %VITIS_LOOP_137_4
	discovered a new reachable node %for.cond321
	discovered a new reachable node %for.body323
	discovered a new reachable node %for.inc327
	discovered a new reachable node %for.end329
	discovered a new reachable node %if.then332
	discovered a new reachable node %VITIS_LOOP_143_5
	discovered a new reachable node %for.cond333
	discovered a new reachable node %for.body335
	discovered a new reachable node %for.inc341
	discovered a new reachable node %for.end343
	discovered a new reachable node %if.end344
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %Reflection_coefficients_label0
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %cleanup
	discovered a new reachable node %cleanup.cont
	discovered a new reachable node %if.end
	discovered a new reachable node %Reflection_coefficients_label1
	discovered a new reachable node %for.cond3
	discovered a new reachable node %for.body5
	discovered a new reachable node %for.inc10
	discovered a new reachable node %for.end11
	discovered a new reachable node %Reflection_coefficients_label2
	discovered a new reachable node %for.cond12
	discovered a new reachable node %for.body14
	discovered a new reachable node %for.inc19
	discovered a new reachable node %for.end21
	discovered a new reachable node %Reflection_coefficients_label3
	discovered a new reachable node %for.cond22
	discovered a new reachable node %for.body24
	discovered a new reachable node %for.inc29
	discovered a new reachable node %for.end31
	discovered a new reachable node %Reflection_coefficients_label4
	discovered a new reachable node %for.cond32
	discovered a new reachable node %for.body34
	discovered a new reachable node %if.then41
	discovered a new reachable node %Reflection_coefficients_label6
	discovered a new reachable node %for.cond42
	discovered a new reachable node %for.body44
	discovered a new reachable node %for.inc46
	discovered a new reachable node %for.end48
	discovered a new reachable node %if.end49
	discovered a new reachable node %if.then55
	discovered a new reachable node %if.end58
	discovered a new reachable node %if.then60
	discovered a new reachable node %if.end61
	discovered a new reachable node %Reflection_coefficients_label5
	discovered a new reachable node %for.cond67
	discovered a new reachable node %for.body70
	discovered a new reachable node %for.inc88
	discovered a new reachable node %for.end90
	discovered a new reachable node %for.inc91
	discovered a new reachable node %for.end94
	discovered a new reachable node %entry
	discovered a new reachable node %VITIS_LOOP_237_1
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end15
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %for.inc
	discovered a new reachable node %cond.false
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then6
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else9
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end12
	discovered a new reachable node %cond.true24
	discovered a new reachable node %cond.end35
	discovered a new reachable node %cond.true48
	discovered a new reachable node %cond.end59
	discovered a new reachable node %cond.true72
	discovered a new reachable node %cond.end83
	discovered a new reachable node %cond.true96
	discovered a new reachable node %cond.end107
	discovered a new reachable node %cond.true120
	discovered a new reachable node %cond.end131
	discovered a new reachable node %cond.true144
	discovered a new reachable node %cond.end155
	discovered a new reachable node %cond.true168
	discovered a new reachable node %cond.end179
	discovered a new reachable node %cond.false169
	discovered a new reachable node %cond.true173
	discovered a new reachable node %cond.end177
	discovered a new reachable node %cond.false174
	discovered a new reachable node %cond.false145
	discovered a new reachable node %cond.true149
	discovered a new reachable node %cond.end153
	discovered a new reachable node %cond.false150
	discovered a new reachable node %cond.false121
	discovered a new reachable node %cond.true125
	discovered a new reachable node %cond.end129
	discovered a new reachable node %cond.false126
	discovered a new reachable node %cond.false97
	discovered a new reachable node %cond.true101
	discovered a new reachable node %cond.end105
	discovered a new reachable node %cond.false102
	discovered a new reachable node %cond.false73
	discovered a new reachable node %cond.true77
	discovered a new reachable node %cond.end81
	discovered a new reachable node %cond.false78
	discovered a new reachable node %cond.false49
	discovered a new reachable node %cond.true53
	discovered a new reachable node %cond.end57
	discovered a new reachable node %cond.false54
	discovered a new reachable node %cond.false25
	discovered a new reachable node %cond.true29
	discovered a new reachable node %cond.end33
	discovered a new reachable node %cond.false30
	discovered a new reachable node %cond.false
	discovered a new reachable node %cond.true9
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false10
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end7
	discovered a new reachable node %cond.false
	discovered a new reachable node %cond.true5
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false6
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then
	discovered a new reachable node %cleanup
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.true5
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.end9
	discovered a new reachable node %cond.false
	discovered a new reachable node %cond.false7
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then2
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end3
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.true6
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.end29
	discovered a new reachable node %cond.false
	discovered a new reachable node %cond.false13
	discovered a new reachable node %cond.true16
	discovered a new reachable node %cond.end27
	discovered a new reachable node %cond.false22
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %cleanup
	discovered a new reachable node %if.end
	discovered a new reachable node %gsm_div_label0
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then7
	discovered a new reachable node %if.end8
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %Autocorrelation_label0
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then5
	discovered a new reachable node %if.end10
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then17
	discovered a new reachable node %VITIS_LOOP_64_1
	discovered a new reachable node %for.cond18
	discovered a new reachable node %for.body20
	discovered a new reachable node %for.inc29
	discovered a new reachable node %for.end31
	discovered a new reachable node %if.end32
	discovered a new reachable node %VITIS_LOOP_76_2
	discovered a new reachable node %for.cond33
	discovered a new reachable node %for.body35
	discovered a new reachable node %for.inc38
	discovered a new reachable node %for.end39
	discovered a new reachable node %VITIS_LOOP_124_3
	discovered a new reachable node %for.cond260
	discovered a new reachable node %for.body262
	discovered a new reachable node %for.inc318
	discovered a new reachable node %for.end320
	discovered a new reachable node %VITIS_LOOP_137_4
	discovered a new reachable node %for.cond321
	discovered a new reachable node %for.body323
	discovered a new reachable node %for.inc327
	discovered a new reachable node %for.end329
	discovered a new reachable node %if.then332
	discovered a new reachable node %VITIS_LOOP_143_5
	discovered a new reachable node %for.cond333
	discovered a new reachable node %for.body335
	discovered a new reachable node %for.inc341
	discovered a new reachable node %for.end343
	discovered a new reachable node %if.end344
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %Reflection_coefficients_label0
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %cleanup
	discovered a new reachable node %cleanup.cont
	discovered a new reachable node %if.end
	discovered a new reachable node %Reflection_coefficients_label1
	discovered a new reachable node %for.cond3
	discovered a new reachable node %for.body5
	discovered a new reachable node %for.inc10
	discovered a new reachable node %for.end11
	discovered a new reachable node %Reflection_coefficients_label2
	discovered a new reachable node %for.cond12
	discovered a new reachable node %for.body14
	discovered a new reachable node %for.inc19
	discovered a new reachable node %for.end21
	discovered a new reachable node %Reflection_coefficients_label3
	discovered a new reachable node %for.cond22
	discovered a new reachable node %for.body24
	discovered a new reachable node %for.inc29
	discovered a new reachable node %for.end31
	discovered a new reachable node %Reflection_coefficients_label4
	discovered a new reachable node %for.cond32
	discovered a new reachable node %for.body34
	discovered a new reachable node %if.then41
	discovered a new reachable node %Reflection_coefficients_label6
	discovered a new reachable node %for.cond42
	discovered a new reachable node %for.body44
	discovered a new reachable node %for.inc46
	discovered a new reachable node %for.end48
	discovered a new reachable node %if.end49
	discovered a new reachable node %if.then55
	discovered a new reachable node %if.end58
	discovered a new reachable node %if.then60
	discovered a new reachable node %if.end61
	discovered a new reachable node %Reflection_coefficients_label5
	discovered a new reachable node %for.cond67
	discovered a new reachable node %for.body70
	discovered a new reachable node %for.inc88
	discovered a new reachable node %for.end90
	discovered a new reachable node %for.inc91
	discovered a new reachable node %for.end94
	discovered a new reachable node %entry
	discovered a new reachable node %VITIS_LOOP_237_1
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end15
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %for.inc
	discovered a new reachable node %cond.false
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then6
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else9
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end12
	discovered a new reachable node %cond.true24
	discovered a new reachable node %cond.end35
	discovered a new reachable node %cond.true48
	discovered a new reachable node %cond.end59
	discovered a new reachable node %cond.true72
	discovered a new reachable node %cond.end83
	discovered a new reachable node %cond.true96
	discovered a new reachable node %cond.end107
	discovered a new reachable node %cond.true120
	discovered a new reachable node %cond.end131
	discovered a new reachable node %cond.true144
	discovered a new reachable node %cond.end155
	discovered a new reachable node %cond.true168
	discovered a new reachable node %cond.end179
	discovered a new reachable node %cond.false169
	discovered a new reachable node %cond.true173
	discovered a new reachable node %cond.end177
	discovered a new reachable node %cond.false174
	discovered a new reachable node %cond.false145
	discovered a new reachable node %cond.true149
	discovered a new reachable node %cond.end153
	discovered a new reachable node %cond.false150
	discovered a new reachable node %cond.false121
	discovered a new reachable node %cond.true125
	discovered a new reachable node %cond.end129
	discovered a new reachable node %cond.false126
	discovered a new reachable node %cond.false97
	discovered a new reachable node %cond.true101
	discovered a new reachable node %cond.end105
	discovered a new reachable node %cond.false102
	discovered a new reachable node %cond.false73
	discovered a new reachable node %cond.true77
	discovered a new reachable node %cond.end81
	discovered a new reachable node %cond.false78
	discovered a new reachable node %cond.false49
	discovered a new reachable node %cond.true53
	discovered a new reachable node %cond.end57
	discovered a new reachable node %cond.false54
	discovered a new reachable node %cond.false25
	discovered a new reachable node %cond.true29
	discovered a new reachable node %cond.end33
	discovered a new reachable node %cond.false30
	discovered a new reachable node %cond.false
	discovered a new reachable node %cond.true9
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false10
WARNING: You're attempting to print out a bitcode file.
This is inadvisable as it may cause display problems. If
you REALLY want to taste LLVM bitcode first-hand, you
can force output with the `-f' option.

	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end7
	discovered a new reachable node %cond.false
	discovered a new reachable node %cond.true5
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false6
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end7
	discovered a new reachable node %cond.false
	discovered a new reachable node %cond.true5
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false6
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then
	discovered a new reachable node %cleanup
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then
	discovered a new reachable node %cleanup
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.true5
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.end9
	discovered a new reachable node %cond.false
	discovered a new reachable node %cond.false7
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.true5
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.end9
	discovered a new reachable node %cond.false
	discovered a new reachable node %cond.false7
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then2
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end3
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.true6
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.end29
	discovered a new reachable node %cond.false
	discovered a new reachable node %cond.false13
	discovered a new reachable node %cond.true16
	discovered a new reachable node %cond.end27
	discovered a new reachable node %cond.false22
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then2
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end3
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.true6
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.end29
	discovered a new reachable node %cond.false
	discovered a new reachable node %cond.false13
	discovered a new reachable node %cond.true16
	discovered a new reachable node %cond.end27
	discovered a new reachable node %cond.false22
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %cleanup
	discovered a new reachable node %if.end
	discovered a new reachable node %gsm_div_label0
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then7
	discovered a new reachable node %if.end8
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %cleanup
	discovered a new reachable node %if.end
	discovered a new reachable node %gsm_div_label0
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then7
	discovered a new reachable node %if.end8
	discovered a new reachable node %while.end
Insert ValueExprMap/ExprValueMap:[{15,+,-1}<nsw><%while.cond>,   %k.0 = phi i32 [ 15, %gsm_div_label0 ], [ %dec, %if.end8 ], !id !54, !id.127 !54]
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %Autocorrelation_label0
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then5
	discovered a new reachable node %if.end10
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then17
	discovered a new reachable node %VITIS_LOOP_64_1
	discovered a new reachable node %for.cond18
	discovered a new reachable node %for.body20
	discovered a new reachable node %for.inc29
	discovered a new reachable node %for.end31
	discovered a new reachable node %if.end32
	discovered a new reachable node %VITIS_LOOP_76_2
	discovered a new reachable node %for.cond33
	discovered a new reachable node %for.body35
	discovered a new reachable node %for.inc38
	discovered a new reachable node %for.end39
	discovered a new reachable node %VITIS_LOOP_124_3
	discovered a new reachable node %for.cond260
	discovered a new reachable node %for.body262
	discovered a new reachable node %for.inc318
	discovered a new reachable node %for.end320
	discovered a new reachable node %VITIS_LOOP_137_4
	discovered a new reachable node %for.cond321
	discovered a new reachable node %for.body323
	discovered a new reachable node %for.inc327
	discovered a new reachable node %for.end329
	discovered a new reachable node %if.then332
	discovered a new reachable node %VITIS_LOOP_143_5
	discovered a new reachable node %for.cond333
	discovered a new reachable node %for.body335
	discovered a new reachable node %for.inc341
	discovered a new reachable node %for.end343
	discovered a new reachable node %if.end344
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %Autocorrelation_label0
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then5
	discovered a new reachable node %if.end10
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then17
	discovered a new reachable node %VITIS_LOOP_64_1
	discovered a new reachable node %for.cond18
	discovered a new reachable node %for.body20
	discovered a new reachable node %for.inc29
	discovered a new reachable node %for.end31
	discovered a new reachable node %if.end32
	discovered a new reachable node %VITIS_LOOP_76_2
	discovered a new reachable node %for.cond33
	discovered a new reachable node %for.body35
	discovered a new reachable node %for.inc38
	discovered a new reachable node %for.end39
	discovered a new reachable node %VITIS_LOOP_124_3
	discovered a new reachable node %for.cond260
	discovered a new reachable node %for.body262
	discovered a new reachable node %for.inc318
	discovered a new reachable node %for.end320
	discovered a new reachable node %VITIS_LOOP_137_4
	discovered a new reachable node %for.cond321
	discovered a new reachable node %for.body323
	discovered a new reachable node %for.inc327
	discovered a new reachable node %for.end329
	discovered a new reachable node %if.then332
	discovered a new reachable node %VITIS_LOOP_143_5
	discovered a new reachable node %for.cond333
	discovered a new reachable node %for.body335
	discovered a new reachable node %for.inc341
	discovered a new reachable node %for.end343
	discovered a new reachable node %if.end344
	discovered a new reachable node %if.else
Insert ValueExprMap/ExprValueMap:[{159,+,-1}<nsw><%for.cond333>,   %k.4 = phi i32 [ 159, %VITIS_LOOP_143_5 ], [ %dec342, %for.inc341 ], !id !892, !id.669 !892]
Insert ValueExprMap/ExprValueMap:[{8,+,-1}<nsw><%for.cond321>,   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc327 ], [ 8, %VITIS_LOOP_137_4 ], !id !859, !id.654 !859]
Insert ValueExprMap/ExprValueMap:[{8,+,1}<nuw><nsw><%for.cond260>,   %i.0 = phi i32 [ 8, %VITIS_LOOP_124_3 ], [ %inc319, %for.inc318 ], !id !711, !id.564 !711]
Insert ValueExprMap/ExprValueMap:[{8,+,-1}<nsw><%for.cond33>,   %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc38 ], [ 8, %VITIS_LOOP_76_2 ], !id !156, !id.215 !156]
Insert ValueExprMap/ExprValueMap:[{0,+,1}<nuw><nsw><%for.cond18>,   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc29 ], [ 0, %VITIS_LOOP_64_1 ], !id !116, !id.196 !116]
Insert ValueExprMap/ExprValueMap:[{0,+,1}<nuw><nsw><%for.cond>,   %indvars.iv6 = phi i64 [ %indvars.iv.next7, %for.inc ], [ 0, %Autocorrelation_label0 ], !id !42, !id.159 !42]
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %Reflection_coefficients_label0
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %cleanup
	discovered a new reachable node %cleanup.cont
	discovered a new reachable node %if.end
	discovered a new reachable node %Reflection_coefficients_label1
	discovered a new reachable node %for.cond3
	discovered a new reachable node %for.body5
	discovered a new reachable node %for.inc10
	discovered a new reachable node %for.end11
	discovered a new reachable node %Reflection_coefficients_label2
	discovered a new reachable node %for.cond12
	discovered a new reachable node %for.body14
	discovered a new reachable node %for.inc19
	discovered a new reachable node %for.end21
	discovered a new reachable node %Reflection_coefficients_label3
	discovered a new reachable node %for.cond22
	discovered a new reachable node %for.body24
	discovered a new reachable node %for.inc29
	discovered a new reachable node %for.end31
	discovered a new reachable node %Reflection_coefficients_label4
	discovered a new reachable node %for.cond32
	discovered a new reachable node %for.body34
	discovered a new reachable node %if.then41
	discovered a new reachable node %Reflection_coefficients_label6
	discovered a new reachable node %for.cond42
	discovered a new reachable node %for.body44
	discovered a new reachable node %for.inc46
	discovered a new reachable node %for.end48
	discovered a new reachable node %if.end49
	discovered a new reachable node %if.then55
	discovered a new reachable node %if.end58
	discovered a new reachable node %if.then60
	discovered a new reachable node %if.end61
	discovered a new reachable node %Reflection_coefficients_label5
	discovered a new reachable node %for.cond67
	discovered a new reachable node %for.body70
	discovered a new reachable node %for.inc88
	discovered a new reachable node %for.end90
	discovered a new reachable node %for.inc91
	discovered a new reachable node %for.end94
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %Reflection_coefficients_label0
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %cleanup
	discovered a new reachable node %cleanup.cont
	discovered a new reachable node %if.end
	discovered a new reachable node %Reflection_coefficients_label1
	discovered a new reachable node %for.cond3
	discovered a new reachable node %for.body5
	discovered a new reachable node %for.inc10
	discovered a new reachable node %for.end11
	discovered a new reachable node %Reflection_coefficients_label2
	discovered a new reachable node %for.cond12
	discovered a new reachable node %for.body14
	discovered a new reachable node %for.inc19
	discovered a new reachable node %for.end21
	discovered a new reachable node %Reflection_coefficients_label3
	discovered a new reachable node %for.cond22
	discovered a new reachable node %for.body24
	discovered a new reachable node %for.inc29
	discovered a new reachable node %for.end31
	discovered a new reachable node %Reflection_coefficients_label4
	discovered a new reachable node %for.cond32
	discovered a new reachable node %for.body34
	discovered a new reachable node %if.then41
	discovered a new reachable node %Reflection_coefficients_label6
	discovered a new reachable node %for.cond42
	discovered a new reachable node %for.body44
	discovered a new reachable node %for.inc46
	discovered a new reachable node %for.end48
	discovered a new reachable node %if.end49
	discovered a new reachable node %if.then55
	discovered a new reachable node %if.end58
	discovered a new reachable node %if.then60
	discovered a new reachable node %if.end61
	discovered a new reachable node %Reflection_coefficients_label5
	discovered a new reachable node %for.cond67
	discovered a new reachable node %for.body70
	discovered a new reachable node %for.inc88
	discovered a new reachable node %for.end90
	discovered a new reachable node %for.inc91
	discovered a new reachable node %for.end94
Insert ValueExprMap/ExprValueMap:[{8,+,-1}<nsw><%for.cond>,   %i.0 = phi i32 [ 8, %Reflection_coefficients_label0 ], [ %dec, %for.inc ], !id !61, !id.697 !61]
Insert ValueExprMap/ExprValueMap:[{%n.0.lcssa3,+,1}<nsw><%for.cond42>,   %i.4 = phi i32 [ %n.0.lcssa3, %Reflection_coefficients_label6 ], [ %inc47, %for.inc46 ], !id !217, !id.770 !217]
Insert ValueExprMap/ExprValueMap:[{0,+,1}<nuw><nsw><%for.cond22>,   %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc29 ], [ 0, %Reflection_coefficients_label3 ], !id !157, !id.741 !157]
Insert ValueExprMap/ExprValueMap:[{1,+,1}<nuw><nsw><%for.cond12>,   %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc19 ], [ 1, %Reflection_coefficients_label2 ], !id !130, !id.729 !130]
Insert ValueExprMap/ExprValueMap:[{0,+,1}<nuw><nsw><%for.cond3>,   %indvars.iv15 = phi i64 [ %indvars.iv.next16, %for.inc10 ], [ 0, %Reflection_coefficients_label1 ], !id !94, !id.712 !94]
Insert ValueExprMap/ExprValueMap:[{1,+,1}<nuw><nsw><%for.cond32>,   %n.0 = phi i32 [ 1, %Reflection_coefficients_label4 ], [ %inc92, %for.inc91 ], !id !185, !id.754 !185]
Insert ValueExprMap/ExprValueMap:[{1,+,1}<nuw><nsw><%for.cond67>,   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc88 ], [ 1, %Reflection_coefficients_label5 ], !id !293, !id.809 !293]
Insert ValueExprMap/ExprValueMap:[{8,+,-1}<nsw><%for.cond32>,   %indvars.iv7 = phi i64 [ %indvars.iv.next8, %for.inc91 ], [ 8, %Reflection_coefficients_label4 ], !id !184, !id.753 !184]
	discovered a new reachable node %entry
	discovered a new reachable node %VITIS_LOOP_237_1
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end15
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %for.inc
	discovered a new reachable node %cond.false
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then6
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else9
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %VITIS_LOOP_237_1
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end15
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %for.inc
	discovered a new reachable node %cond.false
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then6
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else9
	discovered a new reachable node %for.end
Insert ValueExprMap/ExprValueMap:[{1,+,1}<nuw><nsw><%for.cond>,   %i.0 = phi i32 [ 1, %VITIS_LOOP_237_1 ], [ %inc, %for.inc ], !id !41, !id.848 !41]
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end12
	discovered a new reachable node %cond.true24
	discovered a new reachable node %cond.end35
	discovered a new reachable node %cond.true48
	discovered a new reachable node %cond.end59
	discovered a new reachable node %cond.true72
	discovered a new reachable node %cond.end83
	discovered a new reachable node %cond.true96
	discovered a new reachable node %cond.end107
	discovered a new reachable node %cond.true120
	discovered a new reachable node %cond.end131
	discovered a new reachable node %cond.true144
	discovered a new reachable node %cond.end155
	discovered a new reachable node %cond.true168
	discovered a new reachable node %cond.end179
	discovered a new reachable node %cond.false169
	discovered a new reachable node %cond.true173
	discovered a new reachable node %cond.end177
	discovered a new reachable node %cond.false174
	discovered a new reachable node %cond.false145
	discovered a new reachable node %cond.true149
	discovered a new reachable node %cond.end153
	discovered a new reachable node %cond.false150
	discovered a new reachable node %cond.false121
	discovered a new reachable node %cond.true125
	discovered a new reachable node %cond.end129
	discovered a new reachable node %cond.false126
	discovered a new reachable node %cond.false97
	discovered a new reachable node %cond.true101
	discovered a new reachable node %cond.end105
	discovered a new reachable node %cond.false102
	discovered a new reachable node %cond.false73
	discovered a new reachable node %cond.true77
	discovered a new reachable node %cond.end81
	discovered a new reachable node %cond.false78
	discovered a new reachable node %cond.false49
	discovered a new reachable node %cond.true53
	discovered a new reachable node %cond.end57
	discovered a new reachable node %cond.false54
	discovered a new reachable node %cond.false25
	discovered a new reachable node %cond.true29
	discovered a new reachable node %cond.end33
	discovered a new reachable node %cond.false30
	discovered a new reachable node %cond.false
	discovered a new reachable node %cond.true9
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false10
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end12
	discovered a new reachable node %cond.true24
	discovered a new reachable node %cond.end35
	discovered a new reachable node %cond.true48
	discovered a new reachable node %cond.end59
	discovered a new reachable node %cond.true72
	discovered a new reachable node %cond.end83
	discovered a new reachable node %cond.true96
	discovered a new reachable node %cond.end107
	discovered a new reachable node %cond.true120
	discovered a new reachable node %cond.end131
	discovered a new reachable node %cond.true144
	discovered a new reachable node %cond.end155
	discovered a new reachable node %cond.true168
	discovered a new reachable node %cond.end179
	discovered a new reachable node %cond.false169
	discovered a new reachable node %cond.true173
	discovered a new reachable node %cond.end177
	discovered a new reachable node %cond.false174
	discovered a new reachable node %cond.false145
	discovered a new reachable node %cond.true149
	discovered a new reachable node %cond.end153
	discovered a new reachable node %cond.false150
	discovered a new reachable node %cond.false121
	discovered a new reachable node %cond.true125
	discovered a new reachable node %cond.end129
	discovered a new reachable node %cond.false126
	discovered a new reachable node %cond.false97
	discovered a new reachable node %cond.true101
	discovered a new reachable node %cond.end105
	discovered a new reachable node %cond.false102
	discovered a new reachable node %cond.false73
	discovered a new reachable node %cond.true77
	discovered a new reachable node %cond.end81
	discovered a new reachable node %cond.false78
	discovered a new reachable node %cond.false49
	discovered a new reachable node %cond.true53
	discovered a new reachable node %cond.end57
	discovered a new reachable node %cond.false54
	discovered a new reachable node %cond.false25
	discovered a new reachable node %cond.true29
	discovered a new reachable node %cond.end33
	discovered a new reachable node %cond.false30
	discovered a new reachable node %cond.false
	discovered a new reachable node %cond.true9
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false10
Instruction:   %conv = sext i16 %a to i64, !dbg !33, !id !21, !id.0 !21
Instruction type: 11
Instruction:   %conv1 = sext i16 %b to i64, !dbg !34, !id !35, !id.1 !35
Instruction type: 11
Instruction:   %add = add nsw i64 %conv, %conv1, !dbg !36, !id !37, !id.2 !37
Instruction type: 11
Instruction:   %cmp = icmp slt i64 %add, -32768, !dbg !38, !id !39, !id.3 !39
Instruction type: 11
Instruction:   %cmp3 = icmp sgt i64 %add, 32767, !dbg !43, !id !44, !id.6 !44
Instruction type: 11
Instruction:   %cond = phi i64 [ 32767, %cond.true5 ], [ %add, %cond.false6 ], !dbg !45, !id !49, !id.10 !49
Instruction type: 11
Instruction:   %cond8 = phi i64 [ -32768, %cond.true ], [ %cond, %cond.end ], !dbg !40, !id !51, !id.12 !51
Instruction type: 11
Instruction:   %conv9 = trunc i64 %cond8 to i16, !dbg !52, !id !53, !id.13 !53
Instruction type: 11
Instruction:   %conv = sext i16 %a to i32, !dbg !34, !id !36, !id.15 !36
Instruction type: 11
Instruction:   %cmp = icmp eq i32 %conv, -32768, !dbg !37, !id !38, !id.16 !38
Instruction type: 11
Instruction:   %conv2 = sext i16 %b to i32, !dbg !41, !id !42, !id.18 !42
Instruction type: 11
Instruction:   %cmp3 = icmp eq i32 %conv2, -32768, !dbg !43, !id !44, !id.19 !44
Instruction type: 11
Instruction:   %conv5 = sext i16 %a to i64, !dbg !49, !id !50, !id.22 !50
Instruction type: 11
Instruction:   %conv6 = sext i16 %b to i64, !dbg !51, !id !52, !id.23 !52
Instruction type: 11
Instruction:   %mul = mul nsw i64 %conv5, %conv6, !dbg !53, !id !54, !id.24 !54
Instruction type: 11
Instruction:   %shr = ashr i64 %mul, 15, !dbg !55, !id !56, !id.25 !56
Instruction type: 11
Instruction:   %conv7 = trunc i64 %shr to i16, !dbg !57, !id !58, !id.26 !58
Instruction type: 11
Instruction:   %retval.0 = phi i16 [ 32767, %if.then ], [ %conv7, %if.else ], !id !61, !id.28 !61
Instruction type: 11
Instruction:   %conv = sext i16 %b to i32, !dbg !34, !id !36, !id.30 !36
Instruction type: 11
Instruction:   %cmp = icmp eq i32 %conv, -32768, !dbg !37, !id !38, !id.31 !38
Instruction type: 11
Instruction:   %conv2 = sext i16 %a to i32, !dbg !41, !id !42, !id.33 !42
Instruction type: 11
Instruction:   %cmp3 = icmp eq i32 %conv2, -32768, !dbg !43, !id !44, !id.34 !44
Instruction type: 11
Instruction:   %conv5 = sext i16 %a to i64, !dbg !49, !id !51, !id.37 !51
Instruction type: 11
Instruction:   %conv6 = sext i16 %b to i64, !dbg !52, !id !53, !id.38 !53
Instruction type: 11
Instruction:   %mul = mul nsw i64 %conv5, %conv6, !dbg !54, !id !55, !id.39 !55
Instruction type: 11
Instruction:   %add = add nsw i64 %mul, 16384, !dbg !56, !id !57, !id.40 !57
Instruction type: 11
Instruction:   %shr = ashr i64 %add, 15, !dbg !58, !id !59, !id.41 !59
Instruction type: 11
Instruction:   %and = and i64 %shr, 65535, !dbg !60, !id !61, !id.42 !61
Instruction type: 11
Instruction:   %conv7 = trunc i64 %and to i16, !dbg !62, !id !63, !id.43 !63
Instruction type: 11
Instruction:   %retval.0 = phi i16 [ 32767, %if.then ], [ %conv7, %if.else ], !id !66, !id.45 !66
Instruction type: 11
Instruction:   %conv = sext i16 %a to i32, !dbg !34, !id !35, !id.47 !35
Instruction type: 11
Instruction:   %cmp = icmp slt i32 %conv, 0, !dbg !36, !id !37, !id.48 !37
Instruction type: 11
Instruction:   %conv2 = sext i16 %a to i32, !dbg !39, !id !40, !id.50 !40
Instruction type: 11
Instruction:   %cmp3 = icmp eq i32 %conv2, -32768, !dbg !41, !id !42, !id.51 !42
Instruction type: 11
Instruction:   %conv6 = sext i16 %a to i32, !dbg !45, !id !46, !id.54 !46
Instruction type: 11
Instruction:   %sub = sub nsw i32 0, %conv6, !dbg !47, !id !48, !id.55 !48
Instruction type: 11
Instruction:   %cond = phi i32 [ 32767, %cond.true5 ], [ %sub, %cond.false ], !dbg !39, !id !50, !id.57 !50
Instruction type: 11
Instruction:   %conv8 = sext i16 %a to i32, !dbg !52, !id !53, !id.59 !53
Instruction type: 11
Instruction:   %cond10 = phi i32 [ %cond, %cond.end ], [ %conv8, %cond.false7 ], !dbg !34, !id !55, !id.61 !55
Instruction type: 11
Instruction:   %conv11 = trunc i32 %cond10 to i16, !dbg !34, !id !56, !id.62 !56
Instruction type: 11
Instruction:   %cmp = icmp slt i64 %a, 0, !dbg !31, !id !33, !id.64 !33
Instruction type: 11
Instruction:   %cmp1 = icmp sle i64 %a, -1073741824, !dbg !36, !id !39, !id.66 !39
Instruction type: 11
Instruction:   %neg = xor i64 %a, -1, !dbg !44, !id !45, !id.69 !45
Instruction type: 11
Instruction:   %a.addr.0 = phi i64 [ %neg, %if.end ], [ %a, %entry ], !id !48, !id.71 !48
Instruction type: 11
Instruction:   %and = and i64 %a.addr.0, 4294901760, !dbg !49, !id !50, !id.72 !50
Instruction type: 11
Instruction:   %tobool = icmp ne i64 %and, 0, !dbg !49, !id !51, !id.73 !51
Instruction type: 11
Instruction:   %and4 = and i64 %a.addr.0, 4278190080, !dbg !54, !id !55, !id.75 !55
Instruction type: 11
Instruction:   %tobool5 = icmp ne i64 %and4, 0, !dbg !54, !id !56, !id.76 !56
Instruction type: 11
Instruction:   %shr = ashr i64 %a.addr.0, 24, !dbg !59, !id !60, !id.78 !60
Instruction type: 11
Instruction:   %and7 = and i64 255, %shr, !dbg !61, !id !62, !id.79 !62
Instruction type: 11
Instruction:   %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @gsm_norm.bitoff, i64 0, i64 %and7, !dbg !63, !id !64, !id.80 !64
Instruction type: 15
Instruction:   %0 = load i8, i8* %arrayidx, align 1, !dbg !63, !id !65, !id.81 !65
Instruction type: 11
Instruction:   %conv = zext i8 %0 to i32, !dbg !63, !id !66, !id.82 !66
Instruction type: 11
Instruction:   %add = add nsw i32 -1, %conv, !dbg !67, !id !68, !id.83 !68
Instruction type: 11
Instruction:   %shr8 = ashr i64 %a.addr.0, 16, !dbg !70, !id !71, !id.85 !71
Instruction type: 11
Instruction:   %and9 = and i64 255, %shr8, !dbg !72, !id !73, !id.86 !73
Instruction type: 11
Instruction:   %arrayidx10 = getelementptr inbounds [256 x i8], [256 x i8]* @gsm_norm.bitoff, i64 0, i64 %and9, !dbg !74, !id !75, !id.87 !75
Instruction type: 15
Instruction:   %1 = load i8, i8* %arrayidx10, align 1, !dbg !74, !id !76, !id.88 !76
Instruction type: 11
Instruction:   %conv11 = zext i8 %1 to i32, !dbg !74, !id !77, !id.89 !77
Instruction type: 11
Instruction:   %add12 = add nsw i32 7, %conv11, !dbg !78, !id !79, !id.90 !79
Instruction type: 11
Instruction:   %cond = phi i32 [ %add, %cond.true6 ], [ %add12, %cond.false ], !dbg !57, !id !81, !id.92 !81
Instruction type: 11
Instruction:   %and14 = and i64 %a.addr.0, 65280, !dbg !83, !id !84, !id.94 !84
Instruction type: 11
Instruction:   %tobool15 = icmp ne i64 %and14, 0, !dbg !83, !id !85, !id.95 !85
Instruction type: 11
Instruction:   %shr17 = ashr i64 %a.addr.0, 8, !dbg !88, !id !89, !id.97 !89
Instruction type: 11
Instruction:   %and18 = and i64 255, %shr17, !dbg !90, !id !91, !id.98 !91
Instruction type: 11
Instruction:   %arrayidx19 = getelementptr inbounds [256 x i8], [256 x i8]* @gsm_norm.bitoff, i64 0, i64 %and18, !dbg !92, !id !93, !id.99 !93
Instruction type: 15
Instruction:   %2 = load i8, i8* %arrayidx19, align 1, !dbg !92, !id !94, !id.100 !94
Instruction type: 11
Instruction:   %conv20 = zext i8 %2 to i32, !dbg !92, !id !95, !id.101 !95
Instruction type: 11
Instruction:   %add21 = add nsw i32 15, %conv20, !dbg !96, !id !97, !id.102 !97
Instruction type: 11
Instruction:   %and23 = and i64 255, %a.addr.0, !dbg !99, !id !100, !id.104 !100
Instruction type: 11
Instruction:   %arrayidx24 = getelementptr inbounds [256 x i8], [256 x i8]* @gsm_norm.bitoff, i64 0, i64 %and23, !dbg !101, !id !102, !id.105 !102
Instruction type: 15
Instruction:   %3 = load i8, i8* %arrayidx24, align 1, !dbg !101, !id !103, !id.106 !103
Instruction type: 11
Instruction:   %conv25 = zext i8 %3 to i32, !dbg !101, !id !104, !id.107 !104
Instruction type: 11
Instruction:   %add26 = add nsw i32 23, %conv25, !dbg !105, !id !106, !id.108 !106
Instruction type: 11
Instruction:   %cond28 = phi i32 [ %add21, %cond.true16 ], [ %add26, %cond.false22 ], !dbg !86, !id !108, !id.110 !108
Instruction type: 11
Instruction:   %cond30 = phi i32 [ %cond, %cond.end ], [ %cond28, %cond.end27 ], !dbg !52, !id !110, !id.112 !110
Instruction type: 11
Instruction:   %conv31 = trunc i32 %cond30 to i16, !dbg !52, !id !111, !id.113 !111
Instruction type: 11
Instruction:   %retval.0 = phi i16 [ 0, %if.then2 ], [ %conv31, %cond.end29 ], !id !114, !id.115 !114
Instruction type: 11
Instruction:   %conv = sext i16 %num to i64, !dbg !34, !id !35, !id.117 !35
Instruction type: 11
Instruction:   %conv1 = sext i16 %denum to i64, !dbg !36, !id !37, !id.118 !37
Instruction type: 11
Instruction:   %conv2 = sext i16 %num to i32, !dbg !38, !id !40, !id.119 !40
Instruction type: 11
Instruction:   %cmp = icmp eq i32 %conv2, 0, !dbg !41, !id !42, !id.120 !42
Instruction type: 11
Instruction:   %div.0 = phi i16 [ 0, %gsm_div_label0 ], [ %div.1, %if.end8 ], !id !52, !id.125 !52
Instruction type: 11
Instruction:   %L_num.0 = phi i64 [ %conv, %gsm_div_label0 ], [ %L_num.1, %if.end8 ], !id !53, !id.126 !53
Instruction type: 11
Instruction:   %k.0 = phi i32 [ 15, %gsm_div_label0 ], [ %dec, %if.end8 ], !id !54, !id.127 !54
Instruction type: 11
Instruction:   %dec = add nsw i32 %k.0, -1, !dbg !55, !id !56, !id.128 !56
Instruction type: 11
Instruction:   %tobool = icmp ne i32 %k.0, 0, !dbg !49, !id !57, !id.129 !57
Instruction type: 11
Instruction:   %conv3 = sext i16 %div.0 to i32, !dbg !59, !id !61, !id.131 !61
Instruction type: 11
Instruction:   %shl = shl i32 %conv3, 1, !dbg !59, !id !62, !id.132 !62
Instruction type: 11
Instruction:   %conv4 = trunc i32 %shl to i16, !dbg !59, !id !63, !id.133 !63
Instruction type: 11
Instruction:   %shl5 = shl i64 %L_num.0, 1, !dbg !64, !id !65, !id.134 !65
Instruction type: 11
Instruction:   %cmp6 = icmp sge i64 %shl5, %conv1, !dbg !66, !id !68, !id.135 !68
Instruction type: 11
Instruction:   %sub = sub nsw i64 %shl5, %conv1, !dbg !71, !id !73, !id.137 !73
Instruction type: 11
Instruction:   %inc = add i16 %conv4, 1, !dbg !74, !id !75, !id.138 !75
Instruction type: 11
Instruction:   %div.1 = phi i16 [ %inc, %if.then7 ], [ %conv4, %while.body ], !id !78, !id.140 !78
Instruction type: 11
Instruction:   %L_num.1 = phi i64 [ %sub, %if.then7 ], [ %shl5, %while.body ], !id !79, !id.141 !79
Instruction type: 11
Instruction:   %div.0.lcssa = phi i16 [ %div.0, %while.cond ], !id !82, !id.143 !82
Instruction type: 11
Instruction:   %retval.0 = phi i16 [ 0, %if.then ], [ %div.0.lcssa, %while.end ], !id !85, !id.145 !85
Instruction type: 11
Instruction:   %L_ACF = alloca [9 x i64], align 8, !id !39, !id.147 !39
Instruction type: 15
Array type found: 15
Instruction:   %0 = bitcast [9 x i64]* %L_ACF to i8*, !dbg !40, !id !41, !id.148 !41
Instruction type: 15
Instruction:   %arraydecay = getelementptr inbounds [9 x i64], [9 x i64]* %L_ACF, i32 0, i32 0, !dbg !42, !id !43, !id.149 !43
Instruction type: 15
Instruction:   %arraydecay1 = getelementptr inbounds [9 x i64], [9 x i64]* %L_ACF, i32 0, i32 0, !dbg !46, !id !47, !id.151 !47
Instruction type: 15
Instruction:   %1 = bitcast [9 x i64]* %L_ACF to i8*, !dbg !54, !id !55, !id.155 !55
Instruction type: 15
Instruction:   %indvars.iv6 = phi i64 [ %indvars.iv.next7, %for.inc ], [ 0, %Autocorrelation_label0 ], !id !42, !id.159 !42
Instruction type: 11
Instruction:   %smax.0 = phi i16 [ 0, %Autocorrelation_label0 ], [ %smax.1, %for.inc ], !id !43, !id.160 !43
Instruction type: 11
Instruction:   %exitcond8 = icmp ne i64 %indvars.iv6, 160, !dbg !44, !id !46, !id.161 !46
Instruction type: 11
Instruction:   %arrayidx = getelementptr inbounds i16, i16* %s, i64 %indvars.iv6, !dbg !49, !id !51, !id.163 !51
Instruction type: 15
Instruction:   %0 = load i16, i16* %arrayidx, align 2, !dbg !49, !id !52, !id.164 !52
Instruction type: 11
Instruction:   %call = call signext i16 @gsm_abs(i16 signext %0), !dbg !53, !id !54, !id.165 !54
Instruction type: 11
Instruction:   %conv = sext i16 %call to i32, !dbg !55, !id !57, !id.166 !57
Instruction type: 11
Instruction:   %conv1 = sext i16 %smax.0 to i32, !dbg !58, !id !59, !id.167 !59
Instruction type: 11
Instruction:   %cmp2 = icmp sgt i32 %conv, %conv1, !dbg !60, !id !61, !id.168 !61
Instruction type: 11
Instruction:   %smax.1 = phi i16 [ %call, %if.then ], [ %smax.0, %for.body ], !id !66, !id.171 !66
Instruction type: 11
Instruction:   %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1, !dbg !69, !id !70, !id.173 !70
Instruction type: 11
Instruction:   %smax.0.lcssa = phi i16 [ %smax.0, %for.cond ], !id !74, !id.175 !74
Instruction type: 11
Instruction:   %conv3 = sext i16 %smax.0.lcssa to i32, !dbg !75, !id !77, !id.176 !77
Instruction type: 11
Instruction:   %cmp4 = icmp eq i32 %conv3, 0, !dbg !78, !id !79, !id.177 !79
Instruction type: 11
Instruction:   %conv6 = sext i16 %smax.0.lcssa to i64, !dbg !84, !id !85, !id.180 !85
Instruction type: 11
Instruction:   %shl = shl i64 %conv6, 16, !dbg !86, !id !87, !id.181 !87
Instruction type: 11
Instruction:   %call7 = call signext i16 @gsm_norm(i64 %shl), !dbg !88, !id !89, !id.182 !89
Instruction type: 11
Instruction:   %conv8 = sext i16 %call7 to i32, !dbg !88, !id !90, !id.183 !90
Instruction type: 11
Instruction:   %sub = sub nsw i32 4, %conv8, !dbg !91, !id !92, !id.184 !92
Instruction type: 11
Instruction:   %conv9 = trunc i32 %sub to i16, !dbg !93, !id !94, !id.185 !94
Instruction type: 11
Instruction:   %scalauto.0 = phi i16 [ 0, %if.then5 ], [ %conv9, %if.else ], !id !96, !id.187 !96
Instruction type: 11
Instruction:   %conv11 = sext i16 %scalauto.0 to i32, !dbg !97, !id !99, !id.188 !99
Instruction type: 11
Instruction:   %cmp12 = icmp sgt i32 %conv11, 0, !dbg !100, !id !101, !id.189 !101
Instruction type: 11
Instruction:   %conv14 = sext i16 %scalauto.0 to i32, !dbg !104, !id !105, !id.191 !105
Instruction type: 11
Instruction:   %cmp15 = icmp sle i32 %conv14, 4, !dbg !106, !id !107, !id.192 !107
Instruction type: 11
Instruction:   %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc29 ], [ 0, %VITIS_LOOP_64_1 ], !id !116, !id.196 !116
Instruction type: 11
Instruction:   %exitcond5 = icmp ne i64 %indvars.iv3, 160, !dbg !117, !id !119, !id.197 !119
Instruction type: 11
Instruction:   %arrayidx22 = getelementptr inbounds i16, i16* %s, i64 %indvars.iv3, !dbg !122, !id !124, !id.199 !124
Instruction type: 15
Instruction:   %1 = load i16, i16* %arrayidx22, align 2, !dbg !122, !id !125, !id.200 !125
Instruction type: 11
Instruction:   %conv23 = sext i16 %scalauto.0 to i32, !dbg !126, !id !127, !id.201 !127
Instruction type: 11
Instruction:   %sub24 = sub nsw i32 %conv23, 1, !dbg !128, !id !129, !id.202 !129
Instruction type: 11
Instruction:   %shr = ashr i32 16384, %sub24, !dbg !130, !id !131, !id.203 !131
Instruction type: 11
Instruction:   %conv25 = trunc i32 %shr to i16, !dbg !132, !id !133, !id.204 !133
Instruction type: 11
Instruction:   %call26 = call signext i16 @gsm_mult_r(i16 signext %1, i16 signext %conv25), !dbg !134, !id !135, !id.205 !135
Instruction type: 11
Instruction:   %arrayidx28 = getelementptr inbounds i16, i16* %s, i64 %indvars.iv3, !dbg !136, !id !137, !id.206 !137
Instruction type: 15
Instruction:   %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !142, !id !143, !id.209 !143
Instruction type: 11
Instruction:   %2 = load i16, i16* %s, align 2, !dbg !149, !id !150, !id.212 !150
Instruction type: 11
Instruction:   %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc38 ], [ 8, %VITIS_LOOP_76_2 ], !id !156, !id.215 !156
Instruction type: 11
Instruction:   %cmp34 = icmp sge i64 %indvars.iv1, 0, !dbg !157, !id !159, !id.216 !159
Instruction type: 11
Instruction:   %arrayidx37 = getelementptr inbounds i64, i64* %L_ACF, i64 %indvars.iv1, !dbg !162, !id !164, !id.218 !164
Instruction type: 15
Instruction:   %indvars.iv.next2 = add nsw i64 %indvars.iv1, -1, !dbg !169, !id !170, !id.221 !170
Instruction type: 11
Instruction:   %conv40 = sext i16 %2 to i64, !dbg !174, !id !175, !id.223 !175
Instruction type: 11
Instruction:   %arrayidx41 = getelementptr inbounds i16, i16* %s, i64 0, !dbg !176, !id !177, !id.224 !177
Instruction type: 15
Instruction:   %3 = load i16, i16* %arrayidx41, align 2, !dbg !176, !id !178, !id.225 !178
Instruction type: 11
Instruction:   %conv42 = sext i16 %3 to i64, !dbg !176, !id !179, !id.226 !179
Instruction type: 11
Instruction:   %mul = mul nsw i64 %conv40, %conv42, !dbg !180, !id !181, !id.227 !181
Instruction type: 11
Instruction:   %arrayidx43 = getelementptr inbounds i64, i64* %L_ACF, i64 0, !dbg !182, !id !183, !id.228 !183
Instruction type: 15
Instruction:   %4 = load i64, i64* %arrayidx43, align 8, !dbg !184, !id !185, !id.229 !185
Instruction type: 11
Instruction:   %add = add nsw i64 %4, %mul, !dbg !184, !id !186, !id.230 !186
Instruction type: 11
Instruction:   %incdec.ptr = getelementptr inbounds i16, i16* %s, i32 1, !dbg !188, !id !189, !id.232 !189
Instruction type: 15
Instruction:   %5 = load i16, i16* %incdec.ptr, align 2, !dbg !190, !id !191, !id.233 !191
Instruction type: 11
Instruction:   %conv44 = sext i16 %5 to i64, !dbg !192, !id !193, !id.234 !193
Instruction type: 11
Instruction:   %arrayidx45 = getelementptr inbounds i16, i16* %incdec.ptr, i64 0, !dbg !194, !id !195, !id.235 !195
Instruction type: 15
Instruction:   %6 = load i16, i16* %arrayidx45, align 2, !dbg !194, !id !196, !id.236 !196
Instruction type: 11
Instruction:   %conv46 = sext i16 %6 to i64, !dbg !194, !id !197, !id.237 !197
Instruction type: 11
Instruction:   %mul47 = mul nsw i64 %conv44, %conv46, !dbg !198, !id !199, !id.238 !199
Instruction type: 11
Instruction:   %arrayidx48 = getelementptr inbounds i64, i64* %L_ACF, i64 0, !dbg !200, !id !201, !id.239 !201
Instruction type: 15
Instruction:   %7 = load i64, i64* %arrayidx48, align 8, !dbg !202, !id !203, !id.240 !203
Instruction type: 11
Instruction:   %add49 = add nsw i64 %7, %mul47, !dbg !202, !id !204, !id.241 !204
Instruction type: 11
Instruction:   %conv50 = sext i16 %5 to i64, !dbg !206, !id !207, !id.243 !207
Instruction type: 11
Instruction:   %arrayidx51 = getelementptr inbounds i16, i16* %incdec.ptr, i64 -1, !dbg !208, !id !209, !id.244 !209
Instruction type: 15
Instruction:   %8 = load i16, i16* %arrayidx51, align 2, !dbg !208, !id !210, !id.245 !210
Instruction type: 11
Instruction:   %conv52 = sext i16 %8 to i64, !dbg !208, !id !211, !id.246 !211
Instruction type: 11
Instruction:   %mul53 = mul nsw i64 %conv50, %conv52, !dbg !212, !id !213, !id.247 !213
Instruction type: 11
Instruction:   %arrayidx54 = getelementptr inbounds i64, i64* %L_ACF, i64 1, !dbg !214, !id !215, !id.248 !215
Instruction type: 15
Instruction:   %9 = load i64, i64* %arrayidx54, align 8, !dbg !216, !id !217, !id.249 !217
Instruction type: 11
Instruction:   %add55 = add nsw i64 %9, %mul53, !dbg !216, !id !218, !id.250 !218
Instruction type: 11
Instruction:   %incdec.ptr56 = getelementptr inbounds i16, i16* %incdec.ptr, i32 1, !dbg !220, !id !221, !id.252 !221
Instruction type: 15
Instruction:   %10 = load i16, i16* %incdec.ptr56, align 2, !dbg !222, !id !223, !id.253 !223
Instruction type: 11
Instruction:   %conv57 = sext i16 %10 to i64, !dbg !224, !id !225, !id.254 !225
Instruction type: 11
Instruction:   %arrayidx58 = getelementptr inbounds i16, i16* %incdec.ptr56, i64 0, !dbg !226, !id !227, !id.255 !227
Instruction type: 15
Instruction:   %11 = load i16, i16* %arrayidx58, align 2, !dbg !226, !id !228, !id.256 !228
Instruction type: 11
Instruction:   %conv59 = sext i16 %11 to i64, !dbg !226, !id !229, !id.257 !229
Instruction type: 11
Instruction:   %mul60 = mul nsw i64 %conv57, %conv59, !dbg !230, !id !231, !id.258 !231
Instruction type: 11
Instruction:   %arrayidx61 = getelementptr inbounds i64, i64* %L_ACF, i64 0, !dbg !232, !id !233, !id.259 !233
Instruction type: 15
Instruction:   %12 = load i64, i64* %arrayidx61, align 8, !dbg !234, !id !235, !id.260 !235
Instruction type: 11
Instruction:   %add62 = add nsw i64 %12, %mul60, !dbg !234, !id !236, !id.261 !236
Instruction type: 11
Instruction:   %conv63 = sext i16 %10 to i64, !dbg !238, !id !239, !id.263 !239
Instruction type: 11
Instruction:   %arrayidx64 = getelementptr inbounds i16, i16* %incdec.ptr56, i64 -1, !dbg !240, !id !241, !id.264 !241
Instruction type: 15
Instruction:   %13 = load i16, i16* %arrayidx64, align 2, !dbg !240, !id !242, !id.265 !242
Instruction type: 11
Instruction:   %conv65 = sext i16 %13 to i64, !dbg !240, !id !243, !id.266 !243
Instruction type: 11
Instruction:   %mul66 = mul nsw i64 %conv63, %conv65, !dbg !244, !id !245, !id.267 !245
Instruction type: 11
Instruction:   %arrayidx67 = getelementptr inbounds i64, i64* %L_ACF, i64 1, !dbg !246, !id !247, !id.268 !247
Instruction type: 15
Instruction:   %14 = load i64, i64* %arrayidx67, align 8, !dbg !248, !id !249, !id.269 !249
Instruction type: 11
Instruction:   %add68 = add nsw i64 %14, %mul66, !dbg !248, !id !250, !id.270 !250
Instruction type: 11
Instruction:   %conv69 = sext i16 %10 to i64, !dbg !252, !id !253, !id.272 !253
Instruction type: 11
Instruction:   %arrayidx70 = getelementptr inbounds i16, i16* %incdec.ptr56, i64 -2, !dbg !254, !id !255, !id.273 !255
Instruction type: 15
Instruction:   %15 = load i16, i16* %arrayidx70, align 2, !dbg !254, !id !256, !id.274 !256
Instruction type: 11
Instruction:   %conv71 = sext i16 %15 to i64, !dbg !254, !id !257, !id.275 !257
Instruction type: 11
Instruction:   %mul72 = mul nsw i64 %conv69, %conv71, !dbg !258, !id !259, !id.276 !259
Instruction type: 11
Instruction:   %arrayidx73 = getelementptr inbounds i64, i64* %L_ACF, i64 2, !dbg !260, !id !261, !id.277 !261
Instruction type: 15
Instruction:   %16 = load i64, i64* %arrayidx73, align 8, !dbg !262, !id !263, !id.278 !263
Instruction type: 11
Instruction:   %add74 = add nsw i64 %16, %mul72, !dbg !262, !id !264, !id.279 !264
Instruction type: 11
Instruction:   %incdec.ptr75 = getelementptr inbounds i16, i16* %incdec.ptr56, i32 1, !dbg !266, !id !267, !id.281 !267
Instruction type: 15
Instruction:   %17 = load i16, i16* %incdec.ptr75, align 2, !dbg !268, !id !269, !id.282 !269
Instruction type: 11
Instruction:   %conv76 = sext i16 %17 to i64, !dbg !270, !id !271, !id.283 !271
Instruction type: 11
Instruction:   %arrayidx77 = getelementptr inbounds i16, i16* %incdec.ptr75, i64 0, !dbg !272, !id !273, !id.284 !273
Instruction type: 15
Instruction:   %18 = load i16, i16* %arrayidx77, align 2, !dbg !272, !id !274, !id.285 !274
Instruction type: 11
Instruction:   %conv78 = sext i16 %18 to i64, !dbg !272, !id !275, !id.286 !275
Instruction type: 11
Instruction:   %mul79 = mul nsw i64 %conv76, %conv78, !dbg !276, !id !277, !id.287 !277
Instruction type: 11
Instruction:   %arrayidx80 = getelementptr inbounds i64, i64* %L_ACF, i64 0, !dbg !278, !id !279, !id.288 !279
Instruction type: 15
Instruction:   %19 = load i64, i64* %arrayidx80, align 8, !dbg !280, !id !281, !id.289 !281
Instruction type: 11
Instruction:   %add81 = add nsw i64 %19, %mul79, !dbg !280, !id !282, !id.290 !282
Instruction type: 11
Instruction:   %conv82 = sext i16 %17 to i64, !dbg !284, !id !285, !id.292 !285
Instruction type: 11
Instruction:   %arrayidx83 = getelementptr inbounds i16, i16* %incdec.ptr75, i64 -1, !dbg !286, !id !287, !id.293 !287
Instruction type: 15
Instruction:   %20 = load i16, i16* %arrayidx83, align 2, !dbg !286, !id !288, !id.294 !288
Instruction type: 11
Instruction:   %conv84 = sext i16 %20 to i64, !dbg !286, !id !289, !id.295 !289
Instruction type: 11
Instruction:   %mul85 = mul nsw i64 %conv82, %conv84, !dbg !290, !id !291, !id.296 !291
Instruction type: 11
Instruction:   %arrayidx86 = getelementptr inbounds i64, i64* %L_ACF, i64 1, !dbg !292, !id !293, !id.297 !293
Instruction type: 15
Instruction:   %21 = load i64, i64* %arrayidx86, align 8, !dbg !294, !id !295, !id.298 !295
Instruction type: 11
Instruction:   %add87 = add nsw i64 %21, %mul85, !dbg !294, !id !296, !id.299 !296
Instruction type: 11
Instruction:   %conv88 = sext i16 %17 to i64, !dbg !298, !id !299, !id.301 !299
Instruction type: 11
Instruction:   %arrayidx89 = getelementptr inbounds i16, i16* %incdec.ptr75, i64 -2, !dbg !300, !id !301, !id.302 !301
Instruction type: 15
Instruction:   %22 = load i16, i16* %arrayidx89, align 2, !dbg !300, !id !302, !id.303 !302
Instruction type: 11
Instruction:   %conv90 = sext i16 %22 to i64, !dbg !300, !id !303, !id.304 !303
Instruction type: 11
Instruction:   %mul91 = mul nsw i64 %conv88, %conv90, !dbg !304, !id !305, !id.305 !305
Instruction type: 11
Instruction:   %arrayidx92 = getelementptr inbounds i64, i64* %L_ACF, i64 2, !dbg !306, !id !307, !id.306 !307
Instruction type: 15
Instruction:   %23 = load i64, i64* %arrayidx92, align 8, !dbg !308, !id !309, !id.307 !309
Instruction type: 11
Instruction:   %add93 = add nsw i64 %23, %mul91, !dbg !308, !id !310, !id.308 !310
Instruction type: 11
Instruction:   %conv94 = sext i16 %17 to i64, !dbg !312, !id !313, !id.310 !313
Instruction type: 11
Instruction:   %arrayidx95 = getelementptr inbounds i16, i16* %incdec.ptr75, i64 -3, !dbg !314, !id !315, !id.311 !315
Instruction type: 15
Instruction:   %24 = load i16, i16* %arrayidx95, align 2, !dbg !314, !id !316, !id.312 !316
Instruction type: 11
Instruction:   %conv96 = sext i16 %24 to i64, !dbg !314, !id !317, !id.313 !317
Instruction type: 11
Instruction:   %mul97 = mul nsw i64 %conv94, %conv96, !dbg !318, !id !319, !id.314 !319
Instruction type: 11
Instruction:   %arrayidx98 = getelementptr inbounds i64, i64* %L_ACF, i64 3, !dbg !320, !id !321, !id.315 !321
Instruction type: 15
Instruction:   %25 = load i64, i64* %arrayidx98, align 8, !dbg !322, !id !323, !id.316 !323
Instruction type: 11
Instruction:   %add99 = add nsw i64 %25, %mul97, !dbg !322, !id !324, !id.317 !324
Instruction type: 11
Instruction:   %incdec.ptr100 = getelementptr inbounds i16, i16* %incdec.ptr75, i32 1, !dbg !326, !id !327, !id.319 !327
Instruction type: 15
Instruction:   %26 = load i16, i16* %incdec.ptr100, align 2, !dbg !328, !id !329, !id.320 !329
Instruction type: 11
Instruction:   %conv101 = sext i16 %26 to i64, !dbg !330, !id !331, !id.321 !331
Instruction type: 11
Instruction:   %arrayidx102 = getelementptr inbounds i16, i16* %incdec.ptr100, i64 0, !dbg !332, !id !333, !id.322 !333
Instruction type: 15
Instruction:   %27 = load i16, i16* %arrayidx102, align 2, !dbg !332, !id !334, !id.323 !334
Instruction type: 11
Instruction:   %conv103 = sext i16 %27 to i64, !dbg !332, !id !335, !id.324 !335
Instruction type: 11
Instruction:   %mul104 = mul nsw i64 %conv101, %conv103, !dbg !336, !id !337, !id.325 !337
Instruction type: 11
Instruction:   %arrayidx105 = getelementptr inbounds i64, i64* %L_ACF, i64 0, !dbg !338, !id !339, !id.326 !339
Instruction type: 15
Instruction:   %28 = load i64, i64* %arrayidx105, align 8, !dbg !340, !id !341, !id.327 !341
Instruction type: 11
Instruction:   %add106 = add nsw i64 %28, %mul104, !dbg !340, !id !342, !id.328 !342
Instruction type: 11
Instruction:   %conv107 = sext i16 %26 to i64, !dbg !344, !id !345, !id.330 !345
Instruction type: 11
Instruction:   %arrayidx108 = getelementptr inbounds i16, i16* %incdec.ptr100, i64 -1, !dbg !346, !id !347, !id.331 !347
Instruction type: 15
Instruction:   %29 = load i16, i16* %arrayidx108, align 2, !dbg !346, !id !348, !id.332 !348
Instruction type: 11
Instruction:   %conv109 = sext i16 %29 to i64, !dbg !346, !id !349, !id.333 !349
Instruction type: 11
Instruction:   %mul110 = mul nsw i64 %conv107, %conv109, !dbg !350, !id !351, !id.334 !351
Instruction type: 11
Instruction:   %arrayidx111 = getelementptr inbounds i64, i64* %L_ACF, i64 1, !dbg !352, !id !353, !id.335 !353
Instruction type: 15
Instruction:   %30 = load i64, i64* %arrayidx111, align 8, !dbg !354, !id !355, !id.336 !355
Instruction type: 11
Instruction:   %add112 = add nsw i64 %30, %mul110, !dbg !354, !id !356, !id.337 !356
Instruction type: 11
Instruction:   %conv113 = sext i16 %26 to i64, !dbg !358, !id !359, !id.339 !359
Instruction type: 11
Instruction:   %arrayidx114 = getelementptr inbounds i16, i16* %incdec.ptr100, i64 -2, !dbg !360, !id !361, !id.340 !361
Instruction type: 15
Instruction:   %31 = load i16, i16* %arrayidx114, align 2, !dbg !360, !id !362, !id.341 !362
Instruction type: 11
Instruction:   %conv115 = sext i16 %31 to i64, !dbg !360, !id !363, !id.342 !363
Instruction type: 11
Instruction:   %mul116 = mul nsw i64 %conv113, %conv115, !dbg !364, !id !365, !id.343 !365
Instruction type: 11
Instruction:   %arrayidx117 = getelementptr inbounds i64, i64* %L_ACF, i64 2, !dbg !366, !id !367, !id.344 !367
Instruction type: 15
Instruction:   %32 = load i64, i64* %arrayidx117, align 8, !dbg !368, !id !369, !id.345 !369
Instruction type: 11
Instruction:   %add118 = add nsw i64 %32, %mul116, !dbg !368, !id !370, !id.346 !370
Instruction type: 11
Instruction:   %conv119 = sext i16 %26 to i64, !dbg !372, !id !373, !id.348 !373
Instruction type: 11
Instruction:   %arrayidx120 = getelementptr inbounds i16, i16* %incdec.ptr100, i64 -3, !dbg !374, !id !375, !id.349 !375
Instruction type: 15
Instruction:   %33 = load i16, i16* %arrayidx120, align 2, !dbg !374, !id !376, !id.350 !376
Instruction type: 11
Instruction:   %conv121 = sext i16 %33 to i64, !dbg !374, !id !377, !id.351 !377
Instruction type: 11
Instruction:   %mul122 = mul nsw i64 %conv119, %conv121, !dbg !378, !id !379, !id.352 !379
Instruction type: 11
Instruction:   %arrayidx123 = getelementptr inbounds i64, i64* %L_ACF, i64 3, !dbg !380, !id !381, !id.353 !381
Instruction type: 15
Instruction:   %34 = load i64, i64* %arrayidx123, align 8, !dbg !382, !id !383, !id.354 !383
Instruction type: 11
Instruction:   %add124 = add nsw i64 %34, %mul122, !dbg !382, !id !384, !id.355 !384
Instruction type: 11
Instruction:   %conv125 = sext i16 %26 to i64, !dbg !386, !id !387, !id.357 !387
Instruction type: 11
Instruction:   %arrayidx126 = getelementptr inbounds i16, i16* %incdec.ptr100, i64 -4, !dbg !388, !id !389, !id.358 !389
Instruction type: 15
Instruction:   %35 = load i16, i16* %arrayidx126, align 2, !dbg !388, !id !390, !id.359 !390
Instruction type: 11
Instruction:   %conv127 = sext i16 %35 to i64, !dbg !388, !id !391, !id.360 !391
Instruction type: 11
Instruction:   %mul128 = mul nsw i64 %conv125, %conv127, !dbg !392, !id !393, !id.361 !393
Instruction type: 11
Instruction:   %arrayidx129 = getelementptr inbounds i64, i64* %L_ACF, i64 4, !dbg !394, !id !395, !id.362 !395
Instruction type: 15
Instruction:   %36 = load i64, i64* %arrayidx129, align 8, !dbg !396, !id !397, !id.363 !397
Instruction type: 11
Instruction:   %add130 = add nsw i64 %36, %mul128, !dbg !396, !id !398, !id.364 !398
Instruction type: 11
Instruction:   %incdec.ptr131 = getelementptr inbounds i16, i16* %incdec.ptr100, i32 1, !dbg !400, !id !401, !id.366 !401
Instruction type: 15
Instruction:   %37 = load i16, i16* %incdec.ptr131, align 2, !dbg !402, !id !403, !id.367 !403
Instruction type: 11
Instruction:   %conv132 = sext i16 %37 to i64, !dbg !404, !id !405, !id.368 !405
Instruction type: 11
Instruction:   %arrayidx133 = getelementptr inbounds i16, i16* %incdec.ptr131, i64 0, !dbg !406, !id !407, !id.369 !407
Instruction type: 15
Instruction:   %38 = load i16, i16* %arrayidx133, align 2, !dbg !406, !id !408, !id.370 !408
Instruction type: 11
Instruction:   %conv134 = sext i16 %38 to i64, !dbg !406, !id !409, !id.371 !409
Instruction type: 11
Instruction:   %mul135 = mul nsw i64 %conv132, %conv134, !dbg !410, !id !411, !id.372 !411
Instruction type: 11
Instruction:   %arrayidx136 = getelementptr inbounds i64, i64* %L_ACF, i64 0, !dbg !412, !id !413, !id.373 !413
Instruction type: 15
Instruction:   %39 = load i64, i64* %arrayidx136, align 8, !dbg !414, !id !415, !id.374 !415
Instruction type: 11
Instruction:   %add137 = add nsw i64 %39, %mul135, !dbg !414, !id !416, !id.375 !416
Instruction type: 11
Instruction:   %conv138 = sext i16 %37 to i64, !dbg !418, !id !419, !id.377 !419
Instruction type: 11
Instruction:   %arrayidx139 = getelementptr inbounds i16, i16* %incdec.ptr131, i64 -1, !dbg !420, !id !421, !id.378 !421
Instruction type: 15
Instruction:   %40 = load i16, i16* %arrayidx139, align 2, !dbg !420, !id !422, !id.379 !422
Instruction type: 11
Instruction:   %conv140 = sext i16 %40 to i64, !dbg !420, !id !423, !id.380 !423
Instruction type: 11
Instruction:   %mul141 = mul nsw i64 %conv138, %conv140, !dbg !424, !id !425, !id.381 !425
Instruction type: 11
Instruction:   %arrayidx142 = getelementptr inbounds i64, i64* %L_ACF, i64 1, !dbg !426, !id !427, !id.382 !427
Instruction type: 15
Instruction:   %41 = load i64, i64* %arrayidx142, align 8, !dbg !428, !id !429, !id.383 !429
Instruction type: 11
Instruction:   %add143 = add nsw i64 %41, %mul141, !dbg !428, !id !430, !id.384 !430
Instruction type: 11
Instruction:   %conv144 = sext i16 %37 to i64, !dbg !432, !id !433, !id.386 !433
Instruction type: 11
Instruction:   %arrayidx145 = getelementptr inbounds i16, i16* %incdec.ptr131, i64 -2, !dbg !434, !id !435, !id.387 !435
Instruction type: 15
Instruction:   %42 = load i16, i16* %arrayidx145, align 2, !dbg !434, !id !436, !id.388 !436
Instruction type: 11
Instruction:   %conv146 = sext i16 %42 to i64, !dbg !434, !id !437, !id.389 !437
Instruction type: 11
Instruction:   %mul147 = mul nsw i64 %conv144, %conv146, !dbg !438, !id !439, !id.390 !439
Instruction type: 11
Instruction:   %arrayidx148 = getelementptr inbounds i64, i64* %L_ACF, i64 2, !dbg !440, !id !441, !id.391 !441
Instruction type: 15
Instruction:   %43 = load i64, i64* %arrayidx148, align 8, !dbg !442, !id !443, !id.392 !443
Instruction type: 11
Instruction:   %add149 = add nsw i64 %43, %mul147, !dbg !442, !id !444, !id.393 !444
Instruction type: 11
Instruction:   %conv150 = sext i16 %37 to i64, !dbg !446, !id !447, !id.395 !447
Instruction type: 11
Instruction:   %arrayidx151 = getelementptr inbounds i16, i16* %incdec.ptr131, i64 -3, !dbg !448, !id !449, !id.396 !449
Instruction type: 15
Instruction:   %44 = load i16, i16* %arrayidx151, align 2, !dbg !448, !id !450, !id.397 !450
Instruction type: 11
Instruction:   %conv152 = sext i16 %44 to i64, !dbg !448, !id !451, !id.398 !451
Instruction type: 11
Instruction:   %mul153 = mul nsw i64 %conv150, %conv152, !dbg !452, !id !453, !id.399 !453
Instruction type: 11
Instruction:   %arrayidx154 = getelementptr inbounds i64, i64* %L_ACF, i64 3, !dbg !454, !id !455, !id.400 !455
Instruction type: 15
Instruction:   %45 = load i64, i64* %arrayidx154, align 8, !dbg !456, !id !457, !id.401 !457
Instruction type: 11
Instruction:   %add155 = add nsw i64 %45, %mul153, !dbg !456, !id !458, !id.402 !458
Instruction type: 11
Instruction:   %conv156 = sext i16 %37 to i64, !dbg !460, !id !461, !id.404 !461
Instruction type: 11
Instruction:   %arrayidx157 = getelementptr inbounds i16, i16* %incdec.ptr131, i64 -4, !dbg !462, !id !463, !id.405 !463
Instruction type: 15
Instruction:   %46 = load i16, i16* %arrayidx157, align 2, !dbg !462, !id !464, !id.406 !464
Instruction type: 11
Instruction:   %conv158 = sext i16 %46 to i64, !dbg !462, !id !465, !id.407 !465
Instruction type: 11
Instruction:   %mul159 = mul nsw i64 %conv156, %conv158, !dbg !466, !id !467, !id.408 !467
Instruction type: 11
Instruction:   %arrayidx160 = getelementptr inbounds i64, i64* %L_ACF, i64 4, !dbg !468, !id !469, !id.409 !469
Instruction type: 15
Instruction:   %47 = load i64, i64* %arrayidx160, align 8, !dbg !470, !id !471, !id.410 !471
Instruction type: 11
Instruction:   %add161 = add nsw i64 %47, %mul159, !dbg !470, !id !472, !id.411 !472
Instruction type: 11
Instruction:   %conv162 = sext i16 %37 to i64, !dbg !474, !id !475, !id.413 !475
Instruction type: 11
Instruction:   %arrayidx163 = getelementptr inbounds i16, i16* %incdec.ptr131, i64 -5, !dbg !476, !id !477, !id.414 !477
Instruction type: 15
Instruction:   %48 = load i16, i16* %arrayidx163, align 2, !dbg !476, !id !478, !id.415 !478
Instruction type: 11
Instruction:   %conv164 = sext i16 %48 to i64, !dbg !476, !id !479, !id.416 !479
Instruction type: 11
Instruction:   %mul165 = mul nsw i64 %conv162, %conv164, !dbg !480, !id !481, !id.417 !481
Instruction type: 11
Instruction:   %arrayidx166 = getelementptr inbounds i64, i64* %L_ACF, i64 5, !dbg !482, !id !483, !id.418 !483
Instruction type: 15
Instruction:   %49 = load i64, i64* %arrayidx166, align 8, !dbg !484, !id !485, !id.419 !485
Instruction type: 11
Instruction:   %add167 = add nsw i64 %49, %mul165, !dbg !484, !id !486, !id.420 !486
Instruction type: 11
Instruction:   %incdec.ptr168 = getelementptr inbounds i16, i16* %incdec.ptr131, i32 1, !dbg !488, !id !489, !id.422 !489
Instruction type: 15
Instruction:   %50 = load i16, i16* %incdec.ptr168, align 2, !dbg !490, !id !491, !id.423 !491
Instruction type: 11
Instruction:   %conv169 = sext i16 %50 to i64, !dbg !492, !id !493, !id.424 !493
Instruction type: 11
Instruction:   %arrayidx170 = getelementptr inbounds i16, i16* %incdec.ptr168, i64 0, !dbg !494, !id !495, !id.425 !495
Instruction type: 15
Instruction:   %51 = load i16, i16* %arrayidx170, align 2, !dbg !494, !id !496, !id.426 !496
Instruction type: 11
Instruction:   %conv171 = sext i16 %51 to i64, !dbg !494, !id !497, !id.427 !497
Instruction type: 11
Instruction:   %mul172 = mul nsw i64 %conv169, %conv171, !dbg !498, !id !499, !id.428 !499
Instruction type: 11
Instruction:   %arrayidx173 = getelementptr inbounds i64, i64* %L_ACF, i64 0, !dbg !500, !id !501, !id.429 !501
Instruction type: 15
Instruction:   %52 = load i64, i64* %arrayidx173, align 8, !dbg !502, !id !503, !id.430 !503
Instruction type: 11
Instruction:   %add174 = add nsw i64 %52, %mul172, !dbg !502, !id !504, !id.431 !504
Instruction type: 11
Instruction:   %conv175 = sext i16 %50 to i64, !dbg !506, !id !507, !id.433 !507
Instruction type: 11
Instruction:   %arrayidx176 = getelementptr inbounds i16, i16* %incdec.ptr168, i64 -1, !dbg !508, !id !509, !id.434 !509
Instruction type: 15
Instruction:   %53 = load i16, i16* %arrayidx176, align 2, !dbg !508, !id !510, !id.435 !510
Instruction type: 11
Instruction:   %conv177 = sext i16 %53 to i64, !dbg !508, !id !511, !id.436 !511
Instruction type: 11
Instruction:   %mul178 = mul nsw i64 %conv175, %conv177, !dbg !512, !id !513, !id.437 !513
Instruction type: 11
Instruction:   %arrayidx179 = getelementptr inbounds i64, i64* %L_ACF, i64 1, !dbg !514, !id !515, !id.438 !515
Instruction type: 15
Instruction:   %54 = load i64, i64* %arrayidx179, align 8, !dbg !516, !id !517, !id.439 !517
Instruction type: 11
Instruction:   %add180 = add nsw i64 %54, %mul178, !dbg !516, !id !518, !id.440 !518
Instruction type: 11
Instruction:   %conv181 = sext i16 %50 to i64, !dbg !520, !id !521, !id.442 !521
Instruction type: 11
Instruction:   %arrayidx182 = getelementptr inbounds i16, i16* %incdec.ptr168, i64 -2, !dbg !522, !id !523, !id.443 !523
Instruction type: 15
Instruction:   %55 = load i16, i16* %arrayidx182, align 2, !dbg !522, !id !524, !id.444 !524
Instruction type: 11
Instruction:   %conv183 = sext i16 %55 to i64, !dbg !522, !id !525, !id.445 !525
Instruction type: 11
Instruction:   %mul184 = mul nsw i64 %conv181, %conv183, !dbg !526, !id !527, !id.446 !527
Instruction type: 11
Instruction:   %arrayidx185 = getelementptr inbounds i64, i64* %L_ACF, i64 2, !dbg !528, !id !529, !id.447 !529
Instruction type: 15
Instruction:   %56 = load i64, i64* %arrayidx185, align 8, !dbg !530, !id !531, !id.448 !531
Instruction type: 11
Instruction:   %add186 = add nsw i64 %56, %mul184, !dbg !530, !id !532, !id.449 !532
Instruction type: 11
Instruction:   %conv187 = sext i16 %50 to i64, !dbg !534, !id !535, !id.451 !535
Instruction type: 11
Instruction:   %arrayidx188 = getelementptr inbounds i16, i16* %incdec.ptr168, i64 -3, !dbg !536, !id !537, !id.452 !537
Instruction type: 15
Instruction:   %57 = load i16, i16* %arrayidx188, align 2, !dbg !536, !id !538, !id.453 !538
Instruction type: 11
Instruction:   %conv189 = sext i16 %57 to i64, !dbg !536, !id !539, !id.454 !539
Instruction type: 11
Instruction:   %mul190 = mul nsw i64 %conv187, %conv189, !dbg !540, !id !541, !id.455 !541
Instruction type: 11
Instruction:   %arrayidx191 = getelementptr inbounds i64, i64* %L_ACF, i64 3, !dbg !542, !id !543, !id.456 !543
Instruction type: 15
Instruction:   %58 = load i64, i64* %arrayidx191, align 8, !dbg !544, !id !545, !id.457 !545
Instruction type: 11
Instruction:   %add192 = add nsw i64 %58, %mul190, !dbg !544, !id !546, !id.458 !546
Instruction type: 11
Instruction:   %conv193 = sext i16 %50 to i64, !dbg !548, !id !549, !id.460 !549
Instruction type: 11
Instruction:   %arrayidx194 = getelementptr inbounds i16, i16* %incdec.ptr168, i64 -4, !dbg !550, !id !551, !id.461 !551
Instruction type: 15
Instruction:   %59 = load i16, i16* %arrayidx194, align 2, !dbg !550, !id !552, !id.462 !552
Instruction type: 11
Instruction:   %conv195 = sext i16 %59 to i64, !dbg !550, !id !553, !id.463 !553
Instruction type: 11
Instruction:   %mul196 = mul nsw i64 %conv193, %conv195, !dbg !554, !id !555, !id.464 !555
Instruction type: 11
Instruction:   %arrayidx197 = getelementptr inbounds i64, i64* %L_ACF, i64 4, !dbg !556, !id !557, !id.465 !557
Instruction type: 15
Instruction:   %60 = load i64, i64* %arrayidx197, align 8, !dbg !558, !id !559, !id.466 !559
Instruction type: 11
Instruction:   %add198 = add nsw i64 %60, %mul196, !dbg !558, !id !560, !id.467 !560
Instruction type: 11
Instruction:   %conv199 = sext i16 %50 to i64, !dbg !562, !id !563, !id.469 !563
Instruction type: 11
Instruction:   %arrayidx200 = getelementptr inbounds i16, i16* %incdec.ptr168, i64 -5, !dbg !564, !id !565, !id.470 !565
Instruction type: 15
Instruction:   %61 = load i16, i16* %arrayidx200, align 2, !dbg !564, !id !566, !id.471 !566
Instruction type: 11
Instruction:   %conv201 = sext i16 %61 to i64, !dbg !564, !id !567, !id.472 !567
Instruction type: 11
Instruction:   %mul202 = mul nsw i64 %conv199, %conv201, !dbg !568, !id !569, !id.473 !569
Instruction type: 11
Instruction:   %arrayidx203 = getelementptr inbounds i64, i64* %L_ACF, i64 5, !dbg !570, !id !571, !id.474 !571
Instruction type: 15
Instruction:   %62 = load i64, i64* %arrayidx203, align 8, !dbg !572, !id !573, !id.475 !573
Instruction type: 11
Instruction:   %add204 = add nsw i64 %62, %mul202, !dbg !572, !id !574, !id.476 !574
Instruction type: 11
Instruction:   %conv205 = sext i16 %50 to i64, !dbg !576, !id !577, !id.478 !577
Instruction type: 11
Instruction:   %arrayidx206 = getelementptr inbounds i16, i16* %incdec.ptr168, i64 -6, !dbg !578, !id !579, !id.479 !579
Instruction type: 15
Instruction:   %63 = load i16, i16* %arrayidx206, align 2, !dbg !578, !id !580, !id.480 !580
Instruction type: 11
Instruction:   %conv207 = sext i16 %63 to i64, !dbg !578, !id !581, !id.481 !581
Instruction type: 11
Instruction:   %mul208 = mul nsw i64 %conv205, %conv207, !dbg !582, !id !583, !id.482 !583
Instruction type: 11
Instruction:   %arrayidx209 = getelementptr inbounds i64, i64* %L_ACF, i64 6, !dbg !584, !id !585, !id.483 !585
Instruction type: 15
Instruction:   %64 = load i64, i64* %arrayidx209, align 8, !dbg !586, !id !587, !id.484 !587
Instruction type: 11
Instruction:   %add210 = add nsw i64 %64, %mul208, !dbg !586, !id !588, !id.485 !588
Instruction type: 11
Instruction:   %incdec.ptr211 = getelementptr inbounds i16, i16* %incdec.ptr168, i32 1, !dbg !590, !id !591, !id.487 !591
Instruction type: 15
Instruction:   %65 = load i16, i16* %incdec.ptr211, align 2, !dbg !592, !id !593, !id.488 !593
Instruction type: 11
Instruction:   %conv212 = sext i16 %65 to i64, !dbg !594, !id !595, !id.489 !595
Instruction type: 11
Instruction:   %arrayidx213 = getelementptr inbounds i16, i16* %incdec.ptr211, i64 0, !dbg !596, !id !597, !id.490 !597
Instruction type: 15
Instruction:   %66 = load i16, i16* %arrayidx213, align 2, !dbg !596, !id !598, !id.491 !598
Instruction type: 11
Instruction:   %conv214 = sext i16 %66 to i64, !dbg !596, !id !599, !id.492 !599
Instruction type: 11
Instruction:   %mul215 = mul nsw i64 %conv212, %conv214, !dbg !600, !id !601, !id.493 !601
Instruction type: 11
Instruction:   %arrayidx216 = getelementptr inbounds i64, i64* %L_ACF, i64 0, !dbg !602, !id !603, !id.494 !603
Instruction type: 15
Instruction:   %67 = load i64, i64* %arrayidx216, align 8, !dbg !604, !id !605, !id.495 !605
Instruction type: 11
Instruction:   %add217 = add nsw i64 %67, %mul215, !dbg !604, !id !606, !id.496 !606
Instruction type: 11
Instruction:   %conv218 = sext i16 %65 to i64, !dbg !608, !id !609, !id.498 !609
Instruction type: 11
Instruction:   %arrayidx219 = getelementptr inbounds i16, i16* %incdec.ptr211, i64 -1, !dbg !610, !id !611, !id.499 !611
Instruction type: 15
Instruction:   %68 = load i16, i16* %arrayidx219, align 2, !dbg !610, !id !612, !id.500 !612
Instruction type: 11
Instruction:   %conv220 = sext i16 %68 to i64, !dbg !610, !id !613, !id.501 !613
Instruction type: 11
Instruction:   %mul221 = mul nsw i64 %conv218, %conv220, !dbg !614, !id !615, !id.502 !615
Instruction type: 11
Instruction:   %arrayidx222 = getelementptr inbounds i64, i64* %L_ACF, i64 1, !dbg !616, !id !617, !id.503 !617
Instruction type: 15
Instruction:   %69 = load i64, i64* %arrayidx222, align 8, !dbg !618, !id !619, !id.504 !619
Instruction type: 11
Instruction:   %add223 = add nsw i64 %69, %mul221, !dbg !618, !id !620, !id.505 !620
Instruction type: 11
Instruction:   %conv224 = sext i16 %65 to i64, !dbg !622, !id !623, !id.507 !623
Instruction type: 11
Instruction:   %arrayidx225 = getelementptr inbounds i16, i16* %incdec.ptr211, i64 -2, !dbg !624, !id !625, !id.508 !625
Instruction type: 15
Instruction:   %70 = load i16, i16* %arrayidx225, align 2, !dbg !624, !id !626, !id.509 !626
Instruction type: 11
Instruction:   %conv226 = sext i16 %70 to i64, !dbg !624, !id !627, !id.510 !627
Instruction type: 11
Instruction:   %mul227 = mul nsw i64 %conv224, %conv226, !dbg !628, !id !629, !id.511 !629
Instruction type: 11
Instruction:   %arrayidx228 = getelementptr inbounds i64, i64* %L_ACF, i64 2, !dbg !630, !id !631, !id.512 !631
Instruction type: 15
Instruction:   %71 = load i64, i64* %arrayidx228, align 8, !dbg !632, !id !633, !id.513 !633
Instruction type: 11
Instruction:   %add229 = add nsw i64 %71, %mul227, !dbg !632, !id !634, !id.514 !634
Instruction type: 11
Instruction:   %conv230 = sext i16 %65 to i64, !dbg !636, !id !637, !id.516 !637
Instruction type: 11
Instruction:   %arrayidx231 = getelementptr inbounds i16, i16* %incdec.ptr211, i64 -3, !dbg !638, !id !639, !id.517 !639
Instruction type: 15
Instruction:   %72 = load i16, i16* %arrayidx231, align 2, !dbg !638, !id !640, !id.518 !640
Instruction type: 11
Instruction:   %conv232 = sext i16 %72 to i64, !dbg !638, !id !641, !id.519 !641
Instruction type: 11
Instruction:   %mul233 = mul nsw i64 %conv230, %conv232, !dbg !642, !id !643, !id.520 !643
Instruction type: 11
Instruction:   %arrayidx234 = getelementptr inbounds i64, i64* %L_ACF, i64 3, !dbg !644, !id !645, !id.521 !645
Instruction type: 15
Instruction:   %73 = load i64, i64* %arrayidx234, align 8, !dbg !646, !id !647, !id.522 !647
Instruction type: 11
Instruction:   %add235 = add nsw i64 %73, %mul233, !dbg !646, !id !648, !id.523 !648
Instruction type: 11
Instruction:   %conv236 = sext i16 %65 to i64, !dbg !650, !id !651, !id.525 !651
Instruction type: 11
Instruction:   %arrayidx237 = getelementptr inbounds i16, i16* %incdec.ptr211, i64 -4, !dbg !652, !id !653, !id.526 !653
Instruction type: 15
Instruction:   %74 = load i16, i16* %arrayidx237, align 2, !dbg !652, !id !654, !id.527 !654
Instruction type: 11
Instruction:   %conv238 = sext i16 %74 to i64, !dbg !652, !id !655, !id.528 !655
Instruction type: 11
Instruction:   %mul239 = mul nsw i64 %conv236, %conv238, !dbg !656, !id !657, !id.529 !657
Instruction type: 11
Instruction:   %arrayidx240 = getelementptr inbounds i64, i64* %L_ACF, i64 4, !dbg !658, !id !659, !id.530 !659
Instruction type: 15
Instruction:   %75 = load i64, i64* %arrayidx240, align 8, !dbg !660, !id !661, !id.531 !661
Instruction type: 11
Instruction:   %add241 = add nsw i64 %75, %mul239, !dbg !660, !id !662, !id.532 !662
Instruction type: 11
Instruction:   %conv242 = sext i16 %65 to i64, !dbg !664, !id !665, !id.534 !665
Instruction type: 11
Instruction:   %arrayidx243 = getelementptr inbounds i16, i16* %incdec.ptr211, i64 -5, !dbg !666, !id !667, !id.535 !667
Instruction type: 15
Instruction:   %76 = load i16, i16* %arrayidx243, align 2, !dbg !666, !id !668, !id.536 !668
Instruction type: 11
Instruction:   %conv244 = sext i16 %76 to i64, !dbg !666, !id !669, !id.537 !669
Instruction type: 11
Instruction:   %mul245 = mul nsw i64 %conv242, %conv244, !dbg !670, !id !671, !id.538 !671
Instruction type: 11
Instruction:   %arrayidx246 = getelementptr inbounds i64, i64* %L_ACF, i64 5, !dbg !672, !id !673, !id.539 !673
Instruction type: 15
Instruction:   %77 = load i64, i64* %arrayidx246, align 8, !dbg !674, !id !675, !id.540 !675
Instruction type: 11
Instruction:   %add247 = add nsw i64 %77, %mul245, !dbg !674, !id !676, !id.541 !676
Instruction type: 11
Instruction:   %conv248 = sext i16 %65 to i64, !dbg !678, !id !679, !id.543 !679
Instruction type: 11
Instruction:   %arrayidx249 = getelementptr inbounds i16, i16* %incdec.ptr211, i64 -6, !dbg !680, !id !681, !id.544 !681
Instruction type: 15
Instruction:   %78 = load i16, i16* %arrayidx249, align 2, !dbg !680, !id !682, !id.545 !682
Instruction type: 11
Instruction:   %conv250 = sext i16 %78 to i64, !dbg !680, !id !683, !id.546 !683
Instruction type: 11
Instruction:   %mul251 = mul nsw i64 %conv248, %conv250, !dbg !684, !id !685, !id.547 !685
Instruction type: 11
Instruction:   %arrayidx252 = getelementptr inbounds i64, i64* %L_ACF, i64 6, !dbg !686, !id !687, !id.548 !687
Instruction type: 15
Instruction:   %79 = load i64, i64* %arrayidx252, align 8, !dbg !688, !id !689, !id.549 !689
Instruction type: 11
Instruction:   %add253 = add nsw i64 %79, %mul251, !dbg !688, !id !690, !id.550 !690
Instruction type: 11
Instruction:   %conv254 = sext i16 %65 to i64, !dbg !692, !id !693, !id.552 !693
Instruction type: 11
Instruction:   %arrayidx255 = getelementptr inbounds i16, i16* %incdec.ptr211, i64 -7, !dbg !694, !id !695, !id.553 !695
Instruction type: 15
Instruction:   %80 = load i16, i16* %arrayidx255, align 2, !dbg !694, !id !696, !id.554 !696
Instruction type: 11
Instruction:   %conv256 = sext i16 %80 to i64, !dbg !694, !id !697, !id.555 !697
Instruction type: 11
Instruction:   %mul257 = mul nsw i64 %conv254, %conv256, !dbg !698, !id !699, !id.556 !699
Instruction type: 11
Instruction:   %arrayidx258 = getelementptr inbounds i64, i64* %L_ACF, i64 7, !dbg !700, !id !701, !id.557 !701
Instruction type: 15
Instruction:   %81 = load i64, i64* %arrayidx258, align 8, !dbg !702, !id !703, !id.558 !703
Instruction type: 11
Instruction:   %add259 = add nsw i64 %81, %mul257, !dbg !702, !id !704, !id.559 !704
Instruction type: 11
Instruction:   %sp.0 = phi i16* [ %incdec.ptr211, %VITIS_LOOP_124_3 ], [ %incdec.ptr263, %for.inc318 ], !id !710, !id.563 !710
Instruction type: 15
Instruction:   %i.0 = phi i32 [ 8, %VITIS_LOOP_124_3 ], [ %inc319, %for.inc318 ], !id !711, !id.564 !711
Instruction type: 11
Instruction:   %exitcond = icmp ne i32 %i.0, 160, !dbg !712, !id !714, !id.565 !714
Instruction type: 11
Instruction:   %incdec.ptr263 = getelementptr inbounds i16, i16* %sp.0, i32 1, !dbg !717, !id !719, !id.567 !719
Instruction type: 15
Instruction:   %82 = load i16, i16* %incdec.ptr263, align 2, !dbg !720, !id !721, !id.568 !721
Instruction type: 11
Instruction:   %conv264 = sext i16 %82 to i64, !dbg !722, !id !723, !id.569 !723
Instruction type: 11
Instruction:   %83 = load i16, i16* %incdec.ptr263, align 2, !dbg !724, !id !725, !id.570 !725
Instruction type: 11
Instruction:   %conv266 = sext i16 %83 to i64, !dbg !724, !id !726, !id.571 !726
Instruction type: 11
Instruction:   %mul267 = mul nsw i64 %conv264, %conv266, !dbg !727, !id !728, !id.572 !728
Instruction type: 11
Instruction:   %arrayidx268 = getelementptr inbounds i64, i64* %L_ACF, i64 0, !dbg !729, !id !730, !id.573 !730
Instruction type: 15
Instruction:   %84 = load i64, i64* %arrayidx268, align 8, !dbg !731, !id !732, !id.574 !732
Instruction type: 11
Instruction:   %add269 = add nsw i64 %84, %mul267, !dbg !731, !id !733, !id.575 !733
Instruction type: 11
Instruction:   %conv270 = sext i16 %82 to i64, !dbg !735, !id !736, !id.577 !736
Instruction type: 11
Instruction:   %arrayidx271 = getelementptr inbounds i16, i16* %incdec.ptr263, i64 -1, !dbg !737, !id !738, !id.578 !738
Instruction type: 15
Instruction:   %85 = load i16, i16* %arrayidx271, align 2, !dbg !737, !id !739, !id.579 !739
Instruction type: 11
Instruction:   %conv272 = sext i16 %85 to i64, !dbg !737, !id !740, !id.580 !740
Instruction type: 11
Instruction:   %mul273 = mul nsw i64 %conv270, %conv272, !dbg !741, !id !742, !id.581 !742
Instruction type: 11
Instruction:   %arrayidx274 = getelementptr inbounds i64, i64* %L_ACF, i64 1, !dbg !743, !id !744, !id.582 !744
Instruction type: 15
Instruction:   %86 = load i64, i64* %arrayidx274, align 8, !dbg !745, !id !746, !id.583 !746
Instruction type: 11
Instruction:   %add275 = add nsw i64 %86, %mul273, !dbg !745, !id !747, !id.584 !747
Instruction type: 11
Instruction:   %conv276 = sext i16 %82 to i64, !dbg !749, !id !750, !id.586 !750
Instruction type: 11
Instruction:   %arrayidx277 = getelementptr inbounds i16, i16* %incdec.ptr263, i64 -2, !dbg !751, !id !752, !id.587 !752
Instruction type: 15
Instruction:   %87 = load i16, i16* %arrayidx277, align 2, !dbg !751, !id !753, !id.588 !753
Instruction type: 11
Instruction:   %conv278 = sext i16 %87 to i64, !dbg !751, !id !754, !id.589 !754
Instruction type: 11
Instruction:   %mul279 = mul nsw i64 %conv276, %conv278, !dbg !755, !id !756, !id.590 !756
Instruction type: 11
Instruction:   %arrayidx280 = getelementptr inbounds i64, i64* %L_ACF, i64 2, !dbg !757, !id !758, !id.591 !758
Instruction type: 15
Instruction:   %88 = load i64, i64* %arrayidx280, align 8, !dbg !759, !id !760, !id.592 !760
Instruction type: 11
Instruction:   %add281 = add nsw i64 %88, %mul279, !dbg !759, !id !761, !id.593 !761
Instruction type: 11
Instruction:   %conv282 = sext i16 %82 to i64, !dbg !763, !id !764, !id.595 !764
Instruction type: 11
Instruction:   %arrayidx283 = getelementptr inbounds i16, i16* %incdec.ptr263, i64 -3, !dbg !765, !id !766, !id.596 !766
Instruction type: 15
Instruction:   %89 = load i16, i16* %arrayidx283, align 2, !dbg !765, !id !767, !id.597 !767
Instruction type: 11
Instruction:   %conv284 = sext i16 %89 to i64, !dbg !765, !id !768, !id.598 !768
Instruction type: 11
Instruction:   %mul285 = mul nsw i64 %conv282, %conv284, !dbg !769, !id !770, !id.599 !770
Instruction type: 11
Instruction:   %arrayidx286 = getelementptr inbounds i64, i64* %L_ACF, i64 3, !dbg !771, !id !772, !id.600 !772
Instruction type: 15
Instruction:   %90 = load i64, i64* %arrayidx286, align 8, !dbg !773, !id !774, !id.601 !774
Instruction type: 11
Instruction:   %add287 = add nsw i64 %90, %mul285, !dbg !773, !id !775, !id.602 !775
Instruction type: 11
Instruction:   %conv288 = sext i16 %82 to i64, !dbg !777, !id !778, !id.604 !778
Instruction type: 11
Instruction:   %arrayidx289 = getelementptr inbounds i16, i16* %incdec.ptr263, i64 -4, !dbg !779, !id !780, !id.605 !780
Instruction type: 15
Instruction:   %91 = load i16, i16* %arrayidx289, align 2, !dbg !779, !id !781, !id.606 !781
Instruction type: 11
Instruction:   %conv290 = sext i16 %91 to i64, !dbg !779, !id !782, !id.607 !782
Instruction type: 11
Instruction:   %mul291 = mul nsw i64 %conv288, %conv290, !dbg !783, !id !784, !id.608 !784
Instruction type: 11
Instruction:   %arrayidx292 = getelementptr inbounds i64, i64* %L_ACF, i64 4, !dbg !785, !id !786, !id.609 !786
Instruction type: 15
Instruction:   %92 = load i64, i64* %arrayidx292, align 8, !dbg !787, !id !788, !id.610 !788
Instruction type: 11
Instruction:   %add293 = add nsw i64 %92, %mul291, !dbg !787, !id !789, !id.611 !789
Instruction type: 11
Instruction:   %conv294 = sext i16 %82 to i64, !dbg !791, !id !792, !id.613 !792
Instruction type: 11
Instruction:   %arrayidx295 = getelementptr inbounds i16, i16* %incdec.ptr263, i64 -5, !dbg !793, !id !794, !id.614 !794
Instruction type: 15
Instruction:   %93 = load i16, i16* %arrayidx295, align 2, !dbg !793, !id !795, !id.615 !795
Instruction type: 11
Instruction:   %conv296 = sext i16 %93 to i64, !dbg !793, !id !796, !id.616 !796
Instruction type: 11
Instruction:   %mul297 = mul nsw i64 %conv294, %conv296, !dbg !797, !id !798, !id.617 !798
Instruction type: 11
Instruction:   %arrayidx298 = getelementptr inbounds i64, i64* %L_ACF, i64 5, !dbg !799, !id !800, !id.618 !800
Instruction type: 15
Instruction:   %94 = load i64, i64* %arrayidx298, align 8, !dbg !801, !id !802, !id.619 !802
Instruction type: 11
Instruction:   %add299 = add nsw i64 %94, %mul297, !dbg !801, !id !803, !id.620 !803
Instruction type: 11
Instruction:   %conv300 = sext i16 %82 to i64, !dbg !805, !id !806, !id.622 !806
Instruction type: 11
Instruction:   %arrayidx301 = getelementptr inbounds i16, i16* %incdec.ptr263, i64 -6, !dbg !807, !id !808, !id.623 !808
Instruction type: 15
Instruction:   %95 = load i16, i16* %arrayidx301, align 2, !dbg !807, !id !809, !id.624 !809
Instruction type: 11
Instruction:   %conv302 = sext i16 %95 to i64, !dbg !807, !id !810, !id.625 !810
Instruction type: 11
Instruction:   %mul303 = mul nsw i64 %conv300, %conv302, !dbg !811, !id !812, !id.626 !812
Instruction type: 11
Instruction:   %arrayidx304 = getelementptr inbounds i64, i64* %L_ACF, i64 6, !dbg !813, !id !814, !id.627 !814
Instruction type: 15
Instruction:   %96 = load i64, i64* %arrayidx304, align 8, !dbg !815, !id !816, !id.628 !816
Instruction type: 11
Instruction:   %add305 = add nsw i64 %96, %mul303, !dbg !815, !id !817, !id.629 !817
Instruction type: 11
Instruction:   %conv306 = sext i16 %82 to i64, !dbg !819, !id !820, !id.631 !820
Instruction type: 11
Instruction:   %arrayidx307 = getelementptr inbounds i16, i16* %incdec.ptr263, i64 -7, !dbg !821, !id !822, !id.632 !822
Instruction type: 15
Instruction:   %97 = load i16, i16* %arrayidx307, align 2, !dbg !821, !id !823, !id.633 !823
Instruction type: 11
Instruction:   %conv308 = sext i16 %97 to i64, !dbg !821, !id !824, !id.634 !824
Instruction type: 11
Instruction:   %mul309 = mul nsw i64 %conv306, %conv308, !dbg !825, !id !826, !id.635 !826
Instruction type: 11
Instruction:   %arrayidx310 = getelementptr inbounds i64, i64* %L_ACF, i64 7, !dbg !827, !id !828, !id.636 !828
Instruction type: 15
Instruction:   %98 = load i64, i64* %arrayidx310, align 8, !dbg !829, !id !830, !id.637 !830
Instruction type: 11
Instruction:   %add311 = add nsw i64 %98, %mul309, !dbg !829, !id !831, !id.638 !831
Instruction type: 11
Instruction:   %conv312 = sext i16 %82 to i64, !dbg !833, !id !834, !id.640 !834
Instruction type: 11
Instruction:   %arrayidx313 = getelementptr inbounds i16, i16* %incdec.ptr263, i64 -8, !dbg !835, !id !836, !id.641 !836
Instruction type: 15
Instruction:   %99 = load i16, i16* %arrayidx313, align 2, !dbg !835, !id !837, !id.642 !837
Instruction type: 11
Instruction:   %conv314 = sext i16 %99 to i64, !dbg !835, !id !838, !id.643 !838
Instruction type: 11
Instruction:   %mul315 = mul nsw i64 %conv312, %conv314, !dbg !839, !id !840, !id.644 !840
Instruction type: 11
Instruction:   %arrayidx316 = getelementptr inbounds i64, i64* %L_ACF, i64 8, !dbg !841, !id !842, !id.645 !842
Instruction type: 15
Instruction:   %100 = load i64, i64* %arrayidx316, align 8, !dbg !843, !id !844, !id.646 !844
Instruction type: 11
Instruction:   %add317 = add nsw i64 %100, %mul315, !dbg !843, !id !845, !id.647 !845
Instruction type: 11
Instruction:   %inc319 = add nuw nsw i32 %i.0, 1, !dbg !849, !id !850, !id.650 !850
Instruction type: 11
Instruction:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc327 ], [ 8, %VITIS_LOOP_137_4 ], !id !859, !id.654 !859
Instruction type: 11
Instruction:   %cmp322 = icmp sge i64 %indvars.iv, 0, !dbg !860, !id !862, !id.655 !862
Instruction type: 11
Instruction:   %arrayidx325 = getelementptr inbounds i64, i64* %L_ACF, i64 %indvars.iv, !dbg !865, !id !867, !id.657 !867
Instruction type: 15
Instruction:   %101 = load i64, i64* %arrayidx325, align 8, !dbg !868, !id !869, !id.658 !869
Instruction type: 11
Instruction:   %shl326 = shl i64 %101, 1, !dbg !868, !id !870, !id.659 !870
Instruction type: 11
Instruction:   %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !874, !id !875, !id.662 !875
Instruction type: 11
Instruction:   %conv330 = sext i16 %scalauto.0 to i32, !dbg !879, !id !881, !id.664 !881
Instruction type: 11
Instruction:   %cmp331 = icmp sgt i32 %conv330, 0, !dbg !882, !id !883, !id.665 !883
Instruction type: 11
Instruction:   %k.4 = phi i32 [ 159, %VITIS_LOOP_143_5 ], [ %dec342, %for.inc341 ], !id !892, !id.669 !892
Instruction type: 11
Instruction:   %s.addr.0 = phi i16* [ %s, %VITIS_LOOP_143_5 ], [ %incdec.ptr337, %for.inc341 ], !id !893, !id.670 !893
Instruction type: 15
Instruction:   %cmp334 = icmp sge i32 %k.4, 0, !dbg !894, !id !896, !id.671 !896
Instruction type: 11
Instruction:   %conv336 = sext i16 %scalauto.0 to i32, !dbg !899, !id !901, !id.673 !901
Instruction type: 11
Instruction:   %incdec.ptr337 = getelementptr inbounds i16, i16* %s.addr.0, i32 1, !dbg !902, !id !903, !id.674 !903
Instruction type: 15
Instruction:   %102 = load i16, i16* %s.addr.0, align 2, !dbg !904, !id !905, !id.675 !905
Instruction type: 11
Instruction:   %conv338 = sext i16 %102 to i32, !dbg !904, !id !906, !id.676 !906
Instruction type: 11
Instruction:   %shl339 = shl i32 %conv338, %conv336, !dbg !904, !id !907, !id.677 !907
Instruction type: 11
Instruction:   %conv340 = trunc i32 %shl339 to i16, !dbg !904, !id !908, !id.678 !908
Instruction type: 11
Instruction:   %dec342 = add nsw i32 %k.4, -1, !dbg !912, !id !913, !id.681 !913
Instruction type: 11
Instruction:   %ACF = alloca [9 x i16], align 2, !id !37, !id.685 !37
Instruction type: 15
Array type found: 15
Instruction:   %P = alloca [9 x i16], align 2, !id !38, !id.686 !38
Instruction type: 15
Array type found: 15
Instruction:   %K = alloca [9 x i16], align 2, !id !39, !id.687 !39
Instruction type: 15
Array type found: 15
Instruction:   %0 = bitcast [9 x i16]* %ACF to i8*, !dbg !40, !id !41, !id.688 !41
Instruction type: 15
Instruction:   %1 = bitcast [9 x i16]* %P to i8*, !dbg !42, !id !43, !id.689 !43
Instruction type: 15
Instruction:   %2 = bitcast [9 x i16]* %K to i8*, !dbg !44, !id !45, !id.690 !45
Instruction type: 15
Instruction:   %arrayidx = getelementptr inbounds i64, i64* %L_ACF, i64 0, !dbg !46, !id !48, !id.691 !48
Instruction type: 15
Instruction:   %3 = load i64, i64* %arrayidx, align 8, !dbg !46, !id !49, !id.692 !49
Instruction type: 11
Instruction:   %cmp = icmp eq i64 %3, 0, !dbg !50, !id !51, !id.693 !51
Instruction type: 11
Instruction:   %i.0 = phi i32 [ 8, %Reflection_coefficients_label0 ], [ %dec, %for.inc ], !id !61, !id.697 !61
Instruction type: 11
Instruction:   %r.addr.0 = phi i16* [ %r, %Reflection_coefficients_label0 ], [ %incdec.ptr, %for.inc ], !id !62, !id.698 !62
Instruction type: 15
Instruction:   %cmp1 = icmp sgt i32 %i.0, 0, !dbg !63, !id !66, !id.699 !66
Instruction type: 11
Instruction:   %incdec.ptr = getelementptr inbounds i16, i16* %r.addr.0, i32 1, !dbg !69, !id !71, !id.701 !71
Instruction type: 15
Instruction:   %dec = add nsw i32 %i.0, -1, !dbg !76, !id !77, !id.704 !77
Instruction type: 11
Instruction:   %arrayidx2 = getelementptr inbounds i64, i64* %L_ACF, i64 0, !dbg !83, !id !84, !id.707 !84
Instruction type: 15
Instruction:   %4 = load i64, i64* %arrayidx2, align 8, !dbg !83, !id !85, !id.708 !85
Instruction type: 11
Instruction:   %call = call signext i16 @gsm_norm(i64 %4), !dbg !86, !id !87, !id.709 !87
Instruction type: 11
Instruction:   %indvars.iv15 = phi i64 [ %indvars.iv.next16, %for.inc10 ], [ 0, %Reflection_coefficients_label1 ], !id !94, !id.712 !94
Instruction type: 11
Instruction:   %exitcond17 = icmp ne i64 %indvars.iv15, 9, !dbg !95, !id !98, !id.713 !98
Instruction type: 11
Instruction:   %arrayidx6 = getelementptr inbounds i64, i64* %L_ACF, i64 %indvars.iv15, !dbg !101, !id !103, !id.715 !103
Instruction type: 15
Instruction:   %5 = load i64, i64* %arrayidx6, align 8, !dbg !101, !id !104, !id.716 !104
Instruction type: 11
Instruction:   %conv = sext i16 %call to i32, !dbg !105, !id !106, !id.717 !106
Instruction type: 11
Instruction:   %sh_prom = zext i32 %conv to i64, !dbg !107, !id !108, !id.718 !108
Instruction type: 11
Instruction:   %shl = shl i64 %5, %sh_prom, !dbg !107, !id !109, !id.719 !109
Instruction type: 11
Instruction:   %shr = ashr i64 %shl, 16, !dbg !110, !id !111, !id.720 !111
Instruction type: 11
Instruction:   %conv7 = trunc i64 %shr to i16, !dbg !112, !id !113, !id.721 !113
Instruction type: 11
Instruction:   %arrayidx9 = getelementptr inbounds [9 x i16], [9 x i16]* %ACF, i64 0, i64 %indvars.iv15, !dbg !114, !id !115, !id.722 !115
Instruction type: 15
Instruction:   %indvars.iv.next16 = add nuw nsw i64 %indvars.iv15, 1, !dbg !120, !id !121, !id.725 !121
Instruction type: 11
Instruction:   %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc19 ], [ 1, %Reflection_coefficients_label2 ], !id !130, !id.729 !130
Instruction type: 11
Instruction:   %exitcond14 = icmp ne i64 %indvars.iv12, 8, !dbg !131, !id !134, !id.730 !134
Instruction type: 11
Instruction:   %arrayidx16 = getelementptr inbounds [9 x i16], [9 x i16]* %ACF, i64 0, i64 %indvars.iv12, !dbg !137, !id !139, !id.732 !139
Instruction type: 15
Instruction:   %6 = load i16, i16* %arrayidx16, align 2, !dbg !137, !id !140, !id.733 !140
Instruction type: 11
Instruction:   %arrayidx18 = getelementptr inbounds [9 x i16], [9 x i16]* %K, i64 0, i64 %indvars.iv12, !dbg !141, !id !142, !id.734 !142
Instruction type: 15
Instruction:   %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !147, !id !148, !id.737 !148
Instruction type: 11
Instruction:   %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc29 ], [ 0, %Reflection_coefficients_label3 ], !id !157, !id.741 !157
Instruction type: 11
Instruction:   %exitcond11 = icmp ne i64 %indvars.iv9, 9, !dbg !158, !id !161, !id.742 !161
Instruction type: 11
Instruction:   %arrayidx26 = getelementptr inbounds [9 x i16], [9 x i16]* %ACF, i64 0, i64 %indvars.iv9, !dbg !164, !id !166, !id.744 !166
Instruction type: 15
Instruction:   %7 = load i16, i16* %arrayidx26, align 2, !dbg !164, !id !167, !id.745 !167
Instruction type: 11
Instruction:   %arrayidx28 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 %indvars.iv9, !dbg !168, !id !169, !id.746 !169
Instruction type: 15
Instruction:   %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !174, !id !175, !id.749 !175
Instruction type: 11
Instruction:   %indvars.iv7 = phi i64 [ %indvars.iv.next8, %for.inc91 ], [ 8, %Reflection_coefficients_label4 ], !id !184, !id.753 !184
Instruction type: 11
Instruction:   %n.0 = phi i32 [ 1, %Reflection_coefficients_label4 ], [ %inc92, %for.inc91 ], !id !185, !id.754 !185
Instruction type: 11
Instruction:   %r.addr.1 = phi i16* [ %r, %Reflection_coefficients_label4 ], [ %incdec.ptr93, %for.inc91 ], !id !186, !id.755 !186
Instruction type: 15
Instruction:   %arrayidx35 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !dbg !190, !id !193, !id.757 !193
Instruction type: 15
Instruction:   %8 = load i16, i16* %arrayidx35, align 2, !dbg !190, !id !194, !id.758 !194
Instruction type: 11
Instruction:   %call36 = call signext i16 @gsm_abs(i16 signext %8), !dbg !195, !id !196, !id.759 !196
Instruction type: 11
Instruction:   %arrayidx37 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !dbg !197, !id !199, !id.760 !199
Instruction type: 15
Instruction:   %9 = load i16, i16* %arrayidx37, align 2, !dbg !197, !id !200, !id.761 !200
Instruction type: 11
Instruction:   %conv38 = sext i16 %9 to i32, !dbg !197, !id !201, !id.762 !201
Instruction type: 11
Instruction:   %conv39 = sext i16 %call36 to i32, !dbg !202, !id !203, !id.763 !203
Instruction type: 11
Instruction:   %cmp40 = icmp slt i32 %conv38, %conv39, !dbg !204, !id !205, !id.764 !205
Instruction type: 11
Instruction:   %n.0.lcssa3 = phi i32 [ %n.0, %for.body34 ], !id !208, !id.766 !208
Instruction type: 11
Instruction:   %r.addr.1.lcssa1 = phi i16* [ %r.addr.1, %for.body34 ], !id !209, !id.767 !209
Instruction type: 15
Instruction:   %i.4 = phi i32 [ %n.0.lcssa3, %Reflection_coefficients_label6 ], [ %inc47, %for.inc46 ], !id !217, !id.770 !217
Instruction type: 11
Instruction:   %r.addr.2 = phi i16* [ %r.addr.1.lcssa1, %Reflection_coefficients_label6 ], [ %incdec.ptr45, %for.inc46 ], !id !218, !id.771 !218
Instruction type: 15
Instruction:   %cmp43 = icmp sle i32 %i.4, 8, !dbg !219, !id !222, !id.772 !222
Instruction type: 11
Instruction:   %incdec.ptr45 = getelementptr inbounds i16, i16* %r.addr.2, i32 1, !dbg !225, !id !227, !id.774 !227
Instruction type: 15
Instruction:   %inc47 = add nsw i32 %i.4, 1, !dbg !232, !id !233, !id.777 !233
Instruction type: 11
Instruction:   %arrayidx50 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !dbg !239, !id !240, !id.780 !240
Instruction type: 15
Instruction:   %10 = load i16, i16* %arrayidx50, align 2, !dbg !239, !id !241, !id.781 !241
Instruction type: 11
Instruction:   %call51 = call signext i16 @gsm_div(i16 signext %call36, i16 signext %10), !dbg !242, !id !243, !id.782 !243
Instruction type: 11
Instruction:   %arrayidx52 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !dbg !246, !id !248, !id.784 !248
Instruction type: 15
Instruction:   %11 = load i16, i16* %arrayidx52, align 2, !dbg !246, !id !249, !id.785 !249
Instruction type: 11
Instruction:   %conv53 = sext i16 %11 to i32, !dbg !246, !id !250, !id.786 !250
Instruction type: 11
Instruction:   %cmp54 = icmp sgt i32 %conv53, 0, !dbg !251, !id !252, !id.787 !252
Instruction type: 11
Instruction:   %12 = load i16, i16* %r.addr.1, align 2, !dbg !255, !id !256, !id.789 !256
Instruction type: 11
Instruction:   %conv56 = sext i16 %12 to i32, !dbg !255, !id !257, !id.790 !257
Instruction type: 11
Instruction:   %sub = sub nsw i32 0, %conv56, !dbg !258, !id !259, !id.791 !259
Instruction type: 11
Instruction:   %conv57 = trunc i32 %sub to i16, !dbg !258, !id !260, !id.792 !260
Instruction type: 11
Instruction:   %cmp59 = icmp eq i32 %n.0, 8, !dbg !265, !id !267, !id.795 !267
Instruction type: 11
Instruction:   %arrayidx62 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !dbg !272, !id !273, !id.798 !273
Instruction type: 15
Instruction:   %13 = load i16, i16* %arrayidx62, align 2, !dbg !272, !id !274, !id.799 !274
Instruction type: 11
Instruction:   %14 = load i16, i16* %r.addr.1, align 2, !dbg !275, !id !276, !id.800 !276
Instruction type: 11
Instruction:   %call63 = call signext i16 @gsm_mult_r(i16 signext %13, i16 signext %14), !dbg !277, !id !278, !id.801 !278
Instruction type: 11
Instruction:   %arrayidx64 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !dbg !279, !id !280, !id.802 !280
Instruction type: 15
Instruction:   %15 = load i16, i16* %arrayidx64, align 2, !dbg !279, !id !281, !id.803 !281
Instruction type: 11
Instruction:   %call65 = call signext i16 @gsm_add(i16 signext %15, i16 signext %call63), !dbg !282, !id !283, !id.804 !283
Instruction type: 11
Instruction:   %arrayidx66 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !dbg !284, !id !285, !id.805 !285
Instruction type: 15
Instruction:   %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc88 ], [ 1, %Reflection_coefficients_label5 ], !id !293, !id.809 !293
Instruction type: 11
Instruction:   %exitcond = icmp ne i64 %indvars.iv, %indvars.iv7, !dbg !294, !id !297, !id.810 !297
Instruction type: 11
Instruction:   %arrayidx72 = getelementptr inbounds [9 x i16], [9 x i16]* %K, i64 0, i64 %indvars.iv, !dbg !300, !id !302, !id.812 !302
Instruction type: 15
Instruction:   %16 = load i16, i16* %arrayidx72, align 2, !dbg !300, !id !303, !id.813 !303
Instruction type: 11
Instruction:   %17 = load i16, i16* %r.addr.1, align 2, !dbg !304, !id !305, !id.814 !305
Instruction type: 11
Instruction:   %call73 = call signext i16 @gsm_mult_r(i16 signext %16, i16 signext %17), !dbg !306, !id !307, !id.815 !307
Instruction type: 11
Instruction:   %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !308, !id !309, !id.816 !309
Instruction type: 11
Instruction:   %arrayidx75 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 %indvars.iv.next, !dbg !310, !id !311, !id.817 !311
Instruction type: 15
Instruction:   %18 = load i16, i16* %arrayidx75, align 2, !dbg !310, !id !312, !id.818 !312
Instruction type: 11
Instruction:   %call76 = call signext i16 @gsm_add(i16 signext %18, i16 signext %call73), !dbg !313, !id !314, !id.819 !314
Instruction type: 11
Instruction:   %arrayidx78 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 %indvars.iv, !dbg !315, !id !316, !id.820 !316
Instruction type: 15
Instruction:   %arrayidx81 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 %indvars.iv.next, !dbg !319, !id !320, !id.822 !320
Instruction type: 15
Instruction:   %19 = load i16, i16* %arrayidx81, align 2, !dbg !319, !id !321, !id.823 !321
Instruction type: 11
Instruction:   %20 = load i16, i16* %r.addr.1, align 2, !dbg !322, !id !323, !id.824 !323
Instruction type: 11
Instruction:   %call82 = call signext i16 @gsm_mult_r(i16 signext %19, i16 signext %20), !dbg !324, !id !325, !id.825 !325
Instruction type: 11
Instruction:   %arrayidx84 = getelementptr inbounds [9 x i16], [9 x i16]* %K, i64 0, i64 %indvars.iv, !dbg !326, !id !327, !id.826 !327
Instruction type: 15
Instruction:   %21 = load i16, i16* %arrayidx84, align 2, !dbg !326, !id !328, !id.827 !328
Instruction type: 11
Instruction:   %call85 = call signext i16 @gsm_add(i16 signext %21, i16 signext %call82), !dbg !329, !id !330, !id.828 !330
Instruction type: 11
Instruction:   %arrayidx87 = getelementptr inbounds [9 x i16], [9 x i16]* %K, i64 0, i64 %indvars.iv, !dbg !331, !id !332, !id.829 !332
Instruction type: 15
Instruction:   %inc92 = add nuw nsw i32 %n.0, 1, !dbg !342, !id !343, !id.834 !343
Instruction type: 11
Instruction:   %incdec.ptr93 = getelementptr inbounds i16, i16* %r.addr.1, i32 1, !dbg !344, !id !345, !id.835 !345
Instruction type: 15
Instruction:   %indvars.iv.next8 = add nsw i64 %indvars.iv7, -1, !dbg !346, !id !347, !id.836 !347
Instruction type: 11
Instruction:   %cleanup.dest.slot.0 = phi i32 [ 1, %for.end ], [ 1, %for.end48 ], [ 1, %if.then60 ], [ 0, %for.end94 ], !id !352, !id.839 !352
Instruction type: 11
Instruction:   %22 = bitcast [9 x i16]* %K to i8*, !dbg !350, !id !353, !id.840 !353
Instruction type: 15
Instruction:   %23 = bitcast [9 x i16]* %P to i8*, !dbg !350, !id !354, !id.841 !354
Instruction type: 15
Instruction:   %24 = bitcast [9 x i16]* %ACF to i8*, !dbg !350, !id !355, !id.842 !355
Instruction type: 15
Instruction:   %i.0 = phi i32 [ 1, %VITIS_LOOP_237_1 ], [ %inc, %for.inc ], !id !41, !id.848 !41
Instruction type: 11
Instruction:   %r.addr.0 = phi i16* [ %r, %VITIS_LOOP_237_1 ], [ %incdec.ptr, %for.inc ], !id !42, !id.849 !42
Instruction type: 15
Instruction:   %exitcond = icmp ne i32 %i.0, 9, !dbg !43, !id !45, !id.850 !45
Instruction type: 11
Instruction:   %0 = load i16, i16* %r.addr.0, align 2, !dbg !48, !id !50, !id.852 !50
Instruction type: 11
Instruction:   %call = call signext i16 @gsm_abs(i16 signext %0), !dbg !51, !id !52, !id.853 !52
Instruction type: 11
Instruction:   %conv = sext i16 %call to i32, !dbg !53, !id !55, !id.854 !55
Instruction type: 11
Instruction:   %cmp1 = icmp slt i32 %conv, 22118, !dbg !56, !id !57, !id.855 !57
Instruction type: 11
Instruction:   %conv2 = sext i16 %call to i32, !dbg !60, !id !62, !id.857 !62
Instruction type: 11
Instruction:   %shr = ashr i32 %conv2, 1, !dbg !60, !id !63, !id.858 !63
Instruction type: 11
Instruction:   %conv3 = trunc i32 %shr to i16, !dbg !60, !id !64, !id.859 !64
Instruction type: 11
Instruction:   %conv4 = sext i16 %call to i32, !dbg !67, !id !69, !id.861 !69
Instruction type: 11
Instruction:   %cmp5 = icmp slt i32 %conv4, 31130, !dbg !70, !id !71, !id.862 !71
Instruction type: 11
Instruction:   %conv7 = sext i16 %call to i32, !dbg !74, !id !76, !id.864 !76
Instruction type: 11
Instruction:   %sub = sub nsw i32 %conv7, 11059, !dbg !74, !id !77, !id.865 !77
Instruction type: 11
Instruction:   %conv8 = trunc i32 %sub to i16, !dbg !74, !id !78, !id.866 !78
Instruction type: 11
Instruction:   %conv10 = sext i16 %call to i32, !dbg !81, !id !83, !id.868 !83
Instruction type: 11
Instruction:   %sub11 = sub nsw i32 %conv10, 26112, !dbg !81, !id !84, !id.869 !84
Instruction type: 11
Instruction:   %conv12 = trunc i32 %sub11 to i16, !dbg !81, !id !85, !id.870 !85
Instruction type: 11
Instruction:   %conv13 = sext i16 %conv12 to i32, !dbg !86, !id !87, !id.871 !87
Instruction type: 11
Instruction:   %shl = shl i32 %conv13, 2, !dbg !86, !id !88, !id.872 !88
Instruction type: 11
Instruction:   %conv14 = trunc i32 %shl to i16, !dbg !86, !id !89, !id.873 !89
Instruction type: 11
Instruction:   %temp.0 = phi i16 [ %conv8, %if.then6 ], [ %conv14, %if.else9 ], !id !91, !id.875 !91
Instruction type: 11
Instruction:   %temp.1 = phi i16 [ %conv3, %if.then ], [ %temp.0, %if.end ], !id !93, !id.877 !93
Instruction type: 11
Instruction:   %1 = load i16, i16* %r.addr.0, align 2, !dbg !94, !id !95, !id.878 !95
Instruction type: 11
Instruction:   %conv16 = sext i16 %1 to i32, !dbg !94, !id !96, !id.879 !96
Instruction type: 11
Instruction:   %cmp17 = icmp slt i32 %conv16, 0, !dbg !97, !id !98, !id.880 !98
Instruction type: 11
Instruction:   %conv19 = sext i16 %temp.1 to i32, !dbg !100, !id !101, !id.882 !101
Instruction type: 11
Instruction:   %sub20 = sub nsw i32 0, %conv19, !dbg !102, !id !103, !id.883 !103
Instruction type: 11
Instruction:   %conv21 = sext i16 %temp.1 to i32, !dbg !105, !id !106, !id.885 !106
Instruction type: 11
Instruction:   %cond = phi i32 [ %sub20, %cond.true ], [ %conv21, %cond.false ], !dbg !94, !id !108, !id.887 !108
Instruction type: 11
Instruction:   %conv22 = trunc i32 %cond to i16, !dbg !94, !id !109, !id.888 !109
Instruction type: 11
Instruction:   %inc = add nuw nsw i32 %i.0, 1, !dbg !114, !id !115, !id.891 !115
Instruction type: 11
Instruction:   %incdec.ptr = getelementptr inbounds i16, i16* %r.addr.0, i32 1, !dbg !116, !id !117, !id.892 !117
Instruction type: 15
Instruction:   %0 = load i16, i16* %LAR, align 2, !dbg !36, !id !37, !id.895 !37
Instruction type: 11
Instruction:   %call = call signext i16 @gsm_mult(i16 signext 20480, i16 signext %0), !dbg !38, !id !39, !id.896 !39
Instruction type: 11
Instruction:   %call1 = call signext i16 @gsm_add(i16 signext %call, i16 signext 0), !dbg !40, !id !41, !id.897 !41
Instruction type: 11
Instruction:   %call2 = call signext i16 @gsm_add(i16 signext %call1, i16 signext 256), !dbg !42, !id !43, !id.898 !43
Instruction type: 11
Instruction:   %conv = sext i16 %call2 to i32, !dbg !44, !id !45, !id.899 !45
Instruction type: 11
Instruction:   %shr = ashr i32 %conv, 9, !dbg !46, !id !47, !id.900 !47
Instruction type: 11
Instruction:   %conv3 = trunc i32 %shr to i16, !dbg !48, !id !49, !id.901 !49
Instruction type: 11
Instruction:   %conv4 = sext i16 %conv3 to i32, !dbg !50, !id !51, !id.902 !51
Instruction type: 11
Instruction:   %cmp = icmp sgt i32 %conv4, 31, !dbg !52, !id !53, !id.903 !53
Instruction type: 11
Instruction:   %conv6 = sext i16 %conv3 to i32, !dbg !56, !id !57, !id.906 !57
Instruction type: 11
Instruction:   %cmp7 = icmp slt i32 %conv6, -32, !dbg !58, !id !59, !id.907 !59
Instruction type: 11
Instruction:   %conv11 = sext i16 %conv3 to i32, !dbg !62, !id !63, !id.910 !63
Instruction type: 11
Instruction:   %sub = sub nsw i32 %conv11, -32, !dbg !64, !id !65, !id.911 !65
Instruction type: 11
Instruction:   %cond = phi i32 [ 0, %cond.true9 ], [ %sub, %cond.false10 ], !dbg !56, !id !67, !id.913 !67
Instruction type: 11
Instruction:   %cond13 = phi i32 [ 63, %cond.true ], [ %cond, %cond.end ], !dbg !50, !id !69, !id.915 !69
Instruction type: 11
Instruction:   %conv14 = trunc i32 %cond13 to i16, !dbg !50, !id !70, !id.916 !70
Instruction type: 11
Instruction:   %incdec.ptr = getelementptr inbounds i16, i16* %LAR, i32 1, !dbg !73, !id !74, !id.918 !74
Instruction type: 15
Instruction:   %1 = load i16, i16* %incdec.ptr, align 2, !dbg !75, !id !76, !id.919 !76
Instruction type: 11
Instruction:   %call15 = call signext i16 @gsm_mult(i16 signext 20480, i16 signext %1), !dbg !77, !id !78, !id.920 !78
Instruction type: 11
Instruction:   %call16 = call signext i16 @gsm_add(i16 signext %call15, i16 signext 0), !dbg !79, !id !80, !id.921 !80
Instruction type: 11
Instruction:   %call17 = call signext i16 @gsm_add(i16 signext %call16, i16 signext 256), !dbg !81, !id !82, !id.922 !82
Instruction type: 11
Instruction:   %conv18 = sext i16 %call17 to i32, !dbg !83, !id !84, !id.923 !84
Instruction type: 11
Instruction:   %shr19 = ashr i32 %conv18, 9, !dbg !85, !id !86, !id.924 !86
Instruction type: 11
Instruction:   %conv20 = trunc i32 %shr19 to i16, !dbg !87, !id !88, !id.925 !88
Instruction type: 11
Instruction:   %conv21 = sext i16 %conv20 to i32, !dbg !89, !id !90, !id.926 !90
Instruction type: 11
Instruction:   %cmp22 = icmp sgt i32 %conv21, 31, !dbg !91, !id !92, !id.927 !92
Instruction type: 11
Instruction:   %conv26 = sext i16 %conv20 to i32, !dbg !95, !id !96, !id.930 !96
Instruction type: 11
Instruction:   %cmp27 = icmp slt i32 %conv26, -32, !dbg !97, !id !98, !id.931 !98
Instruction type: 11
Instruction:   %conv31 = sext i16 %conv20 to i32, !dbg !101, !id !102, !id.934 !102
Instruction type: 11
Instruction:   %sub32 = sub nsw i32 %conv31, -32, !dbg !103, !id !104, !id.935 !104
Instruction type: 11
Instruction:   %cond34 = phi i32 [ 0, %cond.true29 ], [ %sub32, %cond.false30 ], !dbg !95, !id !106, !id.937 !106
Instruction type: 11
Instruction:   %cond36 = phi i32 [ 63, %cond.true24 ], [ %cond34, %cond.end33 ], !dbg !89, !id !108, !id.939 !108
Instruction type: 11
Instruction:   %conv37 = trunc i32 %cond36 to i16, !dbg !89, !id !109, !id.940 !109
Instruction type: 11
Instruction:   %incdec.ptr38 = getelementptr inbounds i16, i16* %incdec.ptr, i32 1, !dbg !112, !id !113, !id.942 !113
Instruction type: 15
Instruction:   %2 = load i16, i16* %incdec.ptr38, align 2, !dbg !114, !id !115, !id.943 !115
Instruction type: 11
Instruction:   %call39 = call signext i16 @gsm_mult(i16 signext 20480, i16 signext %2), !dbg !116, !id !117, !id.944 !117
Instruction type: 11
Instruction:   %call40 = call signext i16 @gsm_add(i16 signext %call39, i16 signext 2048), !dbg !118, !id !119, !id.945 !119
Instruction type: 11
Instruction:   %call41 = call signext i16 @gsm_add(i16 signext %call40, i16 signext 256), !dbg !120, !id !121, !id.946 !121
Instruction type: 11
Instruction:   %conv42 = sext i16 %call41 to i32, !dbg !122, !id !123, !id.947 !123
Instruction type: 11
Instruction:   %shr43 = ashr i32 %conv42, 9, !dbg !124, !id !125, !id.948 !125
Instruction type: 11
Instruction:   %conv44 = trunc i32 %shr43 to i16, !dbg !126, !id !127, !id.949 !127
Instruction type: 11
Instruction:   %conv45 = sext i16 %conv44 to i32, !dbg !128, !id !129, !id.950 !129
Instruction type: 11
Instruction:   %cmp46 = icmp sgt i32 %conv45, 15, !dbg !130, !id !131, !id.951 !131
Instruction type: 11
Instruction:   %conv50 = sext i16 %conv44 to i32, !dbg !134, !id !135, !id.954 !135
Instruction type: 11
Instruction:   %cmp51 = icmp slt i32 %conv50, -16, !dbg !136, !id !137, !id.955 !137
Instruction type: 11
Instruction:   %conv55 = sext i16 %conv44 to i32, !dbg !140, !id !141, !id.958 !141
Instruction type: 11
Instruction:   %sub56 = sub nsw i32 %conv55, -16, !dbg !142, !id !143, !id.959 !143
Instruction type: 11
Instruction:   %cond58 = phi i32 [ 0, %cond.true53 ], [ %sub56, %cond.false54 ], !dbg !134, !id !145, !id.961 !145
Instruction type: 11
Instruction:   %cond60 = phi i32 [ 31, %cond.true48 ], [ %cond58, %cond.end57 ], !dbg !128, !id !147, !id.963 !147
Instruction type: 11
Instruction:   %conv61 = trunc i32 %cond60 to i16, !dbg !128, !id !148, !id.964 !148
Instruction type: 11
Instruction:   %incdec.ptr62 = getelementptr inbounds i16, i16* %incdec.ptr38, i32 1, !dbg !151, !id !152, !id.966 !152
Instruction type: 15
Instruction:   %3 = load i16, i16* %incdec.ptr62, align 2, !dbg !153, !id !154, !id.967 !154
Instruction type: 11
Instruction:   %call63 = call signext i16 @gsm_mult(i16 signext 20480, i16 signext %3), !dbg !155, !id !156, !id.968 !156
Instruction type: 11
Instruction:   %call64 = call signext i16 @gsm_add(i16 signext %call63, i16 signext -2560), !dbg !157, !id !158, !id.969 !158
Instruction type: 11
Instruction:   %call65 = call signext i16 @gsm_add(i16 signext %call64, i16 signext 256), !dbg !159, !id !160, !id.970 !160
Instruction type: 11
Instruction:   %conv66 = sext i16 %call65 to i32, !dbg !161, !id !162, !id.971 !162
Instruction type: 11
Instruction:   %shr67 = ashr i32 %conv66, 9, !dbg !163, !id !164, !id.972 !164
Instruction type: 11
Instruction:   %conv68 = trunc i32 %shr67 to i16, !dbg !165, !id !166, !id.973 !166
Instruction type: 11
Instruction:   %conv69 = sext i16 %conv68 to i32, !dbg !167, !id !168, !id.974 !168
Instruction type: 11
Instruction:   %cmp70 = icmp sgt i32 %conv69, 15, !dbg !169, !id !170, !id.975 !170
Instruction type: 11
Instruction:   %conv74 = sext i16 %conv68 to i32, !dbg !173, !id !174, !id.978 !174
Instruction type: 11
Instruction:   %cmp75 = icmp slt i32 %conv74, -16, !dbg !175, !id !176, !id.979 !176
Instruction type: 11
Instruction:   %conv79 = sext i16 %conv68 to i32, !dbg !179, !id !180, !id.982 !180
Instruction type: 11
Instruction:   %sub80 = sub nsw i32 %conv79, -16, !dbg !181, !id !182, !id.983 !182
Instruction type: 11
Instruction:   %cond82 = phi i32 [ 0, %cond.true77 ], [ %sub80, %cond.false78 ], !dbg !173, !id !184, !id.985 !184
Instruction type: 11
Instruction:   %cond84 = phi i32 [ 31, %cond.true72 ], [ %cond82, %cond.end81 ], !dbg !167, !id !186, !id.987 !186
Instruction type: 11
Instruction:   %conv85 = trunc i32 %cond84 to i16, !dbg !167, !id !187, !id.988 !187
Instruction type: 11
Instruction:   %incdec.ptr86 = getelementptr inbounds i16, i16* %incdec.ptr62, i32 1, !dbg !190, !id !191, !id.990 !191
Instruction type: 15
Instruction:   %4 = load i16, i16* %incdec.ptr86, align 2, !dbg !192, !id !193, !id.991 !193
Instruction type: 11
Instruction:   %call87 = call signext i16 @gsm_mult(i16 signext 13964, i16 signext %4), !dbg !194, !id !195, !id.992 !195
Instruction type: 11
Instruction:   %call88 = call signext i16 @gsm_add(i16 signext %call87, i16 signext 94), !dbg !196, !id !197, !id.993 !197
Instruction type: 11
Instruction:   %call89 = call signext i16 @gsm_add(i16 signext %call88, i16 signext 256), !dbg !198, !id !199, !id.994 !199
Instruction type: 11
Instruction:   %conv90 = sext i16 %call89 to i32, !dbg !200, !id !201, !id.995 !201
Instruction type: 11
Instruction:   %shr91 = ashr i32 %conv90, 9, !dbg !202, !id !203, !id.996 !203
Instruction type: 11
Instruction:   %conv92 = trunc i32 %shr91 to i16, !dbg !204, !id !205, !id.997 !205
Instruction type: 11
Instruction:   %conv93 = sext i16 %conv92 to i32, !dbg !206, !id !207, !id.998 !207
Instruction type: 11
Instruction:   %cmp94 = icmp sgt i32 %conv93, 7, !dbg !208, !id !209, !id.999 !209
Instruction type: 11
Instruction:   %conv98 = sext i16 %conv92 to i32, !dbg !212, !id !213, !id.1002 !213
Instruction type: 11
Instruction:   %cmp99 = icmp slt i32 %conv98, -8, !dbg !214, !id !215, !id.1003 !215
Instruction type: 11
Instruction:   %conv103 = sext i16 %conv92 to i32, !dbg !218, !id !219, !id.1006 !219
Instruction type: 11
Instruction:   %sub104 = sub nsw i32 %conv103, -8, !dbg !220, !id !221, !id.1007 !221
Instruction type: 11
Instruction:   %cond106 = phi i32 [ 0, %cond.true101 ], [ %sub104, %cond.false102 ], !dbg !212, !id !223, !id.1009 !223
Instruction type: 11
Instruction:   %cond108 = phi i32 [ 15, %cond.true96 ], [ %cond106, %cond.end105 ], !dbg !206, !id !225, !id.1011 !225
Instruction type: 11
Instruction:   %conv109 = trunc i32 %cond108 to i16, !dbg !206, !id !226, !id.1012 !226
Instruction type: 11
Instruction:   %incdec.ptr110 = getelementptr inbounds i16, i16* %incdec.ptr86, i32 1, !dbg !229, !id !230, !id.1014 !230
Instruction type: 15
Instruction:   %5 = load i16, i16* %incdec.ptr110, align 2, !dbg !231, !id !232, !id.1015 !232
Instruction type: 11
Instruction:   %call111 = call signext i16 @gsm_mult(i16 signext 15360, i16 signext %5), !dbg !233, !id !234, !id.1016 !234
Instruction type: 11
Instruction:   %call112 = call signext i16 @gsm_add(i16 signext %call111, i16 signext -1792), !dbg !235, !id !236, !id.1017 !236
Instruction type: 11
Instruction:   %call113 = call signext i16 @gsm_add(i16 signext %call112, i16 signext 256), !dbg !237, !id !238, !id.1018 !238
Instruction type: 11
Instruction:   %conv114 = sext i16 %call113 to i32, !dbg !239, !id !240, !id.1019 !240
Instruction type: 11
Instruction:   %shr115 = ashr i32 %conv114, 9, !dbg !241, !id !242, !id.1020 !242
Instruction type: 11
Instruction:   %conv116 = trunc i32 %shr115 to i16, !dbg !243, !id !244, !id.1021 !244
Instruction type: 11
Instruction:   %conv117 = sext i16 %conv116 to i32, !dbg !245, !id !246, !id.1022 !246
Instruction type: 11
Instruction:   %cmp118 = icmp sgt i32 %conv117, 7, !dbg !247, !id !248, !id.1023 !248
Instruction type: 11
Instruction:   %conv122 = sext i16 %conv116 to i32, !dbg !251, !id !252, !id.1026 !252
Instruction type: 11
Instruction:   %cmp123 = icmp slt i32 %conv122, -8, !dbg !253, !id !254, !id.1027 !254
Instruction type: 11
Instruction:   %conv127 = sext i16 %conv116 to i32, !dbg !257, !id !258, !id.1030 !258
Instruction type: 11
Instruction:   %sub128 = sub nsw i32 %conv127, -8, !dbg !259, !id !260, !id.1031 !260
Instruction type: 11
Instruction:   %cond130 = phi i32 [ 0, %cond.true125 ], [ %sub128, %cond.false126 ], !dbg !251, !id !262, !id.1033 !262
Instruction type: 11
Instruction:   %cond132 = phi i32 [ 15, %cond.true120 ], [ %cond130, %cond.end129 ], !dbg !245, !id !264, !id.1035 !264
Instruction type: 11
Instruction:   %conv133 = trunc i32 %cond132 to i16, !dbg !245, !id !265, !id.1036 !265
Instruction type: 11
Instruction:   %incdec.ptr134 = getelementptr inbounds i16, i16* %incdec.ptr110, i32 1, !dbg !268, !id !269, !id.1038 !269
Instruction type: 15
Instruction:   %6 = load i16, i16* %incdec.ptr134, align 2, !dbg !270, !id !271, !id.1039 !271
Instruction type: 11
Instruction:   %call135 = call signext i16 @gsm_mult(i16 signext 8534, i16 signext %6), !dbg !272, !id !273, !id.1040 !273
Instruction type: 11
Instruction:   %call136 = call signext i16 @gsm_add(i16 signext %call135, i16 signext -341), !dbg !274, !id !275, !id.1041 !275
Instruction type: 11
Instruction:   %call137 = call signext i16 @gsm_add(i16 signext %call136, i16 signext 256), !dbg !276, !id !277, !id.1042 !277
Instruction type: 11
Instruction:   %conv138 = sext i16 %call137 to i32, !dbg !278, !id !279, !id.1043 !279
Instruction type: 11
Instruction:   %shr139 = ashr i32 %conv138, 9, !dbg !280, !id !281, !id.1044 !281
Instruction type: 11
Instruction:   %conv140 = trunc i32 %shr139 to i16, !dbg !282, !id !283, !id.1045 !283
Instruction type: 11
Instruction:   %conv141 = sext i16 %conv140 to i32, !dbg !284, !id !285, !id.1046 !285
Instruction type: 11
Instruction:   %cmp142 = icmp sgt i32 %conv141, 3, !dbg !286, !id !287, !id.1047 !287
Instruction type: 11
Instruction:   %conv146 = sext i16 %conv140 to i32, !dbg !290, !id !291, !id.1050 !291
Instruction type: 11
Instruction:   %cmp147 = icmp slt i32 %conv146, -4, !dbg !292, !id !293, !id.1051 !293
Instruction type: 11
Instruction:   %conv151 = sext i16 %conv140 to i32, !dbg !296, !id !297, !id.1054 !297
Instruction type: 11
Instruction:   %sub152 = sub nsw i32 %conv151, -4, !dbg !298, !id !299, !id.1055 !299
Instruction type: 11
Instruction:   %cond154 = phi i32 [ 0, %cond.true149 ], [ %sub152, %cond.false150 ], !dbg !290, !id !301, !id.1057 !301
Instruction type: 11
Instruction:   %cond156 = phi i32 [ 7, %cond.true144 ], [ %cond154, %cond.end153 ], !dbg !284, !id !303, !id.1059 !303
Instruction type: 11
Instruction:   %conv157 = trunc i32 %cond156 to i16, !dbg !284, !id !304, !id.1060 !304
Instruction type: 11
Instruction:   %incdec.ptr158 = getelementptr inbounds i16, i16* %incdec.ptr134, i32 1, !dbg !307, !id !308, !id.1062 !308
Instruction type: 15
Instruction:   %7 = load i16, i16* %incdec.ptr158, align 2, !dbg !309, !id !310, !id.1063 !310
Instruction type: 11
Instruction:   %call159 = call signext i16 @gsm_mult(i16 signext 9036, i16 signext %7), !dbg !311, !id !312, !id.1064 !312
Instruction type: 11
Instruction:   %call160 = call signext i16 @gsm_add(i16 signext %call159, i16 signext -1144), !dbg !313, !id !314, !id.1065 !314
Instruction type: 11
Instruction:   %call161 = call signext i16 @gsm_add(i16 signext %call160, i16 signext 256), !dbg !315, !id !316, !id.1066 !316
Instruction type: 11
Instruction:   %conv162 = sext i16 %call161 to i32, !dbg !317, !id !318, !id.1067 !318
Instruction type: 11
Instruction:   %shr163 = ashr i32 %conv162, 9, !dbg !319, !id !320, !id.1068 !320
Instruction type: 11
Instruction:   %conv164 = trunc i32 %shr163 to i16, !dbg !321, !id !322, !id.1069 !322
Instruction type: 11
Instruction:   %conv165 = sext i16 %conv164 to i32, !dbg !323, !id !324, !id.1070 !324
Instruction type: 11
Instruction:   %cmp166 = icmp sgt i32 %conv165, 3, !dbg !325, !id !326, !id.1071 !326
Instruction type: 11
Instruction:   %conv170 = sext i16 %conv164 to i32, !dbg !329, !id !330, !id.1074 !330
Instruction type: 11
Instruction:   %cmp171 = icmp slt i32 %conv170, -4, !dbg !331, !id !332, !id.1075 !332
Instruction type: 11
Instruction:   %conv175 = sext i16 %conv164 to i32, !dbg !335, !id !336, !id.1078 !336
Instruction type: 11
Instruction:   %sub176 = sub nsw i32 %conv175, -4, !dbg !337, !id !338, !id.1079 !338
Instruction type: 11
Instruction:   %cond178 = phi i32 [ 0, %cond.true173 ], [ %sub176, %cond.false174 ], !dbg !329, !id !340, !id.1081 !340
Instruction type: 11
Instruction:   %cond180 = phi i32 [ 7, %cond.true168 ], [ %cond178, %cond.end177 ], !dbg !323, !id !342, !id.1083 !342
Instruction type: 11
Instruction:   %conv181 = trunc i32 %cond180 to i16, !dbg !323, !id !343, !id.1084 !343
Instruction type: 11
Instruction:   %incdec.ptr182 = getelementptr inbounds i16, i16* %incdec.ptr158, i32 1, !dbg !346, !id !347, !id.1086 !347
Instruction type: 15
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end7
	discovered a new reachable node %cond.false
	discovered a new reachable node %cond.true5
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false6
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then
	discovered a new reachable node %cleanup
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.true5
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.end9
	discovered a new reachable node %cond.false
	discovered a new reachable node %cond.false7
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then2
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end3
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.true6
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.end29
	discovered a new reachable node %cond.false
	discovered a new reachable node %cond.false13
	discovered a new reachable node %cond.true16
	discovered a new reachable node %cond.end27
	discovered a new reachable node %cond.false22
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %cleanup
	discovered a new reachable node %if.end
	discovered a new reachable node %gsm_div_label0
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then7
	discovered a new reachable node %if.end8
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %Autocorrelation_label0
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then5
	discovered a new reachable node %if.end10
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then17
	discovered a new reachable node %VITIS_LOOP_64_1
	discovered a new reachable node %for.cond18
	discovered a new reachable node %for.body20
	discovered a new reachable node %for.inc29
	discovered a new reachable node %for.end31
	discovered a new reachable node %if.end32
	discovered a new reachable node %VITIS_LOOP_76_2
	discovered a new reachable node %for.cond33
	discovered a new reachable node %for.body35
	discovered a new reachable node %for.inc38
	discovered a new reachable node %for.end39
	discovered a new reachable node %VITIS_LOOP_124_3
	discovered a new reachable node %for.cond260
	discovered a new reachable node %for.body262
	discovered a new reachable node %for.inc318
	discovered a new reachable node %for.end320
	discovered a new reachable node %VITIS_LOOP_137_4
	discovered a new reachable node %for.cond321
	discovered a new reachable node %for.body323
	discovered a new reachable node %for.inc327
	discovered a new reachable node %for.end329
	discovered a new reachable node %if.then332
	discovered a new reachable node %VITIS_LOOP_143_5
	discovered a new reachable node %for.cond333
	discovered a new reachable node %for.body335
	discovered a new reachable node %for.inc341
	discovered a new reachable node %for.end343
	discovered a new reachable node %if.end344
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %Reflection_coefficients_label0
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %cleanup
	discovered a new reachable node %cleanup.cont
	discovered a new reachable node %if.end
	discovered a new reachable node %Reflection_coefficients_label1
	discovered a new reachable node %for.cond3
	discovered a new reachable node %for.body5
	discovered a new reachable node %for.inc10
	discovered a new reachable node %for.end11
	discovered a new reachable node %Reflection_coefficients_label2
	discovered a new reachable node %for.cond12
	discovered a new reachable node %for.body14
	discovered a new reachable node %for.inc19
	discovered a new reachable node %for.end21
	discovered a new reachable node %Reflection_coefficients_label3
	discovered a new reachable node %for.cond22
	discovered a new reachable node %for.body24
	discovered a new reachable node %for.inc29
	discovered a new reachable node %for.end31
	discovered a new reachable node %Reflection_coefficients_label4
	discovered a new reachable node %for.cond32
	discovered a new reachable node %for.body34
	discovered a new reachable node %if.then41
	discovered a new reachable node %Reflection_coefficients_label6
	discovered a new reachable node %for.cond42
	discovered a new reachable node %for.body44
	discovered a new reachable node %for.inc46
	discovered a new reachable node %for.end48
	discovered a new reachable node %if.end49
	discovered a new reachable node %if.then55
	discovered a new reachable node %if.end58
	discovered a new reachable node %if.then60
	discovered a new reachable node %if.end61
	discovered a new reachable node %Reflection_coefficients_label5
	discovered a new reachable node %for.cond67
	discovered a new reachable node %for.body70
	discovered a new reachable node %for.inc88
	discovered a new reachable node %for.end90
	discovered a new reachable node %for.inc91
	discovered a new reachable node %for.end94
	discovered a new reachable node %entry
	discovered a new reachable node %VITIS_LOOP_237_1
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end15
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %for.inc
	discovered a new reachable node %cond.false
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then6
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else9
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end12
	discovered a new reachable node %cond.true24
	discovered a new reachable node %cond.end35
	discovered a new reachable node %cond.true48
	discovered a new reachable node %cond.end59
	discovered a new reachable node %cond.true72
	discovered a new reachable node %cond.end83
	discovered a new reachable node %cond.true96
	discovered a new reachable node %cond.end107
	discovered a new reachable node %cond.true120
	discovered a new reachable node %cond.end131
	discovered a new reachable node %cond.true144
	discovered a new reachable node %cond.end155
	discovered a new reachable node %cond.true168
	discovered a new reachable node %cond.end179
	discovered a new reachable node %cond.false169
	discovered a new reachable node %cond.true173
	discovered a new reachable node %cond.end177
	discovered a new reachable node %cond.false174
	discovered a new reachable node %cond.false145
	discovered a new reachable node %cond.true149
	discovered a new reachable node %cond.end153
	discovered a new reachable node %cond.false150
	discovered a new reachable node %cond.false121
	discovered a new reachable node %cond.true125
	discovered a new reachable node %cond.end129
	discovered a new reachable node %cond.false126
	discovered a new reachable node %cond.false97
	discovered a new reachable node %cond.true101
	discovered a new reachable node %cond.end105
	discovered a new reachable node %cond.false102
	discovered a new reachable node %cond.false73
	discovered a new reachable node %cond.true77
	discovered a new reachable node %cond.end81
	discovered a new reachable node %cond.false78
	discovered a new reachable node %cond.false49
	discovered a new reachable node %cond.true53
	discovered a new reachable node %cond.end57
	discovered a new reachable node %cond.false54
	discovered a new reachable node %cond.false25
	discovered a new reachable node %cond.true29
	discovered a new reachable node %cond.end33
	discovered a new reachable node %cond.false30
	discovered a new reachable node %cond.false
	discovered a new reachable node %cond.true9
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false10
gabriel@H410M-H-V3:~/Documents/RAISE/dataset-filtered/GSM/solution1/IRs$ 

